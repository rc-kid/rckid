    TEST(gbcemu, opcode_cb_ba) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB BA 0000
        gbc.setState(0xec78, 0xae0e, 0xd380, 0xdbd1, 0x19f2, 0x6385, 0x0, 0x0);
        gbc.writeMem(0xec78, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xae0e, gbc.sp());
        EXPECT(0xec7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec78));
        EXPECT(0xba, gbc.readMem(0xec79));
        // CB BA 0001
        gbc.setState(0x3d92, 0xf75f, 0x6720, 0x9c69, 0xfa22, 0xbac7, 0x1, 0x1);
        gbc.writeMem(0x3d92, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf75f, gbc.sp());
        EXPECT(0x3d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0002
        gbc.setState(0x598d, 0xcd99, 0xce90, 0xa0f7, 0x321e, 0x1cab, 0x0, 0x0);
        gbc.writeMem(0x598d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcd99, gbc.sp());
        EXPECT(0x598f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0003
        gbc.setState(0x1715, 0x2dac, 0xb1f0, 0x2ec4, 0x6bef, 0xd5ce, 0x0, 0x1);
        gbc.writeMem(0x1715, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2dac, gbc.sp());
        EXPECT(0x1717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0004
        gbc.setState(0x3c33, 0x7929, 0x7400, 0x6782, 0x9491, 0x7940, 0x1, 0x0);
        gbc.writeMem(0x3c33, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7929, gbc.sp());
        EXPECT(0x3c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0005
        gbc.setState(0x2537, 0xa9b7, 0x65d0, 0xddf6, 0xad8e, 0xe85c, 0x1, 0x1);
        gbc.writeMem(0x2537, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa9b7, gbc.sp());
        EXPECT(0x2539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0006
        gbc.setState(0x17a8, 0x1163, 0xfee0, 0xaef8, 0x8dcb, 0xd133, 0x1, 0x0);
        gbc.writeMem(0x17a8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1163, gbc.sp());
        EXPECT(0x17aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0007
        gbc.setState(0x9c6e, 0x554d, 0xf60, 0x1439, 0xce65, 0xc0ce, 0x0, 0x1);
        gbc.writeMem(0x9c6e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x554d, gbc.sp());
        EXPECT(0x9c70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6e));
        EXPECT(0xba, gbc.readMem(0x9c6f));
        // CB BA 0008
        gbc.setState(0xb9f8, 0x6b35, 0x2a90, 0x9f38, 0x9ca1, 0x87f3, 0x0, 0x1);
        gbc.writeMem(0xb9f8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6b35, gbc.sp());
        EXPECT(0xb9fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f8));
        EXPECT(0xba, gbc.readMem(0xb9f9));
        // CB BA 0009
        gbc.setState(0x85ec, 0x8141, 0x91e0, 0x5206, 0x30eb, 0xb22, 0x0, 0x0);
        gbc.writeMem(0x85ec, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8141, gbc.sp());
        EXPECT(0x85ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ec));
        EXPECT(0xba, gbc.readMem(0x85ed));
        // CB BA 000A
        gbc.setState(0x6876, 0xbb28, 0x9760, 0x5d6a, 0x631d, 0xba37, 0x0, 0x0);
        gbc.writeMem(0x6876, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbb28, gbc.sp());
        EXPECT(0x6878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 000B
        gbc.setState(0x66ec, 0xd648, 0x1df0, 0x631e, 0x2a, 0xe375, 0x1, 0x1);
        gbc.writeMem(0x66ec, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd648, gbc.sp());
        EXPECT(0x66ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 000C
        gbc.setState(0xd94b, 0x338c, 0x2570, 0xc2b, 0x1876, 0xd464, 0x1, 0x0);
        gbc.writeMem(0xd94b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x338c, gbc.sp());
        EXPECT(0xd94d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94b));
        EXPECT(0xba, gbc.readMem(0xd94c));
        // CB BA 000D
        gbc.setState(0x39f, 0x1346, 0x15b0, 0x7829, 0x36b5, 0x4dd1, 0x1, 0x0);
        gbc.writeMem(0x39f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1346, gbc.sp());
        EXPECT(0x3a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 000E
        gbc.setState(0xb149, 0x689f, 0xbd80, 0x7f4b, 0xc41, 0x75e0, 0x0, 0x0);
        gbc.writeMem(0xb149, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x689f, gbc.sp());
        EXPECT(0xb14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb149));
        EXPECT(0xba, gbc.readMem(0xb14a));
        // CB BA 000F
        gbc.setState(0x4c56, 0xda25, 0xc9d0, 0x87c2, 0xcbe1, 0xee57, 0x0, 0x0);
        gbc.writeMem(0x4c56, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xda25, gbc.sp());
        EXPECT(0x4c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0010
        gbc.setState(0x5c93, 0x72ad, 0x99d0, 0x46ae, 0x6fd2, 0x9c5f, 0x0, 0x1);
        gbc.writeMem(0x5c93, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x72ad, gbc.sp());
        EXPECT(0x5c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0011
        gbc.setState(0xcbdc, 0x198c, 0xed80, 0xd050, 0x85c9, 0x7352, 0x1, 0x1);
        gbc.writeMem(0xcbdc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x198c, gbc.sp());
        EXPECT(0xcbde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbdc));
        EXPECT(0xba, gbc.readMem(0xcbdd));
        // CB BA 0012
        gbc.setState(0x1f43, 0x2edb, 0x5bd0, 0xadea, 0xc8e2, 0x56f7, 0x1, 0x1);
        gbc.writeMem(0x1f43, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2edb, gbc.sp());
        EXPECT(0x1f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0013
        gbc.setState(0x1c9f, 0x3807, 0x2920, 0x1030, 0xb2c3, 0x9536, 0x0, 0x1);
        gbc.writeMem(0x1c9f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3807, gbc.sp());
        EXPECT(0x1ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0014
        gbc.setState(0xef0a, 0x1f64, 0x5130, 0xbc51, 0xc4a2, 0x64f7, 0x1, 0x0);
        gbc.writeMem(0xef0a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1f64, gbc.sp());
        EXPECT(0xef0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef0a));
        EXPECT(0xba, gbc.readMem(0xef0b));
        // CB BA 0015
        gbc.setState(0x2ee7, 0x114, 0x1f80, 0xed90, 0xd5f9, 0xc1bf, 0x1, 0x0);
        gbc.writeMem(0x2ee7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x114, gbc.sp());
        EXPECT(0x2ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0016
        gbc.setState(0x897c, 0x723d, 0xff60, 0xabe, 0x8d27, 0x721e, 0x1, 0x0);
        gbc.writeMem(0x897c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x723d, gbc.sp());
        EXPECT(0x897e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x897c));
        EXPECT(0xba, gbc.readMem(0x897d));
        // CB BA 0017
        gbc.setState(0x7dba, 0xb1d, 0x8210, 0x2697, 0x6cc7, 0x5da2, 0x0, 0x0);
        gbc.writeMem(0x7dba, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb1d, gbc.sp());
        EXPECT(0x7dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0018
        gbc.setState(0x7e1f, 0x84d6, 0x8330, 0x50f3, 0x95b7, 0x9103, 0x1, 0x1);
        gbc.writeMem(0x7e1f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x84d6, gbc.sp());
        EXPECT(0x7e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0019
        gbc.setState(0x532b, 0x9704, 0xf880, 0x8280, 0xe486, 0x3072, 0x1, 0x0);
        gbc.writeMem(0x532b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9704, gbc.sp());
        EXPECT(0x532d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 001A
        gbc.setState(0x6add, 0xfe93, 0x3ff0, 0xea47, 0x9dfe, 0xd2c4, 0x1, 0x0);
        gbc.writeMem(0x6add, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfe93, gbc.sp());
        EXPECT(0x6adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 001E
        gbc.setState(0xf03, 0xf997, 0xc730, 0x5688, 0x17b6, 0xc7dc, 0x0, 0x0);
        gbc.writeMem(0xf03, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf997, gbc.sp());
        EXPECT(0xf05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 001F
        gbc.setState(0x2665, 0xc27d, 0x13e0, 0x191, 0xe764, 0x8945, 0x0, 0x1);
        gbc.writeMem(0x2665, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc27d, gbc.sp());
        EXPECT(0x2667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0020
        gbc.setState(0xadbc, 0x8203, 0x5a60, 0x9d41, 0xb35c, 0x49c4, 0x1, 0x1);
        gbc.writeMem(0xadbc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8203, gbc.sp());
        EXPECT(0xadbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbc));
        EXPECT(0xba, gbc.readMem(0xadbd));
        // CB BA 0021
        gbc.setState(0xb60b, 0xcbac, 0x4400, 0xa6eb, 0x5d11, 0x4988, 0x0, 0x0);
        gbc.writeMem(0xb60b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcbac, gbc.sp());
        EXPECT(0xb60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60b));
        EXPECT(0xba, gbc.readMem(0xb60c));
        // CB BA 0022
        gbc.setState(0xde5c, 0x2073, 0x5dd0, 0x69c3, 0x7219, 0xd021, 0x1, 0x0);
        gbc.writeMem(0xde5c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2073, gbc.sp());
        EXPECT(0xde5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde5c));
        EXPECT(0xba, gbc.readMem(0xde5d));
        // CB BA 0023
        gbc.setState(0x182, 0xd522, 0x1050, 0x86a3, 0x81d8, 0x6837, 0x0, 0x0);
        gbc.writeMem(0x182, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd522, gbc.sp());
        EXPECT(0x184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0025
        gbc.setState(0x45c5, 0x419a, 0x6860, 0xa9d1, 0x1faf, 0x8cd9, 0x1, 0x1);
        gbc.writeMem(0x45c5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x419a, gbc.sp());
        EXPECT(0x45c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0026
        gbc.setState(0xd389, 0x94a6, 0x8590, 0x7c09, 0x5da5, 0x3083, 0x1, 0x0);
        gbc.writeMem(0xd389, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x94a6, gbc.sp());
        EXPECT(0xd38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd389));
        EXPECT(0xba, gbc.readMem(0xd38a));
        // CB BA 0027
        gbc.setState(0x7d3b, 0xc2a0, 0xfa80, 0xf9f5, 0x10a7, 0x8aad, 0x1, 0x0);
        gbc.writeMem(0x7d3b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc2a0, gbc.sp());
        EXPECT(0x7d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0029
        gbc.setState(0x37c1, 0x3fbb, 0x12d0, 0x599a, 0xd247, 0x57f8, 0x1, 0x0);
        gbc.writeMem(0x37c1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3fbb, gbc.sp());
        EXPECT(0x37c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 002A
        gbc.setState(0xb3e4, 0x76db, 0x3f10, 0x1421, 0x9875, 0xbe3c, 0x0, 0x0);
        gbc.writeMem(0xb3e4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x76db, gbc.sp());
        EXPECT(0xb3e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e4));
        EXPECT(0xba, gbc.readMem(0xb3e5));
        // CB BA 002B
        gbc.setState(0xba50, 0x1c3e, 0xe700, 0x81d3, 0xf5bd, 0x60cb, 0x0, 0x0);
        gbc.writeMem(0xba50, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1c3e, gbc.sp());
        EXPECT(0xba52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba50));
        EXPECT(0xba, gbc.readMem(0xba51));
        // CB BA 002C
        gbc.setState(0xe6ab, 0xd66b, 0xf500, 0x40db, 0x8777, 0x4c1, 0x1, 0x1);
        gbc.writeMem(0xe6ab, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd66b, gbc.sp());
        EXPECT(0xe6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ab));
        EXPECT(0xba, gbc.readMem(0xe6ac));
        // CB BA 002D
        gbc.setState(0x3506, 0x42d6, 0x5720, 0x9b3b, 0x5e00, 0x2410, 0x1, 0x0);
        gbc.writeMem(0x3506, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x42d6, gbc.sp());
        EXPECT(0x3508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 002E
        gbc.setState(0xe5c5, 0xbf0, 0x60c0, 0xee98, 0xf809, 0xb40b, 0x0, 0x0);
        gbc.writeMem(0xe5c5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbf0, gbc.sp());
        EXPECT(0xe5c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c5));
        EXPECT(0xba, gbc.readMem(0xe5c6));
        // CB BA 002F
        gbc.setState(0xb319, 0x9a38, 0x43a0, 0x2e1c, 0xb979, 0x9959, 0x1, 0x1);
        gbc.writeMem(0xb319, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9a38, gbc.sp());
        EXPECT(0xb31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb319));
        EXPECT(0xba, gbc.readMem(0xb31a));
        // CB BA 0030
        gbc.setState(0x545b, 0x76e6, 0x3d40, 0x3216, 0x24cc, 0x9285, 0x0, 0x1);
        gbc.writeMem(0x545b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x76e6, gbc.sp());
        EXPECT(0x545d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0031
        gbc.setState(0x4da2, 0xf18e, 0x89e0, 0x6e76, 0x82cb, 0x47f, 0x1, 0x0);
        gbc.writeMem(0x4da2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf18e, gbc.sp());
        EXPECT(0x4da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0032
        gbc.setState(0x91d0, 0x3356, 0x3160, 0xedd4, 0x9828, 0x5fe0, 0x0, 0x0);
        gbc.writeMem(0x91d0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3356, gbc.sp());
        EXPECT(0x91d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d0));
        EXPECT(0xba, gbc.readMem(0x91d1));
        // CB BA 0033
        gbc.setState(0xc37e, 0xd58f, 0x81e0, 0xffea, 0x6b22, 0xab0b, 0x1, 0x0);
        gbc.writeMem(0xc37e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd58f, gbc.sp());
        EXPECT(0xc380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc37e));
        EXPECT(0xba, gbc.readMem(0xc37f));
        // CB BA 0034
        gbc.setState(0x84b, 0x1cd8, 0x6310, 0xc7a9, 0x987b, 0x21e, 0x0, 0x1);
        gbc.writeMem(0x84b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1cd8, gbc.sp());
        EXPECT(0x84d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0036
        gbc.setState(0xdc30, 0xf386, 0xcba0, 0xc617, 0x4806, 0xebe5, 0x0, 0x1);
        gbc.writeMem(0xdc30, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf386, gbc.sp());
        EXPECT(0xdc32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc30));
        EXPECT(0xba, gbc.readMem(0xdc31));
        // CB BA 0037
        gbc.setState(0x523a, 0x370f, 0xaf80, 0xb0e2, 0xb5e6, 0x9f05, 0x0, 0x0);
        gbc.writeMem(0x523a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x370f, gbc.sp());
        EXPECT(0x523c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0038
        gbc.setState(0x4837, 0x3558, 0x4eb0, 0x8961, 0x7a66, 0x5821, 0x1, 0x0);
        gbc.writeMem(0x4837, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3558, gbc.sp());
        EXPECT(0x4839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0039
        gbc.setState(0xdb90, 0x4298, 0xb70, 0x34db, 0xf9c9, 0x52aa, 0x0, 0x1);
        gbc.writeMem(0xdb90, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4298, gbc.sp());
        EXPECT(0xdb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb90));
        EXPECT(0xba, gbc.readMem(0xdb91));
        // CB BA 003A
        gbc.setState(0x76c7, 0x6db5, 0xef00, 0xbe85, 0x9a50, 0xdff1, 0x1, 0x1);
        gbc.writeMem(0x76c7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6db5, gbc.sp());
        EXPECT(0x76c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 003B
        gbc.setState(0x4442, 0xf1d6, 0x5d70, 0x897d, 0xe4ac, 0x8dd8, 0x0, 0x1);
        gbc.writeMem(0x4442, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf1d6, gbc.sp());
        EXPECT(0x4444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 003C
        gbc.setState(0xa216, 0x8476, 0x3360, 0xd21a, 0x9bb5, 0xd46a, 0x0, 0x1);
        gbc.writeMem(0xa216, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8476, gbc.sp());
        EXPECT(0xa218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa216));
        EXPECT(0xba, gbc.readMem(0xa217));
        // CB BA 003D
        gbc.setState(0x911a, 0x80f3, 0xd6c0, 0x9cf8, 0x934, 0x519f, 0x0, 0x1);
        gbc.writeMem(0x911a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x80f3, gbc.sp());
        EXPECT(0x911c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x911a));
        EXPECT(0xba, gbc.readMem(0x911b));
        // CB BA 003F
        gbc.setState(0x63f9, 0xa000, 0xc750, 0xaa3b, 0xbd42, 0x5639, 0x1, 0x0);
        gbc.writeMem(0x63f9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa000, gbc.sp());
        EXPECT(0x63fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0040
        gbc.setState(0x32b4, 0x1d23, 0x9990, 0x2a47, 0xa0de, 0x88f1, 0x0, 0x0);
        gbc.writeMem(0x32b4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1d23, gbc.sp());
        EXPECT(0x32b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0041
        gbc.setState(0xd338, 0xca31, 0x6b0, 0xf96c, 0xf35a, 0xdcc3, 0x1, 0x1);
        gbc.writeMem(0xd338, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xca31, gbc.sp());
        EXPECT(0xd33a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd338));
        EXPECT(0xba, gbc.readMem(0xd339));
        // CB BA 0042
        gbc.setState(0x2b18, 0x3ed0, 0x8ec0, 0x7712, 0x627c, 0x4d2b, 0x0, 0x0);
        gbc.writeMem(0x2b18, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3ed0, gbc.sp());
        EXPECT(0x2b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0043
        gbc.setState(0x6976, 0xce2b, 0xc20, 0x1963, 0x393a, 0x4fa, 0x1, 0x0);
        gbc.writeMem(0x6976, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xce2b, gbc.sp());
        EXPECT(0x6978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0044
        gbc.setState(0xa004, 0x7681, 0x5c60, 0x1de7, 0xc9db, 0xf43d, 0x1, 0x1);
        gbc.writeMem(0xa004, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7681, gbc.sp());
        EXPECT(0xa006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa004));
        EXPECT(0xba, gbc.readMem(0xa005));
        // CB BA 0045
        gbc.setState(0x1acc, 0xab9a, 0xd2f0, 0x9136, 0x1c1c, 0xbd02, 0x1, 0x0);
        gbc.writeMem(0x1acc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xab9a, gbc.sp());
        EXPECT(0x1ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0046
        gbc.setState(0x8c07, 0x1e63, 0xdc50, 0x3245, 0xc223, 0xc3cf, 0x1, 0x1);
        gbc.writeMem(0x8c07, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1e63, gbc.sp());
        EXPECT(0x8c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c07));
        EXPECT(0xba, gbc.readMem(0x8c08));
        // CB BA 0047
        gbc.setState(0x7df7, 0x5a71, 0xdf0, 0x7bf4, 0x5f36, 0x18dc, 0x0, 0x1);
        gbc.writeMem(0x7df7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5a71, gbc.sp());
        EXPECT(0x7df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0049
        gbc.setState(0xdfa6, 0xfd8a, 0x4650, 0xf368, 0x940a, 0xd1f5, 0x0, 0x1);
        gbc.writeMem(0xdfa6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfd8a, gbc.sp());
        EXPECT(0xdfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa6));
        EXPECT(0xba, gbc.readMem(0xdfa7));
        // CB BA 004A
        gbc.setState(0x888b, 0x7ff4, 0x46e0, 0x80ff, 0x9fa3, 0xfeac, 0x0, 0x1);
        gbc.writeMem(0x888b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7ff4, gbc.sp());
        EXPECT(0x888d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888b));
        EXPECT(0xba, gbc.readMem(0x888c));
        // CB BA 004C
        gbc.setState(0x1ce5, 0xefc2, 0x92f0, 0x93c1, 0xc54e, 0xdacd, 0x0, 0x1);
        gbc.writeMem(0x1ce5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xefc2, gbc.sp());
        EXPECT(0x1ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 004D
        gbc.setState(0xd0a8, 0xc270, 0x49c0, 0xa49c, 0x927c, 0x1e03, 0x0, 0x1);
        gbc.writeMem(0xd0a8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc270, gbc.sp());
        EXPECT(0xd0aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a8));
        EXPECT(0xba, gbc.readMem(0xd0a9));
        // CB BA 004E
        gbc.setState(0x69e9, 0x11e4, 0xf600, 0x4f7b, 0xe4ad, 0x39db, 0x0, 0x0);
        gbc.writeMem(0x69e9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x11e4, gbc.sp());
        EXPECT(0x69eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 004F
        gbc.setState(0xfe9, 0x5f87, 0x89c0, 0xb41b, 0x9917, 0xdd2e, 0x1, 0x1);
        gbc.writeMem(0xfe9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5f87, gbc.sp());
        EXPECT(0xfeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0050
        gbc.setState(0xdfd3, 0x9264, 0x8070, 0xe195, 0x7ee3, 0xf855, 0x1, 0x1);
        gbc.writeMem(0xdfd3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9264, gbc.sp());
        EXPECT(0xdfd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd3));
        EXPECT(0xba, gbc.readMem(0xdfd4));
        // CB BA 0051
        gbc.setState(0xda01, 0x51f8, 0xf550, 0x24e5, 0x950, 0x64b1, 0x0, 0x1);
        gbc.writeMem(0xda01, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x51f8, gbc.sp());
        EXPECT(0xda03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda01));
        EXPECT(0xba, gbc.readMem(0xda02));
        // CB BA 0052
        gbc.setState(0x8327, 0xcdd5, 0x65b0, 0x921b, 0x2431, 0xf5f5, 0x0, 0x0);
        gbc.writeMem(0x8327, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcdd5, gbc.sp());
        EXPECT(0x8329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8327));
        EXPECT(0xba, gbc.readMem(0x8328));
        // CB BA 0053
        gbc.setState(0x17d, 0x4981, 0x95c0, 0xf37f, 0x63f8, 0x5559, 0x0, 0x0);
        gbc.writeMem(0x17d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4981, gbc.sp());
        EXPECT(0x17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0054
        gbc.setState(0xdcfc, 0x1375, 0x41e0, 0x7933, 0x7dc7, 0xd907, 0x1, 0x0);
        gbc.writeMem(0xdcfc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1375, gbc.sp());
        EXPECT(0xdcfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcfc));
        EXPECT(0xba, gbc.readMem(0xdcfd));
        // CB BA 0055
        gbc.setState(0x336f, 0xdda9, 0x34c0, 0x6f82, 0xd992, 0x6bbe, 0x1, 0x0);
        gbc.writeMem(0x336f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdda9, gbc.sp());
        EXPECT(0x3371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0056
        gbc.setState(0x5645, 0x278a, 0x4080, 0x688e, 0x8137, 0xbc24, 0x1, 0x1);
        gbc.writeMem(0x5645, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x278a, gbc.sp());
        EXPECT(0x5647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0057
        gbc.setState(0xb656, 0x8227, 0xa050, 0x935f, 0x55, 0x1fc7, 0x0, 0x1);
        gbc.writeMem(0xb656, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8227, gbc.sp());
        EXPECT(0xb658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb656));
        EXPECT(0xba, gbc.readMem(0xb657));
        // CB BA 0058
        gbc.setState(0x3be8, 0x6d55, 0x23a0, 0x919a, 0xcf0b, 0xd440, 0x0, 0x0);
        gbc.writeMem(0x3be8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6d55, gbc.sp());
        EXPECT(0x3bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0059
        gbc.setState(0xe350, 0x1c55, 0x4090, 0x5f83, 0x6bb1, 0xdc3b, 0x1, 0x0);
        gbc.writeMem(0xe350, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1c55, gbc.sp());
        EXPECT(0xe352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe350));
        EXPECT(0xba, gbc.readMem(0xe351));
        // CB BA 005A
        gbc.setState(0xa55, 0x1a02, 0xfbd0, 0xfb05, 0x87c0, 0xcd14, 0x0, 0x0);
        gbc.writeMem(0xa55, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1a02, gbc.sp());
        EXPECT(0xa57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 005B
        gbc.setState(0x733b, 0x5b3d, 0xfcf0, 0xa86f, 0x1caa, 0x24d0, 0x1, 0x1);
        gbc.writeMem(0x733b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5b3d, gbc.sp());
        EXPECT(0x733d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 005C
        gbc.setState(0xaa95, 0x58c4, 0xf80, 0xa786, 0xde28, 0x48b5, 0x0, 0x1);
        gbc.writeMem(0xaa95, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x58c4, gbc.sp());
        EXPECT(0xaa97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa95));
        EXPECT(0xba, gbc.readMem(0xaa96));
        // CB BA 005D
        gbc.setState(0xd8fc, 0xa84a, 0x4fd0, 0xdd32, 0xfc88, 0x57c6, 0x0, 0x0);
        gbc.writeMem(0xd8fc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa84a, gbc.sp());
        EXPECT(0xd8fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8fc));
        EXPECT(0xba, gbc.readMem(0xd8fd));
        // CB BA 005E
        gbc.setState(0x70ee, 0x3b38, 0x4df0, 0xe965, 0xbc30, 0x695d, 0x1, 0x0);
        gbc.writeMem(0x70ee, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3b38, gbc.sp());
        EXPECT(0x70f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 005F
        gbc.setState(0x6622, 0x92cb, 0x3fb0, 0xda77, 0xd8b8, 0x62d1, 0x1, 0x1);
        gbc.writeMem(0x6622, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x92cb, gbc.sp());
        EXPECT(0x6624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0060
        gbc.setState(0x19b4, 0xf16d, 0xddd0, 0x7af3, 0x164c, 0xa4d9, 0x0, 0x1);
        gbc.writeMem(0x19b4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf16d, gbc.sp());
        EXPECT(0x19b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0061
        gbc.setState(0x1035, 0x2a99, 0xfba0, 0x5e58, 0x76c1, 0x71f1, 0x1, 0x0);
        gbc.writeMem(0x1035, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2a99, gbc.sp());
        EXPECT(0x1037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0062
        gbc.setState(0xaf37, 0x6b60, 0x8de0, 0xa5fe, 0x259, 0x7efb, 0x1, 0x1);
        gbc.writeMem(0xaf37, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6b60, gbc.sp());
        EXPECT(0xaf39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf37));
        EXPECT(0xba, gbc.readMem(0xaf38));
        // CB BA 0063
        gbc.setState(0xbe8e, 0x8151, 0x3d50, 0xe60a, 0x7677, 0xa20e, 0x0, 0x1);
        gbc.writeMem(0xbe8e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8151, gbc.sp());
        EXPECT(0xbe90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8e));
        EXPECT(0xba, gbc.readMem(0xbe8f));
        // CB BA 0064
        gbc.setState(0x470a, 0xdf5b, 0xb3e0, 0x3a86, 0xfede, 0x45b5, 0x0, 0x1);
        gbc.writeMem(0x470a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xdf5b, gbc.sp());
        EXPECT(0x470c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0066
        gbc.setState(0x7df9, 0xf938, 0x3250, 0x3c54, 0x8db5, 0x74d0, 0x1, 0x0);
        gbc.writeMem(0x7df9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf938, gbc.sp());
        EXPECT(0x7dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0067
        gbc.setState(0x25a7, 0x1358, 0x2400, 0xda9b, 0xd108, 0xeca6, 0x0, 0x1);
        gbc.writeMem(0x25a7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1358, gbc.sp());
        EXPECT(0x25a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0068
        gbc.setState(0x1bc7, 0xc6c3, 0xf520, 0x9655, 0x247d, 0x7e20, 0x0, 0x1);
        gbc.writeMem(0x1bc7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc6c3, gbc.sp());
        EXPECT(0x1bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0069
        gbc.setState(0x9232, 0x405d, 0xfaa0, 0x50aa, 0x6a1, 0x1250, 0x0, 0x0);
        gbc.writeMem(0x9232, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x405d, gbc.sp());
        EXPECT(0x9234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9232));
        EXPECT(0xba, gbc.readMem(0x9233));
        // CB BA 006A
        gbc.setState(0x1bf1, 0x9b7e, 0x9f60, 0xe9a4, 0x3f90, 0x9dee, 0x0, 0x0);
        gbc.writeMem(0x1bf1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9b7e, gbc.sp());
        EXPECT(0x1bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 006B
        gbc.setState(0x3520, 0x96bd, 0xf720, 0x37f1, 0x7b69, 0xaa7d, 0x1, 0x0);
        gbc.writeMem(0x3520, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x96bd, gbc.sp());
        EXPECT(0x3522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 006C
        gbc.setState(0xdb0c, 0xd55d, 0x8af0, 0xd7b9, 0xd9e2, 0xb030, 0x1, 0x0);
        gbc.writeMem(0xdb0c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd55d, gbc.sp());
        EXPECT(0xdb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0c));
        EXPECT(0xba, gbc.readMem(0xdb0d));
        // CB BA 006D
        gbc.setState(0xe1da, 0xb64a, 0xad00, 0xcf0c, 0xa254, 0x41f8, 0x0, 0x1);
        gbc.writeMem(0xe1da, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb64a, gbc.sp());
        EXPECT(0xe1dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1da));
        EXPECT(0xba, gbc.readMem(0xe1db));
        // CB BA 006E
        gbc.setState(0x5621, 0x228, 0xae40, 0x263f, 0x2048, 0x14b2, 0x0, 0x1);
        gbc.writeMem(0x5621, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x228, gbc.sp());
        EXPECT(0x5623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 006F
        gbc.setState(0x2c73, 0xe4f6, 0x99f0, 0xb4b9, 0xe558, 0xdfe0, 0x0, 0x0);
        gbc.writeMem(0x2c73, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe4f6, gbc.sp());
        EXPECT(0x2c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0071
        gbc.setState(0xe672, 0x5f05, 0x8640, 0xfb9c, 0x2be0, 0x1c19, 0x0, 0x1);
        gbc.writeMem(0xe672, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5f05, gbc.sp());
        EXPECT(0xe674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe672));
        EXPECT(0xba, gbc.readMem(0xe673));
        // CB BA 0072
        gbc.setState(0x31f6, 0x2e60, 0x8b30, 0x42bf, 0x8e39, 0xd543, 0x1, 0x1);
        gbc.writeMem(0x31f6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2e60, gbc.sp());
        EXPECT(0x31f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0073
        gbc.setState(0xceba, 0xbed5, 0xf40, 0x615d, 0x764e, 0x5c48, 0x1, 0x0);
        gbc.writeMem(0xceba, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbed5, gbc.sp());
        EXPECT(0xcebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceba));
        EXPECT(0xba, gbc.readMem(0xcebb));
        // CB BA 0074
        gbc.setState(0x9177, 0x99ef, 0xc500, 0x88b1, 0xb8f7, 0xc7f1, 0x1, 0x1);
        gbc.writeMem(0x9177, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x99ef, gbc.sp());
        EXPECT(0x9179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9177));
        EXPECT(0xba, gbc.readMem(0x9178));
        // CB BA 0075
        gbc.setState(0x4a58, 0x8134, 0x3a30, 0x325a, 0x8ce9, 0xdae7, 0x0, 0x0);
        gbc.writeMem(0x4a58, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8134, gbc.sp());
        EXPECT(0x4a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0076
        gbc.setState(0xb1ad, 0x7b9d, 0xbff0, 0xc4fa, 0x3e42, 0x7b33, 0x1, 0x1);
        gbc.writeMem(0xb1ad, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7b9d, gbc.sp());
        EXPECT(0xb1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ad));
        EXPECT(0xba, gbc.readMem(0xb1ae));
        // CB BA 0077
        gbc.setState(0xb556, 0x7b8a, 0x4270, 0x5b2a, 0xa581, 0xab80, 0x0, 0x1);
        gbc.writeMem(0xb556, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7b8a, gbc.sp());
        EXPECT(0xb558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb556));
        EXPECT(0xba, gbc.readMem(0xb557));
        // CB BA 0078
        gbc.setState(0x54eb, 0xe92e, 0x8870, 0x825e, 0x73d8, 0x6400, 0x0, 0x1);
        gbc.writeMem(0x54eb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe92e, gbc.sp());
        EXPECT(0x54ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0079
        gbc.setState(0xcfb1, 0xfd22, 0xc480, 0xf221, 0x8c92, 0xb112, 0x0, 0x0);
        gbc.writeMem(0xcfb1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfd22, gbc.sp());
        EXPECT(0xcfb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb1));
        EXPECT(0xba, gbc.readMem(0xcfb2));
        // CB BA 007A
        gbc.setState(0x92e0, 0xc1cc, 0xc2b0, 0x14c6, 0x9dc1, 0xd4f6, 0x1, 0x1);
        gbc.writeMem(0x92e0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc1cc, gbc.sp());
        EXPECT(0x92e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e0));
        EXPECT(0xba, gbc.readMem(0x92e1));
        // CB BA 007B
        gbc.setState(0x3f37, 0x18f5, 0xdde0, 0x76df, 0x66d, 0xc8e, 0x1, 0x1);
        gbc.writeMem(0x3f37, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x18f5, gbc.sp());
        EXPECT(0x3f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 007C
        gbc.setState(0x3a38, 0x54a3, 0x8170, 0xabaf, 0xeac3, 0xa306, 0x1, 0x1);
        gbc.writeMem(0x3a38, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x54a3, gbc.sp());
        EXPECT(0x3a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 007D
        gbc.setState(0xe6be, 0x741c, 0x8150, 0xd366, 0x2747, 0xb8c5, 0x1, 0x0);
        gbc.writeMem(0xe6be, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x741c, gbc.sp());
        EXPECT(0xe6c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6be));
        EXPECT(0xba, gbc.readMem(0xe6bf));
        // CB BA 007E
        gbc.setState(0x873e, 0x2dcd, 0x2da0, 0xdceb, 0xef4b, 0xf6f0, 0x0, 0x0);
        gbc.writeMem(0x873e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2dcd, gbc.sp());
        EXPECT(0x8740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x873e));
        EXPECT(0xba, gbc.readMem(0x873f));
        // CB BA 007F
        gbc.setState(0xf99, 0xd9f8, 0xf9f0, 0xb6b8, 0xe947, 0xcecb, 0x0, 0x0);
        gbc.writeMem(0xf99, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd9f8, gbc.sp());
        EXPECT(0xf9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0080
        gbc.setState(0xb788, 0xeae4, 0x75f0, 0x6af3, 0x21c2, 0x89a0, 0x1, 0x1);
        gbc.writeMem(0xb788, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xeae4, gbc.sp());
        EXPECT(0xb78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb788));
        EXPECT(0xba, gbc.readMem(0xb789));
        // CB BA 0081
        gbc.setState(0x7ff0, 0x7216, 0xa7d0, 0x4b38, 0xff8e, 0xeea7, 0x1, 0x1);
        gbc.writeMem(0x7ff0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7216, gbc.sp());
        EXPECT(0x7ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0082
        gbc.setState(0x2a33, 0xf961, 0xa660, 0x83e4, 0x1f5a, 0xfddb, 0x1, 0x0);
        gbc.writeMem(0x2a33, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf961, gbc.sp());
        EXPECT(0x2a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0083
        gbc.setState(0x1533, 0x25f1, 0x3560, 0x7bbc, 0x15ba, 0x8140, 0x1, 0x0);
        gbc.writeMem(0x1533, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x25f1, gbc.sp());
        EXPECT(0x1535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0084
        gbc.setState(0xde43, 0xa19b, 0xe840, 0x29cb, 0xdd0a, 0xb5f9, 0x1, 0x1);
        gbc.writeMem(0xde43, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa19b, gbc.sp());
        EXPECT(0xde45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde43));
        EXPECT(0xba, gbc.readMem(0xde44));
        // CB BA 0085
        gbc.setState(0xcc98, 0x8867, 0xb430, 0x1616, 0xa642, 0x7231, 0x0, 0x0);
        gbc.writeMem(0xcc98, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8867, gbc.sp());
        EXPECT(0xcc9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc98));
        EXPECT(0xba, gbc.readMem(0xcc99));
        // CB BA 0087
        gbc.setState(0x168, 0x5061, 0xdab0, 0xf98b, 0x9ee4, 0x1d3b, 0x1, 0x0);
        gbc.writeMem(0x168, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5061, gbc.sp());
        EXPECT(0x16a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0088
        gbc.setState(0x20b7, 0xd35d, 0x5230, 0x1d5c, 0xce55, 0x3010, 0x1, 0x1);
        gbc.writeMem(0x20b7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd35d, gbc.sp());
        EXPECT(0x20b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0089
        gbc.setState(0x51f, 0x7037, 0xd030, 0xb936, 0x1c2d, 0x1e4e, 0x1, 0x0);
        gbc.writeMem(0x51f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7037, gbc.sp());
        EXPECT(0x521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 008A
        gbc.setState(0x82e1, 0x8495, 0xed90, 0xd6f2, 0x1ede, 0x5f8a, 0x1, 0x0);
        gbc.writeMem(0x82e1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8495, gbc.sp());
        EXPECT(0x82e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e1));
        EXPECT(0xba, gbc.readMem(0x82e2));
        // CB BA 008B
        gbc.setState(0x8967, 0x2321, 0xfee0, 0x14cd, 0xa9ce, 0x65ee, 0x1, 0x0);
        gbc.writeMem(0x8967, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2321, gbc.sp());
        EXPECT(0x8969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8967));
        EXPECT(0xba, gbc.readMem(0x8968));
        // CB BA 008C
        gbc.setState(0xa45c, 0xa804, 0x5ff0, 0x1103, 0xf36f, 0x2c9f, 0x0, 0x1);
        gbc.writeMem(0xa45c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa804, gbc.sp());
        EXPECT(0xa45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa45c));
        EXPECT(0xba, gbc.readMem(0xa45d));
        // CB BA 008D
        gbc.setState(0xa264, 0xbb41, 0x7e30, 0x8ce9, 0x6a8a, 0x2733, 0x1, 0x1);
        gbc.writeMem(0xa264, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbb41, gbc.sp());
        EXPECT(0xa266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa264));
        EXPECT(0xba, gbc.readMem(0xa265));
        // CB BA 008E
        gbc.setState(0x3db, 0xfe82, 0x6a90, 0x6773, 0x5fdb, 0xd540, 0x1, 0x1);
        gbc.writeMem(0x3db, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfe82, gbc.sp());
        EXPECT(0x3dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 008F
        gbc.setState(0xb154, 0xbf0c, 0x4d30, 0x15e7, 0x90ba, 0x2360, 0x1, 0x1);
        gbc.writeMem(0xb154, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbf0c, gbc.sp());
        EXPECT(0xb156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb154));
        EXPECT(0xba, gbc.readMem(0xb155));
        // CB BA 0090
        gbc.setState(0x6a2, 0xf7c, 0x3a40, 0xa055, 0xda1d, 0x29a9, 0x1, 0x0);
        gbc.writeMem(0x6a2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf7c, gbc.sp());
        EXPECT(0x6a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0092
        gbc.setState(0xb789, 0xebcd, 0xdfe0, 0x9c49, 0xeef1, 0xfb78, 0x1, 0x1);
        gbc.writeMem(0xb789, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xebcd, gbc.sp());
        EXPECT(0xb78b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb789));
        EXPECT(0xba, gbc.readMem(0xb78a));
        // CB BA 0093
        gbc.setState(0x951c, 0xa874, 0x3200, 0x7641, 0xec7, 0x3cc5, 0x0, 0x0);
        gbc.writeMem(0x951c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa874, gbc.sp());
        EXPECT(0x951e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951c));
        EXPECT(0xba, gbc.readMem(0x951d));
        // CB BA 0094
        gbc.setState(0x78cb, 0x7aaf, 0x1e20, 0xab8f, 0x29ef, 0xd31e, 0x0, 0x0);
        gbc.writeMem(0x78cb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7aaf, gbc.sp());
        EXPECT(0x78cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0095
        gbc.setState(0xb399, 0xf202, 0x9540, 0x4ec6, 0x8084, 0x32de, 0x0, 0x0);
        gbc.writeMem(0xb399, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf202, gbc.sp());
        EXPECT(0xb39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb399));
        EXPECT(0xba, gbc.readMem(0xb39a));
        // CB BA 0096
        gbc.setState(0x3e18, 0xe28d, 0xff60, 0xfb14, 0x3008, 0xa71, 0x0, 0x0);
        gbc.writeMem(0x3e18, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe28d, gbc.sp());
        EXPECT(0x3e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0097
        gbc.setState(0x5d75, 0x9446, 0xe670, 0xe856, 0x294f, 0x21d4, 0x1, 0x0);
        gbc.writeMem(0x5d75, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9446, gbc.sp());
        EXPECT(0x5d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0098
        gbc.setState(0x73f4, 0x52c6, 0xe750, 0xa01b, 0xbaca, 0x518d, 0x1, 0x0);
        gbc.writeMem(0x73f4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x52c6, gbc.sp());
        EXPECT(0x73f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0099
        gbc.setState(0x6dec, 0x52a, 0x2ea0, 0x9342, 0xe110, 0x425d, 0x0, 0x0);
        gbc.writeMem(0x6dec, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x52a, gbc.sp());
        EXPECT(0x6dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 009A
        gbc.setState(0xd9d6, 0x3cf4, 0x70, 0x3f45, 0x3316, 0x8da8, 0x1, 0x0);
        gbc.writeMem(0xd9d6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3cf4, gbc.sp());
        EXPECT(0xd9d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d6));
        EXPECT(0xba, gbc.readMem(0xd9d7));
        // CB BA 009B
        gbc.setState(0xcd46, 0x1e33, 0x8e0, 0xce44, 0x76d8, 0xc2fd, 0x0, 0x1);
        gbc.writeMem(0xcd46, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1e33, gbc.sp());
        EXPECT(0xcd48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd46));
        EXPECT(0xba, gbc.readMem(0xcd47));
        // CB BA 009C
        gbc.setState(0x655f, 0x63ad, 0xea20, 0x340f, 0x9459, 0x1c09, 0x1, 0x1);
        gbc.writeMem(0x655f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x63ad, gbc.sp());
        EXPECT(0x6561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 009D
        gbc.setState(0x991d, 0xadf5, 0x1c90, 0xcbb4, 0xdb14, 0x4395, 0x1, 0x0);
        gbc.writeMem(0x991d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xadf5, gbc.sp());
        EXPECT(0x991f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991d));
        EXPECT(0xba, gbc.readMem(0x991e));
        // CB BA 009E
        gbc.setState(0x50a6, 0x56f4, 0x19e0, 0xd706, 0xe78f, 0xd7c9, 0x1, 0x0);
        gbc.writeMem(0x50a6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x56f4, gbc.sp());
        EXPECT(0x50a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 009F
        gbc.setState(0x4233, 0x450f, 0xf980, 0x6058, 0xce1f, 0x27ee, 0x0, 0x0);
        gbc.writeMem(0x4233, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x450f, gbc.sp());
        EXPECT(0x4235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00A0
        gbc.setState(0x8be4, 0xc324, 0x6100, 0xbb03, 0x53cb, 0xcbcf, 0x0, 0x0);
        gbc.writeMem(0x8be4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc324, gbc.sp());
        EXPECT(0x8be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be4));
        EXPECT(0xba, gbc.readMem(0x8be5));
        // CB BA 00A1
        gbc.setState(0x8122, 0x73ce, 0x7820, 0xd58f, 0xc841, 0x169c, 0x1, 0x0);
        gbc.writeMem(0x8122, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x73ce, gbc.sp());
        EXPECT(0x8124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8122));
        EXPECT(0xba, gbc.readMem(0x8123));
        // CB BA 00A4
        gbc.setState(0xe896, 0x3d70, 0xc3c0, 0x34a3, 0xa569, 0x865c, 0x1, 0x1);
        gbc.writeMem(0xe896, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3d70, gbc.sp());
        EXPECT(0xe898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe896));
        EXPECT(0xba, gbc.readMem(0xe897));
        // CB BA 00A5
        gbc.setState(0xa4e6, 0x7231, 0x7f00, 0xcedc, 0xdbc1, 0x4d12, 0x0, 0x1);
        gbc.writeMem(0xa4e6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7231, gbc.sp());
        EXPECT(0xa4e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e6));
        EXPECT(0xba, gbc.readMem(0xa4e7));
        // CB BA 00A6
        gbc.setState(0x379b, 0x229b, 0x4ea0, 0xaf81, 0xdeba, 0xe083, 0x0, 0x0);
        gbc.writeMem(0x379b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x229b, gbc.sp());
        EXPECT(0x379d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00A7
        gbc.setState(0xd4c6, 0xf536, 0xf4c0, 0x1346, 0xb6c3, 0xafe0, 0x1, 0x0);
        gbc.writeMem(0xd4c6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf536, gbc.sp());
        EXPECT(0xd4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c6));
        EXPECT(0xba, gbc.readMem(0xd4c7));
        // CB BA 00A8
        gbc.setState(0x176, 0x239d, 0xdaf0, 0x8ae2, 0x801b, 0x82d2, 0x0, 0x0);
        gbc.writeMem(0x176, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x239d, gbc.sp());
        EXPECT(0x178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00A9
        gbc.setState(0xb5ce, 0x49c3, 0x5eb0, 0x3e5d, 0x6896, 0x9d14, 0x0, 0x1);
        gbc.writeMem(0xb5ce, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x49c3, gbc.sp());
        EXPECT(0xb5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ce));
        EXPECT(0xba, gbc.readMem(0xb5cf));
        // CB BA 00AA
        gbc.setState(0xd1ef, 0xf65e, 0xd140, 0xfaea, 0x3ef5, 0xdaa8, 0x1, 0x0);
        gbc.writeMem(0xd1ef, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf65e, gbc.sp());
        EXPECT(0xd1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ef));
        EXPECT(0xba, gbc.readMem(0xd1f0));
        // CB BA 00AB
        gbc.setState(0x62a9, 0x5386, 0x42b0, 0xccb1, 0x35f6, 0xe387, 0x0, 0x0);
        gbc.writeMem(0x62a9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5386, gbc.sp());
        EXPECT(0x62ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00AC
        gbc.setState(0x383a, 0x9f6e, 0xad60, 0x5e6d, 0xcacb, 0x4f6b, 0x1, 0x0);
        gbc.writeMem(0x383a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9f6e, gbc.sp());
        EXPECT(0x383c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00AD
        gbc.setState(0x893e, 0xce8d, 0x2880, 0x6be6, 0xa021, 0x9413, 0x1, 0x0);
        gbc.writeMem(0x893e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xce8d, gbc.sp());
        EXPECT(0x8940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x893e));
        EXPECT(0xba, gbc.readMem(0x893f));
        // CB BA 00AE
        gbc.setState(0x9314, 0x1a8a, 0xb5b0, 0x8c57, 0x424f, 0xd8cf, 0x0, 0x0);
        gbc.writeMem(0x9314, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1a8a, gbc.sp());
        EXPECT(0x9316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9314));
        EXPECT(0xba, gbc.readMem(0x9315));
        // CB BA 00AF
        gbc.setState(0xdfa1, 0xbcf0, 0x3660, 0x5e85, 0x84c9, 0x2291, 0x1, 0x1);
        gbc.writeMem(0xdfa1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbcf0, gbc.sp());
        EXPECT(0xdfa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa1));
        EXPECT(0xba, gbc.readMem(0xdfa2));
        // CB BA 00B1
        gbc.setState(0x2122, 0x922e, 0x6e40, 0x3ded, 0xbd3b, 0xc0d4, 0x1, 0x0);
        gbc.writeMem(0x2122, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x922e, gbc.sp());
        EXPECT(0x2124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00B2
        gbc.setState(0x4f7c, 0x38d9, 0x4370, 0x4681, 0x913d, 0x612e, 0x0, 0x0);
        gbc.writeMem(0x4f7c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x38d9, gbc.sp());
        EXPECT(0x4f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00B3
        gbc.setState(0x9488, 0xd83d, 0x8970, 0xcbbd, 0xecae, 0xd64a, 0x0, 0x1);
        gbc.writeMem(0x9488, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd83d, gbc.sp());
        EXPECT(0x948a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9488));
        EXPECT(0xba, gbc.readMem(0x9489));
        // CB BA 00B4
        gbc.setState(0x8bed, 0x8a63, 0x6620, 0xedfa, 0xc937, 0xf3d, 0x1, 0x0);
        gbc.writeMem(0x8bed, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8a63, gbc.sp());
        EXPECT(0x8bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bed));
        EXPECT(0xba, gbc.readMem(0x8bee));
        // CB BA 00B5
        gbc.setState(0xd122, 0xfe7e, 0x5b80, 0x87aa, 0x3aec, 0xa0f, 0x0, 0x1);
        gbc.writeMem(0xd122, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfe7e, gbc.sp());
        EXPECT(0xd124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd122));
        EXPECT(0xba, gbc.readMem(0xd123));
        // CB BA 00B6
        gbc.setState(0x8a7e, 0xcbc0, 0x6620, 0xf148, 0x6add, 0xddea, 0x1, 0x1);
        gbc.writeMem(0x8a7e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcbc0, gbc.sp());
        EXPECT(0x8a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a7e));
        EXPECT(0xba, gbc.readMem(0x8a7f));
        // CB BA 00B7
        gbc.setState(0x9304, 0x755c, 0xd400, 0x821e, 0x5fc3, 0xd3df, 0x0, 0x1);
        gbc.writeMem(0x9304, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x755c, gbc.sp());
        EXPECT(0x9306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9304));
        EXPECT(0xba, gbc.readMem(0x9305));
        // CB BA 00B8
        gbc.setState(0xd9f0, 0xd803, 0x5dc0, 0x30de, 0x59dd, 0x492b, 0x0, 0x0);
        gbc.writeMem(0xd9f0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd803, gbc.sp());
        EXPECT(0xd9f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f0));
        EXPECT(0xba, gbc.readMem(0xd9f1));
        // CB BA 00B9
        gbc.setState(0xdc25, 0x5f4c, 0xf690, 0xa420, 0x88db, 0xee34, 0x1, 0x0);
        gbc.writeMem(0xdc25, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5f4c, gbc.sp());
        EXPECT(0xdc27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc25));
        EXPECT(0xba, gbc.readMem(0xdc26));
        // CB BA 00BA
        gbc.setState(0xd761, 0xdae2, 0x2060, 0xe7f3, 0x5b04, 0xebf8, 0x1, 0x0);
        gbc.writeMem(0xd761, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdae2, gbc.sp());
        EXPECT(0xd763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd761));
        EXPECT(0xba, gbc.readMem(0xd762));
        // CB BA 00BB
        gbc.setState(0x612e, 0xadc2, 0xc440, 0x64d2, 0x824e, 0x26ec, 0x0, 0x1);
        gbc.writeMem(0x612e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xadc2, gbc.sp());
        EXPECT(0x6130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00BC
        gbc.setState(0x740a, 0xb820, 0x7b50, 0xbcc8, 0x1641, 0xda30, 0x1, 0x1);
        gbc.writeMem(0x740a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb820, gbc.sp());
        EXPECT(0x740c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00BD
        gbc.setState(0x20f6, 0xf788, 0xfc60, 0x95c3, 0x10b2, 0x7ef7, 0x0, 0x0);
        gbc.writeMem(0x20f6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf788, gbc.sp());
        EXPECT(0x20f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00BE
        gbc.setState(0x6039, 0xb7b6, 0x4840, 0x93a2, 0x2838, 0x11d5, 0x1, 0x0);
        gbc.writeMem(0x6039, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb7b6, gbc.sp());
        EXPECT(0x603b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00BF
        gbc.setState(0x3f28, 0x25ad, 0x5110, 0x8f64, 0x566f, 0xeb73, 0x0, 0x1);
        gbc.writeMem(0x3f28, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x25ad, gbc.sp());
        EXPECT(0x3f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00C0
        gbc.setState(0xd7ac, 0x1e75, 0xbb30, 0x3077, 0xdc4c, 0x9d6e, 0x1, 0x0);
        gbc.writeMem(0xd7ac, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1e75, gbc.sp());
        EXPECT(0xd7ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ac));
        EXPECT(0xba, gbc.readMem(0xd7ad));
        // CB BA 00C2
        gbc.setState(0xa20, 0x54b2, 0xa350, 0x7a8b, 0x4956, 0xecc5, 0x0, 0x1);
        gbc.writeMem(0xa20, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x54b2, gbc.sp());
        EXPECT(0xa22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00C3
        gbc.setState(0x67fa, 0xfa3a, 0x3900, 0x15a4, 0xc9a0, 0xb6a3, 0x0, 0x0);
        gbc.writeMem(0x67fa, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfa3a, gbc.sp());
        EXPECT(0x67fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00C4
        gbc.setState(0xb15, 0xf903, 0xa880, 0xe06b, 0xaa2, 0xd208, 0x0, 0x1);
        gbc.writeMem(0xb15, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf903, gbc.sp());
        EXPECT(0xb17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00C5
        gbc.setState(0x6c92, 0xffec, 0xdb10, 0xe44a, 0xc8a2, 0x20e1, 0x0, 0x0);
        gbc.writeMem(0x6c92, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xffec, gbc.sp());
        EXPECT(0x6c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00C6
        gbc.setState(0xe6a5, 0xbcd6, 0x8930, 0xa0e7, 0x50cc, 0x82fd, 0x1, 0x1);
        gbc.writeMem(0xe6a5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbcd6, gbc.sp());
        EXPECT(0xe6a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a5));
        EXPECT(0xba, gbc.readMem(0xe6a6));
        // CB BA 00C7
        gbc.setState(0x686f, 0xa50c, 0xedb0, 0x3dd6, 0x6d19, 0x4667, 0x0, 0x0);
        gbc.writeMem(0x686f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa50c, gbc.sp());
        EXPECT(0x6871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00C8
        gbc.setState(0xafa5, 0x57fd, 0xa0f0, 0xcd01, 0xaa2a, 0x3188, 0x0, 0x0);
        gbc.writeMem(0xafa5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x57fd, gbc.sp());
        EXPECT(0xafa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa5));
        EXPECT(0xba, gbc.readMem(0xafa6));
        // CB BA 00C9
        gbc.setState(0xb57a, 0x955a, 0x9db0, 0xd724, 0xda60, 0x78db, 0x0, 0x0);
        gbc.writeMem(0xb57a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x955a, gbc.sp());
        EXPECT(0xb57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb57a));
        EXPECT(0xba, gbc.readMem(0xb57b));
        // CB BA 00CA
        gbc.setState(0xdd04, 0x441, 0xba90, 0xd8eb, 0xae61, 0xbe47, 0x1, 0x0);
        gbc.writeMem(0xdd04, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x441, gbc.sp());
        EXPECT(0xdd06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd04));
        EXPECT(0xba, gbc.readMem(0xdd05));
        // CB BA 00CB
        gbc.setState(0xa631, 0x9714, 0xb500, 0x7604, 0xa859, 0xd8a5, 0x0, 0x1);
        gbc.writeMem(0xa631, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9714, gbc.sp());
        EXPECT(0xa633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa631));
        EXPECT(0xba, gbc.readMem(0xa632));
        // CB BA 00CC
        gbc.setState(0x26f7, 0x31ee, 0x2610, 0xe9d, 0xe97, 0x7c7f, 0x1, 0x0);
        gbc.writeMem(0x26f7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x31ee, gbc.sp());
        EXPECT(0x26f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00CD
        gbc.setState(0x8ef3, 0xb710, 0xcb40, 0xfbc3, 0xef94, 0xd635, 0x1, 0x1);
        gbc.writeMem(0x8ef3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb710, gbc.sp());
        EXPECT(0x8ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef3));
        EXPECT(0xba, gbc.readMem(0x8ef4));
        // CB BA 00CE
        gbc.setState(0x6625, 0x2b57, 0x1560, 0x37a5, 0x23fa, 0x8410, 0x0, 0x0);
        gbc.writeMem(0x6625, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2b57, gbc.sp());
        EXPECT(0x6627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00D0
        gbc.setState(0x66ac, 0x59fb, 0x3930, 0x5594, 0x122, 0x4ba1, 0x1, 0x0);
        gbc.writeMem(0x66ac, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x59fb, gbc.sp());
        EXPECT(0x66ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00D1
        gbc.setState(0x7b1e, 0x90fb, 0x3b30, 0x4e47, 0x7135, 0xb202, 0x0, 0x0);
        gbc.writeMem(0x7b1e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x90fb, gbc.sp());
        EXPECT(0x7b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00D2
        gbc.setState(0xd73c, 0x8f20, 0x3330, 0x763a, 0x2026, 0x6ac8, 0x0, 0x0);
        gbc.writeMem(0xd73c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8f20, gbc.sp());
        EXPECT(0xd73e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73c));
        EXPECT(0xba, gbc.readMem(0xd73d));
        // CB BA 00D3
        gbc.setState(0x1e58, 0x5e06, 0x2820, 0xbd9c, 0x85ff, 0x57ea, 0x1, 0x1);
        gbc.writeMem(0x1e58, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5e06, gbc.sp());
        EXPECT(0x1e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00D4
        gbc.setState(0xfc3, 0x5d3d, 0x8f60, 0x7b84, 0x6b65, 0x2a4f, 0x1, 0x1);
        gbc.writeMem(0xfc3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5d3d, gbc.sp());
        EXPECT(0xfc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00D5
        gbc.setState(0x5db0, 0x6bc3, 0xff00, 0x5cfe, 0x5421, 0xcbd2, 0x1, 0x0);
        gbc.writeMem(0x5db0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6bc3, gbc.sp());
        EXPECT(0x5db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00D6
        gbc.setState(0xcc08, 0x4497, 0x7860, 0x545, 0xa494, 0x38cc, 0x0, 0x0);
        gbc.writeMem(0xcc08, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4497, gbc.sp());
        EXPECT(0xcc0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc08));
        EXPECT(0xba, gbc.readMem(0xcc09));
        // CB BA 00D8
        gbc.setState(0x400, 0x53e3, 0xb70, 0x1597, 0x5ba3, 0xfee8, 0x0, 0x1);
        gbc.writeMem(0x400, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x53e3, gbc.sp());
        EXPECT(0x402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00D9
        gbc.setState(0x2cca, 0x4013, 0x7f60, 0x58bd, 0xd7c0, 0x4636, 0x1, 0x0);
        gbc.writeMem(0x2cca, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4013, gbc.sp());
        EXPECT(0x2ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00DA
        gbc.setState(0x3753, 0xbb84, 0x5980, 0x1f17, 0x67f5, 0x3b49, 0x0, 0x1);
        gbc.writeMem(0x3753, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbb84, gbc.sp());
        EXPECT(0x3755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00DB
        gbc.setState(0x3ca0, 0x75b7, 0x88f0, 0x3586, 0x53c5, 0xc124, 0x1, 0x0);
        gbc.writeMem(0x3ca0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x75b7, gbc.sp());
        EXPECT(0x3ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00DC
        gbc.setState(0x2af2, 0x11e9, 0xeca0, 0xf5be, 0x7e66, 0xd415, 0x1, 0x0);
        gbc.writeMem(0x2af2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x11e9, gbc.sp());
        EXPECT(0x2af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00DE
        gbc.setState(0xc0e6, 0x4bcb, 0x8d90, 0x572b, 0x6c07, 0xaf78, 0x1, 0x1);
        gbc.writeMem(0xc0e6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4bcb, gbc.sp());
        EXPECT(0xc0e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e6));
        EXPECT(0xba, gbc.readMem(0xc0e7));
        // CB BA 00DF
        gbc.setState(0x9bef, 0x2d40, 0x9e10, 0xfaac, 0xcf4, 0x457d, 0x0, 0x0);
        gbc.writeMem(0x9bef, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2d40, gbc.sp());
        EXPECT(0x9bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bef));
        EXPECT(0xba, gbc.readMem(0x9bf0));
        // CB BA 00E0
        gbc.setState(0xcbb2, 0x9104, 0x8c00, 0xb50d, 0x395b, 0x18eb, 0x1, 0x0);
        gbc.writeMem(0xcbb2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9104, gbc.sp());
        EXPECT(0xcbb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb2));
        EXPECT(0xba, gbc.readMem(0xcbb3));
        // CB BA 00E1
        gbc.setState(0xa88f, 0x1811, 0xa880, 0x8eb1, 0xcf53, 0x6845, 0x1, 0x0);
        gbc.writeMem(0xa88f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1811, gbc.sp());
        EXPECT(0xa891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88f));
        EXPECT(0xba, gbc.readMem(0xa890));
        // CB BA 00E2
        gbc.setState(0x7176, 0x9dcd, 0x82a0, 0xb6e, 0x116f, 0x6418, 0x0, 0x0);
        gbc.writeMem(0x7176, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9dcd, gbc.sp());
        EXPECT(0x7178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00E4
        gbc.setState(0xc7b2, 0xa058, 0x6ad0, 0xe3b, 0xcae8, 0xb58f, 0x0, 0x0);
        gbc.writeMem(0xc7b2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa058, gbc.sp());
        EXPECT(0xc7b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b2));
        EXPECT(0xba, gbc.readMem(0xc7b3));
        // CB BA 00E5
        gbc.setState(0x75f7, 0xf5ad, 0xd4a0, 0xb6c8, 0xee10, 0xa1ff, 0x0, 0x0);
        gbc.writeMem(0x75f7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf5ad, gbc.sp());
        EXPECT(0x75f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00E6
        gbc.setState(0x2de1, 0xdc88, 0x2ea0, 0x749b, 0xa768, 0x64b7, 0x1, 0x1);
        gbc.writeMem(0x2de1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdc88, gbc.sp());
        EXPECT(0x2de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00E7
        gbc.setState(0x6894, 0xc72, 0x970, 0x9b26, 0xa898, 0xabe6, 0x0, 0x0);
        gbc.writeMem(0x6894, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc72, gbc.sp());
        EXPECT(0x6896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00E8
        gbc.setState(0x9f75, 0x2435, 0x6ad0, 0xfa45, 0xcdf0, 0x29cd, 0x1, 0x1);
        gbc.writeMem(0x9f75, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2435, gbc.sp());
        EXPECT(0x9f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f75));
        EXPECT(0xba, gbc.readMem(0x9f76));
        // CB BA 00E9
        gbc.setState(0xe445, 0x4a2e, 0x4ba0, 0xe5d0, 0xb489, 0xbf17, 0x0, 0x0);
        gbc.writeMem(0xe445, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4a2e, gbc.sp());
        EXPECT(0xe447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe445));
        EXPECT(0xba, gbc.readMem(0xe446));
        // CB BA 00EA
        gbc.setState(0x9227, 0x2a02, 0xc460, 0xbd1c, 0xd28c, 0x4481, 0x1, 0x1);
        gbc.writeMem(0x9227, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2a02, gbc.sp());
        EXPECT(0x9229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9227));
        EXPECT(0xba, gbc.readMem(0x9228));
        // CB BA 00EB
        gbc.setState(0xe8ba, 0x45a9, 0x27f0, 0x6211, 0xed71, 0xd493, 0x1, 0x0);
        gbc.writeMem(0xe8ba, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x45a9, gbc.sp());
        EXPECT(0xe8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ba));
        EXPECT(0xba, gbc.readMem(0xe8bb));
        // CB BA 00EC
        gbc.setState(0x26b9, 0x715d, 0x62f0, 0xb96b, 0x9c77, 0xb91c, 0x0, 0x0);
        gbc.writeMem(0x26b9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x715d, gbc.sp());
        EXPECT(0x26bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00ED
        gbc.setState(0x4c98, 0xb484, 0x9710, 0x7d52, 0x7495, 0x32c0, 0x0, 0x1);
        gbc.writeMem(0x4c98, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb484, gbc.sp());
        EXPECT(0x4c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00EE
        gbc.setState(0xc685, 0x3ca7, 0x6f70, 0x548e, 0x89d1, 0xa877, 0x1, 0x1);
        gbc.writeMem(0xc685, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3ca7, gbc.sp());
        EXPECT(0xc687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc685));
        EXPECT(0xba, gbc.readMem(0xc686));
        // CB BA 00EF
        gbc.setState(0xb16, 0x36e8, 0xe160, 0x65bb, 0x5e0e, 0xd87, 0x0, 0x1);
        gbc.writeMem(0xb16, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x36e8, gbc.sp());
        EXPECT(0xb18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00F0
        gbc.setState(0xee56, 0x93b1, 0x9e40, 0x45ea, 0x1fdf, 0x7193, 0x1, 0x0);
        gbc.writeMem(0xee56, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x93b1, gbc.sp());
        EXPECT(0xee58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee56));
        EXPECT(0xba, gbc.readMem(0xee57));
        // CB BA 00F1
        gbc.setState(0x8731, 0x30a6, 0xa170, 0x2b58, 0x258c, 0xb1bb, 0x1, 0x0);
        gbc.writeMem(0x8731, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x30a6, gbc.sp());
        EXPECT(0x8733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8731));
        EXPECT(0xba, gbc.readMem(0x8732));
        // CB BA 00F2
        gbc.setState(0x1fc1, 0x518c, 0x90f0, 0xc605, 0x55f2, 0xdf5d, 0x1, 0x1);
        gbc.writeMem(0x1fc1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x518c, gbc.sp());
        EXPECT(0x1fc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00F3
        gbc.setState(0xd802, 0xda74, 0x7cf0, 0x8e84, 0x8539, 0x6e98, 0x0, 0x0);
        gbc.writeMem(0xd802, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xda74, gbc.sp());
        EXPECT(0xd804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd802));
        EXPECT(0xba, gbc.readMem(0xd803));
        // CB BA 00F4
        gbc.setState(0x8251, 0x3969, 0xc970, 0x116a, 0xcb9c, 0x5e66, 0x0, 0x0);
        gbc.writeMem(0x8251, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3969, gbc.sp());
        EXPECT(0x8253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8251));
        EXPECT(0xba, gbc.readMem(0x8252));
        // CB BA 00F5
        gbc.setState(0x32db, 0x5f1b, 0x3bb0, 0x3ad4, 0x1b91, 0x13fd, 0x1, 0x1);
        gbc.writeMem(0x32db, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5f1b, gbc.sp());
        EXPECT(0x32dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00F6
        gbc.setState(0x8c95, 0xae3d, 0x8930, 0x1f7f, 0x1037, 0x7972, 0x0, 0x0);
        gbc.writeMem(0x8c95, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xae3d, gbc.sp());
        EXPECT(0x8c97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c95));
        EXPECT(0xba, gbc.readMem(0x8c96));
        // CB BA 00F7
        gbc.setState(0x39be, 0x3dbc, 0x2060, 0xaf11, 0x9895, 0x12bf, 0x1, 0x1);
        gbc.writeMem(0x39be, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3dbc, gbc.sp());
        EXPECT(0x39c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00F8
        gbc.setState(0xcc8c, 0xb01f, 0xda00, 0xcab9, 0x91ce, 0x9a9f, 0x0, 0x0);
        gbc.writeMem(0xcc8c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb01f, gbc.sp());
        EXPECT(0xcc8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8c));
        EXPECT(0xba, gbc.readMem(0xcc8d));
        // CB BA 00F9
        gbc.setState(0x5855, 0x660, 0x4d20, 0x1553, 0x3775, 0xf706, 0x1, 0x0);
        gbc.writeMem(0x5855, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x660, gbc.sp());
        EXPECT(0x5857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00FA
        gbc.setState(0x9bf1, 0x5fae, 0xb0c0, 0x2d07, 0x56ed, 0x16c5, 0x0, 0x1);
        gbc.writeMem(0x9bf1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5fae, gbc.sp());
        EXPECT(0x9bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf1));
        EXPECT(0xba, gbc.readMem(0x9bf2));
        // CB BA 00FB
        gbc.setState(0x5e90, 0x1289, 0xe370, 0x7e2b, 0x7a13, 0x6e7d, 0x0, 0x0);
        gbc.writeMem(0x5e90, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1289, gbc.sp());
        EXPECT(0x5e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00FC
        gbc.setState(0x5d6b, 0x1a1, 0x7090, 0x2c8b, 0x8e42, 0x4fb6, 0x1, 0x1);
        gbc.writeMem(0x5d6b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1a1, gbc.sp());
        EXPECT(0x5d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 00FD
        gbc.setState(0x7ebf, 0x450b, 0x47c0, 0xca31, 0xdab9, 0x5e18, 0x0, 0x1);
        gbc.writeMem(0x7ebf, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x450b, gbc.sp());
        EXPECT(0x7ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 00FE
        gbc.setState(0xd9dc, 0xd36f, 0xf450, 0xc8d1, 0xaa2, 0x836e, 0x1, 0x0);
        gbc.writeMem(0xd9dc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd36f, gbc.sp());
        EXPECT(0xd9de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9dc));
        EXPECT(0xba, gbc.readMem(0xd9dd));
        // CB BA 00FF
        gbc.setState(0xf, 0x1a09, 0x9300, 0x99e7, 0x671b, 0x15a8, 0x1, 0x0);
        gbc.writeMem(0xf, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1a09, gbc.sp());
        EXPECT(0x11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0100
        gbc.setState(0x93d8, 0x6bc2, 0x7330, 0xa18f, 0xf3a, 0x36fa, 0x1, 0x1);
        gbc.writeMem(0x93d8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6bc2, gbc.sp());
        EXPECT(0x93da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d8));
        EXPECT(0xba, gbc.readMem(0x93d9));
        // CB BA 0101
        gbc.setState(0x51e1, 0x60a9, 0x6520, 0x423a, 0x46bc, 0xcd66, 0x0, 0x0);
        gbc.writeMem(0x51e1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x60a9, gbc.sp());
        EXPECT(0x51e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0102
        gbc.setState(0x2253, 0x1a5c, 0x9090, 0x73e, 0x59f3, 0x583e, 0x0, 0x0);
        gbc.writeMem(0x2253, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1a5c, gbc.sp());
        EXPECT(0x2255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0103
        gbc.setState(0x5153, 0x8a0b, 0x8de0, 0x5020, 0xbddc, 0x6b01, 0x0, 0x1);
        gbc.writeMem(0x5153, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8a0b, gbc.sp());
        EXPECT(0x5155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0104
        gbc.setState(0xa96b, 0xd98f, 0x7180, 0x3764, 0x35b8, 0xecc1, 0x1, 0x1);
        gbc.writeMem(0xa96b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd98f, gbc.sp());
        EXPECT(0xa96d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96b));
        EXPECT(0xba, gbc.readMem(0xa96c));
        // CB BA 0105
        gbc.setState(0x3e6, 0x219a, 0x9520, 0x731c, 0xe270, 0x713f, 0x1, 0x0);
        gbc.writeMem(0x3e6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x219a, gbc.sp());
        EXPECT(0x3e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0106
        gbc.setState(0xd37f, 0x26c3, 0xc6b0, 0xc0eb, 0x877f, 0xfec3, 0x0, 0x1);
        gbc.writeMem(0xd37f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x26c3, gbc.sp());
        EXPECT(0xd381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37f));
        EXPECT(0xba, gbc.readMem(0xd380));
        // CB BA 0107
        gbc.setState(0xb471, 0xbd54, 0xa930, 0x4fdd, 0x9dfa, 0x8f8c, 0x1, 0x1);
        gbc.writeMem(0xb471, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbd54, gbc.sp());
        EXPECT(0xb473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb471));
        EXPECT(0xba, gbc.readMem(0xb472));
        // CB BA 0108
        gbc.setState(0xa51a, 0x44cc, 0xd330, 0xd7f8, 0xc3da, 0xad81, 0x1, 0x0);
        gbc.writeMem(0xa51a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x44cc, gbc.sp());
        EXPECT(0xa51c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa51a));
        EXPECT(0xba, gbc.readMem(0xa51b));
        // CB BA 0109
        gbc.setState(0x65fc, 0x6c17, 0xdc70, 0xb77b, 0x79ff, 0x484a, 0x0, 0x1);
        gbc.writeMem(0x65fc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6c17, gbc.sp());
        EXPECT(0x65fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 010A
        gbc.setState(0x3039, 0xd1fe, 0x3230, 0xdfcd, 0xf736, 0x197b, 0x0, 0x1);
        gbc.writeMem(0x3039, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd1fe, gbc.sp());
        EXPECT(0x303b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 010B
        gbc.setState(0xdbcf, 0x728b, 0x7400, 0x5c66, 0xc0a6, 0x9c3d, 0x0, 0x0);
        gbc.writeMem(0xdbcf, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x728b, gbc.sp());
        EXPECT(0xdbd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbcf));
        EXPECT(0xba, gbc.readMem(0xdbd0));
        // CB BA 010C
        gbc.setState(0x3373, 0x7530, 0xeb30, 0xee75, 0x9842, 0xbb6b, 0x0, 0x0);
        gbc.writeMem(0x3373, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7530, gbc.sp());
        EXPECT(0x3375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 010D
        gbc.setState(0x7fff, 0x99cf, 0xed30, 0x95eb, 0x35aa, 0xab9a, 0x0, 0x1);
        gbc.writeMem(0x7fff, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x99cf, gbc.sp());
        EXPECT(0x8001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x8000));
        // CB BA 010E
        gbc.setState(0xa681, 0x4567, 0x6720, 0x5de4, 0xcb06, 0x3f43, 0x0, 0x1);
        gbc.writeMem(0xa681, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4567, gbc.sp());
        EXPECT(0xa683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa681));
        EXPECT(0xba, gbc.readMem(0xa682));
        // CB BA 010F
        gbc.setState(0x1881, 0x6a2c, 0x3ac0, 0x7000, 0x3257, 0xf13, 0x1, 0x0);
        gbc.writeMem(0x1881, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6a2c, gbc.sp());
        EXPECT(0x1883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0110
        gbc.setState(0xaca9, 0x800b, 0x51d0, 0x6164, 0xf0f8, 0xf6dc, 0x1, 0x1);
        gbc.writeMem(0xaca9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x800b, gbc.sp());
        EXPECT(0xacab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca9));
        EXPECT(0xba, gbc.readMem(0xacaa));
        // CB BA 0111
        gbc.setState(0xe65f, 0xd233, 0x37f0, 0xc89d, 0xca47, 0xafa1, 0x0, 0x0);
        gbc.writeMem(0xe65f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd233, gbc.sp());
        EXPECT(0xe661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe65f));
        EXPECT(0xba, gbc.readMem(0xe660));
        // CB BA 0112
        gbc.setState(0xdeea, 0x7591, 0x7180, 0x27d8, 0x9efe, 0xd5c7, 0x0, 0x1);
        gbc.writeMem(0xdeea, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7591, gbc.sp());
        EXPECT(0xdeec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeea));
        EXPECT(0xba, gbc.readMem(0xdeeb));
        // CB BA 0113
        gbc.setState(0x497b, 0xd806, 0xecd0, 0x5c0, 0xa8ce, 0x80f, 0x0, 0x1);
        gbc.writeMem(0x497b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd806, gbc.sp());
        EXPECT(0x497d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0114
        gbc.setState(0x1ba7, 0x611a, 0xc6a0, 0xcd70, 0x73f9, 0xcc51, 0x1, 0x1);
        gbc.writeMem(0x1ba7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x611a, gbc.sp());
        EXPECT(0x1ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0115
        gbc.setState(0x27b6, 0x482e, 0x4c40, 0x209d, 0xf38, 0x19b1, 0x0, 0x0);
        gbc.writeMem(0x27b6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x482e, gbc.sp());
        EXPECT(0x27b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0116
        gbc.setState(0xae01, 0xa121, 0xe530, 0x3248, 0xcae7, 0x1a08, 0x1, 0x1);
        gbc.writeMem(0xae01, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa121, gbc.sp());
        EXPECT(0xae03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae01));
        EXPECT(0xba, gbc.readMem(0xae02));
        // CB BA 0117
        gbc.setState(0x41d4, 0x2abe, 0x1fe0, 0xdd68, 0xc0d8, 0x3188, 0x1, 0x1);
        gbc.writeMem(0x41d4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2abe, gbc.sp());
        EXPECT(0x41d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0118
        gbc.setState(0x2013, 0xe355, 0xf070, 0x8119, 0xf227, 0xf550, 0x1, 0x1);
        gbc.writeMem(0x2013, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe355, gbc.sp());
        EXPECT(0x2015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0119
        gbc.setState(0x7ea5, 0xbce7, 0xff30, 0xabc8, 0xe467, 0x2450, 0x0, 0x1);
        gbc.writeMem(0x7ea5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbce7, gbc.sp());
        EXPECT(0x7ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 011A
        gbc.setState(0x6719, 0xc721, 0xf8d0, 0x4ea2, 0x260f, 0x85e9, 0x1, 0x0);
        gbc.writeMem(0x6719, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc721, gbc.sp());
        EXPECT(0x671b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 011B
        gbc.setState(0x497d, 0x81fc, 0x1340, 0xa8f7, 0x90b5, 0xd40c, 0x0, 0x0);
        gbc.writeMem(0x497d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x81fc, gbc.sp());
        EXPECT(0x497f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 011C
        gbc.setState(0x50ad, 0xf0b9, 0x5f00, 0x8dc5, 0x7ae3, 0x4989, 0x0, 0x1);
        gbc.writeMem(0x50ad, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf0b9, gbc.sp());
        EXPECT(0x50af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 011D
        gbc.setState(0x7c22, 0xb27e, 0x5de0, 0x4188, 0xe2c2, 0x62e2, 0x1, 0x0);
        gbc.writeMem(0x7c22, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb27e, gbc.sp());
        EXPECT(0x7c24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 011E
        gbc.setState(0x5e8a, 0x843f, 0x8820, 0x4a07, 0xddb8, 0x6c5b, 0x1, 0x1);
        gbc.writeMem(0x5e8a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x843f, gbc.sp());
        EXPECT(0x5e8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 011F
        gbc.setState(0x47f0, 0xffe, 0x5da0, 0x1bcb, 0x6bbf, 0xe952, 0x1, 0x1);
        gbc.writeMem(0x47f0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xffe, gbc.sp());
        EXPECT(0x47f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0120
        gbc.setState(0x37d5, 0xdd3, 0x3cd0, 0x2cf7, 0x842e, 0xdb8f, 0x1, 0x1);
        gbc.writeMem(0x37d5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdd3, gbc.sp());
        EXPECT(0x37d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0121
        gbc.setState(0x7fca, 0x227f, 0xf290, 0x2e27, 0xb74b, 0x2af1, 0x1, 0x0);
        gbc.writeMem(0x7fca, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x227f, gbc.sp());
        EXPECT(0x7fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0122
        gbc.setState(0xba2b, 0xbf0c, 0xfb70, 0xf66c, 0xea6a, 0x594d, 0x1, 0x1);
        gbc.writeMem(0xba2b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbf0c, gbc.sp());
        EXPECT(0xba2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2b));
        EXPECT(0xba, gbc.readMem(0xba2c));
        // CB BA 0123
        gbc.setState(0x6d9e, 0x524c, 0x21e0, 0x30ef, 0x2911, 0xf425, 0x1, 0x1);
        gbc.writeMem(0x6d9e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x524c, gbc.sp());
        EXPECT(0x6da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0124
        gbc.setState(0x9e65, 0x5474, 0x7f70, 0xf1ba, 0xb2e1, 0x8e47, 0x0, 0x0);
        gbc.writeMem(0x9e65, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5474, gbc.sp());
        EXPECT(0x9e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e65));
        EXPECT(0xba, gbc.readMem(0x9e66));
        // CB BA 0125
        gbc.setState(0xa4b2, 0x822f, 0xc110, 0xe99d, 0x3174, 0x40d2, 0x0, 0x0);
        gbc.writeMem(0xa4b2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x822f, gbc.sp());
        EXPECT(0xa4b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b2));
        EXPECT(0xba, gbc.readMem(0xa4b3));
        // CB BA 0126
        gbc.setState(0x2f03, 0xdab, 0xbb0, 0xb274, 0xbbde, 0xcbaf, 0x1, 0x0);
        gbc.writeMem(0x2f03, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdab, gbc.sp());
        EXPECT(0x2f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0127
        gbc.setState(0xa0f1, 0xca8, 0xc570, 0xfb98, 0xd8c0, 0x7cc4, 0x1, 0x1);
        gbc.writeMem(0xa0f1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xca8, gbc.sp());
        EXPECT(0xa0f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f1));
        EXPECT(0xba, gbc.readMem(0xa0f2));
        // CB BA 0129
        gbc.setState(0xd7a2, 0x6b23, 0xed60, 0xf3b, 0xda13, 0x4406, 0x1, 0x1);
        gbc.writeMem(0xd7a2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6b23, gbc.sp());
        EXPECT(0xd7a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a2));
        EXPECT(0xba, gbc.readMem(0xd7a3));
        // CB BA 012A
        gbc.setState(0xac4d, 0x3e56, 0xb8b0, 0x76, 0x82ea, 0x1377, 0x0, 0x1);
        gbc.writeMem(0xac4d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3e56, gbc.sp());
        EXPECT(0xac4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac4d));
        EXPECT(0xba, gbc.readMem(0xac4e));
        // CB BA 012B
        gbc.setState(0x9aae, 0xddbc, 0xd3c0, 0xd74a, 0x76d6, 0x65ec, 0x0, 0x1);
        gbc.writeMem(0x9aae, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xddbc, gbc.sp());
        EXPECT(0x9ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aae));
        EXPECT(0xba, gbc.readMem(0x9aaf));
        // CB BA 012C
        gbc.setState(0xaf86, 0xd305, 0x590, 0x2e32, 0xe92e, 0xb545, 0x0, 0x1);
        gbc.writeMem(0xaf86, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd305, gbc.sp());
        EXPECT(0xaf88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf86));
        EXPECT(0xba, gbc.readMem(0xaf87));
        // CB BA 012D
        gbc.setState(0xb16, 0x7b98, 0xf110, 0x731, 0x36ab, 0x460c, 0x1, 0x0);
        gbc.writeMem(0xb16, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7b98, gbc.sp());
        EXPECT(0xb18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 012E
        gbc.setState(0x7543, 0x6f24, 0xbc10, 0x2f2c, 0xbc6d, 0x6388, 0x1, 0x1);
        gbc.writeMem(0x7543, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6f24, gbc.sp());
        EXPECT(0x7545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 012F
        gbc.setState(0xd875, 0x27f7, 0xc9e0, 0x1fd5, 0x2adf, 0xbf5f, 0x1, 0x1);
        gbc.writeMem(0xd875, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x27f7, gbc.sp());
        EXPECT(0xd877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd875));
        EXPECT(0xba, gbc.readMem(0xd876));
        // CB BA 0130
        gbc.setState(0x3203, 0xbb7c, 0x43c0, 0x6b77, 0x823, 0x6b69, 0x0, 0x1);
        gbc.writeMem(0x3203, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbb7c, gbc.sp());
        EXPECT(0x3205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0131
        gbc.setState(0x3999, 0xaa7f, 0x53f0, 0x8f37, 0x2707, 0x302b, 0x0, 0x1);
        gbc.writeMem(0x3999, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xaa7f, gbc.sp());
        EXPECT(0x399b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0132
        gbc.setState(0x4801, 0x3f9a, 0xd8c0, 0x4b93, 0x32e7, 0x828c, 0x1, 0x1);
        gbc.writeMem(0x4801, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3f9a, gbc.sp());
        EXPECT(0x4803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0133
        gbc.setState(0xd71b, 0x272f, 0xe540, 0xa319, 0x3d2d, 0x74ec, 0x1, 0x0);
        gbc.writeMem(0xd71b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x272f, gbc.sp());
        EXPECT(0xd71d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71b));
        EXPECT(0xba, gbc.readMem(0xd71c));
        // CB BA 0134
        gbc.setState(0x9120, 0xf2b7, 0xc440, 0x4275, 0x69d8, 0xd1cf, 0x1, 0x0);
        gbc.writeMem(0x9120, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf2b7, gbc.sp());
        EXPECT(0x9122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9120));
        EXPECT(0xba, gbc.readMem(0x9121));
        // CB BA 0135
        gbc.setState(0x3d58, 0x7d3f, 0xd40, 0x10d3, 0x2d53, 0x500c, 0x1, 0x0);
        gbc.writeMem(0x3d58, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7d3f, gbc.sp());
        EXPECT(0x3d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0136
        gbc.setState(0x29a9, 0x6c5f, 0x5b20, 0x30ed, 0x361c, 0x2dc3, 0x0, 0x1);
        gbc.writeMem(0x29a9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6c5f, gbc.sp());
        EXPECT(0x29ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0137
        gbc.setState(0xdf4c, 0x9000, 0x5c0, 0xfa61, 0x8588, 0x7c0a, 0x1, 0x1);
        gbc.writeMem(0xdf4c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9000, gbc.sp());
        EXPECT(0xdf4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf4c));
        EXPECT(0xba, gbc.readMem(0xdf4d));
        // CB BA 0138
        gbc.setState(0x8e2e, 0x4ecb, 0x7fb0, 0x568f, 0x55d6, 0x62cc, 0x0, 0x1);
        gbc.writeMem(0x8e2e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4ecb, gbc.sp());
        EXPECT(0x8e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e2e));
        EXPECT(0xba, gbc.readMem(0x8e2f));
        // CB BA 0139
        gbc.setState(0xd80b, 0x607e, 0x8e0, 0xd38, 0xe01c, 0x8e63, 0x0, 0x1);
        gbc.writeMem(0xd80b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x607e, gbc.sp());
        EXPECT(0xd80d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80b));
        EXPECT(0xba, gbc.readMem(0xd80c));
        // CB BA 013A
        gbc.setState(0xd5e2, 0x7274, 0x2b70, 0xf33, 0x2d0a, 0x49ab, 0x1, 0x0);
        gbc.writeMem(0xd5e2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7274, gbc.sp());
        EXPECT(0xd5e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e2));
        EXPECT(0xba, gbc.readMem(0xd5e3));
        // CB BA 013B
        gbc.setState(0xa40, 0x35f5, 0x5d80, 0xd341, 0x8f4d, 0x8af8, 0x1, 0x1);
        gbc.writeMem(0xa40, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x35f5, gbc.sp());
        EXPECT(0xa42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 013C
        gbc.setState(0x2938, 0x59ee, 0x33f0, 0x83da, 0x8c85, 0x5c84, 0x1, 0x0);
        gbc.writeMem(0x2938, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x59ee, gbc.sp());
        EXPECT(0x293a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 013D
        gbc.setState(0x1d28, 0xcd92, 0xc210, 0x3eb4, 0x95db, 0xb483, 0x1, 0x1);
        gbc.writeMem(0x1d28, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcd92, gbc.sp());
        EXPECT(0x1d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 013E
        gbc.setState(0xc6fd, 0xf16e, 0x81f0, 0x2f4, 0x8f1a, 0x843e, 0x1, 0x0);
        gbc.writeMem(0xc6fd, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf16e, gbc.sp());
        EXPECT(0xc6ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6fd));
        EXPECT(0xba, gbc.readMem(0xc6fe));
        // CB BA 013F
        gbc.setState(0xd337, 0x34b2, 0x9ab0, 0xd62d, 0x14f1, 0x2809, 0x1, 0x0);
        gbc.writeMem(0xd337, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x34b2, gbc.sp());
        EXPECT(0xd339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd337));
        EXPECT(0xba, gbc.readMem(0xd338));
        // CB BA 0140
        gbc.setState(0x5feb, 0x3554, 0x81c0, 0x9409, 0x77a5, 0x7ae4, 0x1, 0x0);
        gbc.writeMem(0x5feb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3554, gbc.sp());
        EXPECT(0x5fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0141
        gbc.setState(0xb5c4, 0x6587, 0xb1f0, 0x70db, 0xc027, 0x3739, 0x0, 0x0);
        gbc.writeMem(0xb5c4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6587, gbc.sp());
        EXPECT(0xb5c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c4));
        EXPECT(0xba, gbc.readMem(0xb5c5));
        // CB BA 0142
        gbc.setState(0x1be6, 0x348c, 0xb5e0, 0x25d6, 0x39d4, 0x9066, 0x1, 0x0);
        gbc.writeMem(0x1be6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x348c, gbc.sp());
        EXPECT(0x1be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0143
        gbc.setState(0x7465, 0x70f2, 0x10, 0x5376, 0x1a2d, 0xe26a, 0x0, 0x1);
        gbc.writeMem(0x7465, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x70f2, gbc.sp());
        EXPECT(0x7467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0144
        gbc.setState(0xeedb, 0x4e31, 0x8b90, 0x3183, 0x2383, 0x6cad, 0x1, 0x1);
        gbc.writeMem(0xeedb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4e31, gbc.sp());
        EXPECT(0xeedd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeedb));
        EXPECT(0xba, gbc.readMem(0xeedc));
        // CB BA 0145
        gbc.setState(0xb8ef, 0x87b4, 0x39d0, 0xf4e0, 0xabbb, 0xc94, 0x1, 0x1);
        gbc.writeMem(0xb8ef, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x87b4, gbc.sp());
        EXPECT(0xb8f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ef));
        EXPECT(0xba, gbc.readMem(0xb8f0));
        // CB BA 0147
        gbc.setState(0xd1f3, 0x16fd, 0x6c40, 0xd91, 0x4c28, 0xbcd7, 0x0, 0x0);
        gbc.writeMem(0xd1f3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x16fd, gbc.sp());
        EXPECT(0xd1f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f3));
        EXPECT(0xba, gbc.readMem(0xd1f4));
        // CB BA 0148
        gbc.setState(0x5a5b, 0x2b8b, 0xde30, 0xf251, 0xea04, 0x9e47, 0x1, 0x1);
        gbc.writeMem(0x5a5b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2b8b, gbc.sp());
        EXPECT(0x5a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0149
        gbc.setState(0x4487, 0x4c47, 0x1640, 0x6a57, 0xf797, 0xe968, 0x1, 0x1);
        gbc.writeMem(0x4487, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4c47, gbc.sp());
        EXPECT(0x4489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 014A
        gbc.setState(0x2faa, 0x7be3, 0xa050, 0xce50, 0xbf2f, 0xf367, 0x0, 0x1);
        gbc.writeMem(0x2faa, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7be3, gbc.sp());
        EXPECT(0x2fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 014B
        gbc.setState(0x466a, 0xeee3, 0xce0, 0x1d54, 0xf308, 0x96bc, 0x0, 0x0);
        gbc.writeMem(0x466a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xeee3, gbc.sp());
        EXPECT(0x466c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 014C
        gbc.setState(0xac4e, 0x680, 0x1520, 0x1d58, 0x6231, 0xc6dc, 0x1, 0x1);
        gbc.writeMem(0xac4e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x680, gbc.sp());
        EXPECT(0xac50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac4e));
        EXPECT(0xba, gbc.readMem(0xac4f));
        // CB BA 014D
        gbc.setState(0x5468, 0x7e8e, 0x5d50, 0x1306, 0x3f3b, 0xa657, 0x1, 0x1);
        gbc.writeMem(0x5468, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7e8e, gbc.sp());
        EXPECT(0x546a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 014E
        gbc.setState(0x3484, 0x51dd, 0xd3e0, 0x1ca7, 0xc25, 0x21c3, 0x0, 0x1);
        gbc.writeMem(0x3484, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x51dd, gbc.sp());
        EXPECT(0x3486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 014F
        gbc.setState(0x13d6, 0xc29c, 0x40a0, 0xe20c, 0x19dd, 0x3ad2, 0x1, 0x1);
        gbc.writeMem(0x13d6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc29c, gbc.sp());
        EXPECT(0x13d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0150
        gbc.setState(0xc3be, 0x4f96, 0x3c0, 0xd8ec, 0x2fb7, 0x7b6e, 0x1, 0x1);
        gbc.writeMem(0xc3be, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4f96, gbc.sp());
        EXPECT(0xc3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3be));
        EXPECT(0xba, gbc.readMem(0xc3bf));
        // CB BA 0151
        gbc.setState(0x4f39, 0xc3cb, 0xd820, 0xc1e4, 0xc077, 0xe864, 0x1, 0x1);
        gbc.writeMem(0x4f39, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc3cb, gbc.sp());
        EXPECT(0x4f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0152
        gbc.setState(0xb6d0, 0x6eb9, 0x6a30, 0x95bc, 0x2e8, 0x7c8d, 0x0, 0x0);
        gbc.writeMem(0xb6d0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6eb9, gbc.sp());
        EXPECT(0xb6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d0));
        EXPECT(0xba, gbc.readMem(0xb6d1));
        // CB BA 0153
        gbc.setState(0x73a9, 0x5f05, 0x7bb0, 0xcb6d, 0xcb2f, 0xc0cc, 0x1, 0x0);
        gbc.writeMem(0x73a9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5f05, gbc.sp());
        EXPECT(0x73ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0154
        gbc.setState(0x924d, 0x5854, 0x7970, 0x728d, 0x9ddd, 0x1925, 0x0, 0x1);
        gbc.writeMem(0x924d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5854, gbc.sp());
        EXPECT(0x924f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x924d));
        EXPECT(0xba, gbc.readMem(0x924e));
        // CB BA 0155
        gbc.setState(0x4a33, 0x942c, 0x90a0, 0x1c0, 0x4b, 0x63c9, 0x0, 0x1);
        gbc.writeMem(0x4a33, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x942c, gbc.sp());
        EXPECT(0x4a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0156
        gbc.setState(0x8c3b, 0x5a2d, 0xe5b0, 0x3d0e, 0x2971, 0x409b, 0x0, 0x0);
        gbc.writeMem(0x8c3b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5a2d, gbc.sp());
        EXPECT(0x8c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3b));
        EXPECT(0xba, gbc.readMem(0x8c3c));
        // CB BA 0157
        gbc.setState(0x6105, 0x7c8d, 0xfe60, 0x1b40, 0x5684, 0x1200, 0x1, 0x0);
        gbc.writeMem(0x6105, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7c8d, gbc.sp());
        EXPECT(0x6107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0158
        gbc.setState(0x875, 0x1323, 0x6e80, 0x1b20, 0x77dc, 0xf3, 0x0, 0x0);
        gbc.writeMem(0x875, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1323, gbc.sp());
        EXPECT(0x877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0159
        gbc.setState(0x7ada, 0xdfc0, 0xd6e0, 0xd664, 0x28bb, 0xb058, 0x0, 0x0);
        gbc.writeMem(0x7ada, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdfc0, gbc.sp());
        EXPECT(0x7adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 015A
        gbc.setState(0xb1f4, 0x435e, 0x2500, 0x2717, 0x6d0b, 0xed1, 0x0, 0x1);
        gbc.writeMem(0xb1f4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x435e, gbc.sp());
        EXPECT(0xb1f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f4));
        EXPECT(0xba, gbc.readMem(0xb1f5));
        // CB BA 015B
        gbc.setState(0x41b8, 0x121d, 0x9770, 0xae12, 0x7330, 0x3bd5, 0x0, 0x1);
        gbc.writeMem(0x41b8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x121d, gbc.sp());
        EXPECT(0x41ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 015E
        gbc.setState(0xc0c5, 0xbfc8, 0x5fd0, 0xebeb, 0x7a89, 0x958a, 0x1, 0x1);
        gbc.writeMem(0xc0c5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbfc8, gbc.sp());
        EXPECT(0xc0c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c5));
        EXPECT(0xba, gbc.readMem(0xc0c6));
        // CB BA 0160
        gbc.setState(0x43b6, 0xfaec, 0x9650, 0xfe66, 0x2032, 0x52ae, 0x0, 0x0);
        gbc.writeMem(0x43b6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfaec, gbc.sp());
        EXPECT(0x43b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0161
        gbc.setState(0x37c9, 0xbbc9, 0xc1e0, 0x2b76, 0xf0c0, 0x17ef, 0x0, 0x1);
        gbc.writeMem(0x37c9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbbc9, gbc.sp());
        EXPECT(0x37cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0162
        gbc.setState(0x905e, 0xc3f9, 0xde80, 0xfee5, 0xefb3, 0xe23f, 0x0, 0x0);
        gbc.writeMem(0x905e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc3f9, gbc.sp());
        EXPECT(0x9060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905e));
        EXPECT(0xba, gbc.readMem(0x905f));
        // CB BA 0164
        gbc.setState(0x85d0, 0xdb15, 0x1560, 0x5bf8, 0x2919, 0xcd3, 0x0, 0x0);
        gbc.writeMem(0x85d0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdb15, gbc.sp());
        EXPECT(0x85d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d0));
        EXPECT(0xba, gbc.readMem(0x85d1));
        // CB BA 0165
        gbc.setState(0xd85a, 0x5ca1, 0x7130, 0xfb36, 0x6017, 0xd72f, 0x1, 0x0);
        gbc.writeMem(0xd85a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5ca1, gbc.sp());
        EXPECT(0xd85c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85a));
        EXPECT(0xba, gbc.readMem(0xd85b));
        // CB BA 0166
        gbc.setState(0x8f8b, 0xf512, 0xcae0, 0xcb59, 0x20fb, 0x4d88, 0x0, 0x1);
        gbc.writeMem(0x8f8b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf512, gbc.sp());
        EXPECT(0x8f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f8b));
        EXPECT(0xba, gbc.readMem(0x8f8c));
        // CB BA 0167
        gbc.setState(0xdf, 0x16a, 0x7910, 0xc09c, 0x4a94, 0x9fb0, 0x0, 0x0);
        gbc.writeMem(0xdf, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x16a, gbc.sp());
        EXPECT(0xe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0169
        gbc.setState(0x490f, 0xe230, 0x46d0, 0xb8c4, 0xf804, 0xf0b3, 0x0, 0x0);
        gbc.writeMem(0x490f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe230, gbc.sp());
        EXPECT(0x4911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 016A
        gbc.setState(0x81f4, 0x4cd, 0xb2f0, 0xddc5, 0xda0c, 0xc592, 0x1, 0x0);
        gbc.writeMem(0x81f4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4cd, gbc.sp());
        EXPECT(0x81f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f4));
        EXPECT(0xba, gbc.readMem(0x81f5));
        // CB BA 016B
        gbc.setState(0xe4ad, 0x1d32, 0x140, 0x4dfb, 0x21e4, 0x6f89, 0x1, 0x0);
        gbc.writeMem(0xe4ad, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1d32, gbc.sp());
        EXPECT(0xe4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ad));
        EXPECT(0xba, gbc.readMem(0xe4ae));
        // CB BA 016C
        gbc.setState(0x94ff, 0x4c51, 0xc910, 0xc06d, 0x9d4f, 0xab2e, 0x0, 0x1);
        gbc.writeMem(0x94ff, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4c51, gbc.sp());
        EXPECT(0x9501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ff));
        EXPECT(0xba, gbc.readMem(0x9500));
        // CB BA 016E
        gbc.setState(0x9e3b, 0x33b5, 0x9560, 0x82fe, 0xacd0, 0xfe85, 0x1, 0x1);
        gbc.writeMem(0x9e3b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x33b5, gbc.sp());
        EXPECT(0x9e3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e3b));
        EXPECT(0xba, gbc.readMem(0x9e3c));
        // CB BA 016F
        gbc.setState(0x3ec8, 0x9f6c, 0x8760, 0xd28c, 0x6342, 0xe2b1, 0x1, 0x0);
        gbc.writeMem(0x3ec8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9f6c, gbc.sp());
        EXPECT(0x3eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0170
        gbc.setState(0xebef, 0xd513, 0x5bc0, 0x9e95, 0x8c0b, 0x3f7, 0x1, 0x1);
        gbc.writeMem(0xebef, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd513, gbc.sp());
        EXPECT(0xebf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebef));
        EXPECT(0xba, gbc.readMem(0xebf0));
        // CB BA 0171
        gbc.setState(0xb3cd, 0x59a2, 0x2000, 0x17b, 0xf4ba, 0x68ee, 0x1, 0x1);
        gbc.writeMem(0xb3cd, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x59a2, gbc.sp());
        EXPECT(0xb3cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3cd));
        EXPECT(0xba, gbc.readMem(0xb3ce));
        // CB BA 0172
        gbc.setState(0x19ed, 0x3798, 0x2610, 0xc9b4, 0xeeba, 0x7d7c, 0x0, 0x0);
        gbc.writeMem(0x19ed, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3798, gbc.sp());
        EXPECT(0x19ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0173
        gbc.setState(0x291a, 0xac7b, 0x1ea0, 0xb6a1, 0xe1d, 0x799d, 0x0, 0x0);
        gbc.writeMem(0x291a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xac7b, gbc.sp());
        EXPECT(0x291c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0174
        gbc.setState(0x7b34, 0x4ae3, 0x8080, 0xdabf, 0xe389, 0xea9f, 0x1, 0x0);
        gbc.writeMem(0x7b34, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4ae3, gbc.sp());
        EXPECT(0x7b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0175
        gbc.setState(0xe63c, 0xd78b, 0xac50, 0xdd2d, 0x4196, 0x2a4d, 0x0, 0x0);
        gbc.writeMem(0xe63c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd78b, gbc.sp());
        EXPECT(0xe63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe63c));
        EXPECT(0xba, gbc.readMem(0xe63d));
        // CB BA 0176
        gbc.setState(0x2921, 0xa885, 0xf220, 0x9543, 0x9218, 0x1940, 0x0, 0x0);
        gbc.writeMem(0x2921, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa885, gbc.sp());
        EXPECT(0x2923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0177
        gbc.setState(0x2ddf, 0xb8c9, 0xb890, 0x9cdc, 0xd304, 0x7379, 0x1, 0x1);
        gbc.writeMem(0x2ddf, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb8c9, gbc.sp());
        EXPECT(0x2de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0178
        gbc.setState(0xcfc4, 0x5abb, 0x7fb0, 0xc0ca, 0x47d8, 0xed11, 0x0, 0x0);
        gbc.writeMem(0xcfc4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5abb, gbc.sp());
        EXPECT(0xcfc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc4));
        EXPECT(0xba, gbc.readMem(0xcfc5));
        // CB BA 0179
        gbc.setState(0x3feb, 0x41f7, 0x8200, 0xa4e6, 0xf869, 0x80a6, 0x1, 0x0);
        gbc.writeMem(0x3feb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x41f7, gbc.sp());
        EXPECT(0x3fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 017A
        gbc.setState(0xd04c, 0x2215, 0xb290, 0xbb53, 0xa6c7, 0x7dc3, 0x1, 0x1);
        gbc.writeMem(0xd04c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2215, gbc.sp());
        EXPECT(0xd04e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd04c));
        EXPECT(0xba, gbc.readMem(0xd04d));
        // CB BA 017B
        gbc.setState(0x4c64, 0x4d6c, 0x7980, 0x5b4f, 0xae08, 0xd821, 0x1, 0x1);
        gbc.writeMem(0x4c64, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4d6c, gbc.sp());
        EXPECT(0x4c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 017C
        gbc.setState(0x107c, 0x91a4, 0x2510, 0x9915, 0xd875, 0x9f8a, 0x1, 0x1);
        gbc.writeMem(0x107c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x91a4, gbc.sp());
        EXPECT(0x107e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 017D
        gbc.setState(0x8365, 0xc375, 0xcb80, 0x7aeb, 0xec95, 0x7b26, 0x1, 0x1);
        gbc.writeMem(0x8365, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc375, gbc.sp());
        EXPECT(0x8367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8365));
        EXPECT(0xba, gbc.readMem(0x8366));
        // CB BA 017E
        gbc.setState(0xfd, 0x62e0, 0x3590, 0x214b, 0xcd44, 0x9619, 0x1, 0x0);
        gbc.writeMem(0xfd, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x62e0, gbc.sp());
        EXPECT(0xff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 017F
        gbc.setState(0x1ea1, 0x7bd2, 0x55d0, 0x1760, 0x163f, 0xf2a8, 0x1, 0x0);
        gbc.writeMem(0x1ea1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7bd2, gbc.sp());
        EXPECT(0x1ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0180
        gbc.setState(0x6548, 0x8ebf, 0x2800, 0xf64, 0x7464, 0x3f55, 0x0, 0x1);
        gbc.writeMem(0x6548, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8ebf, gbc.sp());
        EXPECT(0x654a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0181
        gbc.setState(0x489b, 0x93ea, 0x5b30, 0x8ef5, 0xd869, 0x74b8, 0x0, 0x1);
        gbc.writeMem(0x489b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x93ea, gbc.sp());
        EXPECT(0x489d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0182
        gbc.setState(0xdbb8, 0xb10b, 0xee60, 0x8f24, 0x1ce7, 0x2894, 0x1, 0x0);
        gbc.writeMem(0xdbb8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb10b, gbc.sp());
        EXPECT(0xdbba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb8));
        EXPECT(0xba, gbc.readMem(0xdbb9));
        // CB BA 0183
        gbc.setState(0x6974, 0xbf0c, 0x470, 0xf39f, 0x9747, 0xb818, 0x0, 0x1);
        gbc.writeMem(0x6974, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbf0c, gbc.sp());
        EXPECT(0x6976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0184
        gbc.setState(0x7ae7, 0x6b10, 0x4f0, 0x7f10, 0x1483, 0xe7cc, 0x0, 0x0);
        gbc.writeMem(0x7ae7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6b10, gbc.sp());
        EXPECT(0x7ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0185
        gbc.setState(0x8d7e, 0xcc26, 0xb110, 0x23a0, 0xbddd, 0x6b5a, 0x1, 0x0);
        gbc.writeMem(0x8d7e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcc26, gbc.sp());
        EXPECT(0x8d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7e));
        EXPECT(0xba, gbc.readMem(0x8d7f));
        // CB BA 0186
        gbc.setState(0xc3b9, 0x7ac4, 0xf470, 0x2d03, 0xba29, 0x785e, 0x0, 0x1);
        gbc.writeMem(0xc3b9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7ac4, gbc.sp());
        EXPECT(0xc3bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b9));
        EXPECT(0xba, gbc.readMem(0xc3ba));
        // CB BA 0187
        gbc.setState(0xbc4e, 0xfb44, 0x1f60, 0xd744, 0x2150, 0xa26b, 0x1, 0x0);
        gbc.writeMem(0xbc4e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfb44, gbc.sp());
        EXPECT(0xbc50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc4e));
        EXPECT(0xba, gbc.readMem(0xbc4f));
        // CB BA 0188
        gbc.setState(0x7b5e, 0x6846, 0x4770, 0x7ed7, 0x31, 0xf73a, 0x1, 0x1);
        gbc.writeMem(0x7b5e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6846, gbc.sp());
        EXPECT(0x7b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0189
        gbc.setState(0x19cf, 0x3809, 0x6f40, 0x9a26, 0x6c1e, 0x8a9e, 0x0, 0x0);
        gbc.writeMem(0x19cf, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3809, gbc.sp());
        EXPECT(0x19d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 018A
        gbc.setState(0x9da5, 0xd330, 0x26b0, 0x49bf, 0x21cc, 0xd176, 0x1, 0x1);
        gbc.writeMem(0x9da5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd330, gbc.sp());
        EXPECT(0x9da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da5));
        EXPECT(0xba, gbc.readMem(0x9da6));
        // CB BA 018B
        gbc.setState(0x9285, 0xc99a, 0x4290, 0x6cbe, 0x17b5, 0x20a9, 0x0, 0x0);
        gbc.writeMem(0x9285, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc99a, gbc.sp());
        EXPECT(0x9287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9285));
        EXPECT(0xba, gbc.readMem(0x9286));
        // CB BA 018C
        gbc.setState(0x1445, 0x5b20, 0xd910, 0x1851, 0xab2e, 0x5fdd, 0x1, 0x0);
        gbc.writeMem(0x1445, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5b20, gbc.sp());
        EXPECT(0x1447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 018D
        gbc.setState(0x7bc3, 0x39c3, 0x5880, 0x45e0, 0xc554, 0x97bd, 0x0, 0x1);
        gbc.writeMem(0x7bc3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x39c3, gbc.sp());
        EXPECT(0x7bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 018E
        gbc.setState(0x99e8, 0x81a2, 0xee50, 0x7f43, 0xb1cf, 0x8952, 0x1, 0x1);
        gbc.writeMem(0x99e8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x81a2, gbc.sp());
        EXPECT(0x99ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e8));
        EXPECT(0xba, gbc.readMem(0x99e9));
        // CB BA 018F
        gbc.setState(0xcbb, 0xe2c0, 0x8420, 0xd360, 0x9a35, 0x3dc8, 0x1, 0x0);
        gbc.writeMem(0xcbb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe2c0, gbc.sp());
        EXPECT(0xcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0190
        gbc.setState(0xb0a1, 0x96a1, 0xfe10, 0x2a91, 0xb6f0, 0x89ae, 0x0, 0x0);
        gbc.writeMem(0xb0a1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x96a1, gbc.sp());
        EXPECT(0xb0a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a1));
        EXPECT(0xba, gbc.readMem(0xb0a2));
        // CB BA 0191
        gbc.setState(0xb1ec, 0x4dfd, 0x4fd0, 0xecc4, 0xc810, 0x27d4, 0x1, 0x1);
        gbc.writeMem(0xb1ec, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4dfd, gbc.sp());
        EXPECT(0xb1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ec));
        EXPECT(0xba, gbc.readMem(0xb1ed));
        // CB BA 0193
        gbc.setState(0xb155, 0x75c0, 0x80, 0xd5fc, 0x429d, 0x536c, 0x0, 0x0);
        gbc.writeMem(0xb155, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x75c0, gbc.sp());
        EXPECT(0xb157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb155));
        EXPECT(0xba, gbc.readMem(0xb156));
        // CB BA 0194
        gbc.setState(0xd0ea, 0xc8bf, 0x43b0, 0x818e, 0xbbbc, 0xe84f, 0x1, 0x1);
        gbc.writeMem(0xd0ea, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc8bf, gbc.sp());
        EXPECT(0xd0ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ea));
        EXPECT(0xba, gbc.readMem(0xd0eb));
        // CB BA 0195
        gbc.setState(0xe7c7, 0x6270, 0x78d0, 0xf0ec, 0x8a76, 0xc738, 0x0, 0x1);
        gbc.writeMem(0xe7c7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6270, gbc.sp());
        EXPECT(0xe7c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c7));
        EXPECT(0xba, gbc.readMem(0xe7c8));
        // CB BA 0196
        gbc.setState(0xcd0c, 0x7fc7, 0xe120, 0x883c, 0x92c1, 0xce13, 0x1, 0x0);
        gbc.writeMem(0xcd0c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7fc7, gbc.sp());
        EXPECT(0xcd0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0c));
        EXPECT(0xba, gbc.readMem(0xcd0d));
        // CB BA 0197
        gbc.setState(0x52b8, 0xf86f, 0xdad0, 0x3526, 0x7eb5, 0xa9c9, 0x1, 0x1);
        gbc.writeMem(0x52b8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf86f, gbc.sp());
        EXPECT(0x52ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0198
        gbc.setState(0x33f6, 0xa15f, 0x8060, 0x8cb, 0x712a, 0x46bd, 0x1, 0x1);
        gbc.writeMem(0x33f6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa15f, gbc.sp());
        EXPECT(0x33f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0199
        gbc.setState(0xeb43, 0x1655, 0x8590, 0x94b1, 0x7ae5, 0x7328, 0x1, 0x1);
        gbc.writeMem(0xeb43, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1655, gbc.sp());
        EXPECT(0xeb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb43));
        EXPECT(0xba, gbc.readMem(0xeb44));
        // CB BA 019A
        gbc.setState(0xac0e, 0xacf3, 0x3950, 0x1e39, 0x8a7d, 0xaeb1, 0x1, 0x0);
        gbc.writeMem(0xac0e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xacf3, gbc.sp());
        EXPECT(0xac10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0e));
        EXPECT(0xba, gbc.readMem(0xac0f));
        // CB BA 019B
        gbc.setState(0xe6fb, 0x995, 0xad20, 0xc21d, 0xf5c5, 0x5ea8, 0x1, 0x1);
        gbc.writeMem(0xe6fb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x995, gbc.sp());
        EXPECT(0xe6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6fb));
        EXPECT(0xba, gbc.readMem(0xe6fc));
        // CB BA 019C
        gbc.setState(0xaeee, 0x8d9, 0x6c40, 0x28e9, 0x7a68, 0xddf7, 0x0, 0x0);
        gbc.writeMem(0xaeee, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8d9, gbc.sp());
        EXPECT(0xaef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeee));
        EXPECT(0xba, gbc.readMem(0xaeef));
        // CB BA 019E
        gbc.setState(0x905f, 0xd9f3, 0x64e0, 0xed57, 0x3ebf, 0xac6a, 0x0, 0x1);
        gbc.writeMem(0x905f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd9f3, gbc.sp());
        EXPECT(0x9061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905f));
        EXPECT(0xba, gbc.readMem(0x9060));
        // CB BA 019F
        gbc.setState(0xac6d, 0xaf9b, 0xb340, 0xd02d, 0xd7b6, 0x9016, 0x0, 0x0);
        gbc.writeMem(0xac6d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaf9b, gbc.sp());
        EXPECT(0xac6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac6d));
        EXPECT(0xba, gbc.readMem(0xac6e));
        // CB BA 01A0
        gbc.setState(0x9253, 0x40b6, 0xe10, 0x9caa, 0x5d83, 0x3ce5, 0x1, 0x0);
        gbc.writeMem(0x9253, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x40b6, gbc.sp());
        EXPECT(0x9255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9253));
        EXPECT(0xba, gbc.readMem(0x9254));
        // CB BA 01A1
        gbc.setState(0xe3a8, 0x6951, 0xaf40, 0x91bc, 0x88fb, 0x627b, 0x0, 0x1);
        gbc.writeMem(0xe3a8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6951, gbc.sp());
        EXPECT(0xe3aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a8));
        EXPECT(0xba, gbc.readMem(0xe3a9));
        // CB BA 01A2
        gbc.setState(0xdf6, 0x70b, 0x87d0, 0xd532, 0x7282, 0x3312, 0x0, 0x0);
        gbc.writeMem(0xdf6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x70b, gbc.sp());
        EXPECT(0xdf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01A3
        gbc.setState(0xd954, 0xe735, 0x2ea0, 0x8401, 0x21f1, 0xc490, 0x1, 0x1);
        gbc.writeMem(0xd954, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe735, gbc.sp());
        EXPECT(0xd956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd954));
        EXPECT(0xba, gbc.readMem(0xd955));
        // CB BA 01A4
        gbc.setState(0x1ee2, 0x3e4f, 0x36f0, 0x559, 0x315b, 0x584a, 0x0, 0x0);
        gbc.writeMem(0x1ee2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3e4f, gbc.sp());
        EXPECT(0x1ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01A5
        gbc.setState(0x4e7a, 0xa4e, 0xeba0, 0xb335, 0xc065, 0x5309, 0x0, 0x1);
        gbc.writeMem(0x4e7a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa4e, gbc.sp());
        EXPECT(0x4e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01A6
        gbc.setState(0x82a, 0x357f, 0x100, 0x22ea, 0xd1ce, 0xe775, 0x1, 0x0);
        gbc.writeMem(0x82a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x357f, gbc.sp());
        EXPECT(0x82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01A7
        gbc.setState(0x46c, 0x718f, 0xfd30, 0x27c7, 0x4e80, 0xe0ef, 0x1, 0x0);
        gbc.writeMem(0x46c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x718f, gbc.sp());
        EXPECT(0x46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01A8
        gbc.setState(0x12b8, 0xa9d2, 0xa6e0, 0x5a62, 0xe6da, 0x9dba, 0x0, 0x0);
        gbc.writeMem(0x12b8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa9d2, gbc.sp());
        EXPECT(0x12ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01AA
        gbc.setState(0xde7d, 0x53c6, 0x8300, 0xaadd, 0xdfa1, 0xfa19, 0x0, 0x0);
        gbc.writeMem(0xde7d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x53c6, gbc.sp());
        EXPECT(0xde7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7d));
        EXPECT(0xba, gbc.readMem(0xde7e));
        // CB BA 01AB
        gbc.setState(0x1532, 0x487d, 0x8290, 0x7fd2, 0xfadf, 0xbe35, 0x0, 0x0);
        gbc.writeMem(0x1532, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x487d, gbc.sp());
        EXPECT(0x1534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01AC
        gbc.setState(0x4c97, 0x89c1, 0x1450, 0xab8f, 0x4f5e, 0xf32b, 0x1, 0x1);
        gbc.writeMem(0x4c97, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x89c1, gbc.sp());
        EXPECT(0x4c99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01AD
        gbc.setState(0x7798, 0xad90, 0xa400, 0xe679, 0xe826, 0x8fe0, 0x0, 0x0);
        gbc.writeMem(0x7798, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xad90, gbc.sp());
        EXPECT(0x779a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01AE
        gbc.setState(0x4395, 0x95cd, 0xd620, 0x9947, 0xc3e5, 0x24be, 0x0, 0x0);
        gbc.writeMem(0x4395, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x95cd, gbc.sp());
        EXPECT(0x4397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01AF
        gbc.setState(0xc3da, 0x8f71, 0xb890, 0xf25, 0x21ee, 0x89f3, 0x0, 0x0);
        gbc.writeMem(0xc3da, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8f71, gbc.sp());
        EXPECT(0xc3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3da));
        EXPECT(0xba, gbc.readMem(0xc3db));
        // CB BA 01B0
        gbc.setState(0x7b70, 0x114a, 0x27f0, 0x1559, 0x55f1, 0xfde8, 0x0, 0x1);
        gbc.writeMem(0x7b70, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x114a, gbc.sp());
        EXPECT(0x7b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01B1
        gbc.setState(0x861e, 0xb875, 0x6300, 0x282b, 0xb907, 0xac85, 0x1, 0x1);
        gbc.writeMem(0x861e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb875, gbc.sp());
        EXPECT(0x8620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x861e));
        EXPECT(0xba, gbc.readMem(0x861f));
        // CB BA 01B2
        gbc.setState(0xb55a, 0x817d, 0x2320, 0x78c8, 0x58a9, 0xc4d7, 0x1, 0x0);
        gbc.writeMem(0xb55a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x817d, gbc.sp());
        EXPECT(0xb55c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb55a));
        EXPECT(0xba, gbc.readMem(0xb55b));
        // CB BA 01B3
        gbc.setState(0xc1c4, 0x489, 0x97f0, 0x1a46, 0xdd98, 0xdcbc, 0x0, 0x1);
        gbc.writeMem(0xc1c4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x489, gbc.sp());
        EXPECT(0xc1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c4));
        EXPECT(0xba, gbc.readMem(0xc1c5));
        // CB BA 01B4
        gbc.setState(0x90ca, 0xccba, 0x7920, 0xb8b7, 0x6fef, 0x931f, 0x1, 0x1);
        gbc.writeMem(0x90ca, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xccba, gbc.sp());
        EXPECT(0x90cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ca));
        EXPECT(0xba, gbc.readMem(0x90cb));
        // CB BA 01B5
        gbc.setState(0x3b89, 0xd256, 0x9640, 0x98d0, 0xe31d, 0xef50, 0x0, 0x1);
        gbc.writeMem(0x3b89, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd256, gbc.sp());
        EXPECT(0x3b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01B6
        gbc.setState(0xa64, 0x6a82, 0x4090, 0xbe69, 0xc93c, 0x1146, 0x1, 0x1);
        gbc.writeMem(0xa64, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6a82, gbc.sp());
        EXPECT(0xa66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01B7
        gbc.setState(0xaf32, 0xd283, 0xa680, 0x5a02, 0xde4a, 0x5bea, 0x1, 0x1);
        gbc.writeMem(0xaf32, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd283, gbc.sp());
        EXPECT(0xaf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf32));
        EXPECT(0xba, gbc.readMem(0xaf33));
        // CB BA 01B8
        gbc.setState(0x1785, 0xa05e, 0x2fd0, 0xc4df, 0x6c76, 0xba93, 0x1, 0x0);
        gbc.writeMem(0x1785, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa05e, gbc.sp());
        EXPECT(0x1787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01B9
        gbc.setState(0xca0b, 0xa2d6, 0x93a0, 0xede3, 0x6ed0, 0x23bc, 0x0, 0x1);
        gbc.writeMem(0xca0b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa2d6, gbc.sp());
        EXPECT(0xca0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca0b));
        EXPECT(0xba, gbc.readMem(0xca0c));
        // CB BA 01BA
        gbc.setState(0x7b58, 0xa1ea, 0x9d50, 0x8132, 0xc41d, 0xc3d6, 0x1, 0x0);
        gbc.writeMem(0x7b58, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa1ea, gbc.sp());
        EXPECT(0x7b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01BC
        gbc.setState(0x6c0f, 0xe48d, 0x3fb0, 0xaf32, 0x72f, 0x6ac8, 0x1, 0x1);
        gbc.writeMem(0x6c0f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe48d, gbc.sp());
        EXPECT(0x6c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01BD
        gbc.setState(0xe71a, 0xb9ab, 0x4b80, 0x8ccf, 0xc0ef, 0xdc5d, 0x0, 0x0);
        gbc.writeMem(0xe71a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb9ab, gbc.sp());
        EXPECT(0xe71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71a));
        EXPECT(0xba, gbc.readMem(0xe71b));
        // CB BA 01BE
        gbc.setState(0x513f, 0xc9c7, 0xed40, 0x48a0, 0x5357, 0x6d72, 0x1, 0x1);
        gbc.writeMem(0x513f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc9c7, gbc.sp());
        EXPECT(0x5141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01BF
        gbc.setState(0x4c3, 0x46dc, 0x8c00, 0x3d36, 0x7358, 0x6831, 0x1, 0x1);
        gbc.writeMem(0x4c3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x46dc, gbc.sp());
        EXPECT(0x4c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01C1
        gbc.setState(0xfd4, 0xb90f, 0xed50, 0x7bed, 0xb7ea, 0x5283, 0x0, 0x0);
        gbc.writeMem(0xfd4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb90f, gbc.sp());
        EXPECT(0xfd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01C2
        gbc.setState(0xd31d, 0x89fa, 0x8290, 0x2f50, 0x86f5, 0x3ca1, 0x1, 0x0);
        gbc.writeMem(0xd31d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x89fa, gbc.sp());
        EXPECT(0xd31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd31d));
        EXPECT(0xba, gbc.readMem(0xd31e));
        // CB BA 01C5
        gbc.setState(0x38bb, 0xac0d, 0x8600, 0x88ec, 0xe793, 0xeec, 0x0, 0x0);
        gbc.writeMem(0x38bb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xac0d, gbc.sp());
        EXPECT(0x38bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01C6
        gbc.setState(0x68fd, 0xaf7d, 0xa6e0, 0xdb90, 0x373b, 0xf9ba, 0x1, 0x1);
        gbc.writeMem(0x68fd, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xaf7d, gbc.sp());
        EXPECT(0x68ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01C7
        gbc.setState(0x8cc4, 0x39aa, 0x28d0, 0xf771, 0xe9bb, 0xfab6, 0x1, 0x1);
        gbc.writeMem(0x8cc4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x39aa, gbc.sp());
        EXPECT(0x8cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc4));
        EXPECT(0xba, gbc.readMem(0x8cc5));
        // CB BA 01C8
        gbc.setState(0x6ef7, 0xb81, 0xc4c0, 0x6ee8, 0x782a, 0x8717, 0x1, 0x0);
        gbc.writeMem(0x6ef7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb81, gbc.sp());
        EXPECT(0x6ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01CA
        gbc.setState(0x116e, 0xc8a3, 0xfe80, 0x973e, 0xf9b, 0x2dad, 0x1, 0x1);
        gbc.writeMem(0x116e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc8a3, gbc.sp());
        EXPECT(0x1170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01CB
        gbc.setState(0x6437, 0x29d3, 0xd2f0, 0xd24c, 0x62b4, 0x4363, 0x1, 0x0);
        gbc.writeMem(0x6437, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x29d3, gbc.sp());
        EXPECT(0x6439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01CC
        gbc.setState(0x8d86, 0xdeef, 0x7880, 0x58d1, 0x878b, 0xb30d, 0x1, 0x0);
        gbc.writeMem(0x8d86, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdeef, gbc.sp());
        EXPECT(0x8d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d86));
        EXPECT(0xba, gbc.readMem(0x8d87));
        // CB BA 01CD
        gbc.setState(0x2d61, 0x85fb, 0xcd40, 0x9919, 0x78db, 0xea05, 0x0, 0x0);
        gbc.writeMem(0x2d61, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x85fb, gbc.sp());
        EXPECT(0x2d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01CE
        gbc.setState(0xc4f3, 0x6c1, 0x2300, 0xd2a1, 0x1a7f, 0x6fc, 0x1, 0x1);
        gbc.writeMem(0xc4f3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6c1, gbc.sp());
        EXPECT(0xc4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f3));
        EXPECT(0xba, gbc.readMem(0xc4f4));
        // CB BA 01CF
        gbc.setState(0x6dcb, 0x354f, 0xfce0, 0x1148, 0x7be7, 0x50a0, 0x0, 0x1);
        gbc.writeMem(0x6dcb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x354f, gbc.sp());
        EXPECT(0x6dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01D0
        gbc.setState(0x7db1, 0xf33e, 0x9c10, 0xeb5, 0xd6d5, 0xc66c, 0x1, 0x0);
        gbc.writeMem(0x7db1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf33e, gbc.sp());
        EXPECT(0x7db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01D1
        gbc.setState(0x85be, 0xd658, 0x4940, 0xb50, 0xc15e, 0x7013, 0x1, 0x0);
        gbc.writeMem(0x85be, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd658, gbc.sp());
        EXPECT(0x85c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85be));
        EXPECT(0xba, gbc.readMem(0x85bf));
        // CB BA 01D2
        gbc.setState(0x2e4d, 0x907d, 0x6e50, 0x44e2, 0x74f4, 0x5c9c, 0x1, 0x1);
        gbc.writeMem(0x2e4d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x907d, gbc.sp());
        EXPECT(0x2e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01D3
        gbc.setState(0xc6d2, 0x3f9, 0x1880, 0x5a14, 0x625b, 0xf59b, 0x1, 0x0);
        gbc.writeMem(0xc6d2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3f9, gbc.sp());
        EXPECT(0xc6d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d2));
        EXPECT(0xba, gbc.readMem(0xc6d3));
        // CB BA 01D4
        gbc.setState(0x23a, 0x56d1, 0x5da0, 0xd708, 0xf1f5, 0xedea, 0x0, 0x0);
        gbc.writeMem(0x23a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x56d1, gbc.sp());
        EXPECT(0x23c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01D5
        gbc.setState(0x7dae, 0x7754, 0x2bc0, 0xfe73, 0xa6a1, 0xd366, 0x1, 0x1);
        gbc.writeMem(0x7dae, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7754, gbc.sp());
        EXPECT(0x7db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01D7
        gbc.setState(0x6aec, 0xfde8, 0xc950, 0xaced, 0xf5c1, 0xb62e, 0x0, 0x0);
        gbc.writeMem(0x6aec, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfde8, gbc.sp());
        EXPECT(0x6aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01D8
        gbc.setState(0xe5e6, 0xd1b0, 0xfaa0, 0xce67, 0x7cc3, 0x13f1, 0x0, 0x1);
        gbc.writeMem(0xe5e6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd1b0, gbc.sp());
        EXPECT(0xe5e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e6));
        EXPECT(0xba, gbc.readMem(0xe5e7));
        // CB BA 01D9
        gbc.setState(0xedbd, 0xf0cf, 0x8fb0, 0x2095, 0x7da2, 0xa53d, 0x0, 0x0);
        gbc.writeMem(0xedbd, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf0cf, gbc.sp());
        EXPECT(0xedbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedbd));
        EXPECT(0xba, gbc.readMem(0xedbe));
        // CB BA 01DA
        gbc.setState(0x11e8, 0x7920, 0x10a0, 0x6f74, 0x8f3d, 0x64c9, 0x1, 0x1);
        gbc.writeMem(0x11e8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7920, gbc.sp());
        EXPECT(0x11ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01DB
        gbc.setState(0x5a71, 0x7102, 0xd870, 0x105a, 0x2643, 0x2fef, 0x1, 0x1);
        gbc.writeMem(0x5a71, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7102, gbc.sp());
        EXPECT(0x5a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01DC
        gbc.setState(0xf17, 0xd3a, 0xdcb0, 0xcdcb, 0xa66d, 0x1dfe, 0x1, 0x0);
        gbc.writeMem(0xf17, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd3a, gbc.sp());
        EXPECT(0xf19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01DE
        gbc.setState(0xaeb9, 0x847f, 0x3cb0, 0xb0b6, 0xa774, 0x3c34, 0x0, 0x0);
        gbc.writeMem(0xaeb9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x847f, gbc.sp());
        EXPECT(0xaebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb9));
        EXPECT(0xba, gbc.readMem(0xaeba));
        // CB BA 01DF
        gbc.setState(0x7f16, 0xd92c, 0xa200, 0xf757, 0x3075, 0x6db9, 0x1, 0x1);
        gbc.writeMem(0x7f16, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd92c, gbc.sp());
        EXPECT(0x7f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01E1
        gbc.setState(0x4cb1, 0x7076, 0xf200, 0x742d, 0xb27e, 0xcf0e, 0x1, 0x1);
        gbc.writeMem(0x4cb1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7076, gbc.sp());
        EXPECT(0x4cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01E2
        gbc.setState(0xd7bc, 0xd17f, 0xdbc0, 0x9c20, 0xdf44, 0x7ebd, 0x1, 0x0);
        gbc.writeMem(0xd7bc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd17f, gbc.sp());
        EXPECT(0xd7be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7bc));
        EXPECT(0xba, gbc.readMem(0xd7bd));
        // CB BA 01E3
        gbc.setState(0x61d6, 0x230e, 0xf9e0, 0x1afa, 0x22b2, 0x6f67, 0x1, 0x1);
        gbc.writeMem(0x61d6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x230e, gbc.sp());
        EXPECT(0x61d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01E4
        gbc.setState(0xf4d, 0xf0bb, 0x5a90, 0x8a05, 0xe92, 0xe885, 0x0, 0x0);
        gbc.writeMem(0xf4d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf0bb, gbc.sp());
        EXPECT(0xf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01E5
        gbc.setState(0x6618, 0x24e3, 0xdb10, 0x6adc, 0x6ac4, 0x3737, 0x1, 0x0);
        gbc.writeMem(0x6618, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x24e3, gbc.sp());
        EXPECT(0x661a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01E6
        gbc.setState(0x3354, 0xdc54, 0xf390, 0x35e8, 0x682b, 0x37ac, 0x0, 0x1);
        gbc.writeMem(0x3354, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdc54, gbc.sp());
        EXPECT(0x3356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01E7
        gbc.setState(0xd0, 0x93b1, 0x58a0, 0x530b, 0x3260, 0x80fe, 0x0, 0x0);
        gbc.writeMem(0xd0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x93b1, gbc.sp());
        EXPECT(0xd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01E8
        gbc.setState(0x4901, 0xef29, 0x890, 0x344d, 0x1dca, 0x71cd, 0x1, 0x1);
        gbc.writeMem(0x4901, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xef29, gbc.sp());
        EXPECT(0x4903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01E9
        gbc.setState(0x3224, 0xe733, 0x2680, 0x186f, 0xc13a, 0x1220, 0x1, 0x1);
        gbc.writeMem(0x3224, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe733, gbc.sp());
        EXPECT(0x3226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01EB
        gbc.setState(0xd299, 0x93ff, 0xfa70, 0x48e1, 0x13c3, 0x3124, 0x1, 0x0);
        gbc.writeMem(0xd299, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x93ff, gbc.sp());
        EXPECT(0xd29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd299));
        EXPECT(0xba, gbc.readMem(0xd29a));
        // CB BA 01EC
        gbc.setState(0x51d1, 0x96e8, 0x1a50, 0xdc5b, 0x8ec3, 0x2f5b, 0x1, 0x1);
        gbc.writeMem(0x51d1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x96e8, gbc.sp());
        EXPECT(0x51d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01ED
        gbc.setState(0x8fa4, 0xca80, 0x25a0, 0xcb71, 0xfb66, 0xb55, 0x1, 0x0);
        gbc.writeMem(0x8fa4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xca80, gbc.sp());
        EXPECT(0x8fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa4));
        EXPECT(0xba, gbc.readMem(0x8fa5));
        // CB BA 01EE
        gbc.setState(0x4cbe, 0x1308, 0x7120, 0x3280, 0x3a26, 0x6a7b, 0x1, 0x0);
        gbc.writeMem(0x4cbe, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1308, gbc.sp());
        EXPECT(0x4cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01EF
        gbc.setState(0x88ca, 0x3efe, 0x7750, 0x55a3, 0x9ce7, 0xdf79, 0x1, 0x1);
        gbc.writeMem(0x88ca, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3efe, gbc.sp());
        EXPECT(0x88cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ca));
        EXPECT(0xba, gbc.readMem(0x88cb));
        // CB BA 01F0
        gbc.setState(0x30de, 0x176c, 0x3d10, 0xf361, 0x73bb, 0xdea6, 0x1, 0x1);
        gbc.writeMem(0x30de, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x176c, gbc.sp());
        EXPECT(0x30e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01F1
        gbc.setState(0xc450, 0xf472, 0x3050, 0x87d0, 0xe729, 0xfa29, 0x1, 0x1);
        gbc.writeMem(0xc450, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf472, gbc.sp());
        EXPECT(0xc452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc450));
        EXPECT(0xba, gbc.readMem(0xc451));
        // CB BA 01F2
        gbc.setState(0x569b, 0x52a7, 0x5c90, 0xc817, 0xf34c, 0x7210, 0x0, 0x1);
        gbc.writeMem(0x569b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x52a7, gbc.sp());
        EXPECT(0x569d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01F3
        gbc.setState(0x6b39, 0x685a, 0x73a0, 0x6987, 0xacbd, 0xef76, 0x0, 0x1);
        gbc.writeMem(0x6b39, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x685a, gbc.sp());
        EXPECT(0x6b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01F4
        gbc.setState(0xe9d3, 0x99b7, 0x5b30, 0x629b, 0xf930, 0xdb2b, 0x0, 0x1);
        gbc.writeMem(0xe9d3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x99b7, gbc.sp());
        EXPECT(0xe9d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d3));
        EXPECT(0xba, gbc.readMem(0xe9d4));
        // CB BA 01F5
        gbc.setState(0x9cc3, 0xfcaf, 0x6a30, 0xfb70, 0x22ad, 0xc7e0, 0x1, 0x0);
        gbc.writeMem(0x9cc3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfcaf, gbc.sp());
        EXPECT(0x9cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc3));
        EXPECT(0xba, gbc.readMem(0x9cc4));
        // CB BA 01F6
        gbc.setState(0x7639, 0x654c, 0x6af0, 0xf2ae, 0x7df9, 0xdb5f, 0x1, 0x1);
        gbc.writeMem(0x7639, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x654c, gbc.sp());
        EXPECT(0x763b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01F7
        gbc.setState(0x2c5c, 0x7f7e, 0x49f0, 0x2a71, 0xf3fc, 0x65b2, 0x1, 0x1);
        gbc.writeMem(0x2c5c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7f7e, gbc.sp());
        EXPECT(0x2c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01F8
        gbc.setState(0x4c91, 0x2877, 0x1420, 0x14, 0x319, 0x3528, 0x0, 0x0);
        gbc.writeMem(0x4c91, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2877, gbc.sp());
        EXPECT(0x4c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 01F9
        gbc.setState(0xc6f5, 0xf410, 0x8470, 0x6dd6, 0xf4bd, 0xc85a, 0x1, 0x0);
        gbc.writeMem(0xc6f5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf410, gbc.sp());
        EXPECT(0xc6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f5));
        EXPECT(0xba, gbc.readMem(0xc6f6));
        // CB BA 01FA
        gbc.setState(0x3df4, 0xf800, 0xa1f0, 0xce9f, 0x5ab1, 0x53ec, 0x1, 0x0);
        gbc.writeMem(0x3df4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf800, gbc.sp());
        EXPECT(0x3df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 01FB
        gbc.setState(0x8a92, 0xec77, 0x400, 0x4ed5, 0x6ef0, 0x5ee9, 0x0, 0x0);
        gbc.writeMem(0x8a92, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xec77, gbc.sp());
        EXPECT(0x8a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a92));
        EXPECT(0xba, gbc.readMem(0x8a93));
        // CB BA 01FC
        gbc.setState(0xd1a8, 0xded, 0x61d0, 0x75de, 0xdac8, 0xa29d, 0x1, 0x1);
        gbc.writeMem(0xd1a8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xded, gbc.sp());
        EXPECT(0xd1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a8));
        EXPECT(0xba, gbc.readMem(0xd1a9));
        // CB BA 01FE
        gbc.setState(0xa5b2, 0x1570, 0x47e0, 0x5802, 0x70a8, 0x95f4, 0x1, 0x1);
        gbc.writeMem(0xa5b2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1570, gbc.sp());
        EXPECT(0xa5b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b2));
        EXPECT(0xba, gbc.readMem(0xa5b3));
        // CB BA 01FF
        gbc.setState(0x9de0, 0xdf59, 0xe620, 0x542c, 0x3e06, 0x40f, 0x1, 0x1);
        gbc.writeMem(0x9de0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdf59, gbc.sp());
        EXPECT(0x9de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de0));
        EXPECT(0xba, gbc.readMem(0x9de1));
        // CB BA 0200
        gbc.setState(0x2235, 0x4813, 0x4460, 0x678b, 0xe1b7, 0x755b, 0x1, 0x0);
        gbc.writeMem(0x2235, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4813, gbc.sp());
        EXPECT(0x2237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0201
        gbc.setState(0xe0b3, 0xad95, 0x9880, 0x1199, 0x29e7, 0xd4fd, 0x0, 0x1);
        gbc.writeMem(0xe0b3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xad95, gbc.sp());
        EXPECT(0xe0b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b3));
        EXPECT(0xba, gbc.readMem(0xe0b4));
        // CB BA 0202
        gbc.setState(0x3e2d, 0x5f6f, 0xfda0, 0x76fc, 0xc3d3, 0xe1f0, 0x1, 0x1);
        gbc.writeMem(0x3e2d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5f6f, gbc.sp());
        EXPECT(0x3e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0203
        gbc.setState(0x64cc, 0x8457, 0x47e0, 0xc7e2, 0x3164, 0x37ad, 0x1, 0x0);
        gbc.writeMem(0x64cc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8457, gbc.sp());
        EXPECT(0x64ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0204
        gbc.setState(0xa337, 0xf5a7, 0x9070, 0xa3df, 0x6982, 0xc3ba, 0x0, 0x1);
        gbc.writeMem(0xa337, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf5a7, gbc.sp());
        EXPECT(0xa339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa337));
        EXPECT(0xba, gbc.readMem(0xa338));
        // CB BA 0205
        gbc.setState(0x22b5, 0x86c4, 0x48a0, 0x50ed, 0xba1e, 0xa281, 0x1, 0x1);
        gbc.writeMem(0x22b5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x86c4, gbc.sp());
        EXPECT(0x22b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0206
        gbc.setState(0xdf24, 0xa2ed, 0x95a0, 0xf70d, 0x1f3d, 0x9446, 0x1, 0x1);
        gbc.writeMem(0xdf24, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa2ed, gbc.sp());
        EXPECT(0xdf26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf24));
        EXPECT(0xba, gbc.readMem(0xdf25));
        // CB BA 0207
        gbc.setState(0x3e3f, 0xbcde, 0x7e10, 0x71b, 0x3b47, 0xe5ab, 0x0, 0x0);
        gbc.writeMem(0x3e3f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbcde, gbc.sp());
        EXPECT(0x3e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0208
        gbc.setState(0x3606, 0x1887, 0xbbb0, 0x9a28, 0x87f2, 0xfd52, 0x1, 0x1);
        gbc.writeMem(0x3606, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1887, gbc.sp());
        EXPECT(0x3608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0209
        gbc.setState(0x48e2, 0x28b7, 0x78f0, 0xb534, 0xe37a, 0x1dae, 0x0, 0x0);
        gbc.writeMem(0x48e2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x28b7, gbc.sp());
        EXPECT(0x48e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 020A
        gbc.setState(0xbf57, 0x22d8, 0x6490, 0x5e04, 0x2ce1, 0xae1f, 0x0, 0x0);
        gbc.writeMem(0xbf57, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x22d8, gbc.sp());
        EXPECT(0xbf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf57));
        EXPECT(0xba, gbc.readMem(0xbf58));
        // CB BA 020B
        gbc.setState(0xdf07, 0x426f, 0xfd20, 0x387c, 0x4c55, 0xd5c9, 0x0, 0x0);
        gbc.writeMem(0xdf07, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x426f, gbc.sp());
        EXPECT(0xdf09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf07));
        EXPECT(0xba, gbc.readMem(0xdf08));
        // CB BA 020C
        gbc.setState(0x3d03, 0xbc56, 0x2b00, 0x8ae6, 0x435c, 0xa5fc, 0x1, 0x0);
        gbc.writeMem(0x3d03, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbc56, gbc.sp());
        EXPECT(0x3d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 020D
        gbc.setState(0x82a7, 0xccb4, 0x9b20, 0xfeb9, 0xdc54, 0xd1cc, 0x1, 0x1);
        gbc.writeMem(0x82a7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xccb4, gbc.sp());
        EXPECT(0x82a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a7));
        EXPECT(0xba, gbc.readMem(0x82a8));
        // CB BA 020E
        gbc.setState(0x8de1, 0xcaaa, 0xa00, 0xe721, 0x501, 0x79f2, 0x1, 0x0);
        gbc.writeMem(0x8de1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcaaa, gbc.sp());
        EXPECT(0x8de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de1));
        EXPECT(0xba, gbc.readMem(0x8de2));
        // CB BA 020F
        gbc.setState(0xdeb, 0x4466, 0x41d0, 0x281f, 0x23f8, 0x5cb3, 0x0, 0x1);
        gbc.writeMem(0xdeb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4466, gbc.sp());
        EXPECT(0xded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0210
        gbc.setState(0x1da6, 0x285c, 0xa590, 0xea45, 0x62e4, 0xb5ad, 0x1, 0x0);
        gbc.writeMem(0x1da6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x285c, gbc.sp());
        EXPECT(0x1da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0211
        gbc.setState(0xc162, 0x87e, 0x9560, 0xb87d, 0xeb13, 0xe50, 0x1, 0x1);
        gbc.writeMem(0xc162, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x87e, gbc.sp());
        EXPECT(0xc164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc162));
        EXPECT(0xba, gbc.readMem(0xc163));
        // CB BA 0212
        gbc.setState(0xa57a, 0x9da2, 0xcbf0, 0x7d5, 0xb822, 0x66af, 0x1, 0x1);
        gbc.writeMem(0xa57a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9da2, gbc.sp());
        EXPECT(0xa57c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57a));
        EXPECT(0xba, gbc.readMem(0xa57b));
        // CB BA 0214
        gbc.setState(0x3ea1, 0x23df, 0x6450, 0xa1ce, 0xa3ee, 0xf450, 0x0, 0x0);
        gbc.writeMem(0x3ea1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x23df, gbc.sp());
        EXPECT(0x3ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0216
        gbc.setState(0x8653, 0x9c49, 0x8a20, 0x72a2, 0x2781, 0x8765, 0x0, 0x0);
        gbc.writeMem(0x8653, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9c49, gbc.sp());
        EXPECT(0x8655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8653));
        EXPECT(0xba, gbc.readMem(0x8654));
        // CB BA 0217
        gbc.setState(0xc3e0, 0xc376, 0x1d30, 0x2c05, 0x9a8, 0x8ded, 0x1, 0x0);
        gbc.writeMem(0xc3e0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc376, gbc.sp());
        EXPECT(0xc3e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3e0));
        EXPECT(0xba, gbc.readMem(0xc3e1));
        // CB BA 0218
        gbc.setState(0xb8fb, 0xca00, 0xf700, 0xf2be, 0x4bc5, 0x1eab, 0x1, 0x1);
        gbc.writeMem(0xb8fb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xca00, gbc.sp());
        EXPECT(0xb8fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fb));
        EXPECT(0xba, gbc.readMem(0xb8fc));
        // CB BA 021A
        gbc.setState(0xc6f9, 0x9204, 0x7b30, 0xb239, 0x2eca, 0x25b0, 0x0, 0x1);
        gbc.writeMem(0xc6f9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9204, gbc.sp());
        EXPECT(0xc6fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f9));
        EXPECT(0xba, gbc.readMem(0xc6fa));
        // CB BA 021B
        gbc.setState(0xd5f3, 0xeb12, 0x3390, 0xbdf8, 0x7544, 0x4581, 0x0, 0x0);
        gbc.writeMem(0xd5f3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xeb12, gbc.sp());
        EXPECT(0xd5f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5f3));
        EXPECT(0xba, gbc.readMem(0xd5f4));
        // CB BA 021C
        gbc.setState(0xae09, 0x9b14, 0x4410, 0x3055, 0x1984, 0xfa2d, 0x1, 0x0);
        gbc.writeMem(0xae09, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9b14, gbc.sp());
        EXPECT(0xae0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae09));
        EXPECT(0xba, gbc.readMem(0xae0a));
        // CB BA 021D
        gbc.setState(0x6176, 0x12d9, 0xdfd0, 0x8fac, 0x7150, 0x9988, 0x1, 0x1);
        gbc.writeMem(0x6176, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x12d9, gbc.sp());
        EXPECT(0x6178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 021E
        gbc.setState(0xce58, 0x757f, 0x9b30, 0x5cdf, 0xa716, 0xc742, 0x1, 0x1);
        gbc.writeMem(0xce58, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x757f, gbc.sp());
        EXPECT(0xce5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce58));
        EXPECT(0xba, gbc.readMem(0xce59));
        // CB BA 021F
        gbc.setState(0x30f3, 0x5995, 0xa410, 0xa4f8, 0xd93, 0x7f0e, 0x1, 0x0);
        gbc.writeMem(0x30f3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5995, gbc.sp());
        EXPECT(0x30f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0220
        gbc.setState(0xd614, 0x84d0, 0x2f20, 0xdb3, 0xb3d7, 0x2566, 0x1, 0x0);
        gbc.writeMem(0xd614, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x84d0, gbc.sp());
        EXPECT(0xd616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd614));
        EXPECT(0xba, gbc.readMem(0xd615));
        // CB BA 0221
        gbc.setState(0xa48a, 0xcd96, 0xea20, 0x3133, 0x2660, 0xdf6d, 0x0, 0x1);
        gbc.writeMem(0xa48a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcd96, gbc.sp());
        EXPECT(0xa48c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa48a));
        EXPECT(0xba, gbc.readMem(0xa48b));
        // CB BA 0222
        gbc.setState(0x43f9, 0x2bf6, 0xec0, 0x41cb, 0x2ae5, 0xea10, 0x0, 0x1);
        gbc.writeMem(0x43f9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2bf6, gbc.sp());
        EXPECT(0x43fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0223
        gbc.setState(0x867, 0xbdc4, 0xced0, 0x35c8, 0x21e, 0xa8d, 0x1, 0x0);
        gbc.writeMem(0x867, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbdc4, gbc.sp());
        EXPECT(0x869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0224
        gbc.setState(0x57a0, 0xd083, 0x9950, 0x8202, 0x32fa, 0x620d, 0x1, 0x0);
        gbc.writeMem(0x57a0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd083, gbc.sp());
        EXPECT(0x57a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0225
        gbc.setState(0x5e38, 0x6c5d, 0x9590, 0x1051, 0x979a, 0x4c49, 0x0, 0x1);
        gbc.writeMem(0x5e38, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6c5d, gbc.sp());
        EXPECT(0x5e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0226
        gbc.setState(0x309c, 0x926a, 0xa640, 0x821b, 0x3ee4, 0xd6f7, 0x1, 0x1);
        gbc.writeMem(0x309c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x926a, gbc.sp());
        EXPECT(0x309e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0227
        gbc.setState(0x541a, 0xfec3, 0xa0b0, 0x7f68, 0x95f6, 0x615e, 0x1, 0x0);
        gbc.writeMem(0x541a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfec3, gbc.sp());
        EXPECT(0x541c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0228
        gbc.setState(0x7195, 0xa0a2, 0x5750, 0x855c, 0x3d5d, 0x28c7, 0x1, 0x1);
        gbc.writeMem(0x7195, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa0a2, gbc.sp());
        EXPECT(0x7197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0229
        gbc.setState(0x131b, 0x9ffe, 0x1480, 0x914a, 0xc5e3, 0x57f3, 0x0, 0x1);
        gbc.writeMem(0x131b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9ffe, gbc.sp());
        EXPECT(0x131d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 022A
        gbc.setState(0xef2e, 0xef46, 0xe5f0, 0xee94, 0xd0f0, 0x62a6, 0x0, 0x1);
        gbc.writeMem(0xef2e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xef46, gbc.sp());
        EXPECT(0xef30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef2e));
        EXPECT(0xba, gbc.readMem(0xef2f));
        // CB BA 022B
        gbc.setState(0xdc83, 0x53dc, 0xc910, 0x6b7e, 0x50f7, 0x57be, 0x0, 0x0);
        gbc.writeMem(0xdc83, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x53dc, gbc.sp());
        EXPECT(0xdc85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc83));
        EXPECT(0xba, gbc.readMem(0xdc84));
        // CB BA 022C
        gbc.setState(0x29d7, 0x9c47, 0x2250, 0xb8e3, 0xaa48, 0x64fe, 0x1, 0x1);
        gbc.writeMem(0x29d7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9c47, gbc.sp());
        EXPECT(0x29d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 022D
        gbc.setState(0xe0cc, 0x200b, 0x8390, 0x5d41, 0xdfe8, 0xd1f1, 0x0, 0x0);
        gbc.writeMem(0xe0cc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x200b, gbc.sp());
        EXPECT(0xe0ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0cc));
        EXPECT(0xba, gbc.readMem(0xe0cd));
        // CB BA 022E
        gbc.setState(0x8730, 0x845e, 0x8720, 0xa670, 0xab38, 0xbd4f, 0x0, 0x0);
        gbc.writeMem(0x8730, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x845e, gbc.sp());
        EXPECT(0x8732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8730));
        EXPECT(0xba, gbc.readMem(0x8731));
        // CB BA 022F
        gbc.setState(0x13bf, 0xc141, 0x2160, 0x7771, 0xa176, 0xee11, 0x0, 0x1);
        gbc.writeMem(0x13bf, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc141, gbc.sp());
        EXPECT(0x13c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0230
        gbc.setState(0x3e24, 0x86ba, 0xe3c0, 0xb441, 0x3e42, 0x2206, 0x1, 0x1);
        gbc.writeMem(0x3e24, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x86ba, gbc.sp());
        EXPECT(0x3e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0231
        gbc.setState(0xd024, 0xf2bf, 0x6030, 0x4298, 0xe9f0, 0x3585, 0x0, 0x1);
        gbc.writeMem(0xd024, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf2bf, gbc.sp());
        EXPECT(0xd026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd024));
        EXPECT(0xba, gbc.readMem(0xd025));
        // CB BA 0232
        gbc.setState(0x7287, 0x1ecc, 0x3ec0, 0xcd94, 0xa5f1, 0x3a0, 0x1, 0x1);
        gbc.writeMem(0x7287, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1ecc, gbc.sp());
        EXPECT(0x7289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0233
        gbc.setState(0xa4b3, 0x6e1c, 0xbc40, 0xf36c, 0x9acb, 0x3189, 0x1, 0x0);
        gbc.writeMem(0xa4b3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6e1c, gbc.sp());
        EXPECT(0xa4b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b3));
        EXPECT(0xba, gbc.readMem(0xa4b4));
        // CB BA 0234
        gbc.setState(0x3e73, 0x10bc, 0xa170, 0x8e9f, 0x3a94, 0x554c, 0x1, 0x1);
        gbc.writeMem(0x3e73, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x10bc, gbc.sp());
        EXPECT(0x3e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0235
        gbc.setState(0xb394, 0x9e4, 0xda0, 0x63a7, 0xb086, 0x5ae9, 0x0, 0x0);
        gbc.writeMem(0xb394, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9e4, gbc.sp());
        EXPECT(0xb396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb394));
        EXPECT(0xba, gbc.readMem(0xb395));
        // CB BA 0236
        gbc.setState(0x9004, 0x1666, 0xe140, 0x73b0, 0x42c5, 0x1015, 0x0, 0x0);
        gbc.writeMem(0x9004, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1666, gbc.sp());
        EXPECT(0x9006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9004));
        EXPECT(0xba, gbc.readMem(0x9005));
        // CB BA 0237
        gbc.setState(0x555c, 0xb667, 0x4f90, 0xdf2d, 0xc5d0, 0x760b, 0x0, 0x1);
        gbc.writeMem(0x555c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb667, gbc.sp());
        EXPECT(0x555e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0238
        gbc.setState(0xa11b, 0x2611, 0x3af0, 0xd39, 0x6130, 0x93ff, 0x1, 0x0);
        gbc.writeMem(0xa11b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2611, gbc.sp());
        EXPECT(0xa11d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa11b));
        EXPECT(0xba, gbc.readMem(0xa11c));
        // CB BA 0239
        gbc.setState(0xd502, 0xda17, 0x4380, 0xa91, 0xdfb, 0xb4b4, 0x0, 0x0);
        gbc.writeMem(0xd502, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xda17, gbc.sp());
        EXPECT(0xd504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd502));
        EXPECT(0xba, gbc.readMem(0xd503));
        // CB BA 023A
        gbc.setState(0x28c0, 0x36b, 0x84a0, 0x5ca3, 0x10c0, 0x1663, 0x0, 0x1);
        gbc.writeMem(0x28c0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x36b, gbc.sp());
        EXPECT(0x28c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 023B
        gbc.setState(0x518, 0x600d, 0x7400, 0x7aa4, 0x9eb9, 0x54, 0x1, 0x0);
        gbc.writeMem(0x518, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x600d, gbc.sp());
        EXPECT(0x51a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 023D
        gbc.setState(0x76e5, 0x3cc9, 0x9b90, 0xf055, 0x5232, 0x14f3, 0x1, 0x0);
        gbc.writeMem(0x76e5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3cc9, gbc.sp());
        EXPECT(0x76e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 023E
        gbc.setState(0xa4fa, 0x2d96, 0xcc00, 0xfc23, 0x5059, 0xe8a6, 0x1, 0x0);
        gbc.writeMem(0xa4fa, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2d96, gbc.sp());
        EXPECT(0xa4fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4fa));
        EXPECT(0xba, gbc.readMem(0xa4fb));
        // CB BA 023F
        gbc.setState(0xe411, 0x7dbe, 0x6b60, 0xd190, 0x1f99, 0xf1c4, 0x0, 0x0);
        gbc.writeMem(0xe411, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7dbe, gbc.sp());
        EXPECT(0xe413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe411));
        EXPECT(0xba, gbc.readMem(0xe412));
        // CB BA 0240
        gbc.setState(0x58e0, 0xe0e0, 0x79e0, 0x5751, 0x660e, 0xb915, 0x1, 0x0);
        gbc.writeMem(0x58e0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe0e0, gbc.sp());
        EXPECT(0x58e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0241
        gbc.setState(0xab17, 0xab15, 0x430, 0xebdc, 0xf901, 0x592e, 0x0, 0x0);
        gbc.writeMem(0xab17, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xab15, gbc.sp());
        EXPECT(0xab19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab17));
        EXPECT(0xba, gbc.readMem(0xab18));
        // CB BA 0242
        gbc.setState(0x121d, 0xba57, 0xd0a0, 0x8746, 0x5ddf, 0x1883, 0x0, 0x1);
        gbc.writeMem(0x121d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xba57, gbc.sp());
        EXPECT(0x121f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0243
        gbc.setState(0x99f0, 0x427d, 0x5860, 0x75fd, 0x468e, 0x9fd5, 0x0, 0x0);
        gbc.writeMem(0x99f0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x427d, gbc.sp());
        EXPECT(0x99f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f0));
        EXPECT(0xba, gbc.readMem(0x99f1));
        // CB BA 0244
        gbc.setState(0x66a5, 0xc6f3, 0x7ac0, 0xa62d, 0x57e9, 0x1fea, 0x1, 0x1);
        gbc.writeMem(0x66a5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc6f3, gbc.sp());
        EXPECT(0x66a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0245
        gbc.setState(0xcf41, 0x3c01, 0xa970, 0x6e13, 0x7a25, 0x8206, 0x1, 0x1);
        gbc.writeMem(0xcf41, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3c01, gbc.sp());
        EXPECT(0xcf43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf41));
        EXPECT(0xba, gbc.readMem(0xcf42));
        // CB BA 0246
        gbc.setState(0x4515, 0x26d9, 0xdc20, 0xd061, 0xdc52, 0xf643, 0x1, 0x0);
        gbc.writeMem(0x4515, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x26d9, gbc.sp());
        EXPECT(0x4517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0247
        gbc.setState(0xe889, 0x9259, 0x2700, 0x14db, 0x69cd, 0x854, 0x1, 0x0);
        gbc.writeMem(0xe889, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9259, gbc.sp());
        EXPECT(0xe88b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe889));
        EXPECT(0xba, gbc.readMem(0xe88a));
        // CB BA 0248
        gbc.setState(0xa850, 0xcee8, 0x9d50, 0x5584, 0x2e5, 0xa046, 0x0, 0x0);
        gbc.writeMem(0xa850, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcee8, gbc.sp());
        EXPECT(0xa852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa850));
        EXPECT(0xba, gbc.readMem(0xa851));
        // CB BA 0249
        gbc.setState(0x2103, 0x95c1, 0x2340, 0x1fd6, 0xb766, 0xec9a, 0x1, 0x1);
        gbc.writeMem(0x2103, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x95c1, gbc.sp());
        EXPECT(0x2105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 024C
        gbc.setState(0x1030, 0x15a0, 0x1db0, 0xa2eb, 0xcf0b, 0xbdab, 0x1, 0x1);
        gbc.writeMem(0x1030, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x15a0, gbc.sp());
        EXPECT(0x1032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 024D
        gbc.setState(0x4f1f, 0xed4d, 0xdfb0, 0xe6fd, 0x4eed, 0x10d2, 0x1, 0x1);
        gbc.writeMem(0x4f1f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xed4d, gbc.sp());
        EXPECT(0x4f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 024F
        gbc.setState(0xe9fb, 0xdc1b, 0x5b40, 0x59ab, 0x8e71, 0xdd35, 0x1, 0x1);
        gbc.writeMem(0xe9fb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdc1b, gbc.sp());
        EXPECT(0xe9fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9fb));
        EXPECT(0xba, gbc.readMem(0xe9fc));
        // CB BA 0250
        gbc.setState(0x41bf, 0xa820, 0x8970, 0xf241, 0xe27, 0x664c, 0x0, 0x1);
        gbc.writeMem(0x41bf, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa820, gbc.sp());
        EXPECT(0x41c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0251
        gbc.setState(0x66c, 0x3a75, 0x5800, 0xf59b, 0x1f20, 0x7bf9, 0x0, 0x0);
        gbc.writeMem(0x66c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3a75, gbc.sp());
        EXPECT(0x66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0252
        gbc.setState(0x744f, 0x624e, 0x86f0, 0xde0f, 0x2773, 0xe2b1, 0x0, 0x0);
        gbc.writeMem(0x744f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x624e, gbc.sp());
        EXPECT(0x7451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0253
        gbc.setState(0x4ae5, 0x2117, 0x37c0, 0xc8b6, 0xc4e8, 0x181d, 0x0, 0x0);
        gbc.writeMem(0x4ae5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2117, gbc.sp());
        EXPECT(0x4ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0254
        gbc.setState(0x338e, 0x962a, 0x3730, 0x1ae8, 0x274d, 0x21a8, 0x1, 0x1);
        gbc.writeMem(0x338e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x962a, gbc.sp());
        EXPECT(0x3390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0255
        gbc.setState(0xc406, 0x6d10, 0x9310, 0x9cb5, 0xa3f4, 0x1d10, 0x1, 0x1);
        gbc.writeMem(0xc406, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6d10, gbc.sp());
        EXPECT(0xc408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc406));
        EXPECT(0xba, gbc.readMem(0xc407));
        // CB BA 0256
        gbc.setState(0xab3e, 0xd011, 0xec40, 0xba2b, 0xb50, 0x3c91, 0x1, 0x0);
        gbc.writeMem(0xab3e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd011, gbc.sp());
        EXPECT(0xab40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3e));
        EXPECT(0xba, gbc.readMem(0xab3f));
        // CB BA 0257
        gbc.setState(0x7407, 0xa848, 0x4d0, 0x8140, 0xf2b5, 0xc5e6, 0x1, 0x0);
        gbc.writeMem(0x7407, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa848, gbc.sp());
        EXPECT(0x7409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0258
        gbc.setState(0xd41f, 0x9c2c, 0xccd0, 0x5f05, 0x2a85, 0x1baa, 0x1, 0x0);
        gbc.writeMem(0xd41f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9c2c, gbc.sp());
        EXPECT(0xd421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41f));
        EXPECT(0xba, gbc.readMem(0xd420));
        // CB BA 0259
        gbc.setState(0xe6e2, 0xcb3, 0xe980, 0x481c, 0x829c, 0x1142, 0x1, 0x0);
        gbc.writeMem(0xe6e2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcb3, gbc.sp());
        EXPECT(0xe6e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e2));
        EXPECT(0xba, gbc.readMem(0xe6e3));
        // CB BA 025A
        gbc.setState(0x1ddb, 0x9f, 0xa6d0, 0x715a, 0xa80, 0xf000, 0x0, 0x1);
        gbc.writeMem(0x1ddb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9f, gbc.sp());
        EXPECT(0x1ddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 025B
        gbc.setState(0x3954, 0x51c1, 0x5810, 0x6191, 0xee7b, 0xdc4, 0x0, 0x0);
        gbc.writeMem(0x3954, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x51c1, gbc.sp());
        EXPECT(0x3956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 025C
        gbc.setState(0x6aa2, 0xd8ed, 0xf020, 0x47dc, 0xf80d, 0xe56a, 0x0, 0x1);
        gbc.writeMem(0x6aa2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd8ed, gbc.sp());
        EXPECT(0x6aa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 025E
        gbc.setState(0x173f, 0x5e9c, 0x7860, 0xd5f5, 0xbacd, 0x87f3, 0x1, 0x1);
        gbc.writeMem(0x173f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5e9c, gbc.sp());
        EXPECT(0x1741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 025F
        gbc.setState(0x5388, 0x95f, 0x16f0, 0xc87b, 0x44da, 0xdce5, 0x0, 0x0);
        gbc.writeMem(0x5388, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x95f, gbc.sp());
        EXPECT(0x538a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0260
        gbc.setState(0x98b6, 0x4499, 0x6360, 0xdc70, 0xe9f4, 0xf295, 0x0, 0x0);
        gbc.writeMem(0x98b6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4499, gbc.sp());
        EXPECT(0x98b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b6));
        EXPECT(0xba, gbc.readMem(0x98b7));
        // CB BA 0261
        gbc.setState(0x10f9, 0x54b, 0x1f40, 0xe792, 0x554d, 0x5a16, 0x0, 0x1);
        gbc.writeMem(0x10f9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x54b, gbc.sp());
        EXPECT(0x10fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0262
        gbc.setState(0xad1a, 0x8d77, 0xfb40, 0x52e7, 0x92d7, 0xa27b, 0x0, 0x1);
        gbc.writeMem(0xad1a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8d77, gbc.sp());
        EXPECT(0xad1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad1a));
        EXPECT(0xba, gbc.readMem(0xad1b));
        // CB BA 0264
        gbc.setState(0x20b5, 0x745f, 0x1230, 0xfd12, 0x26d5, 0x607a, 0x0, 0x0);
        gbc.writeMem(0x20b5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x745f, gbc.sp());
        EXPECT(0x20b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0265
        gbc.setState(0x7893, 0xe8a0, 0xa220, 0xbcae, 0x2f2d, 0x6f31, 0x1, 0x0);
        gbc.writeMem(0x7893, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe8a0, gbc.sp());
        EXPECT(0x7895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0266
        gbc.setState(0x7f09, 0x1aaa, 0x8df0, 0xc882, 0x9663, 0xa80d, 0x1, 0x0);
        gbc.writeMem(0x7f09, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1aaa, gbc.sp());
        EXPECT(0x7f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0267
        gbc.setState(0xd6f8, 0x86e5, 0x3e80, 0x7981, 0x6f07, 0xb3a4, 0x1, 0x1);
        gbc.writeMem(0xd6f8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x86e5, gbc.sp());
        EXPECT(0xd6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f8));
        EXPECT(0xba, gbc.readMem(0xd6f9));
        // CB BA 0268
        gbc.setState(0xb5dc, 0x9c48, 0x2c20, 0x29c8, 0x9e55, 0xedc0, 0x1, 0x0);
        gbc.writeMem(0xb5dc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9c48, gbc.sp());
        EXPECT(0xb5de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5dc));
        EXPECT(0xba, gbc.readMem(0xb5dd));
        // CB BA 0269
        gbc.setState(0x13ac, 0x3370, 0xdd50, 0x6904, 0x3132, 0xb907, 0x0, 0x0);
        gbc.writeMem(0x13ac, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3370, gbc.sp());
        EXPECT(0x13ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 026A
        gbc.setState(0x16c7, 0x8eca, 0x2de0, 0x2542, 0xe87a, 0xb16b, 0x1, 0x1);
        gbc.writeMem(0x16c7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8eca, gbc.sp());
        EXPECT(0x16c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 026B
        gbc.setState(0x6b95, 0x7fa3, 0x5a60, 0xafc0, 0xd983, 0x7806, 0x1, 0x1);
        gbc.writeMem(0x6b95, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7fa3, gbc.sp());
        EXPECT(0x6b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 026C
        gbc.setState(0x6fd8, 0xd435, 0xb620, 0xac2f, 0xd1c0, 0x5e90, 0x0, 0x0);
        gbc.writeMem(0x6fd8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd435, gbc.sp());
        EXPECT(0x6fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 026D
        gbc.setState(0x2f18, 0x9651, 0x1ea0, 0x5904, 0xadd1, 0xcc8d, 0x1, 0x1);
        gbc.writeMem(0x2f18, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9651, gbc.sp());
        EXPECT(0x2f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 026E
        gbc.setState(0x6bf9, 0x1847, 0xa1f0, 0xf356, 0xe40a, 0x7df7, 0x1, 0x1);
        gbc.writeMem(0x6bf9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1847, gbc.sp());
        EXPECT(0x6bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 026F
        gbc.setState(0xb492, 0x5753, 0xf280, 0x78fa, 0xa19e, 0xa6d5, 0x0, 0x1);
        gbc.writeMem(0xb492, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5753, gbc.sp());
        EXPECT(0xb494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb492));
        EXPECT(0xba, gbc.readMem(0xb493));
        // CB BA 0270
        gbc.setState(0x3891, 0xc28d, 0x4470, 0x9d67, 0xd764, 0xbb33, 0x1, 0x1);
        gbc.writeMem(0x3891, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc28d, gbc.sp());
        EXPECT(0x3893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0271
        gbc.setState(0x4dd3, 0xf9a0, 0x10b0, 0x68f1, 0x14c6, 0xc695, 0x0, 0x1);
        gbc.writeMem(0x4dd3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf9a0, gbc.sp());
        EXPECT(0x4dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0272
        gbc.setState(0x9b90, 0xc86b, 0x5c00, 0xbe92, 0x3896, 0x8dd3, 0x0, 0x1);
        gbc.writeMem(0x9b90, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc86b, gbc.sp());
        EXPECT(0x9b92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b90));
        EXPECT(0xba, gbc.readMem(0x9b91));
        // CB BA 0273
        gbc.setState(0x8ae4, 0x692e, 0x110, 0x59d9, 0x7249, 0x2fa0, 0x1, 0x1);
        gbc.writeMem(0x8ae4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x692e, gbc.sp());
        EXPECT(0x8ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae4));
        EXPECT(0xba, gbc.readMem(0x8ae5));
        // CB BA 0274
        gbc.setState(0x159, 0x560d, 0xf8c0, 0xad37, 0xdc2e, 0x21e8, 0x1, 0x0);
        gbc.writeMem(0x159, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x560d, gbc.sp());
        EXPECT(0x15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0275
        gbc.setState(0xbba, 0xcc7b, 0x8d0, 0x1d5, 0x25de, 0xa32a, 0x0, 0x0);
        gbc.writeMem(0xbba, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcc7b, gbc.sp());
        EXPECT(0xbbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0276
        gbc.setState(0x6979, 0x836f, 0x1510, 0xd9b0, 0x1d52, 0x16a, 0x0, 0x0);
        gbc.writeMem(0x6979, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x836f, gbc.sp());
        EXPECT(0x697b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0277
        gbc.setState(0xe219, 0xe6b7, 0x3fa0, 0x1e51, 0xb943, 0x91be, 0x0, 0x0);
        gbc.writeMem(0xe219, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe6b7, gbc.sp());
        EXPECT(0xe21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe219));
        EXPECT(0xba, gbc.readMem(0xe21a));
        // CB BA 0278
        gbc.setState(0xb9fd, 0xf87a, 0x2c90, 0xe6cf, 0x2cbd, 0x2b88, 0x0, 0x1);
        gbc.writeMem(0xb9fd, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf87a, gbc.sp());
        EXPECT(0xb9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9fd));
        EXPECT(0xba, gbc.readMem(0xb9fe));
        // CB BA 0279
        gbc.setState(0xbfcc, 0x36e5, 0xc700, 0x5157, 0x3cd6, 0xbb03, 0x1, 0x0);
        gbc.writeMem(0xbfcc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x36e5, gbc.sp());
        EXPECT(0xbfce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfcc));
        EXPECT(0xba, gbc.readMem(0xbfcd));
        // CB BA 027B
        gbc.setState(0x15e5, 0x10a7, 0x5490, 0xc5c1, 0xcf9b, 0xbf06, 0x1, 0x1);
        gbc.writeMem(0x15e5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x10a7, gbc.sp());
        EXPECT(0x15e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 027C
        gbc.setState(0x47d0, 0xc65e, 0x8640, 0x9a04, 0x3bd8, 0xe788, 0x1, 0x1);
        gbc.writeMem(0x47d0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc65e, gbc.sp());
        EXPECT(0x47d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 027D
        gbc.setState(0x67e8, 0xd3e1, 0xdca0, 0x430d, 0x4c62, 0xa7dd, 0x1, 0x0);
        gbc.writeMem(0x67e8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd3e1, gbc.sp());
        EXPECT(0x67ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 027E
        gbc.setState(0x4c7d, 0x23ff, 0xa740, 0xbbf4, 0xb972, 0x4475, 0x1, 0x0);
        gbc.writeMem(0x4c7d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x23ff, gbc.sp());
        EXPECT(0x4c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 027F
        gbc.setState(0x29a6, 0x5769, 0x5970, 0x6fa, 0xf753, 0xc76e, 0x1, 0x1);
        gbc.writeMem(0x29a6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5769, gbc.sp());
        EXPECT(0x29a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0280
        gbc.setState(0x3e6d, 0x6951, 0x5a20, 0x8fbe, 0x7661, 0xcdd0, 0x1, 0x0);
        gbc.writeMem(0x3e6d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6951, gbc.sp());
        EXPECT(0x3e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0281
        gbc.setState(0x4ced, 0x4f04, 0x4540, 0x73e2, 0xa7d5, 0xe81f, 0x0, 0x0);
        gbc.writeMem(0x4ced, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4f04, gbc.sp());
        EXPECT(0x4cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0282
        gbc.setState(0x1882, 0xb78a, 0x1380, 0xd733, 0x199e, 0x95ca, 0x0, 0x0);
        gbc.writeMem(0x1882, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb78a, gbc.sp());
        EXPECT(0x1884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0284
        gbc.setState(0x409b, 0x7439, 0xc790, 0xbd3d, 0xc038, 0xa933, 0x1, 0x1);
        gbc.writeMem(0x409b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7439, gbc.sp());
        EXPECT(0x409d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0285
        gbc.setState(0xc781, 0x1f2c, 0x3330, 0x5c93, 0x3b3d, 0x68b9, 0x0, 0x1);
        gbc.writeMem(0xc781, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1f2c, gbc.sp());
        EXPECT(0xc783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc781));
        EXPECT(0xba, gbc.readMem(0xc782));
        // CB BA 0286
        gbc.setState(0xaaea, 0x48d, 0x2d80, 0x486c, 0x8967, 0xbcaf, 0x1, 0x0);
        gbc.writeMem(0xaaea, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x48d, gbc.sp());
        EXPECT(0xaaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaea));
        EXPECT(0xba, gbc.readMem(0xaaeb));
        // CB BA 0287
        gbc.setState(0xc448, 0x6711, 0x75b0, 0x6084, 0xbca5, 0x4f93, 0x0, 0x0);
        gbc.writeMem(0xc448, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6711, gbc.sp());
        EXPECT(0xc44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc448));
        EXPECT(0xba, gbc.readMem(0xc449));
        // CB BA 0288
        gbc.setState(0x55c2, 0x4083, 0xbff0, 0xd0c2, 0x6e77, 0xee83, 0x1, 0x0);
        gbc.writeMem(0x55c2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4083, gbc.sp());
        EXPECT(0x55c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0289
        gbc.setState(0xf6d, 0xe766, 0xd270, 0x77ff, 0x8cb, 0xf83f, 0x0, 0x1);
        gbc.writeMem(0xf6d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe766, gbc.sp());
        EXPECT(0xf6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 028A
        gbc.setState(0xa6fc, 0x3f7d, 0xea20, 0xbf4b, 0xa577, 0xd57a, 0x0, 0x1);
        gbc.writeMem(0xa6fc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3f7d, gbc.sp());
        EXPECT(0xa6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fc));
        EXPECT(0xba, gbc.readMem(0xa6fd));
        // CB BA 028B
        gbc.setState(0x378b, 0x4510, 0x13e0, 0x39ae, 0x51bf, 0xcb20, 0x1, 0x1);
        gbc.writeMem(0x378b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4510, gbc.sp());
        EXPECT(0x378d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 028C
        gbc.setState(0x5bc, 0xa591, 0xa7e0, 0x90a6, 0x1c1, 0xfda, 0x0, 0x0);
        gbc.writeMem(0x5bc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa591, gbc.sp());
        EXPECT(0x5be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 028D
        gbc.setState(0xe74e, 0x2604, 0xa090, 0x42e3, 0xf5c7, 0x21eb, 0x1, 0x0);
        gbc.writeMem(0xe74e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2604, gbc.sp());
        EXPECT(0xe750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74e));
        EXPECT(0xba, gbc.readMem(0xe74f));
        // CB BA 028E
        gbc.setState(0x974c, 0xa808, 0x4cf0, 0xbc24, 0xb973, 0xc2be, 0x0, 0x1);
        gbc.writeMem(0x974c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa808, gbc.sp());
        EXPECT(0x974e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x974c));
        EXPECT(0xba, gbc.readMem(0x974d));
        // CB BA 028F
        gbc.setState(0x3945, 0x768f, 0x77b0, 0xc0a7, 0xb50, 0x1c70, 0x1, 0x1);
        gbc.writeMem(0x3945, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x768f, gbc.sp());
        EXPECT(0x3947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0290
        gbc.setState(0xb437, 0x3e0, 0x6900, 0xc2cb, 0xa5cb, 0x8dc7, 0x1, 0x1);
        gbc.writeMem(0xb437, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3e0, gbc.sp());
        EXPECT(0xb439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb437));
        EXPECT(0xba, gbc.readMem(0xb438));
        // CB BA 0291
        gbc.setState(0x4db7, 0x9887, 0xdb80, 0xb101, 0x1c2d, 0xc05d, 0x1, 0x0);
        gbc.writeMem(0x4db7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9887, gbc.sp());
        EXPECT(0x4db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0292
        gbc.setState(0xbacf, 0xd799, 0xba60, 0xbdba, 0x2c05, 0x81ec, 0x0, 0x0);
        gbc.writeMem(0xbacf, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd799, gbc.sp());
        EXPECT(0xbad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbacf));
        EXPECT(0xba, gbc.readMem(0xbad0));
        // CB BA 0293
        gbc.setState(0x137c, 0x7b7a, 0x9350, 0xc049, 0xe006, 0x722c, 0x1, 0x0);
        gbc.writeMem(0x137c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7b7a, gbc.sp());
        EXPECT(0x137e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0294
        gbc.setState(0x11c2, 0xdeb8, 0x20b0, 0xd1b0, 0xf9ea, 0x9013, 0x1, 0x1);
        gbc.writeMem(0x11c2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdeb8, gbc.sp());
        EXPECT(0x11c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0295
        gbc.setState(0x25d1, 0xe8ea, 0x53c0, 0x1cc3, 0x5c5b, 0x92e2, 0x0, 0x1);
        gbc.writeMem(0x25d1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe8ea, gbc.sp());
        EXPECT(0x25d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0296
        gbc.setState(0x8db9, 0xe77a, 0x22c0, 0x8c38, 0x1258, 0x625e, 0x0, 0x0);
        gbc.writeMem(0x8db9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe77a, gbc.sp());
        EXPECT(0x8dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db9));
        EXPECT(0xba, gbc.readMem(0x8dba));
        // CB BA 0297
        gbc.setState(0xad5, 0x7715, 0xc920, 0x55aa, 0xce10, 0x4e16, 0x1, 0x1);
        gbc.writeMem(0xad5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7715, gbc.sp());
        EXPECT(0xad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0298
        gbc.setState(0xdb61, 0x4fe2, 0xa3d0, 0x1c5a, 0xbfb8, 0x75a2, 0x0, 0x1);
        gbc.writeMem(0xdb61, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4fe2, gbc.sp());
        EXPECT(0xdb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb61));
        EXPECT(0xba, gbc.readMem(0xdb62));
        // CB BA 0299
        gbc.setState(0x7df4, 0x4b9d, 0x4e00, 0xf6c8, 0x5710, 0x58b8, 0x1, 0x0);
        gbc.writeMem(0x7df4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4b9d, gbc.sp());
        EXPECT(0x7df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 029A
        gbc.setState(0xafb2, 0xa1cb, 0x1e80, 0x3f1c, 0x5f30, 0x2f8a, 0x1, 0x0);
        gbc.writeMem(0xafb2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa1cb, gbc.sp());
        EXPECT(0xafb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb2));
        EXPECT(0xba, gbc.readMem(0xafb3));
        // CB BA 029B
        gbc.setState(0x661, 0xc8b9, 0xf150, 0xbeb7, 0x243e, 0xd5a6, 0x1, 0x0);
        gbc.writeMem(0x661, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc8b9, gbc.sp());
        EXPECT(0x663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 029C
        gbc.setState(0x6c6d, 0xb9ee, 0xae90, 0xc44a, 0xbb33, 0xf5dc, 0x0, 0x0);
        gbc.writeMem(0x6c6d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb9ee, gbc.sp());
        EXPECT(0x6c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 029D
        gbc.setState(0x61d0, 0x43dc, 0x930, 0x3d17, 0xd94d, 0x3543, 0x1, 0x1);
        gbc.writeMem(0x61d0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x43dc, gbc.sp());
        EXPECT(0x61d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 029E
        gbc.setState(0xd016, 0x1532, 0x5370, 0x75f7, 0x3261, 0x8642, 0x0, 0x0);
        gbc.writeMem(0xd016, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1532, gbc.sp());
        EXPECT(0xd018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd016));
        EXPECT(0xba, gbc.readMem(0xd017));
        // CB BA 029F
        gbc.setState(0xdde9, 0x3407, 0xde90, 0x347c, 0x8bda, 0xb0e2, 0x1, 0x0);
        gbc.writeMem(0xdde9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3407, gbc.sp());
        EXPECT(0xddeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde9));
        EXPECT(0xba, gbc.readMem(0xddea));
        // CB BA 02A0
        gbc.setState(0x339e, 0x2908, 0x9dd0, 0x80c4, 0xa907, 0x5bfa, 0x1, 0x0);
        gbc.writeMem(0x339e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2908, gbc.sp());
        EXPECT(0x33a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02A1
        gbc.setState(0xce59, 0x5ae5, 0xf760, 0xf463, 0x438e, 0xd52, 0x0, 0x1);
        gbc.writeMem(0xce59, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5ae5, gbc.sp());
        EXPECT(0xce5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce59));
        EXPECT(0xba, gbc.readMem(0xce5a));
        // CB BA 02A2
        gbc.setState(0x952d, 0xc5, 0xb70, 0x6847, 0xa8c7, 0x506b, 0x0, 0x0);
        gbc.writeMem(0x952d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc5, gbc.sp());
        EXPECT(0x952f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x952d));
        EXPECT(0xba, gbc.readMem(0x952e));
        // CB BA 02A3
        gbc.setState(0x2641, 0x7ef1, 0x8ce0, 0xade5, 0x9b5b, 0x10dc, 0x0, 0x0);
        gbc.writeMem(0x2641, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7ef1, gbc.sp());
        EXPECT(0x2643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02A4
        gbc.setState(0x4d4e, 0xe76c, 0xc6a0, 0x3199, 0xd6db, 0x834e, 0x0, 0x0);
        gbc.writeMem(0x4d4e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe76c, gbc.sp());
        EXPECT(0x4d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02A5
        gbc.setState(0xe07c, 0x554f, 0x710, 0x2fe0, 0x1ca9, 0xbcd8, 0x1, 0x1);
        gbc.writeMem(0xe07c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x554f, gbc.sp());
        EXPECT(0xe07e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe07c));
        EXPECT(0xba, gbc.readMem(0xe07d));
        // CB BA 02A6
        gbc.setState(0x326f, 0x7571, 0x6ff0, 0xc3b5, 0x8192, 0xc19f, 0x1, 0x0);
        gbc.writeMem(0x326f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7571, gbc.sp());
        EXPECT(0x3271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02A8
        gbc.setState(0x6a12, 0x1b78, 0xda00, 0x3ced, 0xd994, 0xbb0b, 0x0, 0x0);
        gbc.writeMem(0x6a12, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1b78, gbc.sp());
        EXPECT(0x6a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02A9
        gbc.setState(0x5784, 0x6f51, 0x32d0, 0xb3e8, 0x485a, 0x11f8, 0x1, 0x1);
        gbc.writeMem(0x5784, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6f51, gbc.sp());
        EXPECT(0x5786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02AA
        gbc.setState(0xda78, 0xc3cd, 0x1cb0, 0x9191, 0xc045, 0xf1fe, 0x0, 0x1);
        gbc.writeMem(0xda78, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc3cd, gbc.sp());
        EXPECT(0xda7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda78));
        EXPECT(0xba, gbc.readMem(0xda79));
        // CB BA 02AD
        gbc.setState(0xc7a4, 0xb605, 0x7b50, 0xa390, 0xb4da, 0x907a, 0x0, 0x1);
        gbc.writeMem(0xc7a4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb605, gbc.sp());
        EXPECT(0xc7a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a4));
        EXPECT(0xba, gbc.readMem(0xc7a5));
        // CB BA 02AE
        gbc.setState(0xc2b8, 0xb481, 0x6830, 0x7982, 0x4e14, 0x2281, 0x0, 0x1);
        gbc.writeMem(0xc2b8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb481, gbc.sp());
        EXPECT(0xc2ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b8));
        EXPECT(0xba, gbc.readMem(0xc2b9));
        // CB BA 02AF
        gbc.setState(0xd6b, 0x4633, 0xff10, 0xd273, 0xd4b, 0xf8cd, 0x0, 0x1);
        gbc.writeMem(0xd6b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4633, gbc.sp());
        EXPECT(0xd6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02B0
        gbc.setState(0x88e6, 0x2132, 0x4fa0, 0xa770, 0xd0a7, 0x5823, 0x0, 0x0);
        gbc.writeMem(0x88e6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2132, gbc.sp());
        EXPECT(0x88e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e6));
        EXPECT(0xba, gbc.readMem(0x88e7));
        // CB BA 02B1
        gbc.setState(0x97f0, 0xcdf4, 0x3980, 0x5087, 0xcaab, 0x6dc2, 0x1, 0x1);
        gbc.writeMem(0x97f0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcdf4, gbc.sp());
        EXPECT(0x97f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f0));
        EXPECT(0xba, gbc.readMem(0x97f1));
        // CB BA 02B2
        gbc.setState(0xa9a1, 0xe884, 0x9c20, 0x52a8, 0xff41, 0xf6be, 0x1, 0x1);
        gbc.writeMem(0xa9a1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe884, gbc.sp());
        EXPECT(0xa9a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a1));
        EXPECT(0xba, gbc.readMem(0xa9a2));
        // CB BA 02B3
        gbc.setState(0x86d8, 0x6145, 0xb590, 0x6dd6, 0x132c, 0xc047, 0x1, 0x0);
        gbc.writeMem(0x86d8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6145, gbc.sp());
        EXPECT(0x86da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d8));
        EXPECT(0xba, gbc.readMem(0x86d9));
        // CB BA 02B4
        gbc.setState(0x694f, 0xa54, 0x11f0, 0xf40b, 0xdb2d, 0x1c55, 0x1, 0x1);
        gbc.writeMem(0x694f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa54, gbc.sp());
        EXPECT(0x6951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02B5
        gbc.setState(0x85ce, 0xcb22, 0x58c0, 0x537c, 0x5e81, 0xdad, 0x1, 0x0);
        gbc.writeMem(0x85ce, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcb22, gbc.sp());
        EXPECT(0x85d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ce));
        EXPECT(0xba, gbc.readMem(0x85cf));
        // CB BA 02B6
        gbc.setState(0xa614, 0xfccd, 0x9390, 0xe95a, 0x71f, 0x714a, 0x0, 0x0);
        gbc.writeMem(0xa614, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfccd, gbc.sp());
        EXPECT(0xa616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa614));
        EXPECT(0xba, gbc.readMem(0xa615));
        // CB BA 02B7
        gbc.setState(0x9080, 0x2c50, 0x2310, 0x4818, 0xab1b, 0x1d3d, 0x1, 0x1);
        gbc.writeMem(0x9080, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2c50, gbc.sp());
        EXPECT(0x9082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9080));
        EXPECT(0xba, gbc.readMem(0x9081));
        // CB BA 02B8
        gbc.setState(0x73c6, 0xc8b1, 0xc8e0, 0x8265, 0x6983, 0x3e6c, 0x0, 0x0);
        gbc.writeMem(0x73c6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc8b1, gbc.sp());
        EXPECT(0x73c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02B9
        gbc.setState(0xd322, 0x793c, 0x2e0, 0x7d33, 0xda09, 0xa2b3, 0x1, 0x1);
        gbc.writeMem(0xd322, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x793c, gbc.sp());
        EXPECT(0xd324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd322));
        EXPECT(0xba, gbc.readMem(0xd323));
        // CB BA 02BA
        gbc.setState(0xce20, 0x18f8, 0xd900, 0xdc7e, 0x5514, 0xd1a5, 0x0, 0x1);
        gbc.writeMem(0xce20, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x18f8, gbc.sp());
        EXPECT(0xce22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce20));
        EXPECT(0xba, gbc.readMem(0xce21));
        // CB BA 02BB
        gbc.setState(0xd94a, 0xcf1e, 0x17b0, 0x5fc3, 0xd4a5, 0x31a, 0x0, 0x1);
        gbc.writeMem(0xd94a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcf1e, gbc.sp());
        EXPECT(0xd94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94a));
        EXPECT(0xba, gbc.readMem(0xd94b));
        // CB BA 02BD
        gbc.setState(0x6209, 0x5c81, 0xfd70, 0xeee1, 0xeac7, 0x6206, 0x1, 0x1);
        gbc.writeMem(0x6209, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5c81, gbc.sp());
        EXPECT(0x620b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02BE
        gbc.setState(0xa4a, 0x7007, 0xe700, 0xb17a, 0x5163, 0x5336, 0x1, 0x1);
        gbc.writeMem(0xa4a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7007, gbc.sp());
        EXPECT(0xa4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02BF
        gbc.setState(0x3ce7, 0x1384, 0x34f0, 0x332a, 0x4032, 0x4acc, 0x1, 0x0);
        gbc.writeMem(0x3ce7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1384, gbc.sp());
        EXPECT(0x3ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02C1
        gbc.setState(0xc30f, 0xf0da, 0xd030, 0xd2dc, 0x84f6, 0xd05a, 0x1, 0x1);
        gbc.writeMem(0xc30f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf0da, gbc.sp());
        EXPECT(0xc311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30f));
        EXPECT(0xba, gbc.readMem(0xc310));
        // CB BA 02C2
        gbc.setState(0x1c7a, 0xd96a, 0xa150, 0xfb7a, 0xb8c6, 0x8080, 0x0, 0x1);
        gbc.writeMem(0x1c7a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd96a, gbc.sp());
        EXPECT(0x1c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02C3
        gbc.setState(0x4c7e, 0xf7a2, 0xffb0, 0x46d4, 0x976, 0x9a90, 0x0, 0x1);
        gbc.writeMem(0x4c7e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf7a2, gbc.sp());
        EXPECT(0x4c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02C4
        gbc.setState(0xcce2, 0x5871, 0x6490, 0x895c, 0xf3d2, 0xd52, 0x1, 0x1);
        gbc.writeMem(0xcce2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5871, gbc.sp());
        EXPECT(0xcce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcce2));
        EXPECT(0xba, gbc.readMem(0xcce3));
        // CB BA 02C5
        gbc.setState(0x9151, 0x3f3c, 0xaec0, 0x22f6, 0x833c, 0x1f7f, 0x0, 0x0);
        gbc.writeMem(0x9151, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3f3c, gbc.sp());
        EXPECT(0x9153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9151));
        EXPECT(0xba, gbc.readMem(0x9152));
        // CB BA 02C6
        gbc.setState(0xdd19, 0xdff5, 0xbc60, 0xf578, 0x5554, 0x470b, 0x0, 0x1);
        gbc.writeMem(0xdd19, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xdff5, gbc.sp());
        EXPECT(0xdd1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd19));
        EXPECT(0xba, gbc.readMem(0xdd1a));
        // CB BA 02C7
        gbc.setState(0x5623, 0x8433, 0x35d0, 0x62b0, 0x4e9e, 0x73fb, 0x0, 0x0);
        gbc.writeMem(0x5623, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8433, gbc.sp());
        EXPECT(0x5625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02C8
        gbc.setState(0xec17, 0x740b, 0x3d60, 0x81ad, 0x9e8d, 0xce21, 0x1, 0x0);
        gbc.writeMem(0xec17, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x740b, gbc.sp());
        EXPECT(0xec19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec17));
        EXPECT(0xba, gbc.readMem(0xec18));
        // CB BA 02C9
        gbc.setState(0x5297, 0x48f7, 0x6cd0, 0x8b6a, 0x804a, 0x1c5d, 0x1, 0x1);
        gbc.writeMem(0x5297, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x48f7, gbc.sp());
        EXPECT(0x5299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02CA
        gbc.setState(0x3fda, 0xfea1, 0x41b0, 0x6401, 0x3c23, 0xb2e6, 0x1, 0x0);
        gbc.writeMem(0x3fda, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfea1, gbc.sp());
        EXPECT(0x3fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02CB
        gbc.setState(0x3d4a, 0xff29, 0x57f0, 0x8e8a, 0x45af, 0x2063, 0x0, 0x0);
        gbc.writeMem(0x3d4a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xff29, gbc.sp());
        EXPECT(0x3d4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02CC
        gbc.setState(0xe05f, 0x3ed0, 0x1c20, 0x78b4, 0x242b, 0xc59c, 0x0, 0x0);
        gbc.writeMem(0xe05f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3ed0, gbc.sp());
        EXPECT(0xe061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe05f));
        EXPECT(0xba, gbc.readMem(0xe060));
        // CB BA 02CD
        gbc.setState(0x8699, 0xe3ee, 0x1950, 0x1e32, 0x784d, 0x1b9e, 0x0, 0x1);
        gbc.writeMem(0x8699, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe3ee, gbc.sp());
        EXPECT(0x869b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8699));
        EXPECT(0xba, gbc.readMem(0x869a));
        // CB BA 02CE
        gbc.setState(0xc2ab, 0xf41d, 0x6c90, 0xa3a7, 0x513, 0x2888, 0x1, 0x0);
        gbc.writeMem(0xc2ab, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf41d, gbc.sp());
        EXPECT(0xc2ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ab));
        EXPECT(0xba, gbc.readMem(0xc2ac));
        // CB BA 02CF
        gbc.setState(0x6bab, 0xc66b, 0x7990, 0x58fc, 0x358d, 0xe929, 0x0, 0x1);
        gbc.writeMem(0x6bab, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc66b, gbc.sp());
        EXPECT(0x6bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02D0
        gbc.setState(0x68a7, 0x6fec, 0x25a0, 0x2621, 0xc96, 0x257c, 0x0, 0x1);
        gbc.writeMem(0x68a7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6fec, gbc.sp());
        EXPECT(0x68a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02D1
        gbc.setState(0x50dd, 0x1dce, 0xb100, 0xa17d, 0x5a67, 0xbd41, 0x0, 0x0);
        gbc.writeMem(0x50dd, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1dce, gbc.sp());
        EXPECT(0x50df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02D2
        gbc.setState(0xd7c0, 0xbf65, 0xd880, 0x6649, 0x24f4, 0x585b, 0x1, 0x0);
        gbc.writeMem(0xd7c0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbf65, gbc.sp());
        EXPECT(0xd7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c0));
        EXPECT(0xba, gbc.readMem(0xd7c1));
        // CB BA 02D3
        gbc.setState(0xeb7d, 0xc14e, 0x6de0, 0xd986, 0xfd5, 0xd71b, 0x0, 0x1);
        gbc.writeMem(0xeb7d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc14e, gbc.sp());
        EXPECT(0xeb7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb7d));
        EXPECT(0xba, gbc.readMem(0xeb7e));
        // CB BA 02D4
        gbc.setState(0x7ac9, 0x38f, 0x5b00, 0x29f7, 0x9c2f, 0x21bb, 0x0, 0x0);
        gbc.writeMem(0x7ac9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x38f, gbc.sp());
        EXPECT(0x7acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02D6
        gbc.setState(0x5d80, 0xf111, 0x1710, 0xd23c, 0x7ea6, 0x51f4, 0x1, 0x0);
        gbc.writeMem(0x5d80, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf111, gbc.sp());
        EXPECT(0x5d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02D7
        gbc.setState(0x6166, 0xbe3b, 0x6bf0, 0x1f33, 0x8897, 0x3f52, 0x1, 0x1);
        gbc.writeMem(0x6166, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbe3b, gbc.sp());
        EXPECT(0x6168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02D8
        gbc.setState(0x1af2, 0xf26d, 0x9f60, 0x5439, 0xcea9, 0xba91, 0x1, 0x0);
        gbc.writeMem(0x1af2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf26d, gbc.sp());
        EXPECT(0x1af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02D9
        gbc.setState(0x318f, 0x58ef, 0xd810, 0x59eb, 0x199c, 0x9564, 0x1, 0x0);
        gbc.writeMem(0x318f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x58ef, gbc.sp());
        EXPECT(0x3191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02DA
        gbc.setState(0x7938, 0x7c75, 0xe950, 0xc17e, 0x1a3e, 0x3a84, 0x1, 0x0);
        gbc.writeMem(0x7938, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7c75, gbc.sp());
        EXPECT(0x793a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02DB
        gbc.setState(0xded5, 0x444b, 0x99d0, 0x70ee, 0x35aa, 0xadcf, 0x1, 0x0);
        gbc.writeMem(0xded5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x444b, gbc.sp());
        EXPECT(0xded7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded5));
        EXPECT(0xba, gbc.readMem(0xded6));
        // CB BA 02DC
        gbc.setState(0xd24e, 0x3cea, 0x1dc0, 0x3985, 0x1597, 0x2632, 0x1, 0x0);
        gbc.writeMem(0xd24e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3cea, gbc.sp());
        EXPECT(0xd250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd24e));
        EXPECT(0xba, gbc.readMem(0xd24f));
        // CB BA 02DD
        gbc.setState(0xda55, 0x2b6, 0xb880, 0xf63, 0x94bc, 0x99d0, 0x1, 0x0);
        gbc.writeMem(0xda55, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2b6, gbc.sp());
        EXPECT(0xda57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda55));
        EXPECT(0xba, gbc.readMem(0xda56));
        // CB BA 02DE
        gbc.setState(0xd435, 0x8703, 0x310, 0xa265, 0x78a1, 0x5cf3, 0x1, 0x0);
        gbc.writeMem(0xd435, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8703, gbc.sp());
        EXPECT(0xd437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd435));
        EXPECT(0xba, gbc.readMem(0xd436));
        // CB BA 02DF
        gbc.setState(0x52b2, 0xf724, 0x2f40, 0xe260, 0x4a9c, 0xf052, 0x1, 0x0);
        gbc.writeMem(0x52b2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf724, gbc.sp());
        EXPECT(0x52b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02E0
        gbc.setState(0xc7b6, 0xa644, 0x4e40, 0x3a55, 0xc05d, 0xc214, 0x1, 0x0);
        gbc.writeMem(0xc7b6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa644, gbc.sp());
        EXPECT(0xc7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b6));
        EXPECT(0xba, gbc.readMem(0xc7b7));
        // CB BA 02E1
        gbc.setState(0x8b19, 0xf7a3, 0xe700, 0xbbd, 0xd593, 0xc14b, 0x1, 0x1);
        gbc.writeMem(0x8b19, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf7a3, gbc.sp());
        EXPECT(0x8b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b19));
        EXPECT(0xba, gbc.readMem(0x8b1a));
        // CB BA 02E2
        gbc.setState(0xe559, 0x6576, 0x4220, 0xdaf5, 0x4c46, 0x113f, 0x0, 0x1);
        gbc.writeMem(0xe559, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6576, gbc.sp());
        EXPECT(0xe55b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe559));
        EXPECT(0xba, gbc.readMem(0xe55a));
        // CB BA 02E3
        gbc.setState(0x617b, 0xe5c6, 0x2d00, 0x6320, 0xb488, 0x2102, 0x1, 0x1);
        gbc.writeMem(0x617b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe5c6, gbc.sp());
        EXPECT(0x617d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02E4
        gbc.setState(0x577b, 0x7c0b, 0x19d0, 0xcdaa, 0xc35e, 0x3408, 0x0, 0x0);
        gbc.writeMem(0x577b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7c0b, gbc.sp());
        EXPECT(0x577d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02E5
        gbc.setState(0x3323, 0x9df, 0xe8c0, 0xbbb6, 0x39c1, 0xfc8, 0x1, 0x0);
        gbc.writeMem(0x3323, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9df, gbc.sp());
        EXPECT(0x3325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02E6
        gbc.setState(0x48f0, 0xf48a, 0xaf20, 0xe338, 0x5641, 0xa1c4, 0x1, 0x1);
        gbc.writeMem(0x48f0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf48a, gbc.sp());
        EXPECT(0x48f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02E7
        gbc.setState(0x4fdd, 0x7127, 0x5e60, 0x7bd9, 0x6bd9, 0xd495, 0x1, 0x1);
        gbc.writeMem(0x4fdd, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7127, gbc.sp());
        EXPECT(0x4fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02E8
        gbc.setState(0x7bae, 0xac42, 0xa820, 0x4030, 0x2ad, 0xbb41, 0x0, 0x0);
        gbc.writeMem(0x7bae, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xac42, gbc.sp());
        EXPECT(0x7bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02E9
        gbc.setState(0x2fc8, 0x68ab, 0x2f30, 0xa314, 0x97a0, 0x891d, 0x1, 0x0);
        gbc.writeMem(0x2fc8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x68ab, gbc.sp());
        EXPECT(0x2fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02EA
        gbc.setState(0xcef0, 0x9fe3, 0xf900, 0xfdde, 0xd1ab, 0x9216, 0x1, 0x0);
        gbc.writeMem(0xcef0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9fe3, gbc.sp());
        EXPECT(0xcef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef0));
        EXPECT(0xba, gbc.readMem(0xcef1));
        // CB BA 02EB
        gbc.setState(0xa302, 0x1eb9, 0x7100, 0x8df1, 0x6b88, 0x8fd8, 0x1, 0x1);
        gbc.writeMem(0xa302, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1eb9, gbc.sp());
        EXPECT(0xa304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa302));
        EXPECT(0xba, gbc.readMem(0xa303));
        // CB BA 02EC
        gbc.setState(0x8be6, 0x8821, 0x3390, 0xf8a3, 0x3217, 0xb6fa, 0x1, 0x0);
        gbc.writeMem(0x8be6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8821, gbc.sp());
        EXPECT(0x8be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be6));
        EXPECT(0xba, gbc.readMem(0x8be7));
        // CB BA 02ED
        gbc.setState(0xe49e, 0x69d9, 0x2f30, 0xd11e, 0x49a6, 0x8ea1, 0x1, 0x0);
        gbc.writeMem(0xe49e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x69d9, gbc.sp());
        EXPECT(0xe4a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe49e));
        EXPECT(0xba, gbc.readMem(0xe49f));
        // CB BA 02EE
        gbc.setState(0xa985, 0x9c3d, 0x6a70, 0x40a, 0x7bbc, 0xdbe1, 0x0, 0x1);
        gbc.writeMem(0xa985, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9c3d, gbc.sp());
        EXPECT(0xa987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa985));
        EXPECT(0xba, gbc.readMem(0xa986));
        // CB BA 02EF
        gbc.setState(0x79a2, 0x5a0f, 0xc470, 0xabea, 0xb2c6, 0x1c08, 0x1, 0x1);
        gbc.writeMem(0x79a2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5a0f, gbc.sp());
        EXPECT(0x79a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02F0
        gbc.setState(0xb7b9, 0xcf80, 0x7090, 0xb91a, 0x175b, 0x4c29, 0x1, 0x0);
        gbc.writeMem(0xb7b9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcf80, gbc.sp());
        EXPECT(0xb7bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b9));
        EXPECT(0xba, gbc.readMem(0xb7ba));
        // CB BA 02F1
        gbc.setState(0x9571, 0xf013, 0x8cd0, 0x768d, 0xbf36, 0xffac, 0x0, 0x1);
        gbc.writeMem(0x9571, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf013, gbc.sp());
        EXPECT(0x9573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9571));
        EXPECT(0xba, gbc.readMem(0x9572));
        // CB BA 02F3
        gbc.setState(0x689f, 0xded6, 0x8500, 0x195a, 0xa7f0, 0xa75b, 0x0, 0x1);
        gbc.writeMem(0x689f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xded6, gbc.sp());
        EXPECT(0x68a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02F4
        gbc.setState(0x2652, 0x9c5f, 0x2f90, 0x1690, 0xa915, 0xee31, 0x0, 0x0);
        gbc.writeMem(0x2652, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9c5f, gbc.sp());
        EXPECT(0x2654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02F5
        gbc.setState(0xcce4, 0x5e7c, 0xa1b0, 0x70dd, 0xb39b, 0x3750, 0x0, 0x0);
        gbc.writeMem(0xcce4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5e7c, gbc.sp());
        EXPECT(0xcce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcce4));
        EXPECT(0xba, gbc.readMem(0xcce5));
        // CB BA 02F6
        gbc.setState(0x3b4f, 0x9883, 0xe1d0, 0x69be, 0xe8dc, 0xe527, 0x0, 0x0);
        gbc.writeMem(0x3b4f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9883, gbc.sp());
        EXPECT(0x3b51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02F7
        gbc.setState(0x96e8, 0x54e0, 0x3d60, 0x2d7, 0xa769, 0x7a51, 0x1, 0x1);
        gbc.writeMem(0x96e8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x54e0, gbc.sp());
        EXPECT(0x96ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e8));
        EXPECT(0xba, gbc.readMem(0x96e9));
        // CB BA 02F9
        gbc.setState(0x6746, 0x1b2b, 0xab20, 0x29fc, 0x52c5, 0x3047, 0x0, 0x0);
        gbc.writeMem(0x6746, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1b2b, gbc.sp());
        EXPECT(0x6748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02FA
        gbc.setState(0x6138, 0x5fe6, 0x8160, 0x55c3, 0xd3d6, 0x5c35, 0x1, 0x0);
        gbc.writeMem(0x6138, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5fe6, gbc.sp());
        EXPECT(0x613a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 02FB
        gbc.setState(0x1eac, 0xd6bb, 0xa3d0, 0xaba4, 0x7203, 0xa2a0, 0x1, 0x0);
        gbc.writeMem(0x1eac, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd6bb, gbc.sp());
        EXPECT(0x1eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02FC
        gbc.setState(0xd3e4, 0x48fc, 0xb0, 0xc620, 0xb409, 0x509f, 0x1, 0x1);
        gbc.writeMem(0xd3e4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x48fc, gbc.sp());
        EXPECT(0xd3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e4));
        EXPECT(0xba, gbc.readMem(0xd3e5));
        // CB BA 02FD
        gbc.setState(0x3cbc, 0x3090, 0x8c90, 0xeedb, 0xa3b5, 0x3b7a, 0x1, 0x1);
        gbc.writeMem(0x3cbc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3090, gbc.sp());
        EXPECT(0x3cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 02FE
        gbc.setState(0x95e2, 0x319c, 0xa830, 0x633d, 0xce07, 0x5b08, 0x1, 0x0);
        gbc.writeMem(0x95e2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x319c, gbc.sp());
        EXPECT(0x95e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e2));
        EXPECT(0xba, gbc.readMem(0x95e3));
        // CB BA 02FF
        gbc.setState(0xa472, 0xc2ac, 0x9300, 0x2f61, 0x71f3, 0x122, 0x0, 0x1);
        gbc.writeMem(0xa472, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc2ac, gbc.sp());
        EXPECT(0xa474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa472));
        EXPECT(0xba, gbc.readMem(0xa473));
        // CB BA 0301
        gbc.setState(0x27f8, 0x520d, 0x5dd0, 0x8760, 0xc154, 0x28a2, 0x1, 0x0);
        gbc.writeMem(0x27f8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x520d, gbc.sp());
        EXPECT(0x27fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0302
        gbc.setState(0xa2d1, 0xbf1, 0x29e0, 0xf841, 0x8b6d, 0xec5e, 0x0, 0x0);
        gbc.writeMem(0xa2d1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbf1, gbc.sp());
        EXPECT(0xa2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d1));
        EXPECT(0xba, gbc.readMem(0xa2d2));
        // CB BA 0303
        gbc.setState(0xc2f3, 0xedf6, 0xa900, 0x24b6, 0x77db, 0xd51, 0x1, 0x1);
        gbc.writeMem(0xc2f3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xedf6, gbc.sp());
        EXPECT(0xc2f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f3));
        EXPECT(0xba, gbc.readMem(0xc2f4));
        // CB BA 0305
        gbc.setState(0xa347, 0x7da5, 0x8640, 0x7928, 0x9b29, 0xe401, 0x1, 0x0);
        gbc.writeMem(0xa347, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7da5, gbc.sp());
        EXPECT(0xa349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa347));
        EXPECT(0xba, gbc.readMem(0xa348));
        // CB BA 0306
        gbc.setState(0x2674, 0x7963, 0x4480, 0x26be, 0x700a, 0xc1f3, 0x0, 0x1);
        gbc.writeMem(0x2674, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7963, gbc.sp());
        EXPECT(0x2676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0307
        gbc.setState(0x2ede, 0x90ed, 0xba80, 0x1bb2, 0x3be4, 0x679e, 0x0, 0x1);
        gbc.writeMem(0x2ede, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x90ed, gbc.sp());
        EXPECT(0x2ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0309
        gbc.setState(0xe36f, 0x87f4, 0x71e0, 0x297f, 0xb721, 0x534, 0x1, 0x0);
        gbc.writeMem(0xe36f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x87f4, gbc.sp());
        EXPECT(0xe371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe36f));
        EXPECT(0xba, gbc.readMem(0xe370));
        // CB BA 030A
        gbc.setState(0x353f, 0xd2c5, 0x63b0, 0x2ca0, 0xfc1b, 0x7bc0, 0x0, 0x0);
        gbc.writeMem(0x353f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd2c5, gbc.sp());
        EXPECT(0x3541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 030B
        gbc.setState(0x1e33, 0x3106, 0xa00, 0x7483, 0x9ea, 0x304d, 0x1, 0x0);
        gbc.writeMem(0x1e33, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3106, gbc.sp());
        EXPECT(0x1e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 030D
        gbc.setState(0x4397, 0x89ce, 0x6210, 0x5054, 0xe4ad, 0x51c6, 0x0, 0x1);
        gbc.writeMem(0x4397, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x89ce, gbc.sp());
        EXPECT(0x4399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 030E
        gbc.setState(0xc3da, 0xcb89, 0x3f60, 0x1428, 0xded, 0xd9e3, 0x0, 0x1);
        gbc.writeMem(0xc3da, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcb89, gbc.sp());
        EXPECT(0xc3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3da));
        EXPECT(0xba, gbc.readMem(0xc3db));
        // CB BA 030F
        gbc.setState(0x4585, 0x4a05, 0xa0b0, 0x7ff0, 0xc95, 0xa66f, 0x1, 0x0);
        gbc.writeMem(0x4585, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4a05, gbc.sp());
        EXPECT(0x4587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0310
        gbc.setState(0xbf9a, 0x825b, 0x48e0, 0xaa1d, 0x71f, 0x189d, 0x1, 0x0);
        gbc.writeMem(0xbf9a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x825b, gbc.sp());
        EXPECT(0xbf9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf9a));
        EXPECT(0xba, gbc.readMem(0xbf9b));
        // CB BA 0311
        gbc.setState(0xa242, 0x695c, 0xa900, 0x7ba, 0xc03f, 0x65b6, 0x0, 0x1);
        gbc.writeMem(0xa242, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x695c, gbc.sp());
        EXPECT(0xa244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa242));
        EXPECT(0xba, gbc.readMem(0xa243));
        // CB BA 0313
        gbc.setState(0xb10c, 0xdb4d, 0x73b0, 0x379d, 0x7371, 0xe493, 0x0, 0x1);
        gbc.writeMem(0xb10c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdb4d, gbc.sp());
        EXPECT(0xb10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10c));
        EXPECT(0xba, gbc.readMem(0xb10d));
        // CB BA 0314
        gbc.setState(0x7745, 0xf4e7, 0xc190, 0xac5c, 0x1bed, 0x19f6, 0x0, 0x1);
        gbc.writeMem(0x7745, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf4e7, gbc.sp());
        EXPECT(0x7747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0315
        gbc.setState(0x24c1, 0xb9cc, 0x56d0, 0xff8f, 0xe4fd, 0x17a5, 0x1, 0x1);
        gbc.writeMem(0x24c1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb9cc, gbc.sp());
        EXPECT(0x24c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0316
        gbc.setState(0x11e8, 0xbb73, 0xf280, 0xc9a1, 0xa072, 0xd051, 0x0, 0x1);
        gbc.writeMem(0x11e8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbb73, gbc.sp());
        EXPECT(0x11ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0317
        gbc.setState(0x458c, 0x723b, 0x4f90, 0x8e34, 0xf4c, 0x5654, 0x0, 0x1);
        gbc.writeMem(0x458c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x723b, gbc.sp());
        EXPECT(0x458e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0318
        gbc.setState(0x9e38, 0x5c47, 0x9450, 0xca7, 0x7cf8, 0x8360, 0x0, 0x0);
        gbc.writeMem(0x9e38, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5c47, gbc.sp());
        EXPECT(0x9e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e38));
        EXPECT(0xba, gbc.readMem(0x9e39));
        // CB BA 0319
        gbc.setState(0x830, 0xe9f3, 0x3390, 0xe480, 0x673f, 0x1cae, 0x0, 0x0);
        gbc.writeMem(0x830, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe9f3, gbc.sp());
        EXPECT(0x832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 031A
        gbc.setState(0xdf5a, 0x35fb, 0x8bd0, 0x5e4a, 0xa31, 0xab6b, 0x0, 0x1);
        gbc.writeMem(0xdf5a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x35fb, gbc.sp());
        EXPECT(0xdf5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5a));
        EXPECT(0xba, gbc.readMem(0xdf5b));
        // CB BA 031B
        gbc.setState(0xee2d, 0x455e, 0xa070, 0xbacd, 0xe632, 0xe47d, 0x0, 0x1);
        gbc.writeMem(0xee2d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x455e, gbc.sp());
        EXPECT(0xee2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2d));
        EXPECT(0xba, gbc.readMem(0xee2e));
        // CB BA 031C
        gbc.setState(0x3898, 0x3250, 0x3b50, 0xf6dd, 0xbed1, 0x47c3, 0x1, 0x0);
        gbc.writeMem(0x3898, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3250, gbc.sp());
        EXPECT(0x389a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 031D
        gbc.setState(0x27ba, 0x11b2, 0xe8f0, 0x7c5f, 0xbeaf, 0x4d00, 0x1, 0x1);
        gbc.writeMem(0x27ba, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x11b2, gbc.sp());
        EXPECT(0x27bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 031F
        gbc.setState(0x4178, 0xc45e, 0xfd60, 0x730b, 0x7d43, 0x3ed2, 0x1, 0x1);
        gbc.writeMem(0x4178, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc45e, gbc.sp());
        EXPECT(0x417a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0320
        gbc.setState(0xbf7b, 0x41e9, 0xeb30, 0x8b3f, 0x7b2c, 0xdb49, 0x1, 0x1);
        gbc.writeMem(0xbf7b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x41e9, gbc.sp());
        EXPECT(0xbf7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf7b));
        EXPECT(0xba, gbc.readMem(0xbf7c));
        // CB BA 0321
        gbc.setState(0x6fab, 0x2d0f, 0x150, 0x8a99, 0xedf2, 0x9ff5, 0x1, 0x1);
        gbc.writeMem(0x6fab, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2d0f, gbc.sp());
        EXPECT(0x6fad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0322
        gbc.setState(0xee5, 0xfbfe, 0x9ab0, 0xc514, 0xd94f, 0x3b81, 0x0, 0x1);
        gbc.writeMem(0xee5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfbfe, gbc.sp());
        EXPECT(0xee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0323
        gbc.setState(0x822d, 0x68a3, 0x500, 0xc3d, 0xae92, 0xaf4e, 0x1, 0x0);
        gbc.writeMem(0x822d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x68a3, gbc.sp());
        EXPECT(0x822f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822d));
        EXPECT(0xba, gbc.readMem(0x822e));
        // CB BA 0325
        gbc.setState(0x796d, 0xc857, 0x17e0, 0x6391, 0x15b2, 0xf452, 0x1, 0x0);
        gbc.writeMem(0x796d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc857, gbc.sp());
        EXPECT(0x796f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0326
        gbc.setState(0xecf4, 0x59a, 0x8480, 0x7d42, 0xb3d8, 0xe72, 0x1, 0x1);
        gbc.writeMem(0xecf4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x59a, gbc.sp());
        EXPECT(0xecf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf4));
        EXPECT(0xba, gbc.readMem(0xecf5));
        // CB BA 0327
        gbc.setState(0x423e, 0xf795, 0xb9e0, 0x613c, 0xc421, 0xb3d8, 0x1, 0x0);
        gbc.writeMem(0x423e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf795, gbc.sp());
        EXPECT(0x4240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0328
        gbc.setState(0x5291, 0x8357, 0x8ca0, 0x8470, 0x65f2, 0x4c47, 0x1, 0x0);
        gbc.writeMem(0x5291, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8357, gbc.sp());
        EXPECT(0x5293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0329
        gbc.setState(0x96b2, 0x8e01, 0xbdb0, 0x2516, 0xd0da, 0xb72a, 0x0, 0x0);
        gbc.writeMem(0x96b2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8e01, gbc.sp());
        EXPECT(0x96b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b2));
        EXPECT(0xba, gbc.readMem(0x96b3));
        // CB BA 032A
        gbc.setState(0x107a, 0x3508, 0x7b30, 0x1013, 0x7298, 0xff26, 0x1, 0x1);
        gbc.writeMem(0x107a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3508, gbc.sp());
        EXPECT(0x107c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 032B
        gbc.setState(0x7640, 0x2293, 0x4420, 0x9f83, 0xa171, 0x1929, 0x0, 0x0);
        gbc.writeMem(0x7640, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2293, gbc.sp());
        EXPECT(0x7642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 032C
        gbc.setState(0x4448, 0x65b, 0x55b0, 0xafba, 0x966, 0x5766, 0x1, 0x1);
        gbc.writeMem(0x4448, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x65b, gbc.sp());
        EXPECT(0x444a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 032D
        gbc.setState(0xd823, 0x3d94, 0x4200, 0xef73, 0xbb7f, 0x4fb2, 0x0, 0x0);
        gbc.writeMem(0xd823, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3d94, gbc.sp());
        EXPECT(0xd825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd823));
        EXPECT(0xba, gbc.readMem(0xd824));
        // CB BA 032E
        gbc.setState(0xaa47, 0x9620, 0xee50, 0xebb3, 0xa2de, 0x7a9a, 0x1, 0x0);
        gbc.writeMem(0xaa47, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9620, gbc.sp());
        EXPECT(0xaa49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa47));
        EXPECT(0xba, gbc.readMem(0xaa48));
        // CB BA 032F
        gbc.setState(0x5b4d, 0xdb6f, 0xf520, 0xe27f, 0x5704, 0xe306, 0x1, 0x0);
        gbc.writeMem(0x5b4d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdb6f, gbc.sp());
        EXPECT(0x5b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0330
        gbc.setState(0xa3c6, 0x3afa, 0xff30, 0x98e7, 0x45d4, 0x217, 0x0, 0x1);
        gbc.writeMem(0xa3c6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3afa, gbc.sp());
        EXPECT(0xa3c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c6));
        EXPECT(0xba, gbc.readMem(0xa3c7));
        // CB BA 0331
        gbc.setState(0xa1, 0x1370, 0x7f50, 0x872c, 0xe979, 0xa224, 0x0, 0x1);
        gbc.writeMem(0xa1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1370, gbc.sp());
        EXPECT(0xa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0332
        gbc.setState(0x502, 0x5280, 0xf430, 0x7f6d, 0xf514, 0x6ff, 0x0, 0x1);
        gbc.writeMem(0x502, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5280, gbc.sp());
        EXPECT(0x504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0333
        gbc.setState(0x68a0, 0xa6fe, 0x3820, 0x300, 0xa29b, 0x1243, 0x1, 0x0);
        gbc.writeMem(0x68a0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa6fe, gbc.sp());
        EXPECT(0x68a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0334
        gbc.setState(0x95d, 0xb023, 0x7910, 0xcb44, 0xce77, 0xf849, 0x0, 0x0);
        gbc.writeMem(0x95d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb023, gbc.sp());
        EXPECT(0x95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0335
        gbc.setState(0xe92f, 0x1219, 0xb6b0, 0xc85d, 0x7250, 0x5c69, 0x0, 0x1);
        gbc.writeMem(0xe92f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1219, gbc.sp());
        EXPECT(0xe931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe92f));
        EXPECT(0xba, gbc.readMem(0xe930));
        // CB BA 0336
        gbc.setState(0x766b, 0x64e1, 0xaa20, 0x335, 0x4e7f, 0x890e, 0x0, 0x0);
        gbc.writeMem(0x766b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x64e1, gbc.sp());
        EXPECT(0x766d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0337
        gbc.setState(0xe247, 0xc4ff, 0x19b0, 0x4ace, 0x877f, 0x4236, 0x1, 0x1);
        gbc.writeMem(0xe247, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc4ff, gbc.sp());
        EXPECT(0xe249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe247));
        EXPECT(0xba, gbc.readMem(0xe248));
        // CB BA 0338
        gbc.setState(0x6e48, 0x792, 0x8690, 0xadde, 0x20ca, 0x9405, 0x0, 0x0);
        gbc.writeMem(0x6e48, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x792, gbc.sp());
        EXPECT(0x6e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0339
        gbc.setState(0xb165, 0xa18b, 0xe650, 0xac2e, 0xd6ba, 0x4570, 0x1, 0x0);
        gbc.writeMem(0xb165, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa18b, gbc.sp());
        EXPECT(0xb167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb165));
        EXPECT(0xba, gbc.readMem(0xb166));
        // CB BA 033A
        gbc.setState(0xebd1, 0x9025, 0xe00, 0x5827, 0x9657, 0xb15c, 0x1, 0x0);
        gbc.writeMem(0xebd1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9025, gbc.sp());
        EXPECT(0xebd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd1));
        EXPECT(0xba, gbc.readMem(0xebd2));
        // CB BA 033B
        gbc.setState(0x3add, 0x14ff, 0x8520, 0xbe09, 0x7e7a, 0xc832, 0x0, 0x1);
        gbc.writeMem(0x3add, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x14ff, gbc.sp());
        EXPECT(0x3adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 033C
        gbc.setState(0xedb7, 0x95ce, 0xa200, 0x2894, 0x9d1d, 0x29a1, 0x0, 0x1);
        gbc.writeMem(0xedb7, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x95ce, gbc.sp());
        EXPECT(0xedb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb7));
        EXPECT(0xba, gbc.readMem(0xedb8));
        // CB BA 033D
        gbc.setState(0xdff4, 0x7d61, 0x5140, 0xe44c, 0x91ab, 0xe5a, 0x1, 0x1);
        gbc.writeMem(0xdff4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7d61, gbc.sp());
        EXPECT(0xdff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff4));
        EXPECT(0xba, gbc.readMem(0xdff5));
        // CB BA 033E
        gbc.setState(0x7b04, 0xfcf9, 0x2410, 0xa1f2, 0x275f, 0xab57, 0x1, 0x0);
        gbc.writeMem(0x7b04, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfcf9, gbc.sp());
        EXPECT(0x7b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 033F
        gbc.setState(0x4625, 0xc6aa, 0x1430, 0x695e, 0xb1e9, 0xf617, 0x1, 0x0);
        gbc.writeMem(0x4625, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc6aa, gbc.sp());
        EXPECT(0x4627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0340
        gbc.setState(0xb999, 0x5ac7, 0x82e0, 0x10f0, 0x2866, 0x45f0, 0x0, 0x0);
        gbc.writeMem(0xb999, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5ac7, gbc.sp());
        EXPECT(0xb99b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb999));
        EXPECT(0xba, gbc.readMem(0xb99a));
        // CB BA 0341
        gbc.setState(0xdef, 0x6dc4, 0x9bd0, 0x47d3, 0xb474, 0xecfc, 0x0, 0x1);
        gbc.writeMem(0xdef, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6dc4, gbc.sp());
        EXPECT(0xdf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0342
        gbc.setState(0xb991, 0xf31a, 0x1c90, 0xf485, 0xc011, 0x3056, 0x1, 0x1);
        gbc.writeMem(0xb991, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf31a, gbc.sp());
        EXPECT(0xb993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb991));
        EXPECT(0xba, gbc.readMem(0xb992));
        // CB BA 0343
        gbc.setState(0xd163, 0x34a7, 0x8110, 0x904f, 0xb955, 0x40f3, 0x0, 0x0);
        gbc.writeMem(0xd163, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x34a7, gbc.sp());
        EXPECT(0xd165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd163));
        EXPECT(0xba, gbc.readMem(0xd164));
        // CB BA 0344
        gbc.setState(0x11c8, 0x1b4d, 0x4910, 0x56ab, 0x41ad, 0xf64c, 0x0, 0x0);
        gbc.writeMem(0x11c8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1b4d, gbc.sp());
        EXPECT(0x11ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0345
        gbc.setState(0xe118, 0x27be, 0x4960, 0xb16b, 0x57d5, 0xd7f7, 0x1, 0x1);
        gbc.writeMem(0xe118, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x27be, gbc.sp());
        EXPECT(0xe11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe118));
        EXPECT(0xba, gbc.readMem(0xe119));
        // CB BA 0346
        gbc.setState(0xa246, 0xecd5, 0x3180, 0xc881, 0x86fb, 0x85b4, 0x0, 0x0);
        gbc.writeMem(0xa246, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xecd5, gbc.sp());
        EXPECT(0xa248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa246));
        EXPECT(0xba, gbc.readMem(0xa247));
        // CB BA 0347
        gbc.setState(0xa582, 0x23c, 0x78e0, 0xff31, 0x9e2b, 0xa9c2, 0x1, 0x0);
        gbc.writeMem(0xa582, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x23c, gbc.sp());
        EXPECT(0xa584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa582));
        EXPECT(0xba, gbc.readMem(0xa583));
        // CB BA 0348
        gbc.setState(0xd8e8, 0x597e, 0xf480, 0x7ea9, 0x3f78, 0x1df1, 0x1, 0x0);
        gbc.writeMem(0xd8e8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x597e, gbc.sp());
        EXPECT(0xd8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e8));
        EXPECT(0xba, gbc.readMem(0xd8e9));
        // CB BA 0349
        gbc.setState(0x2a1e, 0x561a, 0x18d0, 0x3d64, 0xbc6f, 0xa782, 0x1, 0x1);
        gbc.writeMem(0x2a1e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x561a, gbc.sp());
        EXPECT(0x2a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 034A
        gbc.setState(0x86f, 0xa083, 0x2f10, 0x3e77, 0x57f0, 0xd516, 0x0, 0x1);
        gbc.writeMem(0x86f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa083, gbc.sp());
        EXPECT(0x871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 034B
        gbc.setState(0xaf95, 0x4723, 0x4ab0, 0x1b9c, 0xe59c, 0xf77a, 0x0, 0x1);
        gbc.writeMem(0xaf95, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4723, gbc.sp());
        EXPECT(0xaf97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf95));
        EXPECT(0xba, gbc.readMem(0xaf96));
        // CB BA 034C
        gbc.setState(0xa037, 0x7050, 0xfd80, 0xd0f1, 0xeb1a, 0xff6f, 0x1, 0x1);
        gbc.writeMem(0xa037, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7050, gbc.sp());
        EXPECT(0xa039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa037));
        EXPECT(0xba, gbc.readMem(0xa038));
        // CB BA 034D
        gbc.setState(0x34cb, 0x625f, 0x5550, 0xf970, 0x39b4, 0xec84, 0x0, 0x0);
        gbc.writeMem(0x34cb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x625f, gbc.sp());
        EXPECT(0x34cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 034E
        gbc.setState(0x7fbb, 0x6a3b, 0x2af0, 0x9740, 0x6893, 0x3c88, 0x0, 0x1);
        gbc.writeMem(0x7fbb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6a3b, gbc.sp());
        EXPECT(0x7fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 034F
        gbc.setState(0x26c8, 0xf491, 0x9300, 0x31b1, 0xeeec, 0x7047, 0x1, 0x0);
        gbc.writeMem(0x26c8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf491, gbc.sp());
        EXPECT(0x26ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0350
        gbc.setState(0x6932, 0x3066, 0xbd90, 0x5987, 0x45e1, 0xaa61, 0x0, 0x0);
        gbc.writeMem(0x6932, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3066, gbc.sp());
        EXPECT(0x6934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0351
        gbc.setState(0x5c0f, 0x5897, 0x68d0, 0x53d0, 0xd717, 0xa02f, 0x0, 0x0);
        gbc.writeMem(0x5c0f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5897, gbc.sp());
        EXPECT(0x5c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0352
        gbc.setState(0x8c4b, 0xc53b, 0x9520, 0x7311, 0x921d, 0xa03a, 0x0, 0x0);
        gbc.writeMem(0x8c4b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc53b, gbc.sp());
        EXPECT(0x8c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c4b));
        EXPECT(0xba, gbc.readMem(0x8c4c));
        // CB BA 0353
        gbc.setState(0xb3f2, 0xeb81, 0x5a40, 0x8357, 0x9610, 0x23e6, 0x0, 0x1);
        gbc.writeMem(0xb3f2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xeb81, gbc.sp());
        EXPECT(0xb3f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f2));
        EXPECT(0xba, gbc.readMem(0xb3f3));
        // CB BA 0354
        gbc.setState(0x6bc3, 0xb9cd, 0x55c0, 0x4871, 0x79db, 0xa286, 0x0, 0x0);
        gbc.writeMem(0x6bc3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb9cd, gbc.sp());
        EXPECT(0x6bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0355
        gbc.setState(0x3cd, 0x6388, 0x8410, 0xafa7, 0xaba1, 0xa968, 0x1, 0x0);
        gbc.writeMem(0x3cd, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6388, gbc.sp());
        EXPECT(0x3cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0356
        gbc.setState(0xd95b, 0x49a, 0x4670, 0xc0c5, 0xa555, 0x55c1, 0x0, 0x0);
        gbc.writeMem(0xd95b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x49a, gbc.sp());
        EXPECT(0xd95d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd95b));
        EXPECT(0xba, gbc.readMem(0xd95c));
        // CB BA 0357
        gbc.setState(0x451f, 0xabf3, 0x8e90, 0x5597, 0xa034, 0x7267, 0x0, 0x1);
        gbc.writeMem(0x451f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xabf3, gbc.sp());
        EXPECT(0x4521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0358
        gbc.setState(0xbd09, 0x23d5, 0x8060, 0x2d23, 0x1c9d, 0x46e7, 0x1, 0x0);
        gbc.writeMem(0xbd09, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x23d5, gbc.sp());
        EXPECT(0xbd0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd09));
        EXPECT(0xba, gbc.readMem(0xbd0a));
        // CB BA 0359
        gbc.setState(0x65cd, 0x8f10, 0xc050, 0x6a4f, 0xce6d, 0xead4, 0x1, 0x1);
        gbc.writeMem(0x65cd, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8f10, gbc.sp());
        EXPECT(0x65cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 035A
        gbc.setState(0x8ee0, 0x4095, 0x21e0, 0xb9d0, 0xf6ef, 0x1184, 0x1, 0x1);
        gbc.writeMem(0x8ee0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4095, gbc.sp());
        EXPECT(0x8ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee0));
        EXPECT(0xba, gbc.readMem(0x8ee1));
        // CB BA 035B
        gbc.setState(0x24ba, 0x82c0, 0xa590, 0x752f, 0x55dc, 0x8878, 0x0, 0x0);
        gbc.writeMem(0x24ba, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x82c0, gbc.sp());
        EXPECT(0x24bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 035C
        gbc.setState(0x901f, 0x2a9b, 0x59f0, 0x6789, 0x5f67, 0xcefe, 0x1, 0x1);
        gbc.writeMem(0x901f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2a9b, gbc.sp());
        EXPECT(0x9021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901f));
        EXPECT(0xba, gbc.readMem(0x9020));
        // CB BA 035D
        gbc.setState(0x1e82, 0xd2e0, 0xcec0, 0xa4ed, 0x2f35, 0x156, 0x1, 0x1);
        gbc.writeMem(0x1e82, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd2e0, gbc.sp());
        EXPECT(0x1e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 035E
        gbc.setState(0xcef1, 0x14ad, 0xd460, 0x45f, 0xb125, 0x33b0, 0x1, 0x0);
        gbc.writeMem(0xcef1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x14ad, gbc.sp());
        EXPECT(0xcef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef1));
        EXPECT(0xba, gbc.readMem(0xcef2));
        // CB BA 035F
        gbc.setState(0xaf38, 0x5749, 0xf230, 0x4ead, 0xb618, 0x385d, 0x0, 0x1);
        gbc.writeMem(0xaf38, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5749, gbc.sp());
        EXPECT(0xaf3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf38));
        EXPECT(0xba, gbc.readMem(0xaf39));
        // CB BA 0360
        gbc.setState(0x84f8, 0xb471, 0x50c0, 0x496d, 0x9519, 0x4d6e, 0x1, 0x1);
        gbc.writeMem(0x84f8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb471, gbc.sp());
        EXPECT(0x84fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f8));
        EXPECT(0xba, gbc.readMem(0x84f9));
        // CB BA 0361
        gbc.setState(0xa649, 0xc371, 0xe450, 0x16d6, 0x6bcb, 0xef2a, 0x1, 0x0);
        gbc.writeMem(0xa649, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc371, gbc.sp());
        EXPECT(0xa64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa649));
        EXPECT(0xba, gbc.readMem(0xa64a));
        // CB BA 0362
        gbc.setState(0x49fb, 0x25ac, 0x7e70, 0xc291, 0x4ee4, 0xb47e, 0x0, 0x0);
        gbc.writeMem(0x49fb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x25ac, gbc.sp());
        EXPECT(0x49fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0364
        gbc.setState(0xddb3, 0xf435, 0xed50, 0xa4a9, 0x97fc, 0xd487, 0x0, 0x0);
        gbc.writeMem(0xddb3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf435, gbc.sp());
        EXPECT(0xddb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb3));
        EXPECT(0xba, gbc.readMem(0xddb4));
        // CB BA 0365
        gbc.setState(0xe5cf, 0x6f8f, 0x84f0, 0x3d0a, 0x1a64, 0x21dd, 0x0, 0x0);
        gbc.writeMem(0xe5cf, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6f8f, gbc.sp());
        EXPECT(0xe5d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5cf));
        EXPECT(0xba, gbc.readMem(0xe5d0));
        // CB BA 0366
        gbc.setState(0xe108, 0xee21, 0xd3b0, 0xd3dd, 0xa63, 0x244e, 0x1, 0x0);
        gbc.writeMem(0xe108, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xee21, gbc.sp());
        EXPECT(0xe10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe108));
        EXPECT(0xba, gbc.readMem(0xe109));
        // CB BA 0367
        gbc.setState(0xc944, 0x3427, 0xc0b0, 0x3308, 0x1638, 0xee51, 0x0, 0x0);
        gbc.writeMem(0xc944, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3427, gbc.sp());
        EXPECT(0xc946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc944));
        EXPECT(0xba, gbc.readMem(0xc945));
        // CB BA 0368
        gbc.setState(0xd7d9, 0x702b, 0x6340, 0x89f2, 0xf6b9, 0x986c, 0x1, 0x1);
        gbc.writeMem(0xd7d9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x702b, gbc.sp());
        EXPECT(0xd7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d9));
        EXPECT(0xba, gbc.readMem(0xd7da));
        // CB BA 0369
        gbc.setState(0xaa31, 0xf1df, 0xa830, 0xe007, 0xfb5c, 0x91b8, 0x0, 0x0);
        gbc.writeMem(0xaa31, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf1df, gbc.sp());
        EXPECT(0xaa33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa31));
        EXPECT(0xba, gbc.readMem(0xaa32));
        // CB BA 036A
        gbc.setState(0xb723, 0x8346, 0x3390, 0x7a2f, 0x5077, 0xb879, 0x1, 0x1);
        gbc.writeMem(0xb723, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8346, gbc.sp());
        EXPECT(0xb725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb723));
        EXPECT(0xba, gbc.readMem(0xb724));
        // CB BA 036B
        gbc.setState(0x7f00, 0xa8dc, 0xd160, 0x72df, 0xa38c, 0xf7b5, 0x1, 0x0);
        gbc.writeMem(0x7f00, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa8dc, gbc.sp());
        EXPECT(0x7f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 036C
        gbc.setState(0x2802, 0xeefb, 0x1d60, 0x2448, 0x86b5, 0xbc09, 0x1, 0x1);
        gbc.writeMem(0x2802, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xeefb, gbc.sp());
        EXPECT(0x2804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 036D
        gbc.setState(0x1ad3, 0x1519, 0x5610, 0x5a57, 0x95f1, 0xec8b, 0x0, 0x1);
        gbc.writeMem(0x1ad3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1519, gbc.sp());
        EXPECT(0x1ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 036E
        gbc.setState(0xaaa6, 0xd61d, 0xa4b0, 0xffb2, 0x8964, 0x34c4, 0x1, 0x1);
        gbc.writeMem(0xaaa6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd61d, gbc.sp());
        EXPECT(0xaaa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa6));
        EXPECT(0xba, gbc.readMem(0xaaa7));
        // CB BA 036F
        gbc.setState(0x1c89, 0xd701, 0xb20, 0xe7cf, 0xcbf2, 0xfaee, 0x0, 0x0);
        gbc.writeMem(0x1c89, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd701, gbc.sp());
        EXPECT(0x1c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0370
        gbc.setState(0xd2f0, 0x72df, 0xa870, 0x3e8, 0x23ee, 0x9a61, 0x0, 0x0);
        gbc.writeMem(0xd2f0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x72df, gbc.sp());
        EXPECT(0xd2f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f0));
        EXPECT(0xba, gbc.readMem(0xd2f1));
        // CB BA 0371
        gbc.setState(0x8db0, 0xfdcc, 0xc970, 0x8855, 0x174d, 0xc58f, 0x0, 0x0);
        gbc.writeMem(0x8db0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfdcc, gbc.sp());
        EXPECT(0x8db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db0));
        EXPECT(0xba, gbc.readMem(0x8db1));
        // CB BA 0372
        gbc.setState(0xb668, 0xc4d3, 0x3f20, 0x3643, 0x9d9, 0xab1c, 0x0, 0x0);
        gbc.writeMem(0xb668, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc4d3, gbc.sp());
        EXPECT(0xb66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb668));
        EXPECT(0xba, gbc.readMem(0xb669));
        // CB BA 0373
        gbc.setState(0x631a, 0x3b6, 0xa6e0, 0x633a, 0xb468, 0x69c2, 0x1, 0x0);
        gbc.writeMem(0x631a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3b6, gbc.sp());
        EXPECT(0x631c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0374
        gbc.setState(0xe12c, 0xdfe9, 0x28e0, 0x8c10, 0xae2b, 0xeb1d, 0x0, 0x0);
        gbc.writeMem(0xe12c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xdfe9, gbc.sp());
        EXPECT(0xe12e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe12c));
        EXPECT(0xba, gbc.readMem(0xe12d));
        // CB BA 0375
        gbc.setState(0x85da, 0x54a8, 0x5a40, 0x84f9, 0x6040, 0x1b99, 0x0, 0x1);
        gbc.writeMem(0x85da, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x54a8, gbc.sp());
        EXPECT(0x85dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85da));
        EXPECT(0xba, gbc.readMem(0x85db));
        // CB BA 0376
        gbc.setState(0x18c4, 0x750, 0xbc0, 0x3cea, 0x7e1a, 0x1f72, 0x0, 0x1);
        gbc.writeMem(0x18c4, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x750, gbc.sp());
        EXPECT(0x18c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0377
        gbc.setState(0x31f5, 0x74b4, 0xec00, 0x1b5f, 0x7328, 0x6610, 0x0, 0x0);
        gbc.writeMem(0x31f5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x74b4, gbc.sp());
        EXPECT(0x31f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0378
        gbc.setState(0x1316, 0x2e54, 0xbf00, 0xdb2b, 0xc061, 0x8984, 0x1, 0x1);
        gbc.writeMem(0x1316, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2e54, gbc.sp());
        EXPECT(0x1318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0379
        gbc.setState(0x9f77, 0x3f2, 0x1cc0, 0x67a2, 0x41fa, 0x3511, 0x1, 0x1);
        gbc.writeMem(0x9f77, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3f2, gbc.sp());
        EXPECT(0x9f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f77));
        EXPECT(0xba, gbc.readMem(0x9f78));
        // CB BA 037A
        gbc.setState(0xa96a, 0x3030, 0x8860, 0x687c, 0x3811, 0x6557, 0x1, 0x0);
        gbc.writeMem(0xa96a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3030, gbc.sp());
        EXPECT(0xa96c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96a));
        EXPECT(0xba, gbc.readMem(0xa96b));
        // CB BA 037B
        gbc.setState(0x4567, 0x68ed, 0x8b70, 0xb1aa, 0x9dd5, 0xb656, 0x1, 0x0);
        gbc.writeMem(0x4567, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x68ed, gbc.sp());
        EXPECT(0x4569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 037C
        gbc.setState(0x2210, 0x826, 0x4120, 0xac68, 0x592f, 0xdf55, 0x0, 0x0);
        gbc.writeMem(0x2210, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x826, gbc.sp());
        EXPECT(0x2212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 037D
        gbc.setState(0xe9fa, 0xf60c, 0x2ce0, 0x4a87, 0x3bef, 0x1d0a, 0x1, 0x0);
        gbc.writeMem(0xe9fa, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf60c, gbc.sp());
        EXPECT(0xe9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9fa));
        EXPECT(0xba, gbc.readMem(0xe9fb));
        // CB BA 037E
        gbc.setState(0xba7d, 0xe7c7, 0x7ab0, 0x6f3d, 0x7eee, 0xfe81, 0x1, 0x0);
        gbc.writeMem(0xba7d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe7c7, gbc.sp());
        EXPECT(0xba7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba7d));
        EXPECT(0xba, gbc.readMem(0xba7e));
        // CB BA 037F
        gbc.setState(0x502e, 0x27f9, 0x2530, 0xb8ff, 0x3df1, 0xe570, 0x0, 0x0);
        gbc.writeMem(0x502e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x27f9, gbc.sp());
        EXPECT(0x5030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0380
        gbc.setState(0xe687, 0xdf29, 0x5ea0, 0x1dc3, 0x58a9, 0x7804, 0x0, 0x0);
        gbc.writeMem(0xe687, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdf29, gbc.sp());
        EXPECT(0xe689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe687));
        EXPECT(0xba, gbc.readMem(0xe688));
        // CB BA 0381
        gbc.setState(0xb577, 0x5a8b, 0xade0, 0xdc68, 0x9ccd, 0x9e38, 0x1, 0x1);
        gbc.writeMem(0xb577, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5a8b, gbc.sp());
        EXPECT(0xb579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb577));
        EXPECT(0xba, gbc.readMem(0xb578));
        // CB BA 0382
        gbc.setState(0x5a44, 0xc0aa, 0xab00, 0x7681, 0x9b69, 0xffe6, 0x1, 0x0);
        gbc.writeMem(0x5a44, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc0aa, gbc.sp());
        EXPECT(0x5a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0383
        gbc.setState(0x42c2, 0xd0, 0xbc20, 0xe908, 0x860, 0x7209, 0x1, 0x1);
        gbc.writeMem(0x42c2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd0, gbc.sp());
        EXPECT(0x42c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0384
        gbc.setState(0x12d5, 0xdec3, 0xccd0, 0x9bba, 0xee52, 0x37ce, 0x0, 0x0);
        gbc.writeMem(0x12d5, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdec3, gbc.sp());
        EXPECT(0x12d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0385
        gbc.setState(0xb30a, 0x8c02, 0x9a10, 0x1d98, 0x67af, 0x75ed, 0x1, 0x0);
        gbc.writeMem(0xb30a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8c02, gbc.sp());
        EXPECT(0xb30c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb30a));
        EXPECT(0xba, gbc.readMem(0xb30b));
        // CB BA 0386
        gbc.setState(0x6dfb, 0x95cc, 0xa9f0, 0x28a2, 0xd96b, 0xbc8a, 0x0, 0x1);
        gbc.writeMem(0x6dfb, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x95cc, gbc.sp());
        EXPECT(0x6dfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0387
        gbc.setState(0x8c82, 0xfd91, 0xab70, 0xd014, 0x1031, 0x300b, 0x1, 0x1);
        gbc.writeMem(0x8c82, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfd91, gbc.sp());
        EXPECT(0x8c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c82));
        EXPECT(0xba, gbc.readMem(0x8c83));
        // CB BA 0388
        gbc.setState(0xdce1, 0x8169, 0x3630, 0x2101, 0xdf38, 0xddbe, 0x0, 0x0);
        gbc.writeMem(0xdce1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8169, gbc.sp());
        EXPECT(0xdce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce1));
        EXPECT(0xba, gbc.readMem(0xdce2));
        // CB BA 0389
        gbc.setState(0xa44e, 0xc1eb, 0x7290, 0x9a96, 0xf753, 0x52a4, 0x1, 0x1);
        gbc.writeMem(0xa44e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc1eb, gbc.sp());
        EXPECT(0xa450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44e));
        EXPECT(0xba, gbc.readMem(0xa44f));
        // CB BA 038A
        gbc.setState(0x5bca, 0xcefa, 0x7440, 0x7979, 0x28e2, 0x3810, 0x0, 0x0);
        gbc.writeMem(0x5bca, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcefa, gbc.sp());
        EXPECT(0x5bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 038C
        gbc.setState(0x8010, 0x5d91, 0x2640, 0xd8d9, 0x77f3, 0x8600, 0x0, 0x1);
        gbc.writeMem(0x8010, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5d91, gbc.sp());
        EXPECT(0x8012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8010));
        EXPECT(0xba, gbc.readMem(0x8011));
        // CB BA 038F
        gbc.setState(0xb495, 0x4ba0, 0x1190, 0x2fc2, 0xbaf5, 0xe219, 0x0, 0x0);
        gbc.writeMem(0xb495, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4ba0, gbc.sp());
        EXPECT(0xb497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb495));
        EXPECT(0xba, gbc.readMem(0xb496));
        // CB BA 0390
        gbc.setState(0x8228, 0xff46, 0xd160, 0x8fa, 0x1637, 0xebc1, 0x0, 0x1);
        gbc.writeMem(0x8228, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xff46, gbc.sp());
        EXPECT(0x822a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8228));
        EXPECT(0xba, gbc.readMem(0x8229));
        // CB BA 0391
        gbc.setState(0x4c9, 0x381d, 0xac90, 0xceff, 0x240d, 0x839c, 0x1, 0x0);
        gbc.writeMem(0x4c9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x381d, gbc.sp());
        EXPECT(0x4cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0392
        gbc.setState(0x71af, 0x5150, 0x970, 0x632e, 0xf71c, 0x5670, 0x1, 0x1);
        gbc.writeMem(0x71af, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5150, gbc.sp());
        EXPECT(0x71b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 0393
        gbc.setState(0x8683, 0x345, 0xc6f0, 0x9723, 0xc88c, 0x3113, 0x0, 0x0);
        gbc.writeMem(0x8683, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x345, gbc.sp());
        EXPECT(0x8685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8683));
        EXPECT(0xba, gbc.readMem(0x8684));
        // CB BA 0394
        gbc.setState(0x44b1, 0xb2b1, 0xefc0, 0xb42b, 0x16ce, 0xcc28, 0x0, 0x1);
        gbc.writeMem(0x44b1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb2b1, gbc.sp());
        EXPECT(0x44b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0395
        gbc.setState(0xc37f, 0x4e18, 0x1ea0, 0xc59, 0x369a, 0x3715, 0x1, 0x0);
        gbc.writeMem(0xc37f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4e18, gbc.sp());
        EXPECT(0xc381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc37f));
        EXPECT(0xba, gbc.readMem(0xc380));
        // CB BA 0396
        gbc.setState(0x8aba, 0x13af, 0xfc0, 0xf2d7, 0x4d1, 0x8322, 0x0, 0x0);
        gbc.writeMem(0x8aba, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x13af, gbc.sp());
        EXPECT(0x8abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aba));
        EXPECT(0xba, gbc.readMem(0x8abb));
        // CB BA 0397
        gbc.setState(0x2885, 0x165b, 0x15e0, 0x6286, 0xe712, 0xab69, 0x0, 0x0);
        gbc.writeMem(0x2885, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x165b, gbc.sp());
        EXPECT(0x2887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0398
        gbc.setState(0x4714, 0xdd48, 0x9f00, 0x60b5, 0xfd3e, 0xfb59, 0x0, 0x0);
        gbc.writeMem(0x4714, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdd48, gbc.sp());
        EXPECT(0x4716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 0399
        gbc.setState(0xde34, 0x6206, 0x6de0, 0x7571, 0x478a, 0xfe0c, 0x1, 0x0);
        gbc.writeMem(0xde34, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6206, gbc.sp());
        EXPECT(0xde36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde34));
        EXPECT(0xba, gbc.readMem(0xde35));
        // CB BA 039A
        gbc.setState(0x1bd0, 0x68e, 0xd190, 0x790f, 0x1853, 0xcc64, 0x0, 0x1);
        gbc.writeMem(0x1bd0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x68e, gbc.sp());
        EXPECT(0x1bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 039B
        gbc.setState(0x13a3, 0xf880, 0xca50, 0x86b, 0xcb59, 0x9182, 0x1, 0x1);
        gbc.writeMem(0x13a3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf880, gbc.sp());
        EXPECT(0x13a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 039C
        gbc.setState(0x482c, 0xd300, 0xbea0, 0x14d7, 0x7901, 0x2036, 0x1, 0x1);
        gbc.writeMem(0x482c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd300, gbc.sp());
        EXPECT(0x482e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 039D
        gbc.setState(0x133b, 0x79f4, 0xf260, 0xa8a9, 0x5a42, 0x9be0, 0x1, 0x1);
        gbc.writeMem(0x133b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x79f4, gbc.sp());
        EXPECT(0x133d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 039E
        gbc.setState(0xb73, 0xc3fe, 0xcf30, 0x3fe5, 0xe5d6, 0xaeea, 0x1, 0x1);
        gbc.writeMem(0xb73, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc3fe, gbc.sp());
        EXPECT(0xb75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 039F
        gbc.setState(0x8f1, 0x1cbe, 0xa040, 0x4aae, 0x83ef, 0x8e76, 0x0, 0x0);
        gbc.writeMem(0x8f1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1cbe, gbc.sp());
        EXPECT(0x8f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03A0
        gbc.setState(0x1962, 0x3204, 0xd400, 0x5a5e, 0xac6c, 0x89a2, 0x1, 0x0);
        gbc.writeMem(0x1962, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3204, gbc.sp());
        EXPECT(0x1964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03A1
        gbc.setState(0x744e, 0xb6ed, 0xec80, 0x43cf, 0xc6a7, 0xb180, 0x1, 0x1);
        gbc.writeMem(0x744e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb6ed, gbc.sp());
        EXPECT(0x7450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03A2
        gbc.setState(0x13b3, 0x7c05, 0xd090, 0x8c1c, 0xc343, 0x7f06, 0x1, 0x0);
        gbc.writeMem(0x13b3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7c05, gbc.sp());
        EXPECT(0x13b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03A3
        gbc.setState(0x57b0, 0xf68c, 0xc5b0, 0x890e, 0x8432, 0x174d, 0x0, 0x0);
        gbc.writeMem(0x57b0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf68c, gbc.sp());
        EXPECT(0x57b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03A4
        gbc.setState(0x9804, 0xdc1, 0xdde0, 0xe488, 0x21ac, 0x62b2, 0x1, 0x0);
        gbc.writeMem(0x9804, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdc1, gbc.sp());
        EXPECT(0x9806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9804));
        EXPECT(0xba, gbc.readMem(0x9805));
        // CB BA 03A5
        gbc.setState(0x345b, 0xedd6, 0x7710, 0x5c4d, 0x7361, 0x9617, 0x0, 0x1);
        gbc.writeMem(0x345b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xedd6, gbc.sp());
        EXPECT(0x345d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03A6
        gbc.setState(0x7a61, 0x8b5b, 0x2ca0, 0x2853, 0x4f32, 0x3186, 0x0, 0x1);
        gbc.writeMem(0x7a61, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8b5b, gbc.sp());
        EXPECT(0x7a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03A7
        gbc.setState(0x3000, 0x822f, 0x2650, 0x166a, 0x91bc, 0xbbe8, 0x1, 0x0);
        gbc.writeMem(0x3000, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x822f, gbc.sp());
        EXPECT(0x3002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03A8
        gbc.setState(0xa3b, 0x8d8b, 0x8d40, 0x7c70, 0x27a6, 0x607e, 0x1, 0x1);
        gbc.writeMem(0xa3b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8d8b, gbc.sp());
        EXPECT(0xa3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03A9
        gbc.setState(0x7d29, 0xdc88, 0xaf50, 0x1de8, 0x88fa, 0x6394, 0x1, 0x0);
        gbc.writeMem(0x7d29, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdc88, gbc.sp());
        EXPECT(0x7d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03AA
        gbc.setState(0x14f6, 0xe39c, 0xf650, 0x446f, 0x5dec, 0xf93a, 0x0, 0x1);
        gbc.writeMem(0x14f6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe39c, gbc.sp());
        EXPECT(0x14f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03AC
        gbc.setState(0x961f, 0xe002, 0x1f80, 0x4927, 0xde37, 0xf66, 0x0, 0x0);
        gbc.writeMem(0x961f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe002, gbc.sp());
        EXPECT(0x9621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961f));
        EXPECT(0xba, gbc.readMem(0x9620));
        // CB BA 03AD
        gbc.setState(0x1b40, 0x20b, 0x6660, 0x84cf, 0xfc4c, 0x9405, 0x0, 0x1);
        gbc.writeMem(0x1b40, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x20b, gbc.sp());
        EXPECT(0x1b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03AF
        gbc.setState(0x16ba, 0x2d22, 0x6f60, 0xa3, 0xb574, 0x426, 0x0, 0x1);
        gbc.writeMem(0x16ba, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2d22, gbc.sp());
        EXPECT(0x16bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03B0
        gbc.setState(0xca8b, 0xd2fc, 0xd090, 0x9a51, 0xc5aa, 0xc461, 0x0, 0x0);
        gbc.writeMem(0xca8b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd2fc, gbc.sp());
        EXPECT(0xca8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca8b));
        EXPECT(0xba, gbc.readMem(0xca8c));
        // CB BA 03B1
        gbc.setState(0x953e, 0x1c1f, 0x96c0, 0x569b, 0x92c, 0xdde1, 0x0, 0x0);
        gbc.writeMem(0x953e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1c1f, gbc.sp());
        EXPECT(0x9540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x953e));
        EXPECT(0xba, gbc.readMem(0x953f));
        // CB BA 03B2
        gbc.setState(0xea20, 0x2fef, 0x4320, 0xa67b, 0x6822, 0xabb6, 0x0, 0x0);
        gbc.writeMem(0xea20, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2fef, gbc.sp());
        EXPECT(0xea22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea20));
        EXPECT(0xba, gbc.readMem(0xea21));
        // CB BA 03B3
        gbc.setState(0xaa7d, 0x99af, 0x2880, 0xe3bc, 0x7d45, 0x2375, 0x1, 0x1);
        gbc.writeMem(0xaa7d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x99af, gbc.sp());
        EXPECT(0xaa7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa7d));
        EXPECT(0xba, gbc.readMem(0xaa7e));
        // CB BA 03B4
        gbc.setState(0xa3ed, 0x799e, 0x71a0, 0x79c2, 0x849b, 0xb26, 0x0, 0x0);
        gbc.writeMem(0xa3ed, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x799e, gbc.sp());
        EXPECT(0xa3ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ed));
        EXPECT(0xba, gbc.readMem(0xa3ee));
        // CB BA 03B5
        gbc.setState(0x68af, 0x806c, 0xdf00, 0xf9c4, 0x3b61, 0xef41, 0x0, 0x1);
        gbc.writeMem(0x68af, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x806c, gbc.sp());
        EXPECT(0x68b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03B6
        gbc.setState(0xc89f, 0x2e42, 0xf480, 0xcb7d, 0xaaa, 0xc2bf, 0x0, 0x1);
        gbc.writeMem(0xc89f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2e42, gbc.sp());
        EXPECT(0xc8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc89f));
        EXPECT(0xba, gbc.readMem(0xc8a0));
        // CB BA 03B7
        gbc.setState(0xcc31, 0x3e4d, 0x9c90, 0x2bf2, 0x1fd2, 0xd251, 0x1, 0x1);
        gbc.writeMem(0xcc31, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3e4d, gbc.sp());
        EXPECT(0xcc33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc31));
        EXPECT(0xba, gbc.readMem(0xcc32));
        // CB BA 03B8
        gbc.setState(0x5d8f, 0x9f27, 0xcc30, 0xec42, 0xeec4, 0x175d, 0x1, 0x0);
        gbc.writeMem(0x5d8f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9f27, gbc.sp());
        EXPECT(0x5d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03B9
        gbc.setState(0x659d, 0x8e25, 0xad40, 0xce6d, 0x7c7d, 0x1b0a, 0x0, 0x0);
        gbc.writeMem(0x659d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8e25, gbc.sp());
        EXPECT(0x659f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03BA
        gbc.setState(0x28c, 0x8f14, 0x8f30, 0x6505, 0x2e46, 0x58a2, 0x1, 0x0);
        gbc.writeMem(0x28c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8f14, gbc.sp());
        EXPECT(0x28e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03BB
        gbc.setState(0x3eec, 0xb3c5, 0xe7c0, 0xcee8, 0x191d, 0xd3c3, 0x1, 0x1);
        gbc.writeMem(0x3eec, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb3c5, gbc.sp());
        EXPECT(0x3eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03BC
        gbc.setState(0x192, 0x757d, 0x88d0, 0x893b, 0x7f3f, 0x234e, 0x1, 0x0);
        gbc.writeMem(0x192, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x757d, gbc.sp());
        EXPECT(0x194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03BD
        gbc.setState(0x9528, 0xa619, 0xb030, 0x7d7c, 0x137e, 0x1679, 0x0, 0x0);
        gbc.writeMem(0x9528, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa619, gbc.sp());
        EXPECT(0x952a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9528));
        EXPECT(0xba, gbc.readMem(0x9529));
        // CB BA 03BE
        gbc.setState(0x1cc9, 0xa489, 0x1390, 0x24c4, 0xb90d, 0x9366, 0x1, 0x1);
        gbc.writeMem(0x1cc9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa489, gbc.sp());
        EXPECT(0x1ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03C0
        gbc.setState(0x434b, 0x9048, 0x18f0, 0x4fe7, 0xc830, 0xc046, 0x0, 0x0);
        gbc.writeMem(0x434b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9048, gbc.sp());
        EXPECT(0x434d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03C1
        gbc.setState(0x36d3, 0x4f83, 0x2b40, 0x3175, 0x2f83, 0xb26c, 0x0, 0x0);
        gbc.writeMem(0x36d3, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4f83, gbc.sp());
        EXPECT(0x36d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03C2
        gbc.setState(0x772a, 0x1422, 0x2630, 0x68b, 0xc806, 0x3771, 0x0, 0x1);
        gbc.writeMem(0x772a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1422, gbc.sp());
        EXPECT(0x772c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03C3
        gbc.setState(0x299e, 0xbfcd, 0x7390, 0x3566, 0x5a10, 0x8707, 0x0, 0x0);
        gbc.writeMem(0x299e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbfcd, gbc.sp());
        EXPECT(0x29a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03C4
        gbc.setState(0xd86d, 0x3bbb, 0x8eb0, 0xa435, 0x14c7, 0x505e, 0x0, 0x1);
        gbc.writeMem(0xd86d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3bbb, gbc.sp());
        EXPECT(0xd86f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd86d));
        EXPECT(0xba, gbc.readMem(0xd86e));
        // CB BA 03C6
        gbc.setState(0xc90, 0xdc1d, 0x6fb0, 0x2f41, 0x183c, 0xd88d, 0x1, 0x1);
        gbc.writeMem(0xc90, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdc1d, gbc.sp());
        EXPECT(0xc92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03C7
        gbc.setState(0x7d66, 0xb7eb, 0x10a0, 0x99f5, 0x2166, 0xfdfe, 0x1, 0x0);
        gbc.writeMem(0x7d66, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb7eb, gbc.sp());
        EXPECT(0x7d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03C8
        gbc.setState(0x576f, 0xb304, 0x86a0, 0x9228, 0x172, 0x2bdc, 0x1, 0x1);
        gbc.writeMem(0x576f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb304, gbc.sp());
        EXPECT(0x5771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03C9
        gbc.setState(0x2cbc, 0xd91b, 0x880, 0xda9c, 0x62d7, 0xd16f, 0x0, 0x1);
        gbc.writeMem(0x2cbc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd91b, gbc.sp());
        EXPECT(0x2cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03CB
        gbc.setState(0x1865, 0x251, 0xa550, 0x6067, 0xd215, 0x76ea, 0x1, 0x1);
        gbc.writeMem(0x1865, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x251, gbc.sp());
        EXPECT(0x1867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03CC
        gbc.setState(0xebe6, 0x5801, 0x26c0, 0x4a1e, 0xb750, 0x8b4d, 0x0, 0x0);
        gbc.writeMem(0xebe6, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5801, gbc.sp());
        EXPECT(0xebe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe6));
        EXPECT(0xba, gbc.readMem(0xebe7));
        // CB BA 03CD
        gbc.setState(0x565e, 0xcd47, 0x9c10, 0x6ff5, 0x3250, 0x9178, 0x1, 0x0);
        gbc.writeMem(0x565e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcd47, gbc.sp());
        EXPECT(0x5660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03CE
        gbc.setState(0x8e03, 0x6de7, 0x5620, 0x49ae, 0xedee, 0xe766, 0x0, 0x1);
        gbc.writeMem(0x8e03, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6de7, gbc.sp());
        EXPECT(0x8e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e03));
        EXPECT(0xba, gbc.readMem(0x8e04));
        // CB BA 03CF
        gbc.setState(0x56ba, 0x4756, 0xd600, 0xfa23, 0x1973, 0xd273, 0x1, 0x0);
        gbc.writeMem(0x56ba, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4756, gbc.sp());
        EXPECT(0x56bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03D0
        gbc.setState(0x17da, 0x5d4c, 0x390, 0x1e9e, 0x901b, 0x5229, 0x0, 0x0);
        gbc.writeMem(0x17da, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5d4c, gbc.sp());
        EXPECT(0x17dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03D1
        gbc.setState(0xcf2b, 0x34b1, 0xcf00, 0x2816, 0xcdf1, 0x2300, 0x0, 0x0);
        gbc.writeMem(0xcf2b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x34b1, gbc.sp());
        EXPECT(0xcf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2b));
        EXPECT(0xba, gbc.readMem(0xcf2c));
        // CB BA 03D2
        gbc.setState(0x72b8, 0x1e53, 0x8570, 0xe7df, 0xae41, 0xc2ef, 0x0, 0x0);
        gbc.writeMem(0x72b8, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1e53, gbc.sp());
        EXPECT(0x72ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03D3
        gbc.setState(0x1b77, 0x38f2, 0x5070, 0xf72b, 0xca85, 0x8b59, 0x1, 0x1);
        gbc.writeMem(0x1b77, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x38f2, gbc.sp());
        EXPECT(0x1b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03D4
        gbc.setState(0xad2e, 0xd539, 0xc000, 0x4086, 0x8cee, 0xf11e, 0x0, 0x0);
        gbc.writeMem(0xad2e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd539, gbc.sp());
        EXPECT(0xad30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2e));
        EXPECT(0xba, gbc.readMem(0xad2f));
        // CB BA 03D5
        gbc.setState(0x23f9, 0x8bbf, 0x8fd0, 0x3ebe, 0x4266, 0x8020, 0x1, 0x1);
        gbc.writeMem(0x23f9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8bbf, gbc.sp());
        EXPECT(0x23fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03D7
        gbc.setState(0x170b, 0xa3de, 0x80d0, 0x65bc, 0xcf89, 0x6ee7, 0x0, 0x1);
        gbc.writeMem(0x170b, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa3de, gbc.sp());
        EXPECT(0x170d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03D8
        gbc.setState(0x72b1, 0xbddd, 0xc880, 0xd4b4, 0x216a, 0x3dfe, 0x1, 0x1);
        gbc.writeMem(0x72b1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xbddd, gbc.sp());
        EXPECT(0x72b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03D9
        gbc.setState(0xc0b0, 0x8e1, 0xdb30, 0x256b, 0xbdb, 0x2b6c, 0x0, 0x0);
        gbc.writeMem(0xc0b0, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8e1, gbc.sp());
        EXPECT(0xc0b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b0));
        EXPECT(0xba, gbc.readMem(0xc0b1));
        // CB BA 03DA
        gbc.setState(0x7ea9, 0x1da, 0xa2a0, 0x9413, 0x99b, 0x4b5d, 0x1, 0x1);
        gbc.writeMem(0x7ea9, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1da, gbc.sp());
        EXPECT(0x7eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03DB
        gbc.setState(0xb13d, 0x55b1, 0x6850, 0x88f1, 0xd85, 0x812f, 0x0, 0x0);
        gbc.writeMem(0xb13d, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x55b1, gbc.sp());
        EXPECT(0xb13f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb13d));
        EXPECT(0xba, gbc.readMem(0xb13e));
        // CB BA 03DC
        gbc.setState(0xe87e, 0xd313, 0xeff0, 0xad30, 0x6ae3, 0xf182, 0x0, 0x1);
        gbc.writeMem(0xe87e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd313, gbc.sp());
        EXPECT(0xe880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe87e));
        EXPECT(0xba, gbc.readMem(0xe87f));
        // CB BA 03DD
        gbc.setState(0xeb1, 0x8f3a, 0xf900, 0xd34e, 0x387f, 0x44ee, 0x0, 0x1);
        gbc.writeMem(0xeb1, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8f3a, gbc.sp());
        EXPECT(0xeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03DE
        gbc.setState(0x415c, 0x99ab, 0xbaa0, 0x66a9, 0xadc3, 0xf9e8, 0x1, 0x1);
        gbc.writeMem(0x415c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x99ab, gbc.sp());
        EXPECT(0x415e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03DF
        gbc.setState(0xe3dc, 0xcb6d, 0x6430, 0xeba, 0xd480, 0x896a, 0x0, 0x1);
        gbc.writeMem(0xe3dc, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xcb6d, gbc.sp());
        EXPECT(0xe3de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3dc));
        EXPECT(0xba, gbc.readMem(0xe3dd));
        // CB BA 03E0
        gbc.setState(0x46d2, 0x6926, 0xebf0, 0x4ce1, 0xceb3, 0xbc21, 0x0, 0x1);
        gbc.writeMem(0x46d2, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6926, gbc.sp());
        EXPECT(0x46d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03E1
        gbc.setState(0xbb6f, 0xadd8, 0x5830, 0xf52d, 0x554a, 0x6459, 0x0, 0x0);
        gbc.writeMem(0xbb6f, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xadd8, gbc.sp());
        EXPECT(0xbb71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb6f));
        EXPECT(0xba, gbc.readMem(0xbb70));
        // CB BA 03E3
        gbc.setState(0x602e, 0x78ee, 0x6740, 0x3477, 0xdce7, 0x5730, 0x1, 0x1);
        gbc.writeMem(0x602e, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x78ee, gbc.sp());
        EXPECT(0x6030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB BA 03E4
        gbc.setState(0xae93, 0xbfb8, 0x81d0, 0x88a8, 0x7b26, 0x5d7b, 0x0, 0x1);
        gbc.writeMem(0xae93, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbfb8, gbc.sp());
        EXPECT(0xae95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae93));
        EXPECT(0xba, gbc.readMem(0xae94));
        // CB BA 03E5
        gbc.setState(0x3dff, 0xee43, 0xbd90, 0xdac9, 0x707e, 0x8170, 0x1, 0x1);
        gbc.writeMem(0x3dff, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xee43, gbc.sp());
        EXPECT(0x3e01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB BA 03E6
        gbc.setState(0xd75c, 0x6855, 0xb120, 0xcd9f, 0x5f0c, 0x9060, 0x0, 0x0);
        gbc.writeMem(0xd75c, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6855, gbc.sp());
        EXPECT(0xd75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75c));
        EXPECT(0xba, gbc.readMem(0xd75d));
        // CB BA 03E7
        gbc.setState(0xd92a, 0xc074, 0xe340, 0xf929, 0x62eb, 0x3b66, 0x1, 0x1);
        gbc.writeMem(0xd92a, { 0xcb, 0xba });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc074, gbc.sp());
        EXPECT(0xd92c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd92a));
        EXPECT(0xba, gbc.readMem(0xd92b));
    }
