    TEST(gbcemu, opcode_10) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 10 0000
        gbc.setState(0xeb22, 0x5a32, 0xd150, 0x74ad, 0xca34, 0x5d13, 0x0, 0x1);
        gbc.writeMem(0xeb22, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5a32);
        EXPECT(gbc.pc(), 0xeb23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb22), 0x10);
        // 10 0001
        gbc.setState(0x8c1f, 0x5089, 0x1230, 0xfbb8, 0x59b8, 0x8524, 0x0, 0x0);
        gbc.writeMem(0x8c1f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5089);
        EXPECT(gbc.pc(), 0x8c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c1f), 0x10);
        // 10 0002
        gbc.setState(0x5231, 0x60ef, 0x8f50, 0xc022, 0xa5c7, 0xf5e0, 0x0, 0x1);
        gbc.writeMem(0x5231, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x60ef);
        EXPECT(gbc.pc(), 0x5232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0003
        gbc.setState(0x7957, 0xc37d, 0xd520, 0xc6f9, 0xbf66, 0x69eb, 0x1, 0x0);
        gbc.writeMem(0x7957, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc37d);
        EXPECT(gbc.pc(), 0x7958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0004
        gbc.setState(0x2761, 0xab16, 0x5f40, 0xaffe, 0x206a, 0x2250, 0x1, 0x1);
        gbc.writeMem(0x2761, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xab16);
        EXPECT(gbc.pc(), 0x2762);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0005
        gbc.setState(0x13cd, 0xcb30, 0x4bc0, 0x4683, 0x8125, 0x109d, 0x0, 0x0);
        gbc.writeMem(0x13cd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xcb30);
        EXPECT(gbc.pc(), 0x13ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0006
        gbc.setState(0xacac, 0x85a2, 0xe760, 0x63e1, 0x61a3, 0x662a, 0x1, 0x0);
        gbc.writeMem(0xacac, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x85a2);
        EXPECT(gbc.pc(), 0xacad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacac), 0x10);
        // 10 0007
        gbc.setState(0xa6f9, 0x43b2, 0x47a0, 0x97de, 0xb213, 0xf179, 0x1, 0x1);
        gbc.writeMem(0xa6f9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x43b2);
        EXPECT(gbc.pc(), 0xa6fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f9), 0x10);
        // 10 0008
        gbc.setState(0x1a9c, 0xe9e9, 0x8900, 0x4aea, 0xe87d, 0x29e3, 0x0, 0x0);
        gbc.writeMem(0x1a9c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe9e9);
        EXPECT(gbc.pc(), 0x1a9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0009
        gbc.setState(0x1ddb, 0x2216, 0x6010, 0x5fc2, 0xe6e4, 0xa408, 0x1, 0x1);
        gbc.writeMem(0x1ddb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2216);
        EXPECT(gbc.pc(), 0x1ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 000A
        gbc.setState(0x57ee, 0x9dc2, 0x13e0, 0xec0, 0xd610, 0x1a5, 0x0, 0x1);
        gbc.writeMem(0x57ee, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9dc2);
        EXPECT(gbc.pc(), 0x57ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 000B
        gbc.setState(0xc425, 0xe16c, 0x1a00, 0x3e40, 0x9a40, 0x1354, 0x1, 0x1);
        gbc.writeMem(0xc425, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe16c);
        EXPECT(gbc.pc(), 0xc426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc425), 0x10);
        // 10 000C
        gbc.setState(0xd969, 0x5ec3, 0x3940, 0x913f, 0xd3b, 0xc321, 0x1, 0x0);
        gbc.writeMem(0xd969, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5ec3);
        EXPECT(gbc.pc(), 0xd96a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd969), 0x10);
        // 10 000D
        gbc.setState(0x2192, 0xc218, 0x1e0, 0xccb0, 0x3240, 0x2701, 0x0, 0x1);
        gbc.writeMem(0x2192, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc218);
        EXPECT(gbc.pc(), 0x2193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 000E
        gbc.setState(0xdbbc, 0x56d4, 0x4330, 0xcc60, 0xa2d6, 0x52d5, 0x1, 0x1);
        gbc.writeMem(0xdbbc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x56d4);
        EXPECT(gbc.pc(), 0xdbbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbbc), 0x10);
        // 10 000F
        gbc.setState(0x9a85, 0x3a97, 0x19e0, 0xb15a, 0xcc4c, 0xcb4e, 0x0, 0x0);
        gbc.writeMem(0x9a85, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3a97);
        EXPECT(gbc.pc(), 0x9a86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a85), 0x10);
        // 10 0010
        gbc.setState(0x8995, 0xb780, 0x7e0, 0x7cc2, 0x83b4, 0xea51, 0x1, 0x1);
        gbc.writeMem(0x8995, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb780);
        EXPECT(gbc.pc(), 0x8996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8995), 0x10);
        // 10 0011
        gbc.setState(0x3a21, 0x1ccd, 0x1520, 0x1d3c, 0xf62c, 0x715e, 0x1, 0x0);
        gbc.writeMem(0x3a21, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1ccd);
        EXPECT(gbc.pc(), 0x3a22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0012
        gbc.setState(0x3166, 0x8cb3, 0x7c50, 0xe72e, 0x9ed0, 0x9be5, 0x0, 0x1);
        gbc.writeMem(0x3166, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8cb3);
        EXPECT(gbc.pc(), 0x3167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0013
        gbc.setState(0x6527, 0xbcaa, 0x41a0, 0x8b, 0x3447, 0xbe93, 0x0, 0x0);
        gbc.writeMem(0x6527, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbcaa);
        EXPECT(gbc.pc(), 0x6528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0014
        gbc.setState(0x2dfb, 0xc616, 0xd310, 0xe561, 0x9a85, 0xce9c, 0x0, 0x0);
        gbc.writeMem(0x2dfb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc616);
        EXPECT(gbc.pc(), 0x2dfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0015
        gbc.setState(0x7758, 0x1511, 0x7320, 0x3625, 0xc988, 0x7d5b, 0x1, 0x0);
        gbc.writeMem(0x7758, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1511);
        EXPECT(gbc.pc(), 0x7759);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0016
        gbc.setState(0x6287, 0xf4a0, 0xcb80, 0xf06c, 0x5839, 0xe7f5, 0x1, 0x1);
        gbc.writeMem(0x6287, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf4a0);
        EXPECT(gbc.pc(), 0x6288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0017
        gbc.setState(0x726c, 0xc40a, 0xf0c0, 0xc31d, 0xdc29, 0xbf04, 0x1, 0x0);
        gbc.writeMem(0x726c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc40a);
        EXPECT(gbc.pc(), 0x726d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0018
        gbc.setState(0x66f2, 0x71e2, 0x8490, 0xe516, 0xc172, 0x56c5, 0x0, 0x1);
        gbc.writeMem(0x66f2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x71e2);
        EXPECT(gbc.pc(), 0x66f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0019
        gbc.setState(0xa367, 0xb05b, 0xc090, 0xbeff, 0xa29e, 0x259, 0x1, 0x1);
        gbc.writeMem(0xa367, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb05b);
        EXPECT(gbc.pc(), 0xa368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa367), 0x10);
        // 10 001A
        gbc.setState(0x193b, 0x27b5, 0x4850, 0x2042, 0x9cc3, 0x3cf4, 0x0, 0x1);
        gbc.writeMem(0x193b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x27b5);
        EXPECT(gbc.pc(), 0x193c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 001B
        gbc.setState(0x3b8a, 0xc8e4, 0xda90, 0x747b, 0xeee5, 0x211f, 0x1, 0x0);
        gbc.writeMem(0x3b8a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc8e4);
        EXPECT(gbc.pc(), 0x3b8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 001C
        gbc.setState(0xe8ad, 0x31db, 0x20, 0x7240, 0x79bb, 0x929a, 0x0, 0x0);
        gbc.writeMem(0xe8ad, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x31db);
        EXPECT(gbc.pc(), 0xe8ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ad), 0x10);
        // 10 001D
        gbc.setState(0xa549, 0x3769, 0xc560, 0xe8d5, 0x2eff, 0xc227, 0x0, 0x0);
        gbc.writeMem(0xa549, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3769);
        EXPECT(gbc.pc(), 0xa54a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa549), 0x10);
        // 10 001E
        gbc.setState(0xd031, 0x2d59, 0xc770, 0xd508, 0xe41f, 0xbfb7, 0x1, 0x1);
        gbc.writeMem(0xd031, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2d59);
        EXPECT(gbc.pc(), 0xd032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd031), 0x10);
        // 10 001F
        gbc.setState(0xc172, 0x3a38, 0x8000, 0x7151, 0xd4d9, 0x4db7, 0x0, 0x1);
        gbc.writeMem(0xc172, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3a38);
        EXPECT(gbc.pc(), 0xc173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc172), 0x10);
        // 10 0020
        gbc.setState(0xaa02, 0x8b7b, 0x5b10, 0xc7dd, 0x1088, 0xf9af, 0x1, 0x1);
        gbc.writeMem(0xaa02, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8b7b);
        EXPECT(gbc.pc(), 0xaa03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa02), 0x10);
        // 10 0021
        gbc.setState(0xc14b, 0x1976, 0x69a0, 0xcc86, 0x12d0, 0x488a, 0x0, 0x0);
        gbc.writeMem(0xc14b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1976);
        EXPECT(gbc.pc(), 0xc14c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc14b), 0x10);
        // 10 0022
        gbc.setState(0x95b9, 0xe8e7, 0x1800, 0x24a6, 0xe535, 0x988f, 0x0, 0x1);
        gbc.writeMem(0x95b9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe8e7);
        EXPECT(gbc.pc(), 0x95ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b9), 0x10);
        // 10 0023
        gbc.setState(0xc4dc, 0x293e, 0x74b0, 0xa17d, 0xac8c, 0x775c, 0x0, 0x0);
        gbc.writeMem(0xc4dc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x293e);
        EXPECT(gbc.pc(), 0xc4dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4dc), 0x10);
        // 10 0024
        gbc.setState(0x95b5, 0x8b78, 0x88c0, 0xfd47, 0x76c5, 0x45eb, 0x0, 0x1);
        gbc.writeMem(0x95b5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8b78);
        EXPECT(gbc.pc(), 0x95b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b5), 0x10);
        // 10 0025
        gbc.setState(0xb606, 0x3a05, 0x9900, 0x937, 0x3930, 0xfddd, 0x1, 0x0);
        gbc.writeMem(0xb606, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3a05);
        EXPECT(gbc.pc(), 0xb607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb606), 0x10);
        // 10 0026
        gbc.setState(0xaec7, 0x3fc1, 0xb8d0, 0xaabf, 0x55ac, 0x3f9d, 0x0, 0x0);
        gbc.writeMem(0xaec7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3fc1);
        EXPECT(gbc.pc(), 0xaec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaec7), 0x10);
        // 10 0027
        gbc.setState(0x43eb, 0xace0, 0x95b0, 0x3232, 0xc9b, 0x6b1a, 0x1, 0x0);
        gbc.writeMem(0x43eb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xace0);
        EXPECT(gbc.pc(), 0x43ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0028
        gbc.setState(0x938a, 0x2a52, 0xcd50, 0xf178, 0x9deb, 0x28a4, 0x1, 0x0);
        gbc.writeMem(0x938a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2a52);
        EXPECT(gbc.pc(), 0x938b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x938a), 0x10);
        // 10 0029
        gbc.setState(0x260b, 0xb52b, 0x6310, 0x4149, 0xf044, 0x790, 0x0, 0x1);
        gbc.writeMem(0x260b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb52b);
        EXPECT(gbc.pc(), 0x260c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 002A
        gbc.setState(0x5aab, 0xf228, 0xa430, 0xd08d, 0xf578, 0x989f, 0x1, 0x1);
        gbc.writeMem(0x5aab, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf228);
        EXPECT(gbc.pc(), 0x5aac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 002C
        gbc.setState(0x3f9a, 0x911c, 0x1210, 0xe56f, 0xa70c, 0xc7d7, 0x1, 0x0);
        gbc.writeMem(0x3f9a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x911c);
        EXPECT(gbc.pc(), 0x3f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 002D
        gbc.setState(0xbbb7, 0xef00, 0x9fb0, 0xa47a, 0x12f9, 0x4972, 0x0, 0x0);
        gbc.writeMem(0xbbb7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xef00);
        EXPECT(gbc.pc(), 0xbbb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb7), 0x10);
        // 10 002E
        gbc.setState(0xcc4c, 0xef28, 0xc60, 0xf06c, 0x4717, 0x924b, 0x0, 0x0);
        gbc.writeMem(0xcc4c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xef28);
        EXPECT(gbc.pc(), 0xcc4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4c), 0x10);
        // 10 002F
        gbc.setState(0xc906, 0xa32c, 0x2ad0, 0x6f15, 0x19ff, 0xc7d7, 0x0, 0x0);
        gbc.writeMem(0xc906, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa32c);
        EXPECT(gbc.pc(), 0xc907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc906), 0x10);
        // 10 0030
        gbc.setState(0xc64f, 0xc87f, 0xac00, 0x9dd8, 0xc243, 0xf593, 0x1, 0x1);
        gbc.writeMem(0xc64f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc87f);
        EXPECT(gbc.pc(), 0xc650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc64f), 0x10);
        // 10 0031
        gbc.setState(0x196c, 0x4e99, 0x8850, 0x53b5, 0xaf12, 0xaef7, 0x0, 0x1);
        gbc.writeMem(0x196c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4e99);
        EXPECT(gbc.pc(), 0x196d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0032
        gbc.setState(0x99db, 0x29ac, 0x2b10, 0xe9bb, 0xdc5f, 0x9997, 0x0, 0x1);
        gbc.writeMem(0x99db, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x29ac);
        EXPECT(gbc.pc(), 0x99dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99db), 0x10);
        // 10 0033
        gbc.setState(0x5e51, 0x69b1, 0xdd80, 0xb7d2, 0xacdc, 0xff7a, 0x0, 0x0);
        gbc.writeMem(0x5e51, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x69b1);
        EXPECT(gbc.pc(), 0x5e52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0034
        gbc.setState(0x9b2e, 0x613b, 0xa840, 0x586, 0x53de, 0xcf0d, 0x1, 0x0);
        gbc.writeMem(0x9b2e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x613b);
        EXPECT(gbc.pc(), 0x9b2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b2e), 0x10);
        // 10 0036
        gbc.setState(0x73b7, 0x3357, 0x7830, 0xe218, 0xd02c, 0x5d24, 0x1, 0x1);
        gbc.writeMem(0x73b7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3357);
        EXPECT(gbc.pc(), 0x73b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0038
        gbc.setState(0x1663, 0xfa84, 0x6ef0, 0xa305, 0xe812, 0xcc04, 0x1, 0x1);
        gbc.writeMem(0x1663, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xfa84);
        EXPECT(gbc.pc(), 0x1664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 003A
        gbc.setState(0x9444, 0xd999, 0x3e60, 0x95fc, 0x9c74, 0xe9a0, 0x0, 0x1);
        gbc.writeMem(0x9444, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd999);
        EXPECT(gbc.pc(), 0x9445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9444), 0x10);
        // 10 003B
        gbc.setState(0x9fbf, 0xa17a, 0x1510, 0x249d, 0x37a6, 0x43d4, 0x0, 0x1);
        gbc.writeMem(0x9fbf, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa17a);
        EXPECT(gbc.pc(), 0x9fc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fbf), 0x10);
        // 10 003C
        gbc.setState(0xa038, 0xe7b0, 0xe2a0, 0x9860, 0xa862, 0x465a, 0x1, 0x1);
        gbc.writeMem(0xa038, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe7b0);
        EXPECT(gbc.pc(), 0xa039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa038), 0x10);
        // 10 003D
        gbc.setState(0x88e1, 0x3d4b, 0x5e50, 0xf959, 0x844b, 0x3081, 0x1, 0x1);
        gbc.writeMem(0x88e1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3d4b);
        EXPECT(gbc.pc(), 0x88e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88e1), 0x10);
        // 10 003E
        gbc.setState(0xd4eb, 0xca81, 0xbc30, 0xc1e, 0xec3e, 0x619d, 0x1, 0x1);
        gbc.writeMem(0xd4eb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xca81);
        EXPECT(gbc.pc(), 0xd4ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4eb), 0x10);
        // 10 003F
        gbc.setState(0xe62d, 0x11d0, 0xd7d0, 0x8534, 0xe25d, 0x2624, 0x0, 0x0);
        gbc.writeMem(0xe62d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x11d0);
        EXPECT(gbc.pc(), 0xe62e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62d), 0x10);
        // 10 0040
        gbc.setState(0x2242, 0xdda6, 0xc120, 0xbb9b, 0x53b2, 0x107e, 0x0, 0x0);
        gbc.writeMem(0x2242, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xdda6);
        EXPECT(gbc.pc(), 0x2243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0041
        gbc.setState(0x4af7, 0x3271, 0x2e50, 0x20d7, 0x7ad8, 0x3ab2, 0x1, 0x0);
        gbc.writeMem(0x4af7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3271);
        EXPECT(gbc.pc(), 0x4af8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0042
        gbc.setState(0x9de6, 0x2b9, 0x8e20, 0x11c1, 0x307b, 0x9320, 0x1, 0x1);
        gbc.writeMem(0x9de6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2b9);
        EXPECT(gbc.pc(), 0x9de7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9de6), 0x10);
        // 10 0043
        gbc.setState(0x5a4d, 0x7cc6, 0x6400, 0x2222, 0xfca8, 0xb86b, 0x0, 0x1);
        gbc.writeMem(0x5a4d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7cc6);
        EXPECT(gbc.pc(), 0x5a4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0044
        gbc.setState(0x63c3, 0x398e, 0x2d10, 0x58a4, 0x1541, 0x8e98, 0x1, 0x1);
        gbc.writeMem(0x63c3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x398e);
        EXPECT(gbc.pc(), 0x63c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0045
        gbc.setState(0x1634, 0x5c88, 0x14b0, 0xd3ca, 0x514c, 0x628e, 0x1, 0x0);
        gbc.writeMem(0x1634, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5c88);
        EXPECT(gbc.pc(), 0x1635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0046
        gbc.setState(0x426, 0x3e37, 0x1000, 0x2719, 0xdfb3, 0x727a, 0x1, 0x0);
        gbc.writeMem(0x426, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3e37);
        EXPECT(gbc.pc(), 0x427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0047
        gbc.setState(0xe0bc, 0xc62f, 0x5d50, 0x2a3e, 0x2a90, 0xfc4e, 0x0, 0x0);
        gbc.writeMem(0xe0bc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc62f);
        EXPECT(gbc.pc(), 0xe0bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0bc), 0x10);
        // 10 0048
        gbc.setState(0x15ca, 0xbdbc, 0xdd30, 0xa765, 0xa272, 0x5ce3, 0x0, 0x0);
        gbc.writeMem(0x15ca, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xbdbc);
        EXPECT(gbc.pc(), 0x15cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 004A
        gbc.setState(0xa1bc, 0xbee8, 0x8850, 0xc358, 0xe6dc, 0x4a6, 0x0, 0x0);
        gbc.writeMem(0xa1bc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xbee8);
        EXPECT(gbc.pc(), 0xa1bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1bc), 0x10);
        // 10 004B
        gbc.setState(0xc10f, 0xcfb1, 0xef0, 0x2949, 0x974d, 0xa537, 0x0, 0x1);
        gbc.writeMem(0xc10f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xcfb1);
        EXPECT(gbc.pc(), 0xc110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc10f), 0x10);
        // 10 004C
        gbc.setState(0x3555, 0x5230, 0x9d00, 0x5bbb, 0xb4, 0xc92d, 0x1, 0x0);
        gbc.writeMem(0x3555, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5230);
        EXPECT(gbc.pc(), 0x3556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 004D
        gbc.setState(0x8a98, 0x9cf7, 0x17e0, 0xbd80, 0x8403, 0x6d7, 0x1, 0x0);
        gbc.writeMem(0x8a98, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9cf7);
        EXPECT(gbc.pc(), 0x8a99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a98), 0x10);
        // 10 004E
        gbc.setState(0xc799, 0xf0e9, 0x2480, 0xecb4, 0x7271, 0xb312, 0x1, 0x0);
        gbc.writeMem(0xc799, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf0e9);
        EXPECT(gbc.pc(), 0xc79a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc799), 0x10);
        // 10 004F
        gbc.setState(0x3c06, 0xc9f5, 0x4760, 0x5c87, 0xa4e4, 0x2c18, 0x1, 0x1);
        gbc.writeMem(0x3c06, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc9f5);
        EXPECT(gbc.pc(), 0x3c07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0050
        gbc.setState(0xcc46, 0xcb99, 0xb790, 0xfe91, 0xceaa, 0xed7d, 0x0, 0x0);
        gbc.writeMem(0xcc46, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xcb99);
        EXPECT(gbc.pc(), 0xcc47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc46), 0x10);
        // 10 0051
        gbc.setState(0xa649, 0x4948, 0x7b10, 0x4339, 0x5d69, 0x94db, 0x0, 0x0);
        gbc.writeMem(0xa649, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4948);
        EXPECT(gbc.pc(), 0xa64a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa649), 0x10);
        // 10 0052
        gbc.setState(0xe52d, 0x4c97, 0xbf50, 0x697e, 0xb6b0, 0xb31d, 0x0, 0x0);
        gbc.writeMem(0xe52d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4c97);
        EXPECT(gbc.pc(), 0xe52e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe52d), 0x10);
        // 10 0053
        gbc.setState(0x7d1, 0x3304, 0xebb0, 0x3b52, 0xb651, 0x81bf, 0x1, 0x0);
        gbc.writeMem(0x7d1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3304);
        EXPECT(gbc.pc(), 0x7d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0054
        gbc.setState(0x1eb1, 0xa71e, 0x250, 0x22cb, 0x7046, 0x971a, 0x0, 0x1);
        gbc.writeMem(0x1eb1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa71e);
        EXPECT(gbc.pc(), 0x1eb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0055
        gbc.setState(0xeb81, 0xffe6, 0xf4c0, 0x9f52, 0x1388, 0x2932, 0x1, 0x1);
        gbc.writeMem(0xeb81, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xffe6);
        EXPECT(gbc.pc(), 0xeb82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb81), 0x10);
        // 10 0056
        gbc.setState(0x6d1d, 0x111e, 0x78d0, 0x173d, 0x9ec5, 0xe243, 0x1, 0x1);
        gbc.writeMem(0x6d1d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x111e);
        EXPECT(gbc.pc(), 0x6d1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0057
        gbc.setState(0x931f, 0x5083, 0xaa50, 0xd3e8, 0xab5, 0xa4df, 0x1, 0x1);
        gbc.writeMem(0x931f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5083);
        EXPECT(gbc.pc(), 0x9320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x931f), 0x10);
        // 10 0058
        gbc.setState(0x726e, 0xfdee, 0x3870, 0x6241, 0xe13c, 0xb7cc, 0x0, 0x1);
        gbc.writeMem(0x726e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xfdee);
        EXPECT(gbc.pc(), 0x726f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0059
        gbc.setState(0x3131, 0x77f2, 0xd1c0, 0x7d51, 0x8a4e, 0xf75d, 0x1, 0x1);
        gbc.writeMem(0x3131, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x77f2);
        EXPECT(gbc.pc(), 0x3132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 005B
        gbc.setState(0xd69, 0xa9a3, 0x6cf0, 0xc64a, 0xd68a, 0xe2e8, 0x0, 0x1);
        gbc.writeMem(0xd69, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa9a3);
        EXPECT(gbc.pc(), 0xd6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 005C
        gbc.setState(0x8207, 0x92e1, 0x2970, 0x8faa, 0xa5a8, 0x9232, 0x1, 0x1);
        gbc.writeMem(0x8207, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x92e1);
        EXPECT(gbc.pc(), 0x8208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8207), 0x10);
        // 10 005D
        gbc.setState(0xb0c2, 0xc9f7, 0xe910, 0x5da4, 0xe89c, 0x89ed, 0x1, 0x1);
        gbc.writeMem(0xb0c2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc9f7);
        EXPECT(gbc.pc(), 0xb0c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0c2), 0x10);
        // 10 005E
        gbc.setState(0x8312, 0xae00, 0x45a0, 0xf11, 0x6f76, 0x625b, 0x1, 0x0);
        gbc.writeMem(0x8312, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xae00);
        EXPECT(gbc.pc(), 0x8313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8312), 0x10);
        // 10 005F
        gbc.setState(0xe478, 0x17d0, 0x3e0, 0x711b, 0x4954, 0x954a, 0x1, 0x0);
        gbc.writeMem(0xe478, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x17d0);
        EXPECT(gbc.pc(), 0xe479);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe478), 0x10);
        // 10 0060
        gbc.setState(0x827a, 0xcf1e, 0xed80, 0x26b2, 0x26e6, 0xcbbe, 0x0, 0x0);
        gbc.writeMem(0x827a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xcf1e);
        EXPECT(gbc.pc(), 0x827b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x827a), 0x10);
        // 10 0061
        gbc.setState(0x32b9, 0x2121, 0x4a90, 0xa6ca, 0x965f, 0xd2fd, 0x0, 0x1);
        gbc.writeMem(0x32b9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2121);
        EXPECT(gbc.pc(), 0x32ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0062
        gbc.setState(0x4388, 0xc1c1, 0x5340, 0x8fa1, 0xb557, 0xafa7, 0x0, 0x1);
        gbc.writeMem(0x4388, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc1c1);
        EXPECT(gbc.pc(), 0x4389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0063
        gbc.setState(0x2540, 0x98e3, 0xc3c0, 0xf957, 0xf97, 0x51ea, 0x0, 0x1);
        gbc.writeMem(0x2540, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x98e3);
        EXPECT(gbc.pc(), 0x2541);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0064
        gbc.setState(0xe6dc, 0x70a9, 0xff00, 0x93cb, 0xddbc, 0xb9ad, 0x0, 0x0);
        gbc.writeMem(0xe6dc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x70a9);
        EXPECT(gbc.pc(), 0xe6dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6dc), 0x10);
        // 10 0065
        gbc.setState(0xd1e2, 0x3ec5, 0x6050, 0x8fb4, 0x1b83, 0xcb43, 0x1, 0x0);
        gbc.writeMem(0xd1e2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3ec5);
        EXPECT(gbc.pc(), 0xd1e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1e2), 0x10);
        // 10 0066
        gbc.setState(0x4ca, 0x10d4, 0xed60, 0x5c44, 0x4380, 0x8ec9, 0x0, 0x0);
        gbc.writeMem(0x4ca, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x10d4);
        EXPECT(gbc.pc(), 0x4cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0067
        gbc.setState(0x51ac, 0xb514, 0xe50, 0xefc7, 0xcaea, 0xc2c1, 0x0, 0x1);
        gbc.writeMem(0x51ac, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb514);
        EXPECT(gbc.pc(), 0x51ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0068
        gbc.setState(0xab85, 0x78a5, 0xc360, 0x1d3b, 0x4090, 0xbb8d, 0x0, 0x0);
        gbc.writeMem(0xab85, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x78a5);
        EXPECT(gbc.pc(), 0xab86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab85), 0x10);
        // 10 0069
        gbc.setState(0xb362, 0x66da, 0x3d10, 0x4913, 0x4ed6, 0xdad0, 0x1, 0x0);
        gbc.writeMem(0xb362, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x66da);
        EXPECT(gbc.pc(), 0xb363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb362), 0x10);
        // 10 006A
        gbc.setState(0x1f5f, 0xfcc2, 0xa310, 0xb1e, 0xc883, 0xa01d, 0x1, 0x0);
        gbc.writeMem(0x1f5f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfcc2);
        EXPECT(gbc.pc(), 0x1f60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 006B
        gbc.setState(0x321c, 0x4d9c, 0x84f0, 0x5ae0, 0x3922, 0x15ce, 0x1, 0x0);
        gbc.writeMem(0x321c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4d9c);
        EXPECT(gbc.pc(), 0x321d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 006C
        gbc.setState(0xa96a, 0x521c, 0x8dd0, 0x99c7, 0x822f, 0xa8e7, 0x1, 0x0);
        gbc.writeMem(0xa96a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x521c);
        EXPECT(gbc.pc(), 0xa96b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa96a), 0x10);
        // 10 006D
        gbc.setState(0xe1e6, 0x84de, 0x5550, 0x3c8e, 0x9d01, 0xea4e, 0x1, 0x0);
        gbc.writeMem(0xe1e6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x84de);
        EXPECT(gbc.pc(), 0xe1e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e6), 0x10);
        // 10 006E
        gbc.setState(0xb2c4, 0x9a77, 0x87d0, 0x19e0, 0x7d3d, 0x1956, 0x0, 0x1);
        gbc.writeMem(0xb2c4, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9a77);
        EXPECT(gbc.pc(), 0xb2c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2c4), 0x10);
        // 10 006F
        gbc.setState(0xd971, 0x3a17, 0x3860, 0xd40c, 0x4b2f, 0xfa9d, 0x0, 0x1);
        gbc.writeMem(0xd971, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3a17);
        EXPECT(gbc.pc(), 0xd972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd971), 0x10);
        // 10 0070
        gbc.setState(0x20f6, 0xf7f8, 0x31b0, 0x8434, 0xab7f, 0xa380, 0x0, 0x0);
        gbc.writeMem(0x20f6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf7f8);
        EXPECT(gbc.pc(), 0x20f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0071
        gbc.setState(0xa63c, 0xfe0d, 0x940, 0xec1f, 0xa318, 0x836c, 0x0, 0x0);
        gbc.writeMem(0xa63c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfe0d);
        EXPECT(gbc.pc(), 0xa63d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa63c), 0x10);
        // 10 0072
        gbc.setState(0x38d1, 0x9fa5, 0x1cf0, 0x68b0, 0x9330, 0xc2b7, 0x0, 0x1);
        gbc.writeMem(0x38d1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9fa5);
        EXPECT(gbc.pc(), 0x38d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0073
        gbc.setState(0xea1c, 0x7e42, 0xcda0, 0x1967, 0x6950, 0x4eaa, 0x1, 0x0);
        gbc.writeMem(0xea1c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7e42);
        EXPECT(gbc.pc(), 0xea1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea1c), 0x10);
        // 10 0074
        gbc.setState(0x2613, 0xf4f0, 0xb890, 0x76fa, 0x82f5, 0x16a1, 0x1, 0x1);
        gbc.writeMem(0x2613, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf4f0);
        EXPECT(gbc.pc(), 0x2614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0075
        gbc.setState(0x66a6, 0x11de, 0x1f60, 0x1d39, 0x4da9, 0x9d0c, 0x0, 0x0);
        gbc.writeMem(0x66a6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x11de);
        EXPECT(gbc.pc(), 0x66a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0076
        gbc.setState(0x3af3, 0x6281, 0x1cb0, 0xd720, 0x4b4, 0xae1b, 0x0, 0x0);
        gbc.writeMem(0x3af3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6281);
        EXPECT(gbc.pc(), 0x3af4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0077
        gbc.setState(0x2b3b, 0xb180, 0x2290, 0x53cf, 0x4f8a, 0x15b, 0x0, 0x0);
        gbc.writeMem(0x2b3b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb180);
        EXPECT(gbc.pc(), 0x2b3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0078
        gbc.setState(0x4a3b, 0xdd2b, 0x3bf0, 0xe95a, 0x1ced, 0x1804, 0x1, 0x0);
        gbc.writeMem(0x4a3b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xdd2b);
        EXPECT(gbc.pc(), 0x4a3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0079
        gbc.setState(0xf4, 0xcd1c, 0xa50, 0x10ee, 0x3978, 0x16ea, 0x1, 0x0);
        gbc.writeMem(0xf4, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xcd1c);
        EXPECT(gbc.pc(), 0xf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 007A
        gbc.setState(0x8395, 0xcb1f, 0x2000, 0xdf17, 0x6c4a, 0x19ea, 0x0, 0x1);
        gbc.writeMem(0x8395, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xcb1f);
        EXPECT(gbc.pc(), 0x8396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8395), 0x10);
        // 10 007B
        gbc.setState(0x4dd5, 0xce82, 0x6fe0, 0xa9dc, 0xd696, 0xe1b6, 0x0, 0x0);
        gbc.writeMem(0x4dd5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xce82);
        EXPECT(gbc.pc(), 0x4dd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 007C
        gbc.setState(0x5a00, 0xd468, 0xd070, 0xbd96, 0x4b41, 0xe2f7, 0x1, 0x0);
        gbc.writeMem(0x5a00, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd468);
        EXPECT(gbc.pc(), 0x5a01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 007D
        gbc.setState(0x7ab7, 0x9be0, 0x12b0, 0x320c, 0xb23e, 0x6f1, 0x0, 0x0);
        gbc.writeMem(0x7ab7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9be0);
        EXPECT(gbc.pc(), 0x7ab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 007E
        gbc.setState(0x975a, 0xa0e5, 0x7f80, 0x4fcc, 0xc02d, 0xbb2c, 0x0, 0x1);
        gbc.writeMem(0x975a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa0e5);
        EXPECT(gbc.pc(), 0x975b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x975a), 0x10);
        // 10 007F
        gbc.setState(0x733a, 0x37f6, 0x96d0, 0xa657, 0x375b, 0x58f8, 0x0, 0x1);
        gbc.writeMem(0x733a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x37f6);
        EXPECT(gbc.pc(), 0x733b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0080
        gbc.setState(0x554e, 0x93d9, 0xd3b0, 0xf11a, 0xa7e3, 0x7ba7, 0x0, 0x0);
        gbc.writeMem(0x554e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x93d9);
        EXPECT(gbc.pc(), 0x554f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0081
        gbc.setState(0x3473, 0x7d26, 0xf110, 0x65fd, 0x50eb, 0x7d44, 0x1, 0x0);
        gbc.writeMem(0x3473, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7d26);
        EXPECT(gbc.pc(), 0x3474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0082
        gbc.setState(0x1489, 0xb50c, 0x3320, 0xfe64, 0x6ab3, 0xe10d, 0x0, 0x0);
        gbc.writeMem(0x1489, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb50c);
        EXPECT(gbc.pc(), 0x148a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0083
        gbc.setState(0x732b, 0xc973, 0xbf40, 0xaabd, 0x5001, 0x3e01, 0x1, 0x1);
        gbc.writeMem(0x732b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc973);
        EXPECT(gbc.pc(), 0x732c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0084
        gbc.setState(0xa84c, 0xb3da, 0x47a0, 0x58c6, 0xb9b6, 0x9d4f, 0x1, 0x1);
        gbc.writeMem(0xa84c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb3da);
        EXPECT(gbc.pc(), 0xa84d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa84c), 0x10);
        // 10 0085
        gbc.setState(0x487d, 0x6505, 0x3540, 0x9816, 0xf2c6, 0xb2cb, 0x1, 0x0);
        gbc.writeMem(0x487d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6505);
        EXPECT(gbc.pc(), 0x487e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0086
        gbc.setState(0x4eb3, 0x6e93, 0xab00, 0x3330, 0xfbc0, 0x7f5, 0x1, 0x1);
        gbc.writeMem(0x4eb3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6e93);
        EXPECT(gbc.pc(), 0x4eb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0087
        gbc.setState(0xbf8a, 0xd49e, 0x6c30, 0x4252, 0xb72d, 0xe967, 0x0, 0x1);
        gbc.writeMem(0xbf8a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd49e);
        EXPECT(gbc.pc(), 0xbf8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf8a), 0x10);
        // 10 0088
        gbc.setState(0xd329, 0xf599, 0x19b0, 0xc734, 0xb149, 0xb342, 0x0, 0x1);
        gbc.writeMem(0xd329, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf599);
        EXPECT(gbc.pc(), 0xd32a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd329), 0x10);
        // 10 0089
        gbc.setState(0x3f55, 0x8fbf, 0xe30, 0x2838, 0x1979, 0x895d, 0x0, 0x0);
        gbc.writeMem(0x3f55, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8fbf);
        EXPECT(gbc.pc(), 0x3f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 008A
        gbc.setState(0x2866, 0x58e2, 0x2a80, 0xc322, 0xce7e, 0x701a, 0x1, 0x0);
        gbc.writeMem(0x2866, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x58e2);
        EXPECT(gbc.pc(), 0x2867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 008B
        gbc.setState(0xa18f, 0x82cb, 0xa0d0, 0x23df, 0xd7ef, 0xaf37, 0x0, 0x1);
        gbc.writeMem(0xa18f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x82cb);
        EXPECT(gbc.pc(), 0xa190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa18f), 0x10);
        // 10 008C
        gbc.setState(0xd282, 0x1ed6, 0xce20, 0x57c1, 0xfc95, 0x8379, 0x1, 0x0);
        gbc.writeMem(0xd282, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1ed6);
        EXPECT(gbc.pc(), 0xd283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd282), 0x10);
        // 10 008D
        gbc.setState(0xa01d, 0x5f8d, 0x5300, 0x1845, 0x5b6b, 0xc8e2, 0x0, 0x0);
        gbc.writeMem(0xa01d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5f8d);
        EXPECT(gbc.pc(), 0xa01e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa01d), 0x10);
        // 10 008E
        gbc.setState(0xa3f9, 0x817c, 0xfc70, 0x2fd8, 0x1d09, 0xbce1, 0x1, 0x1);
        gbc.writeMem(0xa3f9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x817c);
        EXPECT(gbc.pc(), 0xa3fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f9), 0x10);
        // 10 008F
        gbc.setState(0xae10, 0xd2ee, 0xf840, 0xb208, 0x98b0, 0xe044, 0x0, 0x0);
        gbc.writeMem(0xae10, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd2ee);
        EXPECT(gbc.pc(), 0xae11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae10), 0x10);
        // 10 0090
        gbc.setState(0x4261, 0xc009, 0x55d0, 0x9707, 0x669a, 0x5330, 0x0, 0x1);
        gbc.writeMem(0x4261, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc009);
        EXPECT(gbc.pc(), 0x4262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0091
        gbc.setState(0xc145, 0xd37a, 0xf820, 0x4e94, 0xdd8a, 0x5ac0, 0x1, 0x1);
        gbc.writeMem(0xc145, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd37a);
        EXPECT(gbc.pc(), 0xc146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc145), 0x10);
        // 10 0093
        gbc.setState(0x71e8, 0xbdea, 0x7870, 0x167f, 0x38dc, 0xd048, 0x1, 0x0);
        gbc.writeMem(0x71e8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbdea);
        EXPECT(gbc.pc(), 0x71e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0094
        gbc.setState(0x2bc9, 0xdbd8, 0x17d0, 0xbce9, 0xbe06, 0xb9c5, 0x0, 0x1);
        gbc.writeMem(0x2bc9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xdbd8);
        EXPECT(gbc.pc(), 0x2bca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0095
        gbc.setState(0x3d72, 0xf77f, 0xa150, 0xd6fd, 0x8393, 0xaf83, 0x0, 0x1);
        gbc.writeMem(0x3d72, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf77f);
        EXPECT(gbc.pc(), 0x3d73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0096
        gbc.setState(0x1049, 0x70b7, 0x3c20, 0x5a28, 0x63a1, 0x3bc0, 0x0, 0x1);
        gbc.writeMem(0x1049, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x70b7);
        EXPECT(gbc.pc(), 0x104a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0097
        gbc.setState(0xa40d, 0x90a2, 0xe1c0, 0x9a53, 0xc84f, 0xf3be, 0x1, 0x1);
        gbc.writeMem(0xa40d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x90a2);
        EXPECT(gbc.pc(), 0xa40e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa40d), 0x10);
        // 10 0098
        gbc.setState(0x45e6, 0xf9d1, 0x7af0, 0xee83, 0x2d6d, 0x5ee3, 0x0, 0x1);
        gbc.writeMem(0x45e6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf9d1);
        EXPECT(gbc.pc(), 0x45e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0099
        gbc.setState(0x7efb, 0x7ddc, 0xebf0, 0x1621, 0xd10e, 0x99c5, 0x1, 0x0);
        gbc.writeMem(0x7efb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7ddc);
        EXPECT(gbc.pc(), 0x7efc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 009A
        gbc.setState(0x89d1, 0x27f0, 0x9720, 0x4e72, 0x1958, 0x806f, 0x0, 0x0);
        gbc.writeMem(0x89d1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x27f0);
        EXPECT(gbc.pc(), 0x89d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d1), 0x10);
        // 10 009C
        gbc.setState(0x4ddf, 0x271c, 0x5080, 0xd45, 0x2d1f, 0xd7fc, 0x0, 0x0);
        gbc.writeMem(0x4ddf, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x271c);
        EXPECT(gbc.pc(), 0x4de0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 009D
        gbc.setState(0xefcb, 0x1435, 0x3540, 0xf66e, 0x8b31, 0x9a12, 0x1, 0x0);
        gbc.writeMem(0xefcb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1435);
        EXPECT(gbc.pc(), 0xefcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefcb), 0x10);
        // 10 009E
        gbc.setState(0xa82c, 0x30d, 0x8620, 0x63ec, 0x1551, 0xacea, 0x1, 0x0);
        gbc.writeMem(0xa82c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x30d);
        EXPECT(gbc.pc(), 0xa82d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82c), 0x10);
        // 10 009F
        gbc.setState(0xe991, 0x99e2, 0xce30, 0x8ba1, 0xeffc, 0xd25a, 0x0, 0x0);
        gbc.writeMem(0xe991, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x99e2);
        EXPECT(gbc.pc(), 0xe992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe991), 0x10);
        // 10 00A0
        gbc.setState(0x1617, 0xed02, 0x9150, 0x52c4, 0xb1ef, 0x3c31, 0x1, 0x1);
        gbc.writeMem(0x1617, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xed02);
        EXPECT(gbc.pc(), 0x1618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 00A2
        gbc.setState(0x93e8, 0x943d, 0x7040, 0x5bd3, 0xe87b, 0xb5fd, 0x1, 0x1);
        gbc.writeMem(0x93e8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x943d);
        EXPECT(gbc.pc(), 0x93e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e8), 0x10);
        // 10 00A3
        gbc.setState(0xa548, 0x3faf, 0x5080, 0xe9a2, 0x11fd, 0x55ee, 0x0, 0x0);
        gbc.writeMem(0xa548, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3faf);
        EXPECT(gbc.pc(), 0xa549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa548), 0x10);
        // 10 00A4
        gbc.setState(0xdc8a, 0xe012, 0x9c90, 0x5f9f, 0x3a96, 0x1cf0, 0x1, 0x0);
        gbc.writeMem(0xdc8a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe012);
        EXPECT(gbc.pc(), 0xdc8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc8a), 0x10);
        // 10 00A5
        gbc.setState(0x7c15, 0x60b4, 0x3060, 0x7f5, 0xa1cc, 0x53b5, 0x1, 0x1);
        gbc.writeMem(0x7c15, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x60b4);
        EXPECT(gbc.pc(), 0x7c16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 00A6
        gbc.setState(0x44b8, 0x8588, 0x860, 0x4030, 0xc824, 0x2a97, 0x1, 0x0);
        gbc.writeMem(0x44b8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8588);
        EXPECT(gbc.pc(), 0x44b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 00A7
        gbc.setState(0x66a5, 0x32a5, 0xada0, 0x29ac, 0xe001, 0x2660, 0x0, 0x0);
        gbc.writeMem(0x66a5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x32a5);
        EXPECT(gbc.pc(), 0x66a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 00A8
        gbc.setState(0xa6fe, 0xe9d8, 0x100, 0x7f83, 0x4cc, 0xe6a0, 0x1, 0x0);
        gbc.writeMem(0xa6fe, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe9d8);
        EXPECT(gbc.pc(), 0xa6ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6fe), 0x10);
        // 10 00A9
        gbc.setState(0xb0e3, 0x1ac9, 0x5360, 0x6c72, 0xb2c2, 0x6467, 0x0, 0x0);
        gbc.writeMem(0xb0e3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x1ac9);
        EXPECT(gbc.pc(), 0xb0e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0e3), 0x10);
        // 10 00AA
        gbc.setState(0x9723, 0x348, 0x23c0, 0xe13a, 0x32f, 0xeb15, 0x0, 0x0);
        gbc.writeMem(0x9723, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x348);
        EXPECT(gbc.pc(), 0x9724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9723), 0x10);
        // 10 00AB
        gbc.setState(0xec03, 0xf8ae, 0xbae0, 0x71a8, 0x64cf, 0x939d, 0x1, 0x1);
        gbc.writeMem(0xec03, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf8ae);
        EXPECT(gbc.pc(), 0xec04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec03), 0x10);
        // 10 00AC
        gbc.setState(0xcea4, 0x7990, 0xe2b0, 0xf2a5, 0x96b2, 0x547d, 0x1, 0x0);
        gbc.writeMem(0xcea4, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7990);
        EXPECT(gbc.pc(), 0xcea5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea4), 0x10);
        // 10 00AE
        gbc.setState(0xd122, 0x5362, 0x2e30, 0x3406, 0x13ce, 0xcf89, 0x1, 0x0);
        gbc.writeMem(0xd122, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5362);
        EXPECT(gbc.pc(), 0xd123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd122), 0x10);
        // 10 00AF
        gbc.setState(0xd333, 0xe83f, 0x55d0, 0xcaf4, 0x114a, 0x6f6c, 0x0, 0x1);
        gbc.writeMem(0xd333, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe83f);
        EXPECT(gbc.pc(), 0xd334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd333), 0x10);
        // 10 00B0
        gbc.setState(0x77a7, 0xc004, 0x6b40, 0xd86c, 0xf992, 0x261b, 0x1, 0x1);
        gbc.writeMem(0x77a7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc004);
        EXPECT(gbc.pc(), 0x77a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 00B1
        gbc.setState(0x4ada, 0x460f, 0xaa90, 0xac4c, 0x665, 0x4033, 0x1, 0x1);
        gbc.writeMem(0x4ada, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x460f);
        EXPECT(gbc.pc(), 0x4adb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 00B2
        gbc.setState(0x7ca6, 0x3cc5, 0x9870, 0x746e, 0x9d77, 0x3e2a, 0x0, 0x1);
        gbc.writeMem(0x7ca6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3cc5);
        EXPECT(gbc.pc(), 0x7ca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 00B3
        gbc.setState(0x5c14, 0xe60b, 0x7840, 0xb77b, 0x4a60, 0xab15, 0x0, 0x1);
        gbc.writeMem(0x5c14, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe60b);
        EXPECT(gbc.pc(), 0x5c15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 00B4
        gbc.setState(0x3664, 0xbd5d, 0xaf70, 0x129e, 0x4fec, 0x78eb, 0x0, 0x0);
        gbc.writeMem(0x3664, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xbd5d);
        EXPECT(gbc.pc(), 0x3665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 00B5
        gbc.setState(0xb58e, 0xea3e, 0xf580, 0x3b86, 0x5be8, 0xe549, 0x0, 0x1);
        gbc.writeMem(0xb58e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xea3e);
        EXPECT(gbc.pc(), 0xb58f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb58e), 0x10);
        // 10 00B6
        gbc.setState(0xd84c, 0xefe1, 0x2650, 0x1743, 0x5211, 0xdacc, 0x1, 0x0);
        gbc.writeMem(0xd84c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xefe1);
        EXPECT(gbc.pc(), 0xd84d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd84c), 0x10);
        // 10 00B7
        gbc.setState(0xdfae, 0x2af7, 0xa870, 0xdd69, 0x72cc, 0x87e1, 0x0, 0x0);
        gbc.writeMem(0xdfae, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2af7);
        EXPECT(gbc.pc(), 0xdfaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfae), 0x10);
        // 10 00B8
        gbc.setState(0xec32, 0x66be, 0x3120, 0xecda, 0xc519, 0xbb88, 0x0, 0x0);
        gbc.writeMem(0xec32, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x66be);
        EXPECT(gbc.pc(), 0xec33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec32), 0x10);
        // 10 00B9
        gbc.setState(0x997a, 0x9fa8, 0xe250, 0x1500, 0xc57f, 0xca8, 0x0, 0x1);
        gbc.writeMem(0x997a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9fa8);
        EXPECT(gbc.pc(), 0x997b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x997a), 0x10);
        // 10 00BA
        gbc.setState(0xb5bd, 0x280d, 0x3240, 0x458c, 0xa033, 0x39d4, 0x0, 0x0);
        gbc.writeMem(0xb5bd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x280d);
        EXPECT(gbc.pc(), 0xb5be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5bd), 0x10);
        // 10 00BB
        gbc.setState(0xd86c, 0x4750, 0x9150, 0x6392, 0xa789, 0x981b, 0x1, 0x0);
        gbc.writeMem(0xd86c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4750);
        EXPECT(gbc.pc(), 0xd86d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd86c), 0x10);
        // 10 00BC
        gbc.setState(0x79de, 0xb448, 0x9c50, 0x5df1, 0x221c, 0x75be, 0x0, 0x1);
        gbc.writeMem(0x79de, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb448);
        EXPECT(gbc.pc(), 0x79df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 00BD
        gbc.setState(0xa32d, 0x6292, 0xa800, 0x3707, 0xbee5, 0xe009, 0x1, 0x1);
        gbc.writeMem(0xa32d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6292);
        EXPECT(gbc.pc(), 0xa32e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa32d), 0x10);
        // 10 00BE
        gbc.setState(0xd03, 0xd1ef, 0x94e0, 0x5ce, 0x9202, 0x5915, 0x0, 0x1);
        gbc.writeMem(0xd03, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd1ef);
        EXPECT(gbc.pc(), 0xd04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 00BF
        gbc.setState(0x2b6, 0x4a14, 0x7b60, 0x5065, 0x2939, 0x2f49, 0x1, 0x1);
        gbc.writeMem(0x2b6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4a14);
        EXPECT(gbc.pc(), 0x2b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 00C0
        gbc.setState(0x500f, 0x5a19, 0xb610, 0x3071, 0x245d, 0x9d8, 0x1, 0x1);
        gbc.writeMem(0x500f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5a19);
        EXPECT(gbc.pc(), 0x5010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 00C1
        gbc.setState(0x40d7, 0x48ff, 0xf7f0, 0x4bb, 0xd8ab, 0x88d, 0x1, 0x0);
        gbc.writeMem(0x40d7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x48ff);
        EXPECT(gbc.pc(), 0x40d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 00C2
        gbc.setState(0xc72a, 0xb9f5, 0xbb90, 0x3fe, 0x1ad2, 0xaaa5, 0x0, 0x1);
        gbc.writeMem(0xc72a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb9f5);
        EXPECT(gbc.pc(), 0xc72b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc72a), 0x10);
        // 10 00C3
        gbc.setState(0x4438, 0x10e5, 0x72c0, 0xb688, 0xd28b, 0xe4cd, 0x1, 0x0);
        gbc.writeMem(0x4438, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x10e5);
        EXPECT(gbc.pc(), 0x4439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 00C4
        gbc.setState(0x9d76, 0xd181, 0x6110, 0xb7dc, 0xdac5, 0x9e0e, 0x0, 0x1);
        gbc.writeMem(0x9d76, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd181);
        EXPECT(gbc.pc(), 0x9d77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d76), 0x10);
        // 10 00C5
        gbc.setState(0x7e60, 0xd16c, 0xbed0, 0x77e6, 0xafc5, 0x4bc0, 0x0, 0x1);
        gbc.writeMem(0x7e60, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd16c);
        EXPECT(gbc.pc(), 0x7e61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 00C6
        gbc.setState(0xab, 0x6b65, 0x16c0, 0xdbab, 0x9572, 0xada0, 0x1, 0x1);
        gbc.writeMem(0xab, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6b65);
        EXPECT(gbc.pc(), 0xac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 00C7
        gbc.setState(0x3760, 0x9f62, 0x8e30, 0xdbde, 0xa87a, 0x15dd, 0x0, 0x1);
        gbc.writeMem(0x3760, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9f62);
        EXPECT(gbc.pc(), 0x3761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 00C8
        gbc.setState(0x9506, 0x4bde, 0x8e10, 0x35cc, 0xb319, 0xf2dc, 0x0, 0x0);
        gbc.writeMem(0x9506, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4bde);
        EXPECT(gbc.pc(), 0x9507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9506), 0x10);
        // 10 00C9
        gbc.setState(0x1f77, 0xd740, 0xaf30, 0xf595, 0xa04f, 0x9993, 0x1, 0x0);
        gbc.writeMem(0x1f77, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd740);
        EXPECT(gbc.pc(), 0x1f78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 00CA
        gbc.setState(0xd75b, 0x36fd, 0x29e0, 0xabc5, 0x182c, 0x8d1d, 0x0, 0x1);
        gbc.writeMem(0xd75b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x36fd);
        EXPECT(gbc.pc(), 0xd75c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd75b), 0x10);
        // 10 00CB
        gbc.setState(0xd536, 0xf7f4, 0xb7e0, 0x9ec7, 0x87ad, 0xb162, 0x0, 0x0);
        gbc.writeMem(0xd536, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf7f4);
        EXPECT(gbc.pc(), 0xd537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd536), 0x10);
        // 10 00CC
        gbc.setState(0xaad, 0x1642, 0x5dc0, 0x3dcf, 0x5b6b, 0x3d10, 0x1, 0x1);
        gbc.writeMem(0xaad, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1642);
        EXPECT(gbc.pc(), 0xaae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 00CD
        gbc.setState(0x751b, 0x4d20, 0xedf0, 0x801e, 0x7d4b, 0xc8bc, 0x1, 0x1);
        gbc.writeMem(0x751b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4d20);
        EXPECT(gbc.pc(), 0x751c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 00CE
        gbc.setState(0x8869, 0xd77e, 0x4ab0, 0x3d09, 0xd34a, 0x2b64, 0x0, 0x1);
        gbc.writeMem(0x8869, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd77e);
        EXPECT(gbc.pc(), 0x886a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8869), 0x10);
        // 10 00CF
        gbc.setState(0x87ec, 0x88dd, 0x6ee0, 0x410b, 0x4584, 0xa98, 0x1, 0x1);
        gbc.writeMem(0x87ec, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x88dd);
        EXPECT(gbc.pc(), 0x87ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ec), 0x10);
        // 10 00D0
        gbc.setState(0xb3b0, 0xda07, 0xffb0, 0xf6a6, 0x4138, 0x4655, 0x0, 0x1);
        gbc.writeMem(0xb3b0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xda07);
        EXPECT(gbc.pc(), 0xb3b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b0), 0x10);
        // 10 00D1
        gbc.setState(0x557f, 0x621a, 0x96c0, 0x280, 0xb75a, 0x3235, 0x1, 0x1);
        gbc.writeMem(0x557f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x621a);
        EXPECT(gbc.pc(), 0x5580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 00D2
        gbc.setState(0x80f7, 0x4c5c, 0x14d0, 0x9be1, 0x56bb, 0x27a6, 0x1, 0x0);
        gbc.writeMem(0x80f7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4c5c);
        EXPECT(gbc.pc(), 0x80f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f7), 0x10);
        // 10 00D3
        gbc.setState(0x4ec9, 0xbf56, 0x22d0, 0xbae9, 0x46bb, 0x3308, 0x0, 0x1);
        gbc.writeMem(0x4ec9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xbf56);
        EXPECT(gbc.pc(), 0x4eca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 00D4
        gbc.setState(0xcf9, 0x7876, 0x2460, 0xd20e, 0xb99, 0x7c61, 0x0, 0x1);
        gbc.writeMem(0xcf9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7876);
        EXPECT(gbc.pc(), 0xcfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 00D5
        gbc.setState(0x1e14, 0xc7c1, 0x2660, 0xaa55, 0xfcbf, 0x7389, 0x0, 0x0);
        gbc.writeMem(0x1e14, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc7c1);
        EXPECT(gbc.pc(), 0x1e15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 00D6
        gbc.setState(0x313, 0xbc3c, 0x92d0, 0x6753, 0x10dd, 0xc84f, 0x0, 0x1);
        gbc.writeMem(0x313, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xbc3c);
        EXPECT(gbc.pc(), 0x314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 00D7
        gbc.setState(0xca8b, 0xe61f, 0x3660, 0x4324, 0x7967, 0x25b8, 0x1, 0x1);
        gbc.writeMem(0xca8b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe61f);
        EXPECT(gbc.pc(), 0xca8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca8b), 0x10);
        // 10 00D8
        gbc.setState(0x3571, 0x43d, 0x5980, 0xf8b5, 0x69ca, 0xcf7, 0x0, 0x0);
        gbc.writeMem(0x3571, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x43d);
        EXPECT(gbc.pc(), 0x3572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 00D9
        gbc.setState(0x8a3f, 0x69a6, 0x1e80, 0xcbd4, 0x2b4b, 0xcdcf, 0x0, 0x1);
        gbc.writeMem(0x8a3f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x69a6);
        EXPECT(gbc.pc(), 0x8a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a3f), 0x10);
        // 10 00DA
        gbc.setState(0xe90f, 0xdb49, 0x9f10, 0xa40f, 0xc4a4, 0x4dc3, 0x0, 0x0);
        gbc.writeMem(0xe90f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xdb49);
        EXPECT(gbc.pc(), 0xe910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe90f), 0x10);
        // 10 00DB
        gbc.setState(0xcb6a, 0x5ac3, 0x7130, 0x7149, 0x43f0, 0xcb76, 0x1, 0x0);
        gbc.writeMem(0xcb6a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5ac3);
        EXPECT(gbc.pc(), 0xcb6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb6a), 0x10);
        // 10 00DC
        gbc.setState(0x2d8, 0xc260, 0x6ed0, 0xd6f2, 0xa77d, 0x3c3f, 0x0, 0x1);
        gbc.writeMem(0x2d8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc260);
        EXPECT(gbc.pc(), 0x2d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 00DD
        gbc.setState(0x8e17, 0xc184, 0x97e0, 0xb7b3, 0x6e1b, 0xb3b, 0x1, 0x1);
        gbc.writeMem(0x8e17, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc184);
        EXPECT(gbc.pc(), 0x8e18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e17), 0x10);
        // 10 00DE
        gbc.setState(0x57f6, 0xedc8, 0xe900, 0x7b2a, 0xa426, 0x3c79, 0x1, 0x1);
        gbc.writeMem(0x57f6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xedc8);
        EXPECT(gbc.pc(), 0x57f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 00DF
        gbc.setState(0xdcd7, 0xaf23, 0xc9f0, 0xaf10, 0xb0dc, 0x1c32, 0x1, 0x0);
        gbc.writeMem(0xdcd7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xaf23);
        EXPECT(gbc.pc(), 0xdcd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcd7), 0x10);
        // 10 00E0
        gbc.setState(0x60a2, 0x3e72, 0xb1e0, 0x6f28, 0xf8fd, 0xb6b, 0x0, 0x1);
        gbc.writeMem(0x60a2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3e72);
        EXPECT(gbc.pc(), 0x60a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 00E1
        gbc.setState(0x6f99, 0x21bd, 0x87a0, 0x81a6, 0x33c1, 0x4bbe, 0x1, 0x0);
        gbc.writeMem(0x6f99, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x21bd);
        EXPECT(gbc.pc(), 0x6f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 00E2
        gbc.setState(0x50e1, 0x2627, 0x66f0, 0x4d12, 0xd1af, 0x8f6d, 0x0, 0x0);
        gbc.writeMem(0x50e1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2627);
        EXPECT(gbc.pc(), 0x50e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 00E3
        gbc.setState(0xb205, 0x55e9, 0xfb10, 0x8c76, 0x3823, 0x2869, 0x1, 0x0);
        gbc.writeMem(0xb205, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x55e9);
        EXPECT(gbc.pc(), 0xb206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb205), 0x10);
        // 10 00E4
        gbc.setState(0xe112, 0x4fd7, 0x4c70, 0xfef7, 0x5cd0, 0x2d0f, 0x0, 0x0);
        gbc.writeMem(0xe112, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4fd7);
        EXPECT(gbc.pc(), 0xe113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe112), 0x10);
        // 10 00E5
        gbc.setState(0xb40f, 0xfd6e, 0x7d90, 0xad47, 0xeb5c, 0x179b, 0x0, 0x1);
        gbc.writeMem(0xb40f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xfd6e);
        EXPECT(gbc.pc(), 0xb410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb40f), 0x10);
        // 10 00E6
        gbc.setState(0x9e4d, 0x46fd, 0x7fc0, 0xa198, 0x38bb, 0xd430, 0x0, 0x1);
        gbc.writeMem(0x9e4d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x46fd);
        EXPECT(gbc.pc(), 0x9e4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e4d), 0x10);
        // 10 00E7
        gbc.setState(0x651c, 0x1d87, 0xa00, 0x3b60, 0x82be, 0xa291, 0x0, 0x0);
        gbc.writeMem(0x651c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1d87);
        EXPECT(gbc.pc(), 0x651d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 00E8
        gbc.setState(0x52b1, 0x2095, 0x7110, 0x28f5, 0x4aeb, 0xf873, 0x1, 0x1);
        gbc.writeMem(0x52b1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2095);
        EXPECT(gbc.pc(), 0x52b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 00E9
        gbc.setState(0x48e0, 0x59b7, 0x71a0, 0xe7e5, 0xad0c, 0x5b28, 0x0, 0x1);
        gbc.writeMem(0x48e0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x59b7);
        EXPECT(gbc.pc(), 0x48e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 00EA
        gbc.setState(0x6fdc, 0x7849, 0x3bf0, 0x5a37, 0x317a, 0xb4f5, 0x0, 0x0);
        gbc.writeMem(0x6fdc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7849);
        EXPECT(gbc.pc(), 0x6fdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 00EB
        gbc.setState(0xe2b8, 0x83de, 0xc910, 0xfbd2, 0x3ee6, 0x46db, 0x0, 0x1);
        gbc.writeMem(0xe2b8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x83de);
        EXPECT(gbc.pc(), 0xe2b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2b8), 0x10);
        // 10 00ED
        gbc.setState(0xe0ee, 0x6806, 0x1840, 0x3b0d, 0xe973, 0xda19, 0x0, 0x1);
        gbc.writeMem(0xe0ee, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6806);
        EXPECT(gbc.pc(), 0xe0ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ee), 0x10);
        // 10 00EE
        gbc.setState(0x95c1, 0x67f5, 0xbc50, 0x2602, 0xd0ee, 0x7678, 0x1, 0x1);
        gbc.writeMem(0x95c1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x67f5);
        EXPECT(gbc.pc(), 0x95c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95c1), 0x10);
        // 10 00EF
        gbc.setState(0x1786, 0xba16, 0xbe20, 0xceb7, 0x202e, 0x8894, 0x1, 0x1);
        gbc.writeMem(0x1786, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xba16);
        EXPECT(gbc.pc(), 0x1787);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 00F0
        gbc.setState(0x12f7, 0x8bbf, 0xb7f0, 0x5cff, 0x45da, 0x6a7a, 0x1, 0x1);
        gbc.writeMem(0x12f7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8bbf);
        EXPECT(gbc.pc(), 0x12f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 00F1
        gbc.setState(0xe06d, 0x47dd, 0x43d0, 0xd44e, 0xbe0e, 0x6c04, 0x0, 0x0);
        gbc.writeMem(0xe06d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x47dd);
        EXPECT(gbc.pc(), 0xe06e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe06d), 0x10);
        // 10 00F2
        gbc.setState(0x2ac0, 0x2b0a, 0xac10, 0xc5c2, 0x3a58, 0x7d1e, 0x0, 0x0);
        gbc.writeMem(0x2ac0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2b0a);
        EXPECT(gbc.pc(), 0x2ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 00F3
        gbc.setState(0x65e4, 0x8397, 0xe430, 0xa07d, 0x7a8, 0x8526, 0x1, 0x1);
        gbc.writeMem(0x65e4, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8397);
        EXPECT(gbc.pc(), 0x65e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 00F4
        gbc.setState(0xdae5, 0x6fc0, 0x950, 0xdc3d, 0x8d9d, 0xf1e4, 0x0, 0x1);
        gbc.writeMem(0xdae5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6fc0);
        EXPECT(gbc.pc(), 0xdae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae5), 0x10);
        // 10 00F6
        gbc.setState(0x1567, 0xed75, 0x2b40, 0x9659, 0x600b, 0x1edc, 0x0, 0x1);
        gbc.writeMem(0x1567, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xed75);
        EXPECT(gbc.pc(), 0x1568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 00F8
        gbc.setState(0x40be, 0xf092, 0xa550, 0x80d2, 0x7bc1, 0xc709, 0x0, 0x1);
        gbc.writeMem(0x40be, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf092);
        EXPECT(gbc.pc(), 0x40bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 00F9
        gbc.setState(0x33a0, 0xcf2f, 0xd300, 0xf429, 0x8147, 0xbcd1, 0x1, 0x1);
        gbc.writeMem(0x33a0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xcf2f);
        EXPECT(gbc.pc(), 0x33a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 00FA
        gbc.setState(0xae5f, 0x7484, 0xb2c0, 0x1a28, 0xfdd, 0x3175, 0x0, 0x0);
        gbc.writeMem(0xae5f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7484);
        EXPECT(gbc.pc(), 0xae60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae5f), 0x10);
        // 10 00FB
        gbc.setState(0x5047, 0x6681, 0xbd90, 0x6fad, 0x2309, 0x7e72, 0x0, 0x0);
        gbc.writeMem(0x5047, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6681);
        EXPECT(gbc.pc(), 0x5048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 00FC
        gbc.setState(0xc255, 0x3997, 0xce40, 0x4c25, 0x595d, 0x8476, 0x1, 0x0);
        gbc.writeMem(0xc255, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3997);
        EXPECT(gbc.pc(), 0xc256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc255), 0x10);
        // 10 00FD
        gbc.setState(0xe14f, 0xf420, 0xfbf0, 0x7732, 0x1238, 0x628f, 0x0, 0x1);
        gbc.writeMem(0xe14f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf420);
        EXPECT(gbc.pc(), 0xe150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe14f), 0x10);
        // 10 00FF
        gbc.setState(0x5f49, 0x8667, 0xfb20, 0xa94e, 0x132c, 0x83, 0x0, 0x1);
        gbc.writeMem(0x5f49, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8667);
        EXPECT(gbc.pc(), 0x5f4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0100
        gbc.setState(0xb717, 0x8381, 0xaae0, 0xba28, 0x73bf, 0xaec8, 0x1, 0x0);
        gbc.writeMem(0xb717, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8381);
        EXPECT(gbc.pc(), 0xb718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb717), 0x10);
        // 10 0101
        gbc.setState(0x14a, 0x7bc6, 0x85d0, 0x15a6, 0xeed8, 0xf090, 0x1, 0x1);
        gbc.writeMem(0x14a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7bc6);
        EXPECT(gbc.pc(), 0x14b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0102
        gbc.setState(0x55be, 0x5b5a, 0xc5a0, 0x870a, 0x16c7, 0xb7fe, 0x1, 0x1);
        gbc.writeMem(0x55be, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5b5a);
        EXPECT(gbc.pc(), 0x55bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0103
        gbc.setState(0x60b7, 0x2d0e, 0x34d0, 0x513c, 0x164f, 0xe2ac, 0x1, 0x1);
        gbc.writeMem(0x60b7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2d0e);
        EXPECT(gbc.pc(), 0x60b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0104
        gbc.setState(0x6c34, 0xb21f, 0x2650, 0x71e9, 0xbe11, 0x56e3, 0x0, 0x1);
        gbc.writeMem(0x6c34, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb21f);
        EXPECT(gbc.pc(), 0x6c35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0105
        gbc.setState(0xba09, 0x4c8c, 0xb610, 0x3086, 0xb873, 0x6139, 0x0, 0x0);
        gbc.writeMem(0xba09, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4c8c);
        EXPECT(gbc.pc(), 0xba0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba09), 0x10);
        // 10 0106
        gbc.setState(0xdf18, 0xee4a, 0x5bc0, 0x8464, 0x399f, 0xc30d, 0x0, 0x0);
        gbc.writeMem(0xdf18, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xee4a);
        EXPECT(gbc.pc(), 0xdf19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf18), 0x10);
        // 10 0107
        gbc.setState(0xcbb4, 0x7e57, 0x62d0, 0xfe2b, 0x9afb, 0xcccd, 0x0, 0x1);
        gbc.writeMem(0xcbb4, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7e57);
        EXPECT(gbc.pc(), 0xcbb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbb4), 0x10);
        // 10 0108
        gbc.setState(0x15ce, 0xd131, 0xf3f0, 0x9b84, 0x68e5, 0x4601, 0x1, 0x1);
        gbc.writeMem(0x15ce, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd131);
        EXPECT(gbc.pc(), 0x15cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0109
        gbc.setState(0xe008, 0x54f3, 0xd880, 0xbb2d, 0x13d2, 0xff08, 0x0, 0x0);
        gbc.writeMem(0xe008, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x54f3);
        EXPECT(gbc.pc(), 0xe009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe008), 0x10);
        // 10 010A
        gbc.setState(0xc9d8, 0xcd62, 0xa7e0, 0x157e, 0xae0d, 0x8e34, 0x0, 0x1);
        gbc.writeMem(0xc9d8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xcd62);
        EXPECT(gbc.pc(), 0xc9d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9d8), 0x10);
        // 10 010B
        gbc.setState(0x9938, 0x581d, 0xac20, 0x16cc, 0xb67f, 0x8109, 0x0, 0x1);
        gbc.writeMem(0x9938, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x581d);
        EXPECT(gbc.pc(), 0x9939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9938), 0x10);
        // 10 010C
        gbc.setState(0xce7e, 0x971a, 0x1aa0, 0x4f70, 0xd774, 0x738, 0x0, 0x0);
        gbc.writeMem(0xce7e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x971a);
        EXPECT(gbc.pc(), 0xce7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce7e), 0x10);
        // 10 010D
        gbc.setState(0x1991, 0x3862, 0xc3b0, 0x8ff0, 0x36, 0x91f0, 0x0, 0x0);
        gbc.writeMem(0x1991, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3862);
        EXPECT(gbc.pc(), 0x1992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 010E
        gbc.setState(0xc5d0, 0x1b0a, 0xcc00, 0x4d7c, 0x1845, 0xb960, 0x0, 0x1);
        gbc.writeMem(0xc5d0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1b0a);
        EXPECT(gbc.pc(), 0xc5d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5d0), 0x10);
        // 10 010F
        gbc.setState(0xa49, 0xe314, 0xb5e0, 0xfa76, 0x1e11, 0xf7ce, 0x1, 0x1);
        gbc.writeMem(0xa49, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe314);
        EXPECT(gbc.pc(), 0xa4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0110
        gbc.setState(0x6db, 0x1b74, 0xc4b0, 0x539b, 0xd315, 0xaa4a, 0x1, 0x1);
        gbc.writeMem(0x6db, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1b74);
        EXPECT(gbc.pc(), 0x6dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0111
        gbc.setState(0xb400, 0x90ee, 0x54e0, 0xd732, 0xf99, 0x31df, 0x1, 0x1);
        gbc.writeMem(0xb400, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x90ee);
        EXPECT(gbc.pc(), 0xb401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb400), 0x10);
        // 10 0112
        gbc.setState(0xe003, 0xad50, 0x40a0, 0xeb70, 0xc0e0, 0xbf1e, 0x0, 0x0);
        gbc.writeMem(0xe003, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xad50);
        EXPECT(gbc.pc(), 0xe004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe003), 0x10);
        // 10 0113
        gbc.setState(0x27c5, 0xe14c, 0x4ea0, 0xfb87, 0xe35e, 0x9c58, 0x1, 0x1);
        gbc.writeMem(0x27c5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe14c);
        EXPECT(gbc.pc(), 0x27c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0114
        gbc.setState(0x8f21, 0xbfc, 0xf300, 0xdc6d, 0xd3ce, 0x1c11, 0x0, 0x0);
        gbc.writeMem(0x8f21, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbfc);
        EXPECT(gbc.pc(), 0x8f22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f21), 0x10);
        // 10 0115
        gbc.setState(0x4324, 0xb985, 0x3440, 0xa2e5, 0xb3ec, 0xe9c9, 0x1, 0x0);
        gbc.writeMem(0x4324, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb985);
        EXPECT(gbc.pc(), 0x4325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0117
        gbc.setState(0xc891, 0x2efa, 0xc2d0, 0x75dc, 0x56e6, 0x6475, 0x1, 0x0);
        gbc.writeMem(0xc891, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2efa);
        EXPECT(gbc.pc(), 0xc892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc891), 0x10);
        // 10 0118
        gbc.setState(0xe91, 0x67b3, 0x9680, 0xb279, 0xae21, 0x6c38, 0x0, 0x0);
        gbc.writeMem(0xe91, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x67b3);
        EXPECT(gbc.pc(), 0xe92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0119
        gbc.setState(0x1540, 0x6df1, 0x2a90, 0x904b, 0xe8d, 0x4dd3, 0x1, 0x1);
        gbc.writeMem(0x1540, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6df1);
        EXPECT(gbc.pc(), 0x1541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 011A
        gbc.setState(0xb7d4, 0x78b6, 0xf390, 0xd5b8, 0x4afd, 0xcf9e, 0x1, 0x0);
        gbc.writeMem(0xb7d4, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x78b6);
        EXPECT(gbc.pc(), 0xb7d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7d4), 0x10);
        // 10 011B
        gbc.setState(0x8f73, 0x23e2, 0xc050, 0x346c, 0xab6e, 0x3873, 0x0, 0x0);
        gbc.writeMem(0x8f73, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x23e2);
        EXPECT(gbc.pc(), 0x8f74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f73), 0x10);
        // 10 011C
        gbc.setState(0xdf68, 0xb29a, 0xfcd0, 0x4803, 0xd9c6, 0x877f, 0x0, 0x1);
        gbc.writeMem(0xdf68, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb29a);
        EXPECT(gbc.pc(), 0xdf69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf68), 0x10);
        // 10 011D
        gbc.setState(0x20d9, 0x1c11, 0xa370, 0xb23c, 0xede9, 0x653, 0x0, 0x0);
        gbc.writeMem(0x20d9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x1c11);
        EXPECT(gbc.pc(), 0x20da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 011E
        gbc.setState(0x56f8, 0xfc92, 0xac70, 0xb1c7, 0x7256, 0x7902, 0x0, 0x0);
        gbc.writeMem(0x56f8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xfc92);
        EXPECT(gbc.pc(), 0x56f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 011F
        gbc.setState(0x58e7, 0xba59, 0x8910, 0xc354, 0x6ca5, 0x3b4f, 0x0, 0x1);
        gbc.writeMem(0x58e7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xba59);
        EXPECT(gbc.pc(), 0x58e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0120
        gbc.setState(0x17c0, 0x6a88, 0x3140, 0x9b77, 0x7d15, 0xbcaf, 0x1, 0x1);
        gbc.writeMem(0x17c0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6a88);
        EXPECT(gbc.pc(), 0x17c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0121
        gbc.setState(0x39a8, 0x2fda, 0x89d0, 0xc11a, 0x60eb, 0xa24e, 0x0, 0x0);
        gbc.writeMem(0x39a8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2fda);
        EXPECT(gbc.pc(), 0x39a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0122
        gbc.setState(0x37aa, 0x298d, 0x2df0, 0x406e, 0x606f, 0x7f2e, 0x1, 0x1);
        gbc.writeMem(0x37aa, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x298d);
        EXPECT(gbc.pc(), 0x37ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0123
        gbc.setState(0xc30b, 0xc65e, 0x630, 0x6b3d, 0x7a28, 0x43a5, 0x0, 0x1);
        gbc.writeMem(0xc30b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc65e);
        EXPECT(gbc.pc(), 0xc30c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc30b), 0x10);
        // 10 0124
        gbc.setState(0xbfeb, 0x8c2f, 0xdc0, 0x37c1, 0xa1ac, 0x4ec8, 0x1, 0x0);
        gbc.writeMem(0xbfeb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8c2f);
        EXPECT(gbc.pc(), 0xbfec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfeb), 0x10);
        // 10 0125
        gbc.setState(0xa224, 0x10be, 0x99c0, 0xa2db, 0xf75, 0xdded, 0x1, 0x0);
        gbc.writeMem(0xa224, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x10be);
        EXPECT(gbc.pc(), 0xa225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa224), 0x10);
        // 10 0126
        gbc.setState(0x2b47, 0xcfa7, 0x1390, 0xfbba, 0x3dfc, 0xd10, 0x1, 0x1);
        gbc.writeMem(0x2b47, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcfa7);
        EXPECT(gbc.pc(), 0x2b48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0127
        gbc.setState(0x71c6, 0x1708, 0x4c10, 0x42a8, 0x90dc, 0xfd89, 0x0, 0x1);
        gbc.writeMem(0x71c6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1708);
        EXPECT(gbc.pc(), 0x71c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0128
        gbc.setState(0x5a9f, 0xf70c, 0xb990, 0x3861, 0xf4ce, 0xa311, 0x1, 0x1);
        gbc.writeMem(0x5a9f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf70c);
        EXPECT(gbc.pc(), 0x5aa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0129
        gbc.setState(0x8c04, 0x90ed, 0x9c10, 0x6673, 0x1a8, 0x261b, 0x1, 0x1);
        gbc.writeMem(0x8c04, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x90ed);
        EXPECT(gbc.pc(), 0x8c05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c04), 0x10);
        // 10 012A
        gbc.setState(0xcc5c, 0xdaa2, 0x5750, 0x238b, 0x714c, 0x7f3, 0x0, 0x1);
        gbc.writeMem(0xcc5c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xdaa2);
        EXPECT(gbc.pc(), 0xcc5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc5c), 0x10);
        // 10 012B
        gbc.setState(0x4eb, 0x4d2c, 0xab0, 0x1651, 0x2403, 0x267c, 0x0, 0x1);
        gbc.writeMem(0x4eb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4d2c);
        EXPECT(gbc.pc(), 0x4ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 012C
        gbc.setState(0xbf8b, 0xbf52, 0xeb30, 0xb356, 0x56e9, 0x4096, 0x0, 0x0);
        gbc.writeMem(0xbf8b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbf52);
        EXPECT(gbc.pc(), 0xbf8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf8b), 0x10);
        // 10 012D
        gbc.setState(0xc353, 0x27e9, 0x8cd0, 0x6d76, 0x83ea, 0x90cf, 0x1, 0x1);
        gbc.writeMem(0xc353, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x27e9);
        EXPECT(gbc.pc(), 0xc354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc353), 0x10);
        // 10 012E
        gbc.setState(0xd1fa, 0x71d8, 0x2290, 0xf220, 0xd1a7, 0x81e1, 0x0, 0x0);
        gbc.writeMem(0xd1fa, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x71d8);
        EXPECT(gbc.pc(), 0xd1fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1fa), 0x10);
        // 10 012F
        gbc.setState(0x1526, 0xe0c1, 0x3fa0, 0x8a6f, 0x64a4, 0xd229, 0x0, 0x0);
        gbc.writeMem(0x1526, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe0c1);
        EXPECT(gbc.pc(), 0x1527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0130
        gbc.setState(0x6e79, 0x405c, 0x5aa0, 0x19f1, 0xb16b, 0xcd0d, 0x1, 0x0);
        gbc.writeMem(0x6e79, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x405c);
        EXPECT(gbc.pc(), 0x6e7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0131
        gbc.setState(0x50e3, 0xa2e1, 0x5440, 0x8256, 0x830a, 0xa46f, 0x0, 0x1);
        gbc.writeMem(0x50e3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa2e1);
        EXPECT(gbc.pc(), 0x50e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0132
        gbc.setState(0xa7ee, 0x39c6, 0xf60, 0x629a, 0xef1e, 0xd4c5, 0x0, 0x0);
        gbc.writeMem(0xa7ee, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x39c6);
        EXPECT(gbc.pc(), 0xa7ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ee), 0x10);
        // 10 0133
        gbc.setState(0x6717, 0x3f68, 0xfa10, 0x1c1a, 0xbc9, 0x2f0b, 0x0, 0x1);
        gbc.writeMem(0x6717, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3f68);
        EXPECT(gbc.pc(), 0x6718);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0134
        gbc.setState(0xdb69, 0xfbe2, 0xf1d0, 0x8169, 0x9840, 0xad20, 0x1, 0x1);
        gbc.writeMem(0xdb69, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfbe2);
        EXPECT(gbc.pc(), 0xdb6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb69), 0x10);
        // 10 0135
        gbc.setState(0xeef8, 0x8cb2, 0x61a0, 0xcc98, 0x7db8, 0xd6a5, 0x1, 0x1);
        gbc.writeMem(0xeef8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8cb2);
        EXPECT(gbc.pc(), 0xeef9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeef8), 0x10);
        // 10 0136
        gbc.setState(0xc1d5, 0xae3e, 0xc970, 0xee9c, 0xec1d, 0x892f, 0x0, 0x0);
        gbc.writeMem(0xc1d5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xae3e);
        EXPECT(gbc.pc(), 0xc1d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d5), 0x10);
        // 10 0137
        gbc.setState(0x7753, 0x3364, 0x3110, 0x770d, 0x2b2d, 0x555c, 0x1, 0x0);
        gbc.writeMem(0x7753, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3364);
        EXPECT(gbc.pc(), 0x7754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0138
        gbc.setState(0xd567, 0x527a, 0xf520, 0x8825, 0xab5b, 0x2b6e, 0x1, 0x1);
        gbc.writeMem(0xd567, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x527a);
        EXPECT(gbc.pc(), 0xd568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd567), 0x10);
        // 10 0139
        gbc.setState(0x263d, 0xd70d, 0x78b0, 0x2b7b, 0x7a64, 0xf0fe, 0x1, 0x0);
        gbc.writeMem(0x263d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd70d);
        EXPECT(gbc.pc(), 0x263e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 013A
        gbc.setState(0x8d6b, 0x802, 0xee80, 0xaf3f, 0xa713, 0x7be2, 0x1, 0x0);
        gbc.writeMem(0x8d6b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x802);
        EXPECT(gbc.pc(), 0x8d6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d6b), 0x10);
        // 10 013B
        gbc.setState(0x8b66, 0xe30e, 0xec60, 0x2336, 0xb0c4, 0x63c3, 0x0, 0x1);
        gbc.writeMem(0x8b66, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe30e);
        EXPECT(gbc.pc(), 0x8b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b66), 0x10);
        // 10 013C
        gbc.setState(0xab7e, 0xd8e7, 0x8c50, 0x236d, 0x9801, 0x253c, 0x0, 0x1);
        gbc.writeMem(0xab7e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd8e7);
        EXPECT(gbc.pc(), 0xab7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab7e), 0x10);
        // 10 013D
        gbc.setState(0x76fb, 0x9e, 0x4f0, 0xaad0, 0x7ec5, 0xcc4a, 0x0, 0x0);
        gbc.writeMem(0x76fb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9e);
        EXPECT(gbc.pc(), 0x76fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 013E
        gbc.setState(0x2d8a, 0x45a5, 0x8130, 0x6a86, 0x2680, 0x973b, 0x0, 0x0);
        gbc.writeMem(0x2d8a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x45a5);
        EXPECT(gbc.pc(), 0x2d8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 013F
        gbc.setState(0x47af, 0xac6c, 0x33a0, 0x5965, 0x4a04, 0xaacb, 0x0, 0x0);
        gbc.writeMem(0x47af, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xac6c);
        EXPECT(gbc.pc(), 0x47b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0140
        gbc.setState(0xa8ae, 0x8e32, 0x38a0, 0x660e, 0xaff3, 0x884b, 0x1, 0x0);
        gbc.writeMem(0xa8ae, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8e32);
        EXPECT(gbc.pc(), 0xa8af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8ae), 0x10);
        // 10 0142
        gbc.setState(0x8a3d, 0xd862, 0x20f0, 0xf1a2, 0x4557, 0xecb4, 0x1, 0x1);
        gbc.writeMem(0x8a3d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd862);
        EXPECT(gbc.pc(), 0x8a3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a3d), 0x10);
        // 10 0143
        gbc.setState(0xa104, 0xfa63, 0xc9b0, 0xf62e, 0xb1bc, 0xdff0, 0x0, 0x0);
        gbc.writeMem(0xa104, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xfa63);
        EXPECT(gbc.pc(), 0xa105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa104), 0x10);
        // 10 0145
        gbc.setState(0xa19c, 0xe9df, 0xe8b0, 0x4b55, 0x49a3, 0x553b, 0x0, 0x1);
        gbc.writeMem(0xa19c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe9df);
        EXPECT(gbc.pc(), 0xa19d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa19c), 0x10);
        // 10 0146
        gbc.setState(0x82ec, 0x9d7b, 0x210, 0xc29c, 0xfe53, 0xc2f4, 0x1, 0x1);
        gbc.writeMem(0x82ec, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9d7b);
        EXPECT(gbc.pc(), 0x82ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ec), 0x10);
        // 10 0147
        gbc.setState(0xa852, 0xb821, 0x1ba0, 0x41a, 0xd2bd, 0x761f, 0x1, 0x1);
        gbc.writeMem(0xa852, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb821);
        EXPECT(gbc.pc(), 0xa853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa852), 0x10);
        // 10 0148
        gbc.setState(0x1160, 0x75e3, 0x6e80, 0xe977, 0xa9fa, 0x5e13, 0x0, 0x0);
        gbc.writeMem(0x1160, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x75e3);
        EXPECT(gbc.pc(), 0x1161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0149
        gbc.setState(0xefb7, 0x7061, 0x3260, 0xdf17, 0xdb83, 0x63c6, 0x1, 0x1);
        gbc.writeMem(0xefb7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7061);
        EXPECT(gbc.pc(), 0xefb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefb7), 0x10);
        // 10 014A
        gbc.setState(0x8c9f, 0xbc5b, 0xfef0, 0xb886, 0x585e, 0xbc, 0x0, 0x1);
        gbc.writeMem(0x8c9f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbc5b);
        EXPECT(gbc.pc(), 0x8ca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c9f), 0x10);
        // 10 014B
        gbc.setState(0x1e21, 0xbe5b, 0xc9d0, 0x27c6, 0xef66, 0x1e9f, 0x1, 0x1);
        gbc.writeMem(0x1e21, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbe5b);
        EXPECT(gbc.pc(), 0x1e22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 014C
        gbc.setState(0x8ea0, 0x2216, 0x3830, 0x7821, 0x16a0, 0x5c8f, 0x0, 0x0);
        gbc.writeMem(0x8ea0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2216);
        EXPECT(gbc.pc(), 0x8ea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea0), 0x10);
        // 10 014D
        gbc.setState(0x2848, 0x8a26, 0xeb40, 0xd8e5, 0xae10, 0x5633, 0x0, 0x0);
        gbc.writeMem(0x2848, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8a26);
        EXPECT(gbc.pc(), 0x2849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 014E
        gbc.setState(0x4e1c, 0x773c, 0xc490, 0x6803, 0xc5da, 0x2c3e, 0x0, 0x0);
        gbc.writeMem(0x4e1c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x773c);
        EXPECT(gbc.pc(), 0x4e1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 014F
        gbc.setState(0x3b23, 0xc9c2, 0x6290, 0x854e, 0x80b2, 0x2f98, 0x0, 0x1);
        gbc.writeMem(0x3b23, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc9c2);
        EXPECT(gbc.pc(), 0x3b24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0150
        gbc.setState(0x5192, 0x754f, 0x810, 0x56e, 0xa139, 0x8b84, 0x0, 0x0);
        gbc.writeMem(0x5192, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x754f);
        EXPECT(gbc.pc(), 0x5193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0151
        gbc.setState(0x301c, 0x7d99, 0xb540, 0x8075, 0x8119, 0xdf09, 0x0, 0x1);
        gbc.writeMem(0x301c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7d99);
        EXPECT(gbc.pc(), 0x301d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0152
        gbc.setState(0xaeb1, 0x9f71, 0x5ab0, 0x2179, 0x330, 0xe05, 0x1, 0x1);
        gbc.writeMem(0xaeb1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9f71);
        EXPECT(gbc.pc(), 0xaeb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeb1), 0x10);
        // 10 0153
        gbc.setState(0xb8fe, 0x6ce2, 0x3850, 0x20be, 0xae9a, 0x2fe6, 0x1, 0x1);
        gbc.writeMem(0xb8fe, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6ce2);
        EXPECT(gbc.pc(), 0xb8ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8fe), 0x10);
        // 10 0154
        gbc.setState(0x6317, 0x2c63, 0xd180, 0x35b3, 0x714e, 0x55da, 0x1, 0x0);
        gbc.writeMem(0x6317, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2c63);
        EXPECT(gbc.pc(), 0x6318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0155
        gbc.setState(0xa2d8, 0x2ff9, 0x14c0, 0x72a4, 0x7c0d, 0xf8a6, 0x0, 0x1);
        gbc.writeMem(0xa2d8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2ff9);
        EXPECT(gbc.pc(), 0xa2d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d8), 0x10);
        // 10 0156
        gbc.setState(0x910e, 0x30cc, 0xa0a0, 0x468, 0xa9b3, 0x22aa, 0x1, 0x1);
        gbc.writeMem(0x910e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x30cc);
        EXPECT(gbc.pc(), 0x910f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x910e), 0x10);
        // 10 0159
        gbc.setState(0x9fa3, 0x7670, 0xd1f0, 0x70c4, 0x95cb, 0x836d, 0x1, 0x1);
        gbc.writeMem(0x9fa3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7670);
        EXPECT(gbc.pc(), 0x9fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fa3), 0x10);
        // 10 015A
        gbc.setState(0x922a, 0x5e1b, 0x4490, 0x8b35, 0xfcf2, 0xfce1, 0x1, 0x0);
        gbc.writeMem(0x922a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5e1b);
        EXPECT(gbc.pc(), 0x922b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922a), 0x10);
        // 10 015B
        gbc.setState(0xc82, 0x4822, 0x8b0, 0x7621, 0xc8b8, 0xa9cb, 0x0, 0x0);
        gbc.writeMem(0xc82, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4822);
        EXPECT(gbc.pc(), 0xc83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 015C
        gbc.setState(0xacde, 0x709c, 0x6e10, 0x316a, 0x5c76, 0x4a93, 0x1, 0x1);
        gbc.writeMem(0xacde, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x709c);
        EXPECT(gbc.pc(), 0xacdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacde), 0x10);
        // 10 015D
        gbc.setState(0x9294, 0xc35, 0x32d0, 0x5c1b, 0x8e6, 0xfd3, 0x0, 0x0);
        gbc.writeMem(0x9294, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xc35);
        EXPECT(gbc.pc(), 0x9295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9294), 0x10);
        // 10 015E
        gbc.setState(0x7d78, 0xcaf, 0x2b80, 0x2e6f, 0x609f, 0x40d8, 0x0, 0x0);
        gbc.writeMem(0x7d78, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xcaf);
        EXPECT(gbc.pc(), 0x7d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 015F
        gbc.setState(0xb75f, 0xf401, 0xd640, 0x760c, 0xe893, 0x5a6d, 0x1, 0x1);
        gbc.writeMem(0xb75f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf401);
        EXPECT(gbc.pc(), 0xb760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb75f), 0x10);
        // 10 0160
        gbc.setState(0xd51e, 0x83f0, 0xfab0, 0x3df0, 0x847f, 0xc4f6, 0x1, 0x1);
        gbc.writeMem(0xd51e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x83f0);
        EXPECT(gbc.pc(), 0xd51f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd51e), 0x10);
        // 10 0162
        gbc.setState(0xe2bd, 0x694d, 0xeed0, 0xb7bd, 0x7aae, 0x2c1f, 0x0, 0x1);
        gbc.writeMem(0xe2bd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x694d);
        EXPECT(gbc.pc(), 0xe2be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2bd), 0x10);
        // 10 0163
        gbc.setState(0xec01, 0x3c11, 0xc7b0, 0xa7cc, 0xfb70, 0xd9d2, 0x1, 0x0);
        gbc.writeMem(0xec01, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x3c11);
        EXPECT(gbc.pc(), 0xec02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec01), 0x10);
        // 10 0164
        gbc.setState(0x1656, 0x7774, 0x85c0, 0x7c5a, 0xa8f4, 0x2f8a, 0x0, 0x1);
        gbc.writeMem(0x1656, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7774);
        EXPECT(gbc.pc(), 0x1657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0165
        gbc.setState(0x8b63, 0x939c, 0x1320, 0x29a5, 0xd0a6, 0x310b, 0x0, 0x1);
        gbc.writeMem(0x8b63, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x939c);
        EXPECT(gbc.pc(), 0x8b64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b63), 0x10);
        // 10 0166
        gbc.setState(0xc40e, 0xff62, 0xd440, 0xf8d8, 0x6f69, 0xea04, 0x1, 0x0);
        gbc.writeMem(0xc40e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xff62);
        EXPECT(gbc.pc(), 0xc40f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc40e), 0x10);
        // 10 0167
        gbc.setState(0xb0d7, 0x71b2, 0x5fd0, 0xb0b3, 0x1c25, 0xf213, 0x1, 0x0);
        gbc.writeMem(0xb0d7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x71b2);
        EXPECT(gbc.pc(), 0xb0d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d7), 0x10);
        // 10 0168
        gbc.setState(0x6ab2, 0xc2e0, 0xf000, 0x441d, 0xa684, 0xdfee, 0x1, 0x0);
        gbc.writeMem(0x6ab2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc2e0);
        EXPECT(gbc.pc(), 0x6ab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0169
        gbc.setState(0xb9b2, 0x8b12, 0x37b0, 0x792d, 0x6795, 0xaca1, 0x0, 0x1);
        gbc.writeMem(0xb9b2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8b12);
        EXPECT(gbc.pc(), 0xb9b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9b2), 0x10);
        // 10 016A
        gbc.setState(0xa5f9, 0xd8a8, 0x77a0, 0xb92f, 0x4a6f, 0x436d, 0x0, 0x1);
        gbc.writeMem(0xa5f9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd8a8);
        EXPECT(gbc.pc(), 0xa5fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f9), 0x10);
        // 10 016B
        gbc.setState(0x9060, 0xef07, 0x4020, 0x6488, 0xf61b, 0x340e, 0x0, 0x1);
        gbc.writeMem(0x9060, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xef07);
        EXPECT(gbc.pc(), 0x9061);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9060), 0x10);
        // 10 016C
        gbc.setState(0x6496, 0x8c98, 0x8070, 0xe4f4, 0x3b72, 0x7ab9, 0x0, 0x0);
        gbc.writeMem(0x6496, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8c98);
        EXPECT(gbc.pc(), 0x6497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 016D
        gbc.setState(0x7cea, 0xe69f, 0x41c0, 0xc342, 0xe7c0, 0xcf7c, 0x1, 0x1);
        gbc.writeMem(0x7cea, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe69f);
        EXPECT(gbc.pc(), 0x7ceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 016E
        gbc.setState(0x212a, 0x21db, 0xb530, 0xc255, 0xedd6, 0xc66d, 0x1, 0x1);
        gbc.writeMem(0x212a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x21db);
        EXPECT(gbc.pc(), 0x212b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 016F
        gbc.setState(0x8694, 0xf1b6, 0x1220, 0xbe42, 0x4044, 0x26d0, 0x0, 0x1);
        gbc.writeMem(0x8694, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf1b6);
        EXPECT(gbc.pc(), 0x8695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8694), 0x10);
        // 10 0170
        gbc.setState(0x5a56, 0x8105, 0x95b0, 0x1c09, 0xaf11, 0x7449, 0x0, 0x1);
        gbc.writeMem(0x5a56, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8105);
        EXPECT(gbc.pc(), 0x5a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0171
        gbc.setState(0x6c94, 0xd178, 0xadf0, 0xcd4f, 0x9149, 0x5e25, 0x0, 0x0);
        gbc.writeMem(0x6c94, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd178);
        EXPECT(gbc.pc(), 0x6c95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0172
        gbc.setState(0x81a3, 0xe5ac, 0x84c0, 0x9ba5, 0xc82, 0xaea9, 0x1, 0x0);
        gbc.writeMem(0x81a3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe5ac);
        EXPECT(gbc.pc(), 0x81a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a3), 0x10);
        // 10 0173
        gbc.setState(0x66b8, 0x7fae, 0xbe50, 0xfeec, 0xe7c0, 0xd97a, 0x0, 0x0);
        gbc.writeMem(0x66b8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7fae);
        EXPECT(gbc.pc(), 0x66b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0174
        gbc.setState(0x7025, 0xe165, 0xd870, 0xacb4, 0xc529, 0x5f7d, 0x1, 0x0);
        gbc.writeMem(0x7025, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe165);
        EXPECT(gbc.pc(), 0x7026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0175
        gbc.setState(0xca6a, 0xa35a, 0x5cf0, 0xcc03, 0xec0a, 0xd9a, 0x1, 0x1);
        gbc.writeMem(0xca6a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa35a);
        EXPECT(gbc.pc(), 0xca6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca6a), 0x10);
        // 10 0176
        gbc.setState(0x5977, 0x70f8, 0xded0, 0x847, 0xf8b2, 0x2e37, 0x0, 0x1);
        gbc.writeMem(0x5977, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x70f8);
        EXPECT(gbc.pc(), 0x5978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0177
        gbc.setState(0x7a3f, 0xbcb, 0x9f10, 0xebc2, 0xbe80, 0xdf1, 0x1, 0x1);
        gbc.writeMem(0x7a3f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xbcb);
        EXPECT(gbc.pc(), 0x7a40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0178
        gbc.setState(0x4b6, 0xd904, 0x9990, 0x4260, 0xad08, 0xd87c, 0x0, 0x1);
        gbc.writeMem(0x4b6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd904);
        EXPECT(gbc.pc(), 0x4b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0179
        gbc.setState(0xe794, 0xec95, 0xb5e0, 0x5131, 0x31b9, 0xe88e, 0x0, 0x0);
        gbc.writeMem(0xe794, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xec95);
        EXPECT(gbc.pc(), 0xe795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe794), 0x10);
        // 10 017A
        gbc.setState(0x121f, 0xa821, 0xd8f0, 0x969, 0x7990, 0x340c, 0x0, 0x1);
        gbc.writeMem(0x121f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa821);
        EXPECT(gbc.pc(), 0x1220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 017B
        gbc.setState(0xba60, 0x81b9, 0xa320, 0xc3aa, 0xb288, 0x4e01, 0x1, 0x1);
        gbc.writeMem(0xba60, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x81b9);
        EXPECT(gbc.pc(), 0xba61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba60), 0x10);
        // 10 017C
        gbc.setState(0xd274, 0x4ef3, 0xae10, 0x397a, 0x8581, 0x916f, 0x0, 0x1);
        gbc.writeMem(0xd274, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4ef3);
        EXPECT(gbc.pc(), 0xd275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd274), 0x10);
        // 10 017D
        gbc.setState(0xb8e5, 0xa586, 0x6200, 0x477c, 0x2969, 0x8b73, 0x0, 0x0);
        gbc.writeMem(0xb8e5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa586);
        EXPECT(gbc.pc(), 0xb8e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8e5), 0x10);
        // 10 017E
        gbc.setState(0x830e, 0x6171, 0x4f10, 0x69c8, 0xc48f, 0x3b56, 0x1, 0x0);
        gbc.writeMem(0x830e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6171);
        EXPECT(gbc.pc(), 0x830f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x830e), 0x10);
        // 10 017F
        gbc.setState(0xd37b, 0x2e8b, 0x8500, 0xd5a3, 0x4294, 0xaf0f, 0x1, 0x0);
        gbc.writeMem(0xd37b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2e8b);
        EXPECT(gbc.pc(), 0xd37c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd37b), 0x10);
        // 10 0181
        gbc.setState(0xec09, 0x360, 0x3720, 0xc629, 0xb41, 0x572d, 0x1, 0x1);
        gbc.writeMem(0xec09, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x360);
        EXPECT(gbc.pc(), 0xec0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec09), 0x10);
        // 10 0182
        gbc.setState(0x66d6, 0x1144, 0xef30, 0xfe7b, 0xe02a, 0xff38, 0x1, 0x0);
        gbc.writeMem(0x66d6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1144);
        EXPECT(gbc.pc(), 0x66d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0183
        gbc.setState(0x82, 0x6fd5, 0x1f40, 0xbd79, 0x5dec, 0x9084, 0x0, 0x1);
        gbc.writeMem(0x82, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6fd5);
        EXPECT(gbc.pc(), 0x83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0184
        gbc.setState(0x761a, 0x29aa, 0xee0, 0x2a6b, 0xc55a, 0x799f, 0x0, 0x1);
        gbc.writeMem(0x761a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x29aa);
        EXPECT(gbc.pc(), 0x761b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0185
        gbc.setState(0x82f, 0xe05d, 0xaa80, 0x9170, 0x933e, 0xbf4b, 0x1, 0x0);
        gbc.writeMem(0x82f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe05d);
        EXPECT(gbc.pc(), 0x830);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0186
        gbc.setState(0x8a06, 0xc6ba, 0x16e0, 0xf265, 0x6f99, 0xc25c, 0x1, 0x1);
        gbc.writeMem(0x8a06, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc6ba);
        EXPECT(gbc.pc(), 0x8a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a06), 0x10);
        // 10 0187
        gbc.setState(0x5f78, 0x8065, 0x33d0, 0x6c64, 0xb6a8, 0x724d, 0x1, 0x1);
        gbc.writeMem(0x5f78, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8065);
        EXPECT(gbc.pc(), 0x5f79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0188
        gbc.setState(0xed2a, 0x2f21, 0xb390, 0xa533, 0x1bd3, 0x2a6c, 0x0, 0x1);
        gbc.writeMem(0xed2a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2f21);
        EXPECT(gbc.pc(), 0xed2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed2a), 0x10);
        // 10 0189
        gbc.setState(0xa32e, 0xb2a3, 0x52b0, 0x78a6, 0xb364, 0x556, 0x0, 0x0);
        gbc.writeMem(0xa32e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb2a3);
        EXPECT(gbc.pc(), 0xa32f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa32e), 0x10);
        // 10 018A
        gbc.setState(0x88f3, 0x9b56, 0x2890, 0x824b, 0x9293, 0x16a7, 0x1, 0x1);
        gbc.writeMem(0x88f3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9b56);
        EXPECT(gbc.pc(), 0x88f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88f3), 0x10);
        // 10 018B
        gbc.setState(0xaf3d, 0x2c2d, 0xba40, 0x577c, 0xc503, 0x3fa9, 0x1, 0x1);
        gbc.writeMem(0xaf3d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2c2d);
        EXPECT(gbc.pc(), 0xaf3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf3d), 0x10);
        // 10 018C
        gbc.setState(0x3906, 0x3a95, 0x79c0, 0x8d83, 0xa98f, 0xd729, 0x0, 0x0);
        gbc.writeMem(0x3906, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3a95);
        EXPECT(gbc.pc(), 0x3907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 018D
        gbc.setState(0x38cc, 0x2d11, 0xe360, 0xefba, 0x254f, 0x414b, 0x1, 0x0);
        gbc.writeMem(0x38cc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2d11);
        EXPECT(gbc.pc(), 0x38cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 018E
        gbc.setState(0xaa83, 0x7654, 0x2530, 0xd52f, 0xeb6a, 0x5909, 0x1, 0x1);
        gbc.writeMem(0xaa83, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7654);
        EXPECT(gbc.pc(), 0xaa84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa83), 0x10);
        // 10 018F
        gbc.setState(0xbd70, 0x394c, 0xe9d0, 0x7559, 0x6076, 0x688c, 0x1, 0x0);
        gbc.writeMem(0xbd70, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x394c);
        EXPECT(gbc.pc(), 0xbd71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd70), 0x10);
        // 10 0190
        gbc.setState(0x8756, 0x4d50, 0x6170, 0x7e53, 0x6b0c, 0x5131, 0x1, 0x1);
        gbc.writeMem(0x8756, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4d50);
        EXPECT(gbc.pc(), 0x8757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8756), 0x10);
        // 10 0191
        gbc.setState(0x37d, 0xc8e8, 0x54f0, 0xbd32, 0x4499, 0x6e22, 0x1, 0x1);
        gbc.writeMem(0x37d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc8e8);
        EXPECT(gbc.pc(), 0x37e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0192
        gbc.setState(0x402f, 0x918b, 0x6080, 0xbd11, 0x2075, 0xecc9, 0x1, 0x0);
        gbc.writeMem(0x402f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x918b);
        EXPECT(gbc.pc(), 0x4030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0193
        gbc.setState(0x3685, 0xc9ac, 0xa8f0, 0xb30a, 0x8954, 0xca76, 0x1, 0x0);
        gbc.writeMem(0x3685, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc9ac);
        EXPECT(gbc.pc(), 0x3686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0194
        gbc.setState(0x792a, 0x2017, 0xed50, 0xb9a0, 0x4df9, 0x4d16, 0x0, 0x0);
        gbc.writeMem(0x792a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2017);
        EXPECT(gbc.pc(), 0x792b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0195
        gbc.setState(0xeac5, 0x616b, 0x4b40, 0xb5c7, 0x2631, 0x4621, 0x1, 0x1);
        gbc.writeMem(0xeac5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x616b);
        EXPECT(gbc.pc(), 0xeac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeac5), 0x10);
        // 10 0196
        gbc.setState(0xa0fb, 0x9504, 0x6960, 0x1c1c, 0x1e38, 0x2a38, 0x1, 0x0);
        gbc.writeMem(0xa0fb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9504);
        EXPECT(gbc.pc(), 0xa0fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0fb), 0x10);
        // 10 0197
        gbc.setState(0x4859, 0xec7b, 0xe2d0, 0x3dc0, 0x8a07, 0x337f, 0x0, 0x1);
        gbc.writeMem(0x4859, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xec7b);
        EXPECT(gbc.pc(), 0x485a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0198
        gbc.setState(0x6bc4, 0x7ede, 0x87d0, 0xbad2, 0xf221, 0xb945, 0x0, 0x1);
        gbc.writeMem(0x6bc4, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7ede);
        EXPECT(gbc.pc(), 0x6bc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 019A
        gbc.setState(0xd034, 0x2855, 0x9bd0, 0xb473, 0x9381, 0xe895, 0x0, 0x0);
        gbc.writeMem(0xd034, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2855);
        EXPECT(gbc.pc(), 0xd035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd034), 0x10);
        // 10 019B
        gbc.setState(0xebb, 0xdb9, 0xd430, 0x5b62, 0x5865, 0xdd94, 0x1, 0x0);
        gbc.writeMem(0xebb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xdb9);
        EXPECT(gbc.pc(), 0xebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 019C
        gbc.setState(0xfee, 0x8562, 0x1c30, 0xaa5, 0xfeab, 0x9a59, 0x0, 0x1);
        gbc.writeMem(0xfee, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8562);
        EXPECT(gbc.pc(), 0xfef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 019D
        gbc.setState(0x4795, 0x71e0, 0x27a0, 0xf0f, 0x248f, 0xfe19, 0x0, 0x1);
        gbc.writeMem(0x4795, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x71e0);
        EXPECT(gbc.pc(), 0x4796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 019E
        gbc.setState(0x2c30, 0x44b6, 0xaee0, 0x56bd, 0xd7a9, 0x12ba, 0x0, 0x1);
        gbc.writeMem(0x2c30, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x44b6);
        EXPECT(gbc.pc(), 0x2c31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 019F
        gbc.setState(0xc13f, 0x845a, 0x7c50, 0x833b, 0xb661, 0x1a1e, 0x0, 0x1);
        gbc.writeMem(0xc13f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x845a);
        EXPECT(gbc.pc(), 0xc140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc13f), 0x10);
        // 10 01A0
        gbc.setState(0xd3cc, 0xb120, 0x6440, 0x57d8, 0x82f1, 0x97f6, 0x0, 0x0);
        gbc.writeMem(0xd3cc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb120);
        EXPECT(gbc.pc(), 0xd3cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3cc), 0x10);
        // 10 01A1
        gbc.setState(0xbf15, 0xfab4, 0x5570, 0x72eb, 0x5b91, 0x8baa, 0x0, 0x1);
        gbc.writeMem(0xbf15, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfab4);
        EXPECT(gbc.pc(), 0xbf16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf15), 0x10);
        // 10 01A2
        gbc.setState(0x36a3, 0x4e17, 0x96d0, 0x3c7f, 0x86ef, 0x2ebb, 0x0, 0x0);
        gbc.writeMem(0x36a3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4e17);
        EXPECT(gbc.pc(), 0x36a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 01A3
        gbc.setState(0x37e, 0xcacf, 0xac0, 0xbe85, 0x9e90, 0x8a44, 0x1, 0x0);
        gbc.writeMem(0x37e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xcacf);
        EXPECT(gbc.pc(), 0x37f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 01A4
        gbc.setState(0x84e0, 0xa90f, 0x5f50, 0xc990, 0x37b7, 0xda7c, 0x1, 0x0);
        gbc.writeMem(0x84e0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa90f);
        EXPECT(gbc.pc(), 0x84e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e0), 0x10);
        // 10 01A5
        gbc.setState(0x1859, 0x5ced, 0xaa30, 0xda06, 0x3763, 0x7bcb, 0x0, 0x0);
        gbc.writeMem(0x1859, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5ced);
        EXPECT(gbc.pc(), 0x185a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 01A6
        gbc.setState(0x56d6, 0x3761, 0x1ff0, 0xe32d, 0x5c85, 0x4b5f, 0x0, 0x1);
        gbc.writeMem(0x56d6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3761);
        EXPECT(gbc.pc(), 0x56d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 01A7
        gbc.setState(0x18c9, 0xd8ff, 0x8140, 0xff43, 0xccd0, 0xdae1, 0x0, 0x0);
        gbc.writeMem(0x18c9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd8ff);
        EXPECT(gbc.pc(), 0x18ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 01A8
        gbc.setState(0x6f28, 0x2324, 0x6270, 0xa7e1, 0x3ac1, 0x7f70, 0x0, 0x1);
        gbc.writeMem(0x6f28, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2324);
        EXPECT(gbc.pc(), 0x6f29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 01A9
        gbc.setState(0xb7cb, 0x4a9a, 0x30d0, 0x78fa, 0x9ad9, 0x76cc, 0x1, 0x1);
        gbc.writeMem(0xb7cb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4a9a);
        EXPECT(gbc.pc(), 0xb7cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7cb), 0x10);
        // 10 01AA
        gbc.setState(0x7d73, 0x772e, 0xa040, 0x19f5, 0x90e8, 0x3335, 0x1, 0x1);
        gbc.writeMem(0x7d73, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x772e);
        EXPECT(gbc.pc(), 0x7d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 01AB
        gbc.setState(0x7650, 0x9d38, 0xf700, 0xe5d9, 0x6478, 0x58e4, 0x0, 0x0);
        gbc.writeMem(0x7650, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9d38);
        EXPECT(gbc.pc(), 0x7651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 01AC
        gbc.setState(0xb90e, 0xb501, 0x1ce0, 0xbc3f, 0xb6fe, 0x255a, 0x1, 0x0);
        gbc.writeMem(0xb90e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb501);
        EXPECT(gbc.pc(), 0xb90f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb90e), 0x10);
        // 10 01AD
        gbc.setState(0xb1ce, 0x9998, 0x8910, 0x4f99, 0x94ba, 0x5e82, 0x1, 0x0);
        gbc.writeMem(0xb1ce, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9998);
        EXPECT(gbc.pc(), 0xb1cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ce), 0x10);
        // 10 01AE
        gbc.setState(0xb5e7, 0x6213, 0x3240, 0x4c84, 0x2e06, 0x66c4, 0x1, 0x0);
        gbc.writeMem(0xb5e7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6213);
        EXPECT(gbc.pc(), 0xb5e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5e7), 0x10);
        // 10 01AF
        gbc.setState(0x2a3d, 0xe369, 0x17c0, 0xbf8f, 0x4be8, 0xe84d, 0x0, 0x1);
        gbc.writeMem(0x2a3d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe369);
        EXPECT(gbc.pc(), 0x2a3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 01B0
        gbc.setState(0x71b3, 0xc409, 0xd6a0, 0xd180, 0x5e1d, 0x2f90, 0x1, 0x1);
        gbc.writeMem(0x71b3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc409);
        EXPECT(gbc.pc(), 0x71b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 01B1
        gbc.setState(0xda5e, 0xe3ae, 0x98b0, 0x2ad8, 0x917a, 0x227f, 0x0, 0x1);
        gbc.writeMem(0xda5e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe3ae);
        EXPECT(gbc.pc(), 0xda5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda5e), 0x10);
        // 10 01B2
        gbc.setState(0xed3, 0x5fc0, 0x8750, 0xbac4, 0x317a, 0x9102, 0x1, 0x1);
        gbc.writeMem(0xed3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5fc0);
        EXPECT(gbc.pc(), 0xed4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 01B3
        gbc.setState(0x1d88, 0xd6ee, 0x5af0, 0xcd79, 0x8942, 0x5d48, 0x1, 0x0);
        gbc.writeMem(0x1d88, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd6ee);
        EXPECT(gbc.pc(), 0x1d89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 01B4
        gbc.setState(0xa071, 0x632, 0xcab0, 0x927, 0xe9e5, 0xc976, 0x1, 0x0);
        gbc.writeMem(0xa071, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x632);
        EXPECT(gbc.pc(), 0xa072);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa071), 0x10);
        // 10 01B5
        gbc.setState(0x7e79, 0x3c2e, 0x3050, 0xea8, 0x1127, 0xfabd, 0x0, 0x1);
        gbc.writeMem(0x7e79, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3c2e);
        EXPECT(gbc.pc(), 0x7e7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 01B6
        gbc.setState(0xcf10, 0x5748, 0xa180, 0x5d59, 0x9cf2, 0x24a8, 0x1, 0x1);
        gbc.writeMem(0xcf10, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5748);
        EXPECT(gbc.pc(), 0xcf11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf10), 0x10);
        // 10 01B7
        gbc.setState(0x1912, 0xec83, 0xf100, 0xcdc2, 0x40f8, 0x592, 0x0, 0x1);
        gbc.writeMem(0x1912, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xec83);
        EXPECT(gbc.pc(), 0x1913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 01B8
        gbc.setState(0x9a3c, 0x3113, 0xfab0, 0xa423, 0x8c98, 0x9ca, 0x0, 0x0);
        gbc.writeMem(0x9a3c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3113);
        EXPECT(gbc.pc(), 0x9a3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a3c), 0x10);
        // 10 01B9
        gbc.setState(0x76ad, 0x5d0d, 0xac20, 0xe24, 0xab74, 0xa41, 0x1, 0x0);
        gbc.writeMem(0x76ad, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5d0d);
        EXPECT(gbc.pc(), 0x76ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 01BA
        gbc.setState(0x4940, 0x1019, 0x4680, 0xf6a4, 0xbf1, 0x9ee7, 0x0, 0x0);
        gbc.writeMem(0x4940, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1019);
        EXPECT(gbc.pc(), 0x4941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 01BB
        gbc.setState(0x668, 0x8dbb, 0x2e10, 0xe997, 0x4f13, 0xc9c1, 0x1, 0x1);
        gbc.writeMem(0x668, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8dbb);
        EXPECT(gbc.pc(), 0x669);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 01BD
        gbc.setState(0x2d31, 0xb081, 0xe410, 0x6225, 0xd3fd, 0x6a02, 0x0, 0x0);
        gbc.writeMem(0x2d31, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb081);
        EXPECT(gbc.pc(), 0x2d32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 01BF
        gbc.setState(0xe3b, 0x159e, 0x3670, 0xaf4a, 0xb91f, 0x4d20, 0x0, 0x1);
        gbc.writeMem(0xe3b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x159e);
        EXPECT(gbc.pc(), 0xe3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 01C0
        gbc.setState(0xbf48, 0xd20f, 0x62d0, 0x19e, 0xe395, 0xbdf5, 0x1, 0x0);
        gbc.writeMem(0xbf48, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd20f);
        EXPECT(gbc.pc(), 0xbf49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf48), 0x10);
        // 10 01C1
        gbc.setState(0x2ab7, 0x29e1, 0x5e60, 0xea60, 0xef8, 0xdf33, 0x0, 0x1);
        gbc.writeMem(0x2ab7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x29e1);
        EXPECT(gbc.pc(), 0x2ab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 01C2
        gbc.setState(0xb432, 0x4512, 0xb410, 0xe815, 0xc396, 0x56e9, 0x0, 0x1);
        gbc.writeMem(0xb432, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4512);
        EXPECT(gbc.pc(), 0xb433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb432), 0x10);
        // 10 01C3
        gbc.setState(0x2548, 0xa159, 0xf400, 0x9918, 0xa5d8, 0xf0c5, 0x1, 0x1);
        gbc.writeMem(0x2548, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa159);
        EXPECT(gbc.pc(), 0x2549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 01C4
        gbc.setState(0xeac7, 0xd5a0, 0x58e0, 0x9f3e, 0x9920, 0x3f66, 0x1, 0x1);
        gbc.writeMem(0xeac7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd5a0);
        EXPECT(gbc.pc(), 0xeac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeac7), 0x10);
        // 10 01C5
        gbc.setState(0x70a6, 0x3d0, 0x42e0, 0xdd65, 0xb580, 0xcbed, 0x0, 0x1);
        gbc.writeMem(0x70a6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3d0);
        EXPECT(gbc.pc(), 0x70a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 01C7
        gbc.setState(0xc1f, 0x1687, 0x6c70, 0x37c3, 0xd6fa, 0xa79f, 0x1, 0x1);
        gbc.writeMem(0xc1f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1687);
        EXPECT(gbc.pc(), 0xc20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 01C8
        gbc.setState(0x792c, 0x4ba8, 0x8920, 0x3e0e, 0xa7e3, 0xabb5, 0x0, 0x0);
        gbc.writeMem(0x792c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4ba8);
        EXPECT(gbc.pc(), 0x792d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 01C9
        gbc.setState(0x72af, 0xc1ef, 0xe380, 0xd916, 0xd2de, 0xf5b, 0x1, 0x1);
        gbc.writeMem(0x72af, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc1ef);
        EXPECT(gbc.pc(), 0x72b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 01CA
        gbc.setState(0xc5a, 0x8f2f, 0x9ef0, 0x66bd, 0x917f, 0x7db9, 0x1, 0x1);
        gbc.writeMem(0xc5a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8f2f);
        EXPECT(gbc.pc(), 0xc5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 01CB
        gbc.setState(0x1183, 0xc359, 0x6d30, 0xb203, 0xd0f2, 0x276c, 0x1, 0x1);
        gbc.writeMem(0x1183, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc359);
        EXPECT(gbc.pc(), 0x1184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 01CC
        gbc.setState(0x439a, 0xecd, 0x1a50, 0xd014, 0xfea8, 0x40af, 0x0, 0x1);
        gbc.writeMem(0x439a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xecd);
        EXPECT(gbc.pc(), 0x439b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 01CD
        gbc.setState(0x7860, 0x55a, 0xe440, 0xe249, 0xfb5e, 0xd923, 0x1, 0x1);
        gbc.writeMem(0x7860, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x55a);
        EXPECT(gbc.pc(), 0x7861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 01CE
        gbc.setState(0xbb19, 0x52e, 0x3350, 0xf9dc, 0xf609, 0x1b14, 0x0, 0x1);
        gbc.writeMem(0xbb19, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x52e);
        EXPECT(gbc.pc(), 0xbb1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb19), 0x10);
        // 10 01CF
        gbc.setState(0xabce, 0xbc8d, 0xbed0, 0x245c, 0xfbab, 0x10b2, 0x1, 0x1);
        gbc.writeMem(0xabce, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xbc8d);
        EXPECT(gbc.pc(), 0xabcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabce), 0x10);
        // 10 01D0
        gbc.setState(0x8c2c, 0xbb2d, 0x5850, 0xc221, 0x3b2b, 0x69b4, 0x0, 0x1);
        gbc.writeMem(0x8c2c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbb2d);
        EXPECT(gbc.pc(), 0x8c2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c2c), 0x10);
        // 10 01D1
        gbc.setState(0xa97c, 0x2bfe, 0x4430, 0xe45b, 0xdd7b, 0x61e0, 0x1, 0x1);
        gbc.writeMem(0xa97c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2bfe);
        EXPECT(gbc.pc(), 0xa97d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa97c), 0x10);
        // 10 01D2
        gbc.setState(0x886d, 0xca94, 0xf050, 0x1444, 0xd464, 0xb2d4, 0x1, 0x1);
        gbc.writeMem(0x886d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xca94);
        EXPECT(gbc.pc(), 0x886e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x886d), 0x10);
        // 10 01D3
        gbc.setState(0xb876, 0x3db5, 0xadc0, 0xd33d, 0xbbe4, 0x10ed, 0x0, 0x1);
        gbc.writeMem(0xb876, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3db5);
        EXPECT(gbc.pc(), 0xb877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb876), 0x10);
        // 10 01D4
        gbc.setState(0x6664, 0xe57a, 0x7040, 0x7ffb, 0x8e0a, 0x6d37, 0x1, 0x0);
        gbc.writeMem(0x6664, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe57a);
        EXPECT(gbc.pc(), 0x6665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 01D5
        gbc.setState(0x412f, 0x59ac, 0x5b30, 0x2c52, 0x75f1, 0xea3d, 0x0, 0x1);
        gbc.writeMem(0x412f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x59ac);
        EXPECT(gbc.pc(), 0x4130);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 01D6
        gbc.setState(0xb8c7, 0x3f05, 0x7140, 0x80d0, 0xc50a, 0x4cad, 0x0, 0x1);
        gbc.writeMem(0xb8c7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3f05);
        EXPECT(gbc.pc(), 0xb8c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c7), 0x10);
        // 10 01D7
        gbc.setState(0x4afe, 0x5634, 0x3720, 0xf12f, 0x9ff, 0x6e4, 0x1, 0x0);
        gbc.writeMem(0x4afe, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5634);
        EXPECT(gbc.pc(), 0x4aff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 01D8
        gbc.setState(0x6c7c, 0x4a19, 0xc170, 0xa230, 0x765d, 0xf35d, 0x0, 0x1);
        gbc.writeMem(0x6c7c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4a19);
        EXPECT(gbc.pc(), 0x6c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 01D9
        gbc.setState(0xeadf, 0x30eb, 0x68f0, 0x4ffa, 0xfa9d, 0xeda2, 0x0, 0x1);
        gbc.writeMem(0xeadf, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x30eb);
        EXPECT(gbc.pc(), 0xeae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeadf), 0x10);
        // 10 01DA
        gbc.setState(0x64c0, 0x1a21, 0x2c80, 0x83bc, 0x3591, 0x1a59, 0x0, 0x1);
        gbc.writeMem(0x64c0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1a21);
        EXPECT(gbc.pc(), 0x64c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 01DB
        gbc.setState(0x1d9c, 0x5840, 0x1770, 0x2b8c, 0x994b, 0xee6c, 0x1, 0x0);
        gbc.writeMem(0x1d9c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5840);
        EXPECT(gbc.pc(), 0x1d9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 01DC
        gbc.setState(0x1e60, 0xe3de, 0xa160, 0xe134, 0xd451, 0x2afd, 0x1, 0x0);
        gbc.writeMem(0x1e60, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe3de);
        EXPECT(gbc.pc(), 0x1e61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 01DD
        gbc.setState(0x28b0, 0x3d24, 0x9360, 0x554e, 0xc7d0, 0x2229, 0x1, 0x1);
        gbc.writeMem(0x28b0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3d24);
        EXPECT(gbc.pc(), 0x28b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 01DE
        gbc.setState(0x5c3f, 0xa3df, 0x5eb0, 0xcd8c, 0xbcf3, 0x4ec7, 0x0, 0x1);
        gbc.writeMem(0x5c3f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa3df);
        EXPECT(gbc.pc(), 0x5c40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 01E0
        gbc.setState(0x2703, 0x542d, 0xf2e0, 0x5b72, 0xae10, 0x28b1, 0x0, 0x1);
        gbc.writeMem(0x2703, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x542d);
        EXPECT(gbc.pc(), 0x2704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 01E1
        gbc.setState(0x89b, 0x60e2, 0x81d0, 0xd755, 0xc9e8, 0x451e, 0x0, 0x1);
        gbc.writeMem(0x89b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x60e2);
        EXPECT(gbc.pc(), 0x89c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 01E2
        gbc.setState(0x639d, 0xa4e6, 0xc920, 0x108f, 0x45cc, 0x6392, 0x0, 0x0);
        gbc.writeMem(0x639d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa4e6);
        EXPECT(gbc.pc(), 0x639e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 01E3
        gbc.setState(0xe1d6, 0x5dd9, 0x39d0, 0x6a2f, 0x6d66, 0x1a6c, 0x1, 0x0);
        gbc.writeMem(0xe1d6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5dd9);
        EXPECT(gbc.pc(), 0xe1d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1d6), 0x10);
        // 10 01E4
        gbc.setState(0x3cad, 0xc6e9, 0xa790, 0x878a, 0x9d31, 0x6a3e, 0x0, 0x0);
        gbc.writeMem(0x3cad, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc6e9);
        EXPECT(gbc.pc(), 0x3cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 01E5
        gbc.setState(0xd36e, 0xe5ae, 0xf590, 0xe396, 0x271d, 0x94dd, 0x1, 0x0);
        gbc.writeMem(0xd36e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe5ae);
        EXPECT(gbc.pc(), 0xd36f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd36e), 0x10);
        // 10 01E6
        gbc.setState(0xd4a6, 0x7b65, 0x32e0, 0x7781, 0x1c8d, 0x474, 0x1, 0x0);
        gbc.writeMem(0xd4a6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7b65);
        EXPECT(gbc.pc(), 0xd4a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a6), 0x10);
        // 10 01E7
        gbc.setState(0x455a, 0x63aa, 0x290, 0xa1d5, 0x18eb, 0x3757, 0x0, 0x0);
        gbc.writeMem(0x455a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x63aa);
        EXPECT(gbc.pc(), 0x455b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 01E8
        gbc.setState(0x671b, 0xcad0, 0x6470, 0x4ad, 0xe4d2, 0xf09a, 0x1, 0x0);
        gbc.writeMem(0x671b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xcad0);
        EXPECT(gbc.pc(), 0x671c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 01EA
        gbc.setState(0x8582, 0xda04, 0xb8b0, 0x3abf, 0xe168, 0x59b6, 0x1, 0x1);
        gbc.writeMem(0x8582, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xda04);
        EXPECT(gbc.pc(), 0x8583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8582), 0x10);
        // 10 01EB
        gbc.setState(0x8e29, 0x3942, 0x97c0, 0x7455, 0xf2a0, 0x4960, 0x1, 0x1);
        gbc.writeMem(0x8e29, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3942);
        EXPECT(gbc.pc(), 0x8e2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e29), 0x10);
        // 10 01EC
        gbc.setState(0xe1e1, 0x509d, 0xb130, 0x9b38, 0xa1c4, 0xb32b, 0x1, 0x0);
        gbc.writeMem(0xe1e1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x509d);
        EXPECT(gbc.pc(), 0xe1e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e1), 0x10);
        // 10 01ED
        gbc.setState(0x2aeb, 0x84c3, 0x720, 0x373e, 0x3ab8, 0x4ccd, 0x0, 0x0);
        gbc.writeMem(0x2aeb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x84c3);
        EXPECT(gbc.pc(), 0x2aec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 01EE
        gbc.setState(0xc1a9, 0x803f, 0x5c60, 0x26aa, 0xd08e, 0x1341, 0x1, 0x1);
        gbc.writeMem(0xc1a9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x803f);
        EXPECT(gbc.pc(), 0xc1aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1a9), 0x10);
        // 10 01EF
        gbc.setState(0x816a, 0x4433, 0x7ac0, 0x8443, 0x3665, 0xda34, 0x1, 0x1);
        gbc.writeMem(0x816a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4433);
        EXPECT(gbc.pc(), 0x816b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x816a), 0x10);
        // 10 01F0
        gbc.setState(0x78ec, 0x68e7, 0xdbc0, 0x515, 0xb70e, 0xc55a, 0x0, 0x1);
        gbc.writeMem(0x78ec, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x68e7);
        EXPECT(gbc.pc(), 0x78ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 01F1
        gbc.setState(0x84fb, 0xd032, 0x5c30, 0x87da, 0x8c3d, 0xa4d6, 0x0, 0x0);
        gbc.writeMem(0x84fb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd032);
        EXPECT(gbc.pc(), 0x84fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84fb), 0x10);
        // 10 01F2
        gbc.setState(0xed8e, 0xbfec, 0xbc50, 0x4a47, 0x156, 0x2bd4, 0x1, 0x1);
        gbc.writeMem(0xed8e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbfec);
        EXPECT(gbc.pc(), 0xed8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed8e), 0x10);
        // 10 01F3
        gbc.setState(0xaced, 0x6521, 0x8410, 0x595e, 0xf9e6, 0x4dca, 0x0, 0x1);
        gbc.writeMem(0xaced, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6521);
        EXPECT(gbc.pc(), 0xacee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaced), 0x10);
        // 10 01F4
        gbc.setState(0xcdc1, 0xb014, 0x7040, 0xdb24, 0x555a, 0x152a, 0x0, 0x0);
        gbc.writeMem(0xcdc1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb014);
        EXPECT(gbc.pc(), 0xcdc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdc1), 0x10);
        // 10 01F5
        gbc.setState(0x33d0, 0x1ec6, 0x9a00, 0xb8cc, 0xb4d2, 0x83d, 0x1, 0x0);
        gbc.writeMem(0x33d0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1ec6);
        EXPECT(gbc.pc(), 0x33d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 01F6
        gbc.setState(0xc75d, 0x56d6, 0x48e0, 0xedc3, 0xc62b, 0x6fce, 0x0, 0x0);
        gbc.writeMem(0xc75d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x56d6);
        EXPECT(gbc.pc(), 0xc75e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc75d), 0x10);
        // 10 01F7
        gbc.setState(0x7706, 0x7df7, 0xf2f0, 0x176, 0x4e2d, 0x10d, 0x0, 0x1);
        gbc.writeMem(0x7706, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7df7);
        EXPECT(gbc.pc(), 0x7707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 01F8
        gbc.setState(0xaa76, 0x43e2, 0xd400, 0xd44f, 0xb38d, 0xd554, 0x0, 0x0);
        gbc.writeMem(0xaa76, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x43e2);
        EXPECT(gbc.pc(), 0xaa77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa76), 0x10);
        // 10 01F9
        gbc.setState(0xda54, 0x8df7, 0xa190, 0x621c, 0xb3c9, 0x8e8, 0x0, 0x0);
        gbc.writeMem(0xda54, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8df7);
        EXPECT(gbc.pc(), 0xda55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda54), 0x10);
        // 10 01FA
        gbc.setState(0xb8f, 0x6f38, 0x14d0, 0xf306, 0xf130, 0xb9c5, 0x1, 0x0);
        gbc.writeMem(0xb8f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6f38);
        EXPECT(gbc.pc(), 0xb90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 01FB
        gbc.setState(0x2b65, 0x1838, 0x7b60, 0xb1e8, 0x6447, 0x53c8, 0x0, 0x1);
        gbc.writeMem(0x2b65, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1838);
        EXPECT(gbc.pc(), 0x2b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 01FC
        gbc.setState(0x3e63, 0xc356, 0x2460, 0x196d, 0x5f68, 0x5172, 0x1, 0x1);
        gbc.writeMem(0x3e63, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc356);
        EXPECT(gbc.pc(), 0x3e64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 01FD
        gbc.setState(0xa6d9, 0xaaba, 0x73f0, 0xbbed, 0xf589, 0x3da9, 0x1, 0x1);
        gbc.writeMem(0xa6d9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xaaba);
        EXPECT(gbc.pc(), 0xa6da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6d9), 0x10);
        // 10 01FE
        gbc.setState(0x4f0e, 0x7778, 0x6d90, 0x923b, 0xb181, 0x78b1, 0x1, 0x0);
        gbc.writeMem(0x4f0e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7778);
        EXPECT(gbc.pc(), 0x4f0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 01FF
        gbc.setState(0x85eb, 0xa425, 0x6430, 0x28e, 0xc82d, 0xc41b, 0x0, 0x1);
        gbc.writeMem(0x85eb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa425);
        EXPECT(gbc.pc(), 0x85ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85eb), 0x10);
        // 10 0200
        gbc.setState(0x4994, 0x3ff1, 0xc030, 0x8dfb, 0xed2e, 0x8512, 0x0, 0x0);
        gbc.writeMem(0x4994, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3ff1);
        EXPECT(gbc.pc(), 0x4995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0201
        gbc.setState(0x445e, 0xfdee, 0xda70, 0xb1bd, 0xdd5b, 0x8899, 0x0, 0x1);
        gbc.writeMem(0x445e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfdee);
        EXPECT(gbc.pc(), 0x445f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0202
        gbc.setState(0xebcd, 0x576d, 0x90a0, 0x8588, 0xa238, 0xff4e, 0x1, 0x1);
        gbc.writeMem(0xebcd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x576d);
        EXPECT(gbc.pc(), 0xebce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebcd), 0x10);
        // 10 0203
        gbc.setState(0x82d7, 0xb0f9, 0xd500, 0x6983, 0xd602, 0x963f, 0x1, 0x1);
        gbc.writeMem(0x82d7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb0f9);
        EXPECT(gbc.pc(), 0x82d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d7), 0x10);
        // 10 0204
        gbc.setState(0x746e, 0x5bdd, 0xe680, 0x7935, 0x5903, 0x10dd, 0x0, 0x1);
        gbc.writeMem(0x746e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5bdd);
        EXPECT(gbc.pc(), 0x746f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0205
        gbc.setState(0x4316, 0xf63a, 0xb3a0, 0x4ab5, 0x6899, 0x7a6d, 0x0, 0x1);
        gbc.writeMem(0x4316, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf63a);
        EXPECT(gbc.pc(), 0x4317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0207
        gbc.setState(0xef2c, 0x76a, 0xdfe0, 0xb8cf, 0x49bc, 0xc0b5, 0x1, 0x0);
        gbc.writeMem(0xef2c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x76a);
        EXPECT(gbc.pc(), 0xef2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef2c), 0x10);
        // 10 0208
        gbc.setState(0x88af, 0x5fc5, 0xcd40, 0xdc45, 0xcd5a, 0x8132, 0x1, 0x0);
        gbc.writeMem(0x88af, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5fc5);
        EXPECT(gbc.pc(), 0x88b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88af), 0x10);
        // 10 0209
        gbc.setState(0x90e5, 0x40da, 0x7170, 0x8169, 0x22c, 0x8b3d, 0x1, 0x0);
        gbc.writeMem(0x90e5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x40da);
        EXPECT(gbc.pc(), 0x90e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90e5), 0x10);
        // 10 020A
        gbc.setState(0x413a, 0xc6b1, 0xf5c0, 0x7d4a, 0xb96, 0x3f69, 0x1, 0x1);
        gbc.writeMem(0x413a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc6b1);
        EXPECT(gbc.pc(), 0x413b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 020B
        gbc.setState(0x9c98, 0x6327, 0x8bb0, 0x14e0, 0xf091, 0x57a3, 0x0, 0x0);
        gbc.writeMem(0x9c98, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6327);
        EXPECT(gbc.pc(), 0x9c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c98), 0x10);
        // 10 020C
        gbc.setState(0x4afd, 0x7034, 0x870, 0x44f9, 0x9d8, 0xddc, 0x0, 0x1);
        gbc.writeMem(0x4afd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7034);
        EXPECT(gbc.pc(), 0x4afe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 020D
        gbc.setState(0xc8e0, 0x990c, 0xe060, 0xc4fc, 0x64bc, 0xa2d6, 0x1, 0x0);
        gbc.writeMem(0xc8e0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x990c);
        EXPECT(gbc.pc(), 0xc8e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8e0), 0x10);
        // 10 020E
        gbc.setState(0x3c27, 0xe15d, 0xa6f0, 0x2c79, 0xbd36, 0x6570, 0x0, 0x1);
        gbc.writeMem(0x3c27, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe15d);
        EXPECT(gbc.pc(), 0x3c28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0210
        gbc.setState(0x6f29, 0xc237, 0xa0f0, 0x7e22, 0xc4d, 0xc1f3, 0x0, 0x0);
        gbc.writeMem(0x6f29, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc237);
        EXPECT(gbc.pc(), 0x6f2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0211
        gbc.setState(0xe177, 0xaa4a, 0x3de0, 0x706e, 0x3d9d, 0x20fa, 0x1, 0x1);
        gbc.writeMem(0xe177, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xaa4a);
        EXPECT(gbc.pc(), 0xe178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe177), 0x10);
        // 10 0212
        gbc.setState(0xaaf1, 0x6ae7, 0xa170, 0xc4f1, 0xe526, 0xf048, 0x0, 0x0);
        gbc.writeMem(0xaaf1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6ae7);
        EXPECT(gbc.pc(), 0xaaf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaf1), 0x10);
        // 10 0213
        gbc.setState(0x748, 0x2abf, 0x45a0, 0x64d5, 0x8f54, 0xe1c7, 0x0, 0x1);
        gbc.writeMem(0x748, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2abf);
        EXPECT(gbc.pc(), 0x749);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0214
        gbc.setState(0x2e66, 0xc020, 0xce30, 0x8f6f, 0xf902, 0x37e2, 0x0, 0x0);
        gbc.writeMem(0x2e66, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc020);
        EXPECT(gbc.pc(), 0x2e67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0215
        gbc.setState(0x836, 0xd54d, 0xea80, 0xaf7f, 0x3dd7, 0xf90d, 0x1, 0x1);
        gbc.writeMem(0x836, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd54d);
        EXPECT(gbc.pc(), 0x837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0216
        gbc.setState(0x865b, 0x296c, 0x2220, 0xc9b0, 0x5d7a, 0x9c58, 0x0, 0x0);
        gbc.writeMem(0x865b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x296c);
        EXPECT(gbc.pc(), 0x865c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x865b), 0x10);
        // 10 0217
        gbc.setState(0x6a1a, 0x31e7, 0x9890, 0x901d, 0xf06e, 0x74a4, 0x1, 0x0);
        gbc.writeMem(0x6a1a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x31e7);
        EXPECT(gbc.pc(), 0x6a1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0218
        gbc.setState(0xc0bc, 0xb724, 0xf150, 0x3888, 0x81d4, 0xedae, 0x0, 0x1);
        gbc.writeMem(0xc0bc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb724);
        EXPECT(gbc.pc(), 0xc0bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0bc), 0x10);
        // 10 0219
        gbc.setState(0xdee0, 0x36fd, 0xb580, 0xfb81, 0x2a40, 0xe828, 0x1, 0x1);
        gbc.writeMem(0xdee0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x36fd);
        EXPECT(gbc.pc(), 0xdee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee0), 0x10);
        // 10 021A
        gbc.setState(0x63c2, 0x1c2d, 0x6c70, 0x2b60, 0x3e58, 0x91a1, 0x0, 0x1);
        gbc.writeMem(0x63c2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1c2d);
        EXPECT(gbc.pc(), 0x63c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 021B
        gbc.setState(0x9657, 0xd3c8, 0x7580, 0xb623, 0x4651, 0xc03f, 0x0, 0x0);
        gbc.writeMem(0x9657, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd3c8);
        EXPECT(gbc.pc(), 0x9658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9657), 0x10);
        // 10 021C
        gbc.setState(0xe0c5, 0x9416, 0xc950, 0x83ea, 0x9db7, 0xfc54, 0x0, 0x1);
        gbc.writeMem(0xe0c5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9416);
        EXPECT(gbc.pc(), 0xe0c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c5), 0x10);
        // 10 021D
        gbc.setState(0x460f, 0xff41, 0x2f40, 0x9f7f, 0x8594, 0x3fd7, 0x1, 0x1);
        gbc.writeMem(0x460f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xff41);
        EXPECT(gbc.pc(), 0x4610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 021E
        gbc.setState(0xc1fb, 0x62fc, 0x3f90, 0xc658, 0xfb78, 0x3584, 0x1, 0x1);
        gbc.writeMem(0xc1fb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x62fc);
        EXPECT(gbc.pc(), 0xc1fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1fb), 0x10);
        // 10 021F
        gbc.setState(0x363b, 0x28bf, 0x76e0, 0x7fef, 0xf9a3, 0x5b35, 0x0, 0x1);
        gbc.writeMem(0x363b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x28bf);
        EXPECT(gbc.pc(), 0x363c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0220
        gbc.setState(0x51f9, 0x538f, 0xc670, 0x2472, 0xebd2, 0x4c94, 0x0, 0x0);
        gbc.writeMem(0x51f9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x538f);
        EXPECT(gbc.pc(), 0x51fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0221
        gbc.setState(0xb227, 0x27b0, 0xd5a0, 0x31c3, 0x35d4, 0xed48, 0x0, 0x0);
        gbc.writeMem(0xb227, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x27b0);
        EXPECT(gbc.pc(), 0xb228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb227), 0x10);
        // 10 0222
        gbc.setState(0x4133, 0xabfa, 0xfa20, 0x812f, 0x8f6c, 0x37d0, 0x0, 0x0);
        gbc.writeMem(0x4133, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xabfa);
        EXPECT(gbc.pc(), 0x4134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0223
        gbc.setState(0x508c, 0x91c8, 0xa160, 0xb32d, 0xfb93, 0x14c1, 0x1, 0x0);
        gbc.writeMem(0x508c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x91c8);
        EXPECT(gbc.pc(), 0x508d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0224
        gbc.setState(0x4f43, 0x2473, 0x5130, 0x54e0, 0xa82d, 0xba27, 0x1, 0x1);
        gbc.writeMem(0x4f43, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2473);
        EXPECT(gbc.pc(), 0x4f44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0225
        gbc.setState(0x8ec2, 0x7b4d, 0x7600, 0xb0c1, 0xcee7, 0x51fd, 0x0, 0x0);
        gbc.writeMem(0x8ec2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7b4d);
        EXPECT(gbc.pc(), 0x8ec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec2), 0x10);
        // 10 0226
        gbc.setState(0x56ed, 0xf3a5, 0xdcb0, 0x7acf, 0x64db, 0x67ab, 0x0, 0x1);
        gbc.writeMem(0x56ed, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf3a5);
        EXPECT(gbc.pc(), 0x56ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0227
        gbc.setState(0x7787, 0x801d, 0xa620, 0x5fd2, 0xfca6, 0x2e0b, 0x1, 0x0);
        gbc.writeMem(0x7787, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x801d);
        EXPECT(gbc.pc(), 0x7788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0229
        gbc.setState(0xa5b4, 0xe7ea, 0x48d0, 0xe4c4, 0x1b, 0xdaea, 0x1, 0x0);
        gbc.writeMem(0xa5b4, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe7ea);
        EXPECT(gbc.pc(), 0xa5b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5b4), 0x10);
        // 10 022B
        gbc.setState(0x331, 0xe42d, 0xb070, 0x9dc2, 0x459a, 0x7e60, 0x0, 0x0);
        gbc.writeMem(0x331, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe42d);
        EXPECT(gbc.pc(), 0x332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 022C
        gbc.setState(0x2476, 0xbcd1, 0x6a50, 0x5851, 0x1d4f, 0x6728, 0x0, 0x1);
        gbc.writeMem(0x2476, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbcd1);
        EXPECT(gbc.pc(), 0x2477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 022D
        gbc.setState(0x5fe3, 0xfac8, 0x9520, 0x7898, 0x1727, 0xe5de, 0x0, 0x0);
        gbc.writeMem(0x5fe3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfac8);
        EXPECT(gbc.pc(), 0x5fe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 022E
        gbc.setState(0xc6a1, 0xdff2, 0x51a0, 0xd65b, 0xb0c3, 0x2ccd, 0x1, 0x0);
        gbc.writeMem(0xc6a1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xdff2);
        EXPECT(gbc.pc(), 0xc6a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6a1), 0x10);
        // 10 022F
        gbc.setState(0xa371, 0x31da, 0x8920, 0x470b, 0x6529, 0x56a0, 0x0, 0x1);
        gbc.writeMem(0xa371, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x31da);
        EXPECT(gbc.pc(), 0xa372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa371), 0x10);
        // 10 0230
        gbc.setState(0x42a6, 0x6106, 0x8280, 0x5bd2, 0x4ff9, 0xa927, 0x1, 0x1);
        gbc.writeMem(0x42a6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6106);
        EXPECT(gbc.pc(), 0x42a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0231
        gbc.setState(0x4fd, 0xefb9, 0xa630, 0xbc27, 0xaf01, 0x5457, 0x0, 0x0);
        gbc.writeMem(0x4fd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xefb9);
        EXPECT(gbc.pc(), 0x4fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0232
        gbc.setState(0xa56d, 0xd201, 0xb7b0, 0xf34f, 0x3a54, 0x538e, 0x0, 0x0);
        gbc.writeMem(0xa56d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd201);
        EXPECT(gbc.pc(), 0xa56e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa56d), 0x10);
        // 10 0233
        gbc.setState(0x1c77, 0xdeb9, 0x26a0, 0x24c, 0xba2d, 0x6bbd, 0x1, 0x1);
        gbc.writeMem(0x1c77, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xdeb9);
        EXPECT(gbc.pc(), 0x1c78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0234
        gbc.setState(0x5dfb, 0xd93, 0x4f50, 0xd084, 0x3d54, 0xb718, 0x1, 0x1);
        gbc.writeMem(0x5dfb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd93);
        EXPECT(gbc.pc(), 0x5dfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0235
        gbc.setState(0xe831, 0x4cca, 0xc5a0, 0x8799, 0xb278, 0xf045, 0x0, 0x1);
        gbc.writeMem(0xe831, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4cca);
        EXPECT(gbc.pc(), 0xe832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe831), 0x10);
        // 10 0236
        gbc.setState(0xbaa2, 0x2753, 0x77d0, 0xc7ee, 0x8b49, 0xf378, 0x1, 0x0);
        gbc.writeMem(0xbaa2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2753);
        EXPECT(gbc.pc(), 0xbaa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaa2), 0x10);
        // 10 0237
        gbc.setState(0x51df, 0xfb72, 0x9f90, 0x147e, 0xba12, 0x18ef, 0x1, 0x1);
        gbc.writeMem(0x51df, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xfb72);
        EXPECT(gbc.pc(), 0x51e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0238
        gbc.setState(0x4350, 0x7413, 0x8bc0, 0x4399, 0x5e73, 0x582d, 0x0, 0x0);
        gbc.writeMem(0x4350, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7413);
        EXPECT(gbc.pc(), 0x4351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0239
        gbc.setState(0xde86, 0xf7c9, 0x5860, 0x1bf1, 0x6d01, 0x1d9c, 0x1, 0x0);
        gbc.writeMem(0xde86, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf7c9);
        EXPECT(gbc.pc(), 0xde87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde86), 0x10);
        // 10 023A
        gbc.setState(0x500, 0x636f, 0x9d60, 0x75fb, 0xcde, 0xf8d5, 0x1, 0x1);
        gbc.writeMem(0x500, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x636f);
        EXPECT(gbc.pc(), 0x501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 023B
        gbc.setState(0xb45e, 0xcef, 0xd230, 0xbd66, 0x71d, 0xd1cd, 0x0, 0x1);
        gbc.writeMem(0xb45e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xcef);
        EXPECT(gbc.pc(), 0xb45f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45e), 0x10);
        // 10 023C
        gbc.setState(0xa2e3, 0x1849, 0x8160, 0xa039, 0x2651, 0x4136, 0x0, 0x1);
        gbc.writeMem(0xa2e3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1849);
        EXPECT(gbc.pc(), 0xa2e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2e3), 0x10);
        // 10 023D
        gbc.setState(0xddf8, 0xe1e0, 0x4f0, 0xb23, 0x1d3b, 0x4e9d, 0x0, 0x1);
        gbc.writeMem(0xddf8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe1e0);
        EXPECT(gbc.pc(), 0xddf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddf8), 0x10);
        // 10 023E
        gbc.setState(0xe498, 0x74d7, 0xbe80, 0xda2b, 0xf30e, 0x677, 0x1, 0x1);
        gbc.writeMem(0xe498, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x74d7);
        EXPECT(gbc.pc(), 0xe499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe498), 0x10);
        // 10 023F
        gbc.setState(0xb54d, 0xfb09, 0xccf0, 0xc517, 0x48cf, 0xcd7c, 0x1, 0x1);
        gbc.writeMem(0xb54d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xfb09);
        EXPECT(gbc.pc(), 0xb54e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb54d), 0x10);
        // 10 0241
        gbc.setState(0x7c98, 0x951e, 0xc800, 0x7187, 0x97e5, 0x3eb5, 0x0, 0x1);
        gbc.writeMem(0x7c98, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x951e);
        EXPECT(gbc.pc(), 0x7c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0242
        gbc.setState(0xbb8b, 0x21b1, 0x89a0, 0x1f62, 0x4fdb, 0xd5cb, 0x1, 0x1);
        gbc.writeMem(0xbb8b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x21b1);
        EXPECT(gbc.pc(), 0xbb8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb8b), 0x10);
        // 10 0243
        gbc.setState(0x5479, 0x351e, 0x86f0, 0x9a32, 0x592c, 0x9bb0, 0x1, 0x0);
        gbc.writeMem(0x5479, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x351e);
        EXPECT(gbc.pc(), 0x547a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0244
        gbc.setState(0xd907, 0x9ac3, 0xa950, 0xf012, 0xf8ed, 0xd127, 0x1, 0x1);
        gbc.writeMem(0xd907, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9ac3);
        EXPECT(gbc.pc(), 0xd908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd907), 0x10);
        // 10 0245
        gbc.setState(0xbba9, 0xe1ee, 0x2ff0, 0x3b8f, 0x38a6, 0xff5, 0x0, 0x0);
        gbc.writeMem(0xbba9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe1ee);
        EXPECT(gbc.pc(), 0xbbaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbba9), 0x10);
        // 10 0246
        gbc.setState(0xc700, 0x58fd, 0xbe90, 0x8212, 0x93af, 0xb292, 0x1, 0x0);
        gbc.writeMem(0xc700, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x58fd);
        EXPECT(gbc.pc(), 0xc701);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc700), 0x10);
        // 10 0247
        gbc.setState(0x786d, 0x8863, 0xa6f0, 0x51e3, 0x3bab, 0xec30, 0x0, 0x1);
        gbc.writeMem(0x786d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8863);
        EXPECT(gbc.pc(), 0x786e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0248
        gbc.setState(0x5a57, 0x8fc1, 0x4180, 0xec8d, 0x567a, 0xfa31, 0x0, 0x0);
        gbc.writeMem(0x5a57, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8fc1);
        EXPECT(gbc.pc(), 0x5a58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0249
        gbc.setState(0x5d77, 0x652b, 0x7600, 0xd3bc, 0x51a6, 0xc589, 0x0, 0x0);
        gbc.writeMem(0x5d77, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x652b);
        EXPECT(gbc.pc(), 0x5d78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 024A
        gbc.setState(0xa7d5, 0xb9ac, 0x68b0, 0xadb1, 0x7212, 0x8f5b, 0x0, 0x0);
        gbc.writeMem(0xa7d5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb9ac);
        EXPECT(gbc.pc(), 0xa7d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d5), 0x10);
        // 10 024B
        gbc.setState(0xbdcc, 0x8283, 0x73e0, 0xcac9, 0xfcdd, 0xb5, 0x1, 0x0);
        gbc.writeMem(0xbdcc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8283);
        EXPECT(gbc.pc(), 0xbdcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdcc), 0x10);
        // 10 024C
        gbc.setState(0xd550, 0xf57f, 0x4fd0, 0x99c9, 0x4c3f, 0xe497, 0x1, 0x0);
        gbc.writeMem(0xd550, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf57f);
        EXPECT(gbc.pc(), 0xd551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd550), 0x10);
        // 10 024D
        gbc.setState(0xa0cc, 0x984f, 0x8320, 0xefc0, 0x49d4, 0x6b88, 0x1, 0x1);
        gbc.writeMem(0xa0cc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x984f);
        EXPECT(gbc.pc(), 0xa0cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0cc), 0x10);
        // 10 024E
        gbc.setState(0x3204, 0x44c6, 0x6710, 0xf8af, 0x93e7, 0x6d32, 0x0, 0x0);
        gbc.writeMem(0x3204, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x44c6);
        EXPECT(gbc.pc(), 0x3205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 024F
        gbc.setState(0x6e9f, 0xc704, 0x5d90, 0xddec, 0xe213, 0xd394, 0x1, 0x0);
        gbc.writeMem(0x6e9f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc704);
        EXPECT(gbc.pc(), 0x6ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0250
        gbc.setState(0x4f8e, 0xe2f0, 0x2620, 0x1541, 0x1d5d, 0x563a, 0x0, 0x0);
        gbc.writeMem(0x4f8e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe2f0);
        EXPECT(gbc.pc(), 0x4f8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0252
        gbc.setState(0x106b, 0xf13c, 0x99f0, 0xfaaa, 0x84af, 0xe85e, 0x0, 0x1);
        gbc.writeMem(0x106b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf13c);
        EXPECT(gbc.pc(), 0x106c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0253
        gbc.setState(0x4f30, 0x59c9, 0x3b70, 0x262c, 0x7724, 0xf710, 0x0, 0x1);
        gbc.writeMem(0x4f30, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x59c9);
        EXPECT(gbc.pc(), 0x4f31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0254
        gbc.setState(0x3099, 0x46de, 0x3340, 0xea39, 0xeed7, 0xe3a4, 0x0, 0x1);
        gbc.writeMem(0x3099, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x46de);
        EXPECT(gbc.pc(), 0x309a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0255
        gbc.setState(0xc724, 0xd5bb, 0x8270, 0x2ac1, 0x18f0, 0xc588, 0x0, 0x0);
        gbc.writeMem(0xc724, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd5bb);
        EXPECT(gbc.pc(), 0xc725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc724), 0x10);
        // 10 0256
        gbc.setState(0x8613, 0x96a, 0xcf90, 0xd4de, 0x70cf, 0x12da, 0x1, 0x1);
        gbc.writeMem(0x8613, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x96a);
        EXPECT(gbc.pc(), 0x8614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8613), 0x10);
        // 10 0257
        gbc.setState(0x519f, 0xbcbc, 0x2600, 0xf8d3, 0x80ec, 0x855e, 0x0, 0x1);
        gbc.writeMem(0x519f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbcbc);
        EXPECT(gbc.pc(), 0x51a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0258
        gbc.setState(0x2219, 0x859f, 0x4dd0, 0x7314, 0xfee1, 0x5298, 0x1, 0x0);
        gbc.writeMem(0x2219, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x859f);
        EXPECT(gbc.pc(), 0x221a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0259
        gbc.setState(0xe397, 0x9759, 0xec00, 0xb2fe, 0x295, 0x70, 0x0, 0x0);
        gbc.writeMem(0xe397, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9759);
        EXPECT(gbc.pc(), 0xe398);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe397), 0x10);
        // 10 025A
        gbc.setState(0x45fd, 0xae91, 0x79b0, 0xa51a, 0x7ba0, 0x820e, 0x1, 0x0);
        gbc.writeMem(0x45fd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xae91);
        EXPECT(gbc.pc(), 0x45fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 025B
        gbc.setState(0xda3b, 0xcf14, 0x65b0, 0x5f7e, 0x517f, 0x67bf, 0x0, 0x1);
        gbc.writeMem(0xda3b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xcf14);
        EXPECT(gbc.pc(), 0xda3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda3b), 0x10);
        // 10 025C
        gbc.setState(0x321d, 0xf70e, 0xcae0, 0xe85b, 0xc16, 0x35f1, 0x0, 0x0);
        gbc.writeMem(0x321d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf70e);
        EXPECT(gbc.pc(), 0x321e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 025D
        gbc.setState(0x5cbd, 0x304a, 0x7b10, 0x7364, 0x401c, 0x3883, 0x0, 0x1);
        gbc.writeMem(0x5cbd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x304a);
        EXPECT(gbc.pc(), 0x5cbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 025E
        gbc.setState(0x945d, 0xcd02, 0xc7b0, 0x65a1, 0x4f55, 0xa67, 0x0, 0x1);
        gbc.writeMem(0x945d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xcd02);
        EXPECT(gbc.pc(), 0x945e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945d), 0x10);
        // 10 025F
        gbc.setState(0x417f, 0xc432, 0xa500, 0xdc7, 0x1055, 0x13ba, 0x0, 0x0);
        gbc.writeMem(0x417f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc432);
        EXPECT(gbc.pc(), 0x4180);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0260
        gbc.setState(0xdf74, 0x315c, 0x8ea0, 0xa03d, 0x58b7, 0xb85f, 0x0, 0x0);
        gbc.writeMem(0xdf74, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x315c);
        EXPECT(gbc.pc(), 0xdf75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf74), 0x10);
        // 10 0261
        gbc.setState(0x784c, 0xf057, 0x3b0, 0x3529, 0xc62a, 0xe5b0, 0x0, 0x0);
        gbc.writeMem(0x784c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf057);
        EXPECT(gbc.pc(), 0x784d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0262
        gbc.setState(0x4c4f, 0xd54d, 0x3a50, 0xd2b0, 0x635d, 0x334d, 0x0, 0x0);
        gbc.writeMem(0x4c4f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd54d);
        EXPECT(gbc.pc(), 0x4c50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0263
        gbc.setState(0xa23c, 0x85ec, 0xeac0, 0x13fd, 0xaae2, 0x5e0e, 0x0, 0x1);
        gbc.writeMem(0xa23c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x85ec);
        EXPECT(gbc.pc(), 0xa23d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa23c), 0x10);
        // 10 0264
        gbc.setState(0x6bd6, 0xeedf, 0x4e20, 0xdfa8, 0xa311, 0x1292, 0x0, 0x1);
        gbc.writeMem(0x6bd6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xeedf);
        EXPECT(gbc.pc(), 0x6bd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0265
        gbc.setState(0x44b4, 0x4e65, 0xfe20, 0x4240, 0x1971, 0x60fc, 0x1, 0x1);
        gbc.writeMem(0x44b4, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4e65);
        EXPECT(gbc.pc(), 0x44b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0266
        gbc.setState(0x6ea2, 0x1223, 0xfcb0, 0x51b0, 0x62d8, 0xc5be, 0x1, 0x0);
        gbc.writeMem(0x6ea2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1223);
        EXPECT(gbc.pc(), 0x6ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0267
        gbc.setState(0xe500, 0xccc6, 0xacc0, 0xa9, 0x5935, 0x42c9, 0x0, 0x1);
        gbc.writeMem(0xe500, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xccc6);
        EXPECT(gbc.pc(), 0xe501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe500), 0x10);
        // 10 0268
        gbc.setState(0x9345, 0x89fb, 0xb0d0, 0xd2df, 0xeda4, 0xbb56, 0x0, 0x1);
        gbc.writeMem(0x9345, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x89fb);
        EXPECT(gbc.pc(), 0x9346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9345), 0x10);
        // 10 0269
        gbc.setState(0x8a6d, 0x5054, 0x85e0, 0x3a62, 0xaa00, 0xa7d2, 0x1, 0x0);
        gbc.writeMem(0x8a6d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5054);
        EXPECT(gbc.pc(), 0x8a6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a6d), 0x10);
        // 10 026A
        gbc.setState(0xb9af, 0x6dd0, 0x7bd0, 0x7ecb, 0x1a3, 0xc9f7, 0x0, 0x1);
        gbc.writeMem(0xb9af, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6dd0);
        EXPECT(gbc.pc(), 0xb9b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9af), 0x10);
        // 10 026B
        gbc.setState(0x33ea, 0x3ad0, 0xabb0, 0xa95f, 0x41b9, 0x6db6, 0x0, 0x1);
        gbc.writeMem(0x33ea, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3ad0);
        EXPECT(gbc.pc(), 0x33eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 026C
        gbc.setState(0x1e62, 0x95bb, 0x6750, 0xfeec, 0x97a, 0xf62f, 0x1, 0x1);
        gbc.writeMem(0x1e62, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x95bb);
        EXPECT(gbc.pc(), 0x1e63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 026D
        gbc.setState(0xa090, 0x7b23, 0xa020, 0xc625, 0xa901, 0xfe94, 0x1, 0x1);
        gbc.writeMem(0xa090, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7b23);
        EXPECT(gbc.pc(), 0xa091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa090), 0x10);
        // 10 026E
        gbc.setState(0x3e32, 0x8663, 0xae70, 0xa295, 0x119d, 0x51f9, 0x0, 0x1);
        gbc.writeMem(0x3e32, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8663);
        EXPECT(gbc.pc(), 0x3e33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 026F
        gbc.setState(0x6cb, 0x2d3d, 0x69c0, 0x90d1, 0xa1fd, 0x2685, 0x1, 0x1);
        gbc.writeMem(0x6cb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2d3d);
        EXPECT(gbc.pc(), 0x6cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0270
        gbc.setState(0x1c6b, 0xcc4, 0x9160, 0xcdc0, 0xaff1, 0xccbd, 0x1, 0x1);
        gbc.writeMem(0x1c6b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xcc4);
        EXPECT(gbc.pc(), 0x1c6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0272
        gbc.setState(0xc2de, 0x95da, 0x1690, 0x20b6, 0x18d0, 0x91c0, 0x0, 0x0);
        gbc.writeMem(0xc2de, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x95da);
        EXPECT(gbc.pc(), 0xc2df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2de), 0x10);
        // 10 0275
        gbc.setState(0xdb2f, 0x6327, 0x6e80, 0xba8e, 0x61ec, 0x7a9d, 0x0, 0x1);
        gbc.writeMem(0xdb2f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6327);
        EXPECT(gbc.pc(), 0xdb30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb2f), 0x10);
        // 10 0276
        gbc.setState(0x88bd, 0x4b31, 0xcd40, 0x9dd1, 0x40b, 0xa6a9, 0x0, 0x0);
        gbc.writeMem(0x88bd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4b31);
        EXPECT(gbc.pc(), 0x88be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88bd), 0x10);
        // 10 0278
        gbc.setState(0x5dfe, 0x8241, 0xb180, 0x9cc6, 0xe36c, 0x824c, 0x1, 0x1);
        gbc.writeMem(0x5dfe, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8241);
        EXPECT(gbc.pc(), 0x5dff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 027A
        gbc.setState(0x92c3, 0x6b58, 0xe250, 0x96b3, 0x430d, 0x880c, 0x0, 0x1);
        gbc.writeMem(0x92c3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x6b58);
        EXPECT(gbc.pc(), 0x92c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c3), 0x10);
        // 10 027B
        gbc.setState(0x76d3, 0xbf44, 0xf5e0, 0xe53b, 0xba7d, 0x877f, 0x1, 0x1);
        gbc.writeMem(0x76d3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbf44);
        EXPECT(gbc.pc(), 0x76d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 027C
        gbc.setState(0x2143, 0x4d3a, 0x2400, 0x5a76, 0x884, 0x98fa, 0x0, 0x0);
        gbc.writeMem(0x2143, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4d3a);
        EXPECT(gbc.pc(), 0x2144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 027D
        gbc.setState(0x347a, 0xccd3, 0x8e20, 0xcaf6, 0xef9e, 0x29f6, 0x1, 0x0);
        gbc.writeMem(0x347a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xccd3);
        EXPECT(gbc.pc(), 0x347b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 027F
        gbc.setState(0xc961, 0x71d6, 0x1770, 0xf636, 0xd762, 0x419d, 0x1, 0x1);
        gbc.writeMem(0xc961, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x71d6);
        EXPECT(gbc.pc(), 0xc962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc961), 0x10);
        // 10 0280
        gbc.setState(0x4c5b, 0xb5b8, 0x8360, 0x78b6, 0x545c, 0x97a3, 0x0, 0x1);
        gbc.writeMem(0x4c5b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb5b8);
        EXPECT(gbc.pc(), 0x4c5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0281
        gbc.setState(0xcbfc, 0x537e, 0x2960, 0x1c98, 0xac71, 0x8a87, 0x1, 0x1);
        gbc.writeMem(0xcbfc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x537e);
        EXPECT(gbc.pc(), 0xcbfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbfc), 0x10);
        // 10 0282
        gbc.setState(0x9564, 0x9dec, 0xb670, 0xde06, 0x4eec, 0xfd00, 0x0, 0x1);
        gbc.writeMem(0x9564, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9dec);
        EXPECT(gbc.pc(), 0x9565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9564), 0x10);
        // 10 0284
        gbc.setState(0xb663, 0x5da3, 0xfce0, 0xffe7, 0xc652, 0xf2b4, 0x0, 0x1);
        gbc.writeMem(0xb663, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5da3);
        EXPECT(gbc.pc(), 0xb664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb663), 0x10);
        // 10 0285
        gbc.setState(0x84b0, 0xf70a, 0x57f0, 0xfb1e, 0xc38f, 0xa9fe, 0x0, 0x1);
        gbc.writeMem(0x84b0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf70a);
        EXPECT(gbc.pc(), 0x84b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b0), 0x10);
        // 10 0286
        gbc.setState(0xcb1a, 0xfa66, 0xbd50, 0x354f, 0x4546, 0xac29, 0x1, 0x0);
        gbc.writeMem(0xcb1a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xfa66);
        EXPECT(gbc.pc(), 0xcb1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb1a), 0x10);
        // 10 0287
        gbc.setState(0x27b3, 0xd262, 0xe9d0, 0x6a4c, 0x6dc8, 0x1ed2, 0x1, 0x1);
        gbc.writeMem(0x27b3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd262);
        EXPECT(gbc.pc(), 0x27b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0288
        gbc.setState(0x29be, 0x2025, 0x65c0, 0x3719, 0x4cf0, 0xf02e, 0x1, 0x0);
        gbc.writeMem(0x29be, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2025);
        EXPECT(gbc.pc(), 0x29bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0289
        gbc.setState(0xbb8e, 0x469e, 0x6cf0, 0xdb78, 0x31f6, 0xc203, 0x1, 0x1);
        gbc.writeMem(0xbb8e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x469e);
        EXPECT(gbc.pc(), 0xbb8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb8e), 0x10);
        // 10 028A
        gbc.setState(0xcf14, 0x6945, 0xa220, 0x14, 0x61fc, 0x7b33, 0x0, 0x0);
        gbc.writeMem(0xcf14, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6945);
        EXPECT(gbc.pc(), 0xcf15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf14), 0x10);
        // 10 028B
        gbc.setState(0xc692, 0x3189, 0x99d0, 0x6df3, 0x3ebf, 0x7e50, 0x0, 0x0);
        gbc.writeMem(0xc692, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3189);
        EXPECT(gbc.pc(), 0xc693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc692), 0x10);
        // 10 028C
        gbc.setState(0x9cd5, 0xe844, 0x8bd0, 0x36d2, 0xef22, 0x5d6a, 0x1, 0x1);
        gbc.writeMem(0x9cd5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe844);
        EXPECT(gbc.pc(), 0x9cd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cd5), 0x10);
        // 10 028D
        gbc.setState(0xc6b, 0xd319, 0xb820, 0xaee5, 0x9dfc, 0x901b, 0x0, 0x0);
        gbc.writeMem(0xc6b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd319);
        EXPECT(gbc.pc(), 0xc6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 028E
        gbc.setState(0x6e66, 0x159, 0x78a0, 0x731c, 0xced3, 0x7782, 0x1, 0x0);
        gbc.writeMem(0x6e66, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x159);
        EXPECT(gbc.pc(), 0x6e67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 028F
        gbc.setState(0x3b21, 0xd864, 0xc700, 0x531c, 0xd865, 0xba0d, 0x1, 0x1);
        gbc.writeMem(0x3b21, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd864);
        EXPECT(gbc.pc(), 0x3b22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0290
        gbc.setState(0x31a2, 0x6a59, 0x1930, 0xeeae, 0x9357, 0xcb36, 0x0, 0x1);
        gbc.writeMem(0x31a2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6a59);
        EXPECT(gbc.pc(), 0x31a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0291
        gbc.setState(0x9057, 0x58f9, 0xb230, 0x16d9, 0xdc40, 0xea55, 0x1, 0x0);
        gbc.writeMem(0x9057, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x58f9);
        EXPECT(gbc.pc(), 0x9058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9057), 0x10);
        // 10 0292
        gbc.setState(0xc92b, 0xb21f, 0x1900, 0x1d5d, 0x835b, 0xa358, 0x0, 0x1);
        gbc.writeMem(0xc92b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb21f);
        EXPECT(gbc.pc(), 0xc92c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc92b), 0x10);
        // 10 0293
        gbc.setState(0x66ae, 0x429a, 0xafd0, 0xdcd5, 0xac17, 0xfb2, 0x0, 0x1);
        gbc.writeMem(0x66ae, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x429a);
        EXPECT(gbc.pc(), 0x66af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0294
        gbc.setState(0x86, 0x43f1, 0xba80, 0xffd8, 0xdbe5, 0xbfdc, 0x0, 0x1);
        gbc.writeMem(0x86, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x43f1);
        EXPECT(gbc.pc(), 0x87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0295
        gbc.setState(0xb871, 0x2b17, 0x30d0, 0x9a58, 0x2565, 0x328, 0x1, 0x0);
        gbc.writeMem(0xb871, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2b17);
        EXPECT(gbc.pc(), 0xb872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb871), 0x10);
        // 10 0296
        gbc.setState(0x6e2d, 0xa620, 0x8f80, 0x1cde, 0xc814, 0x8a6e, 0x1, 0x0);
        gbc.writeMem(0x6e2d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa620);
        EXPECT(gbc.pc(), 0x6e2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0297
        gbc.setState(0x2d53, 0x21d6, 0x1c10, 0x396a, 0x537c, 0x3692, 0x1, 0x0);
        gbc.writeMem(0x2d53, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x21d6);
        EXPECT(gbc.pc(), 0x2d54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0298
        gbc.setState(0x3860, 0x3c02, 0x50d0, 0xfef6, 0x2792, 0x9db7, 0x0, 0x0);
        gbc.writeMem(0x3860, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3c02);
        EXPECT(gbc.pc(), 0x3861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0299
        gbc.setState(0xc84c, 0x5a99, 0x82b0, 0x1ac7, 0xa073, 0x7eda, 0x0, 0x1);
        gbc.writeMem(0xc84c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5a99);
        EXPECT(gbc.pc(), 0xc84d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc84c), 0x10);
        // 10 029A
        gbc.setState(0xab81, 0x3006, 0x4d30, 0xeda4, 0x1bf1, 0xcb67, 0x1, 0x0);
        gbc.writeMem(0xab81, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3006);
        EXPECT(gbc.pc(), 0xab82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab81), 0x10);
        // 10 029B
        gbc.setState(0xddb5, 0xdae6, 0x2f70, 0x7381, 0x3648, 0x3aef, 0x1, 0x0);
        gbc.writeMem(0xddb5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xdae6);
        EXPECT(gbc.pc(), 0xddb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddb5), 0x10);
        // 10 029C
        gbc.setState(0x5cf6, 0x6213, 0x2680, 0x4dd8, 0x45b9, 0x690e, 0x1, 0x0);
        gbc.writeMem(0x5cf6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6213);
        EXPECT(gbc.pc(), 0x5cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 029D
        gbc.setState(0x3c8b, 0xf8cb, 0xfa30, 0x1ae0, 0xefe4, 0x124f, 0x0, 0x1);
        gbc.writeMem(0x3c8b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf8cb);
        EXPECT(gbc.pc(), 0x3c8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 029E
        gbc.setState(0xc628, 0xe9bf, 0xd970, 0xf865, 0xa9ed, 0x164e, 0x1, 0x1);
        gbc.writeMem(0xc628, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe9bf);
        EXPECT(gbc.pc(), 0xc629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc628), 0x10);
        // 10 029F
        gbc.setState(0x41c3, 0x9c9e, 0x4450, 0xffe6, 0x86ba, 0x19b8, 0x0, 0x1);
        gbc.writeMem(0x41c3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9c9e);
        EXPECT(gbc.pc(), 0x41c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 02A0
        gbc.setState(0xce92, 0x795c, 0x2540, 0x3978, 0xc94e, 0x77e6, 0x1, 0x1);
        gbc.writeMem(0xce92, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x795c);
        EXPECT(gbc.pc(), 0xce93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce92), 0x10);
        // 10 02A1
        gbc.setState(0x1403, 0xc95e, 0xa4d0, 0xc4ab, 0xb8b5, 0xc453, 0x0, 0x1);
        gbc.writeMem(0x1403, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc95e);
        EXPECT(gbc.pc(), 0x1404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 02A2
        gbc.setState(0xcf8f, 0xd91d, 0xdf40, 0x765, 0x3868, 0x86fd, 0x1, 0x1);
        gbc.writeMem(0xcf8f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd91d);
        EXPECT(gbc.pc(), 0xcf90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf8f), 0x10);
        // 10 02A3
        gbc.setState(0x625b, 0x2a40, 0xbc70, 0xf05e, 0x3790, 0xeab9, 0x0, 0x0);
        gbc.writeMem(0x625b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2a40);
        EXPECT(gbc.pc(), 0x625c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 02A4
        gbc.setState(0xc243, 0xe1be, 0xebd0, 0x62b1, 0x4338, 0xf5fe, 0x1, 0x1);
        gbc.writeMem(0xc243, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe1be);
        EXPECT(gbc.pc(), 0xc244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc243), 0x10);
        // 10 02A5
        gbc.setState(0xc2ef, 0x81e1, 0x93f0, 0xeaf8, 0x3c24, 0x47dd, 0x0, 0x0);
        gbc.writeMem(0xc2ef, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x81e1);
        EXPECT(gbc.pc(), 0xc2f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ef), 0x10);
        // 10 02A6
        gbc.setState(0x8316, 0xa85b, 0x2610, 0x6a1d, 0x183a, 0xada9, 0x0, 0x1);
        gbc.writeMem(0x8316, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa85b);
        EXPECT(gbc.pc(), 0x8317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8316), 0x10);
        // 10 02A7
        gbc.setState(0x64b8, 0xfd9e, 0xa9a0, 0x776e, 0xcd4e, 0x9ef9, 0x0, 0x0);
        gbc.writeMem(0x64b8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfd9e);
        EXPECT(gbc.pc(), 0x64b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 02A8
        gbc.setState(0x669d, 0x628, 0x8f80, 0x4081, 0x2c50, 0x45c5, 0x1, 0x1);
        gbc.writeMem(0x669d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x628);
        EXPECT(gbc.pc(), 0x669e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 02A9
        gbc.setState(0x899, 0x26a1, 0xfd70, 0x28c4, 0xbcc6, 0xcfa0, 0x0, 0x1);
        gbc.writeMem(0x899, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x26a1);
        EXPECT(gbc.pc(), 0x89a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 02AA
        gbc.setState(0x5b1f, 0x7a11, 0x230, 0x704e, 0x5d0, 0x6b7e, 0x1, 0x0);
        gbc.writeMem(0x5b1f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7a11);
        EXPECT(gbc.pc(), 0x5b20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 02AB
        gbc.setState(0x2767, 0xf0b, 0x9650, 0xcdd8, 0xc2a8, 0x1515, 0x1, 0x1);
        gbc.writeMem(0x2767, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf0b);
        EXPECT(gbc.pc(), 0x2768);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 02AC
        gbc.setState(0x231d, 0x9d70, 0x4c10, 0x27dc, 0xcce, 0x780a, 0x0, 0x0);
        gbc.writeMem(0x231d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9d70);
        EXPECT(gbc.pc(), 0x231e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 02AD
        gbc.setState(0xc827, 0x6274, 0x3770, 0xe4a8, 0x5d8f, 0x6e29, 0x0, 0x1);
        gbc.writeMem(0xc827, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6274);
        EXPECT(gbc.pc(), 0xc828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc827), 0x10);
        // 10 02AE
        gbc.setState(0x65db, 0x8d22, 0xc510, 0xc371, 0xc5ef, 0x7949, 0x1, 0x0);
        gbc.writeMem(0x65db, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8d22);
        EXPECT(gbc.pc(), 0x65dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 02AF
        gbc.setState(0x22e7, 0xace6, 0x2430, 0xf0e6, 0x13c, 0xc51f, 0x1, 0x0);
        gbc.writeMem(0x22e7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xace6);
        EXPECT(gbc.pc(), 0x22e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 02B0
        gbc.setState(0x11b0, 0x2625, 0xb600, 0x93b9, 0x4d23, 0x68a5, 0x0, 0x0);
        gbc.writeMem(0x11b0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2625);
        EXPECT(gbc.pc(), 0x11b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 02B2
        gbc.setState(0x37a, 0x8b4f, 0x2e00, 0xc620, 0xcbd7, 0xf3ac, 0x1, 0x0);
        gbc.writeMem(0x37a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8b4f);
        EXPECT(gbc.pc(), 0x37b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 02B3
        gbc.setState(0xe468, 0xc5dc, 0xb1a0, 0xd6a, 0x43dd, 0xbfa2, 0x1, 0x0);
        gbc.writeMem(0xe468, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc5dc);
        EXPECT(gbc.pc(), 0xe469);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe468), 0x10);
        // 10 02B4
        gbc.setState(0xef42, 0x4095, 0xd430, 0x8243, 0xa1e1, 0xeb37, 0x1, 0x0);
        gbc.writeMem(0xef42, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4095);
        EXPECT(gbc.pc(), 0xef43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef42), 0x10);
        // 10 02B5
        gbc.setState(0xe609, 0xc9b4, 0x9ab0, 0x513c, 0xe01a, 0x3967, 0x1, 0x1);
        gbc.writeMem(0xe609, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc9b4);
        EXPECT(gbc.pc(), 0xe60a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe609), 0x10);
        // 10 02B6
        gbc.setState(0xd231, 0x18d4, 0x3780, 0xe7e6, 0x722, 0x12dc, 0x0, 0x0);
        gbc.writeMem(0xd231, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x18d4);
        EXPECT(gbc.pc(), 0xd232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd231), 0x10);
        // 10 02B7
        gbc.setState(0xcbf8, 0xa707, 0x7d30, 0x1983, 0xf1ab, 0x6245, 0x1, 0x0);
        gbc.writeMem(0xcbf8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa707);
        EXPECT(gbc.pc(), 0xcbf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbf8), 0x10);
        // 10 02B8
        gbc.setState(0x5bf, 0x2266, 0x4c80, 0x1ae4, 0x7b11, 0x4d14, 0x0, 0x0);
        gbc.writeMem(0x5bf, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2266);
        EXPECT(gbc.pc(), 0x5c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 02B9
        gbc.setState(0x6367, 0x1832, 0x2200, 0x49ad, 0x48b2, 0x31dc, 0x1, 0x0);
        gbc.writeMem(0x6367, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1832);
        EXPECT(gbc.pc(), 0x6368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 02BA
        gbc.setState(0x64c1, 0xf074, 0x3ee0, 0xcb01, 0xed97, 0xf8cc, 0x1, 0x0);
        gbc.writeMem(0x64c1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf074);
        EXPECT(gbc.pc(), 0x64c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 02BB
        gbc.setState(0xbf3f, 0x535, 0x8310, 0x36de, 0x9f2c, 0xa267, 0x0, 0x1);
        gbc.writeMem(0xbf3f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x535);
        EXPECT(gbc.pc(), 0xbf40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf3f), 0x10);
        // 10 02BC
        gbc.setState(0x695f, 0x931d, 0x4d40, 0x86be, 0xa4f9, 0x34b7, 0x1, 0x0);
        gbc.writeMem(0x695f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x931d);
        EXPECT(gbc.pc(), 0x6960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 02BD
        gbc.setState(0x5cd9, 0xf994, 0xf8a0, 0x95aa, 0xbc4, 0xf5c4, 0x1, 0x1);
        gbc.writeMem(0x5cd9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf994);
        EXPECT(gbc.pc(), 0x5cda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 02BE
        gbc.setState(0xa362, 0xaae2, 0x1110, 0x2488, 0x6acb, 0xd206, 0x1, 0x0);
        gbc.writeMem(0xa362, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xaae2);
        EXPECT(gbc.pc(), 0xa363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa362), 0x10);
        // 10 02BF
        gbc.setState(0x3544, 0x7610, 0xd130, 0xb1e7, 0x6f47, 0x6cfa, 0x0, 0x1);
        gbc.writeMem(0x3544, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7610);
        EXPECT(gbc.pc(), 0x3545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 02C0
        gbc.setState(0xeeab, 0xf70f, 0x28a0, 0x5edb, 0xf2bf, 0x4316, 0x0, 0x1);
        gbc.writeMem(0xeeab, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf70f);
        EXPECT(gbc.pc(), 0xeeac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeab), 0x10);
        // 10 02C1
        gbc.setState(0xee95, 0xff58, 0x4e60, 0x406c, 0xef05, 0xbc7, 0x1, 0x0);
        gbc.writeMem(0xee95, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xff58);
        EXPECT(gbc.pc(), 0xee96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee95), 0x10);
        // 10 02C2
        gbc.setState(0xd0dd, 0xf928, 0xb8c0, 0xc46f, 0x7e1d, 0xb16c, 0x1, 0x1);
        gbc.writeMem(0xd0dd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf928);
        EXPECT(gbc.pc(), 0xd0de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0dd), 0x10);
        // 10 02C3
        gbc.setState(0x48e4, 0x52fd, 0x8e80, 0x89aa, 0xc0c4, 0x3dca, 0x1, 0x0);
        gbc.writeMem(0x48e4, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x52fd);
        EXPECT(gbc.pc(), 0x48e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 02C4
        gbc.setState(0x69a0, 0x32a6, 0xa5f0, 0x3c12, 0xdfa, 0x8518, 0x0, 0x1);
        gbc.writeMem(0x69a0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x32a6);
        EXPECT(gbc.pc(), 0x69a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 02C5
        gbc.setState(0xe5e9, 0xa136, 0x5db0, 0xf3de, 0x78e3, 0x279c, 0x0, 0x0);
        gbc.writeMem(0xe5e9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa136);
        EXPECT(gbc.pc(), 0xe5ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5e9), 0x10);
        // 10 02C6
        gbc.setState(0xc208, 0x5d2e, 0xa6b0, 0x91ea, 0xf29, 0xf835, 0x0, 0x1);
        gbc.writeMem(0xc208, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5d2e);
        EXPECT(gbc.pc(), 0xc209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc208), 0x10);
        // 10 02C7
        gbc.setState(0x8222, 0xdabe, 0x4da0, 0x34cc, 0x7a37, 0xb76d, 0x0, 0x1);
        gbc.writeMem(0x8222, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xdabe);
        EXPECT(gbc.pc(), 0x8223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8222), 0x10);
        // 10 02C8
        gbc.setState(0x67f3, 0xbd6f, 0x3990, 0xfedc, 0x97f5, 0x5435, 0x1, 0x1);
        gbc.writeMem(0x67f3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xbd6f);
        EXPECT(gbc.pc(), 0x67f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 02C9
        gbc.setState(0x5402, 0x8eba, 0xab0, 0xc1ec, 0xa909, 0x66dd, 0x1, 0x0);
        gbc.writeMem(0x5402, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8eba);
        EXPECT(gbc.pc(), 0x5403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 02CA
        gbc.setState(0x6fb1, 0xf975, 0xd840, 0xbb73, 0x296f, 0x6fb4, 0x1, 0x1);
        gbc.writeMem(0x6fb1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf975);
        EXPECT(gbc.pc(), 0x6fb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 02CB
        gbc.setState(0xd5b7, 0xe259, 0x1b30, 0x4792, 0xb7f3, 0x5195, 0x1, 0x1);
        gbc.writeMem(0xd5b7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe259);
        EXPECT(gbc.pc(), 0xd5b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b7), 0x10);
        // 10 02CC
        gbc.setState(0x697e, 0x6f0b, 0x2940, 0x5a94, 0xa3fb, 0x4377, 0x1, 0x0);
        gbc.writeMem(0x697e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6f0b);
        EXPECT(gbc.pc(), 0x697f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 02CD
        gbc.setState(0xddaa, 0x73dd, 0xb450, 0x224f, 0x9cdd, 0x6917, 0x1, 0x1);
        gbc.writeMem(0xddaa, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x73dd);
        EXPECT(gbc.pc(), 0xddab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddaa), 0x10);
        // 10 02CE
        gbc.setState(0x124e, 0x2a1a, 0x2b0, 0xcb41, 0x4065, 0x2d26, 0x1, 0x1);
        gbc.writeMem(0x124e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2a1a);
        EXPECT(gbc.pc(), 0x124f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 02CF
        gbc.setState(0x3f90, 0x5369, 0x3cd0, 0x7e16, 0x13ea, 0x78ff, 0x1, 0x0);
        gbc.writeMem(0x3f90, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5369);
        EXPECT(gbc.pc(), 0x3f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 02D0
        gbc.setState(0x457, 0xcd0f, 0x6e20, 0xa81d, 0xa26c, 0xa31, 0x0, 0x1);
        gbc.writeMem(0x457, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xcd0f);
        EXPECT(gbc.pc(), 0x458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 02D1
        gbc.setState(0x2779, 0x84ed, 0x2a30, 0xf287, 0x2a18, 0x7426, 0x1, 0x0);
        gbc.writeMem(0x2779, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x84ed);
        EXPECT(gbc.pc(), 0x277a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 02D2
        gbc.setState(0x949b, 0xba1d, 0xda30, 0x5b31, 0xa1ca, 0x6a69, 0x1, 0x0);
        gbc.writeMem(0x949b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xba1d);
        EXPECT(gbc.pc(), 0x949c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x949b), 0x10);
        // 10 02D3
        gbc.setState(0xdab, 0x1802, 0x4090, 0xd0bb, 0x3586, 0xbdbf, 0x1, 0x0);
        gbc.writeMem(0xdab, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1802);
        EXPECT(gbc.pc(), 0xdac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 02D4
        gbc.setState(0xe9f6, 0xce04, 0xca40, 0xfab, 0x31d9, 0xa6a6, 0x1, 0x0);
        gbc.writeMem(0xe9f6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xce04);
        EXPECT(gbc.pc(), 0xe9f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9f6), 0x10);
        // 10 02D5
        gbc.setState(0x8c2e, 0x8e79, 0x680, 0x4416, 0xcfda, 0x5be6, 0x1, 0x1);
        gbc.writeMem(0x8c2e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8e79);
        EXPECT(gbc.pc(), 0x8c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c2e), 0x10);
        // 10 02D6
        gbc.setState(0x9786, 0xf107, 0x7d0, 0x7b3, 0x6242, 0x5029, 0x0, 0x0);
        gbc.writeMem(0x9786, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf107);
        EXPECT(gbc.pc(), 0x9787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9786), 0x10);
        // 10 02D7
        gbc.setState(0x9e1a, 0x2613, 0xca00, 0xf5b4, 0x8ccc, 0xbe92, 0x0, 0x1);
        gbc.writeMem(0x9e1a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2613);
        EXPECT(gbc.pc(), 0x9e1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e1a), 0x10);
        // 10 02D8
        gbc.setState(0x6850, 0xaa82, 0xa640, 0xccac, 0x987, 0x7cfe, 0x1, 0x0);
        gbc.writeMem(0x6850, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xaa82);
        EXPECT(gbc.pc(), 0x6851);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 02D9
        gbc.setState(0x1b46, 0xef65, 0x5d20, 0xc4e0, 0xfb28, 0xed72, 0x0, 0x0);
        gbc.writeMem(0x1b46, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xef65);
        EXPECT(gbc.pc(), 0x1b47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 02DB
        gbc.setState(0x7e49, 0xb93b, 0xcad0, 0x77e4, 0x9709, 0x6ba5, 0x1, 0x1);
        gbc.writeMem(0x7e49, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb93b);
        EXPECT(gbc.pc(), 0x7e4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 02DC
        gbc.setState(0xe35d, 0xb051, 0x3d60, 0xefe7, 0xd832, 0xd634, 0x1, 0x0);
        gbc.writeMem(0xe35d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb051);
        EXPECT(gbc.pc(), 0xe35e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe35d), 0x10);
        // 10 02DD
        gbc.setState(0x42f8, 0x733, 0xe190, 0xa92d, 0x7b83, 0x9161, 0x1, 0x0);
        gbc.writeMem(0x42f8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x733);
        EXPECT(gbc.pc(), 0x42f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 02DE
        gbc.setState(0x3908, 0x1a6d, 0xef50, 0xac27, 0xe31a, 0xecac, 0x1, 0x1);
        gbc.writeMem(0x3908, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1a6d);
        EXPECT(gbc.pc(), 0x3909);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 02DF
        gbc.setState(0x4f64, 0x25c5, 0x8050, 0x13d9, 0x97fc, 0xea59, 0x0, 0x1);
        gbc.writeMem(0x4f64, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x25c5);
        EXPECT(gbc.pc(), 0x4f65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 02E0
        gbc.setState(0xe3cf, 0x1f00, 0x9bb0, 0x4361, 0xb137, 0x6f91, 0x1, 0x1);
        gbc.writeMem(0xe3cf, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1f00);
        EXPECT(gbc.pc(), 0xe3d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3cf), 0x10);
        // 10 02E1
        gbc.setState(0x645d, 0x7328, 0x10, 0xbcf6, 0x1012, 0xb051, 0x1, 0x1);
        gbc.writeMem(0x645d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7328);
        EXPECT(gbc.pc(), 0x645e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 02E2
        gbc.setState(0x9b22, 0xd1ed, 0x3000, 0xcec0, 0x58f1, 0x8926, 0x1, 0x1);
        gbc.writeMem(0x9b22, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd1ed);
        EXPECT(gbc.pc(), 0x9b23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b22), 0x10);
        // 10 02E3
        gbc.setState(0xd6a8, 0x168, 0xb220, 0x68a, 0x9b81, 0x74d1, 0x0, 0x1);
        gbc.writeMem(0xd6a8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x168);
        EXPECT(gbc.pc(), 0xd6a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6a8), 0x10);
        // 10 02E4
        gbc.setState(0x8123, 0xb78d, 0xb8d0, 0x2f64, 0x199c, 0xde5d, 0x0, 0x1);
        gbc.writeMem(0x8123, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb78d);
        EXPECT(gbc.pc(), 0x8124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8123), 0x10);
        // 10 02E6
        gbc.setState(0x25d1, 0x7242, 0xa190, 0x4c76, 0xbc09, 0x8714, 0x0, 0x1);
        gbc.writeMem(0x25d1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7242);
        EXPECT(gbc.pc(), 0x25d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 02E7
        gbc.setState(0x8386, 0x6ff0, 0x7990, 0x8547, 0xe911, 0xf7fc, 0x0, 0x1);
        gbc.writeMem(0x8386, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6ff0);
        EXPECT(gbc.pc(), 0x8387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8386), 0x10);
        // 10 02E9
        gbc.setState(0xbba0, 0x119c, 0xc510, 0x5640, 0xcf08, 0xa12d, 0x0, 0x1);
        gbc.writeMem(0xbba0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x119c);
        EXPECT(gbc.pc(), 0xbba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbba0), 0x10);
        // 10 02EA
        gbc.setState(0xbd85, 0x19bf, 0xc7b0, 0xc16a, 0x33e3, 0xdb88, 0x0, 0x0);
        gbc.writeMem(0xbd85, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x19bf);
        EXPECT(gbc.pc(), 0xbd86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd85), 0x10);
        // 10 02EB
        gbc.setState(0x837b, 0xdd86, 0x7580, 0x5eaf, 0xaa20, 0x5ae5, 0x0, 0x1);
        gbc.writeMem(0x837b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xdd86);
        EXPECT(gbc.pc(), 0x837c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x837b), 0x10);
        // 10 02EC
        gbc.setState(0xcded, 0xad85, 0x6970, 0xa01f, 0x92e4, 0x3ea4, 0x1, 0x1);
        gbc.writeMem(0xcded, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xad85);
        EXPECT(gbc.pc(), 0xcdee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcded), 0x10);
        // 10 02ED
        gbc.setState(0x8c85, 0x8f84, 0xbb20, 0x9b62, 0x5193, 0x2173, 0x1, 0x1);
        gbc.writeMem(0x8c85, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8f84);
        EXPECT(gbc.pc(), 0x8c86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c85), 0x10);
        // 10 02EE
        gbc.setState(0x866f, 0x1551, 0x8b20, 0x2620, 0x1512, 0x6e18, 0x1, 0x1);
        gbc.writeMem(0x866f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1551);
        EXPECT(gbc.pc(), 0x8670);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x866f), 0x10);
        // 10 02EF
        gbc.setState(0x2722, 0x510a, 0xbb00, 0xacb7, 0x1e15, 0x3395, 0x1, 0x0);
        gbc.writeMem(0x2722, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x510a);
        EXPECT(gbc.pc(), 0x2723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 02F0
        gbc.setState(0x58eb, 0x4651, 0x2380, 0x91d0, 0x93cb, 0x2a15, 0x0, 0x1);
        gbc.writeMem(0x58eb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4651);
        EXPECT(gbc.pc(), 0x58ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 02F1
        gbc.setState(0x63b7, 0x62f4, 0x8f10, 0x6224, 0xbc93, 0x7e64, 0x0, 0x1);
        gbc.writeMem(0x63b7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x62f4);
        EXPECT(gbc.pc(), 0x63b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 02F2
        gbc.setState(0x7dc3, 0x6db, 0x7170, 0x5645, 0x86dc, 0xac85, 0x0, 0x0);
        gbc.writeMem(0x7dc3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6db);
        EXPECT(gbc.pc(), 0x7dc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 02F3
        gbc.setState(0x5d73, 0x7828, 0xc130, 0xd10f, 0xa3f3, 0x2fec, 0x1, 0x0);
        gbc.writeMem(0x5d73, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7828);
        EXPECT(gbc.pc(), 0x5d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 02F4
        gbc.setState(0xda64, 0x6523, 0xff30, 0x85bb, 0x3f3c, 0xa472, 0x1, 0x0);
        gbc.writeMem(0xda64, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6523);
        EXPECT(gbc.pc(), 0xda65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda64), 0x10);
        // 10 02F5
        gbc.setState(0xd47e, 0x25a0, 0xca90, 0xfe2c, 0xf495, 0x7e0, 0x1, 0x1);
        gbc.writeMem(0xd47e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x25a0);
        EXPECT(gbc.pc(), 0xd47f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47e), 0x10);
        // 10 02F6
        gbc.setState(0xc96d, 0xbeaf, 0x8bb0, 0xc9bb, 0xdcb6, 0x236, 0x0, 0x1);
        gbc.writeMem(0xc96d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xbeaf);
        EXPECT(gbc.pc(), 0xc96e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc96d), 0x10);
        // 10 02F7
        gbc.setState(0xa2df, 0x9f9b, 0xfcf0, 0xe58f, 0xa28, 0xccda, 0x1, 0x1);
        gbc.writeMem(0xa2df, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9f9b);
        EXPECT(gbc.pc(), 0xa2e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2df), 0x10);
        // 10 02F8
        gbc.setState(0x6d2, 0xcaa9, 0x3080, 0x272, 0xa5af, 0x1434, 0x1, 0x1);
        gbc.writeMem(0x6d2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xcaa9);
        EXPECT(gbc.pc(), 0x6d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 02F9
        gbc.setState(0x41ef, 0x6181, 0xf180, 0x26e6, 0x10f2, 0xc597, 0x0, 0x0);
        gbc.writeMem(0x41ef, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6181);
        EXPECT(gbc.pc(), 0x41f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 02FA
        gbc.setState(0xd341, 0xfacd, 0xefa0, 0xf094, 0xb477, 0x8605, 0x1, 0x1);
        gbc.writeMem(0xd341, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xfacd);
        EXPECT(gbc.pc(), 0xd342);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd341), 0x10);
        // 10 02FB
        gbc.setState(0x3a0, 0xf80d, 0x78a0, 0x4a2d, 0x9c26, 0xc8aa, 0x1, 0x0);
        gbc.writeMem(0x3a0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf80d);
        EXPECT(gbc.pc(), 0x3a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 02FC
        gbc.setState(0x8e99, 0x3d71, 0xb410, 0xaa9, 0x9c69, 0x8460, 0x1, 0x1);
        gbc.writeMem(0x8e99, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3d71);
        EXPECT(gbc.pc(), 0x8e9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e99), 0x10);
        // 10 02FE
        gbc.setState(0x8e8c, 0x5032, 0x23f0, 0xe9b2, 0x989c, 0xdbd4, 0x1, 0x0);
        gbc.writeMem(0x8e8c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5032);
        EXPECT(gbc.pc(), 0x8e8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e8c), 0x10);
        // 10 02FF
        gbc.setState(0x9223, 0xb703, 0x9fb0, 0x382d, 0xcb0a, 0x9f9, 0x1, 0x0);
        gbc.writeMem(0x9223, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb703);
        EXPECT(gbc.pc(), 0x9224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9223), 0x10);
        // 10 0300
        gbc.setState(0xdfed, 0xe10c, 0xdaf0, 0x7b9f, 0x1235, 0xe2d4, 0x0, 0x0);
        gbc.writeMem(0xdfed, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe10c);
        EXPECT(gbc.pc(), 0xdfee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfed), 0x10);
        // 10 0301
        gbc.setState(0xbb6a, 0xdad6, 0x8380, 0x591d, 0x8774, 0x3469, 0x0, 0x1);
        gbc.writeMem(0xbb6a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xdad6);
        EXPECT(gbc.pc(), 0xbb6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb6a), 0x10);
        // 10 0302
        gbc.setState(0xc934, 0x5c0f, 0x7340, 0x6493, 0x1be5, 0x66cb, 0x1, 0x1);
        gbc.writeMem(0xc934, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5c0f);
        EXPECT(gbc.pc(), 0xc935);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc934), 0x10);
        // 10 0303
        gbc.setState(0xceff, 0x6e8e, 0x9af0, 0x6b64, 0xda15, 0x616f, 0x0, 0x1);
        gbc.writeMem(0xceff, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6e8e);
        EXPECT(gbc.pc(), 0xcf00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceff), 0x10);
        // 10 0304
        gbc.setState(0x42ae, 0x5f06, 0x55c0, 0x7ca9, 0xf15d, 0x964, 0x1, 0x0);
        gbc.writeMem(0x42ae, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5f06);
        EXPECT(gbc.pc(), 0x42af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0305
        gbc.setState(0x8985, 0x1136, 0xb380, 0x45b6, 0x6079, 0x3ee8, 0x0, 0x0);
        gbc.writeMem(0x8985, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1136);
        EXPECT(gbc.pc(), 0x8986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8985), 0x10);
        // 10 0306
        gbc.setState(0x89ae, 0x4933, 0xc5f0, 0x8324, 0x735c, 0x4431, 0x1, 0x1);
        gbc.writeMem(0x89ae, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4933);
        EXPECT(gbc.pc(), 0x89af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ae), 0x10);
        // 10 0307
        gbc.setState(0xd19, 0x6d70, 0x71e0, 0xab40, 0x86d0, 0x37c4, 0x1, 0x0);
        gbc.writeMem(0xd19, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6d70);
        EXPECT(gbc.pc(), 0xd1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0308
        gbc.setState(0xe39a, 0x44da, 0x7870, 0xae65, 0x977f, 0x6454, 0x0, 0x1);
        gbc.writeMem(0xe39a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x44da);
        EXPECT(gbc.pc(), 0xe39b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe39a), 0x10);
        // 10 0309
        gbc.setState(0xad45, 0xb4a1, 0x4730, 0x2e37, 0xfbd8, 0x44e2, 0x1, 0x0);
        gbc.writeMem(0xad45, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb4a1);
        EXPECT(gbc.pc(), 0xad46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad45), 0x10);
        // 10 030A
        gbc.setState(0x66e2, 0xea09, 0xd8a0, 0x1f69, 0x9716, 0x19a1, 0x1, 0x0);
        gbc.writeMem(0x66e2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xea09);
        EXPECT(gbc.pc(), 0x66e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 030B
        gbc.setState(0xe689, 0x6e40, 0xb2c0, 0x1a8a, 0x80f1, 0x3f8f, 0x0, 0x0);
        gbc.writeMem(0xe689, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6e40);
        EXPECT(gbc.pc(), 0xe68a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe689), 0x10);
        // 10 030C
        gbc.setState(0x64f3, 0xd692, 0x6ab0, 0x9ae4, 0x447e, 0xad9d, 0x1, 0x0);
        gbc.writeMem(0x64f3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd692);
        EXPECT(gbc.pc(), 0x64f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 030D
        gbc.setState(0x4ec0, 0xe9b7, 0x5c40, 0x625c, 0x3d6f, 0x5f67, 0x0, 0x1);
        gbc.writeMem(0x4ec0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe9b7);
        EXPECT(gbc.pc(), 0x4ec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 030E
        gbc.setState(0xf78, 0xd58b, 0xec40, 0xb681, 0x314f, 0xc6d8, 0x0, 0x1);
        gbc.writeMem(0xf78, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd58b);
        EXPECT(gbc.pc(), 0xf79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 030F
        gbc.setState(0x8df0, 0xb961, 0x5db0, 0xaa58, 0x44ff, 0x842f, 0x0, 0x0);
        gbc.writeMem(0x8df0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb961);
        EXPECT(gbc.pc(), 0x8df1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df0), 0x10);
        // 10 0310
        gbc.setState(0x6a6, 0x989c, 0x1540, 0xd6d0, 0xbba8, 0x697b, 0x0, 0x0);
        gbc.writeMem(0x6a6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x989c);
        EXPECT(gbc.pc(), 0x6a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0312
        gbc.setState(0x464e, 0xd8e8, 0xff10, 0xb6f8, 0x90e7, 0xd01b, 0x1, 0x0);
        gbc.writeMem(0x464e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd8e8);
        EXPECT(gbc.pc(), 0x464f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0313
        gbc.setState(0x100b, 0xd1b2, 0xd420, 0x9190, 0x7d88, 0x94f5, 0x1, 0x0);
        gbc.writeMem(0x100b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd1b2);
        EXPECT(gbc.pc(), 0x100c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0315
        gbc.setState(0x4434, 0x1fb4, 0x2300, 0x5b69, 0x5d3f, 0xc823, 0x1, 0x1);
        gbc.writeMem(0x4434, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1fb4);
        EXPECT(gbc.pc(), 0x4435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0316
        gbc.setState(0xaf00, 0x18eb, 0x7a20, 0x901, 0x180b, 0x86f9, 0x0, 0x0);
        gbc.writeMem(0xaf00, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x18eb);
        EXPECT(gbc.pc(), 0xaf01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf00), 0x10);
        // 10 0317
        gbc.setState(0xdc9, 0x635f, 0x3770, 0x591c, 0xcb8e, 0x3af9, 0x1, 0x1);
        gbc.writeMem(0xdc9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x635f);
        EXPECT(gbc.pc(), 0xdca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0318
        gbc.setState(0x562f, 0x889e, 0x7cf0, 0x8f38, 0x2f65, 0x96d7, 0x1, 0x1);
        gbc.writeMem(0x562f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x889e);
        EXPECT(gbc.pc(), 0x5630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0319
        gbc.setState(0xc10, 0x7969, 0x7d40, 0x3451, 0x4eb5, 0x15bf, 0x0, 0x0);
        gbc.writeMem(0xc10, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7969);
        EXPECT(gbc.pc(), 0xc11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 031A
        gbc.setState(0x9421, 0xe993, 0x6f80, 0x9e62, 0xd3c7, 0xeb7e, 0x0, 0x1);
        gbc.writeMem(0x9421, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe993);
        EXPECT(gbc.pc(), 0x9422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9421), 0x10);
        // 10 031C
        gbc.setState(0xec81, 0xe097, 0x21d0, 0x724, 0x370b, 0xfe8b, 0x0, 0x1);
        gbc.writeMem(0xec81, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe097);
        EXPECT(gbc.pc(), 0xec82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec81), 0x10);
        // 10 031D
        gbc.setState(0x145e, 0x7d7d, 0x3870, 0x1589, 0xc974, 0x65f9, 0x0, 0x1);
        gbc.writeMem(0x145e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7d7d);
        EXPECT(gbc.pc(), 0x145f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 031E
        gbc.setState(0xdb8e, 0x6b74, 0x1110, 0x274b, 0x49f6, 0xfff0, 0x0, 0x1);
        gbc.writeMem(0xdb8e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6b74);
        EXPECT(gbc.pc(), 0xdb8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb8e), 0x10);
        // 10 031F
        gbc.setState(0x38b2, 0x446a, 0x94c0, 0x5058, 0xc6f5, 0xd796, 0x1, 0x0);
        gbc.writeMem(0x38b2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x446a);
        EXPECT(gbc.pc(), 0x38b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0320
        gbc.setState(0x1541, 0x5a5c, 0xa20, 0x174b, 0x6c3b, 0x8bb9, 0x1, 0x1);
        gbc.writeMem(0x1541, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5a5c);
        EXPECT(gbc.pc(), 0x1542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0321
        gbc.setState(0x43ac, 0xaa43, 0xdad0, 0x24ed, 0x1aeb, 0x600a, 0x1, 0x0);
        gbc.writeMem(0x43ac, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xaa43);
        EXPECT(gbc.pc(), 0x43ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0322
        gbc.setState(0x4b3, 0xe592, 0x9e80, 0xbc4b, 0x3e3d, 0x52ed, 0x1, 0x0);
        gbc.writeMem(0x4b3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe592);
        EXPECT(gbc.pc(), 0x4b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0323
        gbc.setState(0x35e5, 0x95e4, 0xd000, 0x544, 0x2d80, 0xc325, 0x0, 0x1);
        gbc.writeMem(0x35e5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x95e4);
        EXPECT(gbc.pc(), 0x35e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0324
        gbc.setState(0x74d3, 0x14c3, 0x5c80, 0xd626, 0x754e, 0x9c20, 0x1, 0x0);
        gbc.writeMem(0x74d3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x14c3);
        EXPECT(gbc.pc(), 0x74d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0325
        gbc.setState(0x1e90, 0x9c31, 0x50a0, 0x256a, 0x755a, 0x9a1a, 0x1, 0x0);
        gbc.writeMem(0x1e90, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9c31);
        EXPECT(gbc.pc(), 0x1e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0326
        gbc.setState(0xdb7c, 0x1b8e, 0x9c80, 0xccf2, 0x923e, 0xab1a, 0x0, 0x0);
        gbc.writeMem(0xdb7c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1b8e);
        EXPECT(gbc.pc(), 0xdb7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb7c), 0x10);
        // 10 0327
        gbc.setState(0x5fd7, 0x557d, 0x7b90, 0x8b61, 0xc48a, 0xddb5, 0x1, 0x1);
        gbc.writeMem(0x5fd7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x557d);
        EXPECT(gbc.pc(), 0x5fd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0328
        gbc.setState(0x52e1, 0x1e0f, 0x640, 0xd9c0, 0xf6d5, 0xd9d0, 0x1, 0x0);
        gbc.writeMem(0x52e1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1e0f);
        EXPECT(gbc.pc(), 0x52e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0329
        gbc.setState(0xedd3, 0x6c18, 0x30c0, 0x7a50, 0xb9f4, 0xd9ce, 0x0, 0x0);
        gbc.writeMem(0xedd3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6c18);
        EXPECT(gbc.pc(), 0xedd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd3), 0x10);
        // 10 032B
        gbc.setState(0x7b94, 0x7011, 0x8700, 0x5c79, 0xb4dc, 0xa3d4, 0x0, 0x1);
        gbc.writeMem(0x7b94, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7011);
        EXPECT(gbc.pc(), 0x7b95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 032C
        gbc.setState(0x3650, 0x2e8c, 0xdaf0, 0xbf2c, 0x16a1, 0x6f73, 0x1, 0x1);
        gbc.writeMem(0x3650, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2e8c);
        EXPECT(gbc.pc(), 0x3651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 032E
        gbc.setState(0xcbad, 0x50b2, 0x6a60, 0x3f04, 0x9cc1, 0x8aa7, 0x0, 0x0);
        gbc.writeMem(0xcbad, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x50b2);
        EXPECT(gbc.pc(), 0xcbae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbad), 0x10);
        // 10 032F
        gbc.setState(0xdedc, 0xa3c8, 0x1760, 0xe896, 0xcb21, 0xe70d, 0x0, 0x0);
        gbc.writeMem(0xdedc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa3c8);
        EXPECT(gbc.pc(), 0xdedd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdedc), 0x10);
        // 10 0330
        gbc.setState(0xbbc8, 0x9f0e, 0x4580, 0x6fc4, 0xf46f, 0x720f, 0x0, 0x1);
        gbc.writeMem(0xbbc8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9f0e);
        EXPECT(gbc.pc(), 0xbbc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbc8), 0x10);
        // 10 0331
        gbc.setState(0xca3, 0x3ba8, 0x6200, 0xf28e, 0x5df7, 0xd2d6, 0x0, 0x1);
        gbc.writeMem(0xca3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3ba8);
        EXPECT(gbc.pc(), 0xca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0332
        gbc.setState(0x58ec, 0x1a90, 0x7b50, 0x1f68, 0xf354, 0x2679, 0x1, 0x1);
        gbc.writeMem(0x58ec, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1a90);
        EXPECT(gbc.pc(), 0x58ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0333
        gbc.setState(0x17cc, 0xb053, 0xd30, 0xd2da, 0x911e, 0x6b0f, 0x1, 0x1);
        gbc.writeMem(0x17cc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb053);
        EXPECT(gbc.pc(), 0x17cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0334
        gbc.setState(0x1cd9, 0x9b3c, 0xf6d0, 0xc7fa, 0xdbd7, 0xb006, 0x1, 0x0);
        gbc.writeMem(0x1cd9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9b3c);
        EXPECT(gbc.pc(), 0x1cda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0335
        gbc.setState(0x927f, 0x2510, 0x5010, 0x7aa7, 0x515, 0xe406, 0x0, 0x0);
        gbc.writeMem(0x927f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2510);
        EXPECT(gbc.pc(), 0x9280);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x927f), 0x10);
        // 10 0336
        gbc.setState(0x4d55, 0x91a, 0x31d0, 0x2681, 0xf1f, 0x806, 0x1, 0x1);
        gbc.writeMem(0x4d55, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x91a);
        EXPECT(gbc.pc(), 0x4d56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0337
        gbc.setState(0xbd02, 0xa2a7, 0x35f0, 0x1bcb, 0xb7a5, 0xc72b, 0x1, 0x0);
        gbc.writeMem(0xbd02, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa2a7);
        EXPECT(gbc.pc(), 0xbd03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd02), 0x10);
        // 10 0338
        gbc.setState(0x1c0d, 0x7546, 0xd670, 0xf4f9, 0x1a5e, 0xe6fe, 0x1, 0x1);
        gbc.writeMem(0x1c0d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7546);
        EXPECT(gbc.pc(), 0x1c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0339
        gbc.setState(0x7003, 0x93e6, 0x89a0, 0x7ddc, 0x1531, 0xe98, 0x0, 0x1);
        gbc.writeMem(0x7003, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x93e6);
        EXPECT(gbc.pc(), 0x7004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 033A
        gbc.setState(0xdf1f, 0xda7, 0x38e0, 0xda4f, 0xa878, 0xe348, 0x1, 0x0);
        gbc.writeMem(0xdf1f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xda7);
        EXPECT(gbc.pc(), 0xdf20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf1f), 0x10);
        // 10 033B
        gbc.setState(0x67ab, 0xd881, 0xd650, 0xffa7, 0x74c6, 0x957c, 0x1, 0x1);
        gbc.writeMem(0x67ab, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd881);
        EXPECT(gbc.pc(), 0x67ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 033C
        gbc.setState(0x1880, 0xc519, 0xdaa0, 0x6d91, 0x1433, 0x7625, 0x1, 0x0);
        gbc.writeMem(0x1880, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc519);
        EXPECT(gbc.pc(), 0x1881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 033D
        gbc.setState(0x89ba, 0x1205, 0x4fb0, 0x8912, 0xe493, 0xd78, 0x0, 0x1);
        gbc.writeMem(0x89ba, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1205);
        EXPECT(gbc.pc(), 0x89bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ba), 0x10);
        // 10 033E
        gbc.setState(0xd3b0, 0x41e9, 0x16b0, 0x822, 0x2e65, 0xa6eb, 0x0, 0x1);
        gbc.writeMem(0xd3b0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x41e9);
        EXPECT(gbc.pc(), 0xd3b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b0), 0x10);
        // 10 033F
        gbc.setState(0x14fa, 0xd30f, 0x3860, 0xd68a, 0xa34f, 0x5fad, 0x1, 0x1);
        gbc.writeMem(0x14fa, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd30f);
        EXPECT(gbc.pc(), 0x14fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0340
        gbc.setState(0x6dc7, 0x45b3, 0x23e0, 0xdfae, 0x38bf, 0x5b95, 0x1, 0x1);
        gbc.writeMem(0x6dc7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x45b3);
        EXPECT(gbc.pc(), 0x6dc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0341
        gbc.setState(0x4c09, 0xfa2c, 0x12d0, 0x1b06, 0xe93b, 0x541d, 0x1, 0x0);
        gbc.writeMem(0x4c09, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfa2c);
        EXPECT(gbc.pc(), 0x4c0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0342
        gbc.setState(0x4a06, 0x123e, 0x62a0, 0x4017, 0xe250, 0x3f9d, 0x1, 0x0);
        gbc.writeMem(0x4a06, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x123e);
        EXPECT(gbc.pc(), 0x4a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0343
        gbc.setState(0x6b0d, 0xd03b, 0xa40, 0x69fd, 0xcf03, 0xad59, 0x1, 0x0);
        gbc.writeMem(0x6b0d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd03b);
        EXPECT(gbc.pc(), 0x6b0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0344
        gbc.setState(0x1270, 0x1f8f, 0xa030, 0xee32, 0x2ecb, 0xc02f, 0x1, 0x0);
        gbc.writeMem(0x1270, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1f8f);
        EXPECT(gbc.pc(), 0x1271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0345
        gbc.setState(0x9143, 0x7d35, 0xd50, 0x1fa4, 0xf6bc, 0xfc39, 0x1, 0x0);
        gbc.writeMem(0x9143, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7d35);
        EXPECT(gbc.pc(), 0x9144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9143), 0x10);
        // 10 0346
        gbc.setState(0x548b, 0xa556, 0x7ac0, 0xa7b2, 0x7fcd, 0x947, 0x0, 0x1);
        gbc.writeMem(0x548b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa556);
        EXPECT(gbc.pc(), 0x548c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0347
        gbc.setState(0xb1fe, 0x1248, 0xd320, 0xb58, 0x76f0, 0x1544, 0x0, 0x0);
        gbc.writeMem(0xb1fe, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1248);
        EXPECT(gbc.pc(), 0xb1ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1fe), 0x10);
        // 10 0348
        gbc.setState(0x80ce, 0x2694, 0x10a0, 0xa5dc, 0x253a, 0x8cef, 0x1, 0x0);
        gbc.writeMem(0x80ce, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2694);
        EXPECT(gbc.pc(), 0x80cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ce), 0x10);
        // 10 0349
        gbc.setState(0x21ed, 0x5bf5, 0xee80, 0xcf59, 0x761e, 0x9563, 0x0, 0x1);
        gbc.writeMem(0x21ed, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5bf5);
        EXPECT(gbc.pc(), 0x21ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 034A
        gbc.setState(0xe363, 0x8b60, 0x3d50, 0xfc5c, 0xe4, 0x1308, 0x1, 0x1);
        gbc.writeMem(0xe363, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8b60);
        EXPECT(gbc.pc(), 0xe364);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe363), 0x10);
        // 10 034B
        gbc.setState(0x59b5, 0x6409, 0x8310, 0x3e73, 0xc0b2, 0x2536, 0x0, 0x1);
        gbc.writeMem(0x59b5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6409);
        EXPECT(gbc.pc(), 0x59b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 034C
        gbc.setState(0xe25, 0xf771, 0xc890, 0x741d, 0x38e2, 0x3d58, 0x0, 0x0);
        gbc.writeMem(0xe25, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf771);
        EXPECT(gbc.pc(), 0xe26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 034D
        gbc.setState(0xc279, 0x20d8, 0x5a60, 0x5096, 0xf8b1, 0x838a, 0x0, 0x0);
        gbc.writeMem(0xc279, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x20d8);
        EXPECT(gbc.pc(), 0xc27a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc279), 0x10);
        // 10 034E
        gbc.setState(0x2e96, 0xa8e1, 0xa050, 0x21da, 0x6c28, 0xbe9c, 0x1, 0x0);
        gbc.writeMem(0x2e96, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa8e1);
        EXPECT(gbc.pc(), 0x2e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 034F
        gbc.setState(0x75ad, 0xddc6, 0x9110, 0xae36, 0xcd12, 0x9ad, 0x1, 0x1);
        gbc.writeMem(0x75ad, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xddc6);
        EXPECT(gbc.pc(), 0x75ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0351
        gbc.setState(0x3c9, 0x90d1, 0xdc00, 0x5ffe, 0x374a, 0x92d2, 0x0, 0x1);
        gbc.writeMem(0x3c9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x90d1);
        EXPECT(gbc.pc(), 0x3ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0352
        gbc.setState(0x49e9, 0x4083, 0x1f30, 0xa7bd, 0x7492, 0xed90, 0x1, 0x1);
        gbc.writeMem(0x49e9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4083);
        EXPECT(gbc.pc(), 0x49ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0353
        gbc.setState(0x109e, 0x88c, 0x6e80, 0x61b3, 0x1dee, 0x8e3b, 0x0, 0x1);
        gbc.writeMem(0x109e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x88c);
        EXPECT(gbc.pc(), 0x109f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0354
        gbc.setState(0xab58, 0xdcce, 0x3630, 0x439b, 0x7d23, 0xa16c, 0x0, 0x0);
        gbc.writeMem(0xab58, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdcce);
        EXPECT(gbc.pc(), 0xab59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab58), 0x10);
        // 10 0355
        gbc.setState(0x4f57, 0xe66c, 0xf50, 0xa8ad, 0x3f2d, 0x4765, 0x0, 0x0);
        gbc.writeMem(0x4f57, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe66c);
        EXPECT(gbc.pc(), 0x4f58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0356
        gbc.setState(0x826, 0xefbe, 0x540, 0xa65b, 0x9cea, 0x43b8, 0x1, 0x0);
        gbc.writeMem(0x826, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xefbe);
        EXPECT(gbc.pc(), 0x827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0357
        gbc.setState(0xef21, 0xcbf9, 0x2af0, 0xc277, 0xf485, 0xae0b, 0x0, 0x1);
        gbc.writeMem(0xef21, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xcbf9);
        EXPECT(gbc.pc(), 0xef22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef21), 0x10);
        // 10 0359
        gbc.setState(0x78ad, 0x9081, 0xd10, 0xdb52, 0xc909, 0xe0d0, 0x1, 0x1);
        gbc.writeMem(0x78ad, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9081);
        EXPECT(gbc.pc(), 0x78ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 035A
        gbc.setState(0xd981, 0x3a97, 0xa460, 0xd202, 0x5453, 0x7570, 0x0, 0x0);
        gbc.writeMem(0xd981, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3a97);
        EXPECT(gbc.pc(), 0xd982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd981), 0x10);
        // 10 035B
        gbc.setState(0x87ee, 0x6bb0, 0x90b0, 0x2dbb, 0xf20a, 0x24d5, 0x1, 0x0);
        gbc.writeMem(0x87ee, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6bb0);
        EXPECT(gbc.pc(), 0x87ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ee), 0x10);
        // 10 035D
        gbc.setState(0x8f4d, 0x8839, 0xc2f0, 0xb6e8, 0xe88, 0x104a, 0x1, 0x1);
        gbc.writeMem(0x8f4d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8839);
        EXPECT(gbc.pc(), 0x8f4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f4d), 0x10);
        // 10 035E
        gbc.setState(0x44b6, 0xd0cf, 0x3d20, 0x92c4, 0x9b3c, 0x22a3, 0x1, 0x1);
        gbc.writeMem(0x44b6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd0cf);
        EXPECT(gbc.pc(), 0x44b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 035F
        gbc.setState(0x973c, 0x414, 0x58c0, 0xd1f8, 0xb30d, 0x61e0, 0x1, 0x1);
        gbc.writeMem(0x973c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x414);
        EXPECT(gbc.pc(), 0x973d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x973c), 0x10);
        // 10 0360
        gbc.setState(0x7796, 0xe738, 0x2800, 0x4ece, 0x1cd7, 0xa0ec, 0x0, 0x1);
        gbc.writeMem(0x7796, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe738);
        EXPECT(gbc.pc(), 0x7797);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0361
        gbc.setState(0x9ad9, 0xee2, 0x1df0, 0x150c, 0x57ef, 0x4cf4, 0x1, 0x0);
        gbc.writeMem(0x9ad9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xee2);
        EXPECT(gbc.pc(), 0x9ada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ad9), 0x10);
        // 10 0362
        gbc.setState(0xcc87, 0xa62a, 0x8940, 0xb2a9, 0xc764, 0xf552, 0x1, 0x0);
        gbc.writeMem(0xcc87, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa62a);
        EXPECT(gbc.pc(), 0xcc88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc87), 0x10);
        // 10 0363
        gbc.setState(0x45de, 0x58e3, 0xe740, 0x89a6, 0xae81, 0x4b98, 0x1, 0x1);
        gbc.writeMem(0x45de, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x58e3);
        EXPECT(gbc.pc(), 0x45df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0365
        gbc.setState(0x7fe1, 0x50c8, 0x7200, 0xcf52, 0x2de1, 0xf32d, 0x0, 0x0);
        gbc.writeMem(0x7fe1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x50c8);
        EXPECT(gbc.pc(), 0x7fe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0366
        gbc.setState(0x148, 0xb384, 0x5c40, 0x7003, 0x2869, 0x3804, 0x0, 0x0);
        gbc.writeMem(0x148, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb384);
        EXPECT(gbc.pc(), 0x149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0367
        gbc.setState(0x675d, 0x7a74, 0x86f0, 0x5b1e, 0xd8e1, 0xdf40, 0x1, 0x0);
        gbc.writeMem(0x675d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7a74);
        EXPECT(gbc.pc(), 0x675e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0368
        gbc.setState(0xe44b, 0xeef, 0xf10, 0x4d7c, 0x1148, 0xe321, 0x1, 0x1);
        gbc.writeMem(0xe44b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xeef);
        EXPECT(gbc.pc(), 0xe44c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe44b), 0x10);
        // 10 0369
        gbc.setState(0xd0fd, 0x273c, 0x8540, 0xdad9, 0x5b49, 0x831e, 0x1, 0x1);
        gbc.writeMem(0xd0fd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x273c);
        EXPECT(gbc.pc(), 0xd0fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0fd), 0x10);
        // 10 036A
        gbc.setState(0x5237, 0x450c, 0x56a0, 0x631f, 0xf198, 0xed9a, 0x0, 0x1);
        gbc.writeMem(0x5237, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x450c);
        EXPECT(gbc.pc(), 0x5238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 036B
        gbc.setState(0x5ba6, 0x845a, 0xd930, 0x163, 0xf5f7, 0xd5aa, 0x1, 0x0);
        gbc.writeMem(0x5ba6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x845a);
        EXPECT(gbc.pc(), 0x5ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 036D
        gbc.setState(0xd79f, 0xca78, 0x97b0, 0xd266, 0xaccb, 0x5fdf, 0x0, 0x0);
        gbc.writeMem(0xd79f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xca78);
        EXPECT(gbc.pc(), 0xd7a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd79f), 0x10);
        // 10 036E
        gbc.setState(0x399c, 0x7a4b, 0x6a00, 0x189a, 0x1993, 0x36db, 0x1, 0x0);
        gbc.writeMem(0x399c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7a4b);
        EXPECT(gbc.pc(), 0x399d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 036F
        gbc.setState(0xa185, 0xad85, 0x3410, 0x76ef, 0xb95c, 0x21a0, 0x0, 0x0);
        gbc.writeMem(0xa185, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xad85);
        EXPECT(gbc.pc(), 0xa186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa185), 0x10);
        // 10 0370
        gbc.setState(0xc077, 0x1fd5, 0x2480, 0xcb59, 0xaee0, 0x5c6d, 0x0, 0x1);
        gbc.writeMem(0xc077, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1fd5);
        EXPECT(gbc.pc(), 0xc078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc077), 0x10);
        // 10 0371
        gbc.setState(0xde07, 0x7c46, 0xf510, 0xd908, 0xf8b9, 0x7c92, 0x1, 0x0);
        gbc.writeMem(0xde07, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7c46);
        EXPECT(gbc.pc(), 0xde08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde07), 0x10);
        // 10 0372
        gbc.setState(0x6b80, 0xacf7, 0x2aa0, 0x53f8, 0x4b32, 0x4577, 0x1, 0x1);
        gbc.writeMem(0x6b80, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xacf7);
        EXPECT(gbc.pc(), 0x6b81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0373
        gbc.setState(0x894b, 0xcc81, 0x4000, 0x5318, 0x41d8, 0x30a0, 0x1, 0x0);
        gbc.writeMem(0x894b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xcc81);
        EXPECT(gbc.pc(), 0x894c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x894b), 0x10);
        // 10 0374
        gbc.setState(0x1d24, 0x36f6, 0x9530, 0x1af7, 0xcabd, 0x4cf6, 0x0, 0x1);
        gbc.writeMem(0x1d24, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x36f6);
        EXPECT(gbc.pc(), 0x1d25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0375
        gbc.setState(0x47a8, 0x80c5, 0x7d30, 0x85a6, 0xdac1, 0x21b3, 0x1, 0x0);
        gbc.writeMem(0x47a8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x80c5);
        EXPECT(gbc.pc(), 0x47a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0376
        gbc.setState(0xe5c, 0x14af, 0x3640, 0x17b1, 0xcc76, 0xd214, 0x1, 0x0);
        gbc.writeMem(0xe5c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x14af);
        EXPECT(gbc.pc(), 0xe5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0377
        gbc.setState(0x5ed2, 0xb543, 0x39d0, 0x8c9f, 0x3bfa, 0x20d8, 0x0, 0x0);
        gbc.writeMem(0x5ed2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xb543);
        EXPECT(gbc.pc(), 0x5ed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0378
        gbc.setState(0x8546, 0xa9eb, 0x3bf0, 0x98db, 0x5b01, 0x92b0, 0x1, 0x0);
        gbc.writeMem(0x8546, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa9eb);
        EXPECT(gbc.pc(), 0x8547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8546), 0x10);
        // 10 0379
        gbc.setState(0x9cd4, 0x9b1b, 0x6b10, 0xb655, 0xd0c1, 0x69bd, 0x0, 0x0);
        gbc.writeMem(0x9cd4, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9b1b);
        EXPECT(gbc.pc(), 0x9cd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cd4), 0x10);
        // 10 037A
        gbc.setState(0x18a2, 0xac11, 0xc500, 0x406e, 0x74b3, 0x37b4, 0x0, 0x1);
        gbc.writeMem(0x18a2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xac11);
        EXPECT(gbc.pc(), 0x18a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 037B
        gbc.setState(0xa77d, 0x1fa0, 0x4790, 0x85a0, 0xfc7a, 0x19fd, 0x1, 0x1);
        gbc.writeMem(0xa77d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1fa0);
        EXPECT(gbc.pc(), 0xa77e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa77d), 0x10);
        // 10 037C
        gbc.setState(0xa3a5, 0xd499, 0x6c80, 0x81c4, 0x4a34, 0xc1d, 0x0, 0x1);
        gbc.writeMem(0xa3a5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd499);
        EXPECT(gbc.pc(), 0xa3a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3a5), 0x10);
        // 10 037D
        gbc.setState(0x422a, 0xcf1f, 0x24b0, 0x5e78, 0x6e55, 0x6aab, 0x0, 0x0);
        gbc.writeMem(0x422a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcf1f);
        EXPECT(gbc.pc(), 0x422b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 037E
        gbc.setState(0xaf4, 0x5c2a, 0xb720, 0x9749, 0x179a, 0x86bc, 0x1, 0x0);
        gbc.writeMem(0xaf4, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5c2a);
        EXPECT(gbc.pc(), 0xaf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 037F
        gbc.setState(0x5a00, 0xf6a3, 0x94f0, 0x9c76, 0xa12b, 0xec4c, 0x1, 0x1);
        gbc.writeMem(0x5a00, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf6a3);
        EXPECT(gbc.pc(), 0x5a01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 0380
        gbc.setState(0xbc7f, 0x7fcc, 0xb8a0, 0xb5d, 0xd622, 0xe4c4, 0x0, 0x1);
        gbc.writeMem(0xbc7f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7fcc);
        EXPECT(gbc.pc(), 0xbc80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7f), 0x10);
        // 10 0381
        gbc.setState(0x343, 0x8d52, 0x20e0, 0xfa8e, 0x4d9e, 0x6702, 0x0, 0x1);
        gbc.writeMem(0x343, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8d52);
        EXPECT(gbc.pc(), 0x344);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 0383
        gbc.setState(0x1aa2, 0xdd58, 0x8e50, 0x6c37, 0xf16a, 0x7a45, 0x0, 0x1);
        gbc.writeMem(0x1aa2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xdd58);
        EXPECT(gbc.pc(), 0x1aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0386
        gbc.setState(0x96, 0x7d6d, 0x2d50, 0x696e, 0xff07, 0x10d1, 0x1, 0x1);
        gbc.writeMem(0x96, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7d6d);
        EXPECT(gbc.pc(), 0x97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0387
        gbc.setState(0x24f3, 0xa967, 0xddd0, 0x72d1, 0x64ef, 0xca23, 0x0, 0x1);
        gbc.writeMem(0x24f3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa967);
        EXPECT(gbc.pc(), 0x24f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0388
        gbc.setState(0x7270, 0x4ff1, 0x7550, 0xb515, 0x63ce, 0xa73b, 0x1, 0x1);
        gbc.writeMem(0x7270, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4ff1);
        EXPECT(gbc.pc(), 0x7271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0389
        gbc.setState(0x2a76, 0xde4c, 0x5230, 0x8d74, 0xdedb, 0x7fe5, 0x1, 0x1);
        gbc.writeMem(0x2a76, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xde4c);
        EXPECT(gbc.pc(), 0x2a77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 038A
        gbc.setState(0xef6b, 0x83cf, 0x8b30, 0x7fd4, 0xa663, 0x8c58, 0x0, 0x0);
        gbc.writeMem(0xef6b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x83cf);
        EXPECT(gbc.pc(), 0xef6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef6b), 0x10);
        // 10 038C
        gbc.setState(0xe429, 0xcd15, 0x2560, 0x3595, 0x104b, 0x2167, 0x0, 0x1);
        gbc.writeMem(0xe429, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xcd15);
        EXPECT(gbc.pc(), 0xe42a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe429), 0x10);
        // 10 038D
        gbc.setState(0x62ad, 0xba52, 0xa770, 0x16d8, 0xbcc3, 0x55c6, 0x1, 0x0);
        gbc.writeMem(0x62ad, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xba52);
        EXPECT(gbc.pc(), 0x62ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 038E
        gbc.setState(0xc366, 0x52bf, 0x3880, 0x2983, 0x86b8, 0x5a5a, 0x0, 0x0);
        gbc.writeMem(0xc366, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x52bf);
        EXPECT(gbc.pc(), 0xc367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc366), 0x10);
        // 10 038F
        gbc.setState(0x8cfa, 0x7b4b, 0xeb10, 0x9d2e, 0x179d, 0xc28f, 0x1, 0x0);
        gbc.writeMem(0x8cfa, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7b4b);
        EXPECT(gbc.pc(), 0x8cfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cfa), 0x10);
        // 10 0391
        gbc.setState(0x7e41, 0x8561, 0xe590, 0x86cb, 0x59db, 0xe740, 0x0, 0x0);
        gbc.writeMem(0x7e41, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8561);
        EXPECT(gbc.pc(), 0x7e42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 0392
        gbc.setState(0xcfcd, 0x48c, 0xdd80, 0xd18e, 0x2be6, 0x426f, 0x0, 0x0);
        gbc.writeMem(0xcfcd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x48c);
        EXPECT(gbc.pc(), 0xcfce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfcd), 0x10);
        // 10 0393
        gbc.setState(0x58bb, 0xb065, 0x7500, 0x698e, 0x6d3, 0xb874, 0x1, 0x1);
        gbc.writeMem(0x58bb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb065);
        EXPECT(gbc.pc(), 0x58bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0394
        gbc.setState(0xe84d, 0x317b, 0x6730, 0x3fe, 0x58dc, 0xb324, 0x1, 0x1);
        gbc.writeMem(0xe84d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x317b);
        EXPECT(gbc.pc(), 0xe84e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe84d), 0x10);
        // 10 0395
        gbc.setState(0xada1, 0xbbd2, 0x6940, 0x3682, 0x5c1f, 0x3c45, 0x0, 0x1);
        gbc.writeMem(0xada1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xbbd2);
        EXPECT(gbc.pc(), 0xada2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada1), 0x10);
        // 10 0396
        gbc.setState(0xeb9c, 0x2ef8, 0xe870, 0x8bcf, 0x592c, 0x45fd, 0x1, 0x1);
        gbc.writeMem(0xeb9c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2ef8);
        EXPECT(gbc.pc(), 0xeb9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb9c), 0x10);
        // 10 0397
        gbc.setState(0xeb4d, 0x6b9b, 0xaef0, 0xd440, 0x3fbb, 0xa841, 0x0, 0x1);
        gbc.writeMem(0xeb4d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6b9b);
        EXPECT(gbc.pc(), 0xeb4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb4d), 0x10);
        // 10 0398
        gbc.setState(0x4d16, 0x55b, 0x1480, 0xbf3a, 0xb4e5, 0x78d8, 0x0, 0x1);
        gbc.writeMem(0x4d16, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x55b);
        EXPECT(gbc.pc(), 0x4d17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 0399
        gbc.setState(0xc0bc, 0x3597, 0x9e30, 0xbf8b, 0x9998, 0x8979, 0x1, 0x1);
        gbc.writeMem(0xc0bc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3597);
        EXPECT(gbc.pc(), 0xc0bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0bc), 0x10);
        // 10 039A
        gbc.setState(0x295, 0x2fc7, 0x9d10, 0x9574, 0x1961, 0xe837, 0x0, 0x0);
        gbc.writeMem(0x295, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2fc7);
        EXPECT(gbc.pc(), 0x296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 039B
        gbc.setState(0xdd14, 0x7d5b, 0x6e30, 0x921, 0x6505, 0xbb8d, 0x0, 0x0);
        gbc.writeMem(0xdd14, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7d5b);
        EXPECT(gbc.pc(), 0xdd15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd14), 0x10);
        // 10 039C
        gbc.setState(0xdafc, 0x9bfa, 0x35b0, 0x5a9f, 0xd212, 0xdea8, 0x1, 0x0);
        gbc.writeMem(0xdafc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9bfa);
        EXPECT(gbc.pc(), 0xdafd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdafc), 0x10);
        // 10 039D
        gbc.setState(0x1e3d, 0x7d98, 0x1cf0, 0xf985, 0xd940, 0x4ed0, 0x0, 0x1);
        gbc.writeMem(0x1e3d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7d98);
        EXPECT(gbc.pc(), 0x1e3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 039E
        gbc.setState(0x360c, 0x6718, 0xd460, 0x5b21, 0xf326, 0x1bda, 0x0, 0x1);
        gbc.writeMem(0x360c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6718);
        EXPECT(gbc.pc(), 0x360d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 039F
        gbc.setState(0x9a7d, 0x4a74, 0x4540, 0xcf90, 0x49c6, 0xd64c, 0x0, 0x0);
        gbc.writeMem(0x9a7d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4a74);
        EXPECT(gbc.pc(), 0x9a7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a7d), 0x10);
        // 10 03A0
        gbc.setState(0x80f, 0xdf71, 0x1c70, 0x7a03, 0x83e6, 0x6f32, 0x1, 0x1);
        gbc.writeMem(0x80f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xdf71);
        EXPECT(gbc.pc(), 0x810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 03A3
        gbc.setState(0xbcdf, 0x1397, 0x7ae0, 0x97a0, 0xe6d6, 0x562f, 0x1, 0x1);
        gbc.writeMem(0xbcdf, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1397);
        EXPECT(gbc.pc(), 0xbce0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcdf), 0x10);
        // 10 03A4
        gbc.setState(0xcb32, 0x3ba, 0xdd50, 0x73a6, 0x8ed4, 0x894b, 0x1, 0x0);
        gbc.writeMem(0xcb32, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3ba);
        EXPECT(gbc.pc(), 0xcb33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb32), 0x10);
        // 10 03A5
        gbc.setState(0x4b59, 0x5bca, 0x6b90, 0x7bc4, 0xbbf0, 0xa44a, 0x1, 0x0);
        gbc.writeMem(0x4b59, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5bca);
        EXPECT(gbc.pc(), 0x4b5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 03A7
        gbc.setState(0xce7d, 0x87b5, 0x8340, 0x4b30, 0xf228, 0x30cd, 0x0, 0x1);
        gbc.writeMem(0xce7d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x87b5);
        EXPECT(gbc.pc(), 0xce7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce7d), 0x10);
        // 10 03A8
        gbc.setState(0xa9ea, 0x2ab, 0xa3d0, 0xcf4c, 0xbee5, 0x84fe, 0x0, 0x1);
        gbc.writeMem(0xa9ea, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2ab);
        EXPECT(gbc.pc(), 0xa9eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ea), 0x10);
        // 10 03A9
        gbc.setState(0xe379, 0xeba7, 0x7d60, 0x244d, 0xa05c, 0xac03, 0x1, 0x1);
        gbc.writeMem(0xe379, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xeba7);
        EXPECT(gbc.pc(), 0xe37a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe379), 0x10);
        // 10 03AA
        gbc.setState(0x2c99, 0xcb4f, 0xcbb0, 0x96dd, 0x7265, 0x1824, 0x0, 0x0);
        gbc.writeMem(0x2c99, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcb4f);
        EXPECT(gbc.pc(), 0x2c9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 03AB
        gbc.setState(0xdea2, 0xcc79, 0x1ad0, 0xc725, 0x1f28, 0x35d8, 0x1, 0x0);
        gbc.writeMem(0xdea2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xcc79);
        EXPECT(gbc.pc(), 0xdea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdea2), 0x10);
        // 10 03AC
        gbc.setState(0x3b2c, 0x6432, 0xb220, 0x967b, 0x4531, 0x845d, 0x1, 0x1);
        gbc.writeMem(0x3b2c, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6432);
        EXPECT(gbc.pc(), 0x3b2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 03AD
        gbc.setState(0xa299, 0x9d69, 0x4880, 0xa60b, 0x80dc, 0xff6a, 0x0, 0x1);
        gbc.writeMem(0xa299, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9d69);
        EXPECT(gbc.pc(), 0xa29a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa299), 0x10);
        // 10 03AE
        gbc.setState(0xddbe, 0x411a, 0x62a0, 0xc2e6, 0x636b, 0xd94a, 0x1, 0x1);
        gbc.writeMem(0xddbe, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x411a);
        EXPECT(gbc.pc(), 0xddbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddbe), 0x10);
        // 10 03AF
        gbc.setState(0x1ce1, 0xa5b7, 0x82f0, 0xd330, 0xb1b7, 0x9713, 0x0, 0x1);
        gbc.writeMem(0x1ce1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa5b7);
        EXPECT(gbc.pc(), 0x1ce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 03B0
        gbc.setState(0xc6ed, 0xdc2b, 0x31b0, 0xf896, 0xa23e, 0xc89c, 0x0, 0x1);
        gbc.writeMem(0xc6ed, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xdc2b);
        EXPECT(gbc.pc(), 0xc6ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ed), 0x10);
        // 10 03B1
        gbc.setState(0x32bb, 0x4146, 0xbd60, 0xc705, 0x465c, 0xc88, 0x1, 0x0);
        gbc.writeMem(0x32bb, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4146);
        EXPECT(gbc.pc(), 0x32bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 03B2
        gbc.setState(0x6b8f, 0xcdfd, 0x3fe0, 0x1a26, 0x7315, 0xb259, 0x1, 0x1);
        gbc.writeMem(0x6b8f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xcdfd);
        EXPECT(gbc.pc(), 0x6b90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 03B3
        gbc.setState(0x6c75, 0xe066, 0xe740, 0x6c95, 0xcbf8, 0x6c9e, 0x1, 0x1);
        gbc.writeMem(0x6c75, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe066);
        EXPECT(gbc.pc(), 0x6c76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 03B4
        gbc.setState(0x1ec3, 0x27b8, 0x1490, 0xd3e0, 0x2739, 0xe500, 0x0, 0x1);
        gbc.writeMem(0x1ec3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x27b8);
        EXPECT(gbc.pc(), 0x1ec4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 03B5
        gbc.setState(0x3319, 0x9a06, 0x8c10, 0xc520, 0xeb79, 0x4c09, 0x1, 0x1);
        gbc.writeMem(0x3319, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9a06);
        EXPECT(gbc.pc(), 0x331a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 03B6
        gbc.setState(0x8af2, 0x7ab0, 0x9c10, 0x5e96, 0x684, 0x109b, 0x0, 0x0);
        gbc.writeMem(0x8af2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7ab0);
        EXPECT(gbc.pc(), 0x8af3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af2), 0x10);
        // 10 03B7
        gbc.setState(0xae17, 0xae2, 0xbed0, 0xaaad, 0xad7a, 0x14cd, 0x0, 0x0);
        gbc.writeMem(0xae17, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xae2);
        EXPECT(gbc.pc(), 0xae18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae17), 0x10);
        // 10 03B8
        gbc.setState(0xdcf1, 0x20af, 0x94a0, 0xa27a, 0x2bb8, 0x23c2, 0x0, 0x0);
        gbc.writeMem(0xdcf1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x20af);
        EXPECT(gbc.pc(), 0xdcf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf1), 0x10);
        // 10 03B9
        gbc.setState(0xa18a, 0x51dc, 0xcf30, 0x5db7, 0x1470, 0x1f39, 0x1, 0x0);
        gbc.writeMem(0xa18a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x51dc);
        EXPECT(gbc.pc(), 0xa18b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa18a), 0x10);
        // 10 03BA
        gbc.setState(0x2301, 0x4646, 0xee90, 0xa86e, 0xce4a, 0x61a8, 0x0, 0x0);
        gbc.writeMem(0x2301, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4646);
        EXPECT(gbc.pc(), 0x2302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 03BB
        gbc.setState(0xd3f9, 0x24d5, 0xd80, 0xd65f, 0x50fd, 0xfb9f, 0x1, 0x1);
        gbc.writeMem(0xd3f9, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x24d5);
        EXPECT(gbc.pc(), 0xd3fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3f9), 0x10);
        // 10 03BC
        gbc.setState(0x7b39, 0x3952, 0x7b80, 0x40d, 0x5c9e, 0xd71b, 0x0, 0x1);
        gbc.writeMem(0x7b39, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3952);
        EXPECT(gbc.pc(), 0x7b3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 03BD
        gbc.setState(0x629e, 0x3030, 0x15b0, 0x3e8c, 0xa537, 0xd065, 0x0, 0x1);
        gbc.writeMem(0x629e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3030);
        EXPECT(gbc.pc(), 0x629f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 03BE
        gbc.setState(0x6779, 0xebce, 0x24f0, 0xc83a, 0x8843, 0x5ccb, 0x0, 0x1);
        gbc.writeMem(0x6779, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xebce);
        EXPECT(gbc.pc(), 0x677a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 03BF
        gbc.setState(0x3b6f, 0xa8b2, 0xf320, 0x9809, 0x1b2e, 0x95ea, 0x0, 0x1);
        gbc.writeMem(0x3b6f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa8b2);
        EXPECT(gbc.pc(), 0x3b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 03C0
        gbc.setState(0xa38f, 0xedae, 0xdb00, 0x1b86, 0x1917, 0xdb3b, 0x0, 0x0);
        gbc.writeMem(0xa38f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xedae);
        EXPECT(gbc.pc(), 0xa390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa38f), 0x10);
        // 10 03C1
        gbc.setState(0x80ff, 0xf977, 0xb20, 0x3f53, 0x296a, 0x1ab7, 0x1, 0x0);
        gbc.writeMem(0x80ff, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf977);
        EXPECT(gbc.pc(), 0x8100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ff), 0x10);
        // 10 03C2
        gbc.setState(0x13e2, 0xe3, 0xa5c0, 0x3e28, 0x6290, 0xf116, 0x0, 0x0);
        gbc.writeMem(0x13e2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe3);
        EXPECT(gbc.pc(), 0x13e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 03C4
        gbc.setState(0x9ef5, 0x3937, 0xa640, 0xefa6, 0xf993, 0x496d, 0x1, 0x0);
        gbc.writeMem(0x9ef5, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3937);
        EXPECT(gbc.pc(), 0x9ef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ef5), 0x10);
        // 10 03C5
        gbc.setState(0xc8f4, 0xc5dd, 0x7110, 0x642a, 0x4d6a, 0x25d, 0x0, 0x1);
        gbc.writeMem(0xc8f4, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc5dd);
        EXPECT(gbc.pc(), 0xc8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f4), 0x10);
        // 10 03C6
        gbc.setState(0x6814, 0x9278, 0xd510, 0x611d, 0xd210, 0x66e2, 0x1, 0x1);
        gbc.writeMem(0x6814, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9278);
        EXPECT(gbc.pc(), 0x6815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 03C7
        gbc.setState(0x65b, 0x5521, 0x88e0, 0xc4a3, 0x73d5, 0x21, 0x1, 0x0);
        gbc.writeMem(0x65b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5521);
        EXPECT(gbc.pc(), 0x65c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 03C8
        gbc.setState(0x4a11, 0xe04f, 0x1760, 0xa441, 0xc368, 0x6ba9, 0x0, 0x1);
        gbc.writeMem(0x4a11, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe04f);
        EXPECT(gbc.pc(), 0x4a12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 03C9
        gbc.setState(0xba9f, 0x2eca, 0x4cd0, 0xe6e0, 0x15ff, 0xf82e, 0x0, 0x1);
        gbc.writeMem(0xba9f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2eca);
        EXPECT(gbc.pc(), 0xbaa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba9f), 0x10);
        // 10 03CA
        gbc.setState(0xb3f2, 0x6969, 0x3960, 0x3b54, 0xe574, 0x1b1e, 0x0, 0x0);
        gbc.writeMem(0xb3f2, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6969);
        EXPECT(gbc.pc(), 0xb3f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3f2), 0x10);
        // 10 03CB
        gbc.setState(0x1dc1, 0x526f, 0x6b60, 0xfa48, 0x1b9c, 0xab17, 0x1, 0x0);
        gbc.writeMem(0x1dc1, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x526f);
        EXPECT(gbc.pc(), 0x1dc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 03CC
        gbc.setState(0xd61, 0x1e59, 0xde40, 0xc546, 0x9670, 0xdc82, 0x0, 0x0);
        gbc.writeMem(0xd61, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1e59);
        EXPECT(gbc.pc(), 0xd62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 03CD
        gbc.setState(0x8474, 0x66ea, 0x970, 0xb0fa, 0x6004, 0x4e32, 0x1, 0x0);
        gbc.writeMem(0x8474, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x66ea);
        EXPECT(gbc.pc(), 0x8475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8474), 0x10);
        // 10 03CE
        gbc.setState(0x68c3, 0x8105, 0xfdc0, 0xe4eb, 0x8e98, 0x1799, 0x1, 0x1);
        gbc.writeMem(0x68c3, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8105);
        EXPECT(gbc.pc(), 0x68c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 03D0
        gbc.setState(0xe394, 0x44c9, 0x8770, 0x2419, 0x5b6a, 0xd7a9, 0x1, 0x1);
        gbc.writeMem(0xe394, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x44c9);
        EXPECT(gbc.pc(), 0xe395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe394), 0x10);
        // 10 03D1
        gbc.setState(0x6310, 0x8912, 0x3cd0, 0x6b2, 0x751f, 0x87d8, 0x0, 0x1);
        gbc.writeMem(0x6310, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8912);
        EXPECT(gbc.pc(), 0x6311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 03D2
        gbc.setState(0x4559, 0xa89, 0xf2b0, 0xab99, 0x4f4b, 0x7c45, 0x1, 0x1);
        gbc.writeMem(0x4559, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa89);
        EXPECT(gbc.pc(), 0x455a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 03D3
        gbc.setState(0xa5d8, 0xe1d9, 0x6e50, 0xa1a0, 0xd5ae, 0xefaf, 0x0, 0x1);
        gbc.writeMem(0xa5d8, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe1d9);
        EXPECT(gbc.pc(), 0xa5d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d8), 0x10);
        // 10 03D4
        gbc.setState(0x9df7, 0x845e, 0x9f00, 0x9c8c, 0x6a89, 0x1811, 0x1, 0x0);
        gbc.writeMem(0x9df7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x845e);
        EXPECT(gbc.pc(), 0x9df8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df7), 0x10);
        // 10 03D5
        gbc.setState(0x8173, 0x4c2e, 0x64c0, 0x7887, 0xac34, 0x83a, 0x0, 0x0);
        gbc.writeMem(0x8173, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4c2e);
        EXPECT(gbc.pc(), 0x8174);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8173), 0x10);
        // 10 03D6
        gbc.setState(0xb51e, 0x468a, 0x1ab0, 0x7b52, 0xf7f8, 0xad7b, 0x1, 0x1);
        gbc.writeMem(0xb51e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x468a);
        EXPECT(gbc.pc(), 0xb51f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb51e), 0x10);
        // 10 03D7
        gbc.setState(0x173d, 0x63a2, 0xf070, 0x716f, 0xf790, 0x92f7, 0x0, 0x1);
        gbc.writeMem(0x173d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x63a2);
        EXPECT(gbc.pc(), 0x173e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 03D8
        gbc.setState(0xe8c6, 0xdf24, 0x9dc0, 0xa9de, 0xa74c, 0xb6f9, 0x1, 0x0);
        gbc.writeMem(0xe8c6, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xdf24);
        EXPECT(gbc.pc(), 0xe8c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c6), 0x10);
        // 10 03D9
        gbc.setState(0xcb67, 0xd879, 0x9c20, 0xa0fb, 0xab10, 0x1735, 0x1, 0x1);
        gbc.writeMem(0xcb67, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd879);
        EXPECT(gbc.pc(), 0xcb68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb67), 0x10);
        // 10 03DB
        gbc.setState(0xd9aa, 0xf05b, 0xe9a0, 0x2004, 0xb647, 0xc724, 0x0, 0x0);
        gbc.writeMem(0xd9aa, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf05b);
        EXPECT(gbc.pc(), 0xd9ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9aa), 0x10);
        // 10 03DC
        gbc.setState(0x1b5b, 0xfb67, 0x9af0, 0x9b00, 0xd12b, 0x6cca, 0x1, 0x0);
        gbc.writeMem(0x1b5b, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xfb67);
        EXPECT(gbc.pc(), 0x1b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 03DD
        gbc.setState(0x1409, 0x47d4, 0x1c50, 0xf47b, 0x1502, 0xede, 0x0, 0x0);
        gbc.writeMem(0x1409, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x47d4);
        EXPECT(gbc.pc(), 0x140a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 03DE
        gbc.setState(0x88dc, 0x1450, 0x1e90, 0x2f7c, 0x8ab6, 0x6c83, 0x1, 0x1);
        gbc.writeMem(0x88dc, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1450);
        EXPECT(gbc.pc(), 0x88dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88dc), 0x10);
        // 10 03DF
        gbc.setState(0x279e, 0xba01, 0xeeb0, 0x7135, 0xaab0, 0x5d92, 0x0, 0x1);
        gbc.writeMem(0x279e, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xba01);
        EXPECT(gbc.pc(), 0x279f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 03E1
        gbc.setState(0xe3fe, 0x855b, 0x3150, 0x586b, 0xba6d, 0xd832, 0x0, 0x1);
        gbc.writeMem(0xe3fe, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x855b);
        EXPECT(gbc.pc(), 0xe3ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3fe), 0x10);
        // 10 03E2
        gbc.setState(0x3ee7, 0x39dd, 0x9000, 0xf1a7, 0x9891, 0x3118, 0x0, 0x1);
        gbc.writeMem(0x3ee7, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x39dd);
        EXPECT(gbc.pc(), 0x3ee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 10 03E3
        gbc.setState(0x2b38, 0xe795, 0x550, 0x46c4, 0x5c7f, 0xc03c, 0x0, 0x0);
        gbc.writeMem(0x2b38, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe795);
        EXPECT(gbc.pc(), 0x2b39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 10 03E4
        gbc.setState(0xca0, 0x945, 0xece0, 0x6961, 0x30d8, 0xca24, 0x1, 0x1);
        gbc.writeMem(0xca0, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x945);
        EXPECT(gbc.pc(), 0xca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 10 03E5
        gbc.setState(0x6f7a, 0x4668, 0xe030, 0x165d, 0x428a, 0x2367, 0x1, 0x0);
        gbc.writeMem(0x6f7a, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4668);
        EXPECT(gbc.pc(), 0x6f7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 10 03E6
        gbc.setState(0x9669, 0xa6f3, 0xa6f0, 0xb44a, 0x66c, 0xe9c3, 0x0, 0x0);
        gbc.writeMem(0x9669, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa6f3);
        EXPECT(gbc.pc(), 0x966a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9669), 0x10);
        // 10 03E7
        gbc.setState(0xcb02, 0x3fe6, 0x8090, 0xcac0, 0xc0f6, 0xadb9, 0x1, 0x0);
        gbc.writeMem(0xcb02, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3fe6);
        EXPECT(gbc.pc(), 0xcb03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb02), 0x10);
    }
