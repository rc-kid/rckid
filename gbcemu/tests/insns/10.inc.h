    TEST(gbcemu, opcode_10) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 10 0000
        gbc.setState(0xeb22, 0x5a32, 0xd150, 0x74ad, 0xca34, 0x5d13, 0x0, 0x1);
        gbc.writeMem(0xeb22, { 0x10 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5a32, gbc.sp());
        EXPECT(0xeb23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xeb22));
        // 10 0001
        gbc.setState(0x8c1f, 0x5089, 0x1230, 0xfbb8, 0x59b8, 0x8524, 0x0, 0x0);
        gbc.writeMem(0x8c1f, { 0x10 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5089, gbc.sp());
        EXPECT(0x8c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8c1f));
        // 10 0002
        gbc.setState(0x5231, 0x60ef, 0x8f50, 0xc022, 0xa5c7, 0xf5e0, 0x0, 0x1);
        gbc.writeMem(0x5231, { 0x10 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x60ef, gbc.sp());
        EXPECT(0x5232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0003
        gbc.setState(0x7957, 0xc37d, 0xd520, 0xc6f9, 0xbf66, 0x69eb, 0x1, 0x0);
        gbc.writeMem(0x7957, { 0x10 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc37d, gbc.sp());
        EXPECT(0x7958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0004
        gbc.setState(0x2761, 0xab16, 0x5f40, 0xaffe, 0x206a, 0x2250, 0x1, 0x1);
        gbc.writeMem(0x2761, { 0x10 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xab16, gbc.sp());
        EXPECT(0x2762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0005
        gbc.setState(0x13cd, 0xcb30, 0x4bc0, 0x4683, 0x8125, 0x109d, 0x0, 0x0);
        gbc.writeMem(0x13cd, { 0x10 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcb30, gbc.sp());
        EXPECT(0x13ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0006
        gbc.setState(0xacac, 0x85a2, 0xe760, 0x63e1, 0x61a3, 0x662a, 0x1, 0x0);
        gbc.writeMem(0xacac, { 0x10 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x85a2, gbc.sp());
        EXPECT(0xacad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xacac));
        // 10 0007
        gbc.setState(0xa6f9, 0x43b2, 0x47a0, 0x97de, 0xb213, 0xf179, 0x1, 0x1);
        gbc.writeMem(0xa6f9, { 0x10 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x43b2, gbc.sp());
        EXPECT(0xa6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa6f9));
        // 10 0008
        gbc.setState(0x1a9c, 0xe9e9, 0x8900, 0x4aea, 0xe87d, 0x29e3, 0x0, 0x0);
        gbc.writeMem(0x1a9c, { 0x10 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe9e9, gbc.sp());
        EXPECT(0x1a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0009
        gbc.setState(0x1ddb, 0x2216, 0x6010, 0x5fc2, 0xe6e4, 0xa408, 0x1, 0x1);
        gbc.writeMem(0x1ddb, { 0x10 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2216, gbc.sp());
        EXPECT(0x1ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 000A
        gbc.setState(0x57ee, 0x9dc2, 0x13e0, 0xec0, 0xd610, 0x1a5, 0x0, 0x1);
        gbc.writeMem(0x57ee, { 0x10 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9dc2, gbc.sp());
        EXPECT(0x57ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 000B
        gbc.setState(0xc425, 0xe16c, 0x1a00, 0x3e40, 0x9a40, 0x1354, 0x1, 0x1);
        gbc.writeMem(0xc425, { 0x10 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe16c, gbc.sp());
        EXPECT(0xc426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc425));
        // 10 000C
        gbc.setState(0xd969, 0x5ec3, 0x3940, 0x913f, 0xd3b, 0xc321, 0x1, 0x0);
        gbc.writeMem(0xd969, { 0x10 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5ec3, gbc.sp());
        EXPECT(0xd96a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd969));
        // 10 000D
        gbc.setState(0x2192, 0xc218, 0x1e0, 0xccb0, 0x3240, 0x2701, 0x0, 0x1);
        gbc.writeMem(0x2192, { 0x10 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc218, gbc.sp());
        EXPECT(0x2193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 000E
        gbc.setState(0xdbbc, 0x56d4, 0x4330, 0xcc60, 0xa2d6, 0x52d5, 0x1, 0x1);
        gbc.writeMem(0xdbbc, { 0x10 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x56d4, gbc.sp());
        EXPECT(0xdbbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdbbc));
        // 10 000F
        gbc.setState(0x9a85, 0x3a97, 0x19e0, 0xb15a, 0xcc4c, 0xcb4e, 0x0, 0x0);
        gbc.writeMem(0x9a85, { 0x10 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3a97, gbc.sp());
        EXPECT(0x9a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9a85));
        // 10 0010
        gbc.setState(0x8995, 0xb780, 0x7e0, 0x7cc2, 0x83b4, 0xea51, 0x1, 0x1);
        gbc.writeMem(0x8995, { 0x10 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb780, gbc.sp());
        EXPECT(0x8996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8995));
        // 10 0011
        gbc.setState(0x3a21, 0x1ccd, 0x1520, 0x1d3c, 0xf62c, 0x715e, 0x1, 0x0);
        gbc.writeMem(0x3a21, { 0x10 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1ccd, gbc.sp());
        EXPECT(0x3a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0012
        gbc.setState(0x3166, 0x8cb3, 0x7c50, 0xe72e, 0x9ed0, 0x9be5, 0x0, 0x1);
        gbc.writeMem(0x3166, { 0x10 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8cb3, gbc.sp());
        EXPECT(0x3167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0013
        gbc.setState(0x6527, 0xbcaa, 0x41a0, 0x8b, 0x3447, 0xbe93, 0x0, 0x0);
        gbc.writeMem(0x6527, { 0x10 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbcaa, gbc.sp());
        EXPECT(0x6528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0014
        gbc.setState(0x2dfb, 0xc616, 0xd310, 0xe561, 0x9a85, 0xce9c, 0x0, 0x0);
        gbc.writeMem(0x2dfb, { 0x10 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc616, gbc.sp());
        EXPECT(0x2dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0015
        gbc.setState(0x7758, 0x1511, 0x7320, 0x3625, 0xc988, 0x7d5b, 0x1, 0x0);
        gbc.writeMem(0x7758, { 0x10 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1511, gbc.sp());
        EXPECT(0x7759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0016
        gbc.setState(0x6287, 0xf4a0, 0xcb80, 0xf06c, 0x5839, 0xe7f5, 0x1, 0x1);
        gbc.writeMem(0x6287, { 0x10 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf4a0, gbc.sp());
        EXPECT(0x6288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0017
        gbc.setState(0x726c, 0xc40a, 0xf0c0, 0xc31d, 0xdc29, 0xbf04, 0x1, 0x0);
        gbc.writeMem(0x726c, { 0x10 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc40a, gbc.sp());
        EXPECT(0x726d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0018
        gbc.setState(0x66f2, 0x71e2, 0x8490, 0xe516, 0xc172, 0x56c5, 0x0, 0x1);
        gbc.writeMem(0x66f2, { 0x10 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x71e2, gbc.sp());
        EXPECT(0x66f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0019
        gbc.setState(0xa367, 0xb05b, 0xc090, 0xbeff, 0xa29e, 0x259, 0x1, 0x1);
        gbc.writeMem(0xa367, { 0x10 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb05b, gbc.sp());
        EXPECT(0xa368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa367));
        // 10 001A
        gbc.setState(0x193b, 0x27b5, 0x4850, 0x2042, 0x9cc3, 0x3cf4, 0x0, 0x1);
        gbc.writeMem(0x193b, { 0x10 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x27b5, gbc.sp());
        EXPECT(0x193c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 001B
        gbc.setState(0x3b8a, 0xc8e4, 0xda90, 0x747b, 0xeee5, 0x211f, 0x1, 0x0);
        gbc.writeMem(0x3b8a, { 0x10 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc8e4, gbc.sp());
        EXPECT(0x3b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 001C
        gbc.setState(0xe8ad, 0x31db, 0x20, 0x7240, 0x79bb, 0x929a, 0x0, 0x0);
        gbc.writeMem(0xe8ad, { 0x10 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x31db, gbc.sp());
        EXPECT(0xe8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe8ad));
        // 10 001D
        gbc.setState(0xa549, 0x3769, 0xc560, 0xe8d5, 0x2eff, 0xc227, 0x0, 0x0);
        gbc.writeMem(0xa549, { 0x10 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3769, gbc.sp());
        EXPECT(0xa54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa549));
        // 10 001E
        gbc.setState(0xd031, 0x2d59, 0xc770, 0xd508, 0xe41f, 0xbfb7, 0x1, 0x1);
        gbc.writeMem(0xd031, { 0x10 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2d59, gbc.sp());
        EXPECT(0xd032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd031));
        // 10 001F
        gbc.setState(0xc172, 0x3a38, 0x8000, 0x7151, 0xd4d9, 0x4db7, 0x0, 0x1);
        gbc.writeMem(0xc172, { 0x10 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3a38, gbc.sp());
        EXPECT(0xc173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc172));
        // 10 0020
        gbc.setState(0xaa02, 0x8b7b, 0x5b10, 0xc7dd, 0x1088, 0xf9af, 0x1, 0x1);
        gbc.writeMem(0xaa02, { 0x10 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8b7b, gbc.sp());
        EXPECT(0xaa03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xaa02));
        // 10 0021
        gbc.setState(0xc14b, 0x1976, 0x69a0, 0xcc86, 0x12d0, 0x488a, 0x0, 0x0);
        gbc.writeMem(0xc14b, { 0x10 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1976, gbc.sp());
        EXPECT(0xc14c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc14b));
        // 10 0022
        gbc.setState(0x95b9, 0xe8e7, 0x1800, 0x24a6, 0xe535, 0x988f, 0x0, 0x1);
        gbc.writeMem(0x95b9, { 0x10 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe8e7, gbc.sp());
        EXPECT(0x95ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x95b9));
        // 10 0023
        gbc.setState(0xc4dc, 0x293e, 0x74b0, 0xa17d, 0xac8c, 0x775c, 0x0, 0x0);
        gbc.writeMem(0xc4dc, { 0x10 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x293e, gbc.sp());
        EXPECT(0xc4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc4dc));
        // 10 0024
        gbc.setState(0x95b5, 0x8b78, 0x88c0, 0xfd47, 0x76c5, 0x45eb, 0x0, 0x1);
        gbc.writeMem(0x95b5, { 0x10 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8b78, gbc.sp());
        EXPECT(0x95b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x95b5));
        // 10 0025
        gbc.setState(0xb606, 0x3a05, 0x9900, 0x937, 0x3930, 0xfddd, 0x1, 0x0);
        gbc.writeMem(0xb606, { 0x10 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3a05, gbc.sp());
        EXPECT(0xb607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb606));
        // 10 0026
        gbc.setState(0xaec7, 0x3fc1, 0xb8d0, 0xaabf, 0x55ac, 0x3f9d, 0x0, 0x0);
        gbc.writeMem(0xaec7, { 0x10 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3fc1, gbc.sp());
        EXPECT(0xaec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xaec7));
        // 10 0027
        gbc.setState(0x43eb, 0xace0, 0x95b0, 0x3232, 0xc9b, 0x6b1a, 0x1, 0x0);
        gbc.writeMem(0x43eb, { 0x10 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xace0, gbc.sp());
        EXPECT(0x43ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0028
        gbc.setState(0x938a, 0x2a52, 0xcd50, 0xf178, 0x9deb, 0x28a4, 0x1, 0x0);
        gbc.writeMem(0x938a, { 0x10 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2a52, gbc.sp());
        EXPECT(0x938b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x938a));
        // 10 0029
        gbc.setState(0x260b, 0xb52b, 0x6310, 0x4149, 0xf044, 0x790, 0x0, 0x1);
        gbc.writeMem(0x260b, { 0x10 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb52b, gbc.sp());
        EXPECT(0x260c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 002A
        gbc.setState(0x5aab, 0xf228, 0xa430, 0xd08d, 0xf578, 0x989f, 0x1, 0x1);
        gbc.writeMem(0x5aab, { 0x10 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf228, gbc.sp());
        EXPECT(0x5aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 002C
        gbc.setState(0x3f9a, 0x911c, 0x1210, 0xe56f, 0xa70c, 0xc7d7, 0x1, 0x0);
        gbc.writeMem(0x3f9a, { 0x10 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x911c, gbc.sp());
        EXPECT(0x3f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 002D
        gbc.setState(0xbbb7, 0xef00, 0x9fb0, 0xa47a, 0x12f9, 0x4972, 0x0, 0x0);
        gbc.writeMem(0xbbb7, { 0x10 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xef00, gbc.sp());
        EXPECT(0xbbb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbbb7));
        // 10 002E
        gbc.setState(0xcc4c, 0xef28, 0xc60, 0xf06c, 0x4717, 0x924b, 0x0, 0x0);
        gbc.writeMem(0xcc4c, { 0x10 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xef28, gbc.sp());
        EXPECT(0xcc4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcc4c));
        // 10 002F
        gbc.setState(0xc906, 0xa32c, 0x2ad0, 0x6f15, 0x19ff, 0xc7d7, 0x0, 0x0);
        gbc.writeMem(0xc906, { 0x10 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa32c, gbc.sp());
        EXPECT(0xc907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc906));
        // 10 0030
        gbc.setState(0xc64f, 0xc87f, 0xac00, 0x9dd8, 0xc243, 0xf593, 0x1, 0x1);
        gbc.writeMem(0xc64f, { 0x10 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc87f, gbc.sp());
        EXPECT(0xc650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc64f));
        // 10 0031
        gbc.setState(0x196c, 0x4e99, 0x8850, 0x53b5, 0xaf12, 0xaef7, 0x0, 0x1);
        gbc.writeMem(0x196c, { 0x10 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4e99, gbc.sp());
        EXPECT(0x196d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0032
        gbc.setState(0x99db, 0x29ac, 0x2b10, 0xe9bb, 0xdc5f, 0x9997, 0x0, 0x1);
        gbc.writeMem(0x99db, { 0x10 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x29ac, gbc.sp());
        EXPECT(0x99dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x99db));
        // 10 0033
        gbc.setState(0x5e51, 0x69b1, 0xdd80, 0xb7d2, 0xacdc, 0xff7a, 0x0, 0x0);
        gbc.writeMem(0x5e51, { 0x10 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x69b1, gbc.sp());
        EXPECT(0x5e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0034
        gbc.setState(0x9b2e, 0x613b, 0xa840, 0x586, 0x53de, 0xcf0d, 0x1, 0x0);
        gbc.writeMem(0x9b2e, { 0x10 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x613b, gbc.sp());
        EXPECT(0x9b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9b2e));
        // 10 0036
        gbc.setState(0x73b7, 0x3357, 0x7830, 0xe218, 0xd02c, 0x5d24, 0x1, 0x1);
        gbc.writeMem(0x73b7, { 0x10 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3357, gbc.sp());
        EXPECT(0x73b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0038
        gbc.setState(0x1663, 0xfa84, 0x6ef0, 0xa305, 0xe812, 0xcc04, 0x1, 0x1);
        gbc.writeMem(0x1663, { 0x10 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfa84, gbc.sp());
        EXPECT(0x1664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 003A
        gbc.setState(0x9444, 0xd999, 0x3e60, 0x95fc, 0x9c74, 0xe9a0, 0x0, 0x1);
        gbc.writeMem(0x9444, { 0x10 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd999, gbc.sp());
        EXPECT(0x9445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9444));
        // 10 003B
        gbc.setState(0x9fbf, 0xa17a, 0x1510, 0x249d, 0x37a6, 0x43d4, 0x0, 0x1);
        gbc.writeMem(0x9fbf, { 0x10 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa17a, gbc.sp());
        EXPECT(0x9fc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9fbf));
        // 10 003C
        gbc.setState(0xa038, 0xe7b0, 0xe2a0, 0x9860, 0xa862, 0x465a, 0x1, 0x1);
        gbc.writeMem(0xa038, { 0x10 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe7b0, gbc.sp());
        EXPECT(0xa039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa038));
        // 10 003D
        gbc.setState(0x88e1, 0x3d4b, 0x5e50, 0xf959, 0x844b, 0x3081, 0x1, 0x1);
        gbc.writeMem(0x88e1, { 0x10 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3d4b, gbc.sp());
        EXPECT(0x88e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x88e1));
        // 10 003E
        gbc.setState(0xd4eb, 0xca81, 0xbc30, 0xc1e, 0xec3e, 0x619d, 0x1, 0x1);
        gbc.writeMem(0xd4eb, { 0x10 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xca81, gbc.sp());
        EXPECT(0xd4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd4eb));
        // 10 003F
        gbc.setState(0xe62d, 0x11d0, 0xd7d0, 0x8534, 0xe25d, 0x2624, 0x0, 0x0);
        gbc.writeMem(0xe62d, { 0x10 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x11d0, gbc.sp());
        EXPECT(0xe62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe62d));
        // 10 0040
        gbc.setState(0x2242, 0xdda6, 0xc120, 0xbb9b, 0x53b2, 0x107e, 0x0, 0x0);
        gbc.writeMem(0x2242, { 0x10 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdda6, gbc.sp());
        EXPECT(0x2243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0041
        gbc.setState(0x4af7, 0x3271, 0x2e50, 0x20d7, 0x7ad8, 0x3ab2, 0x1, 0x0);
        gbc.writeMem(0x4af7, { 0x10 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3271, gbc.sp());
        EXPECT(0x4af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0042
        gbc.setState(0x9de6, 0x2b9, 0x8e20, 0x11c1, 0x307b, 0x9320, 0x1, 0x1);
        gbc.writeMem(0x9de6, { 0x10 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2b9, gbc.sp());
        EXPECT(0x9de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9de6));
        // 10 0043
        gbc.setState(0x5a4d, 0x7cc6, 0x6400, 0x2222, 0xfca8, 0xb86b, 0x0, 0x1);
        gbc.writeMem(0x5a4d, { 0x10 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7cc6, gbc.sp());
        EXPECT(0x5a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0044
        gbc.setState(0x63c3, 0x398e, 0x2d10, 0x58a4, 0x1541, 0x8e98, 0x1, 0x1);
        gbc.writeMem(0x63c3, { 0x10 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x398e, gbc.sp());
        EXPECT(0x63c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0045
        gbc.setState(0x1634, 0x5c88, 0x14b0, 0xd3ca, 0x514c, 0x628e, 0x1, 0x0);
        gbc.writeMem(0x1634, { 0x10 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5c88, gbc.sp());
        EXPECT(0x1635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0046
        gbc.setState(0x426, 0x3e37, 0x1000, 0x2719, 0xdfb3, 0x727a, 0x1, 0x0);
        gbc.writeMem(0x426, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3e37, gbc.sp());
        EXPECT(0x427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0047
        gbc.setState(0xe0bc, 0xc62f, 0x5d50, 0x2a3e, 0x2a90, 0xfc4e, 0x0, 0x0);
        gbc.writeMem(0xe0bc, { 0x10 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc62f, gbc.sp());
        EXPECT(0xe0bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe0bc));
        // 10 0048
        gbc.setState(0x15ca, 0xbdbc, 0xdd30, 0xa765, 0xa272, 0x5ce3, 0x0, 0x0);
        gbc.writeMem(0x15ca, { 0x10 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbdbc, gbc.sp());
        EXPECT(0x15cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 004A
        gbc.setState(0xa1bc, 0xbee8, 0x8850, 0xc358, 0xe6dc, 0x4a6, 0x0, 0x0);
        gbc.writeMem(0xa1bc, { 0x10 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbee8, gbc.sp());
        EXPECT(0xa1bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa1bc));
        // 10 004B
        gbc.setState(0xc10f, 0xcfb1, 0xef0, 0x2949, 0x974d, 0xa537, 0x0, 0x1);
        gbc.writeMem(0xc10f, { 0x10 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcfb1, gbc.sp());
        EXPECT(0xc110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc10f));
        // 10 004C
        gbc.setState(0x3555, 0x5230, 0x9d00, 0x5bbb, 0xb4, 0xc92d, 0x1, 0x0);
        gbc.writeMem(0x3555, { 0x10 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5230, gbc.sp());
        EXPECT(0x3556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 004D
        gbc.setState(0x8a98, 0x9cf7, 0x17e0, 0xbd80, 0x8403, 0x6d7, 0x1, 0x0);
        gbc.writeMem(0x8a98, { 0x10 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9cf7, gbc.sp());
        EXPECT(0x8a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8a98));
        // 10 004E
        gbc.setState(0xc799, 0xf0e9, 0x2480, 0xecb4, 0x7271, 0xb312, 0x1, 0x0);
        gbc.writeMem(0xc799, { 0x10 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf0e9, gbc.sp());
        EXPECT(0xc79a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc799));
        // 10 004F
        gbc.setState(0x3c06, 0xc9f5, 0x4760, 0x5c87, 0xa4e4, 0x2c18, 0x1, 0x1);
        gbc.writeMem(0x3c06, { 0x10 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc9f5, gbc.sp());
        EXPECT(0x3c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0050
        gbc.setState(0xcc46, 0xcb99, 0xb790, 0xfe91, 0xceaa, 0xed7d, 0x0, 0x0);
        gbc.writeMem(0xcc46, { 0x10 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcb99, gbc.sp());
        EXPECT(0xcc47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcc46));
        // 10 0051
        gbc.setState(0xa649, 0x4948, 0x7b10, 0x4339, 0x5d69, 0x94db, 0x0, 0x0);
        gbc.writeMem(0xa649, { 0x10 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4948, gbc.sp());
        EXPECT(0xa64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa649));
        // 10 0052
        gbc.setState(0xe52d, 0x4c97, 0xbf50, 0x697e, 0xb6b0, 0xb31d, 0x0, 0x0);
        gbc.writeMem(0xe52d, { 0x10 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4c97, gbc.sp());
        EXPECT(0xe52e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe52d));
        // 10 0053
        gbc.setState(0x7d1, 0x3304, 0xebb0, 0x3b52, 0xb651, 0x81bf, 0x1, 0x0);
        gbc.writeMem(0x7d1, { 0x10 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3304, gbc.sp());
        EXPECT(0x7d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0054
        gbc.setState(0x1eb1, 0xa71e, 0x250, 0x22cb, 0x7046, 0x971a, 0x0, 0x1);
        gbc.writeMem(0x1eb1, { 0x10 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa71e, gbc.sp());
        EXPECT(0x1eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0055
        gbc.setState(0xeb81, 0xffe6, 0xf4c0, 0x9f52, 0x1388, 0x2932, 0x1, 0x1);
        gbc.writeMem(0xeb81, { 0x10 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xffe6, gbc.sp());
        EXPECT(0xeb82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xeb81));
        // 10 0056
        gbc.setState(0x6d1d, 0x111e, 0x78d0, 0x173d, 0x9ec5, 0xe243, 0x1, 0x1);
        gbc.writeMem(0x6d1d, { 0x10 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x111e, gbc.sp());
        EXPECT(0x6d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0057
        gbc.setState(0x931f, 0x5083, 0xaa50, 0xd3e8, 0xab5, 0xa4df, 0x1, 0x1);
        gbc.writeMem(0x931f, { 0x10 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5083, gbc.sp());
        EXPECT(0x9320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x931f));
        // 10 0058
        gbc.setState(0x726e, 0xfdee, 0x3870, 0x6241, 0xe13c, 0xb7cc, 0x0, 0x1);
        gbc.writeMem(0x726e, { 0x10 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfdee, gbc.sp());
        EXPECT(0x726f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0059
        gbc.setState(0x3131, 0x77f2, 0xd1c0, 0x7d51, 0x8a4e, 0xf75d, 0x1, 0x1);
        gbc.writeMem(0x3131, { 0x10 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x77f2, gbc.sp());
        EXPECT(0x3132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 005B
        gbc.setState(0xd69, 0xa9a3, 0x6cf0, 0xc64a, 0xd68a, 0xe2e8, 0x0, 0x1);
        gbc.writeMem(0xd69, { 0x10 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa9a3, gbc.sp());
        EXPECT(0xd6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 005C
        gbc.setState(0x8207, 0x92e1, 0x2970, 0x8faa, 0xa5a8, 0x9232, 0x1, 0x1);
        gbc.writeMem(0x8207, { 0x10 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x92e1, gbc.sp());
        EXPECT(0x8208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8207));
        // 10 005D
        gbc.setState(0xb0c2, 0xc9f7, 0xe910, 0x5da4, 0xe89c, 0x89ed, 0x1, 0x1);
        gbc.writeMem(0xb0c2, { 0x10 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc9f7, gbc.sp());
        EXPECT(0xb0c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb0c2));
        // 10 005E
        gbc.setState(0x8312, 0xae00, 0x45a0, 0xf11, 0x6f76, 0x625b, 0x1, 0x0);
        gbc.writeMem(0x8312, { 0x10 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xae00, gbc.sp());
        EXPECT(0x8313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8312));
        // 10 005F
        gbc.setState(0xe478, 0x17d0, 0x3e0, 0x711b, 0x4954, 0x954a, 0x1, 0x0);
        gbc.writeMem(0xe478, { 0x10 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x17d0, gbc.sp());
        EXPECT(0xe479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe478));
        // 10 0060
        gbc.setState(0x827a, 0xcf1e, 0xed80, 0x26b2, 0x26e6, 0xcbbe, 0x0, 0x0);
        gbc.writeMem(0x827a, { 0x10 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcf1e, gbc.sp());
        EXPECT(0x827b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x827a));
        // 10 0061
        gbc.setState(0x32b9, 0x2121, 0x4a90, 0xa6ca, 0x965f, 0xd2fd, 0x0, 0x1);
        gbc.writeMem(0x32b9, { 0x10 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2121, gbc.sp());
        EXPECT(0x32ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0062
        gbc.setState(0x4388, 0xc1c1, 0x5340, 0x8fa1, 0xb557, 0xafa7, 0x0, 0x1);
        gbc.writeMem(0x4388, { 0x10 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc1c1, gbc.sp());
        EXPECT(0x4389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0063
        gbc.setState(0x2540, 0x98e3, 0xc3c0, 0xf957, 0xf97, 0x51ea, 0x0, 0x1);
        gbc.writeMem(0x2540, { 0x10 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x98e3, gbc.sp());
        EXPECT(0x2541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0064
        gbc.setState(0xe6dc, 0x70a9, 0xff00, 0x93cb, 0xddbc, 0xb9ad, 0x0, 0x0);
        gbc.writeMem(0xe6dc, { 0x10 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x70a9, gbc.sp());
        EXPECT(0xe6dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe6dc));
        // 10 0065
        gbc.setState(0xd1e2, 0x3ec5, 0x6050, 0x8fb4, 0x1b83, 0xcb43, 0x1, 0x0);
        gbc.writeMem(0xd1e2, { 0x10 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3ec5, gbc.sp());
        EXPECT(0xd1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd1e2));
        // 10 0066
        gbc.setState(0x4ca, 0x10d4, 0xed60, 0x5c44, 0x4380, 0x8ec9, 0x0, 0x0);
        gbc.writeMem(0x4ca, { 0x10 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x10d4, gbc.sp());
        EXPECT(0x4cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0067
        gbc.setState(0x51ac, 0xb514, 0xe50, 0xefc7, 0xcaea, 0xc2c1, 0x0, 0x1);
        gbc.writeMem(0x51ac, { 0x10 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb514, gbc.sp());
        EXPECT(0x51ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0068
        gbc.setState(0xab85, 0x78a5, 0xc360, 0x1d3b, 0x4090, 0xbb8d, 0x0, 0x0);
        gbc.writeMem(0xab85, { 0x10 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x78a5, gbc.sp());
        EXPECT(0xab86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xab85));
        // 10 0069
        gbc.setState(0xb362, 0x66da, 0x3d10, 0x4913, 0x4ed6, 0xdad0, 0x1, 0x0);
        gbc.writeMem(0xb362, { 0x10 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x66da, gbc.sp());
        EXPECT(0xb363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb362));
        // 10 006A
        gbc.setState(0x1f5f, 0xfcc2, 0xa310, 0xb1e, 0xc883, 0xa01d, 0x1, 0x0);
        gbc.writeMem(0x1f5f, { 0x10 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfcc2, gbc.sp());
        EXPECT(0x1f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 006B
        gbc.setState(0x321c, 0x4d9c, 0x84f0, 0x5ae0, 0x3922, 0x15ce, 0x1, 0x0);
        gbc.writeMem(0x321c, { 0x10 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4d9c, gbc.sp());
        EXPECT(0x321d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 006C
        gbc.setState(0xa96a, 0x521c, 0x8dd0, 0x99c7, 0x822f, 0xa8e7, 0x1, 0x0);
        gbc.writeMem(0xa96a, { 0x10 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x521c, gbc.sp());
        EXPECT(0xa96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa96a));
        // 10 006D
        gbc.setState(0xe1e6, 0x84de, 0x5550, 0x3c8e, 0x9d01, 0xea4e, 0x1, 0x0);
        gbc.writeMem(0xe1e6, { 0x10 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x84de, gbc.sp());
        EXPECT(0xe1e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe1e6));
        // 10 006E
        gbc.setState(0xb2c4, 0x9a77, 0x87d0, 0x19e0, 0x7d3d, 0x1956, 0x0, 0x1);
        gbc.writeMem(0xb2c4, { 0x10 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9a77, gbc.sp());
        EXPECT(0xb2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb2c4));
        // 10 006F
        gbc.setState(0xd971, 0x3a17, 0x3860, 0xd40c, 0x4b2f, 0xfa9d, 0x0, 0x1);
        gbc.writeMem(0xd971, { 0x10 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3a17, gbc.sp());
        EXPECT(0xd972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd971));
        // 10 0070
        gbc.setState(0x20f6, 0xf7f8, 0x31b0, 0x8434, 0xab7f, 0xa380, 0x0, 0x0);
        gbc.writeMem(0x20f6, { 0x10 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf7f8, gbc.sp());
        EXPECT(0x20f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0071
        gbc.setState(0xa63c, 0xfe0d, 0x940, 0xec1f, 0xa318, 0x836c, 0x0, 0x0);
        gbc.writeMem(0xa63c, { 0x10 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfe0d, gbc.sp());
        EXPECT(0xa63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa63c));
        // 10 0072
        gbc.setState(0x38d1, 0x9fa5, 0x1cf0, 0x68b0, 0x9330, 0xc2b7, 0x0, 0x1);
        gbc.writeMem(0x38d1, { 0x10 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9fa5, gbc.sp());
        EXPECT(0x38d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0073
        gbc.setState(0xea1c, 0x7e42, 0xcda0, 0x1967, 0x6950, 0x4eaa, 0x1, 0x0);
        gbc.writeMem(0xea1c, { 0x10 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7e42, gbc.sp());
        EXPECT(0xea1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xea1c));
        // 10 0074
        gbc.setState(0x2613, 0xf4f0, 0xb890, 0x76fa, 0x82f5, 0x16a1, 0x1, 0x1);
        gbc.writeMem(0x2613, { 0x10 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf4f0, gbc.sp());
        EXPECT(0x2614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0075
        gbc.setState(0x66a6, 0x11de, 0x1f60, 0x1d39, 0x4da9, 0x9d0c, 0x0, 0x0);
        gbc.writeMem(0x66a6, { 0x10 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x11de, gbc.sp());
        EXPECT(0x66a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0076
        gbc.setState(0x3af3, 0x6281, 0x1cb0, 0xd720, 0x4b4, 0xae1b, 0x0, 0x0);
        gbc.writeMem(0x3af3, { 0x10 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6281, gbc.sp());
        EXPECT(0x3af4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0077
        gbc.setState(0x2b3b, 0xb180, 0x2290, 0x53cf, 0x4f8a, 0x15b, 0x0, 0x0);
        gbc.writeMem(0x2b3b, { 0x10 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb180, gbc.sp());
        EXPECT(0x2b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0078
        gbc.setState(0x4a3b, 0xdd2b, 0x3bf0, 0xe95a, 0x1ced, 0x1804, 0x1, 0x0);
        gbc.writeMem(0x4a3b, { 0x10 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdd2b, gbc.sp());
        EXPECT(0x4a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0079
        gbc.setState(0xf4, 0xcd1c, 0xa50, 0x10ee, 0x3978, 0x16ea, 0x1, 0x0);
        gbc.writeMem(0xf4, { 0x10 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcd1c, gbc.sp());
        EXPECT(0xf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 007A
        gbc.setState(0x8395, 0xcb1f, 0x2000, 0xdf17, 0x6c4a, 0x19ea, 0x0, 0x1);
        gbc.writeMem(0x8395, { 0x10 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcb1f, gbc.sp());
        EXPECT(0x8396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8395));
        // 10 007B
        gbc.setState(0x4dd5, 0xce82, 0x6fe0, 0xa9dc, 0xd696, 0xe1b6, 0x0, 0x0);
        gbc.writeMem(0x4dd5, { 0x10 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xce82, gbc.sp());
        EXPECT(0x4dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 007C
        gbc.setState(0x5a00, 0xd468, 0xd070, 0xbd96, 0x4b41, 0xe2f7, 0x1, 0x0);
        gbc.writeMem(0x5a00, { 0x10 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd468, gbc.sp());
        EXPECT(0x5a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 007D
        gbc.setState(0x7ab7, 0x9be0, 0x12b0, 0x320c, 0xb23e, 0x6f1, 0x0, 0x0);
        gbc.writeMem(0x7ab7, { 0x10 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9be0, gbc.sp());
        EXPECT(0x7ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 007E
        gbc.setState(0x975a, 0xa0e5, 0x7f80, 0x4fcc, 0xc02d, 0xbb2c, 0x0, 0x1);
        gbc.writeMem(0x975a, { 0x10 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa0e5, gbc.sp());
        EXPECT(0x975b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x975a));
        // 10 007F
        gbc.setState(0x733a, 0x37f6, 0x96d0, 0xa657, 0x375b, 0x58f8, 0x0, 0x1);
        gbc.writeMem(0x733a, { 0x10 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x37f6, gbc.sp());
        EXPECT(0x733b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0080
        gbc.setState(0x554e, 0x93d9, 0xd3b0, 0xf11a, 0xa7e3, 0x7ba7, 0x0, 0x0);
        gbc.writeMem(0x554e, { 0x10 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x93d9, gbc.sp());
        EXPECT(0x554f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0081
        gbc.setState(0x3473, 0x7d26, 0xf110, 0x65fd, 0x50eb, 0x7d44, 0x1, 0x0);
        gbc.writeMem(0x3473, { 0x10 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7d26, gbc.sp());
        EXPECT(0x3474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0082
        gbc.setState(0x1489, 0xb50c, 0x3320, 0xfe64, 0x6ab3, 0xe10d, 0x0, 0x0);
        gbc.writeMem(0x1489, { 0x10 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb50c, gbc.sp());
        EXPECT(0x148a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0083
        gbc.setState(0x732b, 0xc973, 0xbf40, 0xaabd, 0x5001, 0x3e01, 0x1, 0x1);
        gbc.writeMem(0x732b, { 0x10 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc973, gbc.sp());
        EXPECT(0x732c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0084
        gbc.setState(0xa84c, 0xb3da, 0x47a0, 0x58c6, 0xb9b6, 0x9d4f, 0x1, 0x1);
        gbc.writeMem(0xa84c, { 0x10 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb3da, gbc.sp());
        EXPECT(0xa84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa84c));
        // 10 0085
        gbc.setState(0x487d, 0x6505, 0x3540, 0x9816, 0xf2c6, 0xb2cb, 0x1, 0x0);
        gbc.writeMem(0x487d, { 0x10 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6505, gbc.sp());
        EXPECT(0x487e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0086
        gbc.setState(0x4eb3, 0x6e93, 0xab00, 0x3330, 0xfbc0, 0x7f5, 0x1, 0x1);
        gbc.writeMem(0x4eb3, { 0x10 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6e93, gbc.sp());
        EXPECT(0x4eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0087
        gbc.setState(0xbf8a, 0xd49e, 0x6c30, 0x4252, 0xb72d, 0xe967, 0x0, 0x1);
        gbc.writeMem(0xbf8a, { 0x10 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd49e, gbc.sp());
        EXPECT(0xbf8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbf8a));
        // 10 0088
        gbc.setState(0xd329, 0xf599, 0x19b0, 0xc734, 0xb149, 0xb342, 0x0, 0x1);
        gbc.writeMem(0xd329, { 0x10 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf599, gbc.sp());
        EXPECT(0xd32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd329));
        // 10 0089
        gbc.setState(0x3f55, 0x8fbf, 0xe30, 0x2838, 0x1979, 0x895d, 0x0, 0x0);
        gbc.writeMem(0x3f55, { 0x10 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8fbf, gbc.sp());
        EXPECT(0x3f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 008A
        gbc.setState(0x2866, 0x58e2, 0x2a80, 0xc322, 0xce7e, 0x701a, 0x1, 0x0);
        gbc.writeMem(0x2866, { 0x10 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x58e2, gbc.sp());
        EXPECT(0x2867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 008B
        gbc.setState(0xa18f, 0x82cb, 0xa0d0, 0x23df, 0xd7ef, 0xaf37, 0x0, 0x1);
        gbc.writeMem(0xa18f, { 0x10 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x82cb, gbc.sp());
        EXPECT(0xa190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa18f));
        // 10 008C
        gbc.setState(0xd282, 0x1ed6, 0xce20, 0x57c1, 0xfc95, 0x8379, 0x1, 0x0);
        gbc.writeMem(0xd282, { 0x10 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1ed6, gbc.sp());
        EXPECT(0xd283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd282));
        // 10 008D
        gbc.setState(0xa01d, 0x5f8d, 0x5300, 0x1845, 0x5b6b, 0xc8e2, 0x0, 0x0);
        gbc.writeMem(0xa01d, { 0x10 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5f8d, gbc.sp());
        EXPECT(0xa01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa01d));
        // 10 008E
        gbc.setState(0xa3f9, 0x817c, 0xfc70, 0x2fd8, 0x1d09, 0xbce1, 0x1, 0x1);
        gbc.writeMem(0xa3f9, { 0x10 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x817c, gbc.sp());
        EXPECT(0xa3fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa3f9));
        // 10 008F
        gbc.setState(0xae10, 0xd2ee, 0xf840, 0xb208, 0x98b0, 0xe044, 0x0, 0x0);
        gbc.writeMem(0xae10, { 0x10 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd2ee, gbc.sp());
        EXPECT(0xae11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xae10));
        // 10 0090
        gbc.setState(0x4261, 0xc009, 0x55d0, 0x9707, 0x669a, 0x5330, 0x0, 0x1);
        gbc.writeMem(0x4261, { 0x10 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc009, gbc.sp());
        EXPECT(0x4262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0091
        gbc.setState(0xc145, 0xd37a, 0xf820, 0x4e94, 0xdd8a, 0x5ac0, 0x1, 0x1);
        gbc.writeMem(0xc145, { 0x10 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd37a, gbc.sp());
        EXPECT(0xc146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc145));
        // 10 0093
        gbc.setState(0x71e8, 0xbdea, 0x7870, 0x167f, 0x38dc, 0xd048, 0x1, 0x0);
        gbc.writeMem(0x71e8, { 0x10 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbdea, gbc.sp());
        EXPECT(0x71e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0094
        gbc.setState(0x2bc9, 0xdbd8, 0x17d0, 0xbce9, 0xbe06, 0xb9c5, 0x0, 0x1);
        gbc.writeMem(0x2bc9, { 0x10 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdbd8, gbc.sp());
        EXPECT(0x2bca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0095
        gbc.setState(0x3d72, 0xf77f, 0xa150, 0xd6fd, 0x8393, 0xaf83, 0x0, 0x1);
        gbc.writeMem(0x3d72, { 0x10 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf77f, gbc.sp());
        EXPECT(0x3d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0096
        gbc.setState(0x1049, 0x70b7, 0x3c20, 0x5a28, 0x63a1, 0x3bc0, 0x0, 0x1);
        gbc.writeMem(0x1049, { 0x10 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x70b7, gbc.sp());
        EXPECT(0x104a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0097
        gbc.setState(0xa40d, 0x90a2, 0xe1c0, 0x9a53, 0xc84f, 0xf3be, 0x1, 0x1);
        gbc.writeMem(0xa40d, { 0x10 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x90a2, gbc.sp());
        EXPECT(0xa40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa40d));
        // 10 0098
        gbc.setState(0x45e6, 0xf9d1, 0x7af0, 0xee83, 0x2d6d, 0x5ee3, 0x0, 0x1);
        gbc.writeMem(0x45e6, { 0x10 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf9d1, gbc.sp());
        EXPECT(0x45e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0099
        gbc.setState(0x7efb, 0x7ddc, 0xebf0, 0x1621, 0xd10e, 0x99c5, 0x1, 0x0);
        gbc.writeMem(0x7efb, { 0x10 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7ddc, gbc.sp());
        EXPECT(0x7efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 009A
        gbc.setState(0x89d1, 0x27f0, 0x9720, 0x4e72, 0x1958, 0x806f, 0x0, 0x0);
        gbc.writeMem(0x89d1, { 0x10 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x27f0, gbc.sp());
        EXPECT(0x89d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x89d1));
        // 10 009C
        gbc.setState(0x4ddf, 0x271c, 0x5080, 0xd45, 0x2d1f, 0xd7fc, 0x0, 0x0);
        gbc.writeMem(0x4ddf, { 0x10 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x271c, gbc.sp());
        EXPECT(0x4de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 009D
        gbc.setState(0xefcb, 0x1435, 0x3540, 0xf66e, 0x8b31, 0x9a12, 0x1, 0x0);
        gbc.writeMem(0xefcb, { 0x10 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1435, gbc.sp());
        EXPECT(0xefcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xefcb));
        // 10 009E
        gbc.setState(0xa82c, 0x30d, 0x8620, 0x63ec, 0x1551, 0xacea, 0x1, 0x0);
        gbc.writeMem(0xa82c, { 0x10 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x30d, gbc.sp());
        EXPECT(0xa82d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa82c));
        // 10 009F
        gbc.setState(0xe991, 0x99e2, 0xce30, 0x8ba1, 0xeffc, 0xd25a, 0x0, 0x0);
        gbc.writeMem(0xe991, { 0x10 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x99e2, gbc.sp());
        EXPECT(0xe992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe991));
        // 10 00A0
        gbc.setState(0x1617, 0xed02, 0x9150, 0x52c4, 0xb1ef, 0x3c31, 0x1, 0x1);
        gbc.writeMem(0x1617, { 0x10 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xed02, gbc.sp());
        EXPECT(0x1618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00A2
        gbc.setState(0x93e8, 0x943d, 0x7040, 0x5bd3, 0xe87b, 0xb5fd, 0x1, 0x1);
        gbc.writeMem(0x93e8, { 0x10 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x943d, gbc.sp());
        EXPECT(0x93e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x93e8));
        // 10 00A3
        gbc.setState(0xa548, 0x3faf, 0x5080, 0xe9a2, 0x11fd, 0x55ee, 0x0, 0x0);
        gbc.writeMem(0xa548, { 0x10 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3faf, gbc.sp());
        EXPECT(0xa549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa548));
        // 10 00A4
        gbc.setState(0xdc8a, 0xe012, 0x9c90, 0x5f9f, 0x3a96, 0x1cf0, 0x1, 0x0);
        gbc.writeMem(0xdc8a, { 0x10 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe012, gbc.sp());
        EXPECT(0xdc8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdc8a));
        // 10 00A5
        gbc.setState(0x7c15, 0x60b4, 0x3060, 0x7f5, 0xa1cc, 0x53b5, 0x1, 0x1);
        gbc.writeMem(0x7c15, { 0x10 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x60b4, gbc.sp());
        EXPECT(0x7c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00A6
        gbc.setState(0x44b8, 0x8588, 0x860, 0x4030, 0xc824, 0x2a97, 0x1, 0x0);
        gbc.writeMem(0x44b8, { 0x10 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8588, gbc.sp());
        EXPECT(0x44b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00A7
        gbc.setState(0x66a5, 0x32a5, 0xada0, 0x29ac, 0xe001, 0x2660, 0x0, 0x0);
        gbc.writeMem(0x66a5, { 0x10 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x32a5, gbc.sp());
        EXPECT(0x66a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00A8
        gbc.setState(0xa6fe, 0xe9d8, 0x100, 0x7f83, 0x4cc, 0xe6a0, 0x1, 0x0);
        gbc.writeMem(0xa6fe, { 0x10 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe9d8, gbc.sp());
        EXPECT(0xa6ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa6fe));
        // 10 00A9
        gbc.setState(0xb0e3, 0x1ac9, 0x5360, 0x6c72, 0xb2c2, 0x6467, 0x0, 0x0);
        gbc.writeMem(0xb0e3, { 0x10 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1ac9, gbc.sp());
        EXPECT(0xb0e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb0e3));
        // 10 00AA
        gbc.setState(0x9723, 0x348, 0x23c0, 0xe13a, 0x32f, 0xeb15, 0x0, 0x0);
        gbc.writeMem(0x9723, { 0x10 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x348, gbc.sp());
        EXPECT(0x9724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9723));
        // 10 00AB
        gbc.setState(0xec03, 0xf8ae, 0xbae0, 0x71a8, 0x64cf, 0x939d, 0x1, 0x1);
        gbc.writeMem(0xec03, { 0x10 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf8ae, gbc.sp());
        EXPECT(0xec04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xec03));
        // 10 00AC
        gbc.setState(0xcea4, 0x7990, 0xe2b0, 0xf2a5, 0x96b2, 0x547d, 0x1, 0x0);
        gbc.writeMem(0xcea4, { 0x10 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7990, gbc.sp());
        EXPECT(0xcea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcea4));
        // 10 00AE
        gbc.setState(0xd122, 0x5362, 0x2e30, 0x3406, 0x13ce, 0xcf89, 0x1, 0x0);
        gbc.writeMem(0xd122, { 0x10 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5362, gbc.sp());
        EXPECT(0xd123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd122));
        // 10 00AF
        gbc.setState(0xd333, 0xe83f, 0x55d0, 0xcaf4, 0x114a, 0x6f6c, 0x0, 0x1);
        gbc.writeMem(0xd333, { 0x10 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe83f, gbc.sp());
        EXPECT(0xd334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd333));
        // 10 00B0
        gbc.setState(0x77a7, 0xc004, 0x6b40, 0xd86c, 0xf992, 0x261b, 0x1, 0x1);
        gbc.writeMem(0x77a7, { 0x10 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc004, gbc.sp());
        EXPECT(0x77a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00B1
        gbc.setState(0x4ada, 0x460f, 0xaa90, 0xac4c, 0x665, 0x4033, 0x1, 0x1);
        gbc.writeMem(0x4ada, { 0x10 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x460f, gbc.sp());
        EXPECT(0x4adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00B2
        gbc.setState(0x7ca6, 0x3cc5, 0x9870, 0x746e, 0x9d77, 0x3e2a, 0x0, 0x1);
        gbc.writeMem(0x7ca6, { 0x10 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3cc5, gbc.sp());
        EXPECT(0x7ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00B3
        gbc.setState(0x5c14, 0xe60b, 0x7840, 0xb77b, 0x4a60, 0xab15, 0x0, 0x1);
        gbc.writeMem(0x5c14, { 0x10 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe60b, gbc.sp());
        EXPECT(0x5c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00B4
        gbc.setState(0x3664, 0xbd5d, 0xaf70, 0x129e, 0x4fec, 0x78eb, 0x0, 0x0);
        gbc.writeMem(0x3664, { 0x10 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbd5d, gbc.sp());
        EXPECT(0x3665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00B5
        gbc.setState(0xb58e, 0xea3e, 0xf580, 0x3b86, 0x5be8, 0xe549, 0x0, 0x1);
        gbc.writeMem(0xb58e, { 0x10 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xea3e, gbc.sp());
        EXPECT(0xb58f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb58e));
        // 10 00B6
        gbc.setState(0xd84c, 0xefe1, 0x2650, 0x1743, 0x5211, 0xdacc, 0x1, 0x0);
        gbc.writeMem(0xd84c, { 0x10 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xefe1, gbc.sp());
        EXPECT(0xd84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd84c));
        // 10 00B7
        gbc.setState(0xdfae, 0x2af7, 0xa870, 0xdd69, 0x72cc, 0x87e1, 0x0, 0x0);
        gbc.writeMem(0xdfae, { 0x10 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2af7, gbc.sp());
        EXPECT(0xdfaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdfae));
        // 10 00B8
        gbc.setState(0xec32, 0x66be, 0x3120, 0xecda, 0xc519, 0xbb88, 0x0, 0x0);
        gbc.writeMem(0xec32, { 0x10 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x66be, gbc.sp());
        EXPECT(0xec33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xec32));
        // 10 00B9
        gbc.setState(0x997a, 0x9fa8, 0xe250, 0x1500, 0xc57f, 0xca8, 0x0, 0x1);
        gbc.writeMem(0x997a, { 0x10 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9fa8, gbc.sp());
        EXPECT(0x997b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x997a));
        // 10 00BA
        gbc.setState(0xb5bd, 0x280d, 0x3240, 0x458c, 0xa033, 0x39d4, 0x0, 0x0);
        gbc.writeMem(0xb5bd, { 0x10 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x280d, gbc.sp());
        EXPECT(0xb5be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb5bd));
        // 10 00BB
        gbc.setState(0xd86c, 0x4750, 0x9150, 0x6392, 0xa789, 0x981b, 0x1, 0x0);
        gbc.writeMem(0xd86c, { 0x10 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4750, gbc.sp());
        EXPECT(0xd86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd86c));
        // 10 00BC
        gbc.setState(0x79de, 0xb448, 0x9c50, 0x5df1, 0x221c, 0x75be, 0x0, 0x1);
        gbc.writeMem(0x79de, { 0x10 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb448, gbc.sp());
        EXPECT(0x79df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00BD
        gbc.setState(0xa32d, 0x6292, 0xa800, 0x3707, 0xbee5, 0xe009, 0x1, 0x1);
        gbc.writeMem(0xa32d, { 0x10 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6292, gbc.sp());
        EXPECT(0xa32e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa32d));
        // 10 00BE
        gbc.setState(0xd03, 0xd1ef, 0x94e0, 0x5ce, 0x9202, 0x5915, 0x0, 0x1);
        gbc.writeMem(0xd03, { 0x10 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd1ef, gbc.sp());
        EXPECT(0xd04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00BF
        gbc.setState(0x2b6, 0x4a14, 0x7b60, 0x5065, 0x2939, 0x2f49, 0x1, 0x1);
        gbc.writeMem(0x2b6, { 0x10 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4a14, gbc.sp());
        EXPECT(0x2b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00C0
        gbc.setState(0x500f, 0x5a19, 0xb610, 0x3071, 0x245d, 0x9d8, 0x1, 0x1);
        gbc.writeMem(0x500f, { 0x10 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5a19, gbc.sp());
        EXPECT(0x5010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00C1
        gbc.setState(0x40d7, 0x48ff, 0xf7f0, 0x4bb, 0xd8ab, 0x88d, 0x1, 0x0);
        gbc.writeMem(0x40d7, { 0x10 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x48ff, gbc.sp());
        EXPECT(0x40d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00C2
        gbc.setState(0xc72a, 0xb9f5, 0xbb90, 0x3fe, 0x1ad2, 0xaaa5, 0x0, 0x1);
        gbc.writeMem(0xc72a, { 0x10 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb9f5, gbc.sp());
        EXPECT(0xc72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc72a));
        // 10 00C3
        gbc.setState(0x4438, 0x10e5, 0x72c0, 0xb688, 0xd28b, 0xe4cd, 0x1, 0x0);
        gbc.writeMem(0x4438, { 0x10 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x10e5, gbc.sp());
        EXPECT(0x4439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00C4
        gbc.setState(0x9d76, 0xd181, 0x6110, 0xb7dc, 0xdac5, 0x9e0e, 0x0, 0x1);
        gbc.writeMem(0x9d76, { 0x10 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd181, gbc.sp());
        EXPECT(0x9d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9d76));
        // 10 00C5
        gbc.setState(0x7e60, 0xd16c, 0xbed0, 0x77e6, 0xafc5, 0x4bc0, 0x0, 0x1);
        gbc.writeMem(0x7e60, { 0x10 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd16c, gbc.sp());
        EXPECT(0x7e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00C6
        gbc.setState(0xab, 0x6b65, 0x16c0, 0xdbab, 0x9572, 0xada0, 0x1, 0x1);
        gbc.writeMem(0xab, { 0x10 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6b65, gbc.sp());
        EXPECT(0xac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00C7
        gbc.setState(0x3760, 0x9f62, 0x8e30, 0xdbde, 0xa87a, 0x15dd, 0x0, 0x1);
        gbc.writeMem(0x3760, { 0x10 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9f62, gbc.sp());
        EXPECT(0x3761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00C8
        gbc.setState(0x9506, 0x4bde, 0x8e10, 0x35cc, 0xb319, 0xf2dc, 0x0, 0x0);
        gbc.writeMem(0x9506, { 0x10 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4bde, gbc.sp());
        EXPECT(0x9507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9506));
        // 10 00C9
        gbc.setState(0x1f77, 0xd740, 0xaf30, 0xf595, 0xa04f, 0x9993, 0x1, 0x0);
        gbc.writeMem(0x1f77, { 0x10 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd740, gbc.sp());
        EXPECT(0x1f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00CA
        gbc.setState(0xd75b, 0x36fd, 0x29e0, 0xabc5, 0x182c, 0x8d1d, 0x0, 0x1);
        gbc.writeMem(0xd75b, { 0x10 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x36fd, gbc.sp());
        EXPECT(0xd75c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd75b));
        // 10 00CB
        gbc.setState(0xd536, 0xf7f4, 0xb7e0, 0x9ec7, 0x87ad, 0xb162, 0x0, 0x0);
        gbc.writeMem(0xd536, { 0x10 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf7f4, gbc.sp());
        EXPECT(0xd537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd536));
        // 10 00CC
        gbc.setState(0xaad, 0x1642, 0x5dc0, 0x3dcf, 0x5b6b, 0x3d10, 0x1, 0x1);
        gbc.writeMem(0xaad, { 0x10 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1642, gbc.sp());
        EXPECT(0xaae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00CD
        gbc.setState(0x751b, 0x4d20, 0xedf0, 0x801e, 0x7d4b, 0xc8bc, 0x1, 0x1);
        gbc.writeMem(0x751b, { 0x10 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4d20, gbc.sp());
        EXPECT(0x751c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00CE
        gbc.setState(0x8869, 0xd77e, 0x4ab0, 0x3d09, 0xd34a, 0x2b64, 0x0, 0x1);
        gbc.writeMem(0x8869, { 0x10 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd77e, gbc.sp());
        EXPECT(0x886a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8869));
        // 10 00CF
        gbc.setState(0x87ec, 0x88dd, 0x6ee0, 0x410b, 0x4584, 0xa98, 0x1, 0x1);
        gbc.writeMem(0x87ec, { 0x10 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x88dd, gbc.sp());
        EXPECT(0x87ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x87ec));
        // 10 00D0
        gbc.setState(0xb3b0, 0xda07, 0xffb0, 0xf6a6, 0x4138, 0x4655, 0x0, 0x1);
        gbc.writeMem(0xb3b0, { 0x10 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xda07, gbc.sp());
        EXPECT(0xb3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb3b0));
        // 10 00D1
        gbc.setState(0x557f, 0x621a, 0x96c0, 0x280, 0xb75a, 0x3235, 0x1, 0x1);
        gbc.writeMem(0x557f, { 0x10 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x621a, gbc.sp());
        EXPECT(0x5580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00D2
        gbc.setState(0x80f7, 0x4c5c, 0x14d0, 0x9be1, 0x56bb, 0x27a6, 0x1, 0x0);
        gbc.writeMem(0x80f7, { 0x10 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4c5c, gbc.sp());
        EXPECT(0x80f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x80f7));
        // 10 00D3
        gbc.setState(0x4ec9, 0xbf56, 0x22d0, 0xbae9, 0x46bb, 0x3308, 0x0, 0x1);
        gbc.writeMem(0x4ec9, { 0x10 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbf56, gbc.sp());
        EXPECT(0x4eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00D4
        gbc.setState(0xcf9, 0x7876, 0x2460, 0xd20e, 0xb99, 0x7c61, 0x0, 0x1);
        gbc.writeMem(0xcf9, { 0x10 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7876, gbc.sp());
        EXPECT(0xcfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00D5
        gbc.setState(0x1e14, 0xc7c1, 0x2660, 0xaa55, 0xfcbf, 0x7389, 0x0, 0x0);
        gbc.writeMem(0x1e14, { 0x10 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc7c1, gbc.sp());
        EXPECT(0x1e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00D6
        gbc.setState(0x313, 0xbc3c, 0x92d0, 0x6753, 0x10dd, 0xc84f, 0x0, 0x1);
        gbc.writeMem(0x313, { 0x10 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbc3c, gbc.sp());
        EXPECT(0x314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00D7
        gbc.setState(0xca8b, 0xe61f, 0x3660, 0x4324, 0x7967, 0x25b8, 0x1, 0x1);
        gbc.writeMem(0xca8b, { 0x10 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe61f, gbc.sp());
        EXPECT(0xca8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xca8b));
        // 10 00D8
        gbc.setState(0x3571, 0x43d, 0x5980, 0xf8b5, 0x69ca, 0xcf7, 0x0, 0x0);
        gbc.writeMem(0x3571, { 0x10 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x43d, gbc.sp());
        EXPECT(0x3572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00D9
        gbc.setState(0x8a3f, 0x69a6, 0x1e80, 0xcbd4, 0x2b4b, 0xcdcf, 0x0, 0x1);
        gbc.writeMem(0x8a3f, { 0x10 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x69a6, gbc.sp());
        EXPECT(0x8a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8a3f));
        // 10 00DA
        gbc.setState(0xe90f, 0xdb49, 0x9f10, 0xa40f, 0xc4a4, 0x4dc3, 0x0, 0x0);
        gbc.writeMem(0xe90f, { 0x10 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdb49, gbc.sp());
        EXPECT(0xe910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe90f));
        // 10 00DB
        gbc.setState(0xcb6a, 0x5ac3, 0x7130, 0x7149, 0x43f0, 0xcb76, 0x1, 0x0);
        gbc.writeMem(0xcb6a, { 0x10 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5ac3, gbc.sp());
        EXPECT(0xcb6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcb6a));
        // 10 00DC
        gbc.setState(0x2d8, 0xc260, 0x6ed0, 0xd6f2, 0xa77d, 0x3c3f, 0x0, 0x1);
        gbc.writeMem(0x2d8, { 0x10 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc260, gbc.sp());
        EXPECT(0x2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00DD
        gbc.setState(0x8e17, 0xc184, 0x97e0, 0xb7b3, 0x6e1b, 0xb3b, 0x1, 0x1);
        gbc.writeMem(0x8e17, { 0x10 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc184, gbc.sp());
        EXPECT(0x8e18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8e17));
        // 10 00DE
        gbc.setState(0x57f6, 0xedc8, 0xe900, 0x7b2a, 0xa426, 0x3c79, 0x1, 0x1);
        gbc.writeMem(0x57f6, { 0x10 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xedc8, gbc.sp());
        EXPECT(0x57f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00DF
        gbc.setState(0xdcd7, 0xaf23, 0xc9f0, 0xaf10, 0xb0dc, 0x1c32, 0x1, 0x0);
        gbc.writeMem(0xdcd7, { 0x10 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xaf23, gbc.sp());
        EXPECT(0xdcd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdcd7));
        // 10 00E0
        gbc.setState(0x60a2, 0x3e72, 0xb1e0, 0x6f28, 0xf8fd, 0xb6b, 0x0, 0x1);
        gbc.writeMem(0x60a2, { 0x10 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3e72, gbc.sp());
        EXPECT(0x60a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00E1
        gbc.setState(0x6f99, 0x21bd, 0x87a0, 0x81a6, 0x33c1, 0x4bbe, 0x1, 0x0);
        gbc.writeMem(0x6f99, { 0x10 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x21bd, gbc.sp());
        EXPECT(0x6f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00E2
        gbc.setState(0x50e1, 0x2627, 0x66f0, 0x4d12, 0xd1af, 0x8f6d, 0x0, 0x0);
        gbc.writeMem(0x50e1, { 0x10 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2627, gbc.sp());
        EXPECT(0x50e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00E3
        gbc.setState(0xb205, 0x55e9, 0xfb10, 0x8c76, 0x3823, 0x2869, 0x1, 0x0);
        gbc.writeMem(0xb205, { 0x10 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x55e9, gbc.sp());
        EXPECT(0xb206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb205));
        // 10 00E4
        gbc.setState(0xe112, 0x4fd7, 0x4c70, 0xfef7, 0x5cd0, 0x2d0f, 0x0, 0x0);
        gbc.writeMem(0xe112, { 0x10 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4fd7, gbc.sp());
        EXPECT(0xe113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe112));
        // 10 00E5
        gbc.setState(0xb40f, 0xfd6e, 0x7d90, 0xad47, 0xeb5c, 0x179b, 0x0, 0x1);
        gbc.writeMem(0xb40f, { 0x10 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfd6e, gbc.sp());
        EXPECT(0xb410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb40f));
        // 10 00E6
        gbc.setState(0x9e4d, 0x46fd, 0x7fc0, 0xa198, 0x38bb, 0xd430, 0x0, 0x1);
        gbc.writeMem(0x9e4d, { 0x10 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x46fd, gbc.sp());
        EXPECT(0x9e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9e4d));
        // 10 00E7
        gbc.setState(0x651c, 0x1d87, 0xa00, 0x3b60, 0x82be, 0xa291, 0x0, 0x0);
        gbc.writeMem(0x651c, { 0x10 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1d87, gbc.sp());
        EXPECT(0x651d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00E8
        gbc.setState(0x52b1, 0x2095, 0x7110, 0x28f5, 0x4aeb, 0xf873, 0x1, 0x1);
        gbc.writeMem(0x52b1, { 0x10 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2095, gbc.sp());
        EXPECT(0x52b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00E9
        gbc.setState(0x48e0, 0x59b7, 0x71a0, 0xe7e5, 0xad0c, 0x5b28, 0x0, 0x1);
        gbc.writeMem(0x48e0, { 0x10 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x59b7, gbc.sp());
        EXPECT(0x48e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00EA
        gbc.setState(0x6fdc, 0x7849, 0x3bf0, 0x5a37, 0x317a, 0xb4f5, 0x0, 0x0);
        gbc.writeMem(0x6fdc, { 0x10 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7849, gbc.sp());
        EXPECT(0x6fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00EB
        gbc.setState(0xe2b8, 0x83de, 0xc910, 0xfbd2, 0x3ee6, 0x46db, 0x0, 0x1);
        gbc.writeMem(0xe2b8, { 0x10 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x83de, gbc.sp());
        EXPECT(0xe2b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe2b8));
        // 10 00ED
        gbc.setState(0xe0ee, 0x6806, 0x1840, 0x3b0d, 0xe973, 0xda19, 0x0, 0x1);
        gbc.writeMem(0xe0ee, { 0x10 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6806, gbc.sp());
        EXPECT(0xe0ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe0ee));
        // 10 00EE
        gbc.setState(0x95c1, 0x67f5, 0xbc50, 0x2602, 0xd0ee, 0x7678, 0x1, 0x1);
        gbc.writeMem(0x95c1, { 0x10 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x67f5, gbc.sp());
        EXPECT(0x95c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x95c1));
        // 10 00EF
        gbc.setState(0x1786, 0xba16, 0xbe20, 0xceb7, 0x202e, 0x8894, 0x1, 0x1);
        gbc.writeMem(0x1786, { 0x10 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xba16, gbc.sp());
        EXPECT(0x1787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00F0
        gbc.setState(0x12f7, 0x8bbf, 0xb7f0, 0x5cff, 0x45da, 0x6a7a, 0x1, 0x1);
        gbc.writeMem(0x12f7, { 0x10 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8bbf, gbc.sp());
        EXPECT(0x12f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00F1
        gbc.setState(0xe06d, 0x47dd, 0x43d0, 0xd44e, 0xbe0e, 0x6c04, 0x0, 0x0);
        gbc.writeMem(0xe06d, { 0x10 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x47dd, gbc.sp());
        EXPECT(0xe06e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe06d));
        // 10 00F2
        gbc.setState(0x2ac0, 0x2b0a, 0xac10, 0xc5c2, 0x3a58, 0x7d1e, 0x0, 0x0);
        gbc.writeMem(0x2ac0, { 0x10 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2b0a, gbc.sp());
        EXPECT(0x2ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00F3
        gbc.setState(0x65e4, 0x8397, 0xe430, 0xa07d, 0x7a8, 0x8526, 0x1, 0x1);
        gbc.writeMem(0x65e4, { 0x10 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8397, gbc.sp());
        EXPECT(0x65e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00F4
        gbc.setState(0xdae5, 0x6fc0, 0x950, 0xdc3d, 0x8d9d, 0xf1e4, 0x0, 0x1);
        gbc.writeMem(0xdae5, { 0x10 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6fc0, gbc.sp());
        EXPECT(0xdae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdae5));
        // 10 00F6
        gbc.setState(0x1567, 0xed75, 0x2b40, 0x9659, 0x600b, 0x1edc, 0x0, 0x1);
        gbc.writeMem(0x1567, { 0x10 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xed75, gbc.sp());
        EXPECT(0x1568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00F8
        gbc.setState(0x40be, 0xf092, 0xa550, 0x80d2, 0x7bc1, 0xc709, 0x0, 0x1);
        gbc.writeMem(0x40be, { 0x10 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf092, gbc.sp());
        EXPECT(0x40bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00F9
        gbc.setState(0x33a0, 0xcf2f, 0xd300, 0xf429, 0x8147, 0xbcd1, 0x1, 0x1);
        gbc.writeMem(0x33a0, { 0x10 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcf2f, gbc.sp());
        EXPECT(0x33a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 00FA
        gbc.setState(0xae5f, 0x7484, 0xb2c0, 0x1a28, 0xfdd, 0x3175, 0x0, 0x0);
        gbc.writeMem(0xae5f, { 0x10 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7484, gbc.sp());
        EXPECT(0xae60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xae5f));
        // 10 00FB
        gbc.setState(0x5047, 0x6681, 0xbd90, 0x6fad, 0x2309, 0x7e72, 0x0, 0x0);
        gbc.writeMem(0x5047, { 0x10 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6681, gbc.sp());
        EXPECT(0x5048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 00FC
        gbc.setState(0xc255, 0x3997, 0xce40, 0x4c25, 0x595d, 0x8476, 0x1, 0x0);
        gbc.writeMem(0xc255, { 0x10 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3997, gbc.sp());
        EXPECT(0xc256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc255));
        // 10 00FD
        gbc.setState(0xe14f, 0xf420, 0xfbf0, 0x7732, 0x1238, 0x628f, 0x0, 0x1);
        gbc.writeMem(0xe14f, { 0x10 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf420, gbc.sp());
        EXPECT(0xe150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe14f));
        // 10 00FF
        gbc.setState(0x5f49, 0x8667, 0xfb20, 0xa94e, 0x132c, 0x83, 0x0, 0x1);
        gbc.writeMem(0x5f49, { 0x10 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8667, gbc.sp());
        EXPECT(0x5f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0100
        gbc.setState(0xb717, 0x8381, 0xaae0, 0xba28, 0x73bf, 0xaec8, 0x1, 0x0);
        gbc.writeMem(0xb717, { 0x10 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8381, gbc.sp());
        EXPECT(0xb718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb717));
        // 10 0101
        gbc.setState(0x14a, 0x7bc6, 0x85d0, 0x15a6, 0xeed8, 0xf090, 0x1, 0x1);
        gbc.writeMem(0x14a, { 0x10 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7bc6, gbc.sp());
        EXPECT(0x14b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0102
        gbc.setState(0x55be, 0x5b5a, 0xc5a0, 0x870a, 0x16c7, 0xb7fe, 0x1, 0x1);
        gbc.writeMem(0x55be, { 0x10 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5b5a, gbc.sp());
        EXPECT(0x55bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0103
        gbc.setState(0x60b7, 0x2d0e, 0x34d0, 0x513c, 0x164f, 0xe2ac, 0x1, 0x1);
        gbc.writeMem(0x60b7, { 0x10 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2d0e, gbc.sp());
        EXPECT(0x60b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0104
        gbc.setState(0x6c34, 0xb21f, 0x2650, 0x71e9, 0xbe11, 0x56e3, 0x0, 0x1);
        gbc.writeMem(0x6c34, { 0x10 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb21f, gbc.sp());
        EXPECT(0x6c35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0105
        gbc.setState(0xba09, 0x4c8c, 0xb610, 0x3086, 0xb873, 0x6139, 0x0, 0x0);
        gbc.writeMem(0xba09, { 0x10 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4c8c, gbc.sp());
        EXPECT(0xba0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xba09));
        // 10 0106
        gbc.setState(0xdf18, 0xee4a, 0x5bc0, 0x8464, 0x399f, 0xc30d, 0x0, 0x0);
        gbc.writeMem(0xdf18, { 0x10 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xee4a, gbc.sp());
        EXPECT(0xdf19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdf18));
        // 10 0107
        gbc.setState(0xcbb4, 0x7e57, 0x62d0, 0xfe2b, 0x9afb, 0xcccd, 0x0, 0x1);
        gbc.writeMem(0xcbb4, { 0x10 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7e57, gbc.sp());
        EXPECT(0xcbb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcbb4));
        // 10 0108
        gbc.setState(0x15ce, 0xd131, 0xf3f0, 0x9b84, 0x68e5, 0x4601, 0x1, 0x1);
        gbc.writeMem(0x15ce, { 0x10 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd131, gbc.sp());
        EXPECT(0x15cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0109
        gbc.setState(0xe008, 0x54f3, 0xd880, 0xbb2d, 0x13d2, 0xff08, 0x0, 0x0);
        gbc.writeMem(0xe008, { 0x10 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x54f3, gbc.sp());
        EXPECT(0xe009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe008));
        // 10 010A
        gbc.setState(0xc9d8, 0xcd62, 0xa7e0, 0x157e, 0xae0d, 0x8e34, 0x0, 0x1);
        gbc.writeMem(0xc9d8, { 0x10 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcd62, gbc.sp());
        EXPECT(0xc9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc9d8));
        // 10 010B
        gbc.setState(0x9938, 0x581d, 0xac20, 0x16cc, 0xb67f, 0x8109, 0x0, 0x1);
        gbc.writeMem(0x9938, { 0x10 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x581d, gbc.sp());
        EXPECT(0x9939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9938));
        // 10 010C
        gbc.setState(0xce7e, 0x971a, 0x1aa0, 0x4f70, 0xd774, 0x738, 0x0, 0x0);
        gbc.writeMem(0xce7e, { 0x10 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x971a, gbc.sp());
        EXPECT(0xce7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xce7e));
        // 10 010D
        gbc.setState(0x1991, 0x3862, 0xc3b0, 0x8ff0, 0x36, 0x91f0, 0x0, 0x0);
        gbc.writeMem(0x1991, { 0x10 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3862, gbc.sp());
        EXPECT(0x1992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 010E
        gbc.setState(0xc5d0, 0x1b0a, 0xcc00, 0x4d7c, 0x1845, 0xb960, 0x0, 0x1);
        gbc.writeMem(0xc5d0, { 0x10 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1b0a, gbc.sp());
        EXPECT(0xc5d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc5d0));
        // 10 010F
        gbc.setState(0xa49, 0xe314, 0xb5e0, 0xfa76, 0x1e11, 0xf7ce, 0x1, 0x1);
        gbc.writeMem(0xa49, { 0x10 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe314, gbc.sp());
        EXPECT(0xa4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0110
        gbc.setState(0x6db, 0x1b74, 0xc4b0, 0x539b, 0xd315, 0xaa4a, 0x1, 0x1);
        gbc.writeMem(0x6db, { 0x10 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1b74, gbc.sp());
        EXPECT(0x6dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0111
        gbc.setState(0xb400, 0x90ee, 0x54e0, 0xd732, 0xf99, 0x31df, 0x1, 0x1);
        gbc.writeMem(0xb400, { 0x10 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x90ee, gbc.sp());
        EXPECT(0xb401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb400));
        // 10 0112
        gbc.setState(0xe003, 0xad50, 0x40a0, 0xeb70, 0xc0e0, 0xbf1e, 0x0, 0x0);
        gbc.writeMem(0xe003, { 0x10 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xad50, gbc.sp());
        EXPECT(0xe004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe003));
        // 10 0113
        gbc.setState(0x27c5, 0xe14c, 0x4ea0, 0xfb87, 0xe35e, 0x9c58, 0x1, 0x1);
        gbc.writeMem(0x27c5, { 0x10 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe14c, gbc.sp());
        EXPECT(0x27c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0114
        gbc.setState(0x8f21, 0xbfc, 0xf300, 0xdc6d, 0xd3ce, 0x1c11, 0x0, 0x0);
        gbc.writeMem(0x8f21, { 0x10 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbfc, gbc.sp());
        EXPECT(0x8f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8f21));
        // 10 0115
        gbc.setState(0x4324, 0xb985, 0x3440, 0xa2e5, 0xb3ec, 0xe9c9, 0x1, 0x0);
        gbc.writeMem(0x4324, { 0x10 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb985, gbc.sp());
        EXPECT(0x4325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0117
        gbc.setState(0xc891, 0x2efa, 0xc2d0, 0x75dc, 0x56e6, 0x6475, 0x1, 0x0);
        gbc.writeMem(0xc891, { 0x10 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2efa, gbc.sp());
        EXPECT(0xc892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc891));
        // 10 0118
        gbc.setState(0xe91, 0x67b3, 0x9680, 0xb279, 0xae21, 0x6c38, 0x0, 0x0);
        gbc.writeMem(0xe91, { 0x10 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x67b3, gbc.sp());
        EXPECT(0xe92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0119
        gbc.setState(0x1540, 0x6df1, 0x2a90, 0x904b, 0xe8d, 0x4dd3, 0x1, 0x1);
        gbc.writeMem(0x1540, { 0x10 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6df1, gbc.sp());
        EXPECT(0x1541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 011A
        gbc.setState(0xb7d4, 0x78b6, 0xf390, 0xd5b8, 0x4afd, 0xcf9e, 0x1, 0x0);
        gbc.writeMem(0xb7d4, { 0x10 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x78b6, gbc.sp());
        EXPECT(0xb7d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb7d4));
        // 10 011B
        gbc.setState(0x8f73, 0x23e2, 0xc050, 0x346c, 0xab6e, 0x3873, 0x0, 0x0);
        gbc.writeMem(0x8f73, { 0x10 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x23e2, gbc.sp());
        EXPECT(0x8f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8f73));
        // 10 011C
        gbc.setState(0xdf68, 0xb29a, 0xfcd0, 0x4803, 0xd9c6, 0x877f, 0x0, 0x1);
        gbc.writeMem(0xdf68, { 0x10 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb29a, gbc.sp());
        EXPECT(0xdf69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdf68));
        // 10 011D
        gbc.setState(0x20d9, 0x1c11, 0xa370, 0xb23c, 0xede9, 0x653, 0x0, 0x0);
        gbc.writeMem(0x20d9, { 0x10 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1c11, gbc.sp());
        EXPECT(0x20da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 011E
        gbc.setState(0x56f8, 0xfc92, 0xac70, 0xb1c7, 0x7256, 0x7902, 0x0, 0x0);
        gbc.writeMem(0x56f8, { 0x10 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfc92, gbc.sp());
        EXPECT(0x56f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 011F
        gbc.setState(0x58e7, 0xba59, 0x8910, 0xc354, 0x6ca5, 0x3b4f, 0x0, 0x1);
        gbc.writeMem(0x58e7, { 0x10 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xba59, gbc.sp());
        EXPECT(0x58e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0120
        gbc.setState(0x17c0, 0x6a88, 0x3140, 0x9b77, 0x7d15, 0xbcaf, 0x1, 0x1);
        gbc.writeMem(0x17c0, { 0x10 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6a88, gbc.sp());
        EXPECT(0x17c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0121
        gbc.setState(0x39a8, 0x2fda, 0x89d0, 0xc11a, 0x60eb, 0xa24e, 0x0, 0x0);
        gbc.writeMem(0x39a8, { 0x10 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2fda, gbc.sp());
        EXPECT(0x39a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0122
        gbc.setState(0x37aa, 0x298d, 0x2df0, 0x406e, 0x606f, 0x7f2e, 0x1, 0x1);
        gbc.writeMem(0x37aa, { 0x10 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x298d, gbc.sp());
        EXPECT(0x37ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0123
        gbc.setState(0xc30b, 0xc65e, 0x630, 0x6b3d, 0x7a28, 0x43a5, 0x0, 0x1);
        gbc.writeMem(0xc30b, { 0x10 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc65e, gbc.sp());
        EXPECT(0xc30c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc30b));
        // 10 0124
        gbc.setState(0xbfeb, 0x8c2f, 0xdc0, 0x37c1, 0xa1ac, 0x4ec8, 0x1, 0x0);
        gbc.writeMem(0xbfeb, { 0x10 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8c2f, gbc.sp());
        EXPECT(0xbfec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbfeb));
        // 10 0125
        gbc.setState(0xa224, 0x10be, 0x99c0, 0xa2db, 0xf75, 0xdded, 0x1, 0x0);
        gbc.writeMem(0xa224, { 0x10 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x10be, gbc.sp());
        EXPECT(0xa225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa224));
        // 10 0126
        gbc.setState(0x2b47, 0xcfa7, 0x1390, 0xfbba, 0x3dfc, 0xd10, 0x1, 0x1);
        gbc.writeMem(0x2b47, { 0x10 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcfa7, gbc.sp());
        EXPECT(0x2b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0127
        gbc.setState(0x71c6, 0x1708, 0x4c10, 0x42a8, 0x90dc, 0xfd89, 0x0, 0x1);
        gbc.writeMem(0x71c6, { 0x10 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1708, gbc.sp());
        EXPECT(0x71c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0128
        gbc.setState(0x5a9f, 0xf70c, 0xb990, 0x3861, 0xf4ce, 0xa311, 0x1, 0x1);
        gbc.writeMem(0x5a9f, { 0x10 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf70c, gbc.sp());
        EXPECT(0x5aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0129
        gbc.setState(0x8c04, 0x90ed, 0x9c10, 0x6673, 0x1a8, 0x261b, 0x1, 0x1);
        gbc.writeMem(0x8c04, { 0x10 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x90ed, gbc.sp());
        EXPECT(0x8c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8c04));
        // 10 012A
        gbc.setState(0xcc5c, 0xdaa2, 0x5750, 0x238b, 0x714c, 0x7f3, 0x0, 0x1);
        gbc.writeMem(0xcc5c, { 0x10 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdaa2, gbc.sp());
        EXPECT(0xcc5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcc5c));
        // 10 012B
        gbc.setState(0x4eb, 0x4d2c, 0xab0, 0x1651, 0x2403, 0x267c, 0x0, 0x1);
        gbc.writeMem(0x4eb, { 0x10 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4d2c, gbc.sp());
        EXPECT(0x4ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 012C
        gbc.setState(0xbf8b, 0xbf52, 0xeb30, 0xb356, 0x56e9, 0x4096, 0x0, 0x0);
        gbc.writeMem(0xbf8b, { 0x10 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbf52, gbc.sp());
        EXPECT(0xbf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbf8b));
        // 10 012D
        gbc.setState(0xc353, 0x27e9, 0x8cd0, 0x6d76, 0x83ea, 0x90cf, 0x1, 0x1);
        gbc.writeMem(0xc353, { 0x10 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x27e9, gbc.sp());
        EXPECT(0xc354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc353));
        // 10 012E
        gbc.setState(0xd1fa, 0x71d8, 0x2290, 0xf220, 0xd1a7, 0x81e1, 0x0, 0x0);
        gbc.writeMem(0xd1fa, { 0x10 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x71d8, gbc.sp());
        EXPECT(0xd1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd1fa));
        // 10 012F
        gbc.setState(0x1526, 0xe0c1, 0x3fa0, 0x8a6f, 0x64a4, 0xd229, 0x0, 0x0);
        gbc.writeMem(0x1526, { 0x10 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe0c1, gbc.sp());
        EXPECT(0x1527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0130
        gbc.setState(0x6e79, 0x405c, 0x5aa0, 0x19f1, 0xb16b, 0xcd0d, 0x1, 0x0);
        gbc.writeMem(0x6e79, { 0x10 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x405c, gbc.sp());
        EXPECT(0x6e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0131
        gbc.setState(0x50e3, 0xa2e1, 0x5440, 0x8256, 0x830a, 0xa46f, 0x0, 0x1);
        gbc.writeMem(0x50e3, { 0x10 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa2e1, gbc.sp());
        EXPECT(0x50e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0132
        gbc.setState(0xa7ee, 0x39c6, 0xf60, 0x629a, 0xef1e, 0xd4c5, 0x0, 0x0);
        gbc.writeMem(0xa7ee, { 0x10 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x39c6, gbc.sp());
        EXPECT(0xa7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa7ee));
        // 10 0133
        gbc.setState(0x6717, 0x3f68, 0xfa10, 0x1c1a, 0xbc9, 0x2f0b, 0x0, 0x1);
        gbc.writeMem(0x6717, { 0x10 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3f68, gbc.sp());
        EXPECT(0x6718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0134
        gbc.setState(0xdb69, 0xfbe2, 0xf1d0, 0x8169, 0x9840, 0xad20, 0x1, 0x1);
        gbc.writeMem(0xdb69, { 0x10 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfbe2, gbc.sp());
        EXPECT(0xdb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdb69));
        // 10 0135
        gbc.setState(0xeef8, 0x8cb2, 0x61a0, 0xcc98, 0x7db8, 0xd6a5, 0x1, 0x1);
        gbc.writeMem(0xeef8, { 0x10 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8cb2, gbc.sp());
        EXPECT(0xeef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xeef8));
        // 10 0136
        gbc.setState(0xc1d5, 0xae3e, 0xc970, 0xee9c, 0xec1d, 0x892f, 0x0, 0x0);
        gbc.writeMem(0xc1d5, { 0x10 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xae3e, gbc.sp());
        EXPECT(0xc1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc1d5));
        // 10 0137
        gbc.setState(0x7753, 0x3364, 0x3110, 0x770d, 0x2b2d, 0x555c, 0x1, 0x0);
        gbc.writeMem(0x7753, { 0x10 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3364, gbc.sp());
        EXPECT(0x7754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0138
        gbc.setState(0xd567, 0x527a, 0xf520, 0x8825, 0xab5b, 0x2b6e, 0x1, 0x1);
        gbc.writeMem(0xd567, { 0x10 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x527a, gbc.sp());
        EXPECT(0xd568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd567));
        // 10 0139
        gbc.setState(0x263d, 0xd70d, 0x78b0, 0x2b7b, 0x7a64, 0xf0fe, 0x1, 0x0);
        gbc.writeMem(0x263d, { 0x10 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd70d, gbc.sp());
        EXPECT(0x263e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 013A
        gbc.setState(0x8d6b, 0x802, 0xee80, 0xaf3f, 0xa713, 0x7be2, 0x1, 0x0);
        gbc.writeMem(0x8d6b, { 0x10 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x802, gbc.sp());
        EXPECT(0x8d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8d6b));
        // 10 013B
        gbc.setState(0x8b66, 0xe30e, 0xec60, 0x2336, 0xb0c4, 0x63c3, 0x0, 0x1);
        gbc.writeMem(0x8b66, { 0x10 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe30e, gbc.sp());
        EXPECT(0x8b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8b66));
        // 10 013C
        gbc.setState(0xab7e, 0xd8e7, 0x8c50, 0x236d, 0x9801, 0x253c, 0x0, 0x1);
        gbc.writeMem(0xab7e, { 0x10 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd8e7, gbc.sp());
        EXPECT(0xab7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xab7e));
        // 10 013D
        gbc.setState(0x76fb, 0x9e, 0x4f0, 0xaad0, 0x7ec5, 0xcc4a, 0x0, 0x0);
        gbc.writeMem(0x76fb, { 0x10 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9e, gbc.sp());
        EXPECT(0x76fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 013E
        gbc.setState(0x2d8a, 0x45a5, 0x8130, 0x6a86, 0x2680, 0x973b, 0x0, 0x0);
        gbc.writeMem(0x2d8a, { 0x10 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x45a5, gbc.sp());
        EXPECT(0x2d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 013F
        gbc.setState(0x47af, 0xac6c, 0x33a0, 0x5965, 0x4a04, 0xaacb, 0x0, 0x0);
        gbc.writeMem(0x47af, { 0x10 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xac6c, gbc.sp());
        EXPECT(0x47b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0140
        gbc.setState(0xa8ae, 0x8e32, 0x38a0, 0x660e, 0xaff3, 0x884b, 0x1, 0x0);
        gbc.writeMem(0xa8ae, { 0x10 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8e32, gbc.sp());
        EXPECT(0xa8af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa8ae));
        // 10 0142
        gbc.setState(0x8a3d, 0xd862, 0x20f0, 0xf1a2, 0x4557, 0xecb4, 0x1, 0x1);
        gbc.writeMem(0x8a3d, { 0x10 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd862, gbc.sp());
        EXPECT(0x8a3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8a3d));
        // 10 0143
        gbc.setState(0xa104, 0xfa63, 0xc9b0, 0xf62e, 0xb1bc, 0xdff0, 0x0, 0x0);
        gbc.writeMem(0xa104, { 0x10 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfa63, gbc.sp());
        EXPECT(0xa105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa104));
        // 10 0145
        gbc.setState(0xa19c, 0xe9df, 0xe8b0, 0x4b55, 0x49a3, 0x553b, 0x0, 0x1);
        gbc.writeMem(0xa19c, { 0x10 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe9df, gbc.sp());
        EXPECT(0xa19d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa19c));
        // 10 0146
        gbc.setState(0x82ec, 0x9d7b, 0x210, 0xc29c, 0xfe53, 0xc2f4, 0x1, 0x1);
        gbc.writeMem(0x82ec, { 0x10 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9d7b, gbc.sp());
        EXPECT(0x82ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x82ec));
        // 10 0147
        gbc.setState(0xa852, 0xb821, 0x1ba0, 0x41a, 0xd2bd, 0x761f, 0x1, 0x1);
        gbc.writeMem(0xa852, { 0x10 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb821, gbc.sp());
        EXPECT(0xa853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa852));
        // 10 0148
        gbc.setState(0x1160, 0x75e3, 0x6e80, 0xe977, 0xa9fa, 0x5e13, 0x0, 0x0);
        gbc.writeMem(0x1160, { 0x10 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x75e3, gbc.sp());
        EXPECT(0x1161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0149
        gbc.setState(0xefb7, 0x7061, 0x3260, 0xdf17, 0xdb83, 0x63c6, 0x1, 0x1);
        gbc.writeMem(0xefb7, { 0x10 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7061, gbc.sp());
        EXPECT(0xefb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xefb7));
        // 10 014A
        gbc.setState(0x8c9f, 0xbc5b, 0xfef0, 0xb886, 0x585e, 0xbc, 0x0, 0x1);
        gbc.writeMem(0x8c9f, { 0x10 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbc5b, gbc.sp());
        EXPECT(0x8ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8c9f));
        // 10 014B
        gbc.setState(0x1e21, 0xbe5b, 0xc9d0, 0x27c6, 0xef66, 0x1e9f, 0x1, 0x1);
        gbc.writeMem(0x1e21, { 0x10 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbe5b, gbc.sp());
        EXPECT(0x1e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 014C
        gbc.setState(0x8ea0, 0x2216, 0x3830, 0x7821, 0x16a0, 0x5c8f, 0x0, 0x0);
        gbc.writeMem(0x8ea0, { 0x10 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2216, gbc.sp());
        EXPECT(0x8ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8ea0));
        // 10 014D
        gbc.setState(0x2848, 0x8a26, 0xeb40, 0xd8e5, 0xae10, 0x5633, 0x0, 0x0);
        gbc.writeMem(0x2848, { 0x10 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8a26, gbc.sp());
        EXPECT(0x2849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 014E
        gbc.setState(0x4e1c, 0x773c, 0xc490, 0x6803, 0xc5da, 0x2c3e, 0x0, 0x0);
        gbc.writeMem(0x4e1c, { 0x10 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x773c, gbc.sp());
        EXPECT(0x4e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 014F
        gbc.setState(0x3b23, 0xc9c2, 0x6290, 0x854e, 0x80b2, 0x2f98, 0x0, 0x1);
        gbc.writeMem(0x3b23, { 0x10 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc9c2, gbc.sp());
        EXPECT(0x3b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0150
        gbc.setState(0x5192, 0x754f, 0x810, 0x56e, 0xa139, 0x8b84, 0x0, 0x0);
        gbc.writeMem(0x5192, { 0x10 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x754f, gbc.sp());
        EXPECT(0x5193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0151
        gbc.setState(0x301c, 0x7d99, 0xb540, 0x8075, 0x8119, 0xdf09, 0x0, 0x1);
        gbc.writeMem(0x301c, { 0x10 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7d99, gbc.sp());
        EXPECT(0x301d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0152
        gbc.setState(0xaeb1, 0x9f71, 0x5ab0, 0x2179, 0x330, 0xe05, 0x1, 0x1);
        gbc.writeMem(0xaeb1, { 0x10 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9f71, gbc.sp());
        EXPECT(0xaeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xaeb1));
        // 10 0153
        gbc.setState(0xb8fe, 0x6ce2, 0x3850, 0x20be, 0xae9a, 0x2fe6, 0x1, 0x1);
        gbc.writeMem(0xb8fe, { 0x10 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6ce2, gbc.sp());
        EXPECT(0xb8ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb8fe));
        // 10 0154
        gbc.setState(0x6317, 0x2c63, 0xd180, 0x35b3, 0x714e, 0x55da, 0x1, 0x0);
        gbc.writeMem(0x6317, { 0x10 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2c63, gbc.sp());
        EXPECT(0x6318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0155
        gbc.setState(0xa2d8, 0x2ff9, 0x14c0, 0x72a4, 0x7c0d, 0xf8a6, 0x0, 0x1);
        gbc.writeMem(0xa2d8, { 0x10 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2ff9, gbc.sp());
        EXPECT(0xa2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa2d8));
        // 10 0156
        gbc.setState(0x910e, 0x30cc, 0xa0a0, 0x468, 0xa9b3, 0x22aa, 0x1, 0x1);
        gbc.writeMem(0x910e, { 0x10 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x30cc, gbc.sp());
        EXPECT(0x910f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x910e));
        // 10 0159
        gbc.setState(0x9fa3, 0x7670, 0xd1f0, 0x70c4, 0x95cb, 0x836d, 0x1, 0x1);
        gbc.writeMem(0x9fa3, { 0x10 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7670, gbc.sp());
        EXPECT(0x9fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9fa3));
        // 10 015A
        gbc.setState(0x922a, 0x5e1b, 0x4490, 0x8b35, 0xfcf2, 0xfce1, 0x1, 0x0);
        gbc.writeMem(0x922a, { 0x10 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5e1b, gbc.sp());
        EXPECT(0x922b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x922a));
        // 10 015B
        gbc.setState(0xc82, 0x4822, 0x8b0, 0x7621, 0xc8b8, 0xa9cb, 0x0, 0x0);
        gbc.writeMem(0xc82, { 0x10 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4822, gbc.sp());
        EXPECT(0xc83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 015C
        gbc.setState(0xacde, 0x709c, 0x6e10, 0x316a, 0x5c76, 0x4a93, 0x1, 0x1);
        gbc.writeMem(0xacde, { 0x10 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x709c, gbc.sp());
        EXPECT(0xacdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xacde));
        // 10 015D
        gbc.setState(0x9294, 0xc35, 0x32d0, 0x5c1b, 0x8e6, 0xfd3, 0x0, 0x0);
        gbc.writeMem(0x9294, { 0x10 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc35, gbc.sp());
        EXPECT(0x9295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9294));
        // 10 015E
        gbc.setState(0x7d78, 0xcaf, 0x2b80, 0x2e6f, 0x609f, 0x40d8, 0x0, 0x0);
        gbc.writeMem(0x7d78, { 0x10 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcaf, gbc.sp());
        EXPECT(0x7d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 015F
        gbc.setState(0xb75f, 0xf401, 0xd640, 0x760c, 0xe893, 0x5a6d, 0x1, 0x1);
        gbc.writeMem(0xb75f, { 0x10 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf401, gbc.sp());
        EXPECT(0xb760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb75f));
        // 10 0160
        gbc.setState(0xd51e, 0x83f0, 0xfab0, 0x3df0, 0x847f, 0xc4f6, 0x1, 0x1);
        gbc.writeMem(0xd51e, { 0x10 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x83f0, gbc.sp());
        EXPECT(0xd51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd51e));
        // 10 0162
        gbc.setState(0xe2bd, 0x694d, 0xeed0, 0xb7bd, 0x7aae, 0x2c1f, 0x0, 0x1);
        gbc.writeMem(0xe2bd, { 0x10 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x694d, gbc.sp());
        EXPECT(0xe2be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe2bd));
        // 10 0163
        gbc.setState(0xec01, 0x3c11, 0xc7b0, 0xa7cc, 0xfb70, 0xd9d2, 0x1, 0x0);
        gbc.writeMem(0xec01, { 0x10 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3c11, gbc.sp());
        EXPECT(0xec02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xec01));
        // 10 0164
        gbc.setState(0x1656, 0x7774, 0x85c0, 0x7c5a, 0xa8f4, 0x2f8a, 0x0, 0x1);
        gbc.writeMem(0x1656, { 0x10 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7774, gbc.sp());
        EXPECT(0x1657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0165
        gbc.setState(0x8b63, 0x939c, 0x1320, 0x29a5, 0xd0a6, 0x310b, 0x0, 0x1);
        gbc.writeMem(0x8b63, { 0x10 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x939c, gbc.sp());
        EXPECT(0x8b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8b63));
        // 10 0166
        gbc.setState(0xc40e, 0xff62, 0xd440, 0xf8d8, 0x6f69, 0xea04, 0x1, 0x0);
        gbc.writeMem(0xc40e, { 0x10 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xff62, gbc.sp());
        EXPECT(0xc40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc40e));
        // 10 0167
        gbc.setState(0xb0d7, 0x71b2, 0x5fd0, 0xb0b3, 0x1c25, 0xf213, 0x1, 0x0);
        gbc.writeMem(0xb0d7, { 0x10 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x71b2, gbc.sp());
        EXPECT(0xb0d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb0d7));
        // 10 0168
        gbc.setState(0x6ab2, 0xc2e0, 0xf000, 0x441d, 0xa684, 0xdfee, 0x1, 0x0);
        gbc.writeMem(0x6ab2, { 0x10 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc2e0, gbc.sp());
        EXPECT(0x6ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0169
        gbc.setState(0xb9b2, 0x8b12, 0x37b0, 0x792d, 0x6795, 0xaca1, 0x0, 0x1);
        gbc.writeMem(0xb9b2, { 0x10 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8b12, gbc.sp());
        EXPECT(0xb9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb9b2));
        // 10 016A
        gbc.setState(0xa5f9, 0xd8a8, 0x77a0, 0xb92f, 0x4a6f, 0x436d, 0x0, 0x1);
        gbc.writeMem(0xa5f9, { 0x10 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd8a8, gbc.sp());
        EXPECT(0xa5fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa5f9));
        // 10 016B
        gbc.setState(0x9060, 0xef07, 0x4020, 0x6488, 0xf61b, 0x340e, 0x0, 0x1);
        gbc.writeMem(0x9060, { 0x10 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xef07, gbc.sp());
        EXPECT(0x9061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9060));
        // 10 016C
        gbc.setState(0x6496, 0x8c98, 0x8070, 0xe4f4, 0x3b72, 0x7ab9, 0x0, 0x0);
        gbc.writeMem(0x6496, { 0x10 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8c98, gbc.sp());
        EXPECT(0x6497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 016D
        gbc.setState(0x7cea, 0xe69f, 0x41c0, 0xc342, 0xe7c0, 0xcf7c, 0x1, 0x1);
        gbc.writeMem(0x7cea, { 0x10 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe69f, gbc.sp());
        EXPECT(0x7ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 016E
        gbc.setState(0x212a, 0x21db, 0xb530, 0xc255, 0xedd6, 0xc66d, 0x1, 0x1);
        gbc.writeMem(0x212a, { 0x10 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x21db, gbc.sp());
        EXPECT(0x212b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 016F
        gbc.setState(0x8694, 0xf1b6, 0x1220, 0xbe42, 0x4044, 0x26d0, 0x0, 0x1);
        gbc.writeMem(0x8694, { 0x10 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf1b6, gbc.sp());
        EXPECT(0x8695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8694));
        // 10 0170
        gbc.setState(0x5a56, 0x8105, 0x95b0, 0x1c09, 0xaf11, 0x7449, 0x0, 0x1);
        gbc.writeMem(0x5a56, { 0x10 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8105, gbc.sp());
        EXPECT(0x5a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0171
        gbc.setState(0x6c94, 0xd178, 0xadf0, 0xcd4f, 0x9149, 0x5e25, 0x0, 0x0);
        gbc.writeMem(0x6c94, { 0x10 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd178, gbc.sp());
        EXPECT(0x6c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0172
        gbc.setState(0x81a3, 0xe5ac, 0x84c0, 0x9ba5, 0xc82, 0xaea9, 0x1, 0x0);
        gbc.writeMem(0x81a3, { 0x10 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe5ac, gbc.sp());
        EXPECT(0x81a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x81a3));
        // 10 0173
        gbc.setState(0x66b8, 0x7fae, 0xbe50, 0xfeec, 0xe7c0, 0xd97a, 0x0, 0x0);
        gbc.writeMem(0x66b8, { 0x10 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7fae, gbc.sp());
        EXPECT(0x66b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0174
        gbc.setState(0x7025, 0xe165, 0xd870, 0xacb4, 0xc529, 0x5f7d, 0x1, 0x0);
        gbc.writeMem(0x7025, { 0x10 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe165, gbc.sp());
        EXPECT(0x7026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0175
        gbc.setState(0xca6a, 0xa35a, 0x5cf0, 0xcc03, 0xec0a, 0xd9a, 0x1, 0x1);
        gbc.writeMem(0xca6a, { 0x10 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa35a, gbc.sp());
        EXPECT(0xca6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xca6a));
        // 10 0176
        gbc.setState(0x5977, 0x70f8, 0xded0, 0x847, 0xf8b2, 0x2e37, 0x0, 0x1);
        gbc.writeMem(0x5977, { 0x10 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x70f8, gbc.sp());
        EXPECT(0x5978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0177
        gbc.setState(0x7a3f, 0xbcb, 0x9f10, 0xebc2, 0xbe80, 0xdf1, 0x1, 0x1);
        gbc.writeMem(0x7a3f, { 0x10 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbcb, gbc.sp());
        EXPECT(0x7a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0178
        gbc.setState(0x4b6, 0xd904, 0x9990, 0x4260, 0xad08, 0xd87c, 0x0, 0x1);
        gbc.writeMem(0x4b6, { 0x10 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd904, gbc.sp());
        EXPECT(0x4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0179
        gbc.setState(0xe794, 0xec95, 0xb5e0, 0x5131, 0x31b9, 0xe88e, 0x0, 0x0);
        gbc.writeMem(0xe794, { 0x10 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xec95, gbc.sp());
        EXPECT(0xe795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe794));
        // 10 017A
        gbc.setState(0x121f, 0xa821, 0xd8f0, 0x969, 0x7990, 0x340c, 0x0, 0x1);
        gbc.writeMem(0x121f, { 0x10 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa821, gbc.sp());
        EXPECT(0x1220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 017B
        gbc.setState(0xba60, 0x81b9, 0xa320, 0xc3aa, 0xb288, 0x4e01, 0x1, 0x1);
        gbc.writeMem(0xba60, { 0x10 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x81b9, gbc.sp());
        EXPECT(0xba61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xba60));
        // 10 017C
        gbc.setState(0xd274, 0x4ef3, 0xae10, 0x397a, 0x8581, 0x916f, 0x0, 0x1);
        gbc.writeMem(0xd274, { 0x10 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4ef3, gbc.sp());
        EXPECT(0xd275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd274));
        // 10 017D
        gbc.setState(0xb8e5, 0xa586, 0x6200, 0x477c, 0x2969, 0x8b73, 0x0, 0x0);
        gbc.writeMem(0xb8e5, { 0x10 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa586, gbc.sp());
        EXPECT(0xb8e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb8e5));
        // 10 017E
        gbc.setState(0x830e, 0x6171, 0x4f10, 0x69c8, 0xc48f, 0x3b56, 0x1, 0x0);
        gbc.writeMem(0x830e, { 0x10 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6171, gbc.sp());
        EXPECT(0x830f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x830e));
        // 10 017F
        gbc.setState(0xd37b, 0x2e8b, 0x8500, 0xd5a3, 0x4294, 0xaf0f, 0x1, 0x0);
        gbc.writeMem(0xd37b, { 0x10 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2e8b, gbc.sp());
        EXPECT(0xd37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd37b));
        // 10 0181
        gbc.setState(0xec09, 0x360, 0x3720, 0xc629, 0xb41, 0x572d, 0x1, 0x1);
        gbc.writeMem(0xec09, { 0x10 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x360, gbc.sp());
        EXPECT(0xec0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xec09));
        // 10 0182
        gbc.setState(0x66d6, 0x1144, 0xef30, 0xfe7b, 0xe02a, 0xff38, 0x1, 0x0);
        gbc.writeMem(0x66d6, { 0x10 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1144, gbc.sp());
        EXPECT(0x66d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0183
        gbc.setState(0x82, 0x6fd5, 0x1f40, 0xbd79, 0x5dec, 0x9084, 0x0, 0x1);
        gbc.writeMem(0x82, { 0x10 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6fd5, gbc.sp());
        EXPECT(0x83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0184
        gbc.setState(0x761a, 0x29aa, 0xee0, 0x2a6b, 0xc55a, 0x799f, 0x0, 0x1);
        gbc.writeMem(0x761a, { 0x10 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x29aa, gbc.sp());
        EXPECT(0x761b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0185
        gbc.setState(0x82f, 0xe05d, 0xaa80, 0x9170, 0x933e, 0xbf4b, 0x1, 0x0);
        gbc.writeMem(0x82f, { 0x10 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe05d, gbc.sp());
        EXPECT(0x830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0186
        gbc.setState(0x8a06, 0xc6ba, 0x16e0, 0xf265, 0x6f99, 0xc25c, 0x1, 0x1);
        gbc.writeMem(0x8a06, { 0x10 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc6ba, gbc.sp());
        EXPECT(0x8a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8a06));
        // 10 0187
        gbc.setState(0x5f78, 0x8065, 0x33d0, 0x6c64, 0xb6a8, 0x724d, 0x1, 0x1);
        gbc.writeMem(0x5f78, { 0x10 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8065, gbc.sp());
        EXPECT(0x5f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0188
        gbc.setState(0xed2a, 0x2f21, 0xb390, 0xa533, 0x1bd3, 0x2a6c, 0x0, 0x1);
        gbc.writeMem(0xed2a, { 0x10 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2f21, gbc.sp());
        EXPECT(0xed2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xed2a));
        // 10 0189
        gbc.setState(0xa32e, 0xb2a3, 0x52b0, 0x78a6, 0xb364, 0x556, 0x0, 0x0);
        gbc.writeMem(0xa32e, { 0x10 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb2a3, gbc.sp());
        EXPECT(0xa32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa32e));
        // 10 018A
        gbc.setState(0x88f3, 0x9b56, 0x2890, 0x824b, 0x9293, 0x16a7, 0x1, 0x1);
        gbc.writeMem(0x88f3, { 0x10 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9b56, gbc.sp());
        EXPECT(0x88f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x88f3));
        // 10 018B
        gbc.setState(0xaf3d, 0x2c2d, 0xba40, 0x577c, 0xc503, 0x3fa9, 0x1, 0x1);
        gbc.writeMem(0xaf3d, { 0x10 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2c2d, gbc.sp());
        EXPECT(0xaf3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xaf3d));
        // 10 018C
        gbc.setState(0x3906, 0x3a95, 0x79c0, 0x8d83, 0xa98f, 0xd729, 0x0, 0x0);
        gbc.writeMem(0x3906, { 0x10 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3a95, gbc.sp());
        EXPECT(0x3907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 018D
        gbc.setState(0x38cc, 0x2d11, 0xe360, 0xefba, 0x254f, 0x414b, 0x1, 0x0);
        gbc.writeMem(0x38cc, { 0x10 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2d11, gbc.sp());
        EXPECT(0x38cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 018E
        gbc.setState(0xaa83, 0x7654, 0x2530, 0xd52f, 0xeb6a, 0x5909, 0x1, 0x1);
        gbc.writeMem(0xaa83, { 0x10 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7654, gbc.sp());
        EXPECT(0xaa84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xaa83));
        // 10 018F
        gbc.setState(0xbd70, 0x394c, 0xe9d0, 0x7559, 0x6076, 0x688c, 0x1, 0x0);
        gbc.writeMem(0xbd70, { 0x10 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x394c, gbc.sp());
        EXPECT(0xbd71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbd70));
        // 10 0190
        gbc.setState(0x8756, 0x4d50, 0x6170, 0x7e53, 0x6b0c, 0x5131, 0x1, 0x1);
        gbc.writeMem(0x8756, { 0x10 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4d50, gbc.sp());
        EXPECT(0x8757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8756));
        // 10 0191
        gbc.setState(0x37d, 0xc8e8, 0x54f0, 0xbd32, 0x4499, 0x6e22, 0x1, 0x1);
        gbc.writeMem(0x37d, { 0x10 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc8e8, gbc.sp());
        EXPECT(0x37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0192
        gbc.setState(0x402f, 0x918b, 0x6080, 0xbd11, 0x2075, 0xecc9, 0x1, 0x0);
        gbc.writeMem(0x402f, { 0x10 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x918b, gbc.sp());
        EXPECT(0x4030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0193
        gbc.setState(0x3685, 0xc9ac, 0xa8f0, 0xb30a, 0x8954, 0xca76, 0x1, 0x0);
        gbc.writeMem(0x3685, { 0x10 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc9ac, gbc.sp());
        EXPECT(0x3686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0194
        gbc.setState(0x792a, 0x2017, 0xed50, 0xb9a0, 0x4df9, 0x4d16, 0x0, 0x0);
        gbc.writeMem(0x792a, { 0x10 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2017, gbc.sp());
        EXPECT(0x792b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0195
        gbc.setState(0xeac5, 0x616b, 0x4b40, 0xb5c7, 0x2631, 0x4621, 0x1, 0x1);
        gbc.writeMem(0xeac5, { 0x10 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x616b, gbc.sp());
        EXPECT(0xeac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xeac5));
        // 10 0196
        gbc.setState(0xa0fb, 0x9504, 0x6960, 0x1c1c, 0x1e38, 0x2a38, 0x1, 0x0);
        gbc.writeMem(0xa0fb, { 0x10 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9504, gbc.sp());
        EXPECT(0xa0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa0fb));
        // 10 0197
        gbc.setState(0x4859, 0xec7b, 0xe2d0, 0x3dc0, 0x8a07, 0x337f, 0x0, 0x1);
        gbc.writeMem(0x4859, { 0x10 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xec7b, gbc.sp());
        EXPECT(0x485a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0198
        gbc.setState(0x6bc4, 0x7ede, 0x87d0, 0xbad2, 0xf221, 0xb945, 0x0, 0x1);
        gbc.writeMem(0x6bc4, { 0x10 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7ede, gbc.sp());
        EXPECT(0x6bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 019A
        gbc.setState(0xd034, 0x2855, 0x9bd0, 0xb473, 0x9381, 0xe895, 0x0, 0x0);
        gbc.writeMem(0xd034, { 0x10 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2855, gbc.sp());
        EXPECT(0xd035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd034));
        // 10 019B
        gbc.setState(0xebb, 0xdb9, 0xd430, 0x5b62, 0x5865, 0xdd94, 0x1, 0x0);
        gbc.writeMem(0xebb, { 0x10 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdb9, gbc.sp());
        EXPECT(0xebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 019C
        gbc.setState(0xfee, 0x8562, 0x1c30, 0xaa5, 0xfeab, 0x9a59, 0x0, 0x1);
        gbc.writeMem(0xfee, { 0x10 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8562, gbc.sp());
        EXPECT(0xfef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 019D
        gbc.setState(0x4795, 0x71e0, 0x27a0, 0xf0f, 0x248f, 0xfe19, 0x0, 0x1);
        gbc.writeMem(0x4795, { 0x10 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x71e0, gbc.sp());
        EXPECT(0x4796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 019E
        gbc.setState(0x2c30, 0x44b6, 0xaee0, 0x56bd, 0xd7a9, 0x12ba, 0x0, 0x1);
        gbc.writeMem(0x2c30, { 0x10 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x44b6, gbc.sp());
        EXPECT(0x2c31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 019F
        gbc.setState(0xc13f, 0x845a, 0x7c50, 0x833b, 0xb661, 0x1a1e, 0x0, 0x1);
        gbc.writeMem(0xc13f, { 0x10 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x845a, gbc.sp());
        EXPECT(0xc140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc13f));
        // 10 01A0
        gbc.setState(0xd3cc, 0xb120, 0x6440, 0x57d8, 0x82f1, 0x97f6, 0x0, 0x0);
        gbc.writeMem(0xd3cc, { 0x10 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb120, gbc.sp());
        EXPECT(0xd3cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd3cc));
        // 10 01A1
        gbc.setState(0xbf15, 0xfab4, 0x5570, 0x72eb, 0x5b91, 0x8baa, 0x0, 0x1);
        gbc.writeMem(0xbf15, { 0x10 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfab4, gbc.sp());
        EXPECT(0xbf16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbf15));
        // 10 01A2
        gbc.setState(0x36a3, 0x4e17, 0x96d0, 0x3c7f, 0x86ef, 0x2ebb, 0x0, 0x0);
        gbc.writeMem(0x36a3, { 0x10 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4e17, gbc.sp());
        EXPECT(0x36a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01A3
        gbc.setState(0x37e, 0xcacf, 0xac0, 0xbe85, 0x9e90, 0x8a44, 0x1, 0x0);
        gbc.writeMem(0x37e, { 0x10 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcacf, gbc.sp());
        EXPECT(0x37f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01A4
        gbc.setState(0x84e0, 0xa90f, 0x5f50, 0xc990, 0x37b7, 0xda7c, 0x1, 0x0);
        gbc.writeMem(0x84e0, { 0x10 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa90f, gbc.sp());
        EXPECT(0x84e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x84e0));
        // 10 01A5
        gbc.setState(0x1859, 0x5ced, 0xaa30, 0xda06, 0x3763, 0x7bcb, 0x0, 0x0);
        gbc.writeMem(0x1859, { 0x10 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5ced, gbc.sp());
        EXPECT(0x185a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01A6
        gbc.setState(0x56d6, 0x3761, 0x1ff0, 0xe32d, 0x5c85, 0x4b5f, 0x0, 0x1);
        gbc.writeMem(0x56d6, { 0x10 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3761, gbc.sp());
        EXPECT(0x56d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01A7
        gbc.setState(0x18c9, 0xd8ff, 0x8140, 0xff43, 0xccd0, 0xdae1, 0x0, 0x0);
        gbc.writeMem(0x18c9, { 0x10 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd8ff, gbc.sp());
        EXPECT(0x18ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01A8
        gbc.setState(0x6f28, 0x2324, 0x6270, 0xa7e1, 0x3ac1, 0x7f70, 0x0, 0x1);
        gbc.writeMem(0x6f28, { 0x10 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2324, gbc.sp());
        EXPECT(0x6f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01A9
        gbc.setState(0xb7cb, 0x4a9a, 0x30d0, 0x78fa, 0x9ad9, 0x76cc, 0x1, 0x1);
        gbc.writeMem(0xb7cb, { 0x10 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4a9a, gbc.sp());
        EXPECT(0xb7cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb7cb));
        // 10 01AA
        gbc.setState(0x7d73, 0x772e, 0xa040, 0x19f5, 0x90e8, 0x3335, 0x1, 0x1);
        gbc.writeMem(0x7d73, { 0x10 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x772e, gbc.sp());
        EXPECT(0x7d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01AB
        gbc.setState(0x7650, 0x9d38, 0xf700, 0xe5d9, 0x6478, 0x58e4, 0x0, 0x0);
        gbc.writeMem(0x7650, { 0x10 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9d38, gbc.sp());
        EXPECT(0x7651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01AC
        gbc.setState(0xb90e, 0xb501, 0x1ce0, 0xbc3f, 0xb6fe, 0x255a, 0x1, 0x0);
        gbc.writeMem(0xb90e, { 0x10 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb501, gbc.sp());
        EXPECT(0xb90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb90e));
        // 10 01AD
        gbc.setState(0xb1ce, 0x9998, 0x8910, 0x4f99, 0x94ba, 0x5e82, 0x1, 0x0);
        gbc.writeMem(0xb1ce, { 0x10 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9998, gbc.sp());
        EXPECT(0xb1cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb1ce));
        // 10 01AE
        gbc.setState(0xb5e7, 0x6213, 0x3240, 0x4c84, 0x2e06, 0x66c4, 0x1, 0x0);
        gbc.writeMem(0xb5e7, { 0x10 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6213, gbc.sp());
        EXPECT(0xb5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb5e7));
        // 10 01AF
        gbc.setState(0x2a3d, 0xe369, 0x17c0, 0xbf8f, 0x4be8, 0xe84d, 0x0, 0x1);
        gbc.writeMem(0x2a3d, { 0x10 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe369, gbc.sp());
        EXPECT(0x2a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01B0
        gbc.setState(0x71b3, 0xc409, 0xd6a0, 0xd180, 0x5e1d, 0x2f90, 0x1, 0x1);
        gbc.writeMem(0x71b3, { 0x10 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc409, gbc.sp());
        EXPECT(0x71b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01B1
        gbc.setState(0xda5e, 0xe3ae, 0x98b0, 0x2ad8, 0x917a, 0x227f, 0x0, 0x1);
        gbc.writeMem(0xda5e, { 0x10 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe3ae, gbc.sp());
        EXPECT(0xda5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xda5e));
        // 10 01B2
        gbc.setState(0xed3, 0x5fc0, 0x8750, 0xbac4, 0x317a, 0x9102, 0x1, 0x1);
        gbc.writeMem(0xed3, { 0x10 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5fc0, gbc.sp());
        EXPECT(0xed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01B3
        gbc.setState(0x1d88, 0xd6ee, 0x5af0, 0xcd79, 0x8942, 0x5d48, 0x1, 0x0);
        gbc.writeMem(0x1d88, { 0x10 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd6ee, gbc.sp());
        EXPECT(0x1d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01B4
        gbc.setState(0xa071, 0x632, 0xcab0, 0x927, 0xe9e5, 0xc976, 0x1, 0x0);
        gbc.writeMem(0xa071, { 0x10 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x632, gbc.sp());
        EXPECT(0xa072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa071));
        // 10 01B5
        gbc.setState(0x7e79, 0x3c2e, 0x3050, 0xea8, 0x1127, 0xfabd, 0x0, 0x1);
        gbc.writeMem(0x7e79, { 0x10 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3c2e, gbc.sp());
        EXPECT(0x7e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01B6
        gbc.setState(0xcf10, 0x5748, 0xa180, 0x5d59, 0x9cf2, 0x24a8, 0x1, 0x1);
        gbc.writeMem(0xcf10, { 0x10 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5748, gbc.sp());
        EXPECT(0xcf11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcf10));
        // 10 01B7
        gbc.setState(0x1912, 0xec83, 0xf100, 0xcdc2, 0x40f8, 0x592, 0x0, 0x1);
        gbc.writeMem(0x1912, { 0x10 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xec83, gbc.sp());
        EXPECT(0x1913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01B8
        gbc.setState(0x9a3c, 0x3113, 0xfab0, 0xa423, 0x8c98, 0x9ca, 0x0, 0x0);
        gbc.writeMem(0x9a3c, { 0x10 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3113, gbc.sp());
        EXPECT(0x9a3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9a3c));
        // 10 01B9
        gbc.setState(0x76ad, 0x5d0d, 0xac20, 0xe24, 0xab74, 0xa41, 0x1, 0x0);
        gbc.writeMem(0x76ad, { 0x10 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5d0d, gbc.sp());
        EXPECT(0x76ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01BA
        gbc.setState(0x4940, 0x1019, 0x4680, 0xf6a4, 0xbf1, 0x9ee7, 0x0, 0x0);
        gbc.writeMem(0x4940, { 0x10 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1019, gbc.sp());
        EXPECT(0x4941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01BB
        gbc.setState(0x668, 0x8dbb, 0x2e10, 0xe997, 0x4f13, 0xc9c1, 0x1, 0x1);
        gbc.writeMem(0x668, { 0x10 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8dbb, gbc.sp());
        EXPECT(0x669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01BD
        gbc.setState(0x2d31, 0xb081, 0xe410, 0x6225, 0xd3fd, 0x6a02, 0x0, 0x0);
        gbc.writeMem(0x2d31, { 0x10 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb081, gbc.sp());
        EXPECT(0x2d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01BF
        gbc.setState(0xe3b, 0x159e, 0x3670, 0xaf4a, 0xb91f, 0x4d20, 0x0, 0x1);
        gbc.writeMem(0xe3b, { 0x10 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x159e, gbc.sp());
        EXPECT(0xe3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01C0
        gbc.setState(0xbf48, 0xd20f, 0x62d0, 0x19e, 0xe395, 0xbdf5, 0x1, 0x0);
        gbc.writeMem(0xbf48, { 0x10 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd20f, gbc.sp());
        EXPECT(0xbf49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbf48));
        // 10 01C1
        gbc.setState(0x2ab7, 0x29e1, 0x5e60, 0xea60, 0xef8, 0xdf33, 0x0, 0x1);
        gbc.writeMem(0x2ab7, { 0x10 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x29e1, gbc.sp());
        EXPECT(0x2ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01C2
        gbc.setState(0xb432, 0x4512, 0xb410, 0xe815, 0xc396, 0x56e9, 0x0, 0x1);
        gbc.writeMem(0xb432, { 0x10 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4512, gbc.sp());
        EXPECT(0xb433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb432));
        // 10 01C3
        gbc.setState(0x2548, 0xa159, 0xf400, 0x9918, 0xa5d8, 0xf0c5, 0x1, 0x1);
        gbc.writeMem(0x2548, { 0x10 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa159, gbc.sp());
        EXPECT(0x2549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01C4
        gbc.setState(0xeac7, 0xd5a0, 0x58e0, 0x9f3e, 0x9920, 0x3f66, 0x1, 0x1);
        gbc.writeMem(0xeac7, { 0x10 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd5a0, gbc.sp());
        EXPECT(0xeac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xeac7));
        // 10 01C5
        gbc.setState(0x70a6, 0x3d0, 0x42e0, 0xdd65, 0xb580, 0xcbed, 0x0, 0x1);
        gbc.writeMem(0x70a6, { 0x10 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3d0, gbc.sp());
        EXPECT(0x70a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01C7
        gbc.setState(0xc1f, 0x1687, 0x6c70, 0x37c3, 0xd6fa, 0xa79f, 0x1, 0x1);
        gbc.writeMem(0xc1f, { 0x10 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1687, gbc.sp());
        EXPECT(0xc20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01C8
        gbc.setState(0x792c, 0x4ba8, 0x8920, 0x3e0e, 0xa7e3, 0xabb5, 0x0, 0x0);
        gbc.writeMem(0x792c, { 0x10 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4ba8, gbc.sp());
        EXPECT(0x792d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01C9
        gbc.setState(0x72af, 0xc1ef, 0xe380, 0xd916, 0xd2de, 0xf5b, 0x1, 0x1);
        gbc.writeMem(0x72af, { 0x10 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc1ef, gbc.sp());
        EXPECT(0x72b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01CA
        gbc.setState(0xc5a, 0x8f2f, 0x9ef0, 0x66bd, 0x917f, 0x7db9, 0x1, 0x1);
        gbc.writeMem(0xc5a, { 0x10 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8f2f, gbc.sp());
        EXPECT(0xc5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01CB
        gbc.setState(0x1183, 0xc359, 0x6d30, 0xb203, 0xd0f2, 0x276c, 0x1, 0x1);
        gbc.writeMem(0x1183, { 0x10 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc359, gbc.sp());
        EXPECT(0x1184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01CC
        gbc.setState(0x439a, 0xecd, 0x1a50, 0xd014, 0xfea8, 0x40af, 0x0, 0x1);
        gbc.writeMem(0x439a, { 0x10 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xecd, gbc.sp());
        EXPECT(0x439b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01CD
        gbc.setState(0x7860, 0x55a, 0xe440, 0xe249, 0xfb5e, 0xd923, 0x1, 0x1);
        gbc.writeMem(0x7860, { 0x10 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x55a, gbc.sp());
        EXPECT(0x7861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01CE
        gbc.setState(0xbb19, 0x52e, 0x3350, 0xf9dc, 0xf609, 0x1b14, 0x0, 0x1);
        gbc.writeMem(0xbb19, { 0x10 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x52e, gbc.sp());
        EXPECT(0xbb1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbb19));
        // 10 01CF
        gbc.setState(0xabce, 0xbc8d, 0xbed0, 0x245c, 0xfbab, 0x10b2, 0x1, 0x1);
        gbc.writeMem(0xabce, { 0x10 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbc8d, gbc.sp());
        EXPECT(0xabcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xabce));
        // 10 01D0
        gbc.setState(0x8c2c, 0xbb2d, 0x5850, 0xc221, 0x3b2b, 0x69b4, 0x0, 0x1);
        gbc.writeMem(0x8c2c, { 0x10 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbb2d, gbc.sp());
        EXPECT(0x8c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8c2c));
        // 10 01D1
        gbc.setState(0xa97c, 0x2bfe, 0x4430, 0xe45b, 0xdd7b, 0x61e0, 0x1, 0x1);
        gbc.writeMem(0xa97c, { 0x10 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2bfe, gbc.sp());
        EXPECT(0xa97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa97c));
        // 10 01D2
        gbc.setState(0x886d, 0xca94, 0xf050, 0x1444, 0xd464, 0xb2d4, 0x1, 0x1);
        gbc.writeMem(0x886d, { 0x10 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xca94, gbc.sp());
        EXPECT(0x886e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x886d));
        // 10 01D3
        gbc.setState(0xb876, 0x3db5, 0xadc0, 0xd33d, 0xbbe4, 0x10ed, 0x0, 0x1);
        gbc.writeMem(0xb876, { 0x10 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3db5, gbc.sp());
        EXPECT(0xb877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb876));
        // 10 01D4
        gbc.setState(0x6664, 0xe57a, 0x7040, 0x7ffb, 0x8e0a, 0x6d37, 0x1, 0x0);
        gbc.writeMem(0x6664, { 0x10 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe57a, gbc.sp());
        EXPECT(0x6665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01D5
        gbc.setState(0x412f, 0x59ac, 0x5b30, 0x2c52, 0x75f1, 0xea3d, 0x0, 0x1);
        gbc.writeMem(0x412f, { 0x10 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x59ac, gbc.sp());
        EXPECT(0x4130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01D6
        gbc.setState(0xb8c7, 0x3f05, 0x7140, 0x80d0, 0xc50a, 0x4cad, 0x0, 0x1);
        gbc.writeMem(0xb8c7, { 0x10 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3f05, gbc.sp());
        EXPECT(0xb8c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb8c7));
        // 10 01D7
        gbc.setState(0x4afe, 0x5634, 0x3720, 0xf12f, 0x9ff, 0x6e4, 0x1, 0x0);
        gbc.writeMem(0x4afe, { 0x10 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5634, gbc.sp());
        EXPECT(0x4aff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01D8
        gbc.setState(0x6c7c, 0x4a19, 0xc170, 0xa230, 0x765d, 0xf35d, 0x0, 0x1);
        gbc.writeMem(0x6c7c, { 0x10 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4a19, gbc.sp());
        EXPECT(0x6c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01D9
        gbc.setState(0xeadf, 0x30eb, 0x68f0, 0x4ffa, 0xfa9d, 0xeda2, 0x0, 0x1);
        gbc.writeMem(0xeadf, { 0x10 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x30eb, gbc.sp());
        EXPECT(0xeae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xeadf));
        // 10 01DA
        gbc.setState(0x64c0, 0x1a21, 0x2c80, 0x83bc, 0x3591, 0x1a59, 0x0, 0x1);
        gbc.writeMem(0x64c0, { 0x10 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1a21, gbc.sp());
        EXPECT(0x64c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01DB
        gbc.setState(0x1d9c, 0x5840, 0x1770, 0x2b8c, 0x994b, 0xee6c, 0x1, 0x0);
        gbc.writeMem(0x1d9c, { 0x10 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5840, gbc.sp());
        EXPECT(0x1d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01DC
        gbc.setState(0x1e60, 0xe3de, 0xa160, 0xe134, 0xd451, 0x2afd, 0x1, 0x0);
        gbc.writeMem(0x1e60, { 0x10 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe3de, gbc.sp());
        EXPECT(0x1e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01DD
        gbc.setState(0x28b0, 0x3d24, 0x9360, 0x554e, 0xc7d0, 0x2229, 0x1, 0x1);
        gbc.writeMem(0x28b0, { 0x10 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3d24, gbc.sp());
        EXPECT(0x28b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01DE
        gbc.setState(0x5c3f, 0xa3df, 0x5eb0, 0xcd8c, 0xbcf3, 0x4ec7, 0x0, 0x1);
        gbc.writeMem(0x5c3f, { 0x10 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa3df, gbc.sp());
        EXPECT(0x5c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01E0
        gbc.setState(0x2703, 0x542d, 0xf2e0, 0x5b72, 0xae10, 0x28b1, 0x0, 0x1);
        gbc.writeMem(0x2703, { 0x10 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x542d, gbc.sp());
        EXPECT(0x2704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01E1
        gbc.setState(0x89b, 0x60e2, 0x81d0, 0xd755, 0xc9e8, 0x451e, 0x0, 0x1);
        gbc.writeMem(0x89b, { 0x10 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x60e2, gbc.sp());
        EXPECT(0x89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01E2
        gbc.setState(0x639d, 0xa4e6, 0xc920, 0x108f, 0x45cc, 0x6392, 0x0, 0x0);
        gbc.writeMem(0x639d, { 0x10 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa4e6, gbc.sp());
        EXPECT(0x639e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01E3
        gbc.setState(0xe1d6, 0x5dd9, 0x39d0, 0x6a2f, 0x6d66, 0x1a6c, 0x1, 0x0);
        gbc.writeMem(0xe1d6, { 0x10 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5dd9, gbc.sp());
        EXPECT(0xe1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe1d6));
        // 10 01E4
        gbc.setState(0x3cad, 0xc6e9, 0xa790, 0x878a, 0x9d31, 0x6a3e, 0x0, 0x0);
        gbc.writeMem(0x3cad, { 0x10 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc6e9, gbc.sp());
        EXPECT(0x3cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01E5
        gbc.setState(0xd36e, 0xe5ae, 0xf590, 0xe396, 0x271d, 0x94dd, 0x1, 0x0);
        gbc.writeMem(0xd36e, { 0x10 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe5ae, gbc.sp());
        EXPECT(0xd36f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd36e));
        // 10 01E6
        gbc.setState(0xd4a6, 0x7b65, 0x32e0, 0x7781, 0x1c8d, 0x474, 0x1, 0x0);
        gbc.writeMem(0xd4a6, { 0x10 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7b65, gbc.sp());
        EXPECT(0xd4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd4a6));
        // 10 01E7
        gbc.setState(0x455a, 0x63aa, 0x290, 0xa1d5, 0x18eb, 0x3757, 0x0, 0x0);
        gbc.writeMem(0x455a, { 0x10 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x63aa, gbc.sp());
        EXPECT(0x455b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01E8
        gbc.setState(0x671b, 0xcad0, 0x6470, 0x4ad, 0xe4d2, 0xf09a, 0x1, 0x0);
        gbc.writeMem(0x671b, { 0x10 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcad0, gbc.sp());
        EXPECT(0x671c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01EA
        gbc.setState(0x8582, 0xda04, 0xb8b0, 0x3abf, 0xe168, 0x59b6, 0x1, 0x1);
        gbc.writeMem(0x8582, { 0x10 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xda04, gbc.sp());
        EXPECT(0x8583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8582));
        // 10 01EB
        gbc.setState(0x8e29, 0x3942, 0x97c0, 0x7455, 0xf2a0, 0x4960, 0x1, 0x1);
        gbc.writeMem(0x8e29, { 0x10 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3942, gbc.sp());
        EXPECT(0x8e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8e29));
        // 10 01EC
        gbc.setState(0xe1e1, 0x509d, 0xb130, 0x9b38, 0xa1c4, 0xb32b, 0x1, 0x0);
        gbc.writeMem(0xe1e1, { 0x10 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x509d, gbc.sp());
        EXPECT(0xe1e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe1e1));
        // 10 01ED
        gbc.setState(0x2aeb, 0x84c3, 0x720, 0x373e, 0x3ab8, 0x4ccd, 0x0, 0x0);
        gbc.writeMem(0x2aeb, { 0x10 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x84c3, gbc.sp());
        EXPECT(0x2aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01EE
        gbc.setState(0xc1a9, 0x803f, 0x5c60, 0x26aa, 0xd08e, 0x1341, 0x1, 0x1);
        gbc.writeMem(0xc1a9, { 0x10 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x803f, gbc.sp());
        EXPECT(0xc1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc1a9));
        // 10 01EF
        gbc.setState(0x816a, 0x4433, 0x7ac0, 0x8443, 0x3665, 0xda34, 0x1, 0x1);
        gbc.writeMem(0x816a, { 0x10 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4433, gbc.sp());
        EXPECT(0x816b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x816a));
        // 10 01F0
        gbc.setState(0x78ec, 0x68e7, 0xdbc0, 0x515, 0xb70e, 0xc55a, 0x0, 0x1);
        gbc.writeMem(0x78ec, { 0x10 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x68e7, gbc.sp());
        EXPECT(0x78ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01F1
        gbc.setState(0x84fb, 0xd032, 0x5c30, 0x87da, 0x8c3d, 0xa4d6, 0x0, 0x0);
        gbc.writeMem(0x84fb, { 0x10 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd032, gbc.sp());
        EXPECT(0x84fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x84fb));
        // 10 01F2
        gbc.setState(0xed8e, 0xbfec, 0xbc50, 0x4a47, 0x156, 0x2bd4, 0x1, 0x1);
        gbc.writeMem(0xed8e, { 0x10 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbfec, gbc.sp());
        EXPECT(0xed8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xed8e));
        // 10 01F3
        gbc.setState(0xaced, 0x6521, 0x8410, 0x595e, 0xf9e6, 0x4dca, 0x0, 0x1);
        gbc.writeMem(0xaced, { 0x10 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6521, gbc.sp());
        EXPECT(0xacee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xaced));
        // 10 01F4
        gbc.setState(0xcdc1, 0xb014, 0x7040, 0xdb24, 0x555a, 0x152a, 0x0, 0x0);
        gbc.writeMem(0xcdc1, { 0x10 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb014, gbc.sp());
        EXPECT(0xcdc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcdc1));
        // 10 01F5
        gbc.setState(0x33d0, 0x1ec6, 0x9a00, 0xb8cc, 0xb4d2, 0x83d, 0x1, 0x0);
        gbc.writeMem(0x33d0, { 0x10 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1ec6, gbc.sp());
        EXPECT(0x33d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01F6
        gbc.setState(0xc75d, 0x56d6, 0x48e0, 0xedc3, 0xc62b, 0x6fce, 0x0, 0x0);
        gbc.writeMem(0xc75d, { 0x10 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x56d6, gbc.sp());
        EXPECT(0xc75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc75d));
        // 10 01F7
        gbc.setState(0x7706, 0x7df7, 0xf2f0, 0x176, 0x4e2d, 0x10d, 0x0, 0x1);
        gbc.writeMem(0x7706, { 0x10 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7df7, gbc.sp());
        EXPECT(0x7707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01F8
        gbc.setState(0xaa76, 0x43e2, 0xd400, 0xd44f, 0xb38d, 0xd554, 0x0, 0x0);
        gbc.writeMem(0xaa76, { 0x10 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x43e2, gbc.sp());
        EXPECT(0xaa77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xaa76));
        // 10 01F9
        gbc.setState(0xda54, 0x8df7, 0xa190, 0x621c, 0xb3c9, 0x8e8, 0x0, 0x0);
        gbc.writeMem(0xda54, { 0x10 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8df7, gbc.sp());
        EXPECT(0xda55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xda54));
        // 10 01FA
        gbc.setState(0xb8f, 0x6f38, 0x14d0, 0xf306, 0xf130, 0xb9c5, 0x1, 0x0);
        gbc.writeMem(0xb8f, { 0x10 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6f38, gbc.sp());
        EXPECT(0xb90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01FB
        gbc.setState(0x2b65, 0x1838, 0x7b60, 0xb1e8, 0x6447, 0x53c8, 0x0, 0x1);
        gbc.writeMem(0x2b65, { 0x10 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1838, gbc.sp());
        EXPECT(0x2b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01FC
        gbc.setState(0x3e63, 0xc356, 0x2460, 0x196d, 0x5f68, 0x5172, 0x1, 0x1);
        gbc.writeMem(0x3e63, { 0x10 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc356, gbc.sp());
        EXPECT(0x3e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 01FD
        gbc.setState(0xa6d9, 0xaaba, 0x73f0, 0xbbed, 0xf589, 0x3da9, 0x1, 0x1);
        gbc.writeMem(0xa6d9, { 0x10 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xaaba, gbc.sp());
        EXPECT(0xa6da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa6d9));
        // 10 01FE
        gbc.setState(0x4f0e, 0x7778, 0x6d90, 0x923b, 0xb181, 0x78b1, 0x1, 0x0);
        gbc.writeMem(0x4f0e, { 0x10 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7778, gbc.sp());
        EXPECT(0x4f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 01FF
        gbc.setState(0x85eb, 0xa425, 0x6430, 0x28e, 0xc82d, 0xc41b, 0x0, 0x1);
        gbc.writeMem(0x85eb, { 0x10 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa425, gbc.sp());
        EXPECT(0x85ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x85eb));
        // 10 0200
        gbc.setState(0x4994, 0x3ff1, 0xc030, 0x8dfb, 0xed2e, 0x8512, 0x0, 0x0);
        gbc.writeMem(0x4994, { 0x10 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3ff1, gbc.sp());
        EXPECT(0x4995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0201
        gbc.setState(0x445e, 0xfdee, 0xda70, 0xb1bd, 0xdd5b, 0x8899, 0x0, 0x1);
        gbc.writeMem(0x445e, { 0x10 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfdee, gbc.sp());
        EXPECT(0x445f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0202
        gbc.setState(0xebcd, 0x576d, 0x90a0, 0x8588, 0xa238, 0xff4e, 0x1, 0x1);
        gbc.writeMem(0xebcd, { 0x10 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x576d, gbc.sp());
        EXPECT(0xebce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xebcd));
        // 10 0203
        gbc.setState(0x82d7, 0xb0f9, 0xd500, 0x6983, 0xd602, 0x963f, 0x1, 0x1);
        gbc.writeMem(0x82d7, { 0x10 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb0f9, gbc.sp());
        EXPECT(0x82d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x82d7));
        // 10 0204
        gbc.setState(0x746e, 0x5bdd, 0xe680, 0x7935, 0x5903, 0x10dd, 0x0, 0x1);
        gbc.writeMem(0x746e, { 0x10 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5bdd, gbc.sp());
        EXPECT(0x746f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0205
        gbc.setState(0x4316, 0xf63a, 0xb3a0, 0x4ab5, 0x6899, 0x7a6d, 0x0, 0x1);
        gbc.writeMem(0x4316, { 0x10 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf63a, gbc.sp());
        EXPECT(0x4317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0207
        gbc.setState(0xef2c, 0x76a, 0xdfe0, 0xb8cf, 0x49bc, 0xc0b5, 0x1, 0x0);
        gbc.writeMem(0xef2c, { 0x10 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x76a, gbc.sp());
        EXPECT(0xef2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xef2c));
        // 10 0208
        gbc.setState(0x88af, 0x5fc5, 0xcd40, 0xdc45, 0xcd5a, 0x8132, 0x1, 0x0);
        gbc.writeMem(0x88af, { 0x10 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5fc5, gbc.sp());
        EXPECT(0x88b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x88af));
        // 10 0209
        gbc.setState(0x90e5, 0x40da, 0x7170, 0x8169, 0x22c, 0x8b3d, 0x1, 0x0);
        gbc.writeMem(0x90e5, { 0x10 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x40da, gbc.sp());
        EXPECT(0x90e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x90e5));
        // 10 020A
        gbc.setState(0x413a, 0xc6b1, 0xf5c0, 0x7d4a, 0xb96, 0x3f69, 0x1, 0x1);
        gbc.writeMem(0x413a, { 0x10 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc6b1, gbc.sp());
        EXPECT(0x413b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 020B
        gbc.setState(0x9c98, 0x6327, 0x8bb0, 0x14e0, 0xf091, 0x57a3, 0x0, 0x0);
        gbc.writeMem(0x9c98, { 0x10 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6327, gbc.sp());
        EXPECT(0x9c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9c98));
        // 10 020C
        gbc.setState(0x4afd, 0x7034, 0x870, 0x44f9, 0x9d8, 0xddc, 0x0, 0x1);
        gbc.writeMem(0x4afd, { 0x10 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7034, gbc.sp());
        EXPECT(0x4afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 020D
        gbc.setState(0xc8e0, 0x990c, 0xe060, 0xc4fc, 0x64bc, 0xa2d6, 0x1, 0x0);
        gbc.writeMem(0xc8e0, { 0x10 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x990c, gbc.sp());
        EXPECT(0xc8e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc8e0));
        // 10 020E
        gbc.setState(0x3c27, 0xe15d, 0xa6f0, 0x2c79, 0xbd36, 0x6570, 0x0, 0x1);
        gbc.writeMem(0x3c27, { 0x10 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe15d, gbc.sp());
        EXPECT(0x3c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0210
        gbc.setState(0x6f29, 0xc237, 0xa0f0, 0x7e22, 0xc4d, 0xc1f3, 0x0, 0x0);
        gbc.writeMem(0x6f29, { 0x10 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc237, gbc.sp());
        EXPECT(0x6f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0211
        gbc.setState(0xe177, 0xaa4a, 0x3de0, 0x706e, 0x3d9d, 0x20fa, 0x1, 0x1);
        gbc.writeMem(0xe177, { 0x10 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xaa4a, gbc.sp());
        EXPECT(0xe178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe177));
        // 10 0212
        gbc.setState(0xaaf1, 0x6ae7, 0xa170, 0xc4f1, 0xe526, 0xf048, 0x0, 0x0);
        gbc.writeMem(0xaaf1, { 0x10 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6ae7, gbc.sp());
        EXPECT(0xaaf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xaaf1));
        // 10 0213
        gbc.setState(0x748, 0x2abf, 0x45a0, 0x64d5, 0x8f54, 0xe1c7, 0x0, 0x1);
        gbc.writeMem(0x748, { 0x10 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2abf, gbc.sp());
        EXPECT(0x749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0214
        gbc.setState(0x2e66, 0xc020, 0xce30, 0x8f6f, 0xf902, 0x37e2, 0x0, 0x0);
        gbc.writeMem(0x2e66, { 0x10 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc020, gbc.sp());
        EXPECT(0x2e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0215
        gbc.setState(0x836, 0xd54d, 0xea80, 0xaf7f, 0x3dd7, 0xf90d, 0x1, 0x1);
        gbc.writeMem(0x836, { 0x10 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd54d, gbc.sp());
        EXPECT(0x837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0216
        gbc.setState(0x865b, 0x296c, 0x2220, 0xc9b0, 0x5d7a, 0x9c58, 0x0, 0x0);
        gbc.writeMem(0x865b, { 0x10 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x296c, gbc.sp());
        EXPECT(0x865c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x865b));
        // 10 0217
        gbc.setState(0x6a1a, 0x31e7, 0x9890, 0x901d, 0xf06e, 0x74a4, 0x1, 0x0);
        gbc.writeMem(0x6a1a, { 0x10 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x31e7, gbc.sp());
        EXPECT(0x6a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0218
        gbc.setState(0xc0bc, 0xb724, 0xf150, 0x3888, 0x81d4, 0xedae, 0x0, 0x1);
        gbc.writeMem(0xc0bc, { 0x10 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb724, gbc.sp());
        EXPECT(0xc0bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc0bc));
        // 10 0219
        gbc.setState(0xdee0, 0x36fd, 0xb580, 0xfb81, 0x2a40, 0xe828, 0x1, 0x1);
        gbc.writeMem(0xdee0, { 0x10 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x36fd, gbc.sp());
        EXPECT(0xdee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdee0));
        // 10 021A
        gbc.setState(0x63c2, 0x1c2d, 0x6c70, 0x2b60, 0x3e58, 0x91a1, 0x0, 0x1);
        gbc.writeMem(0x63c2, { 0x10 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1c2d, gbc.sp());
        EXPECT(0x63c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 021B
        gbc.setState(0x9657, 0xd3c8, 0x7580, 0xb623, 0x4651, 0xc03f, 0x0, 0x0);
        gbc.writeMem(0x9657, { 0x10 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd3c8, gbc.sp());
        EXPECT(0x9658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9657));
        // 10 021C
        gbc.setState(0xe0c5, 0x9416, 0xc950, 0x83ea, 0x9db7, 0xfc54, 0x0, 0x1);
        gbc.writeMem(0xe0c5, { 0x10 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9416, gbc.sp());
        EXPECT(0xe0c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe0c5));
        // 10 021D
        gbc.setState(0x460f, 0xff41, 0x2f40, 0x9f7f, 0x8594, 0x3fd7, 0x1, 0x1);
        gbc.writeMem(0x460f, { 0x10 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xff41, gbc.sp());
        EXPECT(0x4610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 021E
        gbc.setState(0xc1fb, 0x62fc, 0x3f90, 0xc658, 0xfb78, 0x3584, 0x1, 0x1);
        gbc.writeMem(0xc1fb, { 0x10 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x62fc, gbc.sp());
        EXPECT(0xc1fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc1fb));
        // 10 021F
        gbc.setState(0x363b, 0x28bf, 0x76e0, 0x7fef, 0xf9a3, 0x5b35, 0x0, 0x1);
        gbc.writeMem(0x363b, { 0x10 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x28bf, gbc.sp());
        EXPECT(0x363c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0220
        gbc.setState(0x51f9, 0x538f, 0xc670, 0x2472, 0xebd2, 0x4c94, 0x0, 0x0);
        gbc.writeMem(0x51f9, { 0x10 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x538f, gbc.sp());
        EXPECT(0x51fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0221
        gbc.setState(0xb227, 0x27b0, 0xd5a0, 0x31c3, 0x35d4, 0xed48, 0x0, 0x0);
        gbc.writeMem(0xb227, { 0x10 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x27b0, gbc.sp());
        EXPECT(0xb228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb227));
        // 10 0222
        gbc.setState(0x4133, 0xabfa, 0xfa20, 0x812f, 0x8f6c, 0x37d0, 0x0, 0x0);
        gbc.writeMem(0x4133, { 0x10 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xabfa, gbc.sp());
        EXPECT(0x4134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0223
        gbc.setState(0x508c, 0x91c8, 0xa160, 0xb32d, 0xfb93, 0x14c1, 0x1, 0x0);
        gbc.writeMem(0x508c, { 0x10 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x91c8, gbc.sp());
        EXPECT(0x508d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0224
        gbc.setState(0x4f43, 0x2473, 0x5130, 0x54e0, 0xa82d, 0xba27, 0x1, 0x1);
        gbc.writeMem(0x4f43, { 0x10 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2473, gbc.sp());
        EXPECT(0x4f44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0225
        gbc.setState(0x8ec2, 0x7b4d, 0x7600, 0xb0c1, 0xcee7, 0x51fd, 0x0, 0x0);
        gbc.writeMem(0x8ec2, { 0x10 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7b4d, gbc.sp());
        EXPECT(0x8ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8ec2));
        // 10 0226
        gbc.setState(0x56ed, 0xf3a5, 0xdcb0, 0x7acf, 0x64db, 0x67ab, 0x0, 0x1);
        gbc.writeMem(0x56ed, { 0x10 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf3a5, gbc.sp());
        EXPECT(0x56ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0227
        gbc.setState(0x7787, 0x801d, 0xa620, 0x5fd2, 0xfca6, 0x2e0b, 0x1, 0x0);
        gbc.writeMem(0x7787, { 0x10 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x801d, gbc.sp());
        EXPECT(0x7788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0229
        gbc.setState(0xa5b4, 0xe7ea, 0x48d0, 0xe4c4, 0x1b, 0xdaea, 0x1, 0x0);
        gbc.writeMem(0xa5b4, { 0x10 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe7ea, gbc.sp());
        EXPECT(0xa5b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa5b4));
        // 10 022B
        gbc.setState(0x331, 0xe42d, 0xb070, 0x9dc2, 0x459a, 0x7e60, 0x0, 0x0);
        gbc.writeMem(0x331, { 0x10 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe42d, gbc.sp());
        EXPECT(0x332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 022C
        gbc.setState(0x2476, 0xbcd1, 0x6a50, 0x5851, 0x1d4f, 0x6728, 0x0, 0x1);
        gbc.writeMem(0x2476, { 0x10 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbcd1, gbc.sp());
        EXPECT(0x2477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 022D
        gbc.setState(0x5fe3, 0xfac8, 0x9520, 0x7898, 0x1727, 0xe5de, 0x0, 0x0);
        gbc.writeMem(0x5fe3, { 0x10 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfac8, gbc.sp());
        EXPECT(0x5fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 022E
        gbc.setState(0xc6a1, 0xdff2, 0x51a0, 0xd65b, 0xb0c3, 0x2ccd, 0x1, 0x0);
        gbc.writeMem(0xc6a1, { 0x10 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdff2, gbc.sp());
        EXPECT(0xc6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc6a1));
        // 10 022F
        gbc.setState(0xa371, 0x31da, 0x8920, 0x470b, 0x6529, 0x56a0, 0x0, 0x1);
        gbc.writeMem(0xa371, { 0x10 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x31da, gbc.sp());
        EXPECT(0xa372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa371));
        // 10 0230
        gbc.setState(0x42a6, 0x6106, 0x8280, 0x5bd2, 0x4ff9, 0xa927, 0x1, 0x1);
        gbc.writeMem(0x42a6, { 0x10 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6106, gbc.sp());
        EXPECT(0x42a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0231
        gbc.setState(0x4fd, 0xefb9, 0xa630, 0xbc27, 0xaf01, 0x5457, 0x0, 0x0);
        gbc.writeMem(0x4fd, { 0x10 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xefb9, gbc.sp());
        EXPECT(0x4fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0232
        gbc.setState(0xa56d, 0xd201, 0xb7b0, 0xf34f, 0x3a54, 0x538e, 0x0, 0x0);
        gbc.writeMem(0xa56d, { 0x10 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd201, gbc.sp());
        EXPECT(0xa56e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa56d));
        // 10 0233
        gbc.setState(0x1c77, 0xdeb9, 0x26a0, 0x24c, 0xba2d, 0x6bbd, 0x1, 0x1);
        gbc.writeMem(0x1c77, { 0x10 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdeb9, gbc.sp());
        EXPECT(0x1c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0234
        gbc.setState(0x5dfb, 0xd93, 0x4f50, 0xd084, 0x3d54, 0xb718, 0x1, 0x1);
        gbc.writeMem(0x5dfb, { 0x10 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd93, gbc.sp());
        EXPECT(0x5dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0235
        gbc.setState(0xe831, 0x4cca, 0xc5a0, 0x8799, 0xb278, 0xf045, 0x0, 0x1);
        gbc.writeMem(0xe831, { 0x10 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4cca, gbc.sp());
        EXPECT(0xe832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe831));
        // 10 0236
        gbc.setState(0xbaa2, 0x2753, 0x77d0, 0xc7ee, 0x8b49, 0xf378, 0x1, 0x0);
        gbc.writeMem(0xbaa2, { 0x10 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2753, gbc.sp());
        EXPECT(0xbaa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbaa2));
        // 10 0237
        gbc.setState(0x51df, 0xfb72, 0x9f90, 0x147e, 0xba12, 0x18ef, 0x1, 0x1);
        gbc.writeMem(0x51df, { 0x10 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfb72, gbc.sp());
        EXPECT(0x51e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0238
        gbc.setState(0x4350, 0x7413, 0x8bc0, 0x4399, 0x5e73, 0x582d, 0x0, 0x0);
        gbc.writeMem(0x4350, { 0x10 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7413, gbc.sp());
        EXPECT(0x4351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0239
        gbc.setState(0xde86, 0xf7c9, 0x5860, 0x1bf1, 0x6d01, 0x1d9c, 0x1, 0x0);
        gbc.writeMem(0xde86, { 0x10 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf7c9, gbc.sp());
        EXPECT(0xde87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xde86));
        // 10 023A
        gbc.setState(0x500, 0x636f, 0x9d60, 0x75fb, 0xcde, 0xf8d5, 0x1, 0x1);
        gbc.writeMem(0x500, { 0x10 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x636f, gbc.sp());
        EXPECT(0x501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 023B
        gbc.setState(0xb45e, 0xcef, 0xd230, 0xbd66, 0x71d, 0xd1cd, 0x0, 0x1);
        gbc.writeMem(0xb45e, { 0x10 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcef, gbc.sp());
        EXPECT(0xb45f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb45e));
        // 10 023C
        gbc.setState(0xa2e3, 0x1849, 0x8160, 0xa039, 0x2651, 0x4136, 0x0, 0x1);
        gbc.writeMem(0xa2e3, { 0x10 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1849, gbc.sp());
        EXPECT(0xa2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa2e3));
        // 10 023D
        gbc.setState(0xddf8, 0xe1e0, 0x4f0, 0xb23, 0x1d3b, 0x4e9d, 0x0, 0x1);
        gbc.writeMem(0xddf8, { 0x10 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe1e0, gbc.sp());
        EXPECT(0xddf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xddf8));
        // 10 023E
        gbc.setState(0xe498, 0x74d7, 0xbe80, 0xda2b, 0xf30e, 0x677, 0x1, 0x1);
        gbc.writeMem(0xe498, { 0x10 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x74d7, gbc.sp());
        EXPECT(0xe499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe498));
        // 10 023F
        gbc.setState(0xb54d, 0xfb09, 0xccf0, 0xc517, 0x48cf, 0xcd7c, 0x1, 0x1);
        gbc.writeMem(0xb54d, { 0x10 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfb09, gbc.sp());
        EXPECT(0xb54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb54d));
        // 10 0241
        gbc.setState(0x7c98, 0x951e, 0xc800, 0x7187, 0x97e5, 0x3eb5, 0x0, 0x1);
        gbc.writeMem(0x7c98, { 0x10 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x951e, gbc.sp());
        EXPECT(0x7c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0242
        gbc.setState(0xbb8b, 0x21b1, 0x89a0, 0x1f62, 0x4fdb, 0xd5cb, 0x1, 0x1);
        gbc.writeMem(0xbb8b, { 0x10 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x21b1, gbc.sp());
        EXPECT(0xbb8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbb8b));
        // 10 0243
        gbc.setState(0x5479, 0x351e, 0x86f0, 0x9a32, 0x592c, 0x9bb0, 0x1, 0x0);
        gbc.writeMem(0x5479, { 0x10 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x351e, gbc.sp());
        EXPECT(0x547a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0244
        gbc.setState(0xd907, 0x9ac3, 0xa950, 0xf012, 0xf8ed, 0xd127, 0x1, 0x1);
        gbc.writeMem(0xd907, { 0x10 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9ac3, gbc.sp());
        EXPECT(0xd908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd907));
        // 10 0245
        gbc.setState(0xbba9, 0xe1ee, 0x2ff0, 0x3b8f, 0x38a6, 0xff5, 0x0, 0x0);
        gbc.writeMem(0xbba9, { 0x10 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe1ee, gbc.sp());
        EXPECT(0xbbaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbba9));
        // 10 0246
        gbc.setState(0xc700, 0x58fd, 0xbe90, 0x8212, 0x93af, 0xb292, 0x1, 0x0);
        gbc.writeMem(0xc700, { 0x10 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x58fd, gbc.sp());
        EXPECT(0xc701, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc700));
        // 10 0247
        gbc.setState(0x786d, 0x8863, 0xa6f0, 0x51e3, 0x3bab, 0xec30, 0x0, 0x1);
        gbc.writeMem(0x786d, { 0x10 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8863, gbc.sp());
        EXPECT(0x786e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0248
        gbc.setState(0x5a57, 0x8fc1, 0x4180, 0xec8d, 0x567a, 0xfa31, 0x0, 0x0);
        gbc.writeMem(0x5a57, { 0x10 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8fc1, gbc.sp());
        EXPECT(0x5a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0249
        gbc.setState(0x5d77, 0x652b, 0x7600, 0xd3bc, 0x51a6, 0xc589, 0x0, 0x0);
        gbc.writeMem(0x5d77, { 0x10 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x652b, gbc.sp());
        EXPECT(0x5d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 024A
        gbc.setState(0xa7d5, 0xb9ac, 0x68b0, 0xadb1, 0x7212, 0x8f5b, 0x0, 0x0);
        gbc.writeMem(0xa7d5, { 0x10 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb9ac, gbc.sp());
        EXPECT(0xa7d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa7d5));
        // 10 024B
        gbc.setState(0xbdcc, 0x8283, 0x73e0, 0xcac9, 0xfcdd, 0xb5, 0x1, 0x0);
        gbc.writeMem(0xbdcc, { 0x10 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8283, gbc.sp());
        EXPECT(0xbdcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbdcc));
        // 10 024C
        gbc.setState(0xd550, 0xf57f, 0x4fd0, 0x99c9, 0x4c3f, 0xe497, 0x1, 0x0);
        gbc.writeMem(0xd550, { 0x10 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf57f, gbc.sp());
        EXPECT(0xd551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd550));
        // 10 024D
        gbc.setState(0xa0cc, 0x984f, 0x8320, 0xefc0, 0x49d4, 0x6b88, 0x1, 0x1);
        gbc.writeMem(0xa0cc, { 0x10 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x984f, gbc.sp());
        EXPECT(0xa0cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa0cc));
        // 10 024E
        gbc.setState(0x3204, 0x44c6, 0x6710, 0xf8af, 0x93e7, 0x6d32, 0x0, 0x0);
        gbc.writeMem(0x3204, { 0x10 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x44c6, gbc.sp());
        EXPECT(0x3205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 024F
        gbc.setState(0x6e9f, 0xc704, 0x5d90, 0xddec, 0xe213, 0xd394, 0x1, 0x0);
        gbc.writeMem(0x6e9f, { 0x10 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc704, gbc.sp());
        EXPECT(0x6ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0250
        gbc.setState(0x4f8e, 0xe2f0, 0x2620, 0x1541, 0x1d5d, 0x563a, 0x0, 0x0);
        gbc.writeMem(0x4f8e, { 0x10 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe2f0, gbc.sp());
        EXPECT(0x4f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0252
        gbc.setState(0x106b, 0xf13c, 0x99f0, 0xfaaa, 0x84af, 0xe85e, 0x0, 0x1);
        gbc.writeMem(0x106b, { 0x10 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf13c, gbc.sp());
        EXPECT(0x106c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0253
        gbc.setState(0x4f30, 0x59c9, 0x3b70, 0x262c, 0x7724, 0xf710, 0x0, 0x1);
        gbc.writeMem(0x4f30, { 0x10 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x59c9, gbc.sp());
        EXPECT(0x4f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0254
        gbc.setState(0x3099, 0x46de, 0x3340, 0xea39, 0xeed7, 0xe3a4, 0x0, 0x1);
        gbc.writeMem(0x3099, { 0x10 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x46de, gbc.sp());
        EXPECT(0x309a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0255
        gbc.setState(0xc724, 0xd5bb, 0x8270, 0x2ac1, 0x18f0, 0xc588, 0x0, 0x0);
        gbc.writeMem(0xc724, { 0x10 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd5bb, gbc.sp());
        EXPECT(0xc725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc724));
        // 10 0256
        gbc.setState(0x8613, 0x96a, 0xcf90, 0xd4de, 0x70cf, 0x12da, 0x1, 0x1);
        gbc.writeMem(0x8613, { 0x10 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x96a, gbc.sp());
        EXPECT(0x8614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8613));
        // 10 0257
        gbc.setState(0x519f, 0xbcbc, 0x2600, 0xf8d3, 0x80ec, 0x855e, 0x0, 0x1);
        gbc.writeMem(0x519f, { 0x10 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbcbc, gbc.sp());
        EXPECT(0x51a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0258
        gbc.setState(0x2219, 0x859f, 0x4dd0, 0x7314, 0xfee1, 0x5298, 0x1, 0x0);
        gbc.writeMem(0x2219, { 0x10 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x859f, gbc.sp());
        EXPECT(0x221a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0259
        gbc.setState(0xe397, 0x9759, 0xec00, 0xb2fe, 0x295, 0x70, 0x0, 0x0);
        gbc.writeMem(0xe397, { 0x10 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9759, gbc.sp());
        EXPECT(0xe398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe397));
        // 10 025A
        gbc.setState(0x45fd, 0xae91, 0x79b0, 0xa51a, 0x7ba0, 0x820e, 0x1, 0x0);
        gbc.writeMem(0x45fd, { 0x10 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xae91, gbc.sp());
        EXPECT(0x45fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 025B
        gbc.setState(0xda3b, 0xcf14, 0x65b0, 0x5f7e, 0x517f, 0x67bf, 0x0, 0x1);
        gbc.writeMem(0xda3b, { 0x10 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcf14, gbc.sp());
        EXPECT(0xda3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xda3b));
        // 10 025C
        gbc.setState(0x321d, 0xf70e, 0xcae0, 0xe85b, 0xc16, 0x35f1, 0x0, 0x0);
        gbc.writeMem(0x321d, { 0x10 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf70e, gbc.sp());
        EXPECT(0x321e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 025D
        gbc.setState(0x5cbd, 0x304a, 0x7b10, 0x7364, 0x401c, 0x3883, 0x0, 0x1);
        gbc.writeMem(0x5cbd, { 0x10 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x304a, gbc.sp());
        EXPECT(0x5cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 025E
        gbc.setState(0x945d, 0xcd02, 0xc7b0, 0x65a1, 0x4f55, 0xa67, 0x0, 0x1);
        gbc.writeMem(0x945d, { 0x10 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcd02, gbc.sp());
        EXPECT(0x945e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x945d));
        // 10 025F
        gbc.setState(0x417f, 0xc432, 0xa500, 0xdc7, 0x1055, 0x13ba, 0x0, 0x0);
        gbc.writeMem(0x417f, { 0x10 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc432, gbc.sp());
        EXPECT(0x4180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0260
        gbc.setState(0xdf74, 0x315c, 0x8ea0, 0xa03d, 0x58b7, 0xb85f, 0x0, 0x0);
        gbc.writeMem(0xdf74, { 0x10 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x315c, gbc.sp());
        EXPECT(0xdf75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdf74));
        // 10 0261
        gbc.setState(0x784c, 0xf057, 0x3b0, 0x3529, 0xc62a, 0xe5b0, 0x0, 0x0);
        gbc.writeMem(0x784c, { 0x10 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf057, gbc.sp());
        EXPECT(0x784d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0262
        gbc.setState(0x4c4f, 0xd54d, 0x3a50, 0xd2b0, 0x635d, 0x334d, 0x0, 0x0);
        gbc.writeMem(0x4c4f, { 0x10 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd54d, gbc.sp());
        EXPECT(0x4c50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0263
        gbc.setState(0xa23c, 0x85ec, 0xeac0, 0x13fd, 0xaae2, 0x5e0e, 0x0, 0x1);
        gbc.writeMem(0xa23c, { 0x10 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x85ec, gbc.sp());
        EXPECT(0xa23d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa23c));
        // 10 0264
        gbc.setState(0x6bd6, 0xeedf, 0x4e20, 0xdfa8, 0xa311, 0x1292, 0x0, 0x1);
        gbc.writeMem(0x6bd6, { 0x10 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xeedf, gbc.sp());
        EXPECT(0x6bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0265
        gbc.setState(0x44b4, 0x4e65, 0xfe20, 0x4240, 0x1971, 0x60fc, 0x1, 0x1);
        gbc.writeMem(0x44b4, { 0x10 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4e65, gbc.sp());
        EXPECT(0x44b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0266
        gbc.setState(0x6ea2, 0x1223, 0xfcb0, 0x51b0, 0x62d8, 0xc5be, 0x1, 0x0);
        gbc.writeMem(0x6ea2, { 0x10 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1223, gbc.sp());
        EXPECT(0x6ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0267
        gbc.setState(0xe500, 0xccc6, 0xacc0, 0xa9, 0x5935, 0x42c9, 0x0, 0x1);
        gbc.writeMem(0xe500, { 0x10 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xccc6, gbc.sp());
        EXPECT(0xe501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe500));
        // 10 0268
        gbc.setState(0x9345, 0x89fb, 0xb0d0, 0xd2df, 0xeda4, 0xbb56, 0x0, 0x1);
        gbc.writeMem(0x9345, { 0x10 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x89fb, gbc.sp());
        EXPECT(0x9346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9345));
        // 10 0269
        gbc.setState(0x8a6d, 0x5054, 0x85e0, 0x3a62, 0xaa00, 0xa7d2, 0x1, 0x0);
        gbc.writeMem(0x8a6d, { 0x10 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5054, gbc.sp());
        EXPECT(0x8a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8a6d));
        // 10 026A
        gbc.setState(0xb9af, 0x6dd0, 0x7bd0, 0x7ecb, 0x1a3, 0xc9f7, 0x0, 0x1);
        gbc.writeMem(0xb9af, { 0x10 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6dd0, gbc.sp());
        EXPECT(0xb9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb9af));
        // 10 026B
        gbc.setState(0x33ea, 0x3ad0, 0xabb0, 0xa95f, 0x41b9, 0x6db6, 0x0, 0x1);
        gbc.writeMem(0x33ea, { 0x10 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3ad0, gbc.sp());
        EXPECT(0x33eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 026C
        gbc.setState(0x1e62, 0x95bb, 0x6750, 0xfeec, 0x97a, 0xf62f, 0x1, 0x1);
        gbc.writeMem(0x1e62, { 0x10 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x95bb, gbc.sp());
        EXPECT(0x1e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 026D
        gbc.setState(0xa090, 0x7b23, 0xa020, 0xc625, 0xa901, 0xfe94, 0x1, 0x1);
        gbc.writeMem(0xa090, { 0x10 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7b23, gbc.sp());
        EXPECT(0xa091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa090));
        // 10 026E
        gbc.setState(0x3e32, 0x8663, 0xae70, 0xa295, 0x119d, 0x51f9, 0x0, 0x1);
        gbc.writeMem(0x3e32, { 0x10 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8663, gbc.sp());
        EXPECT(0x3e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 026F
        gbc.setState(0x6cb, 0x2d3d, 0x69c0, 0x90d1, 0xa1fd, 0x2685, 0x1, 0x1);
        gbc.writeMem(0x6cb, { 0x10 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2d3d, gbc.sp());
        EXPECT(0x6cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0270
        gbc.setState(0x1c6b, 0xcc4, 0x9160, 0xcdc0, 0xaff1, 0xccbd, 0x1, 0x1);
        gbc.writeMem(0x1c6b, { 0x10 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcc4, gbc.sp());
        EXPECT(0x1c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0272
        gbc.setState(0xc2de, 0x95da, 0x1690, 0x20b6, 0x18d0, 0x91c0, 0x0, 0x0);
        gbc.writeMem(0xc2de, { 0x10 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x95da, gbc.sp());
        EXPECT(0xc2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc2de));
        // 10 0275
        gbc.setState(0xdb2f, 0x6327, 0x6e80, 0xba8e, 0x61ec, 0x7a9d, 0x0, 0x1);
        gbc.writeMem(0xdb2f, { 0x10 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6327, gbc.sp());
        EXPECT(0xdb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdb2f));
        // 10 0276
        gbc.setState(0x88bd, 0x4b31, 0xcd40, 0x9dd1, 0x40b, 0xa6a9, 0x0, 0x0);
        gbc.writeMem(0x88bd, { 0x10 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4b31, gbc.sp());
        EXPECT(0x88be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x88bd));
        // 10 0278
        gbc.setState(0x5dfe, 0x8241, 0xb180, 0x9cc6, 0xe36c, 0x824c, 0x1, 0x1);
        gbc.writeMem(0x5dfe, { 0x10 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8241, gbc.sp());
        EXPECT(0x5dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 027A
        gbc.setState(0x92c3, 0x6b58, 0xe250, 0x96b3, 0x430d, 0x880c, 0x0, 0x1);
        gbc.writeMem(0x92c3, { 0x10 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6b58, gbc.sp());
        EXPECT(0x92c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x92c3));
        // 10 027B
        gbc.setState(0x76d3, 0xbf44, 0xf5e0, 0xe53b, 0xba7d, 0x877f, 0x1, 0x1);
        gbc.writeMem(0x76d3, { 0x10 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbf44, gbc.sp());
        EXPECT(0x76d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 027C
        gbc.setState(0x2143, 0x4d3a, 0x2400, 0x5a76, 0x884, 0x98fa, 0x0, 0x0);
        gbc.writeMem(0x2143, { 0x10 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4d3a, gbc.sp());
        EXPECT(0x2144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 027D
        gbc.setState(0x347a, 0xccd3, 0x8e20, 0xcaf6, 0xef9e, 0x29f6, 0x1, 0x0);
        gbc.writeMem(0x347a, { 0x10 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xccd3, gbc.sp());
        EXPECT(0x347b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 027F
        gbc.setState(0xc961, 0x71d6, 0x1770, 0xf636, 0xd762, 0x419d, 0x1, 0x1);
        gbc.writeMem(0xc961, { 0x10 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x71d6, gbc.sp());
        EXPECT(0xc962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc961));
        // 10 0280
        gbc.setState(0x4c5b, 0xb5b8, 0x8360, 0x78b6, 0x545c, 0x97a3, 0x0, 0x1);
        gbc.writeMem(0x4c5b, { 0x10 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb5b8, gbc.sp());
        EXPECT(0x4c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0281
        gbc.setState(0xcbfc, 0x537e, 0x2960, 0x1c98, 0xac71, 0x8a87, 0x1, 0x1);
        gbc.writeMem(0xcbfc, { 0x10 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x537e, gbc.sp());
        EXPECT(0xcbfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcbfc));
        // 10 0282
        gbc.setState(0x9564, 0x9dec, 0xb670, 0xde06, 0x4eec, 0xfd00, 0x0, 0x1);
        gbc.writeMem(0x9564, { 0x10 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9dec, gbc.sp());
        EXPECT(0x9565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9564));
        // 10 0284
        gbc.setState(0xb663, 0x5da3, 0xfce0, 0xffe7, 0xc652, 0xf2b4, 0x0, 0x1);
        gbc.writeMem(0xb663, { 0x10 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5da3, gbc.sp());
        EXPECT(0xb664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb663));
        // 10 0285
        gbc.setState(0x84b0, 0xf70a, 0x57f0, 0xfb1e, 0xc38f, 0xa9fe, 0x0, 0x1);
        gbc.writeMem(0x84b0, { 0x10 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf70a, gbc.sp());
        EXPECT(0x84b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x84b0));
        // 10 0286
        gbc.setState(0xcb1a, 0xfa66, 0xbd50, 0x354f, 0x4546, 0xac29, 0x1, 0x0);
        gbc.writeMem(0xcb1a, { 0x10 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfa66, gbc.sp());
        EXPECT(0xcb1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcb1a));
        // 10 0287
        gbc.setState(0x27b3, 0xd262, 0xe9d0, 0x6a4c, 0x6dc8, 0x1ed2, 0x1, 0x1);
        gbc.writeMem(0x27b3, { 0x10 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd262, gbc.sp());
        EXPECT(0x27b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0288
        gbc.setState(0x29be, 0x2025, 0x65c0, 0x3719, 0x4cf0, 0xf02e, 0x1, 0x0);
        gbc.writeMem(0x29be, { 0x10 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2025, gbc.sp());
        EXPECT(0x29bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0289
        gbc.setState(0xbb8e, 0x469e, 0x6cf0, 0xdb78, 0x31f6, 0xc203, 0x1, 0x1);
        gbc.writeMem(0xbb8e, { 0x10 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x469e, gbc.sp());
        EXPECT(0xbb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbb8e));
        // 10 028A
        gbc.setState(0xcf14, 0x6945, 0xa220, 0x14, 0x61fc, 0x7b33, 0x0, 0x0);
        gbc.writeMem(0xcf14, { 0x10 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6945, gbc.sp());
        EXPECT(0xcf15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcf14));
        // 10 028B
        gbc.setState(0xc692, 0x3189, 0x99d0, 0x6df3, 0x3ebf, 0x7e50, 0x0, 0x0);
        gbc.writeMem(0xc692, { 0x10 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3189, gbc.sp());
        EXPECT(0xc693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc692));
        // 10 028C
        gbc.setState(0x9cd5, 0xe844, 0x8bd0, 0x36d2, 0xef22, 0x5d6a, 0x1, 0x1);
        gbc.writeMem(0x9cd5, { 0x10 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe844, gbc.sp());
        EXPECT(0x9cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9cd5));
        // 10 028D
        gbc.setState(0xc6b, 0xd319, 0xb820, 0xaee5, 0x9dfc, 0x901b, 0x0, 0x0);
        gbc.writeMem(0xc6b, { 0x10 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd319, gbc.sp());
        EXPECT(0xc6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 028E
        gbc.setState(0x6e66, 0x159, 0x78a0, 0x731c, 0xced3, 0x7782, 0x1, 0x0);
        gbc.writeMem(0x6e66, { 0x10 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x159, gbc.sp());
        EXPECT(0x6e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 028F
        gbc.setState(0x3b21, 0xd864, 0xc700, 0x531c, 0xd865, 0xba0d, 0x1, 0x1);
        gbc.writeMem(0x3b21, { 0x10 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd864, gbc.sp());
        EXPECT(0x3b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0290
        gbc.setState(0x31a2, 0x6a59, 0x1930, 0xeeae, 0x9357, 0xcb36, 0x0, 0x1);
        gbc.writeMem(0x31a2, { 0x10 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6a59, gbc.sp());
        EXPECT(0x31a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0291
        gbc.setState(0x9057, 0x58f9, 0xb230, 0x16d9, 0xdc40, 0xea55, 0x1, 0x0);
        gbc.writeMem(0x9057, { 0x10 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x58f9, gbc.sp());
        EXPECT(0x9058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9057));
        // 10 0292
        gbc.setState(0xc92b, 0xb21f, 0x1900, 0x1d5d, 0x835b, 0xa358, 0x0, 0x1);
        gbc.writeMem(0xc92b, { 0x10 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb21f, gbc.sp());
        EXPECT(0xc92c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc92b));
        // 10 0293
        gbc.setState(0x66ae, 0x429a, 0xafd0, 0xdcd5, 0xac17, 0xfb2, 0x0, 0x1);
        gbc.writeMem(0x66ae, { 0x10 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x429a, gbc.sp());
        EXPECT(0x66af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0294
        gbc.setState(0x86, 0x43f1, 0xba80, 0xffd8, 0xdbe5, 0xbfdc, 0x0, 0x1);
        gbc.writeMem(0x86, { 0x10 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x43f1, gbc.sp());
        EXPECT(0x87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0295
        gbc.setState(0xb871, 0x2b17, 0x30d0, 0x9a58, 0x2565, 0x328, 0x1, 0x0);
        gbc.writeMem(0xb871, { 0x10 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2b17, gbc.sp());
        EXPECT(0xb872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb871));
        // 10 0296
        gbc.setState(0x6e2d, 0xa620, 0x8f80, 0x1cde, 0xc814, 0x8a6e, 0x1, 0x0);
        gbc.writeMem(0x6e2d, { 0x10 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa620, gbc.sp());
        EXPECT(0x6e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0297
        gbc.setState(0x2d53, 0x21d6, 0x1c10, 0x396a, 0x537c, 0x3692, 0x1, 0x0);
        gbc.writeMem(0x2d53, { 0x10 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x21d6, gbc.sp());
        EXPECT(0x2d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0298
        gbc.setState(0x3860, 0x3c02, 0x50d0, 0xfef6, 0x2792, 0x9db7, 0x0, 0x0);
        gbc.writeMem(0x3860, { 0x10 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3c02, gbc.sp());
        EXPECT(0x3861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0299
        gbc.setState(0xc84c, 0x5a99, 0x82b0, 0x1ac7, 0xa073, 0x7eda, 0x0, 0x1);
        gbc.writeMem(0xc84c, { 0x10 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5a99, gbc.sp());
        EXPECT(0xc84d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc84c));
        // 10 029A
        gbc.setState(0xab81, 0x3006, 0x4d30, 0xeda4, 0x1bf1, 0xcb67, 0x1, 0x0);
        gbc.writeMem(0xab81, { 0x10 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3006, gbc.sp());
        EXPECT(0xab82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xab81));
        // 10 029B
        gbc.setState(0xddb5, 0xdae6, 0x2f70, 0x7381, 0x3648, 0x3aef, 0x1, 0x0);
        gbc.writeMem(0xddb5, { 0x10 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdae6, gbc.sp());
        EXPECT(0xddb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xddb5));
        // 10 029C
        gbc.setState(0x5cf6, 0x6213, 0x2680, 0x4dd8, 0x45b9, 0x690e, 0x1, 0x0);
        gbc.writeMem(0x5cf6, { 0x10 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6213, gbc.sp());
        EXPECT(0x5cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 029D
        gbc.setState(0x3c8b, 0xf8cb, 0xfa30, 0x1ae0, 0xefe4, 0x124f, 0x0, 0x1);
        gbc.writeMem(0x3c8b, { 0x10 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf8cb, gbc.sp());
        EXPECT(0x3c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 029E
        gbc.setState(0xc628, 0xe9bf, 0xd970, 0xf865, 0xa9ed, 0x164e, 0x1, 0x1);
        gbc.writeMem(0xc628, { 0x10 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe9bf, gbc.sp());
        EXPECT(0xc629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc628));
        // 10 029F
        gbc.setState(0x41c3, 0x9c9e, 0x4450, 0xffe6, 0x86ba, 0x19b8, 0x0, 0x1);
        gbc.writeMem(0x41c3, { 0x10 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9c9e, gbc.sp());
        EXPECT(0x41c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02A0
        gbc.setState(0xce92, 0x795c, 0x2540, 0x3978, 0xc94e, 0x77e6, 0x1, 0x1);
        gbc.writeMem(0xce92, { 0x10 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x795c, gbc.sp());
        EXPECT(0xce93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xce92));
        // 10 02A1
        gbc.setState(0x1403, 0xc95e, 0xa4d0, 0xc4ab, 0xb8b5, 0xc453, 0x0, 0x1);
        gbc.writeMem(0x1403, { 0x10 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc95e, gbc.sp());
        EXPECT(0x1404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02A2
        gbc.setState(0xcf8f, 0xd91d, 0xdf40, 0x765, 0x3868, 0x86fd, 0x1, 0x1);
        gbc.writeMem(0xcf8f, { 0x10 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd91d, gbc.sp());
        EXPECT(0xcf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcf8f));
        // 10 02A3
        gbc.setState(0x625b, 0x2a40, 0xbc70, 0xf05e, 0x3790, 0xeab9, 0x0, 0x0);
        gbc.writeMem(0x625b, { 0x10 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2a40, gbc.sp());
        EXPECT(0x625c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02A4
        gbc.setState(0xc243, 0xe1be, 0xebd0, 0x62b1, 0x4338, 0xf5fe, 0x1, 0x1);
        gbc.writeMem(0xc243, { 0x10 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe1be, gbc.sp());
        EXPECT(0xc244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc243));
        // 10 02A5
        gbc.setState(0xc2ef, 0x81e1, 0x93f0, 0xeaf8, 0x3c24, 0x47dd, 0x0, 0x0);
        gbc.writeMem(0xc2ef, { 0x10 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x81e1, gbc.sp());
        EXPECT(0xc2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc2ef));
        // 10 02A6
        gbc.setState(0x8316, 0xa85b, 0x2610, 0x6a1d, 0x183a, 0xada9, 0x0, 0x1);
        gbc.writeMem(0x8316, { 0x10 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa85b, gbc.sp());
        EXPECT(0x8317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8316));
        // 10 02A7
        gbc.setState(0x64b8, 0xfd9e, 0xa9a0, 0x776e, 0xcd4e, 0x9ef9, 0x0, 0x0);
        gbc.writeMem(0x64b8, { 0x10 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfd9e, gbc.sp());
        EXPECT(0x64b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02A8
        gbc.setState(0x669d, 0x628, 0x8f80, 0x4081, 0x2c50, 0x45c5, 0x1, 0x1);
        gbc.writeMem(0x669d, { 0x10 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x628, gbc.sp());
        EXPECT(0x669e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02A9
        gbc.setState(0x899, 0x26a1, 0xfd70, 0x28c4, 0xbcc6, 0xcfa0, 0x0, 0x1);
        gbc.writeMem(0x899, { 0x10 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x26a1, gbc.sp());
        EXPECT(0x89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02AA
        gbc.setState(0x5b1f, 0x7a11, 0x230, 0x704e, 0x5d0, 0x6b7e, 0x1, 0x0);
        gbc.writeMem(0x5b1f, { 0x10 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7a11, gbc.sp());
        EXPECT(0x5b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02AB
        gbc.setState(0x2767, 0xf0b, 0x9650, 0xcdd8, 0xc2a8, 0x1515, 0x1, 0x1);
        gbc.writeMem(0x2767, { 0x10 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf0b, gbc.sp());
        EXPECT(0x2768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02AC
        gbc.setState(0x231d, 0x9d70, 0x4c10, 0x27dc, 0xcce, 0x780a, 0x0, 0x0);
        gbc.writeMem(0x231d, { 0x10 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9d70, gbc.sp());
        EXPECT(0x231e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02AD
        gbc.setState(0xc827, 0x6274, 0x3770, 0xe4a8, 0x5d8f, 0x6e29, 0x0, 0x1);
        gbc.writeMem(0xc827, { 0x10 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6274, gbc.sp());
        EXPECT(0xc828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc827));
        // 10 02AE
        gbc.setState(0x65db, 0x8d22, 0xc510, 0xc371, 0xc5ef, 0x7949, 0x1, 0x0);
        gbc.writeMem(0x65db, { 0x10 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8d22, gbc.sp());
        EXPECT(0x65dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02AF
        gbc.setState(0x22e7, 0xace6, 0x2430, 0xf0e6, 0x13c, 0xc51f, 0x1, 0x0);
        gbc.writeMem(0x22e7, { 0x10 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xace6, gbc.sp());
        EXPECT(0x22e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02B0
        gbc.setState(0x11b0, 0x2625, 0xb600, 0x93b9, 0x4d23, 0x68a5, 0x0, 0x0);
        gbc.writeMem(0x11b0, { 0x10 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2625, gbc.sp());
        EXPECT(0x11b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02B2
        gbc.setState(0x37a, 0x8b4f, 0x2e00, 0xc620, 0xcbd7, 0xf3ac, 0x1, 0x0);
        gbc.writeMem(0x37a, { 0x10 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8b4f, gbc.sp());
        EXPECT(0x37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02B3
        gbc.setState(0xe468, 0xc5dc, 0xb1a0, 0xd6a, 0x43dd, 0xbfa2, 0x1, 0x0);
        gbc.writeMem(0xe468, { 0x10 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc5dc, gbc.sp());
        EXPECT(0xe469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe468));
        // 10 02B4
        gbc.setState(0xef42, 0x4095, 0xd430, 0x8243, 0xa1e1, 0xeb37, 0x1, 0x0);
        gbc.writeMem(0xef42, { 0x10 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4095, gbc.sp());
        EXPECT(0xef43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xef42));
        // 10 02B5
        gbc.setState(0xe609, 0xc9b4, 0x9ab0, 0x513c, 0xe01a, 0x3967, 0x1, 0x1);
        gbc.writeMem(0xe609, { 0x10 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc9b4, gbc.sp());
        EXPECT(0xe60a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe609));
        // 10 02B6
        gbc.setState(0xd231, 0x18d4, 0x3780, 0xe7e6, 0x722, 0x12dc, 0x0, 0x0);
        gbc.writeMem(0xd231, { 0x10 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x18d4, gbc.sp());
        EXPECT(0xd232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd231));
        // 10 02B7
        gbc.setState(0xcbf8, 0xa707, 0x7d30, 0x1983, 0xf1ab, 0x6245, 0x1, 0x0);
        gbc.writeMem(0xcbf8, { 0x10 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa707, gbc.sp());
        EXPECT(0xcbf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcbf8));
        // 10 02B8
        gbc.setState(0x5bf, 0x2266, 0x4c80, 0x1ae4, 0x7b11, 0x4d14, 0x0, 0x0);
        gbc.writeMem(0x5bf, { 0x10 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2266, gbc.sp());
        EXPECT(0x5c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02B9
        gbc.setState(0x6367, 0x1832, 0x2200, 0x49ad, 0x48b2, 0x31dc, 0x1, 0x0);
        gbc.writeMem(0x6367, { 0x10 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1832, gbc.sp());
        EXPECT(0x6368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02BA
        gbc.setState(0x64c1, 0xf074, 0x3ee0, 0xcb01, 0xed97, 0xf8cc, 0x1, 0x0);
        gbc.writeMem(0x64c1, { 0x10 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf074, gbc.sp());
        EXPECT(0x64c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02BB
        gbc.setState(0xbf3f, 0x535, 0x8310, 0x36de, 0x9f2c, 0xa267, 0x0, 0x1);
        gbc.writeMem(0xbf3f, { 0x10 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x535, gbc.sp());
        EXPECT(0xbf40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbf3f));
        // 10 02BC
        gbc.setState(0x695f, 0x931d, 0x4d40, 0x86be, 0xa4f9, 0x34b7, 0x1, 0x0);
        gbc.writeMem(0x695f, { 0x10 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x931d, gbc.sp());
        EXPECT(0x6960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02BD
        gbc.setState(0x5cd9, 0xf994, 0xf8a0, 0x95aa, 0xbc4, 0xf5c4, 0x1, 0x1);
        gbc.writeMem(0x5cd9, { 0x10 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf994, gbc.sp());
        EXPECT(0x5cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02BE
        gbc.setState(0xa362, 0xaae2, 0x1110, 0x2488, 0x6acb, 0xd206, 0x1, 0x0);
        gbc.writeMem(0xa362, { 0x10 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xaae2, gbc.sp());
        EXPECT(0xa363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa362));
        // 10 02BF
        gbc.setState(0x3544, 0x7610, 0xd130, 0xb1e7, 0x6f47, 0x6cfa, 0x0, 0x1);
        gbc.writeMem(0x3544, { 0x10 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7610, gbc.sp());
        EXPECT(0x3545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02C0
        gbc.setState(0xeeab, 0xf70f, 0x28a0, 0x5edb, 0xf2bf, 0x4316, 0x0, 0x1);
        gbc.writeMem(0xeeab, { 0x10 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf70f, gbc.sp());
        EXPECT(0xeeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xeeab));
        // 10 02C1
        gbc.setState(0xee95, 0xff58, 0x4e60, 0x406c, 0xef05, 0xbc7, 0x1, 0x0);
        gbc.writeMem(0xee95, { 0x10 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xff58, gbc.sp());
        EXPECT(0xee96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xee95));
        // 10 02C2
        gbc.setState(0xd0dd, 0xf928, 0xb8c0, 0xc46f, 0x7e1d, 0xb16c, 0x1, 0x1);
        gbc.writeMem(0xd0dd, { 0x10 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf928, gbc.sp());
        EXPECT(0xd0de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd0dd));
        // 10 02C3
        gbc.setState(0x48e4, 0x52fd, 0x8e80, 0x89aa, 0xc0c4, 0x3dca, 0x1, 0x0);
        gbc.writeMem(0x48e4, { 0x10 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x52fd, gbc.sp());
        EXPECT(0x48e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02C4
        gbc.setState(0x69a0, 0x32a6, 0xa5f0, 0x3c12, 0xdfa, 0x8518, 0x0, 0x1);
        gbc.writeMem(0x69a0, { 0x10 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x32a6, gbc.sp());
        EXPECT(0x69a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02C5
        gbc.setState(0xe5e9, 0xa136, 0x5db0, 0xf3de, 0x78e3, 0x279c, 0x0, 0x0);
        gbc.writeMem(0xe5e9, { 0x10 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa136, gbc.sp());
        EXPECT(0xe5ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe5e9));
        // 10 02C6
        gbc.setState(0xc208, 0x5d2e, 0xa6b0, 0x91ea, 0xf29, 0xf835, 0x0, 0x1);
        gbc.writeMem(0xc208, { 0x10 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5d2e, gbc.sp());
        EXPECT(0xc209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc208));
        // 10 02C7
        gbc.setState(0x8222, 0xdabe, 0x4da0, 0x34cc, 0x7a37, 0xb76d, 0x0, 0x1);
        gbc.writeMem(0x8222, { 0x10 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdabe, gbc.sp());
        EXPECT(0x8223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8222));
        // 10 02C8
        gbc.setState(0x67f3, 0xbd6f, 0x3990, 0xfedc, 0x97f5, 0x5435, 0x1, 0x1);
        gbc.writeMem(0x67f3, { 0x10 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbd6f, gbc.sp());
        EXPECT(0x67f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02C9
        gbc.setState(0x5402, 0x8eba, 0xab0, 0xc1ec, 0xa909, 0x66dd, 0x1, 0x0);
        gbc.writeMem(0x5402, { 0x10 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8eba, gbc.sp());
        EXPECT(0x5403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02CA
        gbc.setState(0x6fb1, 0xf975, 0xd840, 0xbb73, 0x296f, 0x6fb4, 0x1, 0x1);
        gbc.writeMem(0x6fb1, { 0x10 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf975, gbc.sp());
        EXPECT(0x6fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02CB
        gbc.setState(0xd5b7, 0xe259, 0x1b30, 0x4792, 0xb7f3, 0x5195, 0x1, 0x1);
        gbc.writeMem(0xd5b7, { 0x10 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe259, gbc.sp());
        EXPECT(0xd5b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd5b7));
        // 10 02CC
        gbc.setState(0x697e, 0x6f0b, 0x2940, 0x5a94, 0xa3fb, 0x4377, 0x1, 0x0);
        gbc.writeMem(0x697e, { 0x10 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6f0b, gbc.sp());
        EXPECT(0x697f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02CD
        gbc.setState(0xddaa, 0x73dd, 0xb450, 0x224f, 0x9cdd, 0x6917, 0x1, 0x1);
        gbc.writeMem(0xddaa, { 0x10 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x73dd, gbc.sp());
        EXPECT(0xddab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xddaa));
        // 10 02CE
        gbc.setState(0x124e, 0x2a1a, 0x2b0, 0xcb41, 0x4065, 0x2d26, 0x1, 0x1);
        gbc.writeMem(0x124e, { 0x10 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2a1a, gbc.sp());
        EXPECT(0x124f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02CF
        gbc.setState(0x3f90, 0x5369, 0x3cd0, 0x7e16, 0x13ea, 0x78ff, 0x1, 0x0);
        gbc.writeMem(0x3f90, { 0x10 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5369, gbc.sp());
        EXPECT(0x3f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02D0
        gbc.setState(0x457, 0xcd0f, 0x6e20, 0xa81d, 0xa26c, 0xa31, 0x0, 0x1);
        gbc.writeMem(0x457, { 0x10 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcd0f, gbc.sp());
        EXPECT(0x458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02D1
        gbc.setState(0x2779, 0x84ed, 0x2a30, 0xf287, 0x2a18, 0x7426, 0x1, 0x0);
        gbc.writeMem(0x2779, { 0x10 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x84ed, gbc.sp());
        EXPECT(0x277a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02D2
        gbc.setState(0x949b, 0xba1d, 0xda30, 0x5b31, 0xa1ca, 0x6a69, 0x1, 0x0);
        gbc.writeMem(0x949b, { 0x10 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xba1d, gbc.sp());
        EXPECT(0x949c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x949b));
        // 10 02D3
        gbc.setState(0xdab, 0x1802, 0x4090, 0xd0bb, 0x3586, 0xbdbf, 0x1, 0x0);
        gbc.writeMem(0xdab, { 0x10 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1802, gbc.sp());
        EXPECT(0xdac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02D4
        gbc.setState(0xe9f6, 0xce04, 0xca40, 0xfab, 0x31d9, 0xa6a6, 0x1, 0x0);
        gbc.writeMem(0xe9f6, { 0x10 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xce04, gbc.sp());
        EXPECT(0xe9f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe9f6));
        // 10 02D5
        gbc.setState(0x8c2e, 0x8e79, 0x680, 0x4416, 0xcfda, 0x5be6, 0x1, 0x1);
        gbc.writeMem(0x8c2e, { 0x10 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8e79, gbc.sp());
        EXPECT(0x8c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8c2e));
        // 10 02D6
        gbc.setState(0x9786, 0xf107, 0x7d0, 0x7b3, 0x6242, 0x5029, 0x0, 0x0);
        gbc.writeMem(0x9786, { 0x10 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf107, gbc.sp());
        EXPECT(0x9787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9786));
        // 10 02D7
        gbc.setState(0x9e1a, 0x2613, 0xca00, 0xf5b4, 0x8ccc, 0xbe92, 0x0, 0x1);
        gbc.writeMem(0x9e1a, { 0x10 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2613, gbc.sp());
        EXPECT(0x9e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9e1a));
        // 10 02D8
        gbc.setState(0x6850, 0xaa82, 0xa640, 0xccac, 0x987, 0x7cfe, 0x1, 0x0);
        gbc.writeMem(0x6850, { 0x10 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xaa82, gbc.sp());
        EXPECT(0x6851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02D9
        gbc.setState(0x1b46, 0xef65, 0x5d20, 0xc4e0, 0xfb28, 0xed72, 0x0, 0x0);
        gbc.writeMem(0x1b46, { 0x10 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xef65, gbc.sp());
        EXPECT(0x1b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02DB
        gbc.setState(0x7e49, 0xb93b, 0xcad0, 0x77e4, 0x9709, 0x6ba5, 0x1, 0x1);
        gbc.writeMem(0x7e49, { 0x10 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb93b, gbc.sp());
        EXPECT(0x7e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02DC
        gbc.setState(0xe35d, 0xb051, 0x3d60, 0xefe7, 0xd832, 0xd634, 0x1, 0x0);
        gbc.writeMem(0xe35d, { 0x10 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb051, gbc.sp());
        EXPECT(0xe35e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe35d));
        // 10 02DD
        gbc.setState(0x42f8, 0x733, 0xe190, 0xa92d, 0x7b83, 0x9161, 0x1, 0x0);
        gbc.writeMem(0x42f8, { 0x10 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x733, gbc.sp());
        EXPECT(0x42f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02DE
        gbc.setState(0x3908, 0x1a6d, 0xef50, 0xac27, 0xe31a, 0xecac, 0x1, 0x1);
        gbc.writeMem(0x3908, { 0x10 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1a6d, gbc.sp());
        EXPECT(0x3909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02DF
        gbc.setState(0x4f64, 0x25c5, 0x8050, 0x13d9, 0x97fc, 0xea59, 0x0, 0x1);
        gbc.writeMem(0x4f64, { 0x10 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x25c5, gbc.sp());
        EXPECT(0x4f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02E0
        gbc.setState(0xe3cf, 0x1f00, 0x9bb0, 0x4361, 0xb137, 0x6f91, 0x1, 0x1);
        gbc.writeMem(0xe3cf, { 0x10 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1f00, gbc.sp());
        EXPECT(0xe3d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe3cf));
        // 10 02E1
        gbc.setState(0x645d, 0x7328, 0x10, 0xbcf6, 0x1012, 0xb051, 0x1, 0x1);
        gbc.writeMem(0x645d, { 0x10 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7328, gbc.sp());
        EXPECT(0x645e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02E2
        gbc.setState(0x9b22, 0xd1ed, 0x3000, 0xcec0, 0x58f1, 0x8926, 0x1, 0x1);
        gbc.writeMem(0x9b22, { 0x10 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd1ed, gbc.sp());
        EXPECT(0x9b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9b22));
        // 10 02E3
        gbc.setState(0xd6a8, 0x168, 0xb220, 0x68a, 0x9b81, 0x74d1, 0x0, 0x1);
        gbc.writeMem(0xd6a8, { 0x10 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x168, gbc.sp());
        EXPECT(0xd6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd6a8));
        // 10 02E4
        gbc.setState(0x8123, 0xb78d, 0xb8d0, 0x2f64, 0x199c, 0xde5d, 0x0, 0x1);
        gbc.writeMem(0x8123, { 0x10 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb78d, gbc.sp());
        EXPECT(0x8124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8123));
        // 10 02E6
        gbc.setState(0x25d1, 0x7242, 0xa190, 0x4c76, 0xbc09, 0x8714, 0x0, 0x1);
        gbc.writeMem(0x25d1, { 0x10 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7242, gbc.sp());
        EXPECT(0x25d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02E7
        gbc.setState(0x8386, 0x6ff0, 0x7990, 0x8547, 0xe911, 0xf7fc, 0x0, 0x1);
        gbc.writeMem(0x8386, { 0x10 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6ff0, gbc.sp());
        EXPECT(0x8387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8386));
        // 10 02E9
        gbc.setState(0xbba0, 0x119c, 0xc510, 0x5640, 0xcf08, 0xa12d, 0x0, 0x1);
        gbc.writeMem(0xbba0, { 0x10 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x119c, gbc.sp());
        EXPECT(0xbba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbba0));
        // 10 02EA
        gbc.setState(0xbd85, 0x19bf, 0xc7b0, 0xc16a, 0x33e3, 0xdb88, 0x0, 0x0);
        gbc.writeMem(0xbd85, { 0x10 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x19bf, gbc.sp());
        EXPECT(0xbd86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbd85));
        // 10 02EB
        gbc.setState(0x837b, 0xdd86, 0x7580, 0x5eaf, 0xaa20, 0x5ae5, 0x0, 0x1);
        gbc.writeMem(0x837b, { 0x10 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdd86, gbc.sp());
        EXPECT(0x837c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x837b));
        // 10 02EC
        gbc.setState(0xcded, 0xad85, 0x6970, 0xa01f, 0x92e4, 0x3ea4, 0x1, 0x1);
        gbc.writeMem(0xcded, { 0x10 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xad85, gbc.sp());
        EXPECT(0xcdee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcded));
        // 10 02ED
        gbc.setState(0x8c85, 0x8f84, 0xbb20, 0x9b62, 0x5193, 0x2173, 0x1, 0x1);
        gbc.writeMem(0x8c85, { 0x10 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8f84, gbc.sp());
        EXPECT(0x8c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8c85));
        // 10 02EE
        gbc.setState(0x866f, 0x1551, 0x8b20, 0x2620, 0x1512, 0x6e18, 0x1, 0x1);
        gbc.writeMem(0x866f, { 0x10 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1551, gbc.sp());
        EXPECT(0x8670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x866f));
        // 10 02EF
        gbc.setState(0x2722, 0x510a, 0xbb00, 0xacb7, 0x1e15, 0x3395, 0x1, 0x0);
        gbc.writeMem(0x2722, { 0x10 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x510a, gbc.sp());
        EXPECT(0x2723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02F0
        gbc.setState(0x58eb, 0x4651, 0x2380, 0x91d0, 0x93cb, 0x2a15, 0x0, 0x1);
        gbc.writeMem(0x58eb, { 0x10 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4651, gbc.sp());
        EXPECT(0x58ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02F1
        gbc.setState(0x63b7, 0x62f4, 0x8f10, 0x6224, 0xbc93, 0x7e64, 0x0, 0x1);
        gbc.writeMem(0x63b7, { 0x10 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x62f4, gbc.sp());
        EXPECT(0x63b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02F2
        gbc.setState(0x7dc3, 0x6db, 0x7170, 0x5645, 0x86dc, 0xac85, 0x0, 0x0);
        gbc.writeMem(0x7dc3, { 0x10 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6db, gbc.sp());
        EXPECT(0x7dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02F3
        gbc.setState(0x5d73, 0x7828, 0xc130, 0xd10f, 0xa3f3, 0x2fec, 0x1, 0x0);
        gbc.writeMem(0x5d73, { 0x10 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7828, gbc.sp());
        EXPECT(0x5d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 02F4
        gbc.setState(0xda64, 0x6523, 0xff30, 0x85bb, 0x3f3c, 0xa472, 0x1, 0x0);
        gbc.writeMem(0xda64, { 0x10 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6523, gbc.sp());
        EXPECT(0xda65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xda64));
        // 10 02F5
        gbc.setState(0xd47e, 0x25a0, 0xca90, 0xfe2c, 0xf495, 0x7e0, 0x1, 0x1);
        gbc.writeMem(0xd47e, { 0x10 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x25a0, gbc.sp());
        EXPECT(0xd47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd47e));
        // 10 02F6
        gbc.setState(0xc96d, 0xbeaf, 0x8bb0, 0xc9bb, 0xdcb6, 0x236, 0x0, 0x1);
        gbc.writeMem(0xc96d, { 0x10 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbeaf, gbc.sp());
        EXPECT(0xc96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc96d));
        // 10 02F7
        gbc.setState(0xa2df, 0x9f9b, 0xfcf0, 0xe58f, 0xa28, 0xccda, 0x1, 0x1);
        gbc.writeMem(0xa2df, { 0x10 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9f9b, gbc.sp());
        EXPECT(0xa2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa2df));
        // 10 02F8
        gbc.setState(0x6d2, 0xcaa9, 0x3080, 0x272, 0xa5af, 0x1434, 0x1, 0x1);
        gbc.writeMem(0x6d2, { 0x10 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcaa9, gbc.sp());
        EXPECT(0x6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02F9
        gbc.setState(0x41ef, 0x6181, 0xf180, 0x26e6, 0x10f2, 0xc597, 0x0, 0x0);
        gbc.writeMem(0x41ef, { 0x10 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6181, gbc.sp());
        EXPECT(0x41f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02FA
        gbc.setState(0xd341, 0xfacd, 0xefa0, 0xf094, 0xb477, 0x8605, 0x1, 0x1);
        gbc.writeMem(0xd341, { 0x10 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfacd, gbc.sp());
        EXPECT(0xd342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd341));
        // 10 02FB
        gbc.setState(0x3a0, 0xf80d, 0x78a0, 0x4a2d, 0x9c26, 0xc8aa, 0x1, 0x0);
        gbc.writeMem(0x3a0, { 0x10 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf80d, gbc.sp());
        EXPECT(0x3a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 02FC
        gbc.setState(0x8e99, 0x3d71, 0xb410, 0xaa9, 0x9c69, 0x8460, 0x1, 0x1);
        gbc.writeMem(0x8e99, { 0x10 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3d71, gbc.sp());
        EXPECT(0x8e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8e99));
        // 10 02FE
        gbc.setState(0x8e8c, 0x5032, 0x23f0, 0xe9b2, 0x989c, 0xdbd4, 0x1, 0x0);
        gbc.writeMem(0x8e8c, { 0x10 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5032, gbc.sp());
        EXPECT(0x8e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8e8c));
        // 10 02FF
        gbc.setState(0x9223, 0xb703, 0x9fb0, 0x382d, 0xcb0a, 0x9f9, 0x1, 0x0);
        gbc.writeMem(0x9223, { 0x10 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb703, gbc.sp());
        EXPECT(0x9224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9223));
        // 10 0300
        gbc.setState(0xdfed, 0xe10c, 0xdaf0, 0x7b9f, 0x1235, 0xe2d4, 0x0, 0x0);
        gbc.writeMem(0xdfed, { 0x10 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe10c, gbc.sp());
        EXPECT(0xdfee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdfed));
        // 10 0301
        gbc.setState(0xbb6a, 0xdad6, 0x8380, 0x591d, 0x8774, 0x3469, 0x0, 0x1);
        gbc.writeMem(0xbb6a, { 0x10 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdad6, gbc.sp());
        EXPECT(0xbb6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbb6a));
        // 10 0302
        gbc.setState(0xc934, 0x5c0f, 0x7340, 0x6493, 0x1be5, 0x66cb, 0x1, 0x1);
        gbc.writeMem(0xc934, { 0x10 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5c0f, gbc.sp());
        EXPECT(0xc935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc934));
        // 10 0303
        gbc.setState(0xceff, 0x6e8e, 0x9af0, 0x6b64, 0xda15, 0x616f, 0x0, 0x1);
        gbc.writeMem(0xceff, { 0x10 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6e8e, gbc.sp());
        EXPECT(0xcf00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xceff));
        // 10 0304
        gbc.setState(0x42ae, 0x5f06, 0x55c0, 0x7ca9, 0xf15d, 0x964, 0x1, 0x0);
        gbc.writeMem(0x42ae, { 0x10 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5f06, gbc.sp());
        EXPECT(0x42af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0305
        gbc.setState(0x8985, 0x1136, 0xb380, 0x45b6, 0x6079, 0x3ee8, 0x0, 0x0);
        gbc.writeMem(0x8985, { 0x10 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1136, gbc.sp());
        EXPECT(0x8986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8985));
        // 10 0306
        gbc.setState(0x89ae, 0x4933, 0xc5f0, 0x8324, 0x735c, 0x4431, 0x1, 0x1);
        gbc.writeMem(0x89ae, { 0x10 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4933, gbc.sp());
        EXPECT(0x89af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x89ae));
        // 10 0307
        gbc.setState(0xd19, 0x6d70, 0x71e0, 0xab40, 0x86d0, 0x37c4, 0x1, 0x0);
        gbc.writeMem(0xd19, { 0x10 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6d70, gbc.sp());
        EXPECT(0xd1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0308
        gbc.setState(0xe39a, 0x44da, 0x7870, 0xae65, 0x977f, 0x6454, 0x0, 0x1);
        gbc.writeMem(0xe39a, { 0x10 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x44da, gbc.sp());
        EXPECT(0xe39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe39a));
        // 10 0309
        gbc.setState(0xad45, 0xb4a1, 0x4730, 0x2e37, 0xfbd8, 0x44e2, 0x1, 0x0);
        gbc.writeMem(0xad45, { 0x10 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb4a1, gbc.sp());
        EXPECT(0xad46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xad45));
        // 10 030A
        gbc.setState(0x66e2, 0xea09, 0xd8a0, 0x1f69, 0x9716, 0x19a1, 0x1, 0x0);
        gbc.writeMem(0x66e2, { 0x10 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xea09, gbc.sp());
        EXPECT(0x66e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 030B
        gbc.setState(0xe689, 0x6e40, 0xb2c0, 0x1a8a, 0x80f1, 0x3f8f, 0x0, 0x0);
        gbc.writeMem(0xe689, { 0x10 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6e40, gbc.sp());
        EXPECT(0xe68a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe689));
        // 10 030C
        gbc.setState(0x64f3, 0xd692, 0x6ab0, 0x9ae4, 0x447e, 0xad9d, 0x1, 0x0);
        gbc.writeMem(0x64f3, { 0x10 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd692, gbc.sp());
        EXPECT(0x64f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 030D
        gbc.setState(0x4ec0, 0xe9b7, 0x5c40, 0x625c, 0x3d6f, 0x5f67, 0x0, 0x1);
        gbc.writeMem(0x4ec0, { 0x10 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe9b7, gbc.sp());
        EXPECT(0x4ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 030E
        gbc.setState(0xf78, 0xd58b, 0xec40, 0xb681, 0x314f, 0xc6d8, 0x0, 0x1);
        gbc.writeMem(0xf78, { 0x10 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd58b, gbc.sp());
        EXPECT(0xf79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 030F
        gbc.setState(0x8df0, 0xb961, 0x5db0, 0xaa58, 0x44ff, 0x842f, 0x0, 0x0);
        gbc.writeMem(0x8df0, { 0x10 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb961, gbc.sp());
        EXPECT(0x8df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8df0));
        // 10 0310
        gbc.setState(0x6a6, 0x989c, 0x1540, 0xd6d0, 0xbba8, 0x697b, 0x0, 0x0);
        gbc.writeMem(0x6a6, { 0x10 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x989c, gbc.sp());
        EXPECT(0x6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0312
        gbc.setState(0x464e, 0xd8e8, 0xff10, 0xb6f8, 0x90e7, 0xd01b, 0x1, 0x0);
        gbc.writeMem(0x464e, { 0x10 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd8e8, gbc.sp());
        EXPECT(0x464f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0313
        gbc.setState(0x100b, 0xd1b2, 0xd420, 0x9190, 0x7d88, 0x94f5, 0x1, 0x0);
        gbc.writeMem(0x100b, { 0x10 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd1b2, gbc.sp());
        EXPECT(0x100c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0315
        gbc.setState(0x4434, 0x1fb4, 0x2300, 0x5b69, 0x5d3f, 0xc823, 0x1, 0x1);
        gbc.writeMem(0x4434, { 0x10 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1fb4, gbc.sp());
        EXPECT(0x4435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0316
        gbc.setState(0xaf00, 0x18eb, 0x7a20, 0x901, 0x180b, 0x86f9, 0x0, 0x0);
        gbc.writeMem(0xaf00, { 0x10 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x18eb, gbc.sp());
        EXPECT(0xaf01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xaf00));
        // 10 0317
        gbc.setState(0xdc9, 0x635f, 0x3770, 0x591c, 0xcb8e, 0x3af9, 0x1, 0x1);
        gbc.writeMem(0xdc9, { 0x10 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x635f, gbc.sp());
        EXPECT(0xdca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0318
        gbc.setState(0x562f, 0x889e, 0x7cf0, 0x8f38, 0x2f65, 0x96d7, 0x1, 0x1);
        gbc.writeMem(0x562f, { 0x10 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x889e, gbc.sp());
        EXPECT(0x5630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0319
        gbc.setState(0xc10, 0x7969, 0x7d40, 0x3451, 0x4eb5, 0x15bf, 0x0, 0x0);
        gbc.writeMem(0xc10, { 0x10 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7969, gbc.sp());
        EXPECT(0xc11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 031A
        gbc.setState(0x9421, 0xe993, 0x6f80, 0x9e62, 0xd3c7, 0xeb7e, 0x0, 0x1);
        gbc.writeMem(0x9421, { 0x10 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe993, gbc.sp());
        EXPECT(0x9422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9421));
        // 10 031C
        gbc.setState(0xec81, 0xe097, 0x21d0, 0x724, 0x370b, 0xfe8b, 0x0, 0x1);
        gbc.writeMem(0xec81, { 0x10 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe097, gbc.sp());
        EXPECT(0xec82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xec81));
        // 10 031D
        gbc.setState(0x145e, 0x7d7d, 0x3870, 0x1589, 0xc974, 0x65f9, 0x0, 0x1);
        gbc.writeMem(0x145e, { 0x10 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7d7d, gbc.sp());
        EXPECT(0x145f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 031E
        gbc.setState(0xdb8e, 0x6b74, 0x1110, 0x274b, 0x49f6, 0xfff0, 0x0, 0x1);
        gbc.writeMem(0xdb8e, { 0x10 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6b74, gbc.sp());
        EXPECT(0xdb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdb8e));
        // 10 031F
        gbc.setState(0x38b2, 0x446a, 0x94c0, 0x5058, 0xc6f5, 0xd796, 0x1, 0x0);
        gbc.writeMem(0x38b2, { 0x10 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x446a, gbc.sp());
        EXPECT(0x38b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0320
        gbc.setState(0x1541, 0x5a5c, 0xa20, 0x174b, 0x6c3b, 0x8bb9, 0x1, 0x1);
        gbc.writeMem(0x1541, { 0x10 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5a5c, gbc.sp());
        EXPECT(0x1542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0321
        gbc.setState(0x43ac, 0xaa43, 0xdad0, 0x24ed, 0x1aeb, 0x600a, 0x1, 0x0);
        gbc.writeMem(0x43ac, { 0x10 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xaa43, gbc.sp());
        EXPECT(0x43ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0322
        gbc.setState(0x4b3, 0xe592, 0x9e80, 0xbc4b, 0x3e3d, 0x52ed, 0x1, 0x0);
        gbc.writeMem(0x4b3, { 0x10 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe592, gbc.sp());
        EXPECT(0x4b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0323
        gbc.setState(0x35e5, 0x95e4, 0xd000, 0x544, 0x2d80, 0xc325, 0x0, 0x1);
        gbc.writeMem(0x35e5, { 0x10 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x95e4, gbc.sp());
        EXPECT(0x35e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0324
        gbc.setState(0x74d3, 0x14c3, 0x5c80, 0xd626, 0x754e, 0x9c20, 0x1, 0x0);
        gbc.writeMem(0x74d3, { 0x10 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x14c3, gbc.sp());
        EXPECT(0x74d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0325
        gbc.setState(0x1e90, 0x9c31, 0x50a0, 0x256a, 0x755a, 0x9a1a, 0x1, 0x0);
        gbc.writeMem(0x1e90, { 0x10 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9c31, gbc.sp());
        EXPECT(0x1e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0326
        gbc.setState(0xdb7c, 0x1b8e, 0x9c80, 0xccf2, 0x923e, 0xab1a, 0x0, 0x0);
        gbc.writeMem(0xdb7c, { 0x10 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1b8e, gbc.sp());
        EXPECT(0xdb7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdb7c));
        // 10 0327
        gbc.setState(0x5fd7, 0x557d, 0x7b90, 0x8b61, 0xc48a, 0xddb5, 0x1, 0x1);
        gbc.writeMem(0x5fd7, { 0x10 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x557d, gbc.sp());
        EXPECT(0x5fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0328
        gbc.setState(0x52e1, 0x1e0f, 0x640, 0xd9c0, 0xf6d5, 0xd9d0, 0x1, 0x0);
        gbc.writeMem(0x52e1, { 0x10 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1e0f, gbc.sp());
        EXPECT(0x52e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0329
        gbc.setState(0xedd3, 0x6c18, 0x30c0, 0x7a50, 0xb9f4, 0xd9ce, 0x0, 0x0);
        gbc.writeMem(0xedd3, { 0x10 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6c18, gbc.sp());
        EXPECT(0xedd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xedd3));
        // 10 032B
        gbc.setState(0x7b94, 0x7011, 0x8700, 0x5c79, 0xb4dc, 0xa3d4, 0x0, 0x1);
        gbc.writeMem(0x7b94, { 0x10 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7011, gbc.sp());
        EXPECT(0x7b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 032C
        gbc.setState(0x3650, 0x2e8c, 0xdaf0, 0xbf2c, 0x16a1, 0x6f73, 0x1, 0x1);
        gbc.writeMem(0x3650, { 0x10 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2e8c, gbc.sp());
        EXPECT(0x3651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 032E
        gbc.setState(0xcbad, 0x50b2, 0x6a60, 0x3f04, 0x9cc1, 0x8aa7, 0x0, 0x0);
        gbc.writeMem(0xcbad, { 0x10 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x50b2, gbc.sp());
        EXPECT(0xcbae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcbad));
        // 10 032F
        gbc.setState(0xdedc, 0xa3c8, 0x1760, 0xe896, 0xcb21, 0xe70d, 0x0, 0x0);
        gbc.writeMem(0xdedc, { 0x10 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa3c8, gbc.sp());
        EXPECT(0xdedd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdedc));
        // 10 0330
        gbc.setState(0xbbc8, 0x9f0e, 0x4580, 0x6fc4, 0xf46f, 0x720f, 0x0, 0x1);
        gbc.writeMem(0xbbc8, { 0x10 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9f0e, gbc.sp());
        EXPECT(0xbbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbbc8));
        // 10 0331
        gbc.setState(0xca3, 0x3ba8, 0x6200, 0xf28e, 0x5df7, 0xd2d6, 0x0, 0x1);
        gbc.writeMem(0xca3, { 0x10 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3ba8, gbc.sp());
        EXPECT(0xca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0332
        gbc.setState(0x58ec, 0x1a90, 0x7b50, 0x1f68, 0xf354, 0x2679, 0x1, 0x1);
        gbc.writeMem(0x58ec, { 0x10 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1a90, gbc.sp());
        EXPECT(0x58ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0333
        gbc.setState(0x17cc, 0xb053, 0xd30, 0xd2da, 0x911e, 0x6b0f, 0x1, 0x1);
        gbc.writeMem(0x17cc, { 0x10 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb053, gbc.sp());
        EXPECT(0x17cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0334
        gbc.setState(0x1cd9, 0x9b3c, 0xf6d0, 0xc7fa, 0xdbd7, 0xb006, 0x1, 0x0);
        gbc.writeMem(0x1cd9, { 0x10 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9b3c, gbc.sp());
        EXPECT(0x1cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0335
        gbc.setState(0x927f, 0x2510, 0x5010, 0x7aa7, 0x515, 0xe406, 0x0, 0x0);
        gbc.writeMem(0x927f, { 0x10 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2510, gbc.sp());
        EXPECT(0x9280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x927f));
        // 10 0336
        gbc.setState(0x4d55, 0x91a, 0x31d0, 0x2681, 0xf1f, 0x806, 0x1, 0x1);
        gbc.writeMem(0x4d55, { 0x10 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x91a, gbc.sp());
        EXPECT(0x4d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0337
        gbc.setState(0xbd02, 0xa2a7, 0x35f0, 0x1bcb, 0xb7a5, 0xc72b, 0x1, 0x0);
        gbc.writeMem(0xbd02, { 0x10 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa2a7, gbc.sp());
        EXPECT(0xbd03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbd02));
        // 10 0338
        gbc.setState(0x1c0d, 0x7546, 0xd670, 0xf4f9, 0x1a5e, 0xe6fe, 0x1, 0x1);
        gbc.writeMem(0x1c0d, { 0x10 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7546, gbc.sp());
        EXPECT(0x1c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0339
        gbc.setState(0x7003, 0x93e6, 0x89a0, 0x7ddc, 0x1531, 0xe98, 0x0, 0x1);
        gbc.writeMem(0x7003, { 0x10 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x93e6, gbc.sp());
        EXPECT(0x7004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 033A
        gbc.setState(0xdf1f, 0xda7, 0x38e0, 0xda4f, 0xa878, 0xe348, 0x1, 0x0);
        gbc.writeMem(0xdf1f, { 0x10 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xda7, gbc.sp());
        EXPECT(0xdf20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdf1f));
        // 10 033B
        gbc.setState(0x67ab, 0xd881, 0xd650, 0xffa7, 0x74c6, 0x957c, 0x1, 0x1);
        gbc.writeMem(0x67ab, { 0x10 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd881, gbc.sp());
        EXPECT(0x67ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 033C
        gbc.setState(0x1880, 0xc519, 0xdaa0, 0x6d91, 0x1433, 0x7625, 0x1, 0x0);
        gbc.writeMem(0x1880, { 0x10 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc519, gbc.sp());
        EXPECT(0x1881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 033D
        gbc.setState(0x89ba, 0x1205, 0x4fb0, 0x8912, 0xe493, 0xd78, 0x0, 0x1);
        gbc.writeMem(0x89ba, { 0x10 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1205, gbc.sp());
        EXPECT(0x89bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x89ba));
        // 10 033E
        gbc.setState(0xd3b0, 0x41e9, 0x16b0, 0x822, 0x2e65, 0xa6eb, 0x0, 0x1);
        gbc.writeMem(0xd3b0, { 0x10 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x41e9, gbc.sp());
        EXPECT(0xd3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd3b0));
        // 10 033F
        gbc.setState(0x14fa, 0xd30f, 0x3860, 0xd68a, 0xa34f, 0x5fad, 0x1, 0x1);
        gbc.writeMem(0x14fa, { 0x10 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd30f, gbc.sp());
        EXPECT(0x14fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0340
        gbc.setState(0x6dc7, 0x45b3, 0x23e0, 0xdfae, 0x38bf, 0x5b95, 0x1, 0x1);
        gbc.writeMem(0x6dc7, { 0x10 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x45b3, gbc.sp());
        EXPECT(0x6dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0341
        gbc.setState(0x4c09, 0xfa2c, 0x12d0, 0x1b06, 0xe93b, 0x541d, 0x1, 0x0);
        gbc.writeMem(0x4c09, { 0x10 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfa2c, gbc.sp());
        EXPECT(0x4c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0342
        gbc.setState(0x4a06, 0x123e, 0x62a0, 0x4017, 0xe250, 0x3f9d, 0x1, 0x0);
        gbc.writeMem(0x4a06, { 0x10 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x123e, gbc.sp());
        EXPECT(0x4a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0343
        gbc.setState(0x6b0d, 0xd03b, 0xa40, 0x69fd, 0xcf03, 0xad59, 0x1, 0x0);
        gbc.writeMem(0x6b0d, { 0x10 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd03b, gbc.sp());
        EXPECT(0x6b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0344
        gbc.setState(0x1270, 0x1f8f, 0xa030, 0xee32, 0x2ecb, 0xc02f, 0x1, 0x0);
        gbc.writeMem(0x1270, { 0x10 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1f8f, gbc.sp());
        EXPECT(0x1271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0345
        gbc.setState(0x9143, 0x7d35, 0xd50, 0x1fa4, 0xf6bc, 0xfc39, 0x1, 0x0);
        gbc.writeMem(0x9143, { 0x10 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7d35, gbc.sp());
        EXPECT(0x9144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9143));
        // 10 0346
        gbc.setState(0x548b, 0xa556, 0x7ac0, 0xa7b2, 0x7fcd, 0x947, 0x0, 0x1);
        gbc.writeMem(0x548b, { 0x10 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa556, gbc.sp());
        EXPECT(0x548c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0347
        gbc.setState(0xb1fe, 0x1248, 0xd320, 0xb58, 0x76f0, 0x1544, 0x0, 0x0);
        gbc.writeMem(0xb1fe, { 0x10 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1248, gbc.sp());
        EXPECT(0xb1ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb1fe));
        // 10 0348
        gbc.setState(0x80ce, 0x2694, 0x10a0, 0xa5dc, 0x253a, 0x8cef, 0x1, 0x0);
        gbc.writeMem(0x80ce, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2694, gbc.sp());
        EXPECT(0x80cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x80ce));
        // 10 0349
        gbc.setState(0x21ed, 0x5bf5, 0xee80, 0xcf59, 0x761e, 0x9563, 0x0, 0x1);
        gbc.writeMem(0x21ed, { 0x10 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5bf5, gbc.sp());
        EXPECT(0x21ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 034A
        gbc.setState(0xe363, 0x8b60, 0x3d50, 0xfc5c, 0xe4, 0x1308, 0x1, 0x1);
        gbc.writeMem(0xe363, { 0x10 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8b60, gbc.sp());
        EXPECT(0xe364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe363));
        // 10 034B
        gbc.setState(0x59b5, 0x6409, 0x8310, 0x3e73, 0xc0b2, 0x2536, 0x0, 0x1);
        gbc.writeMem(0x59b5, { 0x10 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6409, gbc.sp());
        EXPECT(0x59b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 034C
        gbc.setState(0xe25, 0xf771, 0xc890, 0x741d, 0x38e2, 0x3d58, 0x0, 0x0);
        gbc.writeMem(0xe25, { 0x10 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf771, gbc.sp());
        EXPECT(0xe26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 034D
        gbc.setState(0xc279, 0x20d8, 0x5a60, 0x5096, 0xf8b1, 0x838a, 0x0, 0x0);
        gbc.writeMem(0xc279, { 0x10 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x20d8, gbc.sp());
        EXPECT(0xc27a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc279));
        // 10 034E
        gbc.setState(0x2e96, 0xa8e1, 0xa050, 0x21da, 0x6c28, 0xbe9c, 0x1, 0x0);
        gbc.writeMem(0x2e96, { 0x10 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa8e1, gbc.sp());
        EXPECT(0x2e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 034F
        gbc.setState(0x75ad, 0xddc6, 0x9110, 0xae36, 0xcd12, 0x9ad, 0x1, 0x1);
        gbc.writeMem(0x75ad, { 0x10 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xddc6, gbc.sp());
        EXPECT(0x75ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0351
        gbc.setState(0x3c9, 0x90d1, 0xdc00, 0x5ffe, 0x374a, 0x92d2, 0x0, 0x1);
        gbc.writeMem(0x3c9, { 0x10 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x90d1, gbc.sp());
        EXPECT(0x3ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0352
        gbc.setState(0x49e9, 0x4083, 0x1f30, 0xa7bd, 0x7492, 0xed90, 0x1, 0x1);
        gbc.writeMem(0x49e9, { 0x10 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4083, gbc.sp());
        EXPECT(0x49ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0353
        gbc.setState(0x109e, 0x88c, 0x6e80, 0x61b3, 0x1dee, 0x8e3b, 0x0, 0x1);
        gbc.writeMem(0x109e, { 0x10 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x88c, gbc.sp());
        EXPECT(0x109f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0354
        gbc.setState(0xab58, 0xdcce, 0x3630, 0x439b, 0x7d23, 0xa16c, 0x0, 0x0);
        gbc.writeMem(0xab58, { 0x10 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdcce, gbc.sp());
        EXPECT(0xab59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xab58));
        // 10 0355
        gbc.setState(0x4f57, 0xe66c, 0xf50, 0xa8ad, 0x3f2d, 0x4765, 0x0, 0x0);
        gbc.writeMem(0x4f57, { 0x10 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe66c, gbc.sp());
        EXPECT(0x4f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0356
        gbc.setState(0x826, 0xefbe, 0x540, 0xa65b, 0x9cea, 0x43b8, 0x1, 0x0);
        gbc.writeMem(0x826, { 0x10 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xefbe, gbc.sp());
        EXPECT(0x827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0357
        gbc.setState(0xef21, 0xcbf9, 0x2af0, 0xc277, 0xf485, 0xae0b, 0x0, 0x1);
        gbc.writeMem(0xef21, { 0x10 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcbf9, gbc.sp());
        EXPECT(0xef22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xef21));
        // 10 0359
        gbc.setState(0x78ad, 0x9081, 0xd10, 0xdb52, 0xc909, 0xe0d0, 0x1, 0x1);
        gbc.writeMem(0x78ad, { 0x10 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9081, gbc.sp());
        EXPECT(0x78ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 035A
        gbc.setState(0xd981, 0x3a97, 0xa460, 0xd202, 0x5453, 0x7570, 0x0, 0x0);
        gbc.writeMem(0xd981, { 0x10 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3a97, gbc.sp());
        EXPECT(0xd982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd981));
        // 10 035B
        gbc.setState(0x87ee, 0x6bb0, 0x90b0, 0x2dbb, 0xf20a, 0x24d5, 0x1, 0x0);
        gbc.writeMem(0x87ee, { 0x10 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6bb0, gbc.sp());
        EXPECT(0x87ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x87ee));
        // 10 035D
        gbc.setState(0x8f4d, 0x8839, 0xc2f0, 0xb6e8, 0xe88, 0x104a, 0x1, 0x1);
        gbc.writeMem(0x8f4d, { 0x10 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8839, gbc.sp());
        EXPECT(0x8f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8f4d));
        // 10 035E
        gbc.setState(0x44b6, 0xd0cf, 0x3d20, 0x92c4, 0x9b3c, 0x22a3, 0x1, 0x1);
        gbc.writeMem(0x44b6, { 0x10 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd0cf, gbc.sp());
        EXPECT(0x44b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 035F
        gbc.setState(0x973c, 0x414, 0x58c0, 0xd1f8, 0xb30d, 0x61e0, 0x1, 0x1);
        gbc.writeMem(0x973c, { 0x10 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x414, gbc.sp());
        EXPECT(0x973d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x973c));
        // 10 0360
        gbc.setState(0x7796, 0xe738, 0x2800, 0x4ece, 0x1cd7, 0xa0ec, 0x0, 0x1);
        gbc.writeMem(0x7796, { 0x10 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe738, gbc.sp());
        EXPECT(0x7797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0361
        gbc.setState(0x9ad9, 0xee2, 0x1df0, 0x150c, 0x57ef, 0x4cf4, 0x1, 0x0);
        gbc.writeMem(0x9ad9, { 0x10 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xee2, gbc.sp());
        EXPECT(0x9ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9ad9));
        // 10 0362
        gbc.setState(0xcc87, 0xa62a, 0x8940, 0xb2a9, 0xc764, 0xf552, 0x1, 0x0);
        gbc.writeMem(0xcc87, { 0x10 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa62a, gbc.sp());
        EXPECT(0xcc88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcc87));
        // 10 0363
        gbc.setState(0x45de, 0x58e3, 0xe740, 0x89a6, 0xae81, 0x4b98, 0x1, 0x1);
        gbc.writeMem(0x45de, { 0x10 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x58e3, gbc.sp());
        EXPECT(0x45df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0365
        gbc.setState(0x7fe1, 0x50c8, 0x7200, 0xcf52, 0x2de1, 0xf32d, 0x0, 0x0);
        gbc.writeMem(0x7fe1, { 0x10 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x50c8, gbc.sp());
        EXPECT(0x7fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0366
        gbc.setState(0x148, 0xb384, 0x5c40, 0x7003, 0x2869, 0x3804, 0x0, 0x0);
        gbc.writeMem(0x148, { 0x10 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb384, gbc.sp());
        EXPECT(0x149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0367
        gbc.setState(0x675d, 0x7a74, 0x86f0, 0x5b1e, 0xd8e1, 0xdf40, 0x1, 0x0);
        gbc.writeMem(0x675d, { 0x10 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7a74, gbc.sp());
        EXPECT(0x675e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0368
        gbc.setState(0xe44b, 0xeef, 0xf10, 0x4d7c, 0x1148, 0xe321, 0x1, 0x1);
        gbc.writeMem(0xe44b, { 0x10 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xeef, gbc.sp());
        EXPECT(0xe44c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe44b));
        // 10 0369
        gbc.setState(0xd0fd, 0x273c, 0x8540, 0xdad9, 0x5b49, 0x831e, 0x1, 0x1);
        gbc.writeMem(0xd0fd, { 0x10 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x273c, gbc.sp());
        EXPECT(0xd0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd0fd));
        // 10 036A
        gbc.setState(0x5237, 0x450c, 0x56a0, 0x631f, 0xf198, 0xed9a, 0x0, 0x1);
        gbc.writeMem(0x5237, { 0x10 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x450c, gbc.sp());
        EXPECT(0x5238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 036B
        gbc.setState(0x5ba6, 0x845a, 0xd930, 0x163, 0xf5f7, 0xd5aa, 0x1, 0x0);
        gbc.writeMem(0x5ba6, { 0x10 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x845a, gbc.sp());
        EXPECT(0x5ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 036D
        gbc.setState(0xd79f, 0xca78, 0x97b0, 0xd266, 0xaccb, 0x5fdf, 0x0, 0x0);
        gbc.writeMem(0xd79f, { 0x10 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xca78, gbc.sp());
        EXPECT(0xd7a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd79f));
        // 10 036E
        gbc.setState(0x399c, 0x7a4b, 0x6a00, 0x189a, 0x1993, 0x36db, 0x1, 0x0);
        gbc.writeMem(0x399c, { 0x10 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7a4b, gbc.sp());
        EXPECT(0x399d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 036F
        gbc.setState(0xa185, 0xad85, 0x3410, 0x76ef, 0xb95c, 0x21a0, 0x0, 0x0);
        gbc.writeMem(0xa185, { 0x10 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xad85, gbc.sp());
        EXPECT(0xa186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa185));
        // 10 0370
        gbc.setState(0xc077, 0x1fd5, 0x2480, 0xcb59, 0xaee0, 0x5c6d, 0x0, 0x1);
        gbc.writeMem(0xc077, { 0x10 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1fd5, gbc.sp());
        EXPECT(0xc078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc077));
        // 10 0371
        gbc.setState(0xde07, 0x7c46, 0xf510, 0xd908, 0xf8b9, 0x7c92, 0x1, 0x0);
        gbc.writeMem(0xde07, { 0x10 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7c46, gbc.sp());
        EXPECT(0xde08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xde07));
        // 10 0372
        gbc.setState(0x6b80, 0xacf7, 0x2aa0, 0x53f8, 0x4b32, 0x4577, 0x1, 0x1);
        gbc.writeMem(0x6b80, { 0x10 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xacf7, gbc.sp());
        EXPECT(0x6b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0373
        gbc.setState(0x894b, 0xcc81, 0x4000, 0x5318, 0x41d8, 0x30a0, 0x1, 0x0);
        gbc.writeMem(0x894b, { 0x10 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcc81, gbc.sp());
        EXPECT(0x894c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x894b));
        // 10 0374
        gbc.setState(0x1d24, 0x36f6, 0x9530, 0x1af7, 0xcabd, 0x4cf6, 0x0, 0x1);
        gbc.writeMem(0x1d24, { 0x10 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x36f6, gbc.sp());
        EXPECT(0x1d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0375
        gbc.setState(0x47a8, 0x80c5, 0x7d30, 0x85a6, 0xdac1, 0x21b3, 0x1, 0x0);
        gbc.writeMem(0x47a8, { 0x10 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x80c5, gbc.sp());
        EXPECT(0x47a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0376
        gbc.setState(0xe5c, 0x14af, 0x3640, 0x17b1, 0xcc76, 0xd214, 0x1, 0x0);
        gbc.writeMem(0xe5c, { 0x10 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x14af, gbc.sp());
        EXPECT(0xe5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0377
        gbc.setState(0x5ed2, 0xb543, 0x39d0, 0x8c9f, 0x3bfa, 0x20d8, 0x0, 0x0);
        gbc.writeMem(0x5ed2, { 0x10 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb543, gbc.sp());
        EXPECT(0x5ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0378
        gbc.setState(0x8546, 0xa9eb, 0x3bf0, 0x98db, 0x5b01, 0x92b0, 0x1, 0x0);
        gbc.writeMem(0x8546, { 0x10 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa9eb, gbc.sp());
        EXPECT(0x8547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8546));
        // 10 0379
        gbc.setState(0x9cd4, 0x9b1b, 0x6b10, 0xb655, 0xd0c1, 0x69bd, 0x0, 0x0);
        gbc.writeMem(0x9cd4, { 0x10 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9b1b, gbc.sp());
        EXPECT(0x9cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9cd4));
        // 10 037A
        gbc.setState(0x18a2, 0xac11, 0xc500, 0x406e, 0x74b3, 0x37b4, 0x0, 0x1);
        gbc.writeMem(0x18a2, { 0x10 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xac11, gbc.sp());
        EXPECT(0x18a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 037B
        gbc.setState(0xa77d, 0x1fa0, 0x4790, 0x85a0, 0xfc7a, 0x19fd, 0x1, 0x1);
        gbc.writeMem(0xa77d, { 0x10 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1fa0, gbc.sp());
        EXPECT(0xa77e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa77d));
        // 10 037C
        gbc.setState(0xa3a5, 0xd499, 0x6c80, 0x81c4, 0x4a34, 0xc1d, 0x0, 0x1);
        gbc.writeMem(0xa3a5, { 0x10 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd499, gbc.sp());
        EXPECT(0xa3a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa3a5));
        // 10 037D
        gbc.setState(0x422a, 0xcf1f, 0x24b0, 0x5e78, 0x6e55, 0x6aab, 0x0, 0x0);
        gbc.writeMem(0x422a, { 0x10 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcf1f, gbc.sp());
        EXPECT(0x422b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 037E
        gbc.setState(0xaf4, 0x5c2a, 0xb720, 0x9749, 0x179a, 0x86bc, 0x1, 0x0);
        gbc.writeMem(0xaf4, { 0x10 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5c2a, gbc.sp());
        EXPECT(0xaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 037F
        gbc.setState(0x5a00, 0xf6a3, 0x94f0, 0x9c76, 0xa12b, 0xec4c, 0x1, 0x1);
        gbc.writeMem(0x5a00, { 0x10 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf6a3, gbc.sp());
        EXPECT(0x5a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0380
        gbc.setState(0xbc7f, 0x7fcc, 0xb8a0, 0xb5d, 0xd622, 0xe4c4, 0x0, 0x1);
        gbc.writeMem(0xbc7f, { 0x10 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7fcc, gbc.sp());
        EXPECT(0xbc80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbc7f));
        // 10 0381
        gbc.setState(0x343, 0x8d52, 0x20e0, 0xfa8e, 0x4d9e, 0x6702, 0x0, 0x1);
        gbc.writeMem(0x343, { 0x10 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8d52, gbc.sp());
        EXPECT(0x344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0383
        gbc.setState(0x1aa2, 0xdd58, 0x8e50, 0x6c37, 0xf16a, 0x7a45, 0x0, 0x1);
        gbc.writeMem(0x1aa2, { 0x10 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdd58, gbc.sp());
        EXPECT(0x1aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0386
        gbc.setState(0x96, 0x7d6d, 0x2d50, 0x696e, 0xff07, 0x10d1, 0x1, 0x1);
        gbc.writeMem(0x96, { 0x10 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7d6d, gbc.sp());
        EXPECT(0x97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0387
        gbc.setState(0x24f3, 0xa967, 0xddd0, 0x72d1, 0x64ef, 0xca23, 0x0, 0x1);
        gbc.writeMem(0x24f3, { 0x10 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa967, gbc.sp());
        EXPECT(0x24f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0388
        gbc.setState(0x7270, 0x4ff1, 0x7550, 0xb515, 0x63ce, 0xa73b, 0x1, 0x1);
        gbc.writeMem(0x7270, { 0x10 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4ff1, gbc.sp());
        EXPECT(0x7271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0389
        gbc.setState(0x2a76, 0xde4c, 0x5230, 0x8d74, 0xdedb, 0x7fe5, 0x1, 0x1);
        gbc.writeMem(0x2a76, { 0x10 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xde4c, gbc.sp());
        EXPECT(0x2a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 038A
        gbc.setState(0xef6b, 0x83cf, 0x8b30, 0x7fd4, 0xa663, 0x8c58, 0x0, 0x0);
        gbc.writeMem(0xef6b, { 0x10 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x83cf, gbc.sp());
        EXPECT(0xef6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xef6b));
        // 10 038C
        gbc.setState(0xe429, 0xcd15, 0x2560, 0x3595, 0x104b, 0x2167, 0x0, 0x1);
        gbc.writeMem(0xe429, { 0x10 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcd15, gbc.sp());
        EXPECT(0xe42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe429));
        // 10 038D
        gbc.setState(0x62ad, 0xba52, 0xa770, 0x16d8, 0xbcc3, 0x55c6, 0x1, 0x0);
        gbc.writeMem(0x62ad, { 0x10 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xba52, gbc.sp());
        EXPECT(0x62ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 038E
        gbc.setState(0xc366, 0x52bf, 0x3880, 0x2983, 0x86b8, 0x5a5a, 0x0, 0x0);
        gbc.writeMem(0xc366, { 0x10 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x52bf, gbc.sp());
        EXPECT(0xc367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc366));
        // 10 038F
        gbc.setState(0x8cfa, 0x7b4b, 0xeb10, 0x9d2e, 0x179d, 0xc28f, 0x1, 0x0);
        gbc.writeMem(0x8cfa, { 0x10 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7b4b, gbc.sp());
        EXPECT(0x8cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8cfa));
        // 10 0391
        gbc.setState(0x7e41, 0x8561, 0xe590, 0x86cb, 0x59db, 0xe740, 0x0, 0x0);
        gbc.writeMem(0x7e41, { 0x10 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8561, gbc.sp());
        EXPECT(0x7e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 0392
        gbc.setState(0xcfcd, 0x48c, 0xdd80, 0xd18e, 0x2be6, 0x426f, 0x0, 0x0);
        gbc.writeMem(0xcfcd, { 0x10 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x48c, gbc.sp());
        EXPECT(0xcfce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcfcd));
        // 10 0393
        gbc.setState(0x58bb, 0xb065, 0x7500, 0x698e, 0x6d3, 0xb874, 0x1, 0x1);
        gbc.writeMem(0x58bb, { 0x10 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb065, gbc.sp());
        EXPECT(0x58bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0394
        gbc.setState(0xe84d, 0x317b, 0x6730, 0x3fe, 0x58dc, 0xb324, 0x1, 0x1);
        gbc.writeMem(0xe84d, { 0x10 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x317b, gbc.sp());
        EXPECT(0xe84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe84d));
        // 10 0395
        gbc.setState(0xada1, 0xbbd2, 0x6940, 0x3682, 0x5c1f, 0x3c45, 0x0, 0x1);
        gbc.writeMem(0xada1, { 0x10 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbbd2, gbc.sp());
        EXPECT(0xada2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xada1));
        // 10 0396
        gbc.setState(0xeb9c, 0x2ef8, 0xe870, 0x8bcf, 0x592c, 0x45fd, 0x1, 0x1);
        gbc.writeMem(0xeb9c, { 0x10 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2ef8, gbc.sp());
        EXPECT(0xeb9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xeb9c));
        // 10 0397
        gbc.setState(0xeb4d, 0x6b9b, 0xaef0, 0xd440, 0x3fbb, 0xa841, 0x0, 0x1);
        gbc.writeMem(0xeb4d, { 0x10 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6b9b, gbc.sp());
        EXPECT(0xeb4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xeb4d));
        // 10 0398
        gbc.setState(0x4d16, 0x55b, 0x1480, 0xbf3a, 0xb4e5, 0x78d8, 0x0, 0x1);
        gbc.writeMem(0x4d16, { 0x10 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x55b, gbc.sp());
        EXPECT(0x4d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 0399
        gbc.setState(0xc0bc, 0x3597, 0x9e30, 0xbf8b, 0x9998, 0x8979, 0x1, 0x1);
        gbc.writeMem(0xc0bc, { 0x10 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3597, gbc.sp());
        EXPECT(0xc0bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc0bc));
        // 10 039A
        gbc.setState(0x295, 0x2fc7, 0x9d10, 0x9574, 0x1961, 0xe837, 0x0, 0x0);
        gbc.writeMem(0x295, { 0x10 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2fc7, gbc.sp());
        EXPECT(0x296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 039B
        gbc.setState(0xdd14, 0x7d5b, 0x6e30, 0x921, 0x6505, 0xbb8d, 0x0, 0x0);
        gbc.writeMem(0xdd14, { 0x10 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7d5b, gbc.sp());
        EXPECT(0xdd15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdd14));
        // 10 039C
        gbc.setState(0xdafc, 0x9bfa, 0x35b0, 0x5a9f, 0xd212, 0xdea8, 0x1, 0x0);
        gbc.writeMem(0xdafc, { 0x10 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9bfa, gbc.sp());
        EXPECT(0xdafd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdafc));
        // 10 039D
        gbc.setState(0x1e3d, 0x7d98, 0x1cf0, 0xf985, 0xd940, 0x4ed0, 0x0, 0x1);
        gbc.writeMem(0x1e3d, { 0x10 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7d98, gbc.sp());
        EXPECT(0x1e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 039E
        gbc.setState(0x360c, 0x6718, 0xd460, 0x5b21, 0xf326, 0x1bda, 0x0, 0x1);
        gbc.writeMem(0x360c, { 0x10 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6718, gbc.sp());
        EXPECT(0x360d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 039F
        gbc.setState(0x9a7d, 0x4a74, 0x4540, 0xcf90, 0x49c6, 0xd64c, 0x0, 0x0);
        gbc.writeMem(0x9a7d, { 0x10 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4a74, gbc.sp());
        EXPECT(0x9a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9a7d));
        // 10 03A0
        gbc.setState(0x80f, 0xdf71, 0x1c70, 0x7a03, 0x83e6, 0x6f32, 0x1, 0x1);
        gbc.writeMem(0x80f, { 0x10 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdf71, gbc.sp());
        EXPECT(0x810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03A3
        gbc.setState(0xbcdf, 0x1397, 0x7ae0, 0x97a0, 0xe6d6, 0x562f, 0x1, 0x1);
        gbc.writeMem(0xbcdf, { 0x10 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1397, gbc.sp());
        EXPECT(0xbce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbcdf));
        // 10 03A4
        gbc.setState(0xcb32, 0x3ba, 0xdd50, 0x73a6, 0x8ed4, 0x894b, 0x1, 0x0);
        gbc.writeMem(0xcb32, { 0x10 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3ba, gbc.sp());
        EXPECT(0xcb33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcb32));
        // 10 03A5
        gbc.setState(0x4b59, 0x5bca, 0x6b90, 0x7bc4, 0xbbf0, 0xa44a, 0x1, 0x0);
        gbc.writeMem(0x4b59, { 0x10 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5bca, gbc.sp());
        EXPECT(0x4b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03A7
        gbc.setState(0xce7d, 0x87b5, 0x8340, 0x4b30, 0xf228, 0x30cd, 0x0, 0x1);
        gbc.writeMem(0xce7d, { 0x10 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x87b5, gbc.sp());
        EXPECT(0xce7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xce7d));
        // 10 03A8
        gbc.setState(0xa9ea, 0x2ab, 0xa3d0, 0xcf4c, 0xbee5, 0x84fe, 0x0, 0x1);
        gbc.writeMem(0xa9ea, { 0x10 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2ab, gbc.sp());
        EXPECT(0xa9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa9ea));
        // 10 03A9
        gbc.setState(0xe379, 0xeba7, 0x7d60, 0x244d, 0xa05c, 0xac03, 0x1, 0x1);
        gbc.writeMem(0xe379, { 0x10 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xeba7, gbc.sp());
        EXPECT(0xe37a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe379));
        // 10 03AA
        gbc.setState(0x2c99, 0xcb4f, 0xcbb0, 0x96dd, 0x7265, 0x1824, 0x0, 0x0);
        gbc.writeMem(0x2c99, { 0x10 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcb4f, gbc.sp());
        EXPECT(0x2c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03AB
        gbc.setState(0xdea2, 0xcc79, 0x1ad0, 0xc725, 0x1f28, 0x35d8, 0x1, 0x0);
        gbc.writeMem(0xdea2, { 0x10 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcc79, gbc.sp());
        EXPECT(0xdea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdea2));
        // 10 03AC
        gbc.setState(0x3b2c, 0x6432, 0xb220, 0x967b, 0x4531, 0x845d, 0x1, 0x1);
        gbc.writeMem(0x3b2c, { 0x10 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6432, gbc.sp());
        EXPECT(0x3b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 03AD
        gbc.setState(0xa299, 0x9d69, 0x4880, 0xa60b, 0x80dc, 0xff6a, 0x0, 0x1);
        gbc.writeMem(0xa299, { 0x10 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9d69, gbc.sp());
        EXPECT(0xa29a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa299));
        // 10 03AE
        gbc.setState(0xddbe, 0x411a, 0x62a0, 0xc2e6, 0x636b, 0xd94a, 0x1, 0x1);
        gbc.writeMem(0xddbe, { 0x10 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x411a, gbc.sp());
        EXPECT(0xddbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xddbe));
        // 10 03AF
        gbc.setState(0x1ce1, 0xa5b7, 0x82f0, 0xd330, 0xb1b7, 0x9713, 0x0, 0x1);
        gbc.writeMem(0x1ce1, { 0x10 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa5b7, gbc.sp());
        EXPECT(0x1ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03B0
        gbc.setState(0xc6ed, 0xdc2b, 0x31b0, 0xf896, 0xa23e, 0xc89c, 0x0, 0x1);
        gbc.writeMem(0xc6ed, { 0x10 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdc2b, gbc.sp());
        EXPECT(0xc6ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc6ed));
        // 10 03B1
        gbc.setState(0x32bb, 0x4146, 0xbd60, 0xc705, 0x465c, 0xc88, 0x1, 0x0);
        gbc.writeMem(0x32bb, { 0x10 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4146, gbc.sp());
        EXPECT(0x32bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 03B2
        gbc.setState(0x6b8f, 0xcdfd, 0x3fe0, 0x1a26, 0x7315, 0xb259, 0x1, 0x1);
        gbc.writeMem(0x6b8f, { 0x10 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcdfd, gbc.sp());
        EXPECT(0x6b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 03B3
        gbc.setState(0x6c75, 0xe066, 0xe740, 0x6c95, 0xcbf8, 0x6c9e, 0x1, 0x1);
        gbc.writeMem(0x6c75, { 0x10 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe066, gbc.sp());
        EXPECT(0x6c76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 03B4
        gbc.setState(0x1ec3, 0x27b8, 0x1490, 0xd3e0, 0x2739, 0xe500, 0x0, 0x1);
        gbc.writeMem(0x1ec3, { 0x10 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x27b8, gbc.sp());
        EXPECT(0x1ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03B5
        gbc.setState(0x3319, 0x9a06, 0x8c10, 0xc520, 0xeb79, 0x4c09, 0x1, 0x1);
        gbc.writeMem(0x3319, { 0x10 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9a06, gbc.sp());
        EXPECT(0x331a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03B6
        gbc.setState(0x8af2, 0x7ab0, 0x9c10, 0x5e96, 0x684, 0x109b, 0x0, 0x0);
        gbc.writeMem(0x8af2, { 0x10 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7ab0, gbc.sp());
        EXPECT(0x8af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8af2));
        // 10 03B7
        gbc.setState(0xae17, 0xae2, 0xbed0, 0xaaad, 0xad7a, 0x14cd, 0x0, 0x0);
        gbc.writeMem(0xae17, { 0x10 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xae2, gbc.sp());
        EXPECT(0xae18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xae17));
        // 10 03B8
        gbc.setState(0xdcf1, 0x20af, 0x94a0, 0xa27a, 0x2bb8, 0x23c2, 0x0, 0x0);
        gbc.writeMem(0xdcf1, { 0x10 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x20af, gbc.sp());
        EXPECT(0xdcf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xdcf1));
        // 10 03B9
        gbc.setState(0xa18a, 0x51dc, 0xcf30, 0x5db7, 0x1470, 0x1f39, 0x1, 0x0);
        gbc.writeMem(0xa18a, { 0x10 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x51dc, gbc.sp());
        EXPECT(0xa18b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa18a));
        // 10 03BA
        gbc.setState(0x2301, 0x4646, 0xee90, 0xa86e, 0xce4a, 0x61a8, 0x0, 0x0);
        gbc.writeMem(0x2301, { 0x10 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4646, gbc.sp());
        EXPECT(0x2302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03BB
        gbc.setState(0xd3f9, 0x24d5, 0xd80, 0xd65f, 0x50fd, 0xfb9f, 0x1, 0x1);
        gbc.writeMem(0xd3f9, { 0x10 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x24d5, gbc.sp());
        EXPECT(0xd3fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd3f9));
        // 10 03BC
        gbc.setState(0x7b39, 0x3952, 0x7b80, 0x40d, 0x5c9e, 0xd71b, 0x0, 0x1);
        gbc.writeMem(0x7b39, { 0x10 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3952, gbc.sp());
        EXPECT(0x7b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 03BD
        gbc.setState(0x629e, 0x3030, 0x15b0, 0x3e8c, 0xa537, 0xd065, 0x0, 0x1);
        gbc.writeMem(0x629e, { 0x10 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3030, gbc.sp());
        EXPECT(0x629f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03BE
        gbc.setState(0x6779, 0xebce, 0x24f0, 0xc83a, 0x8843, 0x5ccb, 0x0, 0x1);
        gbc.writeMem(0x6779, { 0x10 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xebce, gbc.sp());
        EXPECT(0x677a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03BF
        gbc.setState(0x3b6f, 0xa8b2, 0xf320, 0x9809, 0x1b2e, 0x95ea, 0x0, 0x1);
        gbc.writeMem(0x3b6f, { 0x10 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa8b2, gbc.sp());
        EXPECT(0x3b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 03C0
        gbc.setState(0xa38f, 0xedae, 0xdb00, 0x1b86, 0x1917, 0xdb3b, 0x0, 0x0);
        gbc.writeMem(0xa38f, { 0x10 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xedae, gbc.sp());
        EXPECT(0xa390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa38f));
        // 10 03C1
        gbc.setState(0x80ff, 0xf977, 0xb20, 0x3f53, 0x296a, 0x1ab7, 0x1, 0x0);
        gbc.writeMem(0x80ff, { 0x10 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf977, gbc.sp());
        EXPECT(0x8100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x80ff));
        // 10 03C2
        gbc.setState(0x13e2, 0xe3, 0xa5c0, 0x3e28, 0x6290, 0xf116, 0x0, 0x0);
        gbc.writeMem(0x13e2, { 0x10 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe3, gbc.sp());
        EXPECT(0x13e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 03C4
        gbc.setState(0x9ef5, 0x3937, 0xa640, 0xefa6, 0xf993, 0x496d, 0x1, 0x0);
        gbc.writeMem(0x9ef5, { 0x10 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3937, gbc.sp());
        EXPECT(0x9ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9ef5));
        // 10 03C5
        gbc.setState(0xc8f4, 0xc5dd, 0x7110, 0x642a, 0x4d6a, 0x25d, 0x0, 0x1);
        gbc.writeMem(0xc8f4, { 0x10 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc5dd, gbc.sp());
        EXPECT(0xc8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc8f4));
        // 10 03C6
        gbc.setState(0x6814, 0x9278, 0xd510, 0x611d, 0xd210, 0x66e2, 0x1, 0x1);
        gbc.writeMem(0x6814, { 0x10 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9278, gbc.sp());
        EXPECT(0x6815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03C7
        gbc.setState(0x65b, 0x5521, 0x88e0, 0xc4a3, 0x73d5, 0x21, 0x1, 0x0);
        gbc.writeMem(0x65b, { 0x10 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5521, gbc.sp());
        EXPECT(0x65c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 03C8
        gbc.setState(0x4a11, 0xe04f, 0x1760, 0xa441, 0xc368, 0x6ba9, 0x0, 0x1);
        gbc.writeMem(0x4a11, { 0x10 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe04f, gbc.sp());
        EXPECT(0x4a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 03C9
        gbc.setState(0xba9f, 0x2eca, 0x4cd0, 0xe6e0, 0x15ff, 0xf82e, 0x0, 0x1);
        gbc.writeMem(0xba9f, { 0x10 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2eca, gbc.sp());
        EXPECT(0xbaa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xba9f));
        // 10 03CA
        gbc.setState(0xb3f2, 0x6969, 0x3960, 0x3b54, 0xe574, 0x1b1e, 0x0, 0x0);
        gbc.writeMem(0xb3f2, { 0x10 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6969, gbc.sp());
        EXPECT(0xb3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb3f2));
        // 10 03CB
        gbc.setState(0x1dc1, 0x526f, 0x6b60, 0xfa48, 0x1b9c, 0xab17, 0x1, 0x0);
        gbc.writeMem(0x1dc1, { 0x10 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x526f, gbc.sp());
        EXPECT(0x1dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 03CC
        gbc.setState(0xd61, 0x1e59, 0xde40, 0xc546, 0x9670, 0xdc82, 0x0, 0x0);
        gbc.writeMem(0xd61, { 0x10 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1e59, gbc.sp());
        EXPECT(0xd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 03CD
        gbc.setState(0x8474, 0x66ea, 0x970, 0xb0fa, 0x6004, 0x4e32, 0x1, 0x0);
        gbc.writeMem(0x8474, { 0x10 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x66ea, gbc.sp());
        EXPECT(0x8475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8474));
        // 10 03CE
        gbc.setState(0x68c3, 0x8105, 0xfdc0, 0xe4eb, 0x8e98, 0x1799, 0x1, 0x1);
        gbc.writeMem(0x68c3, { 0x10 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8105, gbc.sp());
        EXPECT(0x68c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 03D0
        gbc.setState(0xe394, 0x44c9, 0x8770, 0x2419, 0x5b6a, 0xd7a9, 0x1, 0x1);
        gbc.writeMem(0xe394, { 0x10 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x44c9, gbc.sp());
        EXPECT(0xe395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe394));
        // 10 03D1
        gbc.setState(0x6310, 0x8912, 0x3cd0, 0x6b2, 0x751f, 0x87d8, 0x0, 0x1);
        gbc.writeMem(0x6310, { 0x10 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8912, gbc.sp());
        EXPECT(0x6311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03D2
        gbc.setState(0x4559, 0xa89, 0xf2b0, 0xab99, 0x4f4b, 0x7c45, 0x1, 0x1);
        gbc.writeMem(0x4559, { 0x10 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa89, gbc.sp());
        EXPECT(0x455a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03D3
        gbc.setState(0xa5d8, 0xe1d9, 0x6e50, 0xa1a0, 0xd5ae, 0xefaf, 0x0, 0x1);
        gbc.writeMem(0xa5d8, { 0x10 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe1d9, gbc.sp());
        EXPECT(0xa5d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa5d8));
        // 10 03D4
        gbc.setState(0x9df7, 0x845e, 0x9f00, 0x9c8c, 0x6a89, 0x1811, 0x1, 0x0);
        gbc.writeMem(0x9df7, { 0x10 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x845e, gbc.sp());
        EXPECT(0x9df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9df7));
        // 10 03D5
        gbc.setState(0x8173, 0x4c2e, 0x64c0, 0x7887, 0xac34, 0x83a, 0x0, 0x0);
        gbc.writeMem(0x8173, { 0x10 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4c2e, gbc.sp());
        EXPECT(0x8174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8173));
        // 10 03D6
        gbc.setState(0xb51e, 0x468a, 0x1ab0, 0x7b52, 0xf7f8, 0xad7b, 0x1, 0x1);
        gbc.writeMem(0xb51e, { 0x10 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x468a, gbc.sp());
        EXPECT(0xb51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb51e));
        // 10 03D7
        gbc.setState(0x173d, 0x63a2, 0xf070, 0x716f, 0xf790, 0x92f7, 0x0, 0x1);
        gbc.writeMem(0x173d, { 0x10 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x63a2, gbc.sp());
        EXPECT(0x173e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03D8
        gbc.setState(0xe8c6, 0xdf24, 0x9dc0, 0xa9de, 0xa74c, 0xb6f9, 0x1, 0x0);
        gbc.writeMem(0xe8c6, { 0x10 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdf24, gbc.sp());
        EXPECT(0xe8c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe8c6));
        // 10 03D9
        gbc.setState(0xcb67, 0xd879, 0x9c20, 0xa0fb, 0xab10, 0x1735, 0x1, 0x1);
        gbc.writeMem(0xcb67, { 0x10 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd879, gbc.sp());
        EXPECT(0xcb68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcb67));
        // 10 03DB
        gbc.setState(0xd9aa, 0xf05b, 0xe9a0, 0x2004, 0xb647, 0xc724, 0x0, 0x0);
        gbc.writeMem(0xd9aa, { 0x10 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf05b, gbc.sp());
        EXPECT(0xd9ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd9aa));
        // 10 03DC
        gbc.setState(0x1b5b, 0xfb67, 0x9af0, 0x9b00, 0xd12b, 0x6cca, 0x1, 0x0);
        gbc.writeMem(0x1b5b, { 0x10 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfb67, gbc.sp());
        EXPECT(0x1b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03DD
        gbc.setState(0x1409, 0x47d4, 0x1c50, 0xf47b, 0x1502, 0xede, 0x0, 0x0);
        gbc.writeMem(0x1409, { 0x10 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x47d4, gbc.sp());
        EXPECT(0x140a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03DE
        gbc.setState(0x88dc, 0x1450, 0x1e90, 0x2f7c, 0x8ab6, 0x6c83, 0x1, 0x1);
        gbc.writeMem(0x88dc, { 0x10 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1450, gbc.sp());
        EXPECT(0x88dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x88dc));
        // 10 03DF
        gbc.setState(0x279e, 0xba01, 0xeeb0, 0x7135, 0xaab0, 0x5d92, 0x0, 0x1);
        gbc.writeMem(0x279e, { 0x10 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xba01, gbc.sp());
        EXPECT(0x279f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03E1
        gbc.setState(0xe3fe, 0x855b, 0x3150, 0x586b, 0xba6d, 0xd832, 0x0, 0x1);
        gbc.writeMem(0xe3fe, { 0x10 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x855b, gbc.sp());
        EXPECT(0xe3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe3fe));
        // 10 03E2
        gbc.setState(0x3ee7, 0x39dd, 0x9000, 0xf1a7, 0x9891, 0x3118, 0x0, 0x1);
        gbc.writeMem(0x3ee7, { 0x10 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x39dd, gbc.sp());
        EXPECT(0x3ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 03E3
        gbc.setState(0x2b38, 0xe795, 0x550, 0x46c4, 0x5c7f, 0xc03c, 0x0, 0x0);
        gbc.writeMem(0x2b38, { 0x10 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe795, gbc.sp());
        EXPECT(0x2b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03E4
        gbc.setState(0xca0, 0x945, 0xece0, 0x6961, 0x30d8, 0xca24, 0x1, 0x1);
        gbc.writeMem(0xca0, { 0x10 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x945, gbc.sp());
        EXPECT(0xca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 10 03E5
        gbc.setState(0x6f7a, 0x4668, 0xe030, 0x165d, 0x428a, 0x2367, 0x1, 0x0);
        gbc.writeMem(0x6f7a, { 0x10 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4668, gbc.sp());
        EXPECT(0x6f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 10 03E6
        gbc.setState(0x9669, 0xa6f3, 0xa6f0, 0xb44a, 0x66c, 0xe9c3, 0x0, 0x0);
        gbc.writeMem(0x9669, { 0x10 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa6f3, gbc.sp());
        EXPECT(0x966a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9669));
        // 10 03E7
        gbc.setState(0xcb02, 0x3fe6, 0x8090, 0xcac0, 0xc0f6, 0xadb9, 0x1, 0x0);
        gbc.writeMem(0xcb02, { 0x10 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3fe6, gbc.sp());
        EXPECT(0xcb03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcb02));
    }
