    TEST(gbcemu, opcode_cb_cb) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB CB 0000
        gbc.setState(0x421d, 0xbdff, 0xcd90, 0xd361, 0x5d84, 0xde7c, 0x0, 0x0);
        gbc.writeMem(0x421d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbdff, gbc.sp());
        EXPECT(0x421f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0001
        gbc.setState(0x6f96, 0x5584, 0x35a0, 0x2750, 0xb0ff, 0x3c4f, 0x1, 0x0);
        gbc.writeMem(0x6f96, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5584, gbc.sp());
        EXPECT(0x6f98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0002
        gbc.setState(0x6c52, 0x5654, 0x86c0, 0x8756, 0xd49d, 0xaa2a, 0x0, 0x1);
        gbc.writeMem(0x6c52, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5654, gbc.sp());
        EXPECT(0x6c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0003
        gbc.setState(0xd9fe, 0xb7db, 0xcb40, 0x6c4c, 0xc493, 0x5e4f, 0x1, 0x1);
        gbc.writeMem(0xd9fe, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb7db, gbc.sp());
        EXPECT(0xda00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9fe));
        EXPECT(0xcb, gbc.readMem(0xd9ff));
        // CB CB 0004
        gbc.setState(0x1f8e, 0x2ae6, 0x9180, 0xe7ce, 0x6967, 0x9ea6, 0x1, 0x0);
        gbc.writeMem(0x1f8e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2ae6, gbc.sp());
        EXPECT(0x1f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0006
        gbc.setState(0x198e, 0x4200, 0x9e80, 0x260, 0x6da2, 0xfbbd, 0x1, 0x0);
        gbc.writeMem(0x198e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4200, gbc.sp());
        EXPECT(0x1990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0007
        gbc.setState(0x8698, 0x2111, 0xa490, 0xfbbe, 0x4661, 0xeaff, 0x0, 0x1);
        gbc.writeMem(0x8698, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2111, gbc.sp());
        EXPECT(0x869a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8698));
        EXPECT(0xcb, gbc.readMem(0x8699));
        // CB CB 0008
        gbc.setState(0x5f4, 0x439a, 0x9840, 0x16e6, 0x3967, 0x2906, 0x1, 0x1);
        gbc.writeMem(0x5f4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x439a, gbc.sp());
        EXPECT(0x5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0009
        gbc.setState(0xc8f6, 0xb724, 0xbdb0, 0x9477, 0x4277, 0xc9e5, 0x1, 0x1);
        gbc.writeMem(0xc8f6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb724, gbc.sp());
        EXPECT(0xc8f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f6));
        EXPECT(0xcb, gbc.readMem(0xc8f7));
        // CB CB 000A
        gbc.setState(0x2a97, 0x45b, 0x64c0, 0xa792, 0xfc49, 0x85a6, 0x0, 0x0);
        gbc.writeMem(0x2a97, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x45b, gbc.sp());
        EXPECT(0x2a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 000B
        gbc.setState(0xd883, 0x4122, 0x55f0, 0xf7ab, 0x4534, 0xa07d, 0x0, 0x0);
        gbc.writeMem(0xd883, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4122, gbc.sp());
        EXPECT(0xd885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd883));
        EXPECT(0xcb, gbc.readMem(0xd884));
        // CB CB 000C
        gbc.setState(0x470d, 0x3115, 0xd3d0, 0x457c, 0x95b6, 0xa2c6, 0x0, 0x0);
        gbc.writeMem(0x470d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3115, gbc.sp());
        EXPECT(0x470f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 000D
        gbc.setState(0xbc97, 0xbe9f, 0x2aa0, 0xaa35, 0xc272, 0x84cb, 0x1, 0x0);
        gbc.writeMem(0xbc97, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbe9f, gbc.sp());
        EXPECT(0xbc99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc97));
        EXPECT(0xcb, gbc.readMem(0xbc98));
        // CB CB 000E
        gbc.setState(0xbde6, 0x659d, 0x4bc0, 0xe83, 0xc079, 0xd826, 0x1, 0x1);
        gbc.writeMem(0xbde6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x659d, gbc.sp());
        EXPECT(0xbde8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde6));
        EXPECT(0xcb, gbc.readMem(0xbde7));
        // CB CB 000F
        gbc.setState(0x4e54, 0x1e68, 0x280, 0x95cd, 0x5324, 0xec7b, 0x0, 0x1);
        gbc.writeMem(0x4e54, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1e68, gbc.sp());
        EXPECT(0x4e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0010
        gbc.setState(0x80d4, 0x2e16, 0x7360, 0x99e, 0xff0, 0xe0b0, 0x0, 0x1);
        gbc.writeMem(0x80d4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2e16, gbc.sp());
        EXPECT(0x80d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80d4));
        EXPECT(0xcb, gbc.readMem(0x80d5));
        // CB CB 0011
        gbc.setState(0x51e7, 0x3d9a, 0x22f0, 0xe9f5, 0xf4f7, 0x6c1d, 0x0, 0x1);
        gbc.writeMem(0x51e7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3d9a, gbc.sp());
        EXPECT(0x51e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0012
        gbc.setState(0x705, 0x8b37, 0xb220, 0x117, 0x23b1, 0xda7d, 0x1, 0x1);
        gbc.writeMem(0x705, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8b37, gbc.sp());
        EXPECT(0x707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0013
        gbc.setState(0x9705, 0xd063, 0xcf00, 0xb769, 0xefc3, 0xfb94, 0x1, 0x0);
        gbc.writeMem(0x9705, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd063, gbc.sp());
        EXPECT(0x9707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9705));
        EXPECT(0xcb, gbc.readMem(0x9706));
        // CB CB 0014
        gbc.setState(0x27dc, 0x604, 0x4ab0, 0x6926, 0xca63, 0x1187, 0x1, 0x1);
        gbc.writeMem(0x27dc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x604, gbc.sp());
        EXPECT(0x27de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0015
        gbc.setState(0x5ef3, 0x683, 0x5d0, 0x948b, 0xdda8, 0xbef8, 0x1, 0x0);
        gbc.writeMem(0x5ef3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x683, gbc.sp());
        EXPECT(0x5ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0016
        gbc.setState(0xea01, 0xb443, 0x8aa0, 0x246a, 0x50f8, 0x9753, 0x1, 0x1);
        gbc.writeMem(0xea01, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb443, gbc.sp());
        EXPECT(0xea03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea01));
        EXPECT(0xcb, gbc.readMem(0xea02));
        // CB CB 0017
        gbc.setState(0x8a1f, 0x6a25, 0x6100, 0x5c59, 0xad7d, 0x969b, 0x0, 0x1);
        gbc.writeMem(0x8a1f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6a25, gbc.sp());
        EXPECT(0x8a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1f));
        EXPECT(0xcb, gbc.readMem(0x8a20));
        // CB CB 0018
        gbc.setState(0x5f3, 0xfc58, 0x710, 0xf75e, 0x593e, 0x210f, 0x1, 0x1);
        gbc.writeMem(0x5f3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfc58, gbc.sp());
        EXPECT(0x5f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0019
        gbc.setState(0x5882, 0xd92, 0xcf40, 0x64e3, 0xfc63, 0xd895, 0x0, 0x0);
        gbc.writeMem(0x5882, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd92, gbc.sp());
        EXPECT(0x5884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 001A
        gbc.setState(0x973, 0x8e2d, 0x10f0, 0xf7e9, 0x8362, 0x8b9d, 0x0, 0x0);
        gbc.writeMem(0x973, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8e2d, gbc.sp());
        EXPECT(0x975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 001B
        gbc.setState(0x9fbf, 0xa90c, 0x9f20, 0x4577, 0x7f1e, 0x4fe1, 0x0, 0x0);
        gbc.writeMem(0x9fbf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa90c, gbc.sp());
        EXPECT(0x9fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fbf));
        EXPECT(0xcb, gbc.readMem(0x9fc0));
        // CB CB 001C
        gbc.setState(0xb512, 0x29ce, 0xf080, 0xc455, 0x9894, 0x32bb, 0x0, 0x1);
        gbc.writeMem(0xb512, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x29ce, gbc.sp());
        EXPECT(0xb514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb512));
        EXPECT(0xcb, gbc.readMem(0xb513));
        // CB CB 001D
        gbc.setState(0x3175, 0x351e, 0x33a0, 0x1cc4, 0xa7b6, 0xf1f5, 0x0, 0x1);
        gbc.writeMem(0x3175, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x351e, gbc.sp());
        EXPECT(0x3177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 001E
        gbc.setState(0x92dd, 0x2d38, 0x6ab0, 0x8b1d, 0xc715, 0xd05d, 0x0, 0x0);
        gbc.writeMem(0x92dd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2d38, gbc.sp());
        EXPECT(0x92df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92dd));
        EXPECT(0xcb, gbc.readMem(0x92de));
        // CB CB 001F
        gbc.setState(0x103a, 0x64e2, 0xdef0, 0x6b8b, 0xa79e, 0x1ed0, 0x1, 0x1);
        gbc.writeMem(0x103a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x64e2, gbc.sp());
        EXPECT(0x103c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0020
        gbc.setState(0x605, 0xcc70, 0x6120, 0x5557, 0x9a93, 0x4fb1, 0x0, 0x1);
        gbc.writeMem(0x605, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcc70, gbc.sp());
        EXPECT(0x607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0021
        gbc.setState(0xab5e, 0x72fb, 0xd7c0, 0xd202, 0x9679, 0xc34a, 0x1, 0x0);
        gbc.writeMem(0xab5e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x72fb, gbc.sp());
        EXPECT(0xab60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5e));
        EXPECT(0xcb, gbc.readMem(0xab5f));
        // CB CB 0022
        gbc.setState(0xe280, 0x120c, 0x1c00, 0x679, 0x97ec, 0xc50f, 0x0, 0x1);
        gbc.writeMem(0xe280, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x120c, gbc.sp());
        EXPECT(0xe282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe280));
        EXPECT(0xcb, gbc.readMem(0xe281));
        // CB CB 0023
        gbc.setState(0x8f1d, 0xc324, 0x9570, 0x253f, 0x1c1a, 0xe980, 0x1, 0x0);
        gbc.writeMem(0x8f1d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc324, gbc.sp());
        EXPECT(0x8f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f1d));
        EXPECT(0xcb, gbc.readMem(0x8f1e));
        // CB CB 0024
        gbc.setState(0x72d0, 0x1477, 0xcd0, 0x9b54, 0xb334, 0xd0fa, 0x1, 0x1);
        gbc.writeMem(0x72d0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1477, gbc.sp());
        EXPECT(0x72d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0025
        gbc.setState(0xd269, 0xae54, 0x5410, 0x81a1, 0xc7d2, 0x37bb, 0x0, 0x1);
        gbc.writeMem(0xd269, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xae54, gbc.sp());
        EXPECT(0xd26b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd269));
        EXPECT(0xcb, gbc.readMem(0xd26a));
        // CB CB 0026
        gbc.setState(0xc7d8, 0x4b09, 0x66b0, 0xf30c, 0xd71f, 0x33cb, 0x1, 0x1);
        gbc.writeMem(0xc7d8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4b09, gbc.sp());
        EXPECT(0xc7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d8));
        EXPECT(0xcb, gbc.readMem(0xc7d9));
        // CB CB 0027
        gbc.setState(0x4ccc, 0x43f3, 0xf240, 0x1a4a, 0xd3b8, 0x6635, 0x1, 0x0);
        gbc.writeMem(0x4ccc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x43f3, gbc.sp());
        EXPECT(0x4cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0028
        gbc.setState(0x808d, 0x26a7, 0x410, 0x89b4, 0xb8be, 0x64d9, 0x0, 0x1);
        gbc.writeMem(0x808d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x26a7, gbc.sp());
        EXPECT(0x808f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x808d));
        EXPECT(0xcb, gbc.readMem(0x808e));
        // CB CB 0029
        gbc.setState(0xcc8e, 0xac03, 0x1af0, 0x1807, 0xbeb0, 0xeae0, 0x0, 0x1);
        gbc.writeMem(0xcc8e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xac03, gbc.sp());
        EXPECT(0xcc90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8e));
        EXPECT(0xcb, gbc.readMem(0xcc8f));
        // CB CB 002A
        gbc.setState(0x8610, 0x4eea, 0x2cd0, 0xa7be, 0x38d6, 0xdf0f, 0x0, 0x0);
        gbc.writeMem(0x8610, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4eea, gbc.sp());
        EXPECT(0x8612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8610));
        EXPECT(0xcb, gbc.readMem(0x8611));
        // CB CB 002B
        gbc.setState(0xa0ae, 0x38e8, 0x96e0, 0xed65, 0x2ee6, 0x7fa4, 0x1, 0x1);
        gbc.writeMem(0xa0ae, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x38e8, gbc.sp());
        EXPECT(0xa0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ae));
        EXPECT(0xcb, gbc.readMem(0xa0af));
        // CB CB 002C
        gbc.setState(0x43cf, 0x7ce3, 0x510, 0x61d9, 0x1c07, 0x8824, 0x1, 0x1);
        gbc.writeMem(0x43cf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7ce3, gbc.sp());
        EXPECT(0x43d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 002D
        gbc.setState(0xa208, 0x14d4, 0x21f0, 0x5cef, 0x7a1, 0x1234, 0x0, 0x0);
        gbc.writeMem(0xa208, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x14d4, gbc.sp());
        EXPECT(0xa20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa208));
        EXPECT(0xcb, gbc.readMem(0xa209));
        // CB CB 002E
        gbc.setState(0x227e, 0x1150, 0x7f70, 0xb377, 0x9e70, 0xbd2a, 0x0, 0x1);
        gbc.writeMem(0x227e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1150, gbc.sp());
        EXPECT(0x2280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 002F
        gbc.setState(0xe426, 0x4229, 0x2250, 0xc046, 0xa1b9, 0x25dd, 0x0, 0x0);
        gbc.writeMem(0xe426, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4229, gbc.sp());
        EXPECT(0xe428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe426));
        EXPECT(0xcb, gbc.readMem(0xe427));
        // CB CB 0030
        gbc.setState(0x8f77, 0xe5c1, 0x8970, 0xa9c9, 0x8223, 0xf2e5, 0x0, 0x1);
        gbc.writeMem(0x8f77, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe5c1, gbc.sp());
        EXPECT(0x8f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f77));
        EXPECT(0xcb, gbc.readMem(0x8f78));
        // CB CB 0032
        gbc.setState(0x3959, 0x95eb, 0xacb0, 0x9b0a, 0xbb68, 0x1087, 0x1, 0x1);
        gbc.writeMem(0x3959, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x95eb, gbc.sp());
        EXPECT(0x395b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0033
        gbc.setState(0x4c03, 0x667e, 0x5590, 0x2b40, 0x2716, 0xe3ef, 0x0, 0x0);
        gbc.writeMem(0x4c03, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x667e, gbc.sp());
        EXPECT(0x4c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0034
        gbc.setState(0xdfdd, 0xc2a6, 0x1540, 0xff6d, 0xf449, 0x51bd, 0x0, 0x0);
        gbc.writeMem(0xdfdd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc2a6, gbc.sp());
        EXPECT(0xdfdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfdd));
        EXPECT(0xcb, gbc.readMem(0xdfde));
        // CB CB 0035
        gbc.setState(0x6539, 0xdf65, 0xd20, 0x2e3f, 0x9754, 0x43a0, 0x1, 0x1);
        gbc.writeMem(0x6539, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdf65, gbc.sp());
        EXPECT(0x653b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0036
        gbc.setState(0xc074, 0x8f6a, 0x2570, 0x464b, 0x4709, 0xc29f, 0x1, 0x1);
        gbc.writeMem(0xc074, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8f6a, gbc.sp());
        EXPECT(0xc076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc074));
        EXPECT(0xcb, gbc.readMem(0xc075));
        // CB CB 0037
        gbc.setState(0xe3f4, 0x361d, 0x5820, 0x6fb2, 0x6728, 0x4eb0, 0x1, 0x1);
        gbc.writeMem(0xe3f4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x361d, gbc.sp());
        EXPECT(0xe3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f4));
        EXPECT(0xcb, gbc.readMem(0xe3f5));
        // CB CB 0038
        gbc.setState(0xe935, 0x27d6, 0xd650, 0xb072, 0xc473, 0x15f0, 0x0, 0x1);
        gbc.writeMem(0xe935, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x27d6, gbc.sp());
        EXPECT(0xe937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe935));
        EXPECT(0xcb, gbc.readMem(0xe936));
        // CB CB 0039
        gbc.setState(0xbfa5, 0xd313, 0xfe00, 0x1614, 0xc3ff, 0xddc3, 0x0, 0x0);
        gbc.writeMem(0xbfa5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd313, gbc.sp());
        EXPECT(0xbfa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa5));
        EXPECT(0xcb, gbc.readMem(0xbfa6));
        // CB CB 003A
        gbc.setState(0xa488, 0x7a27, 0xbe00, 0x8838, 0x7fcd, 0xf200, 0x0, 0x0);
        gbc.writeMem(0xa488, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7a27, gbc.sp());
        EXPECT(0xa48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa488));
        EXPECT(0xcb, gbc.readMem(0xa489));
        // CB CB 003B
        gbc.setState(0x17be, 0xafce, 0x6ed0, 0x7e08, 0x99ad, 0xf212, 0x0, 0x1);
        gbc.writeMem(0x17be, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xafce, gbc.sp());
        EXPECT(0x17c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 003C
        gbc.setState(0xba92, 0xad5e, 0xf8a0, 0x4516, 0xa93d, 0x1251, 0x1, 0x0);
        gbc.writeMem(0xba92, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xad5e, gbc.sp());
        EXPECT(0xba94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba92));
        EXPECT(0xcb, gbc.readMem(0xba93));
        // CB CB 003D
        gbc.setState(0xd4c, 0xbf5f, 0x93a0, 0x3261, 0x3828, 0x1c05, 0x0, 0x0);
        gbc.writeMem(0xd4c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbf5f, gbc.sp());
        EXPECT(0xd4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 003E
        gbc.setState(0x5fd7, 0x9253, 0x4080, 0xce82, 0xebb5, 0x458e, 0x1, 0x1);
        gbc.writeMem(0x5fd7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9253, gbc.sp());
        EXPECT(0x5fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 003F
        gbc.setState(0x312c, 0x28d6, 0x6e70, 0x1d8b, 0xf436, 0xd168, 0x0, 0x1);
        gbc.writeMem(0x312c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x28d6, gbc.sp());
        EXPECT(0x312e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0040
        gbc.setState(0x270f, 0x86b5, 0xb060, 0x67fd, 0xa0e4, 0xfb08, 0x0, 0x0);
        gbc.writeMem(0x270f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x86b5, gbc.sp());
        EXPECT(0x2711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0041
        gbc.setState(0x6edd, 0x7eaf, 0x55e0, 0x27b9, 0x182, 0xc9da, 0x0, 0x1);
        gbc.writeMem(0x6edd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7eaf, gbc.sp());
        EXPECT(0x6edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0042
        gbc.setState(0xa235, 0x769a, 0x9d20, 0xedc8, 0xefdb, 0x1caa, 0x1, 0x0);
        gbc.writeMem(0xa235, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x769a, gbc.sp());
        EXPECT(0xa237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa235));
        EXPECT(0xcb, gbc.readMem(0xa236));
        // CB CB 0043
        gbc.setState(0xd525, 0x9761, 0x45e0, 0x8758, 0x5691, 0xba05, 0x0, 0x1);
        gbc.writeMem(0xd525, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9761, gbc.sp());
        EXPECT(0xd527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd525));
        EXPECT(0xcb, gbc.readMem(0xd526));
        // CB CB 0045
        gbc.setState(0xbb40, 0x7b78, 0xf380, 0x30f1, 0xab1d, 0x41f5, 0x1, 0x0);
        gbc.writeMem(0xbb40, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7b78, gbc.sp());
        EXPECT(0xbb42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb40));
        EXPECT(0xcb, gbc.readMem(0xbb41));
        // CB CB 0046
        gbc.setState(0x1234, 0xc626, 0x8f90, 0x703f, 0x4f9, 0xca55, 0x1, 0x0);
        gbc.writeMem(0x1234, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc626, gbc.sp());
        EXPECT(0x1236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0047
        gbc.setState(0x8cb7, 0x4de6, 0x4900, 0xc845, 0xee18, 0x7aad, 0x0, 0x1);
        gbc.writeMem(0x8cb7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4de6, gbc.sp());
        EXPECT(0x8cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb7));
        EXPECT(0xcb, gbc.readMem(0x8cb8));
        // CB CB 0048
        gbc.setState(0xe517, 0x4b48, 0xf060, 0x2406, 0x5330, 0xf2ab, 0x0, 0x0);
        gbc.writeMem(0xe517, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4b48, gbc.sp());
        EXPECT(0xe519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe517));
        EXPECT(0xcb, gbc.readMem(0xe518));
        // CB CB 0049
        gbc.setState(0xca69, 0x9b7d, 0x6c90, 0x4095, 0xbaa1, 0x341f, 0x0, 0x1);
        gbc.writeMem(0xca69, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9b7d, gbc.sp());
        EXPECT(0xca6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca69));
        EXPECT(0xcb, gbc.readMem(0xca6a));
        // CB CB 004A
        gbc.setState(0x24dc, 0x11fe, 0xd7a0, 0xd759, 0x18f3, 0xbf5a, 0x1, 0x0);
        gbc.writeMem(0x24dc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x11fe, gbc.sp());
        EXPECT(0x24de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 004B
        gbc.setState(0xa33f, 0xe7de, 0xacb0, 0xc6e5, 0xa813, 0x236a, 0x0, 0x1);
        gbc.writeMem(0xa33f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe7de, gbc.sp());
        EXPECT(0xa341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33f));
        EXPECT(0xcb, gbc.readMem(0xa340));
        // CB CB 004C
        gbc.setState(0x8da9, 0xa6ba, 0xf410, 0x628a, 0x3095, 0x6e6d, 0x1, 0x1);
        gbc.writeMem(0x8da9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa6ba, gbc.sp());
        EXPECT(0x8dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da9));
        EXPECT(0xcb, gbc.readMem(0x8daa));
        // CB CB 004D
        gbc.setState(0xdad9, 0x9ffd, 0x5660, 0xd736, 0x5a1b, 0x6249, 0x0, 0x0);
        gbc.writeMem(0xdad9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9ffd, gbc.sp());
        EXPECT(0xdadb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad9));
        EXPECT(0xcb, gbc.readMem(0xdada));
        // CB CB 004E
        gbc.setState(0x4b57, 0x2252, 0xdd10, 0xf61b, 0xbec7, 0x64, 0x0, 0x1);
        gbc.writeMem(0x4b57, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2252, gbc.sp());
        EXPECT(0x4b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 004F
        gbc.setState(0xec20, 0xf5bc, 0xe260, 0xbf69, 0x62d1, 0x1879, 0x0, 0x1);
        gbc.writeMem(0xec20, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf5bc, gbc.sp());
        EXPECT(0xec22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec20));
        EXPECT(0xcb, gbc.readMem(0xec21));
        // CB CB 0050
        gbc.setState(0x9d24, 0x6a98, 0xebf0, 0xb364, 0x19ac, 0x817c, 0x0, 0x1);
        gbc.writeMem(0x9d24, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6a98, gbc.sp());
        EXPECT(0x9d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d24));
        EXPECT(0xcb, gbc.readMem(0x9d25));
        // CB CB 0051
        gbc.setState(0xbfbe, 0x7d1b, 0xb3c0, 0x9a40, 0xdc8c, 0xc4c5, 0x1, 0x1);
        gbc.writeMem(0xbfbe, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7d1b, gbc.sp());
        EXPECT(0xbfc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfbe));
        EXPECT(0xcb, gbc.readMem(0xbfbf));
        // CB CB 0052
        gbc.setState(0x9f4f, 0xc130, 0x5790, 0x71f7, 0x3968, 0x5b81, 0x1, 0x1);
        gbc.writeMem(0x9f4f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc130, gbc.sp());
        EXPECT(0x9f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4f));
        EXPECT(0xcb, gbc.readMem(0x9f50));
        // CB CB 0053
        gbc.setState(0x87b9, 0xcf96, 0xaac0, 0x142b, 0x72db, 0x89d9, 0x0, 0x0);
        gbc.writeMem(0x87b9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcf96, gbc.sp());
        EXPECT(0x87bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b9));
        EXPECT(0xcb, gbc.readMem(0x87ba));
        // CB CB 0054
        gbc.setState(0xad88, 0xf2dd, 0x6bf0, 0xdfb0, 0x37b3, 0xf979, 0x1, 0x0);
        gbc.writeMem(0xad88, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf2dd, gbc.sp());
        EXPECT(0xad8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad88));
        EXPECT(0xcb, gbc.readMem(0xad89));
        // CB CB 0055
        gbc.setState(0xef72, 0x31ec, 0x4eb0, 0x761e, 0x8ac9, 0xe242, 0x1, 0x1);
        gbc.writeMem(0xef72, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x31ec, gbc.sp());
        EXPECT(0xef74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef72));
        EXPECT(0xcb, gbc.readMem(0xef73));
        // CB CB 0056
        gbc.setState(0x8947, 0xdc6, 0x71d0, 0xe837, 0x39fa, 0x999e, 0x1, 0x1);
        gbc.writeMem(0x8947, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdc6, gbc.sp());
        EXPECT(0x8949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8947));
        EXPECT(0xcb, gbc.readMem(0x8948));
        // CB CB 0057
        gbc.setState(0xb6f7, 0xefe, 0xc880, 0xfa56, 0xa43a, 0xaf95, 0x1, 0x1);
        gbc.writeMem(0xb6f7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xefe, gbc.sp());
        EXPECT(0xb6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f7));
        EXPECT(0xcb, gbc.readMem(0xb6f8));
        // CB CB 0058
        gbc.setState(0x8a4b, 0x1ba2, 0xe440, 0xa019, 0xbe97, 0x2440, 0x0, 0x0);
        gbc.writeMem(0x8a4b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1ba2, gbc.sp());
        EXPECT(0x8a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a4b));
        EXPECT(0xcb, gbc.readMem(0x8a4c));
        // CB CB 0059
        gbc.setState(0x9d01, 0x1f45, 0x7ba0, 0x945, 0x36db, 0x2eb2, 0x0, 0x0);
        gbc.writeMem(0x9d01, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1f45, gbc.sp());
        EXPECT(0x9d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d01));
        EXPECT(0xcb, gbc.readMem(0x9d02));
        // CB CB 005A
        gbc.setState(0x1a05, 0x843d, 0x1320, 0xf7be, 0xf01d, 0x84, 0x0, 0x0);
        gbc.writeMem(0x1a05, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x843d, gbc.sp());
        EXPECT(0x1a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 005B
        gbc.setState(0xb8e8, 0x886b, 0x8c00, 0x1f9a, 0x2022, 0xa410, 0x1, 0x0);
        gbc.writeMem(0xb8e8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x886b, gbc.sp());
        EXPECT(0xb8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e8));
        EXPECT(0xcb, gbc.readMem(0xb8e9));
        // CB CB 005C
        gbc.setState(0x971b, 0x1e84, 0xc6f0, 0x4579, 0x7d77, 0xd8f7, 0x0, 0x0);
        gbc.writeMem(0x971b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1e84, gbc.sp());
        EXPECT(0x971d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x971b));
        EXPECT(0xcb, gbc.readMem(0x971c));
        // CB CB 005D
        gbc.setState(0xec3b, 0x1929, 0x32d0, 0x1a6c, 0x8a5, 0x5a5e, 0x1, 0x1);
        gbc.writeMem(0xec3b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1929, gbc.sp());
        EXPECT(0xec3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec3b));
        EXPECT(0xcb, gbc.readMem(0xec3c));
        // CB CB 005E
        gbc.setState(0x26a, 0x7b68, 0x4a30, 0x61d7, 0xa797, 0xe78a, 0x1, 0x1);
        gbc.writeMem(0x26a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7b68, gbc.sp());
        EXPECT(0x26c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 005F
        gbc.setState(0x1c09, 0x703d, 0x77c0, 0xbd42, 0x2ea3, 0x8c3b, 0x1, 0x0);
        gbc.writeMem(0x1c09, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x703d, gbc.sp());
        EXPECT(0x1c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0060
        gbc.setState(0xb9a, 0x92c5, 0x170, 0x9d63, 0x840f, 0x3f80, 0x1, 0x0);
        gbc.writeMem(0xb9a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x92c5, gbc.sp());
        EXPECT(0xb9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0061
        gbc.setState(0x4d41, 0x7e4f, 0x1f20, 0xfb40, 0x9eb8, 0x30fb, 0x0, 0x0);
        gbc.writeMem(0x4d41, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7e4f, gbc.sp());
        EXPECT(0x4d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0062
        gbc.setState(0x1569, 0x962b, 0x4390, 0xb264, 0xf8cd, 0x4d40, 0x0, 0x1);
        gbc.writeMem(0x1569, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x962b, gbc.sp());
        EXPECT(0x156b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0063
        gbc.setState(0xa4db, 0xb16, 0xb930, 0x1f05, 0xd74c, 0x56d7, 0x1, 0x1);
        gbc.writeMem(0xa4db, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb16, gbc.sp());
        EXPECT(0xa4dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4db));
        EXPECT(0xcb, gbc.readMem(0xa4dc));
        // CB CB 0064
        gbc.setState(0x3d1f, 0xf196, 0x7030, 0xb137, 0xafd8, 0xa778, 0x0, 0x1);
        gbc.writeMem(0x3d1f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf196, gbc.sp());
        EXPECT(0x3d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0065
        gbc.setState(0xe1c0, 0xb650, 0xe470, 0x3338, 0xdb0d, 0xac7c, 0x0, 0x1);
        gbc.writeMem(0xe1c0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb650, gbc.sp());
        EXPECT(0xe1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c0));
        EXPECT(0xcb, gbc.readMem(0xe1c1));
        // CB CB 0066
        gbc.setState(0x92c, 0xd8d1, 0xd090, 0x4f88, 0xe5d, 0xa0df, 0x0, 0x0);
        gbc.writeMem(0x92c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd8d1, gbc.sp());
        EXPECT(0x92e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0067
        gbc.setState(0xb09f, 0x182d, 0x6ae0, 0x6ebd, 0xdc9b, 0x8758, 0x1, 0x0);
        gbc.writeMem(0xb09f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x182d, gbc.sp());
        EXPECT(0xb0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09f));
        EXPECT(0xcb, gbc.readMem(0xb0a0));
        // CB CB 0068
        gbc.setState(0xbc20, 0x2688, 0xddf0, 0x41a8, 0xc3e4, 0x36ac, 0x0, 0x1);
        gbc.writeMem(0xbc20, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2688, gbc.sp());
        EXPECT(0xbc22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc20));
        EXPECT(0xcb, gbc.readMem(0xbc21));
        // CB CB 0069
        gbc.setState(0x9018, 0xbf93, 0x9700, 0xe192, 0xd12a, 0x3efb, 0x0, 0x0);
        gbc.writeMem(0x9018, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbf93, gbc.sp());
        EXPECT(0x901a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9018));
        EXPECT(0xcb, gbc.readMem(0x9019));
        // CB CB 006A
        gbc.setState(0x838, 0x82cd, 0x79d0, 0xf05e, 0x5e3d, 0xe20f, 0x0, 0x1);
        gbc.writeMem(0x838, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x82cd, gbc.sp());
        EXPECT(0x83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 006B
        gbc.setState(0xcdd7, 0x68d, 0x62a0, 0x5699, 0x648, 0x6ade, 0x0, 0x1);
        gbc.writeMem(0xcdd7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x68d, gbc.sp());
        EXPECT(0xcdd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd7));
        EXPECT(0xcb, gbc.readMem(0xcdd8));
        // CB CB 006C
        gbc.setState(0xcade, 0xb54d, 0xae10, 0x6484, 0xeaed, 0xf6ab, 0x0, 0x0);
        gbc.writeMem(0xcade, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb54d, gbc.sp());
        EXPECT(0xcae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcade));
        EXPECT(0xcb, gbc.readMem(0xcadf));
        // CB CB 006D
        gbc.setState(0x79e3, 0x55fd, 0x5c30, 0x87ca, 0x1bbf, 0xc48a, 0x0, 0x0);
        gbc.writeMem(0x79e3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x55fd, gbc.sp());
        EXPECT(0x79e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 006F
        gbc.setState(0x2437, 0xa07b, 0x3390, 0xb176, 0xd152, 0xd4ae, 0x1, 0x1);
        gbc.writeMem(0x2437, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa07b, gbc.sp());
        EXPECT(0x2439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0070
        gbc.setState(0x4fa1, 0x3d56, 0x3c90, 0xe0d1, 0x1f41, 0x728b, 0x1, 0x0);
        gbc.writeMem(0x4fa1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3d56, gbc.sp());
        EXPECT(0x4fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0071
        gbc.setState(0x7949, 0xc4f6, 0xabf0, 0xe68f, 0xb279, 0x9455, 0x1, 0x0);
        gbc.writeMem(0x7949, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc4f6, gbc.sp());
        EXPECT(0x794b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0072
        gbc.setState(0x6bf4, 0x65bb, 0x3ca0, 0x2dc4, 0x5662, 0x9b9b, 0x1, 0x1);
        gbc.writeMem(0x6bf4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x65bb, gbc.sp());
        EXPECT(0x6bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0073
        gbc.setState(0x7af5, 0x923a, 0x6ac0, 0x85de, 0xf553, 0x7a81, 0x1, 0x0);
        gbc.writeMem(0x7af5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x923a, gbc.sp());
        EXPECT(0x7af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0074
        gbc.setState(0xa76e, 0xa6ac, 0x6a20, 0x6dd5, 0x1168, 0xd636, 0x0, 0x0);
        gbc.writeMem(0xa76e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa6ac, gbc.sp());
        EXPECT(0xa770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa76e));
        EXPECT(0xcb, gbc.readMem(0xa76f));
        // CB CB 0075
        gbc.setState(0x395, 0x6de1, 0x2650, 0xb401, 0x4018, 0xb66d, 0x1, 0x0);
        gbc.writeMem(0x395, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6de1, gbc.sp());
        EXPECT(0x397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0076
        gbc.setState(0x80f7, 0x6554, 0x49e0, 0x7a64, 0x9f83, 0x3d07, 0x1, 0x0);
        gbc.writeMem(0x80f7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6554, gbc.sp());
        EXPECT(0x80f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f7));
        EXPECT(0xcb, gbc.readMem(0x80f8));
        // CB CB 0077
        gbc.setState(0x8509, 0x3419, 0x3970, 0x284d, 0x502a, 0x1c6f, 0x0, 0x0);
        gbc.writeMem(0x8509, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3419, gbc.sp());
        EXPECT(0x850b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8509));
        EXPECT(0xcb, gbc.readMem(0x850a));
        // CB CB 0078
        gbc.setState(0x3005, 0xc8d6, 0x9b40, 0x418c, 0x3120, 0x8a46, 0x0, 0x0);
        gbc.writeMem(0x3005, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc8d6, gbc.sp());
        EXPECT(0x3007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0079
        gbc.setState(0x6a4c, 0x29f6, 0x46b0, 0xa1a1, 0xdbae, 0xe991, 0x0, 0x0);
        gbc.writeMem(0x6a4c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x29f6, gbc.sp());
        EXPECT(0x6a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 007A
        gbc.setState(0x9213, 0x1469, 0xc4d0, 0x86ca, 0xd401, 0x592a, 0x0, 0x0);
        gbc.writeMem(0x9213, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1469, gbc.sp());
        EXPECT(0x9215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9213));
        EXPECT(0xcb, gbc.readMem(0x9214));
        // CB CB 007B
        gbc.setState(0xe9e1, 0xc455, 0x5180, 0x3845, 0x9f48, 0x6550, 0x1, 0x0);
        gbc.writeMem(0xe9e1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc455, gbc.sp());
        EXPECT(0xe9e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e1));
        EXPECT(0xcb, gbc.readMem(0xe9e2));
        // CB CB 007C
        gbc.setState(0xd1f5, 0x12c5, 0x4e70, 0xcf5a, 0x2442, 0x481f, 0x1, 0x0);
        gbc.writeMem(0xd1f5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x12c5, gbc.sp());
        EXPECT(0xd1f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f5));
        EXPECT(0xcb, gbc.readMem(0xd1f6));
        // CB CB 007D
        gbc.setState(0x8f7c, 0xc170, 0x4e50, 0x9a3, 0x6da5, 0xaefa, 0x0, 0x0);
        gbc.writeMem(0x8f7c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc170, gbc.sp());
        EXPECT(0x8f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f7c));
        EXPECT(0xcb, gbc.readMem(0x8f7d));
        // CB CB 007E
        gbc.setState(0x76d6, 0xfb42, 0xa140, 0x2883, 0x2a98, 0xd1f4, 0x1, 0x1);
        gbc.writeMem(0x76d6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfb42, gbc.sp());
        EXPECT(0x76d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 007F
        gbc.setState(0x2e15, 0xd210, 0x29f0, 0xaa65, 0x173d, 0xed9a, 0x1, 0x0);
        gbc.writeMem(0x2e15, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd210, gbc.sp());
        EXPECT(0x2e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0080
        gbc.setState(0xbfc9, 0x1162, 0x7500, 0x59f8, 0xbb75, 0xebc7, 0x0, 0x0);
        gbc.writeMem(0xbfc9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1162, gbc.sp());
        EXPECT(0xbfcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc9));
        EXPECT(0xcb, gbc.readMem(0xbfca));
        // CB CB 0081
        gbc.setState(0xcbad, 0x2106, 0xba00, 0xb545, 0xada6, 0xa9a2, 0x0, 0x0);
        gbc.writeMem(0xcbad, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2106, gbc.sp());
        EXPECT(0xcbaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbad));
        EXPECT(0xcb, gbc.readMem(0xcbae));
        // CB CB 0082
        gbc.setState(0xc1f8, 0xc7fd, 0xc830, 0x2cb3, 0xbf2a, 0xc213, 0x1, 0x0);
        gbc.writeMem(0xc1f8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc7fd, gbc.sp());
        EXPECT(0xc1fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f8));
        EXPECT(0xcb, gbc.readMem(0xc1f9));
        // CB CB 0083
        gbc.setState(0x1dbd, 0x7948, 0xecd0, 0x2d8c, 0xe535, 0x51e5, 0x1, 0x1);
        gbc.writeMem(0x1dbd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7948, gbc.sp());
        EXPECT(0x1dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0084
        gbc.setState(0x2ea6, 0xdce4, 0x8790, 0x2a43, 0x658c, 0x3f6, 0x0, 0x0);
        gbc.writeMem(0x2ea6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdce4, gbc.sp());
        EXPECT(0x2ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0085
        gbc.setState(0x3ab9, 0xbdcf, 0x4560, 0x8672, 0x1e52, 0xf898, 0x0, 0x1);
        gbc.writeMem(0x3ab9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xbdcf, gbc.sp());
        EXPECT(0x3abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0086
        gbc.setState(0xbe62, 0xd210, 0xf4b0, 0x9946, 0x6e73, 0x2b42, 0x1, 0x1);
        gbc.writeMem(0xbe62, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd210, gbc.sp());
        EXPECT(0xbe64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe62));
        EXPECT(0xcb, gbc.readMem(0xbe63));
        // CB CB 0087
        gbc.setState(0xe18, 0xad7f, 0x85c0, 0x60ee, 0x6971, 0xfac3, 0x1, 0x1);
        gbc.writeMem(0xe18, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xad7f, gbc.sp());
        EXPECT(0xe1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0088
        gbc.setState(0x9ae6, 0x8d1d, 0xc2d0, 0xc5de, 0xb8b9, 0x2650, 0x1, 0x1);
        gbc.writeMem(0x9ae6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8d1d, gbc.sp());
        EXPECT(0x9ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae6));
        EXPECT(0xcb, gbc.readMem(0x9ae7));
        // CB CB 0089
        gbc.setState(0x2f05, 0x4154, 0x7990, 0x223c, 0x2895, 0x49df, 0x1, 0x1);
        gbc.writeMem(0x2f05, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4154, gbc.sp());
        EXPECT(0x2f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 008A
        gbc.setState(0x160b, 0xe462, 0xe40, 0x1b04, 0xfe22, 0xeeb3, 0x0, 0x0);
        gbc.writeMem(0x160b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe462, gbc.sp());
        EXPECT(0x160d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 008B
        gbc.setState(0x183f, 0x4679, 0x8a50, 0x7ea3, 0x6db4, 0xdf63, 0x0, 0x1);
        gbc.writeMem(0x183f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4679, gbc.sp());
        EXPECT(0x1841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 008C
        gbc.setState(0x5760, 0x3d12, 0x35a0, 0xb92b, 0x9e28, 0xcbac, 0x0, 0x1);
        gbc.writeMem(0x5760, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3d12, gbc.sp());
        EXPECT(0x5762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 008D
        gbc.setState(0x7dc5, 0x3910, 0x5fa0, 0x9209, 0x79bf, 0x250b, 0x1, 0x1);
        gbc.writeMem(0x7dc5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3910, gbc.sp());
        EXPECT(0x7dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 008E
        gbc.setState(0xc2a2, 0x2b2d, 0xb9d0, 0xb59c, 0xa3b8, 0x925, 0x0, 0x1);
        gbc.writeMem(0xc2a2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2b2d, gbc.sp());
        EXPECT(0xc2a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a2));
        EXPECT(0xcb, gbc.readMem(0xc2a3));
        // CB CB 008F
        gbc.setState(0xeb3c, 0x4457, 0x4d80, 0x7976, 0x143b, 0xd9ef, 0x1, 0x1);
        gbc.writeMem(0xeb3c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4457, gbc.sp());
        EXPECT(0xeb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3c));
        EXPECT(0xcb, gbc.readMem(0xeb3d));
        // CB CB 0090
        gbc.setState(0x5f8c, 0x296a, 0x6d40, 0xc7cf, 0x2322, 0x7dcc, 0x0, 0x0);
        gbc.writeMem(0x5f8c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x296a, gbc.sp());
        EXPECT(0x5f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0091
        gbc.setState(0x329a, 0xfaa1, 0x10a0, 0x928e, 0x1b75, 0x32a5, 0x1, 0x1);
        gbc.writeMem(0x329a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfaa1, gbc.sp());
        EXPECT(0x329c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0092
        gbc.setState(0x4c26, 0xd169, 0x9470, 0xc089, 0x7ada, 0x5dc0, 0x0, 0x1);
        gbc.writeMem(0x4c26, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd169, gbc.sp());
        EXPECT(0x4c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0093
        gbc.setState(0x9e5, 0xf03e, 0x3ce0, 0x860d, 0x46d3, 0x4757, 0x0, 0x0);
        gbc.writeMem(0x9e5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf03e, gbc.sp());
        EXPECT(0x9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0094
        gbc.setState(0x84ce, 0x4e04, 0xe970, 0x13c3, 0xbcf0, 0x38f7, 0x1, 0x1);
        gbc.writeMem(0x84ce, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4e04, gbc.sp());
        EXPECT(0x84d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ce));
        EXPECT(0xcb, gbc.readMem(0x84cf));
        // CB CB 0095
        gbc.setState(0xc7cb, 0x4e00, 0xbca0, 0x5b, 0xf8d2, 0xca9e, 0x0, 0x1);
        gbc.writeMem(0xc7cb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4e00, gbc.sp());
        EXPECT(0xc7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7cb));
        EXPECT(0xcb, gbc.readMem(0xc7cc));
        // CB CB 0096
        gbc.setState(0xdb2c, 0xf9e8, 0x8890, 0xc872, 0xa26, 0x709b, 0x1, 0x1);
        gbc.writeMem(0xdb2c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf9e8, gbc.sp());
        EXPECT(0xdb2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb2c));
        EXPECT(0xcb, gbc.readMem(0xdb2d));
        // CB CB 0097
        gbc.setState(0x22f8, 0xcabe, 0xce90, 0x6a5c, 0xc168, 0x3e59, 0x1, 0x1);
        gbc.writeMem(0x22f8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcabe, gbc.sp());
        EXPECT(0x22fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0098
        gbc.setState(0x1963, 0x5c23, 0xa240, 0x1879, 0x70ca, 0x2c7e, 0x1, 0x0);
        gbc.writeMem(0x1963, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5c23, gbc.sp());
        EXPECT(0x1965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0099
        gbc.setState(0x9e09, 0x2fc4, 0x4c40, 0x5743, 0x702a, 0x8708, 0x1, 0x0);
        gbc.writeMem(0x9e09, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2fc4, gbc.sp());
        EXPECT(0x9e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e09));
        EXPECT(0xcb, gbc.readMem(0x9e0a));
        // CB CB 009A
        gbc.setState(0x5f11, 0xa11c, 0x4b90, 0x3c23, 0x611d, 0xf4b2, 0x0, 0x1);
        gbc.writeMem(0x5f11, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa11c, gbc.sp());
        EXPECT(0x5f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 009B
        gbc.setState(0x38e1, 0x1ac8, 0x6110, 0xa598, 0x6be6, 0xa1c1, 0x0, 0x1);
        gbc.writeMem(0x38e1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1ac8, gbc.sp());
        EXPECT(0x38e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 009D
        gbc.setState(0x217e, 0x8c09, 0x990, 0x9482, 0xea47, 0xb673, 0x0, 0x1);
        gbc.writeMem(0x217e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8c09, gbc.sp());
        EXPECT(0x2180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 009E
        gbc.setState(0x2cca, 0x9eff, 0xd0f0, 0xb216, 0x8993, 0x1a6a, 0x1, 0x0);
        gbc.writeMem(0x2cca, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9eff, gbc.sp());
        EXPECT(0x2ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 009F
        gbc.setState(0x7342, 0x28d1, 0xd530, 0x14eb, 0xdb80, 0x1f6b, 0x0, 0x1);
        gbc.writeMem(0x7342, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x28d1, gbc.sp());
        EXPECT(0x7344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00A0
        gbc.setState(0x35, 0x5da9, 0x72a0, 0xc535, 0xafe5, 0x5462, 0x0, 0x1);
        gbc.writeMem(0x35, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5da9, gbc.sp());
        EXPECT(0x37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00A1
        gbc.setState(0x45f, 0x7836, 0x1050, 0xb5ad, 0x5ca4, 0xd23f, 0x0, 0x0);
        gbc.writeMem(0x45f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7836, gbc.sp());
        EXPECT(0x461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00A2
        gbc.setState(0x90e8, 0xeab2, 0x88e0, 0x23d8, 0xf67b, 0xa236, 0x1, 0x1);
        gbc.writeMem(0x90e8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xeab2, gbc.sp());
        EXPECT(0x90ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e8));
        EXPECT(0xcb, gbc.readMem(0x90e9));
        // CB CB 00A3
        gbc.setState(0x5372, 0xf5b4, 0x1fa0, 0x3281, 0x96e3, 0x75d5, 0x0, 0x0);
        gbc.writeMem(0x5372, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf5b4, gbc.sp());
        EXPECT(0x5374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00A4
        gbc.setState(0xcd47, 0x322d, 0xdfa0, 0x73e0, 0x84d0, 0x9f63, 0x1, 0x0);
        gbc.writeMem(0xcd47, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x322d, gbc.sp());
        EXPECT(0xcd49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd47));
        EXPECT(0xcb, gbc.readMem(0xcd48));
        // CB CB 00A5
        gbc.setState(0x7bd7, 0xdc4a, 0x5c20, 0x3770, 0xcd3a, 0xae0f, 0x1, 0x1);
        gbc.writeMem(0x7bd7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdc4a, gbc.sp());
        EXPECT(0x7bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00A6
        gbc.setState(0x9a1e, 0xaa56, 0x8fa0, 0x7840, 0x74b, 0xd24a, 0x1, 0x1);
        gbc.writeMem(0x9a1e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xaa56, gbc.sp());
        EXPECT(0x9a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a1e));
        EXPECT(0xcb, gbc.readMem(0x9a1f));
        // CB CB 00A7
        gbc.setState(0xd49b, 0xb279, 0x800, 0x92ed, 0x7190, 0x6b54, 0x1, 0x0);
        gbc.writeMem(0xd49b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb279, gbc.sp());
        EXPECT(0xd49d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49b));
        EXPECT(0xcb, gbc.readMem(0xd49c));
        // CB CB 00A8
        gbc.setState(0xd9c7, 0x4abd, 0xefc0, 0xd3ba, 0x12bb, 0x12b5, 0x1, 0x0);
        gbc.writeMem(0xd9c7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4abd, gbc.sp());
        EXPECT(0xd9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c7));
        EXPECT(0xcb, gbc.readMem(0xd9c8));
        // CB CB 00A9
        gbc.setState(0xee5b, 0x1409, 0xea10, 0xd037, 0xc5a5, 0x2988, 0x1, 0x0);
        gbc.writeMem(0xee5b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1409, gbc.sp());
        EXPECT(0xee5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee5b));
        EXPECT(0xcb, gbc.readMem(0xee5c));
        // CB CB 00AA
        gbc.setState(0xb89c, 0xd733, 0x62d0, 0xb0bf, 0x109f, 0xef38, 0x1, 0x0);
        gbc.writeMem(0xb89c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd733, gbc.sp());
        EXPECT(0xb89e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb89c));
        EXPECT(0xcb, gbc.readMem(0xb89d));
        // CB CB 00AC
        gbc.setState(0xb44e, 0x7b5a, 0x2da0, 0x78a6, 0xd24c, 0x3615, 0x1, 0x1);
        gbc.writeMem(0xb44e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7b5a, gbc.sp());
        EXPECT(0xb450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb44e));
        EXPECT(0xcb, gbc.readMem(0xb44f));
        // CB CB 00AD
        gbc.setState(0x1b49, 0x7a55, 0x79a0, 0x7584, 0xbc0d, 0xd108, 0x0, 0x1);
        gbc.writeMem(0x1b49, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7a55, gbc.sp());
        EXPECT(0x1b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00AE
        gbc.setState(0x41b6, 0xf1c9, 0xa6a0, 0x9bd9, 0x4352, 0x98cd, 0x1, 0x0);
        gbc.writeMem(0x41b6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf1c9, gbc.sp());
        EXPECT(0x41b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00AF
        gbc.setState(0x54a9, 0x6d63, 0x81e0, 0x67be, 0xc494, 0x65e4, 0x1, 0x0);
        gbc.writeMem(0x54a9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6d63, gbc.sp());
        EXPECT(0x54ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00B0
        gbc.setState(0x8252, 0xec0e, 0x1340, 0x729c, 0xa28c, 0x1c96, 0x0, 0x0);
        gbc.writeMem(0x8252, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xec0e, gbc.sp());
        EXPECT(0x8254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8252));
        EXPECT(0xcb, gbc.readMem(0x8253));
        // CB CB 00B1
        gbc.setState(0x3d4e, 0x4b3b, 0x8be0, 0x9234, 0x5244, 0x943b, 0x0, 0x0);
        gbc.writeMem(0x3d4e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4b3b, gbc.sp());
        EXPECT(0x3d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00B2
        gbc.setState(0xd8e1, 0x84a9, 0xad20, 0x2440, 0x9145, 0x8d13, 0x1, 0x1);
        gbc.writeMem(0xd8e1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x84a9, gbc.sp());
        EXPECT(0xd8e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e1));
        EXPECT(0xcb, gbc.readMem(0xd8e2));
        // CB CB 00B3
        gbc.setState(0x100c, 0xef53, 0xc960, 0xd72c, 0x826e, 0xed7a, 0x1, 0x1);
        gbc.writeMem(0x100c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xef53, gbc.sp());
        EXPECT(0x100e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00B4
        gbc.setState(0x1f63, 0x3b3a, 0x4230, 0x2648, 0xe1b0, 0x15e8, 0x1, 0x1);
        gbc.writeMem(0x1f63, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3b3a, gbc.sp());
        EXPECT(0x1f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00B5
        gbc.setState(0x3544, 0xd12f, 0x8b50, 0x80f5, 0xaa2b, 0x1282, 0x1, 0x0);
        gbc.writeMem(0x3544, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd12f, gbc.sp());
        EXPECT(0x3546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00B7
        gbc.setState(0x1999, 0xf05a, 0x30d0, 0x7322, 0x55dd, 0x9a8, 0x0, 0x0);
        gbc.writeMem(0x1999, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf05a, gbc.sp());
        EXPECT(0x199b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00B8
        gbc.setState(0x8485, 0xb10e, 0x5140, 0x38b2, 0xe766, 0xe838, 0x1, 0x1);
        gbc.writeMem(0x8485, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb10e, gbc.sp());
        EXPECT(0x8487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8485));
        EXPECT(0xcb, gbc.readMem(0x8486));
        // CB CB 00B9
        gbc.setState(0x3b11, 0x6d60, 0xe010, 0xc8e4, 0x2faf, 0xa29f, 0x0, 0x1);
        gbc.writeMem(0x3b11, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6d60, gbc.sp());
        EXPECT(0x3b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00BB
        gbc.setState(0xdad8, 0xee28, 0x1830, 0xa3a7, 0xf2c5, 0xe362, 0x1, 0x1);
        gbc.writeMem(0xdad8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xee28, gbc.sp());
        EXPECT(0xdada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad8));
        EXPECT(0xcb, gbc.readMem(0xdad9));
        // CB CB 00BC
        gbc.setState(0x1ee1, 0x5f2a, 0xea30, 0xb78c, 0xd6b4, 0x6fa3, 0x0, 0x0);
        gbc.writeMem(0x1ee1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5f2a, gbc.sp());
        EXPECT(0x1ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00BD
        gbc.setState(0xc2f2, 0x2ad4, 0x6660, 0xd773, 0x4b42, 0x2481, 0x1, 0x1);
        gbc.writeMem(0xc2f2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2ad4, gbc.sp());
        EXPECT(0xc2f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f2));
        EXPECT(0xcb, gbc.readMem(0xc2f3));
        // CB CB 00BE
        gbc.setState(0xe3b2, 0x117a, 0x2d90, 0xf168, 0xb989, 0xac29, 0x0, 0x0);
        gbc.writeMem(0xe3b2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x117a, gbc.sp());
        EXPECT(0xe3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b2));
        EXPECT(0xcb, gbc.readMem(0xe3b3));
        // CB CB 00BF
        gbc.setState(0xa07f, 0x319b, 0x2aa0, 0x8691, 0x2438, 0xfea, 0x1, 0x0);
        gbc.writeMem(0xa07f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x319b, gbc.sp());
        EXPECT(0xa081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa07f));
        EXPECT(0xcb, gbc.readMem(0xa080));
        // CB CB 00C0
        gbc.setState(0xacec, 0xe09, 0x1d30, 0xa2cb, 0xc88c, 0x373f, 0x1, 0x1);
        gbc.writeMem(0xacec, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe09, gbc.sp());
        EXPECT(0xacee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacec));
        EXPECT(0xcb, gbc.readMem(0xaced));
        // CB CB 00C1
        gbc.setState(0x6d4d, 0x9fdd, 0x9380, 0x5783, 0xab23, 0x6576, 0x1, 0x0);
        gbc.writeMem(0x6d4d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9fdd, gbc.sp());
        EXPECT(0x6d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00C2
        gbc.setState(0x65f1, 0xfe55, 0xa250, 0xee64, 0x6fab, 0x845, 0x0, 0x1);
        gbc.writeMem(0x65f1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfe55, gbc.sp());
        EXPECT(0x65f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00C3
        gbc.setState(0xefef, 0x6600, 0xdf30, 0xa33, 0xcd65, 0x434, 0x0, 0x0);
        gbc.writeMem(0xefef, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6600, gbc.sp());
        EXPECT(0xeff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefef));
        EXPECT(0xcb, gbc.readMem(0xeff0));
        // CB CB 00C4
        gbc.setState(0x2f78, 0x9d05, 0x6bb0, 0x9cda, 0xc37f, 0xfa55, 0x0, 0x1);
        gbc.writeMem(0x2f78, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9d05, gbc.sp());
        EXPECT(0x2f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00C5
        gbc.setState(0x2242, 0xe171, 0x160, 0x6297, 0xb5b5, 0x35d1, 0x0, 0x0);
        gbc.writeMem(0x2242, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe171, gbc.sp());
        EXPECT(0x2244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00C6
        gbc.setState(0x16cc, 0x203e, 0xcb00, 0x4276, 0x39d9, 0xd381, 0x1, 0x0);
        gbc.writeMem(0x16cc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x203e, gbc.sp());
        EXPECT(0x16ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00C7
        gbc.setState(0x2121, 0x3e10, 0xc720, 0x6be, 0xb14d, 0x4942, 0x0, 0x0);
        gbc.writeMem(0x2121, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3e10, gbc.sp());
        EXPECT(0x2123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00C8
        gbc.setState(0x148d, 0x133c, 0x9d40, 0x95f9, 0x7e0b, 0xd794, 0x1, 0x0);
        gbc.writeMem(0x148d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x133c, gbc.sp());
        EXPECT(0x148f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00C9
        gbc.setState(0xaf18, 0x73a6, 0xdc0, 0xe490, 0xa058, 0x8fb7, 0x1, 0x1);
        gbc.writeMem(0xaf18, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x73a6, gbc.sp());
        EXPECT(0xaf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf18));
        EXPECT(0xcb, gbc.readMem(0xaf19));
        // CB CB 00CA
        gbc.setState(0xb93a, 0x53eb, 0x2050, 0x9fc1, 0x231f, 0xe9e9, 0x1, 0x1);
        gbc.writeMem(0xb93a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x53eb, gbc.sp());
        EXPECT(0xb93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93a));
        EXPECT(0xcb, gbc.readMem(0xb93b));
        // CB CB 00CB
        gbc.setState(0xdd9f, 0xe1b3, 0x9b60, 0xd70e, 0x9e81, 0xe4a9, 0x0, 0x0);
        gbc.writeMem(0xdd9f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe1b3, gbc.sp());
        EXPECT(0xdda1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd9f));
        EXPECT(0xcb, gbc.readMem(0xdda0));
        // CB CB 00CC
        gbc.setState(0xa9bf, 0xadac, 0x3ca0, 0xa008, 0x8f04, 0x7f3d, 0x1, 0x0);
        gbc.writeMem(0xa9bf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xadac, gbc.sp());
        EXPECT(0xa9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9bf));
        EXPECT(0xcb, gbc.readMem(0xa9c0));
        // CB CB 00CD
        gbc.setState(0xc6, 0x79cb, 0x6db0, 0xff0e, 0x579f, 0xca37, 0x1, 0x0);
        gbc.writeMem(0xc6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x79cb, gbc.sp());
        EXPECT(0xc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00CF
        gbc.setState(0xe19b, 0xbd0b, 0x9e90, 0x35ca, 0xbb18, 0xd5b9, 0x0, 0x1);
        gbc.writeMem(0xe19b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbd0b, gbc.sp());
        EXPECT(0xe19d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe19b));
        EXPECT(0xcb, gbc.readMem(0xe19c));
        // CB CB 00D0
        gbc.setState(0xef39, 0xabe7, 0x3f80, 0x9fc6, 0x8aa1, 0x4214, 0x0, 0x1);
        gbc.writeMem(0xef39, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xabe7, gbc.sp());
        EXPECT(0xef3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef39));
        EXPECT(0xcb, gbc.readMem(0xef3a));
        // CB CB 00D1
        gbc.setState(0x2fa5, 0x3997, 0xb210, 0x29b3, 0x8dc6, 0x95b6, 0x1, 0x0);
        gbc.writeMem(0x2fa5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3997, gbc.sp());
        EXPECT(0x2fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00D2
        gbc.setState(0x1035, 0xb18, 0x8330, 0x40e4, 0xb99b, 0x7aa1, 0x1, 0x0);
        gbc.writeMem(0x1035, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb18, gbc.sp());
        EXPECT(0x1037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00D3
        gbc.setState(0x9aa6, 0x17f1, 0xe90, 0xd8ca, 0x1ed0, 0x3b2f, 0x0, 0x0);
        gbc.writeMem(0x9aa6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x17f1, gbc.sp());
        EXPECT(0x9aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa6));
        EXPECT(0xcb, gbc.readMem(0x9aa7));
        // CB CB 00D4
        gbc.setState(0x6a8e, 0x2133, 0x4700, 0xc7aa, 0x387c, 0x9e07, 0x0, 0x1);
        gbc.writeMem(0x6a8e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2133, gbc.sp());
        EXPECT(0x6a90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00D5
        gbc.setState(0x613a, 0x64cb, 0x5c70, 0x9add, 0xe106, 0x6f77, 0x1, 0x1);
        gbc.writeMem(0x613a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x64cb, gbc.sp());
        EXPECT(0x613c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00D6
        gbc.setState(0x355e, 0x5dca, 0x3de0, 0xb886, 0x5cc3, 0xd4e2, 0x0, 0x1);
        gbc.writeMem(0x355e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5dca, gbc.sp());
        EXPECT(0x3560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00D7
        gbc.setState(0x4cc6, 0xe953, 0xcae0, 0xd70e, 0x1f66, 0xd6a, 0x0, 0x0);
        gbc.writeMem(0x4cc6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe953, gbc.sp());
        EXPECT(0x4cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00D8
        gbc.setState(0xbf78, 0x7761, 0x340, 0x9bca, 0xaedb, 0xd3fb, 0x1, 0x0);
        gbc.writeMem(0xbf78, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7761, gbc.sp());
        EXPECT(0xbf7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf78));
        EXPECT(0xcb, gbc.readMem(0xbf79));
        // CB CB 00D9
        gbc.setState(0xe83, 0x375d, 0x2870, 0x7adb, 0xc4ba, 0xcd75, 0x0, 0x1);
        gbc.writeMem(0xe83, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x375d, gbc.sp());
        EXPECT(0xe85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00DA
        gbc.setState(0x6073, 0xcfc5, 0x2f40, 0x676, 0x32a4, 0x1d7a, 0x0, 0x1);
        gbc.writeMem(0x6073, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcfc5, gbc.sp());
        EXPECT(0x6075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00DB
        gbc.setState(0x2fa2, 0xb299, 0xe0f0, 0xb5cc, 0xb1c4, 0xcf6d, 0x0, 0x1);
        gbc.writeMem(0x2fa2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb299, gbc.sp());
        EXPECT(0x2fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00DC
        gbc.setState(0xed65, 0xedef, 0x63a0, 0xf0cd, 0x1a0f, 0x66a0, 0x1, 0x1);
        gbc.writeMem(0xed65, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xedef, gbc.sp());
        EXPECT(0xed67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed65));
        EXPECT(0xcb, gbc.readMem(0xed66));
        // CB CB 00DD
        gbc.setState(0xaf35, 0x8753, 0x6c10, 0x4dfb, 0x38c6, 0x13f7, 0x1, 0x1);
        gbc.writeMem(0xaf35, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8753, gbc.sp());
        EXPECT(0xaf37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf35));
        EXPECT(0xcb, gbc.readMem(0xaf36));
        // CB CB 00DE
        gbc.setState(0x1db5, 0xc496, 0x4b10, 0xc4ad, 0xfb07, 0xfb5e, 0x1, 0x1);
        gbc.writeMem(0x1db5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc496, gbc.sp());
        EXPECT(0x1db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00DF
        gbc.setState(0xdc65, 0x5eed, 0x2200, 0xc515, 0x57a0, 0x179e, 0x1, 0x0);
        gbc.writeMem(0xdc65, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5eed, gbc.sp());
        EXPECT(0xdc67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc65));
        EXPECT(0xcb, gbc.readMem(0xdc66));
        // CB CB 00E0
        gbc.setState(0x237a, 0x8af4, 0x8fb0, 0xb83e, 0x58c9, 0x3ac9, 0x0, 0x0);
        gbc.writeMem(0x237a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8af4, gbc.sp());
        EXPECT(0x237c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00E1
        gbc.setState(0x66a0, 0x4dfd, 0x4350, 0x70c2, 0x2b1a, 0x81fd, 0x0, 0x1);
        gbc.writeMem(0x66a0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4dfd, gbc.sp());
        EXPECT(0x66a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00E2
        gbc.setState(0x3666, 0x5a52, 0x2050, 0x9a4c, 0xec82, 0x770d, 0x1, 0x0);
        gbc.writeMem(0x3666, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5a52, gbc.sp());
        EXPECT(0x3668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00E3
        gbc.setState(0x8a2c, 0x5719, 0xdb10, 0x1110, 0x39ea, 0x7027, 0x1, 0x1);
        gbc.writeMem(0x8a2c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5719, gbc.sp());
        EXPECT(0x8a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2c));
        EXPECT(0xcb, gbc.readMem(0x8a2d));
        // CB CB 00E4
        gbc.setState(0xb940, 0xe5f9, 0xa3c0, 0x7df2, 0x93fb, 0xef26, 0x0, 0x0);
        gbc.writeMem(0xb940, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe5f9, gbc.sp());
        EXPECT(0xb942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb940));
        EXPECT(0xcb, gbc.readMem(0xb941));
        // CB CB 00E5
        gbc.setState(0x7199, 0x4ea3, 0x9050, 0xd818, 0x8d31, 0x9d21, 0x1, 0x0);
        gbc.writeMem(0x7199, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4ea3, gbc.sp());
        EXPECT(0x719b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00E6
        gbc.setState(0x8a0d, 0x2787, 0x6c70, 0xee0c, 0xa48b, 0x97a3, 0x0, 0x1);
        gbc.writeMem(0x8a0d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2787, gbc.sp());
        EXPECT(0x8a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a0d));
        EXPECT(0xcb, gbc.readMem(0x8a0e));
        // CB CB 00E7
        gbc.setState(0x5b15, 0xe5a9, 0x72e0, 0x128e, 0xe170, 0xf3fb, 0x0, 0x0);
        gbc.writeMem(0x5b15, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe5a9, gbc.sp());
        EXPECT(0x5b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00E9
        gbc.setState(0x48e2, 0xb7e9, 0x5880, 0xa5bd, 0xcb8d, 0xeed9, 0x0, 0x1);
        gbc.writeMem(0x48e2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb7e9, gbc.sp());
        EXPECT(0x48e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00EA
        gbc.setState(0x7116, 0xbe51, 0xc370, 0x488d, 0xa907, 0xa4fe, 0x1, 0x1);
        gbc.writeMem(0x7116, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xbe51, gbc.sp());
        EXPECT(0x7118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00EB
        gbc.setState(0x85aa, 0x5652, 0xcc90, 0xc239, 0x8e35, 0x9f8f, 0x0, 0x0);
        gbc.writeMem(0x85aa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5652, gbc.sp());
        EXPECT(0x85ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85aa));
        EXPECT(0xcb, gbc.readMem(0x85ab));
        // CB CB 00EC
        gbc.setState(0x9cf7, 0x8488, 0x2cd0, 0x1e83, 0x5391, 0xbb6, 0x0, 0x0);
        gbc.writeMem(0x9cf7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8488, gbc.sp());
        EXPECT(0x9cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf7));
        EXPECT(0xcb, gbc.readMem(0x9cf8));
        // CB CB 00ED
        gbc.setState(0xdcfe, 0xd93e, 0xaba0, 0xf30a, 0x80c8, 0xcbb8, 0x0, 0x1);
        gbc.writeMem(0xdcfe, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd93e, gbc.sp());
        EXPECT(0xdd00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcfe));
        EXPECT(0xcb, gbc.readMem(0xdcff));
        // CB CB 00EF
        gbc.setState(0xdc58, 0x841a, 0x54f0, 0xaae3, 0xc549, 0x7fe, 0x1, 0x0);
        gbc.writeMem(0xdc58, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x841a, gbc.sp());
        EXPECT(0xdc5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc58));
        EXPECT(0xcb, gbc.readMem(0xdc59));
        // CB CB 00F0
        gbc.setState(0x3196, 0xb7af, 0x4ef0, 0xe38b, 0xdbeb, 0xca37, 0x1, 0x1);
        gbc.writeMem(0x3196, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb7af, gbc.sp());
        EXPECT(0x3198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00F1
        gbc.setState(0x5f4b, 0x1a92, 0xd7c0, 0xc389, 0xbc8b, 0x5a3c, 0x0, 0x0);
        gbc.writeMem(0x5f4b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1a92, gbc.sp());
        EXPECT(0x5f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00F2
        gbc.setState(0x2089, 0xd28b, 0xda70, 0x8042, 0x74d7, 0x596c, 0x0, 0x1);
        gbc.writeMem(0x2089, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd28b, gbc.sp());
        EXPECT(0x208b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00F3
        gbc.setState(0x4fd2, 0x86e3, 0x81a0, 0x2de5, 0x66dc, 0xd744, 0x1, 0x0);
        gbc.writeMem(0x4fd2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x86e3, gbc.sp());
        EXPECT(0x4fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00F4
        gbc.setState(0x7d2d, 0x532, 0x3ea0, 0x3375, 0xbaf3, 0xfb63, 0x0, 0x1);
        gbc.writeMem(0x7d2d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x532, gbc.sp());
        EXPECT(0x7d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00F5
        gbc.setState(0x7d0, 0xbe2d, 0xeb40, 0x9348, 0xde6f, 0x40e0, 0x1, 0x1);
        gbc.writeMem(0x7d0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbe2d, gbc.sp());
        EXPECT(0x7d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00F6
        gbc.setState(0x3d81, 0xc789, 0x3420, 0xab16, 0x5ef6, 0x7d90, 0x0, 0x0);
        gbc.writeMem(0x3d81, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc789, gbc.sp());
        EXPECT(0x3d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00F7
        gbc.setState(0xb86, 0x6696, 0x2dc0, 0x424a, 0x4a21, 0x9e0f, 0x0, 0x1);
        gbc.writeMem(0xb86, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6696, gbc.sp());
        EXPECT(0xb88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00F8
        gbc.setState(0xd7e4, 0x1974, 0x5170, 0x3310, 0x65db, 0x55ea, 0x0, 0x1);
        gbc.writeMem(0xd7e4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1974, gbc.sp());
        EXPECT(0xd7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e4));
        EXPECT(0xcb, gbc.readMem(0xd7e5));
        // CB CB 00F9
        gbc.setState(0xa205, 0xdc04, 0x4e00, 0xf37, 0x2c89, 0xb56f, 0x1, 0x1);
        gbc.writeMem(0xa205, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdc04, gbc.sp());
        EXPECT(0xa207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa205));
        EXPECT(0xcb, gbc.readMem(0xa206));
        // CB CB 00FA
        gbc.setState(0x7b9d, 0x54fb, 0x8f00, 0x866d, 0x1610, 0x47e6, 0x0, 0x1);
        gbc.writeMem(0x7b9d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x54fb, gbc.sp());
        EXPECT(0x7b9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00FB
        gbc.setState(0x49a1, 0x364, 0x8d10, 0x1104, 0x668c, 0xfe81, 0x0, 0x0);
        gbc.writeMem(0x49a1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x364, gbc.sp());
        EXPECT(0x49a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00FC
        gbc.setState(0x2dd4, 0x4da3, 0xd680, 0x97a2, 0x53e1, 0xc1e6, 0x0, 0x1);
        gbc.writeMem(0x2dd4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4da3, gbc.sp());
        EXPECT(0x2dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 00FD
        gbc.setState(0x68ad, 0xffe1, 0x5cd0, 0x358d, 0x2af0, 0xaa29, 0x1, 0x0);
        gbc.writeMem(0x68ad, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xffe1, gbc.sp());
        EXPECT(0x68af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00FE
        gbc.setState(0x2544, 0x8ed6, 0x5f10, 0x21cd, 0x49df, 0x98a4, 0x0, 0x1);
        gbc.writeMem(0x2544, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8ed6, gbc.sp());
        EXPECT(0x2546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 00FF
        gbc.setState(0x17ff, 0xe58f, 0x63c0, 0x9323, 0x2be7, 0xd013, 0x1, 0x0);
        gbc.writeMem(0x17ff, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe58f, gbc.sp());
        EXPECT(0x1801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0100
        gbc.setState(0xf15, 0xa7b1, 0xbd80, 0x79ea, 0x65e4, 0xadbb, 0x1, 0x0);
        gbc.writeMem(0xf15, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa7b1, gbc.sp());
        EXPECT(0xf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0101
        gbc.setState(0x452b, 0x23d9, 0xf280, 0x575, 0x9eec, 0x4e81, 0x0, 0x1);
        gbc.writeMem(0x452b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x23d9, gbc.sp());
        EXPECT(0x452d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0102
        gbc.setState(0x41ed, 0x250e, 0x1310, 0xc094, 0xd13c, 0x8ea4, 0x0, 0x0);
        gbc.writeMem(0x41ed, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x250e, gbc.sp());
        EXPECT(0x41ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0103
        gbc.setState(0xf7c, 0x8ad2, 0xb2d0, 0x916c, 0x5a9e, 0xad32, 0x1, 0x1);
        gbc.writeMem(0xf7c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8ad2, gbc.sp());
        EXPECT(0xf7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0104
        gbc.setState(0x8b, 0xa2b6, 0xbcf0, 0x835e, 0xda04, 0xae6c, 0x1, 0x1);
        gbc.writeMem(0x8b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa2b6, gbc.sp());
        EXPECT(0x8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0105
        gbc.setState(0xc83e, 0x682e, 0xcb60, 0x4745, 0x428f, 0x72bf, 0x0, 0x1);
        gbc.writeMem(0xc83e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x682e, gbc.sp());
        EXPECT(0xc840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc83e));
        EXPECT(0xcb, gbc.readMem(0xc83f));
        // CB CB 0106
        gbc.setState(0x458, 0x2d66, 0x2050, 0x324c, 0xfef1, 0xf27a, 0x0, 0x0);
        gbc.writeMem(0x458, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2d66, gbc.sp());
        EXPECT(0x45a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0107
        gbc.setState(0x85d2, 0x34cc, 0xddc0, 0x5397, 0x3d94, 0xc07a, 0x1, 0x0);
        gbc.writeMem(0x85d2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x34cc, gbc.sp());
        EXPECT(0x85d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d2));
        EXPECT(0xcb, gbc.readMem(0x85d3));
        // CB CB 0108
        gbc.setState(0x5f31, 0xde1f, 0xff0, 0xbbab, 0x8f34, 0x8486, 0x1, 0x0);
        gbc.writeMem(0x5f31, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xde1f, gbc.sp());
        EXPECT(0x5f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0109
        gbc.setState(0xa2e7, 0xbe73, 0x6d10, 0x8907, 0x8d85, 0xad97, 0x0, 0x1);
        gbc.writeMem(0xa2e7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbe73, gbc.sp());
        EXPECT(0xa2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e7));
        EXPECT(0xcb, gbc.readMem(0xa2e8));
        // CB CB 010A
        gbc.setState(0x79c4, 0xe502, 0x8160, 0xa7b3, 0xa818, 0xa82d, 0x0, 0x1);
        gbc.writeMem(0x79c4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe502, gbc.sp());
        EXPECT(0x79c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 010B
        gbc.setState(0xe5a6, 0xdf1b, 0xb5b0, 0x88c6, 0xc16d, 0xa44, 0x0, 0x1);
        gbc.writeMem(0xe5a6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdf1b, gbc.sp());
        EXPECT(0xe5a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a6));
        EXPECT(0xcb, gbc.readMem(0xe5a7));
        // CB CB 010D
        gbc.setState(0xabcc, 0x578e, 0xa010, 0xb5ed, 0xc90b, 0x8340, 0x0, 0x1);
        gbc.writeMem(0xabcc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x578e, gbc.sp());
        EXPECT(0xabce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcc));
        EXPECT(0xcb, gbc.readMem(0xabcd));
        // CB CB 010E
        gbc.setState(0xdcdf, 0x2085, 0xf720, 0x785d, 0xbbde, 0xea93, 0x0, 0x1);
        gbc.writeMem(0xdcdf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2085, gbc.sp());
        EXPECT(0xdce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcdf));
        EXPECT(0xcb, gbc.readMem(0xdce0));
        // CB CB 010F
        gbc.setState(0xa7f2, 0xe069, 0x8220, 0xf3c8, 0x9866, 0x9d11, 0x1, 0x1);
        gbc.writeMem(0xa7f2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe069, gbc.sp());
        EXPECT(0xa7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f2));
        EXPECT(0xcb, gbc.readMem(0xa7f3));
        // CB CB 0110
        gbc.setState(0x5533, 0x94db, 0x8300, 0x8e6a, 0x33e5, 0x867f, 0x1, 0x0);
        gbc.writeMem(0x5533, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x94db, gbc.sp());
        EXPECT(0x5535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0111
        gbc.setState(0x2bf1, 0x3686, 0xc200, 0xb15c, 0xd26e, 0xc776, 0x0, 0x0);
        gbc.writeMem(0x2bf1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3686, gbc.sp());
        EXPECT(0x2bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0112
        gbc.setState(0x4562, 0x4f08, 0x3d10, 0x5107, 0x1972, 0x18d, 0x1, 0x0);
        gbc.writeMem(0x4562, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4f08, gbc.sp());
        EXPECT(0x4564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0113
        gbc.setState(0x2a04, 0x6d64, 0x7420, 0x69b7, 0xdec1, 0x8667, 0x0, 0x0);
        gbc.writeMem(0x2a04, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6d64, gbc.sp());
        EXPECT(0x2a06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0114
        gbc.setState(0xcb16, 0xd047, 0xdf70, 0x41d9, 0x293a, 0x5fdd, 0x1, 0x1);
        gbc.writeMem(0xcb16, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd047, gbc.sp());
        EXPECT(0xcb18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb16));
        EXPECT(0xcb, gbc.readMem(0xcb17));
        // CB CB 0115
        gbc.setState(0x6108, 0x3d3, 0xef30, 0x2176, 0xd078, 0x5a9d, 0x1, 0x0);
        gbc.writeMem(0x6108, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3d3, gbc.sp());
        EXPECT(0x610a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0116
        gbc.setState(0xc1e0, 0x8273, 0xf600, 0x3cce, 0x316d, 0xd1f0, 0x0, 0x1);
        gbc.writeMem(0xc1e0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8273, gbc.sp());
        EXPECT(0xc1e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1e0));
        EXPECT(0xcb, gbc.readMem(0xc1e1));
        // CB CB 0117
        gbc.setState(0x95e8, 0x57a7, 0x7f0, 0xa30, 0xb6fb, 0x7c3f, 0x0, 0x1);
        gbc.writeMem(0x95e8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x57a7, gbc.sp());
        EXPECT(0x95ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e8));
        EXPECT(0xcb, gbc.readMem(0x95e9));
        // CB CB 0118
        gbc.setState(0x6c5f, 0x1a5a, 0xa7d0, 0xb08e, 0x7c3e, 0x2004, 0x0, 0x1);
        gbc.writeMem(0x6c5f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1a5a, gbc.sp());
        EXPECT(0x6c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0119
        gbc.setState(0xa717, 0xf95d, 0x6b40, 0xb4e, 0xbe2b, 0x2dcf, 0x0, 0x1);
        gbc.writeMem(0xa717, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf95d, gbc.sp());
        EXPECT(0xa719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa717));
        EXPECT(0xcb, gbc.readMem(0xa718));
        // CB CB 011A
        gbc.setState(0x2e35, 0xc0cf, 0xb2f0, 0xacb7, 0x9cb8, 0x7bd9, 0x0, 0x1);
        gbc.writeMem(0x2e35, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc0cf, gbc.sp());
        EXPECT(0x2e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 011B
        gbc.setState(0x3951, 0x5e29, 0xd510, 0x4af2, 0xcc7c, 0xb38d, 0x0, 0x0);
        gbc.writeMem(0x3951, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5e29, gbc.sp());
        EXPECT(0x3953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 011C
        gbc.setState(0xe168, 0xc65f, 0x92a0, 0xa987, 0x8a70, 0xcee7, 0x1, 0x0);
        gbc.writeMem(0xe168, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc65f, gbc.sp());
        EXPECT(0xe16a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe168));
        EXPECT(0xcb, gbc.readMem(0xe169));
        // CB CB 011D
        gbc.setState(0x9a83, 0xa67f, 0x9a10, 0xe536, 0x92e3, 0xb0e0, 0x0, 0x1);
        gbc.writeMem(0x9a83, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa67f, gbc.sp());
        EXPECT(0x9a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a83));
        EXPECT(0xcb, gbc.readMem(0x9a84));
        // CB CB 011E
        gbc.setState(0x9ae6, 0x195e, 0xc140, 0xacce, 0xae8a, 0x601, 0x1, 0x1);
        gbc.writeMem(0x9ae6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x195e, gbc.sp());
        EXPECT(0x9ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae6));
        EXPECT(0xcb, gbc.readMem(0x9ae7));
        // CB CB 011F
        gbc.setState(0x686d, 0xc35f, 0x5820, 0x5ada, 0xe4df, 0xf417, 0x1, 0x1);
        gbc.writeMem(0x686d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc35f, gbc.sp());
        EXPECT(0x686f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0120
        gbc.setState(0x3915, 0x212, 0xce00, 0xec18, 0x99a4, 0xea07, 0x1, 0x0);
        gbc.writeMem(0x3915, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x212, gbc.sp());
        EXPECT(0x3917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0121
        gbc.setState(0x1c84, 0xeb4d, 0x4800, 0x4b1e, 0xd6c8, 0xa74a, 0x0, 0x0);
        gbc.writeMem(0x1c84, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xeb4d, gbc.sp());
        EXPECT(0x1c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0122
        gbc.setState(0x250c, 0x46a5, 0x6620, 0x64b1, 0x9b78, 0x5b4b, 0x1, 0x1);
        gbc.writeMem(0x250c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x46a5, gbc.sp());
        EXPECT(0x250e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0123
        gbc.setState(0x2a1a, 0x807b, 0xad30, 0x8f4d, 0x983a, 0x324c, 0x1, 0x1);
        gbc.writeMem(0x2a1a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x807b, gbc.sp());
        EXPECT(0x2a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0124
        gbc.setState(0x9eb2, 0xa6fd, 0x650, 0xc155, 0x9cef, 0x6ea7, 0x1, 0x1);
        gbc.writeMem(0x9eb2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa6fd, gbc.sp());
        EXPECT(0x9eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb2));
        EXPECT(0xcb, gbc.readMem(0x9eb3));
        // CB CB 0126
        gbc.setState(0xa05b, 0x7daf, 0x9830, 0xf5d4, 0xd3e2, 0x9b9d, 0x0, 0x0);
        gbc.writeMem(0xa05b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7daf, gbc.sp());
        EXPECT(0xa05d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05b));
        EXPECT(0xcb, gbc.readMem(0xa05c));
        // CB CB 0127
        gbc.setState(0xadb3, 0xc869, 0xe950, 0x3823, 0xfae5, 0x8389, 0x0, 0x1);
        gbc.writeMem(0xadb3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc869, gbc.sp());
        EXPECT(0xadb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb3));
        EXPECT(0xcb, gbc.readMem(0xadb4));
        // CB CB 0128
        gbc.setState(0xa77d, 0x48fe, 0xd280, 0x52b1, 0xe58d, 0xe970, 0x0, 0x1);
        gbc.writeMem(0xa77d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x48fe, gbc.sp());
        EXPECT(0xa77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77d));
        EXPECT(0xcb, gbc.readMem(0xa77e));
        // CB CB 0129
        gbc.setState(0x62fb, 0xe6aa, 0x1e30, 0x1a, 0xcf2b, 0xdcdf, 0x1, 0x1);
        gbc.writeMem(0x62fb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe6aa, gbc.sp());
        EXPECT(0x62fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 012A
        gbc.setState(0x3e2, 0x4897, 0xec00, 0x1923, 0x1a35, 0xc56f, 0x0, 0x1);
        gbc.writeMem(0x3e2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4897, gbc.sp());
        EXPECT(0x3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 012B
        gbc.setState(0xa56a, 0x9c64, 0x3420, 0x5273, 0x2b2c, 0x6ef2, 0x1, 0x1);
        gbc.writeMem(0xa56a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9c64, gbc.sp());
        EXPECT(0xa56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa56a));
        EXPECT(0xcb, gbc.readMem(0xa56b));
        // CB CB 012C
        gbc.setState(0x9981, 0x9a9d, 0xb250, 0xb79a, 0x9898, 0xd3e7, 0x0, 0x0);
        gbc.writeMem(0x9981, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9a9d, gbc.sp());
        EXPECT(0x9983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9981));
        EXPECT(0xcb, gbc.readMem(0x9982));
        // CB CB 012D
        gbc.setState(0x9f70, 0xa4c4, 0x12a0, 0x18d1, 0xa386, 0x206e, 0x0, 0x1);
        gbc.writeMem(0x9f70, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa4c4, gbc.sp());
        EXPECT(0x9f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f70));
        EXPECT(0xcb, gbc.readMem(0x9f71));
        // CB CB 012E
        gbc.setState(0x8e9d, 0x389c, 0x48a0, 0x662e, 0x276e, 0x7e32, 0x0, 0x1);
        gbc.writeMem(0x8e9d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x389c, gbc.sp());
        EXPECT(0x8e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e9d));
        EXPECT(0xcb, gbc.readMem(0x8e9e));
        // CB CB 0130
        gbc.setState(0x3f6f, 0xb57b, 0x57f0, 0xbcc8, 0x7eaa, 0xa9f5, 0x0, 0x0);
        gbc.writeMem(0x3f6f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb57b, gbc.sp());
        EXPECT(0x3f71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0131
        gbc.setState(0xdbaa, 0xc0f2, 0xdb90, 0xaaec, 0x1745, 0x6298, 0x0, 0x0);
        gbc.writeMem(0xdbaa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc0f2, gbc.sp());
        EXPECT(0xdbac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbaa));
        EXPECT(0xcb, gbc.readMem(0xdbab));
        // CB CB 0133
        gbc.setState(0x4a30, 0xa97, 0xe1c0, 0x7ad5, 0x95, 0xeb25, 0x1, 0x0);
        gbc.writeMem(0x4a30, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa97, gbc.sp());
        EXPECT(0x4a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0134
        gbc.setState(0x2b0d, 0x42ad, 0x92f0, 0x27d9, 0x19fb, 0xec3e, 0x0, 0x0);
        gbc.writeMem(0x2b0d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x42ad, gbc.sp());
        EXPECT(0x2b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0135
        gbc.setState(0x70fa, 0xfc25, 0xb690, 0xaca2, 0x3fa0, 0xfaa, 0x1, 0x0);
        gbc.writeMem(0x70fa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfc25, gbc.sp());
        EXPECT(0x70fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0136
        gbc.setState(0x81f5, 0xf680, 0x3860, 0x9b72, 0xa2ce, 0xc5e7, 0x1, 0x1);
        gbc.writeMem(0x81f5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf680, gbc.sp());
        EXPECT(0x81f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f5));
        EXPECT(0xcb, gbc.readMem(0x81f6));
        // CB CB 0137
        gbc.setState(0x883, 0xc7d6, 0x5310, 0x7388, 0x1812, 0xe0a4, 0x1, 0x1);
        gbc.writeMem(0x883, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc7d6, gbc.sp());
        EXPECT(0x885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0138
        gbc.setState(0x42ad, 0xd41d, 0x7770, 0x948d, 0x51e3, 0x65a8, 0x1, 0x1);
        gbc.writeMem(0x42ad, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd41d, gbc.sp());
        EXPECT(0x42af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0139
        gbc.setState(0xe016, 0x2ef4, 0x8260, 0x591a, 0x13e2, 0x4fe3, 0x0, 0x1);
        gbc.writeMem(0xe016, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2ef4, gbc.sp());
        EXPECT(0xe018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe016));
        EXPECT(0xcb, gbc.readMem(0xe017));
        // CB CB 013A
        gbc.setState(0x6221, 0xa8f8, 0xc80, 0x8294, 0xdffd, 0x95a2, 0x0, 0x1);
        gbc.writeMem(0x6221, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa8f8, gbc.sp());
        EXPECT(0x6223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 013B
        gbc.setState(0xe92b, 0xe4d9, 0x7790, 0x2cad, 0x2c9d, 0x530, 0x0, 0x1);
        gbc.writeMem(0xe92b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe4d9, gbc.sp());
        EXPECT(0xe92d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe92b));
        EXPECT(0xcb, gbc.readMem(0xe92c));
        // CB CB 013C
        gbc.setState(0x4ad, 0xfc55, 0xd410, 0xb081, 0x1d11, 0xe915, 0x0, 0x1);
        gbc.writeMem(0x4ad, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfc55, gbc.sp());
        EXPECT(0x4af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 013D
        gbc.setState(0x7fac, 0x102f, 0xf030, 0xf00f, 0x2552, 0xbcc6, 0x1, 0x0);
        gbc.writeMem(0x7fac, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x102f, gbc.sp());
        EXPECT(0x7fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 013E
        gbc.setState(0xa86e, 0x955b, 0x7d60, 0x37be, 0xf273, 0x3fa4, 0x1, 0x1);
        gbc.writeMem(0xa86e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x955b, gbc.sp());
        EXPECT(0xa870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa86e));
        EXPECT(0xcb, gbc.readMem(0xa86f));
        // CB CB 013F
        gbc.setState(0x4242, 0xa2b0, 0x60e0, 0x448f, 0xd6c5, 0xf888, 0x0, 0x0);
        gbc.writeMem(0x4242, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa2b0, gbc.sp());
        EXPECT(0x4244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0140
        gbc.setState(0x42b8, 0xb59, 0x62b0, 0xf9a8, 0xe745, 0xa367, 0x0, 0x1);
        gbc.writeMem(0x42b8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb59, gbc.sp());
        EXPECT(0x42ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0141
        gbc.setState(0xac07, 0x5d7e, 0x93a0, 0xfc4d, 0xa379, 0xed93, 0x0, 0x0);
        gbc.writeMem(0xac07, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5d7e, gbc.sp());
        EXPECT(0xac09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac07));
        EXPECT(0xcb, gbc.readMem(0xac08));
        // CB CB 0142
        gbc.setState(0xce4b, 0x9773, 0x7080, 0x7f09, 0x66ea, 0x1a1f, 0x1, 0x1);
        gbc.writeMem(0xce4b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9773, gbc.sp());
        EXPECT(0xce4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce4b));
        EXPECT(0xcb, gbc.readMem(0xce4c));
        // CB CB 0143
        gbc.setState(0xd328, 0x6ba2, 0x7380, 0x1c55, 0xb20e, 0xea8d, 0x1, 0x1);
        gbc.writeMem(0xd328, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6ba2, gbc.sp());
        EXPECT(0xd32a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd328));
        EXPECT(0xcb, gbc.readMem(0xd329));
        // CB CB 0144
        gbc.setState(0x7924, 0xf48d, 0xe6c0, 0xdd72, 0xcb0f, 0xeef6, 0x0, 0x1);
        gbc.writeMem(0x7924, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf48d, gbc.sp());
        EXPECT(0x7926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0145
        gbc.setState(0x50d, 0xdb9e, 0x2270, 0x1e46, 0x8c10, 0x191c, 0x0, 0x1);
        gbc.writeMem(0x50d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdb9e, gbc.sp());
        EXPECT(0x50f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0146
        gbc.setState(0x5595, 0x7e96, 0x4170, 0x38ee, 0x1904, 0x16c2, 0x1, 0x1);
        gbc.writeMem(0x5595, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7e96, gbc.sp());
        EXPECT(0x5597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0148
        gbc.setState(0xd0e6, 0x933e, 0x4710, 0x570d, 0xc891, 0xd13f, 0x0, 0x1);
        gbc.writeMem(0xd0e6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x933e, gbc.sp());
        EXPECT(0xd0e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e6));
        EXPECT(0xcb, gbc.readMem(0xd0e7));
        // CB CB 0149
        gbc.setState(0x546f, 0x9f39, 0xfca0, 0x5744, 0xb19c, 0x2fa, 0x1, 0x1);
        gbc.writeMem(0x546f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9f39, gbc.sp());
        EXPECT(0x5471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 014A
        gbc.setState(0x2eb6, 0x148e, 0x40, 0xe249, 0x7cc1, 0x5bdb, 0x0, 0x1);
        gbc.writeMem(0x2eb6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x148e, gbc.sp());
        EXPECT(0x2eb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 014B
        gbc.setState(0x107, 0x98e4, 0x9130, 0x815f, 0xc366, 0x353e, 0x0, 0x0);
        gbc.writeMem(0x107, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x98e4, gbc.sp());
        EXPECT(0x109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 014C
        gbc.setState(0xb4b7, 0x6251, 0xed10, 0x9186, 0x9dfa, 0xc1b6, 0x0, 0x1);
        gbc.writeMem(0xb4b7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6251, gbc.sp());
        EXPECT(0xb4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b7));
        EXPECT(0xcb, gbc.readMem(0xb4b8));
        // CB CB 014D
        gbc.setState(0xaca5, 0x4ff, 0x6870, 0x87d2, 0xcd74, 0x903a, 0x0, 0x0);
        gbc.writeMem(0xaca5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4ff, gbc.sp());
        EXPECT(0xaca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca5));
        EXPECT(0xcb, gbc.readMem(0xaca6));
        // CB CB 014E
        gbc.setState(0x1e7e, 0x793b, 0x9ea0, 0x49a0, 0x4649, 0x3d69, 0x1, 0x0);
        gbc.writeMem(0x1e7e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x793b, gbc.sp());
        EXPECT(0x1e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0150
        gbc.setState(0xbac4, 0xbbe2, 0x4f40, 0xa885, 0xbc9b, 0x13e2, 0x0, 0x1);
        gbc.writeMem(0xbac4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbbe2, gbc.sp());
        EXPECT(0xbac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac4));
        EXPECT(0xcb, gbc.readMem(0xbac5));
        // CB CB 0151
        gbc.setState(0x4616, 0xef4c, 0x3ad0, 0xb65e, 0x42cc, 0x42d4, 0x0, 0x0);
        gbc.writeMem(0x4616, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xef4c, gbc.sp());
        EXPECT(0x4618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0152
        gbc.setState(0xef72, 0xcf65, 0xc190, 0xcda, 0x2e14, 0x3329, 0x0, 0x1);
        gbc.writeMem(0xef72, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcf65, gbc.sp());
        EXPECT(0xef74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef72));
        EXPECT(0xcb, gbc.readMem(0xef73));
        // CB CB 0153
        gbc.setState(0x596c, 0xf2fc, 0x89e0, 0xbe65, 0x607, 0x55e, 0x1, 0x0);
        gbc.writeMem(0x596c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf2fc, gbc.sp());
        EXPECT(0x596e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0154
        gbc.setState(0xcf7, 0xd8fd, 0x4f20, 0x2c36, 0x8d6f, 0x4216, 0x0, 0x0);
        gbc.writeMem(0xcf7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd8fd, gbc.sp());
        EXPECT(0xcf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0155
        gbc.setState(0xa80f, 0x650e, 0x7dd0, 0xd9f3, 0x5b6, 0x70a4, 0x0, 0x0);
        gbc.writeMem(0xa80f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x650e, gbc.sp());
        EXPECT(0xa811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80f));
        EXPECT(0xcb, gbc.readMem(0xa810));
        // CB CB 0156
        gbc.setState(0x53fe, 0xb1b7, 0x6910, 0x5162, 0xf2f2, 0x5e94, 0x0, 0x1);
        gbc.writeMem(0x53fe, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb1b7, gbc.sp());
        EXPECT(0x5400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0157
        gbc.setState(0xd42a, 0x282d, 0x9b90, 0x6934, 0x7d6c, 0xa124, 0x0, 0x1);
        gbc.writeMem(0xd42a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x282d, gbc.sp());
        EXPECT(0xd42c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd42a));
        EXPECT(0xcb, gbc.readMem(0xd42b));
        // CB CB 0158
        gbc.setState(0xafef, 0x9697, 0xa230, 0xf32e, 0xde21, 0x5943, 0x0, 0x0);
        gbc.writeMem(0xafef, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9697, gbc.sp());
        EXPECT(0xaff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafef));
        EXPECT(0xcb, gbc.readMem(0xaff0));
        // CB CB 0159
        gbc.setState(0xbad8, 0x81eb, 0x4720, 0x4f01, 0xab66, 0xccec, 0x1, 0x0);
        gbc.writeMem(0xbad8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x81eb, gbc.sp());
        EXPECT(0xbada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad8));
        EXPECT(0xcb, gbc.readMem(0xbad9));
        // CB CB 015C
        gbc.setState(0x990e, 0xa6b2, 0x7d20, 0x2625, 0x92cf, 0xbd5, 0x0, 0x1);
        gbc.writeMem(0x990e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa6b2, gbc.sp());
        EXPECT(0x9910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990e));
        EXPECT(0xcb, gbc.readMem(0x990f));
        // CB CB 015D
        gbc.setState(0xddfb, 0x31f, 0x39f0, 0x599e, 0xa2c7, 0x4882, 0x1, 0x1);
        gbc.writeMem(0xddfb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x31f, gbc.sp());
        EXPECT(0xddfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddfb));
        EXPECT(0xcb, gbc.readMem(0xddfc));
        // CB CB 015E
        gbc.setState(0x7068, 0xd033, 0xa2b0, 0x84b9, 0x88cf, 0x180b, 0x1, 0x1);
        gbc.writeMem(0x7068, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd033, gbc.sp());
        EXPECT(0x706a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0160
        gbc.setState(0xaf75, 0xbc73, 0x9280, 0x17d4, 0x9b8e, 0xae12, 0x1, 0x1);
        gbc.writeMem(0xaf75, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbc73, gbc.sp());
        EXPECT(0xaf77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf75));
        EXPECT(0xcb, gbc.readMem(0xaf76));
        // CB CB 0161
        gbc.setState(0x8f71, 0xf42b, 0xff50, 0x94e6, 0x8fa7, 0x457f, 0x1, 0x0);
        gbc.writeMem(0x8f71, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf42b, gbc.sp());
        EXPECT(0x8f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f71));
        EXPECT(0xcb, gbc.readMem(0x8f72));
        // CB CB 0162
        gbc.setState(0xa2b9, 0x22bf, 0xdee0, 0x6674, 0x8a2, 0x713f, 0x0, 0x1);
        gbc.writeMem(0xa2b9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x22bf, gbc.sp());
        EXPECT(0xa2bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b9));
        EXPECT(0xcb, gbc.readMem(0xa2ba));
        // CB CB 0163
        gbc.setState(0xeefd, 0x79b8, 0x8460, 0x5f70, 0x3c49, 0xc62a, 0x0, 0x1);
        gbc.writeMem(0xeefd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x79b8, gbc.sp());
        EXPECT(0xeeff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeefd));
        EXPECT(0xcb, gbc.readMem(0xeefe));
        // CB CB 0164
        gbc.setState(0x39ee, 0x104f, 0xe860, 0x8d3e, 0xf098, 0xea9a, 0x0, 0x0);
        gbc.writeMem(0x39ee, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x104f, gbc.sp());
        EXPECT(0x39f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0165
        gbc.setState(0xade7, 0xcbf1, 0xe2e0, 0x9c33, 0x98e5, 0x6a1a, 0x0, 0x1);
        gbc.writeMem(0xade7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcbf1, gbc.sp());
        EXPECT(0xade9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade7));
        EXPECT(0xcb, gbc.readMem(0xade8));
        // CB CB 0166
        gbc.setState(0x84ba, 0x332, 0x2780, 0x2c85, 0x7f61, 0xd762, 0x1, 0x1);
        gbc.writeMem(0x84ba, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x332, gbc.sp());
        EXPECT(0x84bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ba));
        EXPECT(0xcb, gbc.readMem(0x84bb));
        // CB CB 0167
        gbc.setState(0xde58, 0x8c85, 0xa160, 0x1d1b, 0x6c3b, 0x2d30, 0x0, 0x0);
        gbc.writeMem(0xde58, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8c85, gbc.sp());
        EXPECT(0xde5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde58));
        EXPECT(0xcb, gbc.readMem(0xde59));
        // CB CB 0169
        gbc.setState(0x3dd5, 0x7d5a, 0xc270, 0xc91d, 0xa8d2, 0x1ec5, 0x1, 0x1);
        gbc.writeMem(0x3dd5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7d5a, gbc.sp());
        EXPECT(0x3dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 016A
        gbc.setState(0xb13e, 0x3903, 0xdc00, 0x3257, 0x6d71, 0x9924, 0x0, 0x0);
        gbc.writeMem(0xb13e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3903, gbc.sp());
        EXPECT(0xb140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb13e));
        EXPECT(0xcb, gbc.readMem(0xb13f));
        // CB CB 016B
        gbc.setState(0x5677, 0xe13d, 0x8410, 0xdaa0, 0x6a60, 0xd3f1, 0x0, 0x0);
        gbc.writeMem(0x5677, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe13d, gbc.sp());
        EXPECT(0x5679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 016C
        gbc.setState(0x735c, 0x9d2, 0x1c80, 0x5c65, 0x9e32, 0x1c72, 0x1, 0x0);
        gbc.writeMem(0x735c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9d2, gbc.sp());
        EXPECT(0x735e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 016D
        gbc.setState(0x9b9d, 0xc419, 0x4900, 0x3dcf, 0x6b9e, 0xd82a, 0x0, 0x1);
        gbc.writeMem(0x9b9d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc419, gbc.sp());
        EXPECT(0x9b9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b9d));
        EXPECT(0xcb, gbc.readMem(0x9b9e));
        // CB CB 016E
        gbc.setState(0xca17, 0x7876, 0xaf40, 0xd2f1, 0x6ac0, 0x788c, 0x0, 0x0);
        gbc.writeMem(0xca17, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7876, gbc.sp());
        EXPECT(0xca19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca17));
        EXPECT(0xcb, gbc.readMem(0xca18));
        // CB CB 016F
        gbc.setState(0x680f, 0xa6ba, 0xebb0, 0x1dbf, 0x8834, 0xc7d2, 0x1, 0x1);
        gbc.writeMem(0x680f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa6ba, gbc.sp());
        EXPECT(0x6811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0170
        gbc.setState(0x6f0b, 0xa94c, 0x74a0, 0x8f87, 0xdb2c, 0xf7b3, 0x0, 0x0);
        gbc.writeMem(0x6f0b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa94c, gbc.sp());
        EXPECT(0x6f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0171
        gbc.setState(0xe279, 0x6038, 0xe30, 0xaeb8, 0xd041, 0xe7ca, 0x1, 0x1);
        gbc.writeMem(0xe279, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6038, gbc.sp());
        EXPECT(0xe27b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe279));
        EXPECT(0xcb, gbc.readMem(0xe27a));
        // CB CB 0172
        gbc.setState(0x2d1e, 0x3a60, 0xce80, 0x3a5a, 0xa4cd, 0x7e97, 0x1, 0x1);
        gbc.writeMem(0x2d1e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3a60, gbc.sp());
        EXPECT(0x2d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0173
        gbc.setState(0x36fb, 0xa8cc, 0x2420, 0x7a43, 0x10c4, 0x91bb, 0x0, 0x1);
        gbc.writeMem(0x36fb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa8cc, gbc.sp());
        EXPECT(0x36fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0174
        gbc.setState(0x31d0, 0x941c, 0x9f40, 0x14f3, 0x33f, 0x948c, 0x1, 0x1);
        gbc.writeMem(0x31d0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x941c, gbc.sp());
        EXPECT(0x31d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0176
        gbc.setState(0xc56c, 0xa791, 0xba10, 0xe37a, 0x5354, 0xbbf5, 0x1, 0x0);
        gbc.writeMem(0xc56c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa791, gbc.sp());
        EXPECT(0xc56e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56c));
        EXPECT(0xcb, gbc.readMem(0xc56d));
        // CB CB 0177
        gbc.setState(0x6985, 0x520, 0xa310, 0xd018, 0xca3d, 0x4412, 0x1, 0x0);
        gbc.writeMem(0x6985, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x520, gbc.sp());
        EXPECT(0x6987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0178
        gbc.setState(0x3833, 0xb9f1, 0xccd0, 0x4fca, 0x9a4d, 0xf420, 0x1, 0x1);
        gbc.writeMem(0x3833, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb9f1, gbc.sp());
        EXPECT(0x3835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0179
        gbc.setState(0x66e9, 0xf00a, 0x4350, 0x77d3, 0x2054, 0xb4a, 0x1, 0x1);
        gbc.writeMem(0x66e9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf00a, gbc.sp());
        EXPECT(0x66eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 017A
        gbc.setState(0x4b03, 0x9b7c, 0x1010, 0xb696, 0x3c04, 0x8fd7, 0x1, 0x1);
        gbc.writeMem(0x4b03, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9b7c, gbc.sp());
        EXPECT(0x4b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 017B
        gbc.setState(0xbe0d, 0xf7f4, 0x1b20, 0xeaa7, 0x582d, 0x17d, 0x1, 0x0);
        gbc.writeMem(0xbe0d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf7f4, gbc.sp());
        EXPECT(0xbe0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe0d));
        EXPECT(0xcb, gbc.readMem(0xbe0e));
        // CB CB 017C
        gbc.setState(0xb09c, 0x6d43, 0xd770, 0xe504, 0xf7a1, 0x9342, 0x1, 0x0);
        gbc.writeMem(0xb09c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6d43, gbc.sp());
        EXPECT(0xb09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09c));
        EXPECT(0xcb, gbc.readMem(0xb09d));
        // CB CB 017D
        gbc.setState(0x89f0, 0xa3a0, 0x58f0, 0x8c2d, 0xca9b, 0x187d, 0x0, 0x0);
        gbc.writeMem(0x89f0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa3a0, gbc.sp());
        EXPECT(0x89f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89f0));
        EXPECT(0xcb, gbc.readMem(0x89f1));
        // CB CB 017E
        gbc.setState(0xddf0, 0x593f, 0x6c30, 0xccde, 0x3ecc, 0x3829, 0x1, 0x1);
        gbc.writeMem(0xddf0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x593f, gbc.sp());
        EXPECT(0xddf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf0));
        EXPECT(0xcb, gbc.readMem(0xddf1));
        // CB CB 0180
        gbc.setState(0xe45c, 0xdda5, 0xe900, 0x8782, 0x5459, 0xb6c5, 0x1, 0x1);
        gbc.writeMem(0xe45c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdda5, gbc.sp());
        EXPECT(0xe45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe45c));
        EXPECT(0xcb, gbc.readMem(0xe45d));
        // CB CB 0181
        gbc.setState(0x7918, 0x9dc2, 0x9490, 0x6169, 0x99bc, 0xf946, 0x1, 0x1);
        gbc.writeMem(0x7918, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9dc2, gbc.sp());
        EXPECT(0x791a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0182
        gbc.setState(0x3e8e, 0x4c01, 0xa7f0, 0xf9e8, 0x486a, 0x2997, 0x0, 0x1);
        gbc.writeMem(0x3e8e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4c01, gbc.sp());
        EXPECT(0x3e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0183
        gbc.setState(0xdc5e, 0x6400, 0xd7d0, 0x4b3a, 0x661d, 0x2d27, 0x0, 0x1);
        gbc.writeMem(0xdc5e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6400, gbc.sp());
        EXPECT(0xdc60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc5e));
        EXPECT(0xcb, gbc.readMem(0xdc5f));
        // CB CB 0184
        gbc.setState(0x24ef, 0x9538, 0xea40, 0xbf7a, 0x969f, 0x94c8, 0x0, 0x1);
        gbc.writeMem(0x24ef, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9538, gbc.sp());
        EXPECT(0x24f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0185
        gbc.setState(0xd259, 0x3dad, 0xea80, 0x3335, 0xfdf0, 0x81ec, 0x0, 0x0);
        gbc.writeMem(0xd259, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3dad, gbc.sp());
        EXPECT(0xd25b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd259));
        EXPECT(0xcb, gbc.readMem(0xd25a));
        // CB CB 0186
        gbc.setState(0x16b5, 0x46f1, 0x2790, 0x282a, 0xd377, 0xc6b1, 0x0, 0x1);
        gbc.writeMem(0x16b5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x46f1, gbc.sp());
        EXPECT(0x16b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0187
        gbc.setState(0x4c8d, 0xcfe1, 0x9950, 0xd0cb, 0x62a1, 0xec82, 0x0, 0x1);
        gbc.writeMem(0x4c8d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcfe1, gbc.sp());
        EXPECT(0x4c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0188
        gbc.setState(0x58a4, 0xac0a, 0x40e0, 0x3812, 0xe89, 0x5b3b, 0x0, 0x0);
        gbc.writeMem(0x58a4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xac0a, gbc.sp());
        EXPECT(0x58a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 018A
        gbc.setState(0x2b83, 0xd2c, 0x5a50, 0x9f9f, 0xc946, 0x4add, 0x0, 0x1);
        gbc.writeMem(0x2b83, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd2c, gbc.sp());
        EXPECT(0x2b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 018B
        gbc.setState(0x272e, 0x792e, 0x4ba0, 0xab68, 0x25ec, 0xd5d1, 0x1, 0x1);
        gbc.writeMem(0x272e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x792e, gbc.sp());
        EXPECT(0x2730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 018C
        gbc.setState(0xb4c3, 0xd14a, 0x4e50, 0xe8d5, 0xc4af, 0xb4c6, 0x0, 0x0);
        gbc.writeMem(0xb4c3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd14a, gbc.sp());
        EXPECT(0xb4c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c3));
        EXPECT(0xcb, gbc.readMem(0xb4c4));
        // CB CB 018D
        gbc.setState(0xe911, 0xb73f, 0xea50, 0xca10, 0xc88b, 0x605f, 0x1, 0x1);
        gbc.writeMem(0xe911, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb73f, gbc.sp());
        EXPECT(0xe913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe911));
        EXPECT(0xcb, gbc.readMem(0xe912));
        // CB CB 018F
        gbc.setState(0x382b, 0x3d69, 0x5c30, 0x1a1, 0x620d, 0xc239, 0x1, 0x0);
        gbc.writeMem(0x382b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3d69, gbc.sp());
        EXPECT(0x382d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0190
        gbc.setState(0xc594, 0x9c01, 0x850, 0x597c, 0xa141, 0x9b7f, 0x1, 0x1);
        gbc.writeMem(0xc594, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9c01, gbc.sp());
        EXPECT(0xc596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc594));
        EXPECT(0xcb, gbc.readMem(0xc595));
        // CB CB 0192
        gbc.setState(0xd8, 0xbce4, 0xe870, 0x7d59, 0xd278, 0x7729, 0x1, 0x0);
        gbc.writeMem(0xd8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbce4, gbc.sp());
        EXPECT(0xda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0193
        gbc.setState(0x34a5, 0x8bd0, 0x41d0, 0xe7a, 0xbe43, 0xc704, 0x1, 0x0);
        gbc.writeMem(0x34a5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8bd0, gbc.sp());
        EXPECT(0x34a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0194
        gbc.setState(0xdaa4, 0xe8e8, 0x3a70, 0x4981, 0x3b48, 0xf5b4, 0x1, 0x0);
        gbc.writeMem(0xdaa4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe8e8, gbc.sp());
        EXPECT(0xdaa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa4));
        EXPECT(0xcb, gbc.readMem(0xdaa5));
        // CB CB 0195
        gbc.setState(0x6d3f, 0x6930, 0x1a90, 0x9021, 0xe69f, 0xfeb, 0x1, 0x0);
        gbc.writeMem(0x6d3f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6930, gbc.sp());
        EXPECT(0x6d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0196
        gbc.setState(0x7786, 0xbe0f, 0x3600, 0x48b4, 0xa90e, 0x4d17, 0x1, 0x1);
        gbc.writeMem(0x7786, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbe0f, gbc.sp());
        EXPECT(0x7788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0197
        gbc.setState(0x9872, 0x455, 0xa7b0, 0x2822, 0xd389, 0x3253, 0x1, 0x1);
        gbc.writeMem(0x9872, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x455, gbc.sp());
        EXPECT(0x9874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9872));
        EXPECT(0xcb, gbc.readMem(0x9873));
        // CB CB 0198
        gbc.setState(0xe2f6, 0x29a1, 0x5530, 0x57ea, 0x9e9a, 0x4055, 0x0, 0x1);
        gbc.writeMem(0xe2f6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x29a1, gbc.sp());
        EXPECT(0xe2f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2f6));
        EXPECT(0xcb, gbc.readMem(0xe2f7));
        // CB CB 0199
        gbc.setState(0xc9bd, 0x40f8, 0xf9b0, 0xeeb1, 0x8616, 0xe743, 0x0, 0x1);
        gbc.writeMem(0xc9bd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x40f8, gbc.sp());
        EXPECT(0xc9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9bd));
        EXPECT(0xcb, gbc.readMem(0xc9be));
        // CB CB 019A
        gbc.setState(0xd36f, 0xb68e, 0x3aa0, 0x7ad4, 0x93eb, 0xf346, 0x0, 0x1);
        gbc.writeMem(0xd36f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb68e, gbc.sp());
        EXPECT(0xd371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36f));
        EXPECT(0xcb, gbc.readMem(0xd370));
        // CB CB 019B
        gbc.setState(0x8657, 0xc1dc, 0x1ca0, 0x8c3a, 0xe06c, 0xd88e, 0x0, 0x1);
        gbc.writeMem(0x8657, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc1dc, gbc.sp());
        EXPECT(0x8659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8657));
        EXPECT(0xcb, gbc.readMem(0x8658));
        // CB CB 019C
        gbc.setState(0x2a6e, 0xd341, 0x6e70, 0xa5ff, 0xf8a6, 0xeebb, 0x1, 0x0);
        gbc.writeMem(0x2a6e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd341, gbc.sp());
        EXPECT(0x2a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 019D
        gbc.setState(0x8382, 0xa722, 0x5fa0, 0x7081, 0x1ec5, 0x7ec1, 0x0, 0x1);
        gbc.writeMem(0x8382, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa722, gbc.sp());
        EXPECT(0x8384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8382));
        EXPECT(0xcb, gbc.readMem(0x8383));
        // CB CB 019E
        gbc.setState(0x3a9c, 0xfd47, 0x4630, 0xfa73, 0x2986, 0x1e57, 0x0, 0x1);
        gbc.writeMem(0x3a9c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfd47, gbc.sp());
        EXPECT(0x3a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 019F
        gbc.setState(0x5934, 0x52b7, 0x44e0, 0x84da, 0x7d58, 0xe44d, 0x1, 0x0);
        gbc.writeMem(0x5934, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x52b7, gbc.sp());
        EXPECT(0x5936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01A0
        gbc.setState(0x3840, 0x5fde, 0xa290, 0x7e7, 0xcf08, 0x5a46, 0x1, 0x1);
        gbc.writeMem(0x3840, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5fde, gbc.sp());
        EXPECT(0x3842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01A1
        gbc.setState(0x3acb, 0xf4c8, 0x4b90, 0x8a83, 0xc10c, 0x9c8d, 0x0, 0x0);
        gbc.writeMem(0x3acb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf4c8, gbc.sp());
        EXPECT(0x3acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01A2
        gbc.setState(0xae8f, 0xbcf1, 0x4220, 0x6d13, 0x2490, 0xf441, 0x1, 0x1);
        gbc.writeMem(0xae8f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbcf1, gbc.sp());
        EXPECT(0xae91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae8f));
        EXPECT(0xcb, gbc.readMem(0xae90));
        // CB CB 01A3
        gbc.setState(0x86e9, 0xd6dd, 0x7cd0, 0x52b9, 0x5026, 0x1e96, 0x1, 0x0);
        gbc.writeMem(0x86e9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd6dd, gbc.sp());
        EXPECT(0x86eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e9));
        EXPECT(0xcb, gbc.readMem(0x86ea));
        // CB CB 01A4
        gbc.setState(0xcba7, 0x603d, 0xc750, 0xa30b, 0xb74a, 0xc353, 0x1, 0x0);
        gbc.writeMem(0xcba7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x603d, gbc.sp());
        EXPECT(0xcba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba7));
        EXPECT(0xcb, gbc.readMem(0xcba8));
        // CB CB 01A5
        gbc.setState(0x9c37, 0xe73f, 0x9230, 0x8533, 0x34f4, 0x6c15, 0x1, 0x1);
        gbc.writeMem(0x9c37, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe73f, gbc.sp());
        EXPECT(0x9c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c37));
        EXPECT(0xcb, gbc.readMem(0x9c38));
        // CB CB 01A6
        gbc.setState(0x3bc4, 0xa633, 0x8f80, 0x795f, 0x254c, 0x4ec4, 0x0, 0x1);
        gbc.writeMem(0x3bc4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa633, gbc.sp());
        EXPECT(0x3bc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01A7
        gbc.setState(0x1d9, 0xbcbe, 0xa430, 0xbf16, 0x38f1, 0xd93, 0x1, 0x0);
        gbc.writeMem(0x1d9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbcbe, gbc.sp());
        EXPECT(0x1db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01A8
        gbc.setState(0x573d, 0xe97d, 0xf360, 0x99b3, 0xa32, 0x8cbc, 0x1, 0x1);
        gbc.writeMem(0x573d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe97d, gbc.sp());
        EXPECT(0x573f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01AA
        gbc.setState(0xa9d5, 0xbdf8, 0x3000, 0x36ce, 0xae33, 0xeb10, 0x0, 0x0);
        gbc.writeMem(0xa9d5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbdf8, gbc.sp());
        EXPECT(0xa9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d5));
        EXPECT(0xcb, gbc.readMem(0xa9d6));
        // CB CB 01AB
        gbc.setState(0xcaff, 0xcd8a, 0xb4a0, 0x1f0b, 0xa4fe, 0x5ee3, 0x0, 0x0);
        gbc.writeMem(0xcaff, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcd8a, gbc.sp());
        EXPECT(0xcb01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaff));
        EXPECT(0xcb, gbc.readMem(0xcb00));
        // CB CB 01AC
        gbc.setState(0xeba, 0xbad2, 0xf9e0, 0x906e, 0x409d, 0xd563, 0x0, 0x0);
        gbc.writeMem(0xeba, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbad2, gbc.sp());
        EXPECT(0xebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01AD
        gbc.setState(0xec84, 0xe36, 0x1a50, 0xcc31, 0x5616, 0x77e3, 0x0, 0x0);
        gbc.writeMem(0xec84, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe36, gbc.sp());
        EXPECT(0xec86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec84));
        EXPECT(0xcb, gbc.readMem(0xec85));
        // CB CB 01AE
        gbc.setState(0x9d11, 0xf1a, 0x7630, 0xd7ef, 0xf3c5, 0x4c60, 0x0, 0x0);
        gbc.writeMem(0x9d11, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf1a, gbc.sp());
        EXPECT(0x9d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d11));
        EXPECT(0xcb, gbc.readMem(0x9d12));
        // CB CB 01AF
        gbc.setState(0x6730, 0x67c2, 0xa020, 0x9aa3, 0x1d2b, 0xa520, 0x0, 0x0);
        gbc.writeMem(0x6730, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x67c2, gbc.sp());
        EXPECT(0x6732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01B0
        gbc.setState(0x324a, 0x397f, 0x52f0, 0xa6d6, 0x82d6, 0xc70f, 0x1, 0x0);
        gbc.writeMem(0x324a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x397f, gbc.sp());
        EXPECT(0x324c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01B2
        gbc.setState(0xc2a1, 0x2e07, 0x5960, 0x383e, 0x118d, 0x409d, 0x1, 0x1);
        gbc.writeMem(0xc2a1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2e07, gbc.sp());
        EXPECT(0xc2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a1));
        EXPECT(0xcb, gbc.readMem(0xc2a2));
        // CB CB 01B3
        gbc.setState(0x1c12, 0x31ee, 0x1130, 0x9f59, 0xf6f8, 0xc1ce, 0x0, 0x1);
        gbc.writeMem(0x1c12, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x31ee, gbc.sp());
        EXPECT(0x1c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01B4
        gbc.setState(0xbfd1, 0x94af, 0x520, 0xde51, 0xcfc8, 0x295a, 0x0, 0x1);
        gbc.writeMem(0xbfd1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x94af, gbc.sp());
        EXPECT(0xbfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd1));
        EXPECT(0xcb, gbc.readMem(0xbfd2));
        // CB CB 01B5
        gbc.setState(0x6f99, 0x674b, 0xe900, 0x2b3e, 0x8936, 0x4d89, 0x0, 0x1);
        gbc.writeMem(0x6f99, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x674b, gbc.sp());
        EXPECT(0x6f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01B6
        gbc.setState(0xafd0, 0x589a, 0xf3f0, 0x8b00, 0x17ed, 0x41b2, 0x0, 0x1);
        gbc.writeMem(0xafd0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x589a, gbc.sp());
        EXPECT(0xafd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd0));
        EXPECT(0xcb, gbc.readMem(0xafd1));
        // CB CB 01B7
        gbc.setState(0x5450, 0x5959, 0x2fc0, 0x55d8, 0xeeaa, 0x6bc0, 0x0, 0x0);
        gbc.writeMem(0x5450, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5959, gbc.sp());
        EXPECT(0x5452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01B8
        gbc.setState(0x6d60, 0x2242, 0x1cc0, 0x913f, 0xb723, 0x7cf9, 0x1, 0x1);
        gbc.writeMem(0x6d60, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2242, gbc.sp());
        EXPECT(0x6d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01B9
        gbc.setState(0x9446, 0xdb8b, 0x8370, 0x5c19, 0x241b, 0x9cbc, 0x0, 0x0);
        gbc.writeMem(0x9446, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdb8b, gbc.sp());
        EXPECT(0x9448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9446));
        EXPECT(0xcb, gbc.readMem(0x9447));
        // CB CB 01BA
        gbc.setState(0x7ec1, 0x44bb, 0x3cf0, 0x4e38, 0xeea9, 0x6462, 0x1, 0x0);
        gbc.writeMem(0x7ec1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x44bb, gbc.sp());
        EXPECT(0x7ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01BB
        gbc.setState(0x2d25, 0x7ff2, 0x2c80, 0xf19e, 0x6e3e, 0x4128, 0x0, 0x0);
        gbc.writeMem(0x2d25, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7ff2, gbc.sp());
        EXPECT(0x2d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01BC
        gbc.setState(0xaefc, 0x609a, 0x55a0, 0xbd7, 0x1058, 0xc3d5, 0x1, 0x0);
        gbc.writeMem(0xaefc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x609a, gbc.sp());
        EXPECT(0xaefe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaefc));
        EXPECT(0xcb, gbc.readMem(0xaefd));
        // CB CB 01BD
        gbc.setState(0xb174, 0x8c73, 0x4240, 0xf1ea, 0xe648, 0x774b, 0x1, 0x0);
        gbc.writeMem(0xb174, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8c73, gbc.sp());
        EXPECT(0xb176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb174));
        EXPECT(0xcb, gbc.readMem(0xb175));
        // CB CB 01BE
        gbc.setState(0x4d28, 0x4828, 0x3ea0, 0xa9c8, 0x4263, 0x7805, 0x1, 0x1);
        gbc.writeMem(0x4d28, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4828, gbc.sp());
        EXPECT(0x4d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01BF
        gbc.setState(0xb5f, 0xd9c8, 0x7ea0, 0x9e0e, 0x7cf3, 0xd097, 0x1, 0x0);
        gbc.writeMem(0xb5f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd9c8, gbc.sp());
        EXPECT(0xb61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01C0
        gbc.setState(0xd7bc, 0xe1b5, 0xd380, 0xe4da, 0x3b3c, 0xadf5, 0x0, 0x0);
        gbc.writeMem(0xd7bc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe1b5, gbc.sp());
        EXPECT(0xd7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7bc));
        EXPECT(0xcb, gbc.readMem(0xd7bd));
        // CB CB 01C1
        gbc.setState(0xb3d2, 0xe476, 0x3580, 0x874e, 0xef8b, 0xe626, 0x0, 0x0);
        gbc.writeMem(0xb3d2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe476, gbc.sp());
        EXPECT(0xb3d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d2));
        EXPECT(0xcb, gbc.readMem(0xb3d3));
        // CB CB 01C3
        gbc.setState(0x8dfc, 0xed4f, 0xdbc0, 0x6f69, 0x27f2, 0xdaf6, 0x0, 0x1);
        gbc.writeMem(0x8dfc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xed4f, gbc.sp());
        EXPECT(0x8dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dfc));
        EXPECT(0xcb, gbc.readMem(0x8dfd));
        // CB CB 01C4
        gbc.setState(0x8f88, 0xcfa4, 0x3070, 0x1e79, 0x26fc, 0x5fba, 0x1, 0x0);
        gbc.writeMem(0x8f88, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcfa4, gbc.sp());
        EXPECT(0x8f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f88));
        EXPECT(0xcb, gbc.readMem(0x8f89));
        // CB CB 01C5
        gbc.setState(0xc8dc, 0xa650, 0xa170, 0x154a, 0xe6e7, 0x28a, 0x1, 0x0);
        gbc.writeMem(0xc8dc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa650, gbc.sp());
        EXPECT(0xc8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8dc));
        EXPECT(0xcb, gbc.readMem(0xc8dd));
        // CB CB 01C6
        gbc.setState(0x4871, 0x93a1, 0xe80, 0xe26b, 0xbaec, 0xefb6, 0x1, 0x0);
        gbc.writeMem(0x4871, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x93a1, gbc.sp());
        EXPECT(0x4873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01C7
        gbc.setState(0xc45a, 0xf401, 0x69f0, 0x98fa, 0x7c44, 0x16f3, 0x0, 0x0);
        gbc.writeMem(0xc45a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf401, gbc.sp());
        EXPECT(0xc45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45a));
        EXPECT(0xcb, gbc.readMem(0xc45b));
        // CB CB 01C8
        gbc.setState(0xade4, 0x83dc, 0xc550, 0xdefb, 0x7c3b, 0x5078, 0x0, 0x0);
        gbc.writeMem(0xade4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x83dc, gbc.sp());
        EXPECT(0xade6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade4));
        EXPECT(0xcb, gbc.readMem(0xade5));
        // CB CB 01CB
        gbc.setState(0xbb79, 0x14ba, 0x92f0, 0xdab4, 0x26f0, 0x86f6, 0x0, 0x1);
        gbc.writeMem(0xbb79, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x14ba, gbc.sp());
        EXPECT(0xbb7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb79));
        EXPECT(0xcb, gbc.readMem(0xbb7a));
        // CB CB 01CC
        gbc.setState(0x7ac, 0x15e0, 0x6d90, 0x7ede, 0xd2f, 0x1bb8, 0x1, 0x1);
        gbc.writeMem(0x7ac, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x15e0, gbc.sp());
        EXPECT(0x7ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01CD
        gbc.setState(0x5cc4, 0x903b, 0xba50, 0x2a65, 0x1b29, 0x6f8c, 0x1, 0x0);
        gbc.writeMem(0x5cc4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x903b, gbc.sp());
        EXPECT(0x5cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01CE
        gbc.setState(0x17a, 0x9ff6, 0x4e10, 0x844c, 0x4cb0, 0xa50f, 0x0, 0x1);
        gbc.writeMem(0x17a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9ff6, gbc.sp());
        EXPECT(0x17c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01CF
        gbc.setState(0x9544, 0xe0e5, 0x99d0, 0xd91b, 0xd270, 0xc9c5, 0x0, 0x0);
        gbc.writeMem(0x9544, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe0e5, gbc.sp());
        EXPECT(0x9546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9544));
        EXPECT(0xcb, gbc.readMem(0x9545));
        // CB CB 01D0
        gbc.setState(0x3682, 0x1212, 0x9aa0, 0x75e6, 0x6ee1, 0x7e5d, 0x0, 0x1);
        gbc.writeMem(0x3682, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1212, gbc.sp());
        EXPECT(0x3684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01D1
        gbc.setState(0xd7e1, 0xd963, 0xbb30, 0xbe2e, 0xd07b, 0xf012, 0x0, 0x1);
        gbc.writeMem(0xd7e1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd963, gbc.sp());
        EXPECT(0xd7e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e1));
        EXPECT(0xcb, gbc.readMem(0xd7e2));
        // CB CB 01D2
        gbc.setState(0x16c5, 0x3bcc, 0x6ea0, 0x3a6, 0x47b4, 0x2039, 0x0, 0x1);
        gbc.writeMem(0x16c5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3bcc, gbc.sp());
        EXPECT(0x16c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01D3
        gbc.setState(0x528a, 0xae48, 0xb5c0, 0xc3ac, 0xba41, 0x673d, 0x0, 0x0);
        gbc.writeMem(0x528a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xae48, gbc.sp());
        EXPECT(0x528c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01D4
        gbc.setState(0x219a, 0x6e6a, 0xcbc0, 0x3d00, 0xb077, 0x68c8, 0x0, 0x1);
        gbc.writeMem(0x219a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6e6a, gbc.sp());
        EXPECT(0x219c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01D5
        gbc.setState(0xa20f, 0x163e, 0xddd0, 0xefc8, 0xaf8f, 0x55cd, 0x1, 0x0);
        gbc.writeMem(0xa20f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x163e, gbc.sp());
        EXPECT(0xa211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa20f));
        EXPECT(0xcb, gbc.readMem(0xa210));
        // CB CB 01D6
        gbc.setState(0x5d7f, 0xb15a, 0x3030, 0x3d46, 0x5850, 0x37bf, 0x1, 0x1);
        gbc.writeMem(0x5d7f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb15a, gbc.sp());
        EXPECT(0x5d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01D7
        gbc.setState(0x67, 0xf47d, 0x6800, 0x8bca, 0x4d9d, 0x7ece, 0x0, 0x0);
        gbc.writeMem(0x67, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf47d, gbc.sp());
        EXPECT(0x69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01D8
        gbc.setState(0x2f46, 0xce0f, 0x2b20, 0xff08, 0xba33, 0x261c, 0x0, 0x0);
        gbc.writeMem(0x2f46, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xce0f, gbc.sp());
        EXPECT(0x2f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01D9
        gbc.setState(0x7913, 0x403b, 0xd270, 0x5f3a, 0x37d9, 0xcfd5, 0x1, 0x1);
        gbc.writeMem(0x7913, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x403b, gbc.sp());
        EXPECT(0x7915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01DA
        gbc.setState(0x4d8b, 0xcf1d, 0xc720, 0x3318, 0xf7e5, 0xa1b4, 0x1, 0x0);
        gbc.writeMem(0x4d8b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcf1d, gbc.sp());
        EXPECT(0x4d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01DB
        gbc.setState(0x8e35, 0xfa70, 0xa1e0, 0x208a, 0xc754, 0xdd6e, 0x0, 0x0);
        gbc.writeMem(0x8e35, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfa70, gbc.sp());
        EXPECT(0x8e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e35));
        EXPECT(0xcb, gbc.readMem(0x8e36));
        // CB CB 01DC
        gbc.setState(0x5f7f, 0x1e02, 0xdc0, 0x2ec1, 0x19e1, 0xfdb2, 0x0, 0x1);
        gbc.writeMem(0x5f7f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1e02, gbc.sp());
        EXPECT(0x5f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01DD
        gbc.setState(0x92c4, 0xdbe3, 0xb690, 0x185a, 0x2f89, 0x8d51, 0x0, 0x1);
        gbc.writeMem(0x92c4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdbe3, gbc.sp());
        EXPECT(0x92c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c4));
        EXPECT(0xcb, gbc.readMem(0x92c5));
        // CB CB 01DE
        gbc.setState(0x3ab5, 0x9814, 0xb9f0, 0xdf0e, 0x2f2c, 0x17aa, 0x1, 0x1);
        gbc.writeMem(0x3ab5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9814, gbc.sp());
        EXPECT(0x3ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01E0
        gbc.setState(0x89b5, 0x8576, 0xafa0, 0x8114, 0x84e4, 0xc666, 0x1, 0x0);
        gbc.writeMem(0x89b5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8576, gbc.sp());
        EXPECT(0x89b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b5));
        EXPECT(0xcb, gbc.readMem(0x89b6));
        // CB CB 01E1
        gbc.setState(0x311f, 0x39be, 0xb6b0, 0xde16, 0xa5ca, 0x8262, 0x1, 0x0);
        gbc.writeMem(0x311f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x39be, gbc.sp());
        EXPECT(0x3121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01E2
        gbc.setState(0x32db, 0xc0f3, 0xef30, 0x2449, 0xb7b6, 0x98e4, 0x1, 0x0);
        gbc.writeMem(0x32db, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc0f3, gbc.sp());
        EXPECT(0x32dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01E3
        gbc.setState(0xd743, 0xfc6, 0x4ef0, 0xed19, 0x61a7, 0x506, 0x0, 0x0);
        gbc.writeMem(0xd743, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfc6, gbc.sp());
        EXPECT(0xd745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd743));
        EXPECT(0xcb, gbc.readMem(0xd744));
        // CB CB 01E4
        gbc.setState(0xbcc3, 0xce5c, 0x3860, 0x201d, 0x47c2, 0xe48a, 0x1, 0x1);
        gbc.writeMem(0xbcc3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xce5c, gbc.sp());
        EXPECT(0xbcc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc3));
        EXPECT(0xcb, gbc.readMem(0xbcc4));
        // CB CB 01E5
        gbc.setState(0x25a8, 0x20ab, 0x9a50, 0x773, 0x4151, 0x3df8, 0x1, 0x0);
        gbc.writeMem(0x25a8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x20ab, gbc.sp());
        EXPECT(0x25aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01E6
        gbc.setState(0xde26, 0x858, 0xaee0, 0x417b, 0xc223, 0xc97f, 0x1, 0x1);
        gbc.writeMem(0xde26, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x858, gbc.sp());
        EXPECT(0xde28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde26));
        EXPECT(0xcb, gbc.readMem(0xde27));
        // CB CB 01E7
        gbc.setState(0x337d, 0x808e, 0xc570, 0xa739, 0xac2, 0x84c9, 0x1, 0x0);
        gbc.writeMem(0x337d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x808e, gbc.sp());
        EXPECT(0x337f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01E8
        gbc.setState(0xef86, 0xf73a, 0xf850, 0x2929, 0x4be6, 0xeb9d, 0x1, 0x1);
        gbc.writeMem(0xef86, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf73a, gbc.sp());
        EXPECT(0xef88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef86));
        EXPECT(0xcb, gbc.readMem(0xef87));
        // CB CB 01E9
        gbc.setState(0xd905, 0xece2, 0x510, 0x3237, 0x9bce, 0x612e, 0x1, 0x0);
        gbc.writeMem(0xd905, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xece2, gbc.sp());
        EXPECT(0xd907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd905));
        EXPECT(0xcb, gbc.readMem(0xd906));
        // CB CB 01EA
        gbc.setState(0xa32e, 0x7fcd, 0xce50, 0x19b8, 0x9632, 0x1227, 0x0, 0x1);
        gbc.writeMem(0xa32e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7fcd, gbc.sp());
        EXPECT(0xa330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa32e));
        EXPECT(0xcb, gbc.readMem(0xa32f));
        // CB CB 01EB
        gbc.setState(0x79b6, 0x121b, 0x3ce0, 0x8ed9, 0x6792, 0x1a26, 0x0, 0x0);
        gbc.writeMem(0x79b6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x121b, gbc.sp());
        EXPECT(0x79b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01EC
        gbc.setState(0x73f8, 0xe069, 0x8b0, 0x5f27, 0xddcd, 0x6f61, 0x1, 0x1);
        gbc.writeMem(0x73f8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe069, gbc.sp());
        EXPECT(0x73fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01ED
        gbc.setState(0x97a1, 0x5079, 0xac70, 0xfa5f, 0x9430, 0x32c5, 0x1, 0x1);
        gbc.writeMem(0x97a1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5079, gbc.sp());
        EXPECT(0x97a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a1));
        EXPECT(0xcb, gbc.readMem(0x97a2));
        // CB CB 01EE
        gbc.setState(0xd321, 0x9aa7, 0x35b0, 0x3c20, 0x8dad, 0x876c, 0x0, 0x0);
        gbc.writeMem(0xd321, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9aa7, gbc.sp());
        EXPECT(0xd323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd321));
        EXPECT(0xcb, gbc.readMem(0xd322));
        // CB CB 01EF
        gbc.setState(0x91c6, 0x4ada, 0x9cf0, 0x50c8, 0xa6b0, 0x94c4, 0x1, 0x1);
        gbc.writeMem(0x91c6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4ada, gbc.sp());
        EXPECT(0x91c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c6));
        EXPECT(0xcb, gbc.readMem(0x91c7));
        // CB CB 01F0
        gbc.setState(0x23c9, 0x1fd1, 0x7720, 0xfbc2, 0x7714, 0x14b8, 0x1, 0x0);
        gbc.writeMem(0x23c9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1fd1, gbc.sp());
        EXPECT(0x23cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01F1
        gbc.setState(0x9b5f, 0x8368, 0x5370, 0x9189, 0x36b0, 0x9e22, 0x0, 0x1);
        gbc.writeMem(0x9b5f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8368, gbc.sp());
        EXPECT(0x9b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5f));
        EXPECT(0xcb, gbc.readMem(0x9b60));
        // CB CB 01F2
        gbc.setState(0x7b8, 0x54b0, 0xd550, 0x5c5c, 0xdd5d, 0xe114, 0x1, 0x1);
        gbc.writeMem(0x7b8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x54b0, gbc.sp());
        EXPECT(0x7ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01F3
        gbc.setState(0xa897, 0x7d70, 0xaa10, 0x54d3, 0x30d4, 0xfe4f, 0x0, 0x0);
        gbc.writeMem(0xa897, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7d70, gbc.sp());
        EXPECT(0xa899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa897));
        EXPECT(0xcb, gbc.readMem(0xa898));
        // CB CB 01F4
        gbc.setState(0x5142, 0xc200, 0x5ad0, 0x5295, 0x7760, 0x3902, 0x0, 0x1);
        gbc.writeMem(0x5142, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc200, gbc.sp());
        EXPECT(0x5144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01F5
        gbc.setState(0x1662, 0x43e9, 0xb040, 0xb67a, 0x7dcf, 0xb45e, 0x0, 0x0);
        gbc.writeMem(0x1662, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x43e9, gbc.sp());
        EXPECT(0x1664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01F6
        gbc.setState(0x72e2, 0x167a, 0x43b0, 0x4b6c, 0x47d7, 0x8df0, 0x1, 0x0);
        gbc.writeMem(0x72e2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x167a, gbc.sp());
        EXPECT(0x72e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01F7
        gbc.setState(0xdff5, 0x1cbc, 0x4c90, 0x430, 0x7e, 0x4622, 0x0, 0x1);
        gbc.writeMem(0xdff5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1cbc, gbc.sp());
        EXPECT(0xdff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff5));
        EXPECT(0xcb, gbc.readMem(0xdff6));
        // CB CB 01F8
        gbc.setState(0x56a9, 0x75f1, 0x4690, 0x219d, 0xf0ed, 0x45e6, 0x1, 0x0);
        gbc.writeMem(0x56a9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x75f1, gbc.sp());
        EXPECT(0x56ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01F9
        gbc.setState(0xbc20, 0x820f, 0x94f0, 0x8f68, 0x4a75, 0xe05c, 0x0, 0x0);
        gbc.writeMem(0xbc20, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x820f, gbc.sp());
        EXPECT(0xbc22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc20));
        EXPECT(0xcb, gbc.readMem(0xbc21));
        // CB CB 01FA
        gbc.setState(0xe254, 0xfbb1, 0x4250, 0x357b, 0x2e33, 0x1c2c, 0x1, 0x1);
        gbc.writeMem(0xe254, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfbb1, gbc.sp());
        EXPECT(0xe256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe254));
        EXPECT(0xcb, gbc.readMem(0xe255));
        // CB CB 01FB
        gbc.setState(0xec4b, 0x6d43, 0x7a00, 0x4993, 0x7faa, 0xf17d, 0x0, 0x1);
        gbc.writeMem(0xec4b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6d43, gbc.sp());
        EXPECT(0xec4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec4b));
        EXPECT(0xcb, gbc.readMem(0xec4c));
        // CB CB 01FC
        gbc.setState(0x6e78, 0xb076, 0x8bb0, 0x8e4, 0xe80f, 0x599d, 0x1, 0x0);
        gbc.writeMem(0x6e78, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb076, gbc.sp());
        EXPECT(0x6e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 01FD
        gbc.setState(0x7727, 0xd57c, 0x1f00, 0xf0dd, 0xb743, 0xb628, 0x1, 0x1);
        gbc.writeMem(0x7727, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd57c, gbc.sp());
        EXPECT(0x7729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 01FE
        gbc.setState(0x90f8, 0x7cdd, 0x4bb0, 0x21b, 0x76e7, 0x9964, 0x1, 0x1);
        gbc.writeMem(0x90f8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7cdd, gbc.sp());
        EXPECT(0x90fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f8));
        EXPECT(0xcb, gbc.readMem(0x90f9));
        // CB CB 01FF
        gbc.setState(0x3a55, 0xd784, 0xb220, 0x2b07, 0xba22, 0x53b5, 0x0, 0x0);
        gbc.writeMem(0x3a55, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd784, gbc.sp());
        EXPECT(0x3a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0200
        gbc.setState(0x407, 0x1dcb, 0x7ff0, 0xdc9b, 0x98d3, 0xf72, 0x1, 0x0);
        gbc.writeMem(0x407, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1dcb, gbc.sp());
        EXPECT(0x409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0201
        gbc.setState(0x31f3, 0xb707, 0x100, 0xebed, 0x2357, 0x9e8a, 0x0, 0x0);
        gbc.writeMem(0x31f3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb707, gbc.sp());
        EXPECT(0x31f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0202
        gbc.setState(0x71dc, 0xb77f, 0xe640, 0x64d3, 0xacbc, 0x659a, 0x1, 0x1);
        gbc.writeMem(0x71dc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb77f, gbc.sp());
        EXPECT(0x71de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0204
        gbc.setState(0x1b17, 0x4adb, 0xac50, 0x9a3f, 0x5bc5, 0x8386, 0x1, 0x1);
        gbc.writeMem(0x1b17, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4adb, gbc.sp());
        EXPECT(0x1b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0205
        gbc.setState(0x8d4b, 0xcca9, 0x65c0, 0xb541, 0xa123, 0xc264, 0x0, 0x0);
        gbc.writeMem(0x8d4b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcca9, gbc.sp());
        EXPECT(0x8d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4b));
        EXPECT(0xcb, gbc.readMem(0x8d4c));
        // CB CB 0206
        gbc.setState(0x377f, 0x8227, 0xe670, 0x48bc, 0x86e1, 0xe630, 0x0, 0x0);
        gbc.writeMem(0x377f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8227, gbc.sp());
        EXPECT(0x3781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0207
        gbc.setState(0x3c88, 0x3755, 0x7840, 0x2b4e, 0xb4, 0xa10d, 0x1, 0x1);
        gbc.writeMem(0x3c88, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3755, gbc.sp());
        EXPECT(0x3c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0208
        gbc.setState(0xdc3, 0x3d23, 0x2580, 0x1744, 0xbbe8, 0x7d36, 0x0, 0x0);
        gbc.writeMem(0xdc3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3d23, gbc.sp());
        EXPECT(0xdc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0209
        gbc.setState(0xbf01, 0x65d7, 0xc630, 0x3e96, 0xd63e, 0x9f8c, 0x1, 0x1);
        gbc.writeMem(0xbf01, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x65d7, gbc.sp());
        EXPECT(0xbf03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf01));
        EXPECT(0xcb, gbc.readMem(0xbf02));
        // CB CB 020A
        gbc.setState(0x85f1, 0x7d35, 0xe9b0, 0xcc91, 0x2d8d, 0xd993, 0x1, 0x1);
        gbc.writeMem(0x85f1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7d35, gbc.sp());
        EXPECT(0x85f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85f1));
        EXPECT(0xcb, gbc.readMem(0x85f2));
        // CB CB 020B
        gbc.setState(0xcaac, 0x16f7, 0xc8f0, 0xf616, 0x437b, 0xc327, 0x1, 0x0);
        gbc.writeMem(0xcaac, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x16f7, gbc.sp());
        EXPECT(0xcaae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaac));
        EXPECT(0xcb, gbc.readMem(0xcaad));
        // CB CB 020C
        gbc.setState(0x2786, 0x5087, 0xa6d0, 0x13e5, 0x4ab, 0xbdbc, 0x0, 0x1);
        gbc.writeMem(0x2786, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5087, gbc.sp());
        EXPECT(0x2788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 020D
        gbc.setState(0xd271, 0x54dc, 0x4cd0, 0x9773, 0xfb85, 0x347b, 0x1, 0x1);
        gbc.writeMem(0xd271, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x54dc, gbc.sp());
        EXPECT(0xd273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd271));
        EXPECT(0xcb, gbc.readMem(0xd272));
        // CB CB 020E
        gbc.setState(0xc607, 0x1540, 0x8e40, 0x4d0c, 0x49f, 0xb9e, 0x1, 0x0);
        gbc.writeMem(0xc607, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1540, gbc.sp());
        EXPECT(0xc609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc607));
        EXPECT(0xcb, gbc.readMem(0xc608));
        // CB CB 0210
        gbc.setState(0x74b3, 0x6649, 0x7f30, 0xd8c1, 0xaea7, 0xc703, 0x1, 0x0);
        gbc.writeMem(0x74b3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6649, gbc.sp());
        EXPECT(0x74b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0211
        gbc.setState(0xbd77, 0x3569, 0xa830, 0x9470, 0xc68f, 0x3ac3, 0x1, 0x1);
        gbc.writeMem(0xbd77, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3569, gbc.sp());
        EXPECT(0xbd79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd77));
        EXPECT(0xcb, gbc.readMem(0xbd78));
        // CB CB 0212
        gbc.setState(0x8204, 0xff4c, 0x6820, 0xf98c, 0x1122, 0x6081, 0x1, 0x1);
        gbc.writeMem(0x8204, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xff4c, gbc.sp());
        EXPECT(0x8206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8204));
        EXPECT(0xcb, gbc.readMem(0x8205));
        // CB CB 0213
        gbc.setState(0xb72d, 0xa763, 0xb840, 0xa1a6, 0xe622, 0x9247, 0x1, 0x1);
        gbc.writeMem(0xb72d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa763, gbc.sp());
        EXPECT(0xb72f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb72d));
        EXPECT(0xcb, gbc.readMem(0xb72e));
        // CB CB 0214
        gbc.setState(0xc755, 0x609c, 0x7300, 0x2363, 0xc12d, 0x2626, 0x1, 0x0);
        gbc.writeMem(0xc755, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x609c, gbc.sp());
        EXPECT(0xc757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc755));
        EXPECT(0xcb, gbc.readMem(0xc756));
        // CB CB 0215
        gbc.setState(0xda56, 0x88fd, 0xd830, 0xdd6a, 0x63ac, 0x4c75, 0x0, 0x1);
        gbc.writeMem(0xda56, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x88fd, gbc.sp());
        EXPECT(0xda58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda56));
        EXPECT(0xcb, gbc.readMem(0xda57));
        // CB CB 0216
        gbc.setState(0x1cba, 0x9cca, 0x13c0, 0xb8ac, 0x480c, 0x9ad, 0x0, 0x0);
        gbc.writeMem(0x1cba, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9cca, gbc.sp());
        EXPECT(0x1cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0217
        gbc.setState(0xca6f, 0x49c, 0xdb10, 0x6162, 0x6473, 0x2375, 0x0, 0x0);
        gbc.writeMem(0xca6f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x49c, gbc.sp());
        EXPECT(0xca71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca6f));
        EXPECT(0xcb, gbc.readMem(0xca70));
        // CB CB 0218
        gbc.setState(0x293f, 0xad07, 0x9d90, 0xeb0d, 0xe14a, 0x6084, 0x1, 0x0);
        gbc.writeMem(0x293f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xad07, gbc.sp());
        EXPECT(0x2941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0219
        gbc.setState(0xbdf7, 0x297d, 0xd0f0, 0x3215, 0x3763, 0x69c0, 0x0, 0x0);
        gbc.writeMem(0xbdf7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x297d, gbc.sp());
        EXPECT(0xbdf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf7));
        EXPECT(0xcb, gbc.readMem(0xbdf8));
        // CB CB 021A
        gbc.setState(0xe9eb, 0x3e23, 0x8cf0, 0xb827, 0x3769, 0xa68c, 0x1, 0x0);
        gbc.writeMem(0xe9eb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3e23, gbc.sp());
        EXPECT(0xe9ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9eb));
        EXPECT(0xcb, gbc.readMem(0xe9ec));
        // CB CB 021B
        gbc.setState(0x8762, 0x76e6, 0x3cd0, 0x855a, 0x60ac, 0x366d, 0x1, 0x0);
        gbc.writeMem(0x8762, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x76e6, gbc.sp());
        EXPECT(0x8764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8762));
        EXPECT(0xcb, gbc.readMem(0x8763));
        // CB CB 021C
        gbc.setState(0x5414, 0x309a, 0xdb20, 0x81af, 0xc46c, 0x5a8, 0x0, 0x1);
        gbc.writeMem(0x5414, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x309a, gbc.sp());
        EXPECT(0x5416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 021D
        gbc.setState(0xa09d, 0xc9ed, 0xdf40, 0xc74e, 0xa11b, 0xaafa, 0x0, 0x0);
        gbc.writeMem(0xa09d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc9ed, gbc.sp());
        EXPECT(0xa09f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09d));
        EXPECT(0xcb, gbc.readMem(0xa09e));
        // CB CB 021E
        gbc.setState(0x701f, 0xfce0, 0x8e0, 0x176b, 0x492a, 0x2365, 0x1, 0x1);
        gbc.writeMem(0x701f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfce0, gbc.sp());
        EXPECT(0x7021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0220
        gbc.setState(0x6155, 0x97a3, 0xcda0, 0xb892, 0xbdb0, 0x7ff7, 0x1, 0x1);
        gbc.writeMem(0x6155, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x97a3, gbc.sp());
        EXPECT(0x6157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0221
        gbc.setState(0xaf04, 0x3c2e, 0x3e80, 0xdaaf, 0x8366, 0x6cd7, 0x1, 0x1);
        gbc.writeMem(0xaf04, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3c2e, gbc.sp());
        EXPECT(0xaf06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf04));
        EXPECT(0xcb, gbc.readMem(0xaf05));
        // CB CB 0222
        gbc.setState(0x86dd, 0x67db, 0x2250, 0x65fb, 0xf326, 0xb6ef, 0x1, 0x0);
        gbc.writeMem(0x86dd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x67db, gbc.sp());
        EXPECT(0x86df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86dd));
        EXPECT(0xcb, gbc.readMem(0x86de));
        // CB CB 0223
        gbc.setState(0x9927, 0xf47c, 0x4950, 0x1707, 0xe354, 0x9521, 0x1, 0x0);
        gbc.writeMem(0x9927, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf47c, gbc.sp());
        EXPECT(0x9929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9927));
        EXPECT(0xcb, gbc.readMem(0x9928));
        // CB CB 0224
        gbc.setState(0x863b, 0x8c1b, 0x750, 0xf90b, 0xda1, 0xe6db, 0x0, 0x0);
        gbc.writeMem(0x863b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8c1b, gbc.sp());
        EXPECT(0x863d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863b));
        EXPECT(0xcb, gbc.readMem(0x863c));
        // CB CB 0225
        gbc.setState(0x6101, 0x759, 0xc440, 0xf168, 0x9561, 0xe78a, 0x1, 0x0);
        gbc.writeMem(0x6101, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x759, gbc.sp());
        EXPECT(0x6103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0226
        gbc.setState(0x37e0, 0x8af2, 0x3d50, 0x9d44, 0x755, 0x5e38, 0x1, 0x0);
        gbc.writeMem(0x37e0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8af2, gbc.sp());
        EXPECT(0x37e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0227
        gbc.setState(0x3cb1, 0x2136, 0x27b0, 0xef25, 0x91eb, 0x9c1, 0x1, 0x1);
        gbc.writeMem(0x3cb1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2136, gbc.sp());
        EXPECT(0x3cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0229
        gbc.setState(0x302f, 0x92b5, 0x91a0, 0x42ff, 0x998, 0x9f7c, 0x0, 0x1);
        gbc.writeMem(0x302f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x92b5, gbc.sp());
        EXPECT(0x3031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 022A
        gbc.setState(0x7195, 0x310a, 0x2220, 0x36fd, 0x3dad, 0xbe2b, 0x1, 0x0);
        gbc.writeMem(0x7195, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x310a, gbc.sp());
        EXPECT(0x7197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 022B
        gbc.setState(0xbdff, 0x71ca, 0x2c90, 0x3434, 0xcefe, 0x6ea6, 0x0, 0x1);
        gbc.writeMem(0xbdff, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x71ca, gbc.sp());
        EXPECT(0xbe01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdff));
        EXPECT(0xcb, gbc.readMem(0xbe00));
        // CB CB 022C
        gbc.setState(0x6652, 0x3328, 0x8510, 0x2177, 0x70f1, 0x4646, 0x0, 0x0);
        gbc.writeMem(0x6652, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3328, gbc.sp());
        EXPECT(0x6654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 022D
        gbc.setState(0xad52, 0xd997, 0x6d80, 0xc602, 0x67e7, 0xc066, 0x0, 0x1);
        gbc.writeMem(0xad52, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd997, gbc.sp());
        EXPECT(0xad54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad52));
        EXPECT(0xcb, gbc.readMem(0xad53));
        // CB CB 022E
        gbc.setState(0x80c2, 0x4ac2, 0x2f00, 0x3288, 0x85d1, 0xd830, 0x0, 0x0);
        gbc.writeMem(0x80c2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4ac2, gbc.sp());
        EXPECT(0x80c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c2));
        EXPECT(0xcb, gbc.readMem(0x80c3));
        // CB CB 022F
        gbc.setState(0x6bea, 0x1f2d, 0x3330, 0x8dce, 0xdf3a, 0x6a99, 0x1, 0x0);
        gbc.writeMem(0x6bea, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1f2d, gbc.sp());
        EXPECT(0x6bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0230
        gbc.setState(0x3c3, 0xe3f1, 0x6760, 0x50c7, 0x2b21, 0xd553, 0x1, 0x1);
        gbc.writeMem(0x3c3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe3f1, gbc.sp());
        EXPECT(0x3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0231
        gbc.setState(0x4bc8, 0xf278, 0x6760, 0x96d, 0xf042, 0xa38c, 0x1, 0x1);
        gbc.writeMem(0x4bc8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf278, gbc.sp());
        EXPECT(0x4bca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0232
        gbc.setState(0x645d, 0xce5c, 0xf0c0, 0x8487, 0xe473, 0x26ef, 0x1, 0x1);
        gbc.writeMem(0x645d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xce5c, gbc.sp());
        EXPECT(0x645f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0233
        gbc.setState(0x5f9b, 0xff44, 0x3b90, 0xc4b7, 0x22a8, 0x7332, 0x0, 0x1);
        gbc.writeMem(0x5f9b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xff44, gbc.sp());
        EXPECT(0x5f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0234
        gbc.setState(0xbf3c, 0x6ed7, 0x1120, 0x777a, 0x4fff, 0xc8bf, 0x1, 0x1);
        gbc.writeMem(0xbf3c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6ed7, gbc.sp());
        EXPECT(0xbf3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf3c));
        EXPECT(0xcb, gbc.readMem(0xbf3d));
        // CB CB 0235
        gbc.setState(0x9746, 0xae44, 0x4bd0, 0x411d, 0xf66d, 0x4bde, 0x0, 0x0);
        gbc.writeMem(0x9746, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xae44, gbc.sp());
        EXPECT(0x9748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9746));
        EXPECT(0xcb, gbc.readMem(0x9747));
        // CB CB 0236
        gbc.setState(0x2422, 0xaf17, 0x82b0, 0x100e, 0x9c16, 0x8b0, 0x0, 0x0);
        gbc.writeMem(0x2422, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xaf17, gbc.sp());
        EXPECT(0x2424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0237
        gbc.setState(0x2e8f, 0x6e06, 0x6150, 0x602c, 0xd00d, 0x41d5, 0x0, 0x0);
        gbc.writeMem(0x2e8f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6e06, gbc.sp());
        EXPECT(0x2e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0238
        gbc.setState(0x3a41, 0xd934, 0x6150, 0x3f6a, 0xa536, 0xe60e, 0x0, 0x0);
        gbc.writeMem(0x3a41, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd934, gbc.sp());
        EXPECT(0x3a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0239
        gbc.setState(0xdca4, 0x2c20, 0x6720, 0xb318, 0x9f3c, 0x1b05, 0x1, 0x1);
        gbc.writeMem(0xdca4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2c20, gbc.sp());
        EXPECT(0xdca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdca4));
        EXPECT(0xcb, gbc.readMem(0xdca5));
        // CB CB 023A
        gbc.setState(0x84cb, 0xf133, 0x6720, 0x506a, 0x5920, 0xfe85, 0x0, 0x1);
        gbc.writeMem(0x84cb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf133, gbc.sp());
        EXPECT(0x84cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84cb));
        EXPECT(0xcb, gbc.readMem(0x84cc));
        // CB CB 023B
        gbc.setState(0x1c67, 0xf009, 0x4d50, 0xfff0, 0x1626, 0x374f, 0x1, 0x0);
        gbc.writeMem(0x1c67, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf009, gbc.sp());
        EXPECT(0x1c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 023C
        gbc.setState(0x788f, 0x2796, 0xab30, 0x66a9, 0x89b9, 0xa16e, 0x0, 0x1);
        gbc.writeMem(0x788f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2796, gbc.sp());
        EXPECT(0x7891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 023D
        gbc.setState(0xbe48, 0x9926, 0xcc0, 0x475c, 0x1f0c, 0x7b36, 0x1, 0x0);
        gbc.writeMem(0xbe48, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9926, gbc.sp());
        EXPECT(0xbe4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe48));
        EXPECT(0xcb, gbc.readMem(0xbe49));
        // CB CB 023E
        gbc.setState(0x23e8, 0x5162, 0xddc0, 0xbbe7, 0x7442, 0xaecd, 0x0, 0x1);
        gbc.writeMem(0x23e8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5162, gbc.sp());
        EXPECT(0x23ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 023F
        gbc.setState(0x66b6, 0x763c, 0x6d40, 0xbcf, 0xd8ba, 0x30f3, 0x1, 0x1);
        gbc.writeMem(0x66b6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x763c, gbc.sp());
        EXPECT(0x66b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0240
        gbc.setState(0xe771, 0xf978, 0x2910, 0x2983, 0x8f45, 0xb673, 0x0, 0x1);
        gbc.writeMem(0xe771, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf978, gbc.sp());
        EXPECT(0xe773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe771));
        EXPECT(0xcb, gbc.readMem(0xe772));
        // CB CB 0241
        gbc.setState(0x95f9, 0xd99a, 0x6110, 0x9e5a, 0xfe8f, 0xa6a3, 0x1, 0x0);
        gbc.writeMem(0x95f9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd99a, gbc.sp());
        EXPECT(0x95fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f9));
        EXPECT(0xcb, gbc.readMem(0x95fa));
        // CB CB 0242
        gbc.setState(0x69f, 0x7fcc, 0x26c0, 0x43cb, 0x2e76, 0xc41c, 0x1, 0x0);
        gbc.writeMem(0x69f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7fcc, gbc.sp());
        EXPECT(0x6a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0243
        gbc.setState(0x9bce, 0x984c, 0xe020, 0x79c6, 0x8dd6, 0x885e, 0x1, 0x0);
        gbc.writeMem(0x9bce, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x984c, gbc.sp());
        EXPECT(0x9bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bce));
        EXPECT(0xcb, gbc.readMem(0x9bcf));
        // CB CB 0244
        gbc.setState(0x790b, 0x961c, 0x5710, 0x4d00, 0x64cd, 0xef86, 0x1, 0x1);
        gbc.writeMem(0x790b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x961c, gbc.sp());
        EXPECT(0x790d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0246
        gbc.setState(0x1ddf, 0xce1b, 0x8c0, 0x2310, 0x98fa, 0xd084, 0x0, 0x0);
        gbc.writeMem(0x1ddf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xce1b, gbc.sp());
        EXPECT(0x1de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0247
        gbc.setState(0x613f, 0x4507, 0x2f50, 0x6fa4, 0x2c5b, 0x53db, 0x0, 0x0);
        gbc.writeMem(0x613f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4507, gbc.sp());
        EXPECT(0x6141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0248
        gbc.setState(0x5d91, 0xb752, 0xab70, 0xf7d2, 0x2eab, 0xda22, 0x0, 0x1);
        gbc.writeMem(0x5d91, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb752, gbc.sp());
        EXPECT(0x5d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0249
        gbc.setState(0xda7a, 0x8e7d, 0x9930, 0x4bcd, 0x13fb, 0xaed, 0x0, 0x0);
        gbc.writeMem(0xda7a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8e7d, gbc.sp());
        EXPECT(0xda7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7a));
        EXPECT(0xcb, gbc.readMem(0xda7b));
        // CB CB 024A
        gbc.setState(0x874c, 0x178b, 0x930, 0x8344, 0x451d, 0x23e5, 0x0, 0x0);
        gbc.writeMem(0x874c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x178b, gbc.sp());
        EXPECT(0x874e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874c));
        EXPECT(0xcb, gbc.readMem(0x874d));
        // CB CB 024B
        gbc.setState(0x3ae0, 0x9101, 0x5d70, 0x2e1d, 0xc86b, 0x5dd3, 0x1, 0x1);
        gbc.writeMem(0x3ae0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9101, gbc.sp());
        EXPECT(0x3ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 024C
        gbc.setState(0x397f, 0x9605, 0x4b90, 0x799b, 0xf484, 0xa27, 0x1, 0x1);
        gbc.writeMem(0x397f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9605, gbc.sp());
        EXPECT(0x3981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 024E
        gbc.setState(0xd46a, 0x1eae, 0xbe00, 0xd8cf, 0x8751, 0x794c, 0x1, 0x0);
        gbc.writeMem(0xd46a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1eae, gbc.sp());
        EXPECT(0xd46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46a));
        EXPECT(0xcb, gbc.readMem(0xd46b));
        // CB CB 024F
        gbc.setState(0x86af, 0xb08b, 0x67e0, 0x365b, 0x6376, 0x47f2, 0x0, 0x0);
        gbc.writeMem(0x86af, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb08b, gbc.sp());
        EXPECT(0x86b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86af));
        EXPECT(0xcb, gbc.readMem(0x86b0));
        // CB CB 0250
        gbc.setState(0x398, 0xdea6, 0x87e0, 0x9286, 0xe8c1, 0xbdbf, 0x1, 0x1);
        gbc.writeMem(0x398, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdea6, gbc.sp());
        EXPECT(0x39a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0251
        gbc.setState(0x973b, 0x8d62, 0x850, 0x56f4, 0xbae5, 0xa21d, 0x0, 0x1);
        gbc.writeMem(0x973b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8d62, gbc.sp());
        EXPECT(0x973d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973b));
        EXPECT(0xcb, gbc.readMem(0x973c));
        // CB CB 0253
        gbc.setState(0xb8e9, 0x90f8, 0x45f0, 0x4cb9, 0x4fdf, 0xae1e, 0x0, 0x1);
        gbc.writeMem(0xb8e9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x90f8, gbc.sp());
        EXPECT(0xb8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e9));
        EXPECT(0xcb, gbc.readMem(0xb8ea));
        // CB CB 0254
        gbc.setState(0xb04, 0x4e61, 0xced0, 0x8750, 0xc544, 0x7244, 0x1, 0x1);
        gbc.writeMem(0xb04, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4e61, gbc.sp());
        EXPECT(0xb06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0255
        gbc.setState(0x7626, 0x3c06, 0x2b80, 0x96f1, 0xd7eb, 0x22da, 0x0, 0x1);
        gbc.writeMem(0x7626, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3c06, gbc.sp());
        EXPECT(0x7628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0256
        gbc.setState(0xe86f, 0x1a25, 0x98d0, 0xc0a5, 0xcfd5, 0x30ca, 0x0, 0x0);
        gbc.writeMem(0xe86f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1a25, gbc.sp());
        EXPECT(0xe871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86f));
        EXPECT(0xcb, gbc.readMem(0xe870));
        // CB CB 0257
        gbc.setState(0x53f9, 0x14bd, 0x5870, 0x82bb, 0xf899, 0xd9da, 0x1, 0x1);
        gbc.writeMem(0x53f9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x14bd, gbc.sp());
        EXPECT(0x53fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0258
        gbc.setState(0x8822, 0xc50d, 0xcf70, 0x8126, 0x94b5, 0x3d88, 0x1, 0x1);
        gbc.writeMem(0x8822, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc50d, gbc.sp());
        EXPECT(0x8824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8822));
        EXPECT(0xcb, gbc.readMem(0x8823));
        // CB CB 0259
        gbc.setState(0x1c87, 0x859e, 0xa00, 0x249a, 0x692c, 0x939b, 0x1, 0x0);
        gbc.writeMem(0x1c87, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x859e, gbc.sp());
        EXPECT(0x1c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 025A
        gbc.setState(0x9e3, 0x4ca7, 0x69d0, 0x31fe, 0xeeba, 0x1771, 0x1, 0x1);
        gbc.writeMem(0x9e3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4ca7, gbc.sp());
        EXPECT(0x9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 025B
        gbc.setState(0x71b2, 0xf7ce, 0x7ba0, 0x155a, 0x5a10, 0xe851, 0x1, 0x0);
        gbc.writeMem(0x71b2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf7ce, gbc.sp());
        EXPECT(0x71b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 025C
        gbc.setState(0x4ca7, 0xafaf, 0x8670, 0xc412, 0x6db2, 0x6f89, 0x0, 0x0);
        gbc.writeMem(0x4ca7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xafaf, gbc.sp());
        EXPECT(0x4ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 025D
        gbc.setState(0xf26, 0x4813, 0x6a10, 0x95c2, 0xd090, 0xf1f5, 0x0, 0x1);
        gbc.writeMem(0xf26, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4813, gbc.sp());
        EXPECT(0xf28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 025E
        gbc.setState(0x18dc, 0x9243, 0x4d30, 0xc35c, 0xb9cf, 0x5414, 0x0, 0x1);
        gbc.writeMem(0x18dc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9243, gbc.sp());
        EXPECT(0x18de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 025F
        gbc.setState(0xaa9f, 0x4a36, 0x1250, 0xd441, 0x5a1, 0x80ac, 0x1, 0x0);
        gbc.writeMem(0xaa9f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4a36, gbc.sp());
        EXPECT(0xaaa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa9f));
        EXPECT(0xcb, gbc.readMem(0xaaa0));
        // CB CB 0260
        gbc.setState(0x28e, 0x7fde, 0xc40, 0xbec6, 0x8c37, 0x4876, 0x0, 0x0);
        gbc.writeMem(0x28e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7fde, gbc.sp());
        EXPECT(0x290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0261
        gbc.setState(0x9b94, 0x7610, 0xe5d0, 0xe3f, 0x6153, 0x5f5b, 0x1, 0x1);
        gbc.writeMem(0x9b94, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7610, gbc.sp());
        EXPECT(0x9b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b94));
        EXPECT(0xcb, gbc.readMem(0x9b95));
        // CB CB 0262
        gbc.setState(0xe795, 0x8fcb, 0x4790, 0xb3fa, 0xb278, 0xc9ba, 0x1, 0x0);
        gbc.writeMem(0xe795, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8fcb, gbc.sp());
        EXPECT(0xe797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe795));
        EXPECT(0xcb, gbc.readMem(0xe796));
        // CB CB 0264
        gbc.setState(0x642, 0x7219, 0xafa0, 0x6c92, 0x8d8b, 0x25d9, 0x0, 0x0);
        gbc.writeMem(0x642, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7219, gbc.sp());
        EXPECT(0x644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0265
        gbc.setState(0x3b1c, 0xdc60, 0x73d0, 0xd228, 0x96dc, 0xc0a8, 0x0, 0x1);
        gbc.writeMem(0x3b1c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdc60, gbc.sp());
        EXPECT(0x3b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0266
        gbc.setState(0xdade, 0xe0c1, 0xbd90, 0x6ba3, 0xb5c, 0xbd60, 0x1, 0x1);
        gbc.writeMem(0xdade, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe0c1, gbc.sp());
        EXPECT(0xdae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdade));
        EXPECT(0xcb, gbc.readMem(0xdadf));
        // CB CB 0267
        gbc.setState(0xec2, 0x7993, 0x2b20, 0x215d, 0x6b1d, 0xc986, 0x1, 0x0);
        gbc.writeMem(0xec2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7993, gbc.sp());
        EXPECT(0xec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0268
        gbc.setState(0xda19, 0xb0a1, 0x8af0, 0x1dfd, 0x4e0e, 0x4d7f, 0x0, 0x1);
        gbc.writeMem(0xda19, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb0a1, gbc.sp());
        EXPECT(0xda1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda19));
        EXPECT(0xcb, gbc.readMem(0xda1a));
        // CB CB 0269
        gbc.setState(0x8660, 0x2e4, 0x65d0, 0xc66a, 0x771, 0x62c8, 0x0, 0x0);
        gbc.writeMem(0x8660, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2e4, gbc.sp());
        EXPECT(0x8662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8660));
        EXPECT(0xcb, gbc.readMem(0x8661));
        // CB CB 026A
        gbc.setState(0x61fc, 0x7983, 0x6550, 0xa949, 0x5c36, 0xe921, 0x0, 0x0);
        gbc.writeMem(0x61fc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7983, gbc.sp());
        EXPECT(0x61fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 026B
        gbc.setState(0x1295, 0xc6a4, 0x7e50, 0xac44, 0xd71, 0x5894, 0x1, 0x0);
        gbc.writeMem(0x1295, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc6a4, gbc.sp());
        EXPECT(0x1297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 026C
        gbc.setState(0x9b8c, 0xaa04, 0xf710, 0xb5b9, 0x877, 0x8326, 0x0, 0x1);
        gbc.writeMem(0x9b8c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xaa04, gbc.sp());
        EXPECT(0x9b8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8c));
        EXPECT(0xcb, gbc.readMem(0x9b8d));
        // CB CB 026D
        gbc.setState(0x7f30, 0x1d0f, 0x1a80, 0x45ab, 0x5888, 0x7bd6, 0x1, 0x1);
        gbc.writeMem(0x7f30, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1d0f, gbc.sp());
        EXPECT(0x7f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 026E
        gbc.setState(0x1ad5, 0x14ea, 0x7110, 0x9ee, 0x9b22, 0xe2f6, 0x1, 0x1);
        gbc.writeMem(0x1ad5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x14ea, gbc.sp());
        EXPECT(0x1ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 026F
        gbc.setState(0x42c, 0xf5a3, 0x2b20, 0x3a9a, 0x247d, 0x731d, 0x1, 0x1);
        gbc.writeMem(0x42c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf5a3, gbc.sp());
        EXPECT(0x42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0270
        gbc.setState(0x568f, 0x3549, 0x2b50, 0xacb8, 0x4f56, 0x3de9, 0x1, 0x0);
        gbc.writeMem(0x568f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3549, gbc.sp());
        EXPECT(0x5691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0271
        gbc.setState(0x5cde, 0xa4a8, 0xa1f0, 0xeee9, 0x73ca, 0x9cc2, 0x0, 0x0);
        gbc.writeMem(0x5cde, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa4a8, gbc.sp());
        EXPECT(0x5ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0272
        gbc.setState(0x2f4e, 0x4c28, 0xb450, 0xeaab, 0x192, 0xbb5, 0x1, 0x1);
        gbc.writeMem(0x2f4e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4c28, gbc.sp());
        EXPECT(0x2f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0274
        gbc.setState(0x53a9, 0x1d95, 0x2240, 0x5167, 0x8422, 0xb5bf, 0x0, 0x0);
        gbc.writeMem(0x53a9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1d95, gbc.sp());
        EXPECT(0x53ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0275
        gbc.setState(0xab39, 0x1423, 0x7c30, 0x8c70, 0x676c, 0x4d4e, 0x1, 0x1);
        gbc.writeMem(0xab39, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1423, gbc.sp());
        EXPECT(0xab3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab39));
        EXPECT(0xcb, gbc.readMem(0xab3a));
        // CB CB 0276
        gbc.setState(0xa543, 0x7c48, 0x9580, 0x205d, 0xb40f, 0x2aa6, 0x0, 0x0);
        gbc.writeMem(0xa543, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7c48, gbc.sp());
        EXPECT(0xa545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa543));
        EXPECT(0xcb, gbc.readMem(0xa544));
        // CB CB 0277
        gbc.setState(0x1473, 0x616e, 0x5450, 0xb215, 0x5ec5, 0x3786, 0x1, 0x1);
        gbc.writeMem(0x1473, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x616e, gbc.sp());
        EXPECT(0x1475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0278
        gbc.setState(0x6ca5, 0x7e51, 0xcc50, 0x9108, 0xca4c, 0x7595, 0x1, 0x0);
        gbc.writeMem(0x6ca5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7e51, gbc.sp());
        EXPECT(0x6ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 027A
        gbc.setState(0x27db, 0xc61a, 0x3e50, 0x771d, 0xee7b, 0x6121, 0x0, 0x0);
        gbc.writeMem(0x27db, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc61a, gbc.sp());
        EXPECT(0x27dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 027B
        gbc.setState(0x7f03, 0xa42e, 0x24f0, 0xba70, 0x5b1c, 0x842f, 0x0, 0x1);
        gbc.writeMem(0x7f03, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa42e, gbc.sp());
        EXPECT(0x7f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 027C
        gbc.setState(0x35b4, 0xf20b, 0x8d30, 0xc20, 0x29f4, 0xaa4, 0x0, 0x0);
        gbc.writeMem(0x35b4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf20b, gbc.sp());
        EXPECT(0x35b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 027D
        gbc.setState(0x1880, 0x51cd, 0x27d0, 0x8189, 0xb690, 0x6b15, 0x1, 0x1);
        gbc.writeMem(0x1880, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x51cd, gbc.sp());
        EXPECT(0x1882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 027E
        gbc.setState(0x7c3f, 0x9123, 0x67e0, 0x3f05, 0x985, 0x5b1e, 0x1, 0x1);
        gbc.writeMem(0x7c3f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9123, gbc.sp());
        EXPECT(0x7c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 027F
        gbc.setState(0x8196, 0x841d, 0x6910, 0x835b, 0xba48, 0x245d, 0x0, 0x0);
        gbc.writeMem(0x8196, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x841d, gbc.sp());
        EXPECT(0x8198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8196));
        EXPECT(0xcb, gbc.readMem(0x8197));
        // CB CB 0280
        gbc.setState(0xae5f, 0x97fd, 0x120, 0xa848, 0xf275, 0x9588, 0x0, 0x0);
        gbc.writeMem(0xae5f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x97fd, gbc.sp());
        EXPECT(0xae61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae5f));
        EXPECT(0xcb, gbc.readMem(0xae60));
        // CB CB 0281
        gbc.setState(0x8e80, 0x7153, 0xac30, 0x5ede, 0xcb83, 0x8cb9, 0x1, 0x1);
        gbc.writeMem(0x8e80, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7153, gbc.sp());
        EXPECT(0x8e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e80));
        EXPECT(0xcb, gbc.readMem(0x8e81));
        // CB CB 0282
        gbc.setState(0x9f6f, 0x11ff, 0xc130, 0x596b, 0x28fe, 0x898e, 0x0, 0x1);
        gbc.writeMem(0x9f6f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x11ff, gbc.sp());
        EXPECT(0x9f71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f6f));
        EXPECT(0xcb, gbc.readMem(0x9f70));
        // CB CB 0283
        gbc.setState(0x2605, 0xaaab, 0x2b50, 0xf8e8, 0x243a, 0xca46, 0x1, 0x1);
        gbc.writeMem(0x2605, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xaaab, gbc.sp());
        EXPECT(0x2607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0284
        gbc.setState(0xb5b7, 0x38af, 0x2cb0, 0x2f84, 0x57ba, 0x4d0b, 0x1, 0x1);
        gbc.writeMem(0xb5b7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x38af, gbc.sp());
        EXPECT(0xb5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b7));
        EXPECT(0xcb, gbc.readMem(0xb5b8));
        // CB CB 0285
        gbc.setState(0x140b, 0xa47a, 0x61b0, 0xe5dd, 0xd287, 0x539d, 0x1, 0x0);
        gbc.writeMem(0x140b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa47a, gbc.sp());
        EXPECT(0x140d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0286
        gbc.setState(0x2c66, 0x7c43, 0xf070, 0x46ad, 0xaeff, 0x5040, 0x1, 0x1);
        gbc.writeMem(0x2c66, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7c43, gbc.sp());
        EXPECT(0x2c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0287
        gbc.setState(0xb0ec, 0x26bb, 0x19e0, 0x943b, 0x6537, 0xb920, 0x1, 0x0);
        gbc.writeMem(0xb0ec, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x26bb, gbc.sp());
        EXPECT(0xb0ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ec));
        EXPECT(0xcb, gbc.readMem(0xb0ed));
        // CB CB 0288
        gbc.setState(0xd3c, 0x8980, 0x7d70, 0xf8ab, 0x9e07, 0x39e6, 0x1, 0x0);
        gbc.writeMem(0xd3c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8980, gbc.sp());
        EXPECT(0xd3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0289
        gbc.setState(0x51f0, 0x2995, 0x6e30, 0x2d59, 0xe89a, 0xc83d, 0x0, 0x1);
        gbc.writeMem(0x51f0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2995, gbc.sp());
        EXPECT(0x51f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 028A
        gbc.setState(0xc63f, 0x322d, 0x51f0, 0xc654, 0xbd88, 0xcd97, 0x0, 0x1);
        gbc.writeMem(0xc63f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x322d, gbc.sp());
        EXPECT(0xc641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc63f));
        EXPECT(0xcb, gbc.readMem(0xc640));
        // CB CB 028B
        gbc.setState(0x3536, 0x3524, 0x5e90, 0x18c5, 0xaf8d, 0x805a, 0x0, 0x1);
        gbc.writeMem(0x3536, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3524, gbc.sp());
        EXPECT(0x3538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 028C
        gbc.setState(0x788d, 0xa624, 0x5a90, 0xf47, 0xda75, 0xa45c, 0x0, 0x0);
        gbc.writeMem(0x788d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa624, gbc.sp());
        EXPECT(0x788f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 028D
        gbc.setState(0x70a1, 0x38b, 0x1d00, 0x3041, 0x5089, 0x3265, 0x1, 0x1);
        gbc.writeMem(0x70a1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x38b, gbc.sp());
        EXPECT(0x70a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 028F
        gbc.setState(0x4efc, 0xea20, 0x3ca0, 0x67e, 0xc109, 0xa980, 0x1, 0x0);
        gbc.writeMem(0x4efc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xea20, gbc.sp());
        EXPECT(0x4efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0290
        gbc.setState(0x2ea1, 0xa805, 0xfca0, 0x381a, 0xab0a, 0x2542, 0x0, 0x1);
        gbc.writeMem(0x2ea1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa805, gbc.sp());
        EXPECT(0x2ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0291
        gbc.setState(0x73ca, 0x2d48, 0xa9e0, 0x631a, 0x65e, 0x447e, 0x1, 0x0);
        gbc.writeMem(0x73ca, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2d48, gbc.sp());
        EXPECT(0x73cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0292
        gbc.setState(0x74a1, 0x9855, 0x7da0, 0xa9f5, 0xc3e9, 0x4bcc, 0x0, 0x1);
        gbc.writeMem(0x74a1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9855, gbc.sp());
        EXPECT(0x74a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0293
        gbc.setState(0x5138, 0x6ecc, 0x1e50, 0x1828, 0x2f68, 0x51e1, 0x0, 0x1);
        gbc.writeMem(0x5138, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6ecc, gbc.sp());
        EXPECT(0x513a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0294
        gbc.setState(0xd910, 0x79d8, 0x65a0, 0x317f, 0x4e69, 0x7730, 0x0, 0x1);
        gbc.writeMem(0xd910, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x79d8, gbc.sp());
        EXPECT(0xd912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd910));
        EXPECT(0xcb, gbc.readMem(0xd911));
        // CB CB 0295
        gbc.setState(0x9302, 0x2e5f, 0x5110, 0x8e5f, 0x749a, 0x73f8, 0x0, 0x1);
        gbc.writeMem(0x9302, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2e5f, gbc.sp());
        EXPECT(0x9304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9302));
        EXPECT(0xcb, gbc.readMem(0x9303));
        // CB CB 0296
        gbc.setState(0xee5f, 0x590d, 0xa670, 0x7df6, 0x663b, 0x2a1f, 0x1, 0x0);
        gbc.writeMem(0xee5f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x590d, gbc.sp());
        EXPECT(0xee61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee5f));
        EXPECT(0xcb, gbc.readMem(0xee60));
        // CB CB 0297
        gbc.setState(0x96db, 0x8d08, 0xc720, 0xbf72, 0xe164, 0x18f0, 0x1, 0x0);
        gbc.writeMem(0x96db, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8d08, gbc.sp());
        EXPECT(0x96dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96db));
        EXPECT(0xcb, gbc.readMem(0x96dc));
        // CB CB 0298
        gbc.setState(0x6fb6, 0x1506, 0xd610, 0x6558, 0xfb16, 0x1ed6, 0x0, 0x0);
        gbc.writeMem(0x6fb6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1506, gbc.sp());
        EXPECT(0x6fb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0299
        gbc.setState(0x65b3, 0xb342, 0xc640, 0x22b9, 0x9b2c, 0x8f84, 0x0, 0x1);
        gbc.writeMem(0x65b3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb342, gbc.sp());
        EXPECT(0x65b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 029A
        gbc.setState(0xe35a, 0xaf4c, 0x8180, 0x12ff, 0xc2b3, 0xf458, 0x0, 0x0);
        gbc.writeMem(0xe35a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xaf4c, gbc.sp());
        EXPECT(0xe35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe35a));
        EXPECT(0xcb, gbc.readMem(0xe35b));
        // CB CB 029B
        gbc.setState(0x62c6, 0x7c3a, 0x2af0, 0x545d, 0xa726, 0x86d5, 0x0, 0x1);
        gbc.writeMem(0x62c6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7c3a, gbc.sp());
        EXPECT(0x62c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 029C
        gbc.setState(0xef85, 0x2aee, 0x65d0, 0x5616, 0xb2de, 0x7f91, 0x1, 0x0);
        gbc.writeMem(0xef85, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2aee, gbc.sp());
        EXPECT(0xef87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef85));
        EXPECT(0xcb, gbc.readMem(0xef86));
        // CB CB 029D
        gbc.setState(0xd9e1, 0x2898, 0x5c00, 0x388e, 0xf5b8, 0xc696, 0x0, 0x1);
        gbc.writeMem(0xd9e1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2898, gbc.sp());
        EXPECT(0xd9e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e1));
        EXPECT(0xcb, gbc.readMem(0xd9e2));
        // CB CB 029E
        gbc.setState(0xd49c, 0xf3fe, 0x2190, 0x655, 0x10b6, 0x5d93, 0x0, 0x1);
        gbc.writeMem(0xd49c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf3fe, gbc.sp());
        EXPECT(0xd49e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49c));
        EXPECT(0xcb, gbc.readMem(0xd49d));
        // CB CB 029F
        gbc.setState(0x9059, 0xace3, 0xde0, 0xfe23, 0xdf02, 0x4159, 0x0, 0x0);
        gbc.writeMem(0x9059, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xace3, gbc.sp());
        EXPECT(0x905b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9059));
        EXPECT(0xcb, gbc.readMem(0x905a));
        // CB CB 02A0
        gbc.setState(0xebf6, 0x4388, 0xa850, 0xe894, 0x6547, 0x19f9, 0x0, 0x0);
        gbc.writeMem(0xebf6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4388, gbc.sp());
        EXPECT(0xebf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf6));
        EXPECT(0xcb, gbc.readMem(0xebf7));
        // CB CB 02A1
        gbc.setState(0x79df, 0x8f7e, 0xa0a0, 0x859, 0xd211, 0xa2b1, 0x1, 0x0);
        gbc.writeMem(0x79df, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8f7e, gbc.sp());
        EXPECT(0x79e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02A2
        gbc.setState(0xae87, 0x2412, 0x530, 0x2286, 0xcbaa, 0x332a, 0x0, 0x0);
        gbc.writeMem(0xae87, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2412, gbc.sp());
        EXPECT(0xae89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae87));
        EXPECT(0xcb, gbc.readMem(0xae88));
        // CB CB 02A3
        gbc.setState(0x13bb, 0x8632, 0x39a0, 0x1547, 0xede5, 0x5e06, 0x1, 0x1);
        gbc.writeMem(0x13bb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8632, gbc.sp());
        EXPECT(0x13bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02A5
        gbc.setState(0xd572, 0xc27f, 0x9580, 0xe20e, 0x33fc, 0x2af7, 0x1, 0x0);
        gbc.writeMem(0xd572, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc27f, gbc.sp());
        EXPECT(0xd574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd572));
        EXPECT(0xcb, gbc.readMem(0xd573));
        // CB CB 02A6
        gbc.setState(0x2163, 0x468, 0xe830, 0x278d, 0x55f, 0x886, 0x1, 0x1);
        gbc.writeMem(0x2163, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x468, gbc.sp());
        EXPECT(0x2165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02A7
        gbc.setState(0x77aa, 0xcd41, 0x4ff0, 0x5f65, 0x563f, 0xf555, 0x0, 0x0);
        gbc.writeMem(0x77aa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcd41, gbc.sp());
        EXPECT(0x77ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02A9
        gbc.setState(0x29f4, 0xd0e6, 0x6b10, 0x2fe0, 0x31b7, 0x5555, 0x1, 0x0);
        gbc.writeMem(0x29f4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd0e6, gbc.sp());
        EXPECT(0x29f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02AB
        gbc.setState(0xb18f, 0xef47, 0x7d90, 0xe691, 0x909, 0xa05a, 0x1, 0x1);
        gbc.writeMem(0xb18f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xef47, gbc.sp());
        EXPECT(0xb191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb18f));
        EXPECT(0xcb, gbc.readMem(0xb190));
        // CB CB 02AC
        gbc.setState(0x7c72, 0x8e84, 0x6dc0, 0xae, 0x8560, 0x31b7, 0x1, 0x1);
        gbc.writeMem(0x7c72, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8e84, gbc.sp());
        EXPECT(0x7c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02AD
        gbc.setState(0x8d76, 0xf72e, 0x5fd0, 0xcffa, 0x2fb1, 0x1e1c, 0x0, 0x1);
        gbc.writeMem(0x8d76, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf72e, gbc.sp());
        EXPECT(0x8d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d76));
        EXPECT(0xcb, gbc.readMem(0x8d77));
        // CB CB 02AE
        gbc.setState(0xaf5c, 0x8ce4, 0xc5f0, 0xaf1f, 0x7a0a, 0x63b7, 0x0, 0x1);
        gbc.writeMem(0xaf5c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8ce4, gbc.sp());
        EXPECT(0xaf5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5c));
        EXPECT(0xcb, gbc.readMem(0xaf5d));
        // CB CB 02AF
        gbc.setState(0x170e, 0x96e6, 0xed00, 0xac27, 0x410f, 0x5809, 0x1, 0x1);
        gbc.writeMem(0x170e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x96e6, gbc.sp());
        EXPECT(0x1710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02B0
        gbc.setState(0xb46d, 0x9bcc, 0x8ea0, 0xb079, 0xc326, 0xc852, 0x1, 0x0);
        gbc.writeMem(0xb46d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9bcc, gbc.sp());
        EXPECT(0xb46f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46d));
        EXPECT(0xcb, gbc.readMem(0xb46e));
        // CB CB 02B1
        gbc.setState(0x3119, 0x1e93, 0x4020, 0xdcda, 0xe91d, 0xd3b7, 0x1, 0x1);
        gbc.writeMem(0x3119, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1e93, gbc.sp());
        EXPECT(0x311b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02B2
        gbc.setState(0x789f, 0x2525, 0xadc0, 0x61a, 0x8e48, 0x657f, 0x1, 0x0);
        gbc.writeMem(0x789f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2525, gbc.sp());
        EXPECT(0x78a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02B3
        gbc.setState(0xd1ee, 0x8aa7, 0x2420, 0x9140, 0x241c, 0xfa49, 0x1, 0x0);
        gbc.writeMem(0xd1ee, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8aa7, gbc.sp());
        EXPECT(0xd1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ee));
        EXPECT(0xcb, gbc.readMem(0xd1ef));
        // CB CB 02B4
        gbc.setState(0xad35, 0x7779, 0xfa90, 0xe5af, 0x34bf, 0xb540, 0x0, 0x0);
        gbc.writeMem(0xad35, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7779, gbc.sp());
        EXPECT(0xad37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad35));
        EXPECT(0xcb, gbc.readMem(0xad36));
        // CB CB 02B5
        gbc.setState(0xb881, 0xb390, 0x9c30, 0x25e3, 0x2ed3, 0xb6b0, 0x0, 0x0);
        gbc.writeMem(0xb881, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb390, gbc.sp());
        EXPECT(0xb883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb881));
        EXPECT(0xcb, gbc.readMem(0xb882));
        // CB CB 02B6
        gbc.setState(0x2947, 0x35d0, 0x400, 0x22c1, 0xab07, 0xb425, 0x0, 0x1);
        gbc.writeMem(0x2947, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x35d0, gbc.sp());
        EXPECT(0x2949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02B7
        gbc.setState(0x2780, 0x1462, 0x95e0, 0x717, 0x1779, 0x2c76, 0x1, 0x0);
        gbc.writeMem(0x2780, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1462, gbc.sp());
        EXPECT(0x2782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02B8
        gbc.setState(0xeea6, 0x5769, 0x5fb0, 0xdd0e, 0xf158, 0x807, 0x0, 0x0);
        gbc.writeMem(0xeea6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5769, gbc.sp());
        EXPECT(0xeea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea6));
        EXPECT(0xcb, gbc.readMem(0xeea7));
        // CB CB 02B9
        gbc.setState(0x94a4, 0x9a95, 0x1600, 0xdc49, 0x366f, 0xac78, 0x1, 0x0);
        gbc.writeMem(0x94a4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9a95, gbc.sp());
        EXPECT(0x94a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94a4));
        EXPECT(0xcb, gbc.readMem(0x94a5));
        // CB CB 02BA
        gbc.setState(0xe35c, 0xb10a, 0xd420, 0x2608, 0xdd32, 0xa359, 0x1, 0x0);
        gbc.writeMem(0xe35c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb10a, gbc.sp());
        EXPECT(0xe35e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe35c));
        EXPECT(0xcb, gbc.readMem(0xe35d));
        // CB CB 02BB
        gbc.setState(0x94b, 0xf2fc, 0x3da0, 0x5385, 0x43b2, 0xb9b8, 0x0, 0x0);
        gbc.writeMem(0x94b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf2fc, gbc.sp());
        EXPECT(0x94d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02BC
        gbc.setState(0xe4a6, 0xc610, 0x7ee0, 0xa27f, 0x5341, 0x1561, 0x0, 0x0);
        gbc.writeMem(0xe4a6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc610, gbc.sp());
        EXPECT(0xe4a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a6));
        EXPECT(0xcb, gbc.readMem(0xe4a7));
        // CB CB 02BD
        gbc.setState(0x68a9, 0xaaa9, 0x10a0, 0x59b9, 0xfe81, 0x8e5d, 0x1, 0x1);
        gbc.writeMem(0x68a9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xaaa9, gbc.sp());
        EXPECT(0x68ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02BE
        gbc.setState(0x9393, 0xe634, 0x3f30, 0x4d2c, 0x720f, 0x455f, 0x1, 0x0);
        gbc.writeMem(0x9393, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe634, gbc.sp());
        EXPECT(0x9395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9393));
        EXPECT(0xcb, gbc.readMem(0x9394));
        // CB CB 02BF
        gbc.setState(0x7098, 0xd031, 0x2780, 0x1fdf, 0x28e8, 0x1cb8, 0x1, 0x0);
        gbc.writeMem(0x7098, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd031, gbc.sp());
        EXPECT(0x709a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02C0
        gbc.setState(0x212a, 0xe056, 0xea50, 0x521b, 0x5dd1, 0x6a9d, 0x1, 0x0);
        gbc.writeMem(0x212a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe056, gbc.sp());
        EXPECT(0x212c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02C1
        gbc.setState(0xd50a, 0x4cf1, 0x2850, 0x2712, 0xd97, 0x96da, 0x0, 0x0);
        gbc.writeMem(0xd50a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4cf1, gbc.sp());
        EXPECT(0xd50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd50a));
        EXPECT(0xcb, gbc.readMem(0xd50b));
        // CB CB 02C2
        gbc.setState(0x9ab7, 0xceed, 0x3ee0, 0x866b, 0x117e, 0xb821, 0x1, 0x0);
        gbc.writeMem(0x9ab7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xceed, gbc.sp());
        EXPECT(0x9ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab7));
        EXPECT(0xcb, gbc.readMem(0x9ab8));
        // CB CB 02C3
        gbc.setState(0x7d13, 0x2f7a, 0x9300, 0xf83e, 0xcb6a, 0xf911, 0x0, 0x1);
        gbc.writeMem(0x7d13, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2f7a, gbc.sp());
        EXPECT(0x7d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02C5
        gbc.setState(0x255c, 0x2d, 0x1070, 0x2311, 0x2a11, 0xef4d, 0x0, 0x1);
        gbc.writeMem(0x255c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2d, gbc.sp());
        EXPECT(0x255e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02C6
        gbc.setState(0xaa6f, 0x536f, 0x9500, 0x104c, 0xe031, 0xfffd, 0x1, 0x1);
        gbc.writeMem(0xaa6f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x536f, gbc.sp());
        EXPECT(0xaa71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa6f));
        EXPECT(0xcb, gbc.readMem(0xaa70));
        // CB CB 02C7
        gbc.setState(0x2600, 0x856d, 0x6a10, 0x5a64, 0x8b24, 0xff27, 0x1, 0x1);
        gbc.writeMem(0x2600, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x856d, gbc.sp());
        EXPECT(0x2602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02C8
        gbc.setState(0x9684, 0x4fdb, 0x5890, 0x9ef9, 0xbafe, 0xdc47, 0x1, 0x0);
        gbc.writeMem(0x9684, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4fdb, gbc.sp());
        EXPECT(0x9686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9684));
        EXPECT(0xcb, gbc.readMem(0x9685));
        // CB CB 02C9
        gbc.setState(0x91da, 0x15ee, 0xb410, 0x82de, 0xf627, 0xd7b4, 0x1, 0x0);
        gbc.writeMem(0x91da, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x15ee, gbc.sp());
        EXPECT(0x91dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91da));
        EXPECT(0xcb, gbc.readMem(0x91db));
        // CB CB 02CA
        gbc.setState(0x77e4, 0x5ab6, 0x12b0, 0x69a8, 0xbd2a, 0xffbc, 0x0, 0x1);
        gbc.writeMem(0x77e4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5ab6, gbc.sp());
        EXPECT(0x77e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02CB
        gbc.setState(0xd679, 0x6218, 0xe070, 0x27aa, 0x8a27, 0xc999, 0x0, 0x1);
        gbc.writeMem(0xd679, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6218, gbc.sp());
        EXPECT(0xd67b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd679));
        EXPECT(0xcb, gbc.readMem(0xd67a));
        // CB CB 02CC
        gbc.setState(0xe6ef, 0xeff3, 0xf650, 0xe9ed, 0x8ac5, 0x4884, 0x0, 0x0);
        gbc.writeMem(0xe6ef, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xeff3, gbc.sp());
        EXPECT(0xe6f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ef));
        EXPECT(0xcb, gbc.readMem(0xe6f0));
        // CB CB 02CD
        gbc.setState(0xc7a7, 0xbaf1, 0x3c70, 0x633a, 0xba39, 0x30a8, 0x0, 0x0);
        gbc.writeMem(0xc7a7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xbaf1, gbc.sp());
        EXPECT(0xc7a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a7));
        EXPECT(0xcb, gbc.readMem(0xc7a8));
        // CB CB 02CE
        gbc.setState(0x5013, 0x6a14, 0xcb90, 0x2638, 0xe913, 0xbb8e, 0x1, 0x0);
        gbc.writeMem(0x5013, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6a14, gbc.sp());
        EXPECT(0x5015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02D0
        gbc.setState(0xdaca, 0x8976, 0x7d90, 0x856b, 0xaa36, 0xd6b2, 0x0, 0x1);
        gbc.writeMem(0xdaca, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8976, gbc.sp());
        EXPECT(0xdacc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaca));
        EXPECT(0xcb, gbc.readMem(0xdacb));
        // CB CB 02D1
        gbc.setState(0x71e7, 0x60bb, 0x5480, 0x5242, 0x8516, 0xc41b, 0x1, 0x0);
        gbc.writeMem(0x71e7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x60bb, gbc.sp());
        EXPECT(0x71e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02D2
        gbc.setState(0x1cbd, 0x1ffd, 0x95c0, 0xe915, 0xee35, 0x76b3, 0x1, 0x0);
        gbc.writeMem(0x1cbd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1ffd, gbc.sp());
        EXPECT(0x1cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02D3
        gbc.setState(0x6006, 0xde9f, 0xf9f0, 0x3bf8, 0xa93d, 0xb6c8, 0x1, 0x1);
        gbc.writeMem(0x6006, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xde9f, gbc.sp());
        EXPECT(0x6008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02D4
        gbc.setState(0xd2f3, 0x5a93, 0x1710, 0x305f, 0x9ee2, 0xabe2, 0x1, 0x1);
        gbc.writeMem(0xd2f3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5a93, gbc.sp());
        EXPECT(0xd2f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f3));
        EXPECT(0xcb, gbc.readMem(0xd2f4));
        // CB CB 02D5
        gbc.setState(0xe6f3, 0xc342, 0xa840, 0x39c0, 0x1903, 0xa5a4, 0x1, 0x0);
        gbc.writeMem(0xe6f3, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc342, gbc.sp());
        EXPECT(0xe6f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f3));
        EXPECT(0xcb, gbc.readMem(0xe6f4));
        // CB CB 02D6
        gbc.setState(0x771, 0x5503, 0xee00, 0x8cbb, 0x8c02, 0x4b8f, 0x1, 0x0);
        gbc.writeMem(0x771, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5503, gbc.sp());
        EXPECT(0x773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02D7
        gbc.setState(0x881a, 0xe732, 0x46c0, 0xe47d, 0xdf96, 0xf2bd, 0x1, 0x1);
        gbc.writeMem(0x881a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe732, gbc.sp());
        EXPECT(0x881c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881a));
        EXPECT(0xcb, gbc.readMem(0x881b));
        // CB CB 02D8
        gbc.setState(0x22b9, 0xe7, 0xf50, 0xec45, 0xa9ca, 0x1f4c, 0x1, 0x1);
        gbc.writeMem(0x22b9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe7, gbc.sp());
        EXPECT(0x22bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02D9
        gbc.setState(0xb656, 0xdeee, 0x4e70, 0x6185, 0x9880, 0x3947, 0x1, 0x0);
        gbc.writeMem(0xb656, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdeee, gbc.sp());
        EXPECT(0xb658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb656));
        EXPECT(0xcb, gbc.readMem(0xb657));
        // CB CB 02DB
        gbc.setState(0x77ef, 0x84d2, 0x5dd0, 0xbe5a, 0x5a77, 0x1ca5, 0x1, 0x1);
        gbc.writeMem(0x77ef, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x84d2, gbc.sp());
        EXPECT(0x77f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02DC
        gbc.setState(0xb019, 0xf512, 0x7c50, 0x8fb6, 0x4e14, 0x6ae6, 0x0, 0x0);
        gbc.writeMem(0xb019, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf512, gbc.sp());
        EXPECT(0xb01b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb019));
        EXPECT(0xcb, gbc.readMem(0xb01a));
        // CB CB 02DD
        gbc.setState(0x7fb7, 0x25b1, 0xb070, 0x541f, 0xe8a5, 0x4b00, 0x1, 0x0);
        gbc.writeMem(0x7fb7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x25b1, gbc.sp());
        EXPECT(0x7fb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02DE
        gbc.setState(0x6910, 0x7550, 0xf5f0, 0xa97e, 0x41a0, 0xf5ea, 0x1, 0x0);
        gbc.writeMem(0x6910, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7550, gbc.sp());
        EXPECT(0x6912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02DF
        gbc.setState(0xed99, 0xbc75, 0x59f0, 0xf57a, 0x7df2, 0xddd, 0x1, 0x1);
        gbc.writeMem(0xed99, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbc75, gbc.sp());
        EXPECT(0xed9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed99));
        EXPECT(0xcb, gbc.readMem(0xed9a));
        // CB CB 02E1
        gbc.setState(0x77eb, 0x2daf, 0xa890, 0x70b1, 0xe826, 0xd790, 0x1, 0x0);
        gbc.writeMem(0x77eb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2daf, gbc.sp());
        EXPECT(0x77ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02E2
        gbc.setState(0x741d, 0x3828, 0x6b80, 0x71c4, 0x436b, 0x16a2, 0x1, 0x1);
        gbc.writeMem(0x741d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3828, gbc.sp());
        EXPECT(0x741f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02E3
        gbc.setState(0xa29d, 0x57d4, 0x1c60, 0x7865, 0x6c69, 0x47fb, 0x0, 0x0);
        gbc.writeMem(0xa29d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x57d4, gbc.sp());
        EXPECT(0xa29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa29d));
        EXPECT(0xcb, gbc.readMem(0xa29e));
        // CB CB 02E4
        gbc.setState(0x5c9f, 0x8d7c, 0x9a40, 0xe9f5, 0x1b6d, 0x1fc2, 0x1, 0x0);
        gbc.writeMem(0x5c9f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8d7c, gbc.sp());
        EXPECT(0x5ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02E5
        gbc.setState(0x1332, 0x58f3, 0x92f0, 0xf861, 0x11bd, 0x999e, 0x1, 0x0);
        gbc.writeMem(0x1332, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x58f3, gbc.sp());
        EXPECT(0x1334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02E6
        gbc.setState(0x2dc4, 0x2c7, 0x4260, 0x57e3, 0xe15d, 0xd7be, 0x1, 0x1);
        gbc.writeMem(0x2dc4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2c7, gbc.sp());
        EXPECT(0x2dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02E7
        gbc.setState(0xced8, 0x19dd, 0xe020, 0xccc5, 0xc0, 0xcd53, 0x1, 0x0);
        gbc.writeMem(0xced8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x19dd, gbc.sp());
        EXPECT(0xceda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced8));
        EXPECT(0xcb, gbc.readMem(0xced9));
        // CB CB 02E8
        gbc.setState(0xad11, 0xd1d3, 0xe660, 0x6f51, 0x9b3d, 0x9f37, 0x0, 0x1);
        gbc.writeMem(0xad11, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd1d3, gbc.sp());
        EXPECT(0xad13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad11));
        EXPECT(0xcb, gbc.readMem(0xad12));
        // CB CB 02E9
        gbc.setState(0xaa06, 0x680c, 0x69e0, 0x3665, 0x2ff7, 0x17c2, 0x0, 0x1);
        gbc.writeMem(0xaa06, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x680c, gbc.sp());
        EXPECT(0xaa08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa06));
        EXPECT(0xcb, gbc.readMem(0xaa07));
        // CB CB 02EA
        gbc.setState(0x27af, 0x3ed9, 0xdfe0, 0xdd3e, 0xa60d, 0x8b75, 0x0, 0x0);
        gbc.writeMem(0x27af, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3ed9, gbc.sp());
        EXPECT(0x27b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02EB
        gbc.setState(0x75a7, 0x1d93, 0x5390, 0x3701, 0x3f73, 0x83b, 0x1, 0x0);
        gbc.writeMem(0x75a7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1d93, gbc.sp());
        EXPECT(0x75a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02EC
        gbc.setState(0x6c7f, 0x1253, 0x33e0, 0x28ae, 0x615, 0xf74c, 0x0, 0x1);
        gbc.writeMem(0x6c7f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1253, gbc.sp());
        EXPECT(0x6c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02ED
        gbc.setState(0x7fff, 0x4c5e, 0x8360, 0xff5f, 0x55c7, 0xb286, 0x0, 0x0);
        gbc.writeMem(0x7fff, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4c5e, gbc.sp());
        EXPECT(0x8001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8000));
        // CB CB 02EE
        gbc.setState(0xa047, 0xbb08, 0x7830, 0xb7a4, 0x1c41, 0x10ae, 0x1, 0x1);
        gbc.writeMem(0xa047, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbb08, gbc.sp());
        EXPECT(0xa049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa047));
        EXPECT(0xcb, gbc.readMem(0xa048));
        // CB CB 02EF
        gbc.setState(0xd4f0, 0x4c0b, 0xbc70, 0xe61c, 0x5d67, 0x89bc, 0x0, 0x0);
        gbc.writeMem(0xd4f0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4c0b, gbc.sp());
        EXPECT(0xd4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f0));
        EXPECT(0xcb, gbc.readMem(0xd4f1));
        // CB CB 02F0
        gbc.setState(0xbf45, 0x9598, 0xad0, 0xc4cf, 0x2ae, 0x9e6e, 0x1, 0x1);
        gbc.writeMem(0xbf45, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9598, gbc.sp());
        EXPECT(0xbf47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf45));
        EXPECT(0xcb, gbc.readMem(0xbf46));
        // CB CB 02F1
        gbc.setState(0x4b6e, 0xeb98, 0xf0c0, 0xa3e, 0xf536, 0x7f48, 0x0, 0x1);
        gbc.writeMem(0x4b6e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xeb98, gbc.sp());
        EXPECT(0x4b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02F2
        gbc.setState(0xc985, 0x22d4, 0x1510, 0x6f7a, 0x3375, 0x9cd3, 0x1, 0x1);
        gbc.writeMem(0xc985, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x22d4, gbc.sp());
        EXPECT(0xc987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc985));
        EXPECT(0xcb, gbc.readMem(0xc986));
        // CB CB 02F3
        gbc.setState(0x3d5, 0x9a56, 0xf5f0, 0x1505, 0xac35, 0xe3b2, 0x1, 0x0);
        gbc.writeMem(0x3d5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9a56, gbc.sp());
        EXPECT(0x3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 02F4
        gbc.setState(0xcde6, 0x7a77, 0x4a10, 0x2e10, 0x5daf, 0x83b4, 0x0, 0x1);
        gbc.writeMem(0xcde6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7a77, gbc.sp());
        EXPECT(0xcde8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcde6));
        EXPECT(0xcb, gbc.readMem(0xcde7));
        // CB CB 02F5
        gbc.setState(0x7128, 0x7489, 0x4660, 0xf5f7, 0x10af, 0x2835, 0x1, 0x1);
        gbc.writeMem(0x7128, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7489, gbc.sp());
        EXPECT(0x712a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02F6
        gbc.setState(0x3fd9, 0x672d, 0x51a0, 0xc9c9, 0x6b49, 0xb905, 0x0, 0x1);
        gbc.writeMem(0x3fd9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x672d, gbc.sp());
        EXPECT(0x3fdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02F7
        gbc.setState(0xa621, 0xbe68, 0xe580, 0x8ff1, 0xe60e, 0xe8f4, 0x0, 0x0);
        gbc.writeMem(0xa621, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbe68, gbc.sp());
        EXPECT(0xa623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa621));
        EXPECT(0xcb, gbc.readMem(0xa622));
        // CB CB 02F8
        gbc.setState(0x9b7a, 0x45cf, 0x8c50, 0xf8a1, 0x67bc, 0x5a9, 0x0, 0x0);
        gbc.writeMem(0x9b7a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x45cf, gbc.sp());
        EXPECT(0x9b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b7a));
        EXPECT(0xcb, gbc.readMem(0x9b7b));
        // CB CB 02F9
        gbc.setState(0xe6bf, 0x9991, 0x400, 0xae1d, 0xca68, 0x909c, 0x1, 0x0);
        gbc.writeMem(0xe6bf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9991, gbc.sp());
        EXPECT(0xe6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6bf));
        EXPECT(0xcb, gbc.readMem(0xe6c0));
        // CB CB 02FA
        gbc.setState(0xefc5, 0x390f, 0x8740, 0x4952, 0x10b0, 0x1fcb, 0x0, 0x1);
        gbc.writeMem(0xefc5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x390f, gbc.sp());
        EXPECT(0xefc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc5));
        EXPECT(0xcb, gbc.readMem(0xefc6));
        // CB CB 02FB
        gbc.setState(0xba3d, 0x7581, 0x8950, 0x3707, 0x1511, 0xb915, 0x1, 0x0);
        gbc.writeMem(0xba3d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7581, gbc.sp());
        EXPECT(0xba3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3d));
        EXPECT(0xcb, gbc.readMem(0xba3e));
        // CB CB 02FC
        gbc.setState(0x1f7b, 0x2ef6, 0x8320, 0x72d8, 0x921b, 0x23ef, 0x1, 0x1);
        gbc.writeMem(0x1f7b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2ef6, gbc.sp());
        EXPECT(0x1f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02FD
        gbc.setState(0xf98, 0xb819, 0xb0e0, 0x1c7b, 0x199f, 0xfec, 0x1, 0x0);
        gbc.writeMem(0xf98, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb819, gbc.sp());
        EXPECT(0xf9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 02FF
        gbc.setState(0x8927, 0x90c3, 0xc4b0, 0x90b1, 0xf9e4, 0xc802, 0x1, 0x0);
        gbc.writeMem(0x8927, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x90c3, gbc.sp());
        EXPECT(0x8929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8927));
        EXPECT(0xcb, gbc.readMem(0x8928));
        // CB CB 0300
        gbc.setState(0x5a32, 0xe886, 0xff50, 0x4dfe, 0x407e, 0x5208, 0x0, 0x1);
        gbc.writeMem(0x5a32, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe886, gbc.sp());
        EXPECT(0x5a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0301
        gbc.setState(0x1ccc, 0x382c, 0xce0, 0xe808, 0x6697, 0x6679, 0x0, 0x0);
        gbc.writeMem(0x1ccc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x382c, gbc.sp());
        EXPECT(0x1cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0302
        gbc.setState(0x554, 0x171, 0xc4b0, 0x4f5, 0xc4d7, 0x773e, 0x0, 0x0);
        gbc.writeMem(0x554, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x171, gbc.sp());
        EXPECT(0x556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0303
        gbc.setState(0xcdaf, 0x7dc7, 0x7440, 0x773a, 0x3469, 0x7f5d, 0x0, 0x0);
        gbc.writeMem(0xcdaf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7dc7, gbc.sp());
        EXPECT(0xcdb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdaf));
        EXPECT(0xcb, gbc.readMem(0xcdb0));
        // CB CB 0304
        gbc.setState(0xba7c, 0x2d44, 0x5fc0, 0xdf4d, 0xdfd5, 0x321e, 0x1, 0x1);
        gbc.writeMem(0xba7c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2d44, gbc.sp());
        EXPECT(0xba7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba7c));
        EXPECT(0xcb, gbc.readMem(0xba7d));
        // CB CB 0305
        gbc.setState(0x5b4c, 0x2567, 0x1b80, 0x3532, 0xe1f7, 0xa503, 0x1, 0x1);
        gbc.writeMem(0x5b4c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2567, gbc.sp());
        EXPECT(0x5b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0306
        gbc.setState(0x2662, 0x2e, 0x2f70, 0xd55e, 0x5928, 0x6f57, 0x0, 0x0);
        gbc.writeMem(0x2662, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2e, gbc.sp());
        EXPECT(0x2664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0307
        gbc.setState(0xa18f, 0xa1d6, 0x4a50, 0x6aec, 0xf18d, 0xeb4e, 0x0, 0x0);
        gbc.writeMem(0xa18f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa1d6, gbc.sp());
        EXPECT(0xa191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa18f));
        EXPECT(0xcb, gbc.readMem(0xa190));
        // CB CB 0308
        gbc.setState(0xeda9, 0x56b2, 0xfa50, 0x9fdf, 0xfede, 0xbf0f, 0x1, 0x1);
        gbc.writeMem(0xeda9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x56b2, gbc.sp());
        EXPECT(0xedab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda9));
        EXPECT(0xcb, gbc.readMem(0xedaa));
        // CB CB 0309
        gbc.setState(0xb028, 0x8df8, 0xde70, 0x85e5, 0x5b0e, 0x3a4, 0x0, 0x0);
        gbc.writeMem(0xb028, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8df8, gbc.sp());
        EXPECT(0xb02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb028));
        EXPECT(0xcb, gbc.readMem(0xb029));
        // CB CB 030A
        gbc.setState(0x13c8, 0x4cb0, 0xb3a0, 0xe9e5, 0x1ec2, 0x97a3, 0x1, 0x1);
        gbc.writeMem(0x13c8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4cb0, gbc.sp());
        EXPECT(0x13ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 030B
        gbc.setState(0xe34, 0x5304, 0x20e0, 0x4894, 0xbb3b, 0x8c17, 0x1, 0x0);
        gbc.writeMem(0xe34, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5304, gbc.sp());
        EXPECT(0xe36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 030C
        gbc.setState(0x8ef4, 0xc05f, 0xe140, 0xa87c, 0x6bad, 0xf467, 0x0, 0x0);
        gbc.writeMem(0x8ef4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc05f, gbc.sp());
        EXPECT(0x8ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef4));
        EXPECT(0xcb, gbc.readMem(0x8ef5));
        // CB CB 030D
        gbc.setState(0x4e29, 0x3efb, 0xfef0, 0xf59c, 0xf5ee, 0x74a4, 0x1, 0x1);
        gbc.writeMem(0x4e29, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3efb, gbc.sp());
        EXPECT(0x4e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 030E
        gbc.setState(0x6fde, 0x8757, 0xc210, 0x2e34, 0xb9eb, 0x9024, 0x1, 0x0);
        gbc.writeMem(0x6fde, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8757, gbc.sp());
        EXPECT(0x6fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 030F
        gbc.setState(0x48ac, 0xf722, 0xed60, 0xca69, 0xaf6f, 0xa718, 0x0, 0x0);
        gbc.writeMem(0x48ac, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf722, gbc.sp());
        EXPECT(0x48ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0310
        gbc.setState(0x3b6c, 0x503d, 0x3b50, 0x2142, 0x1b96, 0xdee5, 0x1, 0x1);
        gbc.writeMem(0x3b6c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x503d, gbc.sp());
        EXPECT(0x3b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0311
        gbc.setState(0xb73d, 0xc911, 0xba80, 0x74b9, 0x2b6f, 0xf7f7, 0x0, 0x0);
        gbc.writeMem(0xb73d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc911, gbc.sp());
        EXPECT(0xb73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb73d));
        EXPECT(0xcb, gbc.readMem(0xb73e));
        // CB CB 0312
        gbc.setState(0x81a9, 0xd60b, 0x9730, 0x3e1b, 0x910d, 0x5164, 0x1, 0x1);
        gbc.writeMem(0x81a9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd60b, gbc.sp());
        EXPECT(0x81ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a9));
        EXPECT(0xcb, gbc.readMem(0x81aa));
        // CB CB 0313
        gbc.setState(0x635d, 0xbc45, 0xba10, 0xd789, 0x2192, 0x5b4b, 0x1, 0x1);
        gbc.writeMem(0x635d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbc45, gbc.sp());
        EXPECT(0x635f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0314
        gbc.setState(0xda2f, 0xf961, 0x40, 0xe490, 0x5923, 0x3828, 0x0, 0x0);
        gbc.writeMem(0xda2f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf961, gbc.sp());
        EXPECT(0xda31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda2f));
        EXPECT(0xcb, gbc.readMem(0xda30));
        // CB CB 0315
        gbc.setState(0x41ef, 0xfc00, 0xc610, 0x579e, 0x1e74, 0x4e63, 0x1, 0x0);
        gbc.writeMem(0x41ef, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfc00, gbc.sp());
        EXPECT(0x41f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0316
        gbc.setState(0xb82e, 0x72c3, 0xd8e0, 0xe27f, 0x8936, 0x8ad, 0x0, 0x0);
        gbc.writeMem(0xb82e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x72c3, gbc.sp());
        EXPECT(0xb830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb82e));
        EXPECT(0xcb, gbc.readMem(0xb82f));
        // CB CB 0317
        gbc.setState(0x34f6, 0x7130, 0x1b90, 0x7350, 0xc3f8, 0x9a1d, 0x1, 0x0);
        gbc.writeMem(0x34f6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7130, gbc.sp());
        EXPECT(0x34f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0318
        gbc.setState(0xc321, 0xc2f, 0x98b0, 0xf434, 0xb5e4, 0x41f6, 0x0, 0x0);
        gbc.writeMem(0xc321, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc2f, gbc.sp());
        EXPECT(0xc323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc321));
        EXPECT(0xcb, gbc.readMem(0xc322));
        // CB CB 0319
        gbc.setState(0xaeed, 0x8779, 0xf480, 0x1272, 0x257e, 0xac52, 0x1, 0x0);
        gbc.writeMem(0xaeed, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8779, gbc.sp());
        EXPECT(0xaeef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeed));
        EXPECT(0xcb, gbc.readMem(0xaeee));
        // CB CB 031B
        gbc.setState(0x875e, 0x4e72, 0x7700, 0x9a78, 0x4add, 0x5633, 0x0, 0x1);
        gbc.writeMem(0x875e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4e72, gbc.sp());
        EXPECT(0x8760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x875e));
        EXPECT(0xcb, gbc.readMem(0x875f));
        // CB CB 031C
        gbc.setState(0xd885, 0xedcd, 0xac90, 0xa97b, 0xedb2, 0xad43, 0x1, 0x1);
        gbc.writeMem(0xd885, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xedcd, gbc.sp());
        EXPECT(0xd887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd885));
        EXPECT(0xcb, gbc.readMem(0xd886));
        // CB CB 031D
        gbc.setState(0x1f61, 0xea8d, 0x7e00, 0x760b, 0xeb35, 0x6be3, 0x1, 0x0);
        gbc.writeMem(0x1f61, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xea8d, gbc.sp());
        EXPECT(0x1f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 031E
        gbc.setState(0x10cd, 0x6a10, 0x3f60, 0x645b, 0x72b7, 0xdffc, 0x1, 0x1);
        gbc.writeMem(0x10cd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6a10, gbc.sp());
        EXPECT(0x10cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 031F
        gbc.setState(0xb408, 0x53a9, 0x80d0, 0xbc25, 0xe40b, 0xcb44, 0x0, 0x0);
        gbc.writeMem(0xb408, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x53a9, gbc.sp());
        EXPECT(0xb40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb408));
        EXPECT(0xcb, gbc.readMem(0xb409));
        // CB CB 0320
        gbc.setState(0x32b9, 0x2ab5, 0xff10, 0x80df, 0x84e1, 0xb757, 0x1, 0x0);
        gbc.writeMem(0x32b9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2ab5, gbc.sp());
        EXPECT(0x32bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0321
        gbc.setState(0xd0e, 0x53dc, 0x8d20, 0x3158, 0x7330, 0xe581, 0x0, 0x0);
        gbc.writeMem(0xd0e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x53dc, gbc.sp());
        EXPECT(0xd10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0322
        gbc.setState(0xa3e8, 0xb143, 0xf160, 0x537a, 0x2280, 0x420a, 0x1, 0x1);
        gbc.writeMem(0xa3e8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb143, gbc.sp());
        EXPECT(0xa3ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e8));
        EXPECT(0xcb, gbc.readMem(0xa3e9));
        // CB CB 0323
        gbc.setState(0x6c3b, 0xf96, 0x2860, 0xb3c, 0x67df, 0xc8db, 0x0, 0x1);
        gbc.writeMem(0x6c3b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf96, gbc.sp());
        EXPECT(0x6c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0324
        gbc.setState(0xb609, 0xe286, 0x6f60, 0xebd6, 0xfa28, 0xe1e8, 0x0, 0x1);
        gbc.writeMem(0xb609, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe286, gbc.sp());
        EXPECT(0xb60b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb609));
        EXPECT(0xcb, gbc.readMem(0xb60a));
        // CB CB 0325
        gbc.setState(0xb4de, 0x41c8, 0xe690, 0xf690, 0xa507, 0xb917, 0x1, 0x0);
        gbc.writeMem(0xb4de, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x41c8, gbc.sp());
        EXPECT(0xb4e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4de));
        EXPECT(0xcb, gbc.readMem(0xb4df));
        // CB CB 0326
        gbc.setState(0xce18, 0xc9a6, 0x4830, 0x9f0d, 0xb5c1, 0x1813, 0x0, 0x1);
        gbc.writeMem(0xce18, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc9a6, gbc.sp());
        EXPECT(0xce1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce18));
        EXPECT(0xcb, gbc.readMem(0xce19));
        // CB CB 0327
        gbc.setState(0xa3fd, 0xc019, 0xc2e0, 0x3677, 0x5cdd, 0x4578, 0x1, 0x1);
        gbc.writeMem(0xa3fd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc019, gbc.sp());
        EXPECT(0xa3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fd));
        EXPECT(0xcb, gbc.readMem(0xa3fe));
        // CB CB 0328
        gbc.setState(0xb3d2, 0xd55f, 0xd120, 0xa165, 0xd2a, 0x5aa5, 0x1, 0x1);
        gbc.writeMem(0xb3d2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd55f, gbc.sp());
        EXPECT(0xb3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d2));
        EXPECT(0xcb, gbc.readMem(0xb3d3));
        // CB CB 0329
        gbc.setState(0x3275, 0xdbce, 0xff80, 0x2c0c, 0x9bd2, 0x819f, 0x1, 0x1);
        gbc.writeMem(0x3275, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdbce, gbc.sp());
        EXPECT(0x3277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 032A
        gbc.setState(0x6ad6, 0xf3a3, 0x2f40, 0x6193, 0x7b92, 0x38e4, 0x1, 0x0);
        gbc.writeMem(0x6ad6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf3a3, gbc.sp());
        EXPECT(0x6ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 032B
        gbc.setState(0xce0a, 0xa57c, 0x5b40, 0xb1ff, 0xcc7c, 0x4266, 0x1, 0x1);
        gbc.writeMem(0xce0a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa57c, gbc.sp());
        EXPECT(0xce0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce0a));
        EXPECT(0xcb, gbc.readMem(0xce0b));
        // CB CB 032C
        gbc.setState(0x139f, 0x8d0f, 0x5e70, 0x1c0a, 0x5955, 0x132c, 0x0, 0x1);
        gbc.writeMem(0x139f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8d0f, gbc.sp());
        EXPECT(0x13a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 032D
        gbc.setState(0x4805, 0xb49d, 0x24f0, 0x2410, 0xeadb, 0x269b, 0x1, 0x1);
        gbc.writeMem(0x4805, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb49d, gbc.sp());
        EXPECT(0x4807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 032E
        gbc.setState(0x3138, 0xe3fd, 0x1ad0, 0xb842, 0x9074, 0xc2f8, 0x0, 0x1);
        gbc.writeMem(0x3138, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe3fd, gbc.sp());
        EXPECT(0x313a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 032F
        gbc.setState(0x77b8, 0x22b8, 0xd890, 0x834b, 0xc316, 0x63ec, 0x0, 0x0);
        gbc.writeMem(0x77b8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x22b8, gbc.sp());
        EXPECT(0x77ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0330
        gbc.setState(0x2f10, 0xdb44, 0x7520, 0xdca3, 0xa3a6, 0xa0f7, 0x1, 0x1);
        gbc.writeMem(0x2f10, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdb44, gbc.sp());
        EXPECT(0x2f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0331
        gbc.setState(0x413d, 0x7e9, 0xc230, 0x33e5, 0xc331, 0x7702, 0x0, 0x1);
        gbc.writeMem(0x413d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7e9, gbc.sp());
        EXPECT(0x413f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0332
        gbc.setState(0x54, 0xe674, 0xc290, 0x6957, 0xb2be, 0xfaec, 0x1, 0x1);
        gbc.writeMem(0x54, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe674, gbc.sp());
        EXPECT(0x56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0334
        gbc.setState(0xc826, 0xa605, 0xc400, 0x41a1, 0x7f3b, 0x3dac, 0x1, 0x0);
        gbc.writeMem(0xc826, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa605, gbc.sp());
        EXPECT(0xc828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc826));
        EXPECT(0xcb, gbc.readMem(0xc827));
        // CB CB 0335
        gbc.setState(0x2443, 0xc288, 0x2390, 0xc486, 0xd2f8, 0xc9e5, 0x1, 0x0);
        gbc.writeMem(0x2443, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc288, gbc.sp());
        EXPECT(0x2445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0336
        gbc.setState(0xd4d1, 0xc065, 0x2af0, 0xa593, 0xc512, 0x6d62, 0x0, 0x1);
        gbc.writeMem(0xd4d1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc065, gbc.sp());
        EXPECT(0xd4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d1));
        EXPECT(0xcb, gbc.readMem(0xd4d2));
        // CB CB 0337
        gbc.setState(0x19a5, 0x5ed2, 0x6b40, 0x577d, 0x97e, 0xa836, 0x0, 0x0);
        gbc.writeMem(0x19a5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5ed2, gbc.sp());
        EXPECT(0x19a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0338
        gbc.setState(0xb0c, 0x3b42, 0x91e0, 0x900a, 0xcae4, 0x7fa9, 0x1, 0x1);
        gbc.writeMem(0xb0c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3b42, gbc.sp());
        EXPECT(0xb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0339
        gbc.setState(0xd0ef, 0x5b40, 0xcce0, 0x5a46, 0x427b, 0x7f35, 0x0, 0x0);
        gbc.writeMem(0xd0ef, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5b40, gbc.sp());
        EXPECT(0xd0f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ef));
        EXPECT(0xcb, gbc.readMem(0xd0f0));
        // CB CB 033A
        gbc.setState(0x6e71, 0xd899, 0xf010, 0x7c69, 0x9c60, 0xab33, 0x1, 0x1);
        gbc.writeMem(0x6e71, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd899, gbc.sp());
        EXPECT(0x6e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 033B
        gbc.setState(0x2b19, 0x9b8f, 0x42e0, 0xa121, 0x11e9, 0xda2b, 0x1, 0x1);
        gbc.writeMem(0x2b19, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9b8f, gbc.sp());
        EXPECT(0x2b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 033C
        gbc.setState(0x4427, 0x7cc4, 0x57d0, 0x61ce, 0x1e6a, 0x7b9c, 0x0, 0x1);
        gbc.writeMem(0x4427, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7cc4, gbc.sp());
        EXPECT(0x4429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 033D
        gbc.setState(0x4b06, 0x2aaa, 0x3820, 0xc9d, 0xa68e, 0xe2c0, 0x1, 0x1);
        gbc.writeMem(0x4b06, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2aaa, gbc.sp());
        EXPECT(0x4b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 033E
        gbc.setState(0x836e, 0x55cc, 0x6d00, 0xced, 0x3567, 0x5202, 0x0, 0x1);
        gbc.writeMem(0x836e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x55cc, gbc.sp());
        EXPECT(0x8370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836e));
        EXPECT(0xcb, gbc.readMem(0x836f));
        // CB CB 033F
        gbc.setState(0x7b13, 0x1e81, 0xc380, 0x6e0a, 0x5218, 0x3fe3, 0x1, 0x0);
        gbc.writeMem(0x7b13, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1e81, gbc.sp());
        EXPECT(0x7b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0341
        gbc.setState(0xe8bb, 0xbf80, 0xa900, 0x6665, 0x711e, 0x8c61, 0x0, 0x0);
        gbc.writeMem(0xe8bb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbf80, gbc.sp());
        EXPECT(0xe8bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8bb));
        EXPECT(0xcb, gbc.readMem(0xe8bc));
        // CB CB 0342
        gbc.setState(0x28fb, 0x82d5, 0x280, 0xb326, 0xce86, 0x5c88, 0x1, 0x0);
        gbc.writeMem(0x28fb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x82d5, gbc.sp());
        EXPECT(0x28fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0343
        gbc.setState(0x85ee, 0x5844, 0xa130, 0x9d54, 0x66df, 0xef58, 0x0, 0x0);
        gbc.writeMem(0x85ee, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5844, gbc.sp());
        EXPECT(0x85f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ee));
        EXPECT(0xcb, gbc.readMem(0x85ef));
        // CB CB 0344
        gbc.setState(0xd603, 0x56b, 0x7f00, 0x9551, 0x86a8, 0x7b74, 0x0, 0x1);
        gbc.writeMem(0xd603, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x56b, gbc.sp());
        EXPECT(0xd605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd603));
        EXPECT(0xcb, gbc.readMem(0xd604));
        // CB CB 0345
        gbc.setState(0x22bd, 0xe4a, 0xaac0, 0x7d63, 0x28be, 0xb388, 0x0, 0x1);
        gbc.writeMem(0x22bd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe4a, gbc.sp());
        EXPECT(0x22bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0346
        gbc.setState(0x22f0, 0xae9e, 0xb9c0, 0x21ec, 0x5e0c, 0xf482, 0x1, 0x0);
        gbc.writeMem(0x22f0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xae9e, gbc.sp());
        EXPECT(0x22f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0347
        gbc.setState(0x3314, 0x1282, 0x3550, 0x61e0, 0xcca0, 0xceb, 0x1, 0x0);
        gbc.writeMem(0x3314, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1282, gbc.sp());
        EXPECT(0x3316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0348
        gbc.setState(0x2505, 0x4716, 0xc090, 0x2936, 0x43ea, 0xa26f, 0x1, 0x0);
        gbc.writeMem(0x2505, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4716, gbc.sp());
        EXPECT(0x2507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0349
        gbc.setState(0x8d5, 0xeb63, 0x5d00, 0x4c2, 0xc93d, 0x8897, 0x0, 0x1);
        gbc.writeMem(0x8d5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xeb63, gbc.sp());
        EXPECT(0x8d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 034A
        gbc.setState(0x9d13, 0xc731, 0x280, 0x2e8a, 0xcba9, 0x7189, 0x1, 0x0);
        gbc.writeMem(0x9d13, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc731, gbc.sp());
        EXPECT(0x9d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d13));
        EXPECT(0xcb, gbc.readMem(0x9d14));
        // CB CB 034B
        gbc.setState(0x5ff0, 0x931b, 0xc030, 0xa891, 0x380a, 0xe101, 0x1, 0x1);
        gbc.writeMem(0x5ff0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x931b, gbc.sp());
        EXPECT(0x5ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 034C
        gbc.setState(0xc7b8, 0x95ab, 0x3f70, 0x8fd1, 0xfea1, 0xbdd7, 0x1, 0x1);
        gbc.writeMem(0xc7b8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x95ab, gbc.sp());
        EXPECT(0xc7ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b8));
        EXPECT(0xcb, gbc.readMem(0xc7b9));
        // CB CB 034D
        gbc.setState(0x353, 0x5732, 0x990, 0xe418, 0x2a42, 0x517a, 0x1, 0x0);
        gbc.writeMem(0x353, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5732, gbc.sp());
        EXPECT(0x355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 034E
        gbc.setState(0xe55, 0x7aa9, 0x1c00, 0xd48e, 0x2995, 0xa03a, 0x0, 0x1);
        gbc.writeMem(0xe55, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7aa9, gbc.sp());
        EXPECT(0xe57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 034F
        gbc.setState(0x5ac9, 0x4139, 0xe270, 0xce61, 0x740d, 0xd2d3, 0x1, 0x1);
        gbc.writeMem(0x5ac9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4139, gbc.sp());
        EXPECT(0x5acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0350
        gbc.setState(0xcb13, 0x3d78, 0x27d0, 0x65e5, 0x7467, 0xeef7, 0x0, 0x0);
        gbc.writeMem(0xcb13, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3d78, gbc.sp());
        EXPECT(0xcb15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb13));
        EXPECT(0xcb, gbc.readMem(0xcb14));
        // CB CB 0351
        gbc.setState(0xb050, 0x856c, 0xc020, 0xabc1, 0xa548, 0xa66a, 0x0, 0x1);
        gbc.writeMem(0xb050, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x856c, gbc.sp());
        EXPECT(0xb052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb050));
        EXPECT(0xcb, gbc.readMem(0xb051));
        // CB CB 0352
        gbc.setState(0x6e97, 0xf78, 0x37b0, 0x29ba, 0x3a74, 0x680f, 0x0, 0x0);
        gbc.writeMem(0x6e97, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf78, gbc.sp());
        EXPECT(0x6e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0353
        gbc.setState(0xa306, 0x49a0, 0xc0, 0x6e14, 0x147a, 0x43a8, 0x1, 0x1);
        gbc.writeMem(0xa306, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x49a0, gbc.sp());
        EXPECT(0xa308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa306));
        EXPECT(0xcb, gbc.readMem(0xa307));
        // CB CB 0354
        gbc.setState(0x11fa, 0xef33, 0x2a40, 0x283f, 0xe798, 0x299b, 0x1, 0x1);
        gbc.writeMem(0x11fa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xef33, gbc.sp());
        EXPECT(0x11fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0355
        gbc.setState(0x1e36, 0xa011, 0x4390, 0x5af1, 0x48c0, 0x4685, 0x0, 0x1);
        gbc.writeMem(0x1e36, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa011, gbc.sp());
        EXPECT(0x1e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0356
        gbc.setState(0x11b6, 0x761c, 0x5b0, 0x1bcc, 0xa5b3, 0x2432, 0x1, 0x0);
        gbc.writeMem(0x11b6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x761c, gbc.sp());
        EXPECT(0x11b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0357
        gbc.setState(0x8dcd, 0xd658, 0x9270, 0xa129, 0x307b, 0x70f6, 0x1, 0x1);
        gbc.writeMem(0x8dcd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd658, gbc.sp());
        EXPECT(0x8dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dcd));
        EXPECT(0xcb, gbc.readMem(0x8dce));
        // CB CB 0358
        gbc.setState(0x2238, 0x6b2e, 0x860, 0x8e96, 0xb591, 0x5d16, 0x0, 0x0);
        gbc.writeMem(0x2238, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6b2e, gbc.sp());
        EXPECT(0x223a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0359
        gbc.setState(0x78dc, 0x6be3, 0xeaf0, 0xc0fd, 0xbe4a, 0xaa50, 0x0, 0x1);
        gbc.writeMem(0x78dc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6be3, gbc.sp());
        EXPECT(0x78de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 035A
        gbc.setState(0x8042, 0x8d55, 0x2c10, 0x6d27, 0x180e, 0xccf8, 0x0, 0x0);
        gbc.writeMem(0x8042, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8d55, gbc.sp());
        EXPECT(0x8044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8042));
        EXPECT(0xcb, gbc.readMem(0x8043));
        // CB CB 035B
        gbc.setState(0x49f6, 0x704c, 0x5170, 0xf34, 0xeed1, 0x1a26, 0x0, 0x1);
        gbc.writeMem(0x49f6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x704c, gbc.sp());
        EXPECT(0x49f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 035C
        gbc.setState(0x63f8, 0x758b, 0x5090, 0xf900, 0x9f29, 0x7d91, 0x1, 0x1);
        gbc.writeMem(0x63f8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x758b, gbc.sp());
        EXPECT(0x63fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 035D
        gbc.setState(0x9788, 0x349f, 0x4290, 0x737, 0x8e83, 0x228e, 0x0, 0x1);
        gbc.writeMem(0x9788, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x349f, gbc.sp());
        EXPECT(0x978a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9788));
        EXPECT(0xcb, gbc.readMem(0x9789));
        // CB CB 035F
        gbc.setState(0x2c5, 0x8150, 0xe770, 0xb926, 0xee29, 0xbd66, 0x1, 0x0);
        gbc.writeMem(0x2c5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8150, gbc.sp());
        EXPECT(0x2c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0360
        gbc.setState(0x9d1f, 0x2e08, 0x9a00, 0x4772, 0xaa32, 0x84ed, 0x1, 0x0);
        gbc.writeMem(0x9d1f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2e08, gbc.sp());
        EXPECT(0x9d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1f));
        EXPECT(0xcb, gbc.readMem(0x9d20));
        // CB CB 0361
        gbc.setState(0x1240, 0xd02a, 0xa00, 0xe69, 0xfac6, 0xa7f, 0x0, 0x1);
        gbc.writeMem(0x1240, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd02a, gbc.sp());
        EXPECT(0x1242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0362
        gbc.setState(0x6d45, 0xb086, 0x4240, 0xdcbd, 0x91a8, 0xb427, 0x1, 0x1);
        gbc.writeMem(0x6d45, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb086, gbc.sp());
        EXPECT(0x6d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0363
        gbc.setState(0xd6a0, 0xbcd9, 0xcb60, 0x62bf, 0xa39c, 0x601b, 0x1, 0x1);
        gbc.writeMem(0xd6a0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbcd9, gbc.sp());
        EXPECT(0xd6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a0));
        EXPECT(0xcb, gbc.readMem(0xd6a1));
        // CB CB 0364
        gbc.setState(0x7878, 0x79b6, 0xb700, 0x41c6, 0x2dfd, 0x7039, 0x1, 0x1);
        gbc.writeMem(0x7878, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x79b6, gbc.sp());
        EXPECT(0x787a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0365
        gbc.setState(0xba23, 0x4b12, 0x71a0, 0x7046, 0x9032, 0x9b6f, 0x1, 0x1);
        gbc.writeMem(0xba23, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4b12, gbc.sp());
        EXPECT(0xba25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba23));
        EXPECT(0xcb, gbc.readMem(0xba24));
        // CB CB 0366
        gbc.setState(0x493a, 0xf373, 0xb5a0, 0x9fe7, 0xd9ee, 0x9d5e, 0x1, 0x1);
        gbc.writeMem(0x493a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf373, gbc.sp());
        EXPECT(0x493c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0367
        gbc.setState(0xeb04, 0xb443, 0x1980, 0xedb1, 0x427b, 0xb4b7, 0x1, 0x1);
        gbc.writeMem(0xeb04, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb443, gbc.sp());
        EXPECT(0xeb06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb04));
        EXPECT(0xcb, gbc.readMem(0xeb05));
        // CB CB 0368
        gbc.setState(0xda65, 0xf36f, 0x38c0, 0x9f07, 0xb03e, 0x427d, 0x0, 0x1);
        gbc.writeMem(0xda65, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf36f, gbc.sp());
        EXPECT(0xda67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda65));
        EXPECT(0xcb, gbc.readMem(0xda66));
        // CB CB 0369
        gbc.setState(0xa5ee, 0x6c83, 0x3780, 0x1bfe, 0xde6b, 0x985, 0x0, 0x1);
        gbc.writeMem(0xa5ee, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6c83, gbc.sp());
        EXPECT(0xa5f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ee));
        EXPECT(0xcb, gbc.readMem(0xa5ef));
        // CB CB 036A
        gbc.setState(0xa518, 0xf517, 0xa490, 0x61e3, 0x3cea, 0x2c5f, 0x0, 0x1);
        gbc.writeMem(0xa518, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf517, gbc.sp());
        EXPECT(0xa51a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa518));
        EXPECT(0xcb, gbc.readMem(0xa519));
        // CB CB 036B
        gbc.setState(0x2bfa, 0x8c2e, 0x91d0, 0xddd4, 0x181d, 0xfb8, 0x0, 0x0);
        gbc.writeMem(0x2bfa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8c2e, gbc.sp());
        EXPECT(0x2bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 036D
        gbc.setState(0x42fa, 0x316e, 0xe970, 0xf33a, 0x49d3, 0x6aeb, 0x0, 0x1);
        gbc.writeMem(0x42fa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x316e, gbc.sp());
        EXPECT(0x42fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 036E
        gbc.setState(0x35c1, 0x9e05, 0x5dd0, 0xd3c7, 0x7823, 0x5570, 0x0, 0x1);
        gbc.writeMem(0x35c1, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9e05, gbc.sp());
        EXPECT(0x35c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 036F
        gbc.setState(0xbe94, 0xc682, 0x6d60, 0xc3ef, 0x11e2, 0x5970, 0x1, 0x1);
        gbc.writeMem(0xbe94, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc682, gbc.sp());
        EXPECT(0xbe96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe94));
        EXPECT(0xcb, gbc.readMem(0xbe95));
        // CB CB 0370
        gbc.setState(0xee04, 0xa3b8, 0x91b0, 0x4376, 0xb4fd, 0xf305, 0x0, 0x1);
        gbc.writeMem(0xee04, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa3b8, gbc.sp());
        EXPECT(0xee06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee04));
        EXPECT(0xcb, gbc.readMem(0xee05));
        // CB CB 0371
        gbc.setState(0x5842, 0x6e09, 0x94a0, 0xba93, 0x999a, 0x913f, 0x1, 0x1);
        gbc.writeMem(0x5842, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6e09, gbc.sp());
        EXPECT(0x5844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0372
        gbc.setState(0x5669, 0x7d0f, 0x8c50, 0xe687, 0xd73, 0xef9b, 0x0, 0x1);
        gbc.writeMem(0x5669, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7d0f, gbc.sp());
        EXPECT(0x566b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0373
        gbc.setState(0xc7d5, 0xec4c, 0x4790, 0x2398, 0x8fd0, 0xeea6, 0x1, 0x1);
        gbc.writeMem(0xc7d5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xec4c, gbc.sp());
        EXPECT(0xc7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d5));
        EXPECT(0xcb, gbc.readMem(0xc7d6));
        // CB CB 0374
        gbc.setState(0xbf34, 0x9ff3, 0x8a30, 0xda9b, 0x3570, 0xb662, 0x0, 0x1);
        gbc.writeMem(0xbf34, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9ff3, gbc.sp());
        EXPECT(0xbf36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf34));
        EXPECT(0xcb, gbc.readMem(0xbf35));
        // CB CB 0376
        gbc.setState(0x89bc, 0x8943, 0xf800, 0x7f91, 0x773b, 0x73b5, 0x0, 0x0);
        gbc.writeMem(0x89bc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8943, gbc.sp());
        EXPECT(0x89be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89bc));
        EXPECT(0xcb, gbc.readMem(0x89bd));
        // CB CB 0377
        gbc.setState(0x2cab, 0x9497, 0x7d70, 0xa7b1, 0x71a1, 0x8481, 0x1, 0x0);
        gbc.writeMem(0x2cab, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9497, gbc.sp());
        EXPECT(0x2cad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0378
        gbc.setState(0xcc98, 0x2081, 0x3dc0, 0xf909, 0x8266, 0x50d5, 0x0, 0x1);
        gbc.writeMem(0xcc98, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2081, gbc.sp());
        EXPECT(0xcc9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc98));
        EXPECT(0xcb, gbc.readMem(0xcc99));
        // CB CB 0379
        gbc.setState(0xe11d, 0x1789, 0xde20, 0x87f2, 0x3b15, 0x6bd8, 0x0, 0x0);
        gbc.writeMem(0xe11d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1789, gbc.sp());
        EXPECT(0xe11f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe11d));
        EXPECT(0xcb, gbc.readMem(0xe11e));
        // CB CB 037A
        gbc.setState(0x10b7, 0x2b49, 0x32f0, 0xc6f, 0x8f77, 0xee0e, 0x0, 0x0);
        gbc.writeMem(0x10b7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2b49, gbc.sp());
        EXPECT(0x10b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 037B
        gbc.setState(0x6167, 0x2d0e, 0xed20, 0xec71, 0x5f77, 0x8a21, 0x1, 0x0);
        gbc.writeMem(0x6167, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2d0e, gbc.sp());
        EXPECT(0x6169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 037C
        gbc.setState(0x46c, 0xa9a2, 0xbaa0, 0xed1c, 0x5b55, 0x714, 0x1, 0x1);
        gbc.writeMem(0x46c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa9a2, gbc.sp());
        EXPECT(0x46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 037D
        gbc.setState(0xdd74, 0x51d9, 0x9120, 0xbaf4, 0x14c7, 0x7a63, 0x1, 0x1);
        gbc.writeMem(0xdd74, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x51d9, gbc.sp());
        EXPECT(0xdd76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd74));
        EXPECT(0xcb, gbc.readMem(0xdd75));
        // CB CB 037E
        gbc.setState(0x47b0, 0x5e38, 0x65f0, 0x17f6, 0xc722, 0x928c, 0x1, 0x0);
        gbc.writeMem(0x47b0, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5e38, gbc.sp());
        EXPECT(0x47b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 037F
        gbc.setState(0x9c47, 0x9a54, 0xfdf0, 0xbede, 0xd1fc, 0xd42e, 0x1, 0x1);
        gbc.writeMem(0x9c47, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9a54, gbc.sp());
        EXPECT(0x9c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c47));
        EXPECT(0xcb, gbc.readMem(0x9c48));
        // CB CB 0380
        gbc.setState(0x7f52, 0xa622, 0xfdb0, 0x499c, 0x4216, 0xaa4b, 0x1, 0x1);
        gbc.writeMem(0x7f52, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa622, gbc.sp());
        EXPECT(0x7f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0381
        gbc.setState(0x4e22, 0x8f34, 0x8080, 0x1dfd, 0x2a90, 0x136c, 0x1, 0x1);
        gbc.writeMem(0x4e22, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8f34, gbc.sp());
        EXPECT(0x4e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0382
        gbc.setState(0x5fac, 0x42aa, 0xa040, 0xa173, 0x21c6, 0x21d8, 0x1, 0x1);
        gbc.writeMem(0x5fac, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x42aa, gbc.sp());
        EXPECT(0x5fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0383
        gbc.setState(0x7e2a, 0x9ab4, 0x57d0, 0xcd78, 0x93c4, 0x33ca, 0x1, 0x0);
        gbc.writeMem(0x7e2a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9ab4, gbc.sp());
        EXPECT(0x7e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 0384
        gbc.setState(0xb8c4, 0xce69, 0x2370, 0x29e2, 0xd6e2, 0x7da8, 0x0, 0x1);
        gbc.writeMem(0xb8c4, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xce69, gbc.sp());
        EXPECT(0xb8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c4));
        EXPECT(0xcb, gbc.readMem(0xb8c5));
        // CB CB 0385
        gbc.setState(0x65f, 0xdb5e, 0xb500, 0x1878, 0xad02, 0xac02, 0x1, 0x1);
        gbc.writeMem(0x65f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdb5e, gbc.sp());
        EXPECT(0x661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0386
        gbc.setState(0x1160, 0x2ac8, 0x9440, 0xd3f2, 0x89dd, 0x1a96, 0x1, 0x0);
        gbc.writeMem(0x1160, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2ac8, gbc.sp());
        EXPECT(0x1162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0389
        gbc.setState(0x5b1a, 0xdb4b, 0xe170, 0xea9c, 0xac1, 0xb4c5, 0x1, 0x0);
        gbc.writeMem(0x5b1a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdb4b, gbc.sp());
        EXPECT(0x5b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 038A
        gbc.setState(0x2e49, 0x1c2a, 0x6990, 0x5e2f, 0xfd84, 0x266a, 0x1, 0x0);
        gbc.writeMem(0x2e49, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1c2a, gbc.sp());
        EXPECT(0x2e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 038B
        gbc.setState(0x6580, 0xa81f, 0x7950, 0x9a5b, 0x4ca5, 0xc898, 0x0, 0x0);
        gbc.writeMem(0x6580, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa81f, gbc.sp());
        EXPECT(0x6582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 038C
        gbc.setState(0x8da5, 0x228b, 0x2c30, 0x427a, 0x85cd, 0x9505, 0x0, 0x1);
        gbc.writeMem(0x8da5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x228b, gbc.sp());
        EXPECT(0x8da7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da5));
        EXPECT(0xcb, gbc.readMem(0x8da6));
        // CB CB 038D
        gbc.setState(0x30ba, 0x586c, 0xd970, 0xce23, 0x31f3, 0x10b5, 0x0, 0x0);
        gbc.writeMem(0x30ba, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x586c, gbc.sp());
        EXPECT(0x30bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 038E
        gbc.setState(0xb3dd, 0x55bb, 0x9800, 0xab8b, 0xc32d, 0x2e13, 0x0, 0x1);
        gbc.writeMem(0xb3dd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x55bb, gbc.sp());
        EXPECT(0xb3df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3dd));
        EXPECT(0xcb, gbc.readMem(0xb3de));
        // CB CB 038F
        gbc.setState(0x9e9f, 0x8b56, 0xae50, 0x9a5e, 0xb85a, 0xdb63, 0x1, 0x0);
        gbc.writeMem(0x9e9f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8b56, gbc.sp());
        EXPECT(0x9ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e9f));
        EXPECT(0xcb, gbc.readMem(0x9ea0));
        // CB CB 0390
        gbc.setState(0x6e15, 0x74ca, 0xa000, 0xcd89, 0xad9b, 0xc903, 0x0, 0x1);
        gbc.writeMem(0x6e15, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x74ca, gbc.sp());
        EXPECT(0x6e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0391
        gbc.setState(0xb291, 0xd083, 0xb740, 0xba8d, 0x15ad, 0x6efc, 0x1, 0x0);
        gbc.writeMem(0xb291, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd083, gbc.sp());
        EXPECT(0xb293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb291));
        EXPECT(0xcb, gbc.readMem(0xb292));
        // CB CB 0392
        gbc.setState(0x9d2a, 0x69c0, 0x86f0, 0x3d08, 0xc081, 0xb400, 0x0, 0x0);
        gbc.writeMem(0x9d2a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x69c0, gbc.sp());
        EXPECT(0x9d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2a));
        EXPECT(0xcb, gbc.readMem(0x9d2b));
        // CB CB 0393
        gbc.setState(0x3b83, 0xd94d, 0x840, 0x95fa, 0xd429, 0xc9e0, 0x1, 0x0);
        gbc.writeMem(0x3b83, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd94d, gbc.sp());
        EXPECT(0x3b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0394
        gbc.setState(0xd82d, 0xb0b, 0x1350, 0xaa1e, 0xd6c0, 0xc8c5, 0x0, 0x0);
        gbc.writeMem(0xd82d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb0b, gbc.sp());
        EXPECT(0xd82f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd82d));
        EXPECT(0xcb, gbc.readMem(0xd82e));
        // CB CB 0395
        gbc.setState(0x9007, 0x58c8, 0x8790, 0xa7ec, 0xf716, 0xd6e9, 0x0, 0x1);
        gbc.writeMem(0x9007, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x58c8, gbc.sp());
        EXPECT(0x9009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9007));
        EXPECT(0xcb, gbc.readMem(0x9008));
        // CB CB 0396
        gbc.setState(0x4615, 0x5473, 0x97c0, 0x7e3e, 0x9625, 0x3f5, 0x1, 0x1);
        gbc.writeMem(0x4615, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5473, gbc.sp());
        EXPECT(0x4617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0397
        gbc.setState(0xcc6d, 0x6681, 0xe630, 0x169f, 0xfc8c, 0x3997, 0x1, 0x1);
        gbc.writeMem(0xcc6d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6681, gbc.sp());
        EXPECT(0xcc6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc6d));
        EXPECT(0xcb, gbc.readMem(0xcc6e));
        // CB CB 0398
        gbc.setState(0xa99, 0x7819, 0x1320, 0x3b71, 0x4f5d, 0x1fd4, 0x1, 0x1);
        gbc.writeMem(0xa99, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7819, gbc.sp());
        EXPECT(0xa9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 0399
        gbc.setState(0x372c, 0xc605, 0x5ce0, 0xb10, 0x3def, 0x41b, 0x0, 0x1);
        gbc.writeMem(0x372c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc605, gbc.sp());
        EXPECT(0x372e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 039A
        gbc.setState(0xdbf8, 0xa948, 0x18d0, 0x89a3, 0x54c, 0xace6, 0x0, 0x0);
        gbc.writeMem(0xdbf8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa948, gbc.sp());
        EXPECT(0xdbfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf8));
        EXPECT(0xcb, gbc.readMem(0xdbf9));
        // CB CB 039B
        gbc.setState(0xe637, 0x335, 0xbc80, 0x8196, 0xe36f, 0x547d, 0x1, 0x0);
        gbc.writeMem(0xe637, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x335, gbc.sp());
        EXPECT(0xe639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe637));
        EXPECT(0xcb, gbc.readMem(0xe638));
        // CB CB 039C
        gbc.setState(0xc48c, 0x69cb, 0xc050, 0x6ad4, 0xf0c3, 0xdebf, 0x0, 0x0);
        gbc.writeMem(0xc48c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x69cb, gbc.sp());
        EXPECT(0xc48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc48c));
        EXPECT(0xcb, gbc.readMem(0xc48d));
        // CB CB 039D
        gbc.setState(0xd012, 0x17a7, 0x7380, 0xc554, 0x9f91, 0x18b9, 0x1, 0x0);
        gbc.writeMem(0xd012, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x17a7, gbc.sp());
        EXPECT(0xd014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd012));
        EXPECT(0xcb, gbc.readMem(0xd013));
        // CB CB 039E
        gbc.setState(0x558e, 0xefd8, 0xb9d0, 0xd7a0, 0x3e22, 0x5f18, 0x0, 0x1);
        gbc.writeMem(0x558e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xefd8, gbc.sp());
        EXPECT(0x5590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 039F
        gbc.setState(0x16e8, 0x75c3, 0x6200, 0xdb9b, 0xa581, 0xe10e, 0x1, 0x0);
        gbc.writeMem(0x16e8, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x75c3, gbc.sp());
        EXPECT(0x16ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03A0
        gbc.setState(0x917a, 0xa921, 0xcea0, 0x8e7, 0x4d45, 0x93ed, 0x1, 0x0);
        gbc.writeMem(0x917a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa921, gbc.sp());
        EXPECT(0x917c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x917a));
        EXPECT(0xcb, gbc.readMem(0x917b));
        // CB CB 03A1
        gbc.setState(0x65d2, 0x9f89, 0xa0f0, 0xa79b, 0xaebd, 0xb7c3, 0x0, 0x1);
        gbc.writeMem(0x65d2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9f89, gbc.sp());
        EXPECT(0x65d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03A2
        gbc.setState(0xe229, 0x2bee, 0x8dc0, 0xa43b, 0xbf09, 0x76e7, 0x1, 0x1);
        gbc.writeMem(0xe229, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2bee, gbc.sp());
        EXPECT(0xe22b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe229));
        EXPECT(0xcb, gbc.readMem(0xe22a));
        // CB CB 03A3
        gbc.setState(0xd22c, 0x39fc, 0x6ea0, 0x24ee, 0x4a23, 0x75ba, 0x0, 0x0);
        gbc.writeMem(0xd22c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x39fc, gbc.sp());
        EXPECT(0xd22e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22c));
        EXPECT(0xcb, gbc.readMem(0xd22d));
        // CB CB 03A6
        gbc.setState(0xcd21, 0x54e6, 0x7220, 0xe80c, 0x5d46, 0xe1fe, 0x0, 0x1);
        gbc.writeMem(0xcd21, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x54e6, gbc.sp());
        EXPECT(0xcd23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd21));
        EXPECT(0xcb, gbc.readMem(0xcd22));
        // CB CB 03A8
        gbc.setState(0xc9d9, 0x920e, 0x6bb0, 0xba1c, 0xc70, 0x6f51, 0x0, 0x0);
        gbc.writeMem(0xc9d9, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x920e, gbc.sp());
        EXPECT(0xc9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d9));
        EXPECT(0xcb, gbc.readMem(0xc9da));
        // CB CB 03AA
        gbc.setState(0xaa6, 0xb695, 0xf6b0, 0xd546, 0x1f8e, 0xcf5a, 0x1, 0x0);
        gbc.writeMem(0xaa6, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb695, gbc.sp());
        EXPECT(0xaa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03AB
        gbc.setState(0xbd50, 0x9399, 0x4980, 0x46b1, 0x1804, 0xa9bc, 0x1, 0x0);
        gbc.writeMem(0xbd50, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9399, gbc.sp());
        EXPECT(0xbd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd50));
        EXPECT(0xcb, gbc.readMem(0xbd51));
        // CB CB 03AC
        gbc.setState(0x5470, 0x5f7e, 0x4240, 0x57a7, 0xf67c, 0xfe38, 0x1, 0x1);
        gbc.writeMem(0x5470, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5f7e, gbc.sp());
        EXPECT(0x5472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03AD
        gbc.setState(0xeb00, 0x2003, 0x6a50, 0x54fd, 0x2a5e, 0x6f5a, 0x1, 0x1);
        gbc.writeMem(0xeb00, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2003, gbc.sp());
        EXPECT(0xeb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb00));
        EXPECT(0xcb, gbc.readMem(0xeb01));
        // CB CB 03AE
        gbc.setState(0x535, 0x1e3a, 0xdf60, 0x6cb3, 0x6aa8, 0xab7a, 0x1, 0x1);
        gbc.writeMem(0x535, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1e3a, gbc.sp());
        EXPECT(0x537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03AF
        gbc.setState(0x4c25, 0x2907, 0x43c0, 0x6cfc, 0xddb0, 0x3868, 0x0, 0x1);
        gbc.writeMem(0x4c25, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2907, gbc.sp());
        EXPECT(0x4c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03B0
        gbc.setState(0x9a9a, 0xd2c5, 0x9e90, 0xeebc, 0x766d, 0xad9d, 0x1, 0x1);
        gbc.writeMem(0x9a9a, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd2c5, gbc.sp());
        EXPECT(0x9a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a9a));
        EXPECT(0xcb, gbc.readMem(0x9a9b));
        // CB CB 03B1
        gbc.setState(0xd7c2, 0xb56e, 0xd270, 0xfb0b, 0xc99e, 0x5908, 0x1, 0x0);
        gbc.writeMem(0xd7c2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb56e, gbc.sp());
        EXPECT(0xd7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c2));
        EXPECT(0xcb, gbc.readMem(0xd7c3));
        // CB CB 03B3
        gbc.setState(0x49cc, 0x2e3b, 0xa580, 0xa5f7, 0x7aed, 0xfd5, 0x1, 0x1);
        gbc.writeMem(0x49cc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2e3b, gbc.sp());
        EXPECT(0x49ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03B4
        gbc.setState(0xd7cb, 0x56bc, 0x8d40, 0xaad3, 0x545c, 0xb0dc, 0x0, 0x0);
        gbc.writeMem(0xd7cb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x56bc, gbc.sp());
        EXPECT(0xd7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7cb));
        EXPECT(0xcb, gbc.readMem(0xd7cc));
        // CB CB 03B5
        gbc.setState(0xad34, 0xcf2b, 0x8910, 0xbcf1, 0x786c, 0x1b94, 0x1, 0x1);
        gbc.writeMem(0xad34, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcf2b, gbc.sp());
        EXPECT(0xad36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad34));
        EXPECT(0xcb, gbc.readMem(0xad35));
        // CB CB 03B6
        gbc.setState(0x97c, 0x9528, 0xc6a0, 0x9f53, 0xeda2, 0x847d, 0x1, 0x0);
        gbc.writeMem(0x97c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9528, gbc.sp());
        EXPECT(0x97e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03B7
        gbc.setState(0x824c, 0xc649, 0x4cb0, 0x8079, 0x7d14, 0x5b1b, 0x0, 0x1);
        gbc.writeMem(0x824c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc649, gbc.sp());
        EXPECT(0x824e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x824c));
        EXPECT(0xcb, gbc.readMem(0x824d));
        // CB CB 03B8
        gbc.setState(0xb2fd, 0xe7fe, 0x72f0, 0x6dec, 0x24f9, 0x3c77, 0x1, 0x1);
        gbc.writeMem(0xb2fd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe7fe, gbc.sp());
        EXPECT(0xb2ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2fd));
        EXPECT(0xcb, gbc.readMem(0xb2fe));
        // CB CB 03B9
        gbc.setState(0xaac, 0x79ae, 0x1f50, 0xc339, 0x53c6, 0x2a68, 0x1, 0x1);
        gbc.writeMem(0xaac, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x79ae, gbc.sp());
        EXPECT(0xaae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03BA
        gbc.setState(0xe8dc, 0x6061, 0x2c50, 0x5cb5, 0xd43f, 0x97e2, 0x0, 0x0);
        gbc.writeMem(0xe8dc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6061, gbc.sp());
        EXPECT(0xe8de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8dc));
        EXPECT(0xcb, gbc.readMem(0xe8dd));
        // CB CB 03BB
        gbc.setState(0x72ac, 0xee5e, 0x600, 0xca27, 0xede6, 0x3f1e, 0x0, 0x0);
        gbc.writeMem(0x72ac, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xee5e, gbc.sp());
        EXPECT(0x72ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03BC
        gbc.setState(0x5ada, 0xe167, 0x6020, 0x50af, 0x9844, 0xebfb, 0x1, 0x0);
        gbc.writeMem(0x5ada, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe167, gbc.sp());
        EXPECT(0x5adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03BD
        gbc.setState(0x5e72, 0xe53d, 0x4eb0, 0x3b0a, 0xa24, 0xe3cd, 0x0, 0x0);
        gbc.writeMem(0x5e72, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe53d, gbc.sp());
        EXPECT(0x5e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03BE
        gbc.setState(0x1d5f, 0xa56c, 0x20c0, 0x13b, 0x21e2, 0xf0c5, 0x0, 0x1);
        gbc.writeMem(0x1d5f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa56c, gbc.sp());
        EXPECT(0x1d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03BF
        gbc.setState(0x5779, 0x5ff2, 0xaa90, 0xbfae, 0x2f3b, 0x689c, 0x0, 0x0);
        gbc.writeMem(0x5779, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5ff2, gbc.sp());
        EXPECT(0x577b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03C0
        gbc.setState(0x4efd, 0xd3d1, 0x1bf0, 0x59a1, 0xd694, 0x2a9b, 0x0, 0x1);
        gbc.writeMem(0x4efd, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd3d1, gbc.sp());
        EXPECT(0x4eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03C1
        gbc.setState(0xbc04, 0xdbf9, 0x8fa0, 0x80c5, 0x453, 0x97ac, 0x0, 0x0);
        gbc.writeMem(0xbc04, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdbf9, gbc.sp());
        EXPECT(0xbc06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc04));
        EXPECT(0xcb, gbc.readMem(0xbc05));
        // CB CB 03C2
        gbc.setState(0xe360, 0xb9c, 0x6c70, 0x137a, 0xd030, 0x7758, 0x1, 0x0);
        gbc.writeMem(0xe360, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb9c, gbc.sp());
        EXPECT(0xe362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe360));
        EXPECT(0xcb, gbc.readMem(0xe361));
        // CB CB 03C3
        gbc.setState(0xc68c, 0xaa4e, 0xd0e0, 0x4b3f, 0x79ff, 0x88a8, 0x0, 0x0);
        gbc.writeMem(0xc68c, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xaa4e, gbc.sp());
        EXPECT(0xc68e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc68c));
        EXPECT(0xcb, gbc.readMem(0xc68d));
        // CB CB 03C4
        gbc.setState(0x547b, 0xa928, 0xa240, 0xa27e, 0xc7d3, 0x600b, 0x0, 0x1);
        gbc.writeMem(0x547b, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa928, gbc.sp());
        EXPECT(0x547d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03C5
        gbc.setState(0xe28, 0x4768, 0x8260, 0xf54d, 0xdb23, 0x2907, 0x0, 0x0);
        gbc.writeMem(0xe28, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4768, gbc.sp());
        EXPECT(0xe2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03C6
        gbc.setState(0x8248, 0x80af, 0x9f60, 0xabdb, 0xd2e0, 0x7316, 0x0, 0x0);
        gbc.writeMem(0x8248, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x80af, gbc.sp());
        EXPECT(0x824a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8248));
        EXPECT(0xcb, gbc.readMem(0x8249));
        // CB CB 03C7
        gbc.setState(0x5695, 0x8d08, 0xdb20, 0x13de, 0x1f85, 0x3af2, 0x1, 0x1);
        gbc.writeMem(0x5695, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8d08, gbc.sp());
        EXPECT(0x5697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03C8
        gbc.setState(0x82df, 0x2bbe, 0x3840, 0x467a, 0x35b, 0xd197, 0x0, 0x0);
        gbc.writeMem(0x82df, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2bbe, gbc.sp());
        EXPECT(0x82e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82df));
        EXPECT(0xcb, gbc.readMem(0x82e0));
        // CB CB 03C9
        gbc.setState(0x73bb, 0x6da3, 0x7810, 0x500f, 0xf799, 0xea47, 0x0, 0x0);
        gbc.writeMem(0x73bb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6da3, gbc.sp());
        EXPECT(0x73bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03CB
        gbc.setState(0x96ae, 0xcbbb, 0xdc40, 0xb9c1, 0x2945, 0xac81, 0x0, 0x0);
        gbc.writeMem(0x96ae, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcbbb, gbc.sp());
        EXPECT(0x96b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ae));
        EXPECT(0xcb, gbc.readMem(0x96af));
        // CB CB 03CC
        gbc.setState(0xd888, 0x76a, 0xa400, 0xfbc5, 0x91a8, 0x342e, 0x1, 0x1);
        gbc.writeMem(0xd888, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x76a, gbc.sp());
        EXPECT(0xd88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd888));
        EXPECT(0xcb, gbc.readMem(0xd889));
        // CB CB 03CD
        gbc.setState(0xc3ce, 0xc21d, 0xf750, 0xa814, 0xdcb6, 0x9623, 0x0, 0x0);
        gbc.writeMem(0xc3ce, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc21d, gbc.sp());
        EXPECT(0xc3d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ce));
        EXPECT(0xcb, gbc.readMem(0xc3cf));
        // CB CB 03CE
        gbc.setState(0x78f, 0x4b08, 0x7bf0, 0x19f2, 0x23a5, 0x215b, 0x0, 0x1);
        gbc.writeMem(0x78f, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4b08, gbc.sp());
        EXPECT(0x791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03CF
        gbc.setState(0x6bc7, 0x2e4c, 0x6bd0, 0x3f37, 0x531b, 0x5388, 0x0, 0x1);
        gbc.writeMem(0x6bc7, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2e4c, gbc.sp());
        EXPECT(0x6bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03D0
        gbc.setState(0x47cf, 0xca33, 0x4460, 0x4546, 0x259, 0xad7f, 0x0, 0x1);
        gbc.writeMem(0x47cf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xca33, gbc.sp());
        EXPECT(0x47d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03D1
        gbc.setState(0xdcae, 0xac13, 0x7cc0, 0x6839, 0x9742, 0xba55, 0x0, 0x1);
        gbc.writeMem(0xdcae, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xac13, gbc.sp());
        EXPECT(0xdcb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcae));
        EXPECT(0xcb, gbc.readMem(0xdcaf));
        // CB CB 03D3
        gbc.setState(0xaf0d, 0xd085, 0x1ff0, 0x4ea4, 0xcb6e, 0x1495, 0x0, 0x0);
        gbc.writeMem(0xaf0d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd085, gbc.sp());
        EXPECT(0xaf0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf0d));
        EXPECT(0xcb, gbc.readMem(0xaf0e));
        // CB CB 03D4
        gbc.setState(0x7346, 0xfc50, 0x9bb0, 0x4a4a, 0x9f36, 0x392a, 0x1, 0x0);
        gbc.writeMem(0x7346, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfc50, gbc.sp());
        EXPECT(0x7348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03D5
        gbc.setState(0xa821, 0x686d, 0x40b0, 0x7762, 0x1b6f, 0x6694, 0x1, 0x0);
        gbc.writeMem(0xa821, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x686d, gbc.sp());
        EXPECT(0xa823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa821));
        EXPECT(0xcb, gbc.readMem(0xa822));
        // CB CB 03D6
        gbc.setState(0x35bc, 0x2948, 0x7f70, 0xcc86, 0x1ced, 0x17e7, 0x0, 0x0);
        gbc.writeMem(0x35bc, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2948, gbc.sp());
        EXPECT(0x35be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03D7
        gbc.setState(0xdd9d, 0x368d, 0x2c80, 0x1e8d, 0xbde7, 0xce67, 0x1, 0x0);
        gbc.writeMem(0xdd9d, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x368d, gbc.sp());
        EXPECT(0xdd9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd9d));
        EXPECT(0xcb, gbc.readMem(0xdd9e));
        // CB CB 03D8
        gbc.setState(0x6fdf, 0x325e, 0x2220, 0x1043, 0x4268, 0x9a7d, 0x0, 0x0);
        gbc.writeMem(0x6fdf, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x325e, gbc.sp());
        EXPECT(0x6fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03D9
        gbc.setState(0x325e, 0xfa1b, 0xa0d0, 0x7be6, 0xd53d, 0x90f, 0x0, 0x1);
        gbc.writeMem(0x325e, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfa1b, gbc.sp());
        EXPECT(0x3260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03DA
        gbc.setState(0x58a2, 0xa9c4, 0xbd0, 0x7f26, 0x4381, 0x5550, 0x1, 0x0);
        gbc.writeMem(0x58a2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa9c4, gbc.sp());
        EXPECT(0x58a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03DB
        gbc.setState(0x2aa, 0xb6c8, 0xb970, 0x7d08, 0x8cc1, 0x7f5b, 0x0, 0x1);
        gbc.writeMem(0x2aa, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb6c8, gbc.sp());
        EXPECT(0x2ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03DC
        gbc.setState(0xaaec, 0x1914, 0x7010, 0xe792, 0xbcba, 0x2e9b, 0x1, 0x1);
        gbc.writeMem(0xaaec, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1914, gbc.sp());
        EXPECT(0xaaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaec));
        EXPECT(0xcb, gbc.readMem(0xaaed));
        // CB CB 03DD
        gbc.setState(0x5ef5, 0x4943, 0xba30, 0x6725, 0xe9ca, 0x6a4d, 0x1, 0x1);
        gbc.writeMem(0x5ef5, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4943, gbc.sp());
        EXPECT(0x5ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03DE
        gbc.setState(0xca66, 0xdf10, 0x4840, 0x512, 0x8cb1, 0x7593, 0x0, 0x1);
        gbc.writeMem(0xca66, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdf10, gbc.sp());
        EXPECT(0xca68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca66));
        EXPECT(0xcb, gbc.readMem(0xca67));
        // CB CB 03DF
        gbc.setState(0x6a98, 0x28c3, 0xe350, 0xd996, 0x8fa1, 0x457d, 0x1, 0x1);
        gbc.writeMem(0x6a98, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x28c3, gbc.sp());
        EXPECT(0x6a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CB 03E0
        gbc.setState(0x8c45, 0xa826, 0x8500, 0x3021, 0x5f44, 0xe18d, 0x0, 0x0);
        gbc.writeMem(0x8c45, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa826, gbc.sp());
        EXPECT(0x8c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c45));
        EXPECT(0xcb, gbc.readMem(0x8c46));
        // CB CB 03E1
        gbc.setState(0x5a22, 0x1ca0, 0x5540, 0xfc12, 0x2d4c, 0x1730, 0x1, 0x1);
        gbc.writeMem(0x5a22, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1ca0, gbc.sp());
        EXPECT(0x5a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03E2
        gbc.setState(0xc0e2, 0x41a7, 0xaab0, 0x3b38, 0x6a0, 0x4d5b, 0x1, 0x1);
        gbc.writeMem(0xc0e2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x41a7, gbc.sp());
        EXPECT(0xc0e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e2));
        EXPECT(0xcb, gbc.readMem(0xc0e3));
        // CB CB 03E3
        gbc.setState(0x4dfb, 0x6516, 0xf2e0, 0x4bfe, 0xbb6c, 0x37fe, 0x0, 0x0);
        gbc.writeMem(0x4dfb, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6516, gbc.sp());
        EXPECT(0x4dfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03E4
        gbc.setState(0x9cc2, 0x4355, 0x7720, 0xe997, 0xc6ff, 0x381b, 0x1, 0x0);
        gbc.writeMem(0x9cc2, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4355, gbc.sp());
        EXPECT(0x9cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc2));
        EXPECT(0xcb, gbc.readMem(0x9cc3));
        // CB CB 03E5
        gbc.setState(0x6880, 0xe168, 0x560, 0xa1fa, 0x82c2, 0xdcb9, 0x1, 0x0);
        gbc.writeMem(0x6880, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe168, gbc.sp());
        EXPECT(0x6882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CB 03E7
        gbc.setState(0x37df, 0x5fe6, 0x8f30, 0xc62, 0x557d, 0x7d02, 0x0, 0x0);
        gbc.writeMem(0x37df, { 0xcb, 0xcb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5fe6, gbc.sp());
        EXPECT(0x37e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
