    TEST(gbcemu, opcode_cb_28) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 28 0000
        gbc.setState(0x7087, 0xc453, 0x7890, 0xb21f, 0x86b3, 0x58a6, 0x1, 0x1);
        gbc.writeMem(0x7087, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc453);
        EXPECT(gbc.pc(), 0x7089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0001
        gbc.setState(0x540e, 0x9bce, 0xe950, 0x7081, 0xdc2c, 0xe2ee, 0x0, 0x1);
        gbc.writeMem(0x540e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x9bce);
        EXPECT(gbc.pc(), 0x5410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0002
        gbc.setState(0x989, 0xa9dc, 0x27b0, 0x1801, 0x9d37, 0x63d7, 0x1, 0x1);
        gbc.writeMem(0x989, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa9dc);
        EXPECT(gbc.pc(), 0x98b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0003
        gbc.setState(0x7c0, 0x450f, 0x57b0, 0xe9c9, 0x7b52, 0xe74d, 0x0, 0x1);
        gbc.writeMem(0x7c0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x450f);
        EXPECT(gbc.pc(), 0x7c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0004
        gbc.setState(0x529f, 0x84ae, 0xf1d0, 0xcf0e, 0x6b5d, 0x366b, 0x0, 0x1);
        gbc.writeMem(0x529f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x84ae);
        EXPECT(gbc.pc(), 0x52a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0005
        gbc.setState(0xc12a, 0x9b2a, 0x9e60, 0xc86a, 0xe504, 0xdd4d, 0x1, 0x0);
        gbc.writeMem(0xc12a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9b2a);
        EXPECT(gbc.pc(), 0xc12c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc12a), 0xcb);
        EXPECT(gbc.readMem(0xc12b), 0x28);
        // CB 28 0006
        gbc.setState(0x5bc2, 0x52, 0x4ae0, 0x9542, 0x838, 0xc9b9, 0x1, 0x0);
        gbc.writeMem(0x5bc2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x52);
        EXPECT(gbc.pc(), 0x5bc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0007
        gbc.setState(0x67f9, 0xc6a3, 0xbad0, 0xf890, 0x7321, 0x93a9, 0x1, 0x1);
        gbc.writeMem(0x67f9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc6a3);
        EXPECT(gbc.pc(), 0x67fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0008
        gbc.setState(0x5f4e, 0xaa5, 0xb770, 0x53ed, 0x9a0a, 0x7e5f, 0x0, 0x1);
        gbc.writeMem(0x5f4e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xaa5);
        EXPECT(gbc.pc(), 0x5f50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0009
        gbc.setState(0xb24f, 0x140, 0x2470, 0x9778, 0xa404, 0xb4ec, 0x1, 0x0);
        gbc.writeMem(0xb24f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x140);
        EXPECT(gbc.pc(), 0xb251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb24f), 0xcb);
        EXPECT(gbc.readMem(0xb250), 0x28);
        // CB 28 000A
        gbc.setState(0x33ea, 0xf10f, 0x7000, 0xe871, 0x433c, 0xff99, 0x0, 0x0);
        gbc.writeMem(0x33ea, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf10f);
        EXPECT(gbc.pc(), 0x33ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 000B
        gbc.setState(0x9557, 0xd5c8, 0xcd00, 0x46fd, 0xd9ce, 0x5f43, 0x0, 0x1);
        gbc.writeMem(0x9557, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd5c8);
        EXPECT(gbc.pc(), 0x9559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9557), 0xcb);
        EXPECT(gbc.readMem(0x9558), 0x28);
        // CB 28 000C
        gbc.setState(0x62a9, 0x6c40, 0x94b0, 0x197a, 0x6809, 0xd331, 0x0, 0x1);
        gbc.writeMem(0x62a9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6c40);
        EXPECT(gbc.pc(), 0x62ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 000D
        gbc.setState(0x808d, 0x733d, 0xdf50, 0xd53e, 0x7148, 0xad92, 0x0, 0x0);
        gbc.writeMem(0x808d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x733d);
        EXPECT(gbc.pc(), 0x808f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x808d), 0xcb);
        EXPECT(gbc.readMem(0x808e), 0x28);
        // CB 28 000E
        gbc.setState(0x9f7d, 0x4b70, 0x37f0, 0x913e, 0x9323, 0x755f, 0x1, 0x0);
        gbc.writeMem(0x9f7d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4b70);
        EXPECT(gbc.pc(), 0x9f7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f7d), 0xcb);
        EXPECT(gbc.readMem(0x9f7e), 0x28);
        // CB 28 000F
        gbc.setState(0xd672, 0x80e7, 0x59f0, 0x3986, 0xdb39, 0x3171, 0x0, 0x1);
        gbc.writeMem(0xd672, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x80e7);
        EXPECT(gbc.pc(), 0xd674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd672), 0xcb);
        EXPECT(gbc.readMem(0xd673), 0x28);
        // CB 28 0010
        gbc.setState(0x1c4f, 0x1e5e, 0x8c0, 0x6aff, 0xc303, 0x2fcb, 0x0, 0x1);
        gbc.writeMem(0x1c4f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1e5e);
        EXPECT(gbc.pc(), 0x1c51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0011
        gbc.setState(0xae41, 0xe061, 0x3420, 0x48ad, 0x276, 0x7c96, 0x0, 0x0);
        gbc.writeMem(0xae41, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe061);
        EXPECT(gbc.pc(), 0xae43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae41), 0xcb);
        EXPECT(gbc.readMem(0xae42), 0x28);
        // CB 28 0012
        gbc.setState(0xe11a, 0xfec6, 0x1c20, 0xe09e, 0x9701, 0xfe6c, 0x0, 0x1);
        gbc.writeMem(0xe11a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfec6);
        EXPECT(gbc.pc(), 0xe11c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe11a), 0xcb);
        EXPECT(gbc.readMem(0xe11b), 0x28);
        // CB 28 0013
        gbc.setState(0x793e, 0xcdb8, 0x1c00, 0xbb8a, 0xb755, 0x733, 0x0, 0x1);
        gbc.writeMem(0x793e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcdb8);
        EXPECT(gbc.pc(), 0x7940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0014
        gbc.setState(0xfc, 0xef42, 0xfd80, 0x93d6, 0xa25c, 0x41f9, 0x1, 0x0);
        gbc.writeMem(0xfc, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xef42);
        EXPECT(gbc.pc(), 0xfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0015
        gbc.setState(0xd139, 0x9eff, 0x4810, 0xa54f, 0x1cfe, 0xfcf8, 0x0, 0x1);
        gbc.writeMem(0xd139, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9eff);
        EXPECT(gbc.pc(), 0xd13b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd139), 0xcb);
        EXPECT(gbc.readMem(0xd13a), 0x28);
        // CB 28 0017
        gbc.setState(0x87c, 0xcf7a, 0xc1c0, 0x41e7, 0x37cc, 0x1443, 0x1, 0x0);
        gbc.writeMem(0x87c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xcf7a);
        EXPECT(gbc.pc(), 0x87e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0018
        gbc.setState(0xa9c0, 0xd21b, 0xa330, 0x951f, 0x8030, 0x848d, 0x0, 0x1);
        gbc.writeMem(0xa9c0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd21b);
        EXPECT(gbc.pc(), 0xa9c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9c0), 0xcb);
        EXPECT(gbc.readMem(0xa9c1), 0x28);
        // CB 28 0019
        gbc.setState(0xbad8, 0x74a8, 0xa530, 0xd3d0, 0x2cc5, 0x1577, 0x0, 0x0);
        gbc.writeMem(0xbad8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x74a8);
        EXPECT(gbc.pc(), 0xbada);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad8), 0xcb);
        EXPECT(gbc.readMem(0xbad9), 0x28);
        // CB 28 001A
        gbc.setState(0x6f12, 0xdb4f, 0x810, 0x29cd, 0xfb3c, 0x8bf6, 0x0, 0x1);
        gbc.writeMem(0x6f12, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xdb4f);
        EXPECT(gbc.pc(), 0x6f14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 001B
        gbc.setState(0xad76, 0x81d1, 0xb180, 0x6b07, 0x7704, 0x4386, 0x1, 0x0);
        gbc.writeMem(0xad76, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x81d1);
        EXPECT(gbc.pc(), 0xad78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad76), 0xcb);
        EXPECT(gbc.readMem(0xad77), 0x28);
        // CB 28 001C
        gbc.setState(0x61fd, 0x492b, 0xd730, 0x7cfc, 0x197d, 0xe7b7, 0x0, 0x0);
        gbc.writeMem(0x61fd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x492b);
        EXPECT(gbc.pc(), 0x61ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 001D
        gbc.setState(0x605c, 0x82ef, 0xe170, 0x5c9f, 0xc5d0, 0x8179, 0x1, 0x0);
        gbc.writeMem(0x605c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x82ef);
        EXPECT(gbc.pc(), 0x605e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 001F
        gbc.setState(0xc8ad, 0x35d5, 0xea0, 0xfa7, 0x28e4, 0x2d8d, 0x0, 0x0);
        gbc.writeMem(0xc8ad, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x35d5);
        EXPECT(gbc.pc(), 0xc8af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ad), 0xcb);
        EXPECT(gbc.readMem(0xc8ae), 0x28);
        // CB 28 0020
        gbc.setState(0x1404, 0x7df5, 0x3880, 0x151e, 0x55b4, 0xa022, 0x1, 0x1);
        gbc.writeMem(0x1404, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7df5);
        EXPECT(gbc.pc(), 0x1406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0021
        gbc.setState(0xeaba, 0xb255, 0x34a0, 0xdc3, 0xcd53, 0x45ba, 0x0, 0x1);
        gbc.writeMem(0xeaba, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb255);
        EXPECT(gbc.pc(), 0xeabc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaba), 0xcb);
        EXPECT(gbc.readMem(0xeabb), 0x28);
        // CB 28 0022
        gbc.setState(0xccca, 0xc772, 0x6c80, 0x8072, 0xe778, 0xa3a4, 0x1, 0x0);
        gbc.writeMem(0xccca, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc772);
        EXPECT(gbc.pc(), 0xcccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccca), 0xcb);
        EXPECT(gbc.readMem(0xcccb), 0x28);
        // CB 28 0023
        gbc.setState(0x31b0, 0xddca, 0x76c0, 0x5f4c, 0x4fbf, 0xb39e, 0x0, 0x0);
        gbc.writeMem(0x31b0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xddca);
        EXPECT(gbc.pc(), 0x31b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0024
        gbc.setState(0x4d0b, 0x69a9, 0x9cd0, 0xde46, 0xee8b, 0xd338, 0x0, 0x1);
        gbc.writeMem(0x4d0b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x69a9);
        EXPECT(gbc.pc(), 0x4d0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0025
        gbc.setState(0x6840, 0xba53, 0xf0c0, 0x6f90, 0xbf68, 0xd152, 0x1, 0x1);
        gbc.writeMem(0x6840, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xba53);
        EXPECT(gbc.pc(), 0x6842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0026
        gbc.setState(0x8c31, 0xda95, 0x7680, 0xf9a3, 0xc4bc, 0xbdd, 0x0, 0x1);
        gbc.writeMem(0x8c31, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xda95);
        EXPECT(gbc.pc(), 0x8c33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c31), 0xcb);
        EXPECT(gbc.readMem(0x8c32), 0x28);
        // CB 28 0027
        gbc.setState(0x37ac, 0x72c6, 0x7d0, 0xa552, 0xcbd4, 0x9a2, 0x1, 0x1);
        gbc.writeMem(0x37ac, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x72c6);
        EXPECT(gbc.pc(), 0x37ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0028
        gbc.setState(0xabd3, 0x1364, 0xc930, 0x96bb, 0xa1ee, 0xe95b, 0x1, 0x1);
        gbc.writeMem(0xabd3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1364);
        EXPECT(gbc.pc(), 0xabd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabd3), 0xcb);
        EXPECT(gbc.readMem(0xabd4), 0x28);
        // CB 28 0029
        gbc.setState(0xd2db, 0x73a1, 0xfc30, 0xeb54, 0xc7ec, 0xfad, 0x0, 0x0);
        gbc.writeMem(0xd2db, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x73a1);
        EXPECT(gbc.pc(), 0xd2dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2db), 0xcb);
        EXPECT(gbc.readMem(0xd2dc), 0x28);
        // CB 28 002A
        gbc.setState(0xed9e, 0x76e3, 0xac90, 0x7a7a, 0x9399, 0x3e79, 0x0, 0x0);
        gbc.writeMem(0xed9e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x76e3);
        EXPECT(gbc.pc(), 0xeda0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed9e), 0xcb);
        EXPECT(gbc.readMem(0xed9f), 0x28);
        // CB 28 002B
        gbc.setState(0x13d6, 0xeb9e, 0xba60, 0x41be, 0x4598, 0x616e, 0x0, 0x1);
        gbc.writeMem(0x13d6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xeb9e);
        EXPECT(gbc.pc(), 0x13d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 002C
        gbc.setState(0x1754, 0x3776, 0x2280, 0xee16, 0xf8fc, 0x820, 0x0, 0x1);
        gbc.writeMem(0x1754, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3776);
        EXPECT(gbc.pc(), 0x1756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 002D
        gbc.setState(0x94b3, 0x9df7, 0xd500, 0x54ae, 0x4ea6, 0x2602, 0x0, 0x0);
        gbc.writeMem(0x94b3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9df7);
        EXPECT(gbc.pc(), 0x94b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94b3), 0xcb);
        EXPECT(gbc.readMem(0x94b4), 0x28);
        // CB 28 002E
        gbc.setState(0x36d6, 0x8177, 0x24f0, 0xad24, 0x6414, 0xa1ee, 0x0, 0x1);
        gbc.writeMem(0x36d6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8177);
        EXPECT(gbc.pc(), 0x36d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 002F
        gbc.setState(0x4876, 0x283, 0x65f0, 0xceac, 0x724b, 0x9943, 0x0, 0x1);
        gbc.writeMem(0x4876, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x283);
        EXPECT(gbc.pc(), 0x4878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0030
        gbc.setState(0x1a9a, 0x5e90, 0x8920, 0xb9a2, 0x46c5, 0x1013, 0x0, 0x1);
        gbc.writeMem(0x1a9a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x5e90);
        EXPECT(gbc.pc(), 0x1a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0031
        gbc.setState(0x629a, 0x5073, 0x9110, 0x4876, 0x5c78, 0xe796, 0x1, 0x0);
        gbc.writeMem(0x629a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5073);
        EXPECT(gbc.pc(), 0x629c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0032
        gbc.setState(0xcaa6, 0xfa4d, 0x620, 0xc070, 0xb2c5, 0x4adb, 0x0, 0x0);
        gbc.writeMem(0xcaa6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xfa4d);
        EXPECT(gbc.pc(), 0xcaa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaa6), 0xcb);
        EXPECT(gbc.readMem(0xcaa7), 0x28);
        // CB 28 0033
        gbc.setState(0xb345, 0x42b9, 0xaa30, 0x49ad, 0x179f, 0xe890, 0x0, 0x0);
        gbc.writeMem(0xb345, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x42b9);
        EXPECT(gbc.pc(), 0xb347);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb345), 0xcb);
        EXPECT(gbc.readMem(0xb346), 0x28);
        // CB 28 0034
        gbc.setState(0x12c6, 0xb7ac, 0xb5a0, 0x1c5c, 0x51c3, 0xb4f4, 0x0, 0x1);
        gbc.writeMem(0x12c6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb7ac);
        EXPECT(gbc.pc(), 0x12c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0035
        gbc.setState(0x57cc, 0x1031, 0x24a0, 0x1bf9, 0x7ac6, 0xf052, 0x1, 0x1);
        gbc.writeMem(0x57cc, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1031);
        EXPECT(gbc.pc(), 0x57ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0036
        gbc.setState(0x9bcf, 0x6a6c, 0xac70, 0x77a7, 0x79c8, 0x410f, 0x1, 0x0);
        gbc.writeMem(0x9bcf, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6a6c);
        EXPECT(gbc.pc(), 0x9bd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bcf), 0xcb);
        EXPECT(gbc.readMem(0x9bd0), 0x28);
        // CB 28 0037
        gbc.setState(0x6151, 0x7ec2, 0xdb30, 0xdf8b, 0xbf82, 0x599e, 0x1, 0x0);
        gbc.writeMem(0x6151, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7ec2);
        EXPECT(gbc.pc(), 0x6153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0038
        gbc.setState(0x3677, 0x477c, 0xb970, 0x7053, 0xae39, 0xaa2d, 0x0, 0x1);
        gbc.writeMem(0x3677, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x477c);
        EXPECT(gbc.pc(), 0x3679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0039
        gbc.setState(0x306f, 0x406c, 0x96e0, 0x9f01, 0x6243, 0x882b, 0x1, 0x0);
        gbc.writeMem(0x306f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x406c);
        EXPECT(gbc.pc(), 0x3071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 003A
        gbc.setState(0xcb6d, 0x8686, 0x6b40, 0x835f, 0x107a, 0x4b96, 0x0, 0x1);
        gbc.writeMem(0xcb6d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8686);
        EXPECT(gbc.pc(), 0xcb6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb6d), 0xcb);
        EXPECT(gbc.readMem(0xcb6e), 0x28);
        // CB 28 003B
        gbc.setState(0xcd63, 0x18aa, 0xa680, 0xa2d3, 0xc96f, 0x3c37, 0x1, 0x1);
        gbc.writeMem(0xcd63, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x18aa);
        EXPECT(gbc.pc(), 0xcd65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd63), 0xcb);
        EXPECT(gbc.readMem(0xcd64), 0x28);
        // CB 28 003C
        gbc.setState(0x231e, 0x8094, 0x24c0, 0x6350, 0xe07d, 0xcf6e, 0x1, 0x1);
        gbc.writeMem(0x231e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8094);
        EXPECT(gbc.pc(), 0x2320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 003E
        gbc.setState(0x3068, 0x5583, 0x4bd0, 0xea46, 0x6c59, 0x4ccc, 0x0, 0x1);
        gbc.writeMem(0x3068, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5583);
        EXPECT(gbc.pc(), 0x306a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 003F
        gbc.setState(0x5db0, 0x5823, 0x8670, 0x3963, 0x6755, 0xa3e1, 0x0, 0x0);
        gbc.writeMem(0x5db0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5823);
        EXPECT(gbc.pc(), 0x5db2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0040
        gbc.setState(0x93d2, 0x1c24, 0xc400, 0x856c, 0xa168, 0x4294, 0x1, 0x1);
        gbc.writeMem(0x93d2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1c24);
        EXPECT(gbc.pc(), 0x93d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93d2), 0xcb);
        EXPECT(gbc.readMem(0x93d3), 0x28);
        // CB 28 0041
        gbc.setState(0x3bd6, 0x48b7, 0x3ee0, 0xb810, 0x79df, 0xcd10, 0x1, 0x1);
        gbc.writeMem(0x3bd6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x48b7);
        EXPECT(gbc.pc(), 0x3bd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0042
        gbc.setState(0x3001, 0x784d, 0x8440, 0x8e18, 0x279c, 0xdaff, 0x1, 0x1);
        gbc.writeMem(0x3001, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x784d);
        EXPECT(gbc.pc(), 0x3003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0043
        gbc.setState(0x7740, 0xfc5, 0x8690, 0x78d4, 0xd266, 0xc447, 0x0, 0x1);
        gbc.writeMem(0x7740, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfc5);
        EXPECT(gbc.pc(), 0x7742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0044
        gbc.setState(0xda6a, 0xcfe5, 0x5150, 0x2740, 0xf541, 0xf9ba, 0x0, 0x0);
        gbc.writeMem(0xda6a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xcfe5);
        EXPECT(gbc.pc(), 0xda6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda6a), 0xcb);
        EXPECT(gbc.readMem(0xda6b), 0x28);
        // CB 28 0045
        gbc.setState(0x6c9f, 0xd62d, 0x12f0, 0x21dd, 0x77cd, 0x4608, 0x1, 0x1);
        gbc.writeMem(0x6c9f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd62d);
        EXPECT(gbc.pc(), 0x6ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0046
        gbc.setState(0x6e5, 0x49e8, 0xaf10, 0x56c9, 0x3070, 0xfa3c, 0x1, 0x1);
        gbc.writeMem(0x6e5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x49e8);
        EXPECT(gbc.pc(), 0x6e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0047
        gbc.setState(0x2a6f, 0x7e83, 0xaa60, 0xaccb, 0x1020, 0x8667, 0x0, 0x1);
        gbc.writeMem(0x2a6f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7e83);
        EXPECT(gbc.pc(), 0x2a71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0048
        gbc.setState(0x2598, 0x1235, 0x54e0, 0x58b2, 0xb90e, 0xba34, 0x0, 0x0);
        gbc.writeMem(0x2598, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1235);
        EXPECT(gbc.pc(), 0x259a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 004A
        gbc.setState(0x8a6f, 0xc838, 0xc10, 0x2acf, 0x5a8e, 0x91fd, 0x0, 0x0);
        gbc.writeMem(0x8a6f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc838);
        EXPECT(gbc.pc(), 0x8a71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a6f), 0xcb);
        EXPECT(gbc.readMem(0x8a70), 0x28);
        // CB 28 004B
        gbc.setState(0x552a, 0xaec9, 0x2ba0, 0x65d1, 0xf1ea, 0x3fea, 0x1, 0x1);
        gbc.writeMem(0x552a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xaec9);
        EXPECT(gbc.pc(), 0x552c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 004C
        gbc.setState(0xe32a, 0x597c, 0xd5e0, 0x9284, 0xb382, 0x152b, 0x0, 0x1);
        gbc.writeMem(0xe32a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x597c);
        EXPECT(gbc.pc(), 0xe32c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe32a), 0xcb);
        EXPECT(gbc.readMem(0xe32b), 0x28);
        // CB 28 004D
        gbc.setState(0x616b, 0x9d08, 0x5ba0, 0x556c, 0x714c, 0x5f12, 0x1, 0x1);
        gbc.writeMem(0x616b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9d08);
        EXPECT(gbc.pc(), 0x616d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 004E
        gbc.setState(0xcff9, 0x7575, 0xede0, 0x7074, 0x722d, 0x280, 0x0, 0x1);
        gbc.writeMem(0xcff9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7575);
        EXPECT(gbc.pc(), 0xcffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcff9), 0xcb);
        EXPECT(gbc.readMem(0xcffa), 0x28);
        // CB 28 004F
        gbc.setState(0xc473, 0xe518, 0xb270, 0x29d1, 0x91f8, 0x83bd, 0x0, 0x0);
        gbc.writeMem(0xc473, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe518);
        EXPECT(gbc.pc(), 0xc475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc473), 0xcb);
        EXPECT(gbc.readMem(0xc474), 0x28);
        // CB 28 0050
        gbc.setState(0x1c4e, 0xc344, 0x2150, 0xac64, 0x8ae3, 0x9db7, 0x0, 0x0);
        gbc.writeMem(0x1c4e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc344);
        EXPECT(gbc.pc(), 0x1c50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0052
        gbc.setState(0x2bc9, 0x6d70, 0x2b60, 0xb25d, 0x2a2b, 0x8457, 0x0, 0x1);
        gbc.writeMem(0x2bc9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6d70);
        EXPECT(gbc.pc(), 0x2bcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0053
        gbc.setState(0x9ac4, 0x22a, 0xe6e0, 0x8dfa, 0xdb0d, 0xcb88, 0x1, 0x0);
        gbc.writeMem(0x9ac4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x22a);
        EXPECT(gbc.pc(), 0x9ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ac4), 0xcb);
        EXPECT(gbc.readMem(0x9ac5), 0x28);
        // CB 28 0054
        gbc.setState(0x432e, 0x7bfa, 0x4ac0, 0xea32, 0x2906, 0x1f92, 0x1, 0x0);
        gbc.writeMem(0x432e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7bfa);
        EXPECT(gbc.pc(), 0x4330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0055
        gbc.setState(0x3f2a, 0x228, 0x1340, 0x718f, 0x9cc5, 0xb31c, 0x1, 0x1);
        gbc.writeMem(0x3f2a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x228);
        EXPECT(gbc.pc(), 0x3f2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0056
        gbc.setState(0x6ed9, 0xdc48, 0x4da0, 0x8227, 0xdcc8, 0x5065, 0x1, 0x1);
        gbc.writeMem(0x6ed9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xdc48);
        EXPECT(gbc.pc(), 0x6edb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0057
        gbc.setState(0xbc60, 0x45f7, 0x47a0, 0xcf2a, 0x7506, 0x4ced, 0x0, 0x1);
        gbc.writeMem(0xbc60, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x45f7);
        EXPECT(gbc.pc(), 0xbc62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc60), 0xcb);
        EXPECT(gbc.readMem(0xbc61), 0x28);
        // CB 28 0058
        gbc.setState(0x2133, 0xfe00, 0x1080, 0xd7a6, 0x720c, 0x1b9b, 0x0, 0x0);
        gbc.writeMem(0x2133, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xfe00);
        EXPECT(gbc.pc(), 0x2135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0059
        gbc.setState(0x3ee9, 0xdcf1, 0x9c50, 0x7eed, 0xad37, 0xd809, 0x1, 0x1);
        gbc.writeMem(0x3ee9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xdcf1);
        EXPECT(gbc.pc(), 0x3eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 005A
        gbc.setState(0xb4e0, 0xac61, 0xd9e0, 0x2c0b, 0xab03, 0x51cd, 0x1, 0x0);
        gbc.writeMem(0xb4e0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xac61);
        EXPECT(gbc.pc(), 0xb4e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e0), 0xcb);
        EXPECT(gbc.readMem(0xb4e1), 0x28);
        // CB 28 005B
        gbc.setState(0x1f8, 0xa9fa, 0x54a0, 0x8af2, 0x3e98, 0x21d7, 0x0, 0x0);
        gbc.writeMem(0x1f8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa9fa);
        EXPECT(gbc.pc(), 0x1fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 005C
        gbc.setState(0xce20, 0x4ba7, 0xa250, 0xb98e, 0xbf1c, 0xe933, 0x1, 0x0);
        gbc.writeMem(0xce20, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4ba7);
        EXPECT(gbc.pc(), 0xce22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce20), 0xcb);
        EXPECT(gbc.readMem(0xce21), 0x28);
        // CB 28 005E
        gbc.setState(0x23cd, 0xef53, 0xce60, 0xfd62, 0xc3d0, 0xf2c2, 0x0, 0x0);
        gbc.writeMem(0x23cd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xef53);
        EXPECT(gbc.pc(), 0x23cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 005F
        gbc.setState(0x2ff, 0x79b8, 0xc290, 0xcc1f, 0x14f8, 0xb4e7, 0x0, 0x0);
        gbc.writeMem(0x2ff, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x79b8);
        EXPECT(gbc.pc(), 0x301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0060
        gbc.setState(0xe6ee, 0x1127, 0xd110, 0x5d50, 0xf1ee, 0x5438, 0x0, 0x1);
        gbc.writeMem(0xe6ee, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1127);
        EXPECT(gbc.pc(), 0xe6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ee), 0xcb);
        EXPECT(gbc.readMem(0xe6ef), 0x28);
        // CB 28 0061
        gbc.setState(0xb5ef, 0x1e5f, 0xa7c0, 0x1bd7, 0xe80d, 0x35ee, 0x0, 0x0);
        gbc.writeMem(0xb5ef, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1e5f);
        EXPECT(gbc.pc(), 0xb5f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ef), 0xcb);
        EXPECT(gbc.readMem(0xb5f0), 0x28);
        // CB 28 0062
        gbc.setState(0x49bd, 0x5f5b, 0xccd0, 0xb7f9, 0x9c00, 0x6b03, 0x0, 0x0);
        gbc.writeMem(0x49bd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5f5b);
        EXPECT(gbc.pc(), 0x49bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0063
        gbc.setState(0x7bcb, 0x7ec3, 0xd2f0, 0xae95, 0x7e06, 0x258f, 0x1, 0x1);
        gbc.writeMem(0x7bcb, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7ec3);
        EXPECT(gbc.pc(), 0x7bcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0064
        gbc.setState(0x6e66, 0x689a, 0xee00, 0xc2d4, 0x18e1, 0x2737, 0x1, 0x0);
        gbc.writeMem(0x6e66, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x689a);
        EXPECT(gbc.pc(), 0x6e68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0065
        gbc.setState(0xaab2, 0xf144, 0xbf30, 0xbe08, 0x7be, 0x10ef, 0x1, 0x1);
        gbc.writeMem(0xaab2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf144);
        EXPECT(gbc.pc(), 0xaab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaab2), 0xcb);
        EXPECT(gbc.readMem(0xaab3), 0x28);
        // CB 28 0066
        gbc.setState(0x9733, 0xa955, 0x53e0, 0xf785, 0x46a4, 0x5a74, 0x1, 0x0);
        gbc.writeMem(0x9733, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa955);
        EXPECT(gbc.pc(), 0x9735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9733), 0xcb);
        EXPECT(gbc.readMem(0x9734), 0x28);
        // CB 28 0067
        gbc.setState(0xeb0b, 0xaf7a, 0x1630, 0xcf75, 0x134d, 0x77f9, 0x1, 0x1);
        gbc.writeMem(0xeb0b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xaf7a);
        EXPECT(gbc.pc(), 0xeb0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb0b), 0xcb);
        EXPECT(gbc.readMem(0xeb0c), 0x28);
        // CB 28 0068
        gbc.setState(0xc2e8, 0x5495, 0xc020, 0xda5e, 0x7bd1, 0x340f, 0x1, 0x1);
        gbc.writeMem(0xc2e8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5495);
        EXPECT(gbc.pc(), 0xc2ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e8), 0xcb);
        EXPECT(gbc.readMem(0xc2e9), 0x28);
        // CB 28 0069
        gbc.setState(0x9f5a, 0x1177, 0xb830, 0xfaa9, 0xad0f, 0x99f5, 0x0, 0x0);
        gbc.writeMem(0x9f5a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1177);
        EXPECT(gbc.pc(), 0x9f5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5a), 0xcb);
        EXPECT(gbc.readMem(0x9f5b), 0x28);
        // CB 28 006A
        gbc.setState(0x4116, 0x757, 0xff30, 0x3858, 0x3a84, 0x9cd6, 0x1, 0x0);
        gbc.writeMem(0x4116, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x757);
        EXPECT(gbc.pc(), 0x4118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 006B
        gbc.setState(0x8a4c, 0x55ff, 0x7520, 0x3f3c, 0xb146, 0xa201, 0x0, 0x0);
        gbc.writeMem(0x8a4c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x55ff);
        EXPECT(gbc.pc(), 0x8a4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a4c), 0xcb);
        EXPECT(gbc.readMem(0x8a4d), 0x28);
        // CB 28 006C
        gbc.setState(0x3733, 0xbe8e, 0xbd50, 0x755d, 0x1817, 0xe69c, 0x0, 0x0);
        gbc.writeMem(0x3733, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbe8e);
        EXPECT(gbc.pc(), 0x3735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 006D
        gbc.setState(0x4ae8, 0xa8f5, 0xba40, 0x6b2, 0xb96a, 0x6e4a, 0x0, 0x1);
        gbc.writeMem(0x4ae8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa8f5);
        EXPECT(gbc.pc(), 0x4aea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 006E
        gbc.setState(0xd15c, 0x3a98, 0xa210, 0x5411, 0xc6d8, 0xc893, 0x0, 0x1);
        gbc.writeMem(0xd15c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3a98);
        EXPECT(gbc.pc(), 0xd15e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd15c), 0xcb);
        EXPECT(gbc.readMem(0xd15d), 0x28);
        // CB 28 006F
        gbc.setState(0x65a5, 0xfd89, 0x2280, 0x8706, 0xd927, 0x4c56, 0x0, 0x0);
        gbc.writeMem(0x65a5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfd89);
        EXPECT(gbc.pc(), 0x65a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0070
        gbc.setState(0x77a7, 0x6926, 0xb160, 0x537, 0x2dbd, 0x8364, 0x1, 0x1);
        gbc.writeMem(0x77a7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6926);
        EXPECT(gbc.pc(), 0x77a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0071
        gbc.setState(0x765e, 0xdf82, 0x8f50, 0x327d, 0xa419, 0x7bf, 0x0, 0x0);
        gbc.writeMem(0x765e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xdf82);
        EXPECT(gbc.pc(), 0x7660);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0072
        gbc.setState(0xbcef, 0x64f2, 0x6b70, 0x9a31, 0xbb18, 0x5e69, 0x1, 0x0);
        gbc.writeMem(0xbcef, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x64f2);
        EXPECT(gbc.pc(), 0xbcf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcef), 0xcb);
        EXPECT(gbc.readMem(0xbcf0), 0x28);
        // CB 28 0073
        gbc.setState(0x9407, 0xa435, 0xeeb0, 0x7d79, 0xb54e, 0x2743, 0x0, 0x0);
        gbc.writeMem(0x9407, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa435);
        EXPECT(gbc.pc(), 0x9409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9407), 0xcb);
        EXPECT(gbc.readMem(0x9408), 0x28);
        // CB 28 0074
        gbc.setState(0xdde9, 0xea31, 0x8360, 0x50bd, 0x3050, 0x4c49, 0x0, 0x0);
        gbc.writeMem(0xdde9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xea31);
        EXPECT(gbc.pc(), 0xddeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdde9), 0xcb);
        EXPECT(gbc.readMem(0xddea), 0x28);
        // CB 28 0075
        gbc.setState(0xba5, 0xcf24, 0x2d10, 0xda3c, 0xb7b9, 0x85e7, 0x0, 0x0);
        gbc.writeMem(0xba5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcf24);
        EXPECT(gbc.pc(), 0xba7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0076
        gbc.setState(0x9eda, 0xc38b, 0x72e0, 0xff54, 0xc43b, 0x32e8, 0x0, 0x0);
        gbc.writeMem(0x9eda, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc38b);
        EXPECT(gbc.pc(), 0x9edc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eda), 0xcb);
        EXPECT(gbc.readMem(0x9edb), 0x28);
        // CB 28 0077
        gbc.setState(0x1d2e, 0x1300, 0xdd90, 0x4a67, 0xe8e6, 0x985a, 0x0, 0x0);
        gbc.writeMem(0x1d2e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1300);
        EXPECT(gbc.pc(), 0x1d30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0078
        gbc.setState(0xd3a8, 0x6e17, 0xaf0, 0xa185, 0x93d7, 0x16aa, 0x1, 0x1);
        gbc.writeMem(0xd3a8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6e17);
        EXPECT(gbc.pc(), 0xd3aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3a8), 0xcb);
        EXPECT(gbc.readMem(0xd3a9), 0x28);
        // CB 28 0079
        gbc.setState(0xa3ad, 0xb79e, 0x76d0, 0x32e2, 0x65fb, 0x4234, 0x0, 0x1);
        gbc.writeMem(0xa3ad, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb79e);
        EXPECT(gbc.pc(), 0xa3af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ad), 0xcb);
        EXPECT(gbc.readMem(0xa3ae), 0x28);
        // CB 28 007A
        gbc.setState(0x3841, 0xbc21, 0xa7a0, 0x7768, 0x9275, 0x4275, 0x1, 0x1);
        gbc.writeMem(0x3841, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xbc21);
        EXPECT(gbc.pc(), 0x3843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 007B
        gbc.setState(0x9fba, 0xd0e7, 0xfa0, 0x859a, 0xbb57, 0x651, 0x0, 0x1);
        gbc.writeMem(0x9fba, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd0e7);
        EXPECT(gbc.pc(), 0x9fbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fba), 0xcb);
        EXPECT(gbc.readMem(0x9fbb), 0x28);
        // CB 28 007C
        gbc.setState(0x5c32, 0xfa30, 0xac90, 0xf545, 0x14fd, 0x1351, 0x1, 0x0);
        gbc.writeMem(0x5c32, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xfa30);
        EXPECT(gbc.pc(), 0x5c34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 007D
        gbc.setState(0x68e5, 0x8f69, 0x810, 0x3f0b, 0xc0e, 0x707a, 0x0, 0x0);
        gbc.writeMem(0x68e5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8f69);
        EXPECT(gbc.pc(), 0x68e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 007E
        gbc.setState(0x56ca, 0x5ff4, 0x2680, 0xf96f, 0xc94c, 0x5060, 0x0, 0x1);
        gbc.writeMem(0x56ca, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5ff4);
        EXPECT(gbc.pc(), 0x56cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 007F
        gbc.setState(0xa6b, 0xe559, 0xc6e0, 0xfe81, 0xacdd, 0x98e8, 0x0, 0x1);
        gbc.writeMem(0xa6b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe559);
        EXPECT(gbc.pc(), 0xa6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0080
        gbc.setState(0xc246, 0x20b1, 0xd410, 0x4b2, 0x7027, 0xe2c7, 0x0, 0x0);
        gbc.writeMem(0xc246, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x20b1);
        EXPECT(gbc.pc(), 0xc248);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc246), 0xcb);
        EXPECT(gbc.readMem(0xc247), 0x28);
        // CB 28 0081
        gbc.setState(0x2ea3, 0xfad2, 0x8670, 0xea1, 0xd450, 0x935, 0x1, 0x1);
        gbc.writeMem(0x2ea3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xfad2);
        EXPECT(gbc.pc(), 0x2ea5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0082
        gbc.setState(0x3295, 0xaa98, 0x76e0, 0xc318, 0xbd41, 0xe551, 0x0, 0x1);
        gbc.writeMem(0x3295, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xaa98);
        EXPECT(gbc.pc(), 0x3297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0083
        gbc.setState(0x308, 0xe59c, 0x1e90, 0x729, 0xd57e, 0x2381, 0x0, 0x0);
        gbc.writeMem(0x308, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe59c);
        EXPECT(gbc.pc(), 0x30a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0084
        gbc.setState(0x315, 0x7fe5, 0xbe60, 0xf24e, 0x626f, 0x31d0, 0x1, 0x1);
        gbc.writeMem(0x315, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7fe5);
        EXPECT(gbc.pc(), 0x317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0085
        gbc.setState(0xc15e, 0xc43a, 0xabd0, 0xea16, 0x6f94, 0x441d, 0x1, 0x0);
        gbc.writeMem(0xc15e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc43a);
        EXPECT(gbc.pc(), 0xc160);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc15e), 0xcb);
        EXPECT(gbc.readMem(0xc15f), 0x28);
        // CB 28 0086
        gbc.setState(0x463, 0xf88d, 0x280, 0xbb01, 0x1554, 0x27df, 0x1, 0x1);
        gbc.writeMem(0x463, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf88d);
        EXPECT(gbc.pc(), 0x465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0087
        gbc.setState(0x3dc3, 0x5377, 0xf700, 0x2747, 0xceac, 0xf072, 0x1, 0x0);
        gbc.writeMem(0x3dc3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5377);
        EXPECT(gbc.pc(), 0x3dc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0088
        gbc.setState(0xa0f9, 0xe0f6, 0xc870, 0xfd09, 0x74bb, 0x4df9, 0x1, 0x1);
        gbc.writeMem(0xa0f9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe0f6);
        EXPECT(gbc.pc(), 0xa0fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f9), 0xcb);
        EXPECT(gbc.readMem(0xa0fa), 0x28);
        // CB 28 008A
        gbc.setState(0xbdfc, 0xc5af, 0x4180, 0x642a, 0x81a6, 0x75f6, 0x0, 0x0);
        gbc.writeMem(0xbdfc, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc5af);
        EXPECT(gbc.pc(), 0xbdfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdfc), 0xcb);
        EXPECT(gbc.readMem(0xbdfd), 0x28);
        // CB 28 008B
        gbc.setState(0xdfac, 0xcedd, 0xd7d0, 0x3ab5, 0xc4b2, 0x3435, 0x0, 0x1);
        gbc.writeMem(0xdfac, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xcedd);
        EXPECT(gbc.pc(), 0xdfae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfac), 0xcb);
        EXPECT(gbc.readMem(0xdfad), 0x28);
        // CB 28 008C
        gbc.setState(0xfcc, 0x920b, 0xb9f0, 0x56b3, 0xa274, 0x6bc0, 0x1, 0x0);
        gbc.writeMem(0xfcc, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x920b);
        EXPECT(gbc.pc(), 0xfce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 008D
        gbc.setState(0x9fe3, 0xc56e, 0xcc80, 0x2be1, 0xde36, 0x7c3b, 0x1, 0x1);
        gbc.writeMem(0x9fe3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc56e);
        EXPECT(gbc.pc(), 0x9fe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe3), 0xcb);
        EXPECT(gbc.readMem(0x9fe4), 0x28);
        // CB 28 008E
        gbc.setState(0x6de2, 0xa21e, 0xca70, 0xead5, 0x308d, 0xfb9e, 0x1, 0x0);
        gbc.writeMem(0x6de2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa21e);
        EXPECT(gbc.pc(), 0x6de4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0090
        gbc.setState(0x3c7e, 0x6ce, 0x4eb0, 0x89d, 0xc298, 0xa540, 0x0, 0x0);
        gbc.writeMem(0x3c7e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x6ce);
        EXPECT(gbc.pc(), 0x3c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0091
        gbc.setState(0xe93d, 0x30aa, 0xe990, 0x148c, 0xc6f7, 0xe326, 0x0, 0x0);
        gbc.writeMem(0xe93d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x30aa);
        EXPECT(gbc.pc(), 0xe93f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe93d), 0xcb);
        EXPECT(gbc.readMem(0xe93e), 0x28);
        // CB 28 0092
        gbc.setState(0x9373, 0x4027, 0xe570, 0x204a, 0x2522, 0x3f71, 0x0, 0x0);
        gbc.writeMem(0x9373, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4027);
        EXPECT(gbc.pc(), 0x9375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9373), 0xcb);
        EXPECT(gbc.readMem(0x9374), 0x28);
        // CB 28 0093
        gbc.setState(0xdb03, 0x8c56, 0x7390, 0xcb0a, 0x2f86, 0x9733, 0x0, 0x1);
        gbc.writeMem(0xdb03, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8c56);
        EXPECT(gbc.pc(), 0xdb05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb03), 0xcb);
        EXPECT(gbc.readMem(0xdb04), 0x28);
        // CB 28 0094
        gbc.setState(0x9287, 0xe6d1, 0x38b0, 0xf8e7, 0xc03, 0x6398, 0x0, 0x1);
        gbc.writeMem(0x9287, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe6d1);
        EXPECT(gbc.pc(), 0x9289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9287), 0xcb);
        EXPECT(gbc.readMem(0x9288), 0x28);
        // CB 28 0095
        gbc.setState(0x3cdd, 0x7c43, 0x4f30, 0x37b8, 0x8f13, 0x81b2, 0x0, 0x0);
        gbc.writeMem(0x3cdd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7c43);
        EXPECT(gbc.pc(), 0x3cdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0096
        gbc.setState(0x665a, 0x9fdd, 0x3990, 0x4ab8, 0x931, 0x765b, 0x1, 0x1);
        gbc.writeMem(0x665a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9fdd);
        EXPECT(gbc.pc(), 0x665c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0097
        gbc.setState(0x303e, 0xe436, 0xe5d0, 0x7392, 0x1b0, 0x4cee, 0x1, 0x1);
        gbc.writeMem(0x303e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe436);
        EXPECT(gbc.pc(), 0x3040);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0098
        gbc.setState(0x127d, 0x355a, 0xa540, 0x471d, 0x262c, 0xa6be, 0x0, 0x0);
        gbc.writeMem(0x127d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x355a);
        EXPECT(gbc.pc(), 0x127f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0099
        gbc.setState(0x506d, 0x65e9, 0xfe50, 0xa777, 0xffe5, 0xef00, 0x0, 0x0);
        gbc.writeMem(0x506d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x65e9);
        EXPECT(gbc.pc(), 0x506f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 009A
        gbc.setState(0x575d, 0xc0b9, 0xf470, 0x2551, 0xb13, 0xd8b0, 0x1, 0x1);
        gbc.writeMem(0x575d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc0b9);
        EXPECT(gbc.pc(), 0x575f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 009B
        gbc.setState(0xaef9, 0xa9d0, 0x5bc0, 0x7638, 0x3bfa, 0xea8b, 0x0, 0x0);
        gbc.writeMem(0xaef9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa9d0);
        EXPECT(gbc.pc(), 0xaefb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaef9), 0xcb);
        EXPECT(gbc.readMem(0xaefa), 0x28);
        // CB 28 009C
        gbc.setState(0xd779, 0x6e82, 0x93c0, 0x655d, 0x5ba4, 0x64e4, 0x1, 0x1);
        gbc.writeMem(0xd779, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6e82);
        EXPECT(gbc.pc(), 0xd77b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd779), 0xcb);
        EXPECT(gbc.readMem(0xd77a), 0x28);
        // CB 28 009D
        gbc.setState(0x64ee, 0x27e8, 0x3d20, 0xf3bf, 0x7b46, 0xd113, 0x1, 0x1);
        gbc.writeMem(0x64ee, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x27e8);
        EXPECT(gbc.pc(), 0x64f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 009E
        gbc.setState(0x8a81, 0x86a2, 0x28b0, 0xbdbd, 0xdc50, 0x467, 0x1, 0x1);
        gbc.writeMem(0x8a81, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x86a2);
        EXPECT(gbc.pc(), 0x8a83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a81), 0xcb);
        EXPECT(gbc.readMem(0x8a82), 0x28);
        // CB 28 00A1
        gbc.setState(0x11d7, 0xd561, 0x70e0, 0x3980, 0x2677, 0x884d, 0x1, 0x0);
        gbc.writeMem(0x11d7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd561);
        EXPECT(gbc.pc(), 0x11d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00A2
        gbc.setState(0x10fe, 0xf992, 0xab80, 0xa504, 0xa4d3, 0xbca8, 0x1, 0x1);
        gbc.writeMem(0x10fe, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf992);
        EXPECT(gbc.pc(), 0x1100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00A3
        gbc.setState(0xb429, 0x3354, 0x4dd0, 0x656c, 0x8436, 0x18fc, 0x0, 0x0);
        gbc.writeMem(0xb429, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3354);
        EXPECT(gbc.pc(), 0xb42b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb429), 0xcb);
        EXPECT(gbc.readMem(0xb42a), 0x28);
        // CB 28 00A4
        gbc.setState(0x684b, 0x573d, 0xd3d0, 0xf02d, 0x6a66, 0xb270, 0x1, 0x1);
        gbc.writeMem(0x684b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x573d);
        EXPECT(gbc.pc(), 0x684d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00A5
        gbc.setState(0x34fc, 0x69bb, 0x9ea0, 0xb626, 0x9654, 0x9660, 0x1, 0x0);
        gbc.writeMem(0x34fc, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x69bb);
        EXPECT(gbc.pc(), 0x34fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00A6
        gbc.setState(0x27df, 0xcb41, 0x4e90, 0x7276, 0x1fcb, 0xb470, 0x0, 0x0);
        gbc.writeMem(0x27df, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xcb41);
        EXPECT(gbc.pc(), 0x27e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00A7
        gbc.setState(0x537c, 0xa126, 0x7f70, 0x16cd, 0xccf4, 0x16cb, 0x1, 0x1);
        gbc.writeMem(0x537c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa126);
        EXPECT(gbc.pc(), 0x537e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00A8
        gbc.setState(0x84c2, 0x46e, 0xcd10, 0xe268, 0xd2dd, 0xbb00, 0x1, 0x0);
        gbc.writeMem(0x84c2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x46e);
        EXPECT(gbc.pc(), 0x84c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c2), 0xcb);
        EXPECT(gbc.readMem(0x84c3), 0x28);
        // CB 28 00A9
        gbc.setState(0x9f0e, 0xb68b, 0xa30, 0x2750, 0x1f33, 0x44b7, 0x1, 0x1);
        gbc.writeMem(0x9f0e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb68b);
        EXPECT(gbc.pc(), 0x9f10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f0e), 0xcb);
        EXPECT(gbc.readMem(0x9f0f), 0x28);
        // CB 28 00AA
        gbc.setState(0x34bf, 0xe67d, 0xf970, 0x1bfb, 0x6770, 0x5610, 0x0, 0x1);
        gbc.writeMem(0x34bf, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe67d);
        EXPECT(gbc.pc(), 0x34c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00AB
        gbc.setState(0x15f2, 0xa404, 0xec40, 0x74df, 0xe61, 0x74ac, 0x1, 0x1);
        gbc.writeMem(0x15f2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa404);
        EXPECT(gbc.pc(), 0x15f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00AC
        gbc.setState(0x8c92, 0x1050, 0xe2c0, 0x8b21, 0x8699, 0x192e, 0x0, 0x1);
        gbc.writeMem(0x8c92, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1050);
        EXPECT(gbc.pc(), 0x8c94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c92), 0xcb);
        EXPECT(gbc.readMem(0x8c93), 0x28);
        // CB 28 00AD
        gbc.setState(0x7f0b, 0x695d, 0xbf10, 0xd116, 0x95d3, 0x5672, 0x0, 0x1);
        gbc.writeMem(0x7f0b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x695d);
        EXPECT(gbc.pc(), 0x7f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00AE
        gbc.setState(0xd72e, 0xd78b, 0x60f0, 0x30d1, 0xd0fc, 0x95fe, 0x0, 0x1);
        gbc.writeMem(0xd72e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd78b);
        EXPECT(gbc.pc(), 0xd730);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd72e), 0xcb);
        EXPECT(gbc.readMem(0xd72f), 0x28);
        // CB 28 00AF
        gbc.setState(0x5f59, 0x7f86, 0xe8f0, 0x9062, 0xb6e7, 0x618c, 0x0, 0x1);
        gbc.writeMem(0x5f59, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7f86);
        EXPECT(gbc.pc(), 0x5f5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00B0
        gbc.setState(0x16ba, 0xf925, 0xa210, 0x594e, 0x4083, 0x81e4, 0x0, 0x0);
        gbc.writeMem(0x16ba, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf925);
        EXPECT(gbc.pc(), 0x16bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00B2
        gbc.setState(0xaab9, 0x663e, 0x8ca0, 0xdb3e, 0xebf8, 0x9a5b, 0x0, 0x0);
        gbc.writeMem(0xaab9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x663e);
        EXPECT(gbc.pc(), 0xaabb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab9), 0xcb);
        EXPECT(gbc.readMem(0xaaba), 0x28);
        // CB 28 00B3
        gbc.setState(0x749, 0xa7f0, 0x7230, 0xda22, 0xf687, 0xd8c7, 0x1, 0x1);
        gbc.writeMem(0x749, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa7f0);
        EXPECT(gbc.pc(), 0x74b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00B4
        gbc.setState(0xa611, 0xfdcd, 0x4470, 0xc160, 0xc88c, 0x93dc, 0x0, 0x0);
        gbc.writeMem(0xa611, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xfdcd);
        EXPECT(gbc.pc(), 0xa613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa611), 0xcb);
        EXPECT(gbc.readMem(0xa612), 0x28);
        // CB 28 00B5
        gbc.setState(0x59aa, 0x2754, 0x6a0, 0x2aac, 0x7b21, 0x5409, 0x0, 0x1);
        gbc.writeMem(0x59aa, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2754);
        EXPECT(gbc.pc(), 0x59ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00B6
        gbc.setState(0xb997, 0xcec7, 0xc110, 0x4d14, 0x7b85, 0xc9a2, 0x1, 0x0);
        gbc.writeMem(0xb997, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xcec7);
        EXPECT(gbc.pc(), 0xb999);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb997), 0xcb);
        EXPECT(gbc.readMem(0xb998), 0x28);
        // CB 28 00B7
        gbc.setState(0xeda0, 0xa043, 0x4590, 0xd7a2, 0xac7b, 0xda14, 0x0, 0x1);
        gbc.writeMem(0xeda0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa043);
        EXPECT(gbc.pc(), 0xeda2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda0), 0xcb);
        EXPECT(gbc.readMem(0xeda1), 0x28);
        // CB 28 00B8
        gbc.setState(0x506d, 0x792, 0x5af0, 0x667d, 0x761d, 0x8a52, 0x1, 0x1);
        gbc.writeMem(0x506d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x792);
        EXPECT(gbc.pc(), 0x506f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00B9
        gbc.setState(0x4c3e, 0x110e, 0x5f00, 0xa72f, 0xe9b5, 0x6642, 0x1, 0x0);
        gbc.writeMem(0x4c3e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x110e);
        EXPECT(gbc.pc(), 0x4c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00BB
        gbc.setState(0xa6e5, 0x7f9c, 0x3240, 0x9c38, 0x73ab, 0x94c8, 0x1, 0x1);
        gbc.writeMem(0xa6e5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7f9c);
        EXPECT(gbc.pc(), 0xa6e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6e5), 0xcb);
        EXPECT(gbc.readMem(0xa6e6), 0x28);
        // CB 28 00BC
        gbc.setState(0xe714, 0xcb96, 0xe330, 0x1458, 0x8c89, 0xdcdb, 0x0, 0x0);
        gbc.writeMem(0xe714, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xcb96);
        EXPECT(gbc.pc(), 0xe716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe714), 0xcb);
        EXPECT(gbc.readMem(0xe715), 0x28);
        // CB 28 00BD
        gbc.setState(0x2fdc, 0x28f1, 0xdb50, 0xdbeb, 0x8aff, 0x91a9, 0x0, 0x0);
        gbc.writeMem(0x2fdc, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x28f1);
        EXPECT(gbc.pc(), 0x2fde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00BE
        gbc.setState(0x243a, 0x2732, 0x4df0, 0x4bc6, 0x20f2, 0x1930, 0x1, 0x1);
        gbc.writeMem(0x243a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2732);
        EXPECT(gbc.pc(), 0x243c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00BF
        gbc.setState(0xabd9, 0x1d60, 0x7ac0, 0x5717, 0x8bc6, 0xc89d, 0x1, 0x1);
        gbc.writeMem(0xabd9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1d60);
        EXPECT(gbc.pc(), 0xabdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd9), 0xcb);
        EXPECT(gbc.readMem(0xabda), 0x28);
        // CB 28 00C0
        gbc.setState(0xcac7, 0x917f, 0x5e10, 0x67b6, 0x7d46, 0x2895, 0x1, 0x0);
        gbc.writeMem(0xcac7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x917f);
        EXPECT(gbc.pc(), 0xcac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac7), 0xcb);
        EXPECT(gbc.readMem(0xcac8), 0x28);
        // CB 28 00C1
        gbc.setState(0x2244, 0xff86, 0x2bb0, 0xa725, 0x1e72, 0x9011, 0x0, 0x0);
        gbc.writeMem(0x2244, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xff86);
        EXPECT(gbc.pc(), 0x2246);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00C2
        gbc.setState(0x99e4, 0x236, 0x4540, 0x73c7, 0x5679, 0xab61, 0x1, 0x1);
        gbc.writeMem(0x99e4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x236);
        EXPECT(gbc.pc(), 0x99e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99e4), 0xcb);
        EXPECT(gbc.readMem(0x99e5), 0x28);
        // CB 28 00C4
        gbc.setState(0xbd1d, 0x485e, 0xd390, 0xfe5b, 0x2ff4, 0x9ebd, 0x0, 0x1);
        gbc.writeMem(0xbd1d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x485e);
        EXPECT(gbc.pc(), 0xbd1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd1d), 0xcb);
        EXPECT(gbc.readMem(0xbd1e), 0x28);
        // CB 28 00C5
        gbc.setState(0x6d91, 0x4524, 0xf70, 0xe3c7, 0xad18, 0x1c57, 0x1, 0x1);
        gbc.writeMem(0x6d91, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4524);
        EXPECT(gbc.pc(), 0x6d93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00C6
        gbc.setState(0x62e3, 0x3b28, 0xe6f0, 0xd85e, 0x4b2, 0x9681, 0x1, 0x1);
        gbc.writeMem(0x62e3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3b28);
        EXPECT(gbc.pc(), 0x62e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00C7
        gbc.setState(0x8814, 0x6a88, 0x8a50, 0xac60, 0xec86, 0xc7e6, 0x1, 0x1);
        gbc.writeMem(0x8814, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6a88);
        EXPECT(gbc.pc(), 0x8816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8814), 0xcb);
        EXPECT(gbc.readMem(0x8815), 0x28);
        // CB 28 00C8
        gbc.setState(0x78e5, 0xb2f7, 0xc600, 0x76b3, 0x4856, 0x14b3, 0x1, 0x0);
        gbc.writeMem(0x78e5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb2f7);
        EXPECT(gbc.pc(), 0x78e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00C9
        gbc.setState(0x7f80, 0xde1f, 0x1cd0, 0x2b9a, 0x36bd, 0xe42f, 0x1, 0x1);
        gbc.writeMem(0x7f80, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xde1f);
        EXPECT(gbc.pc(), 0x7f82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00CA
        gbc.setState(0xa136, 0x1cae, 0x9910, 0x4b12, 0x2085, 0x35a5, 0x1, 0x1);
        gbc.writeMem(0xa136, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1cae);
        EXPECT(gbc.pc(), 0xa138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa136), 0xcb);
        EXPECT(gbc.readMem(0xa137), 0x28);
        // CB 28 00CB
        gbc.setState(0x6963, 0xebd4, 0x1d10, 0x3822, 0xce56, 0x841f, 0x0, 0x1);
        gbc.writeMem(0x6963, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xebd4);
        EXPECT(gbc.pc(), 0x6965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00CC
        gbc.setState(0x87d6, 0x2689, 0xa1f0, 0x2085, 0xf1c4, 0x9a75, 0x1, 0x0);
        gbc.writeMem(0x87d6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2689);
        EXPECT(gbc.pc(), 0x87d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87d6), 0xcb);
        EXPECT(gbc.readMem(0x87d7), 0x28);
        // CB 28 00CD
        gbc.setState(0xb0fd, 0x58f3, 0x1300, 0x5688, 0x1bd8, 0x6779, 0x1, 0x0);
        gbc.writeMem(0xb0fd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x58f3);
        EXPECT(gbc.pc(), 0xb0ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0fd), 0xcb);
        EXPECT(gbc.readMem(0xb0fe), 0x28);
        // CB 28 00CE
        gbc.setState(0x84c3, 0xeffd, 0x2380, 0x2f76, 0xdf65, 0x41a4, 0x0, 0x0);
        gbc.writeMem(0x84c3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xeffd);
        EXPECT(gbc.pc(), 0x84c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84c3), 0xcb);
        EXPECT(gbc.readMem(0x84c4), 0x28);
        // CB 28 00CF
        gbc.setState(0x6f3b, 0xe31c, 0x49a0, 0x9358, 0x7fe8, 0x15fa, 0x1, 0x0);
        gbc.writeMem(0x6f3b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe31c);
        EXPECT(gbc.pc(), 0x6f3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00D0
        gbc.setState(0x62e6, 0xaf27, 0xdea0, 0x138a, 0x3d03, 0xe5d7, 0x1, 0x1);
        gbc.writeMem(0x62e6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xaf27);
        EXPECT(gbc.pc(), 0x62e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00D1
        gbc.setState(0xcc46, 0xf6f7, 0x3010, 0x3fe3, 0xec42, 0x78a4, 0x0, 0x0);
        gbc.writeMem(0xcc46, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf6f7);
        EXPECT(gbc.pc(), 0xcc48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc46), 0xcb);
        EXPECT(gbc.readMem(0xcc47), 0x28);
        // CB 28 00D2
        gbc.setState(0x8c84, 0x58fc, 0x2080, 0xff90, 0x772a, 0x964e, 0x0, 0x0);
        gbc.writeMem(0x8c84, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x58fc);
        EXPECT(gbc.pc(), 0x8c86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c84), 0xcb);
        EXPECT(gbc.readMem(0x8c85), 0x28);
        // CB 28 00D3
        gbc.setState(0x4569, 0x4880, 0xf4b0, 0x655, 0xd0a4, 0x57a6, 0x1, 0x1);
        gbc.writeMem(0x4569, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4880);
        EXPECT(gbc.pc(), 0x456b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00D4
        gbc.setState(0x874a, 0xffd9, 0xee70, 0x9c82, 0x5e07, 0x4e56, 0x1, 0x1);
        gbc.writeMem(0x874a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xffd9);
        EXPECT(gbc.pc(), 0x874c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x874a), 0xcb);
        EXPECT(gbc.readMem(0x874b), 0x28);
        // CB 28 00D5
        gbc.setState(0x5605, 0x9149, 0x6010, 0xe780, 0xf85e, 0x1d31, 0x1, 0x0);
        gbc.writeMem(0x5605, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9149);
        EXPECT(gbc.pc(), 0x5607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00D6
        gbc.setState(0x426b, 0x5ada, 0xf190, 0x3602, 0x34de, 0x8bee, 0x1, 0x1);
        gbc.writeMem(0x426b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5ada);
        EXPECT(gbc.pc(), 0x426d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00D7
        gbc.setState(0xd9f0, 0xa22e, 0xf130, 0xefcc, 0x5367, 0x912e, 0x0, 0x1);
        gbc.writeMem(0xd9f0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa22e);
        EXPECT(gbc.pc(), 0xd9f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9f0), 0xcb);
        EXPECT(gbc.readMem(0xd9f1), 0x28);
        // CB 28 00D8
        gbc.setState(0x1c01, 0x11f6, 0xeb0, 0xd3ff, 0xedd3, 0x9d1d, 0x0, 0x1);
        gbc.writeMem(0x1c01, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x11f6);
        EXPECT(gbc.pc(), 0x1c03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00D9
        gbc.setState(0x8db1, 0xf2c4, 0xe5e0, 0xf0f0, 0x8470, 0xc20a, 0x0, 0x1);
        gbc.writeMem(0x8db1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf2c4);
        EXPECT(gbc.pc(), 0x8db3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8db1), 0xcb);
        EXPECT(gbc.readMem(0x8db2), 0x28);
        // CB 28 00DA
        gbc.setState(0x95e5, 0x8e34, 0x4640, 0x9de4, 0x8577, 0xcb3f, 0x1, 0x0);
        gbc.writeMem(0x95e5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8e34);
        EXPECT(gbc.pc(), 0x95e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e5), 0xcb);
        EXPECT(gbc.readMem(0x95e6), 0x28);
        // CB 28 00DB
        gbc.setState(0xd08b, 0x5db9, 0xfbc0, 0xcc1d, 0x8b3e, 0xfabe, 0x1, 0x1);
        gbc.writeMem(0xd08b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5db9);
        EXPECT(gbc.pc(), 0xd08d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd08b), 0xcb);
        EXPECT(gbc.readMem(0xd08c), 0x28);
        // CB 28 00DC
        gbc.setState(0x467a, 0x4bf6, 0x6740, 0x8ebd, 0xa0e8, 0x7e2e, 0x1, 0x1);
        gbc.writeMem(0x467a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4bf6);
        EXPECT(gbc.pc(), 0x467c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00DD
        gbc.setState(0xe1f5, 0xf6d4, 0x59e0, 0xead3, 0x1d86, 0x82d3, 0x0, 0x1);
        gbc.writeMem(0xe1f5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf6d4);
        EXPECT(gbc.pc(), 0xe1f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f5), 0xcb);
        EXPECT(gbc.readMem(0xe1f6), 0x28);
        // CB 28 00DE
        gbc.setState(0x711d, 0xb735, 0x29d0, 0x7401, 0xe14a, 0xf85d, 0x1, 0x1);
        gbc.writeMem(0x711d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb735);
        EXPECT(gbc.pc(), 0x711f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00DF
        gbc.setState(0x8ec8, 0xd830, 0xe8a0, 0x7922, 0x91e3, 0x8885, 0x1, 0x0);
        gbc.writeMem(0x8ec8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd830);
        EXPECT(gbc.pc(), 0x8eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ec8), 0xcb);
        EXPECT(gbc.readMem(0x8ec9), 0x28);
        // CB 28 00E0
        gbc.setState(0x201e, 0xdcee, 0xa680, 0x1b4f, 0xdfd7, 0xdc64, 0x1, 0x1);
        gbc.writeMem(0x201e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xdcee);
        EXPECT(gbc.pc(), 0x2020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00E1
        gbc.setState(0xaf1, 0x4f17, 0xf120, 0xf45d, 0x908c, 0xc766, 0x1, 0x1);
        gbc.writeMem(0xaf1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4f17);
        EXPECT(gbc.pc(), 0xaf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00E2
        gbc.setState(0x6596, 0xb026, 0x6b80, 0x7f85, 0xccfd, 0x285f, 0x1, 0x0);
        gbc.writeMem(0x6596, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb026);
        EXPECT(gbc.pc(), 0x6598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00E3
        gbc.setState(0x4260, 0x20ca, 0x32e0, 0x9d9d, 0x3254, 0xc311, 0x0, 0x0);
        gbc.writeMem(0x4260, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x20ca);
        EXPECT(gbc.pc(), 0x4262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00E4
        gbc.setState(0x39b8, 0xea38, 0xfdc0, 0x1436, 0xff87, 0xc3d5, 0x1, 0x1);
        gbc.writeMem(0x39b8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xea38);
        EXPECT(gbc.pc(), 0x39ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00E6
        gbc.setState(0xa834, 0x5385, 0xad00, 0xebef, 0xaaf, 0x454, 0x1, 0x1);
        gbc.writeMem(0xa834, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5385);
        EXPECT(gbc.pc(), 0xa836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa834), 0xcb);
        EXPECT(gbc.readMem(0xa835), 0x28);
        // CB 28 00E7
        gbc.setState(0xbcd9, 0x42a5, 0x4f90, 0xd1e8, 0x7e87, 0x57ba, 0x1, 0x1);
        gbc.writeMem(0xbcd9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x42a5);
        EXPECT(gbc.pc(), 0xbcdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcd9), 0xcb);
        EXPECT(gbc.readMem(0xbcda), 0x28);
        // CB 28 00E8
        gbc.setState(0x6a49, 0x47de, 0xe530, 0xadbc, 0x14b3, 0xb20, 0x0, 0x0);
        gbc.writeMem(0x6a49, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x47de);
        EXPECT(gbc.pc(), 0x6a4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00E9
        gbc.setState(0x9caa, 0xb80b, 0x3160, 0x97aa, 0x2b31, 0xf10a, 0x0, 0x1);
        gbc.writeMem(0x9caa, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb80b);
        EXPECT(gbc.pc(), 0x9cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9caa), 0xcb);
        EXPECT(gbc.readMem(0x9cab), 0x28);
        // CB 28 00EA
        gbc.setState(0xc610, 0xc7b9, 0xb5b0, 0xd65d, 0x9b46, 0x3478, 0x0, 0x0);
        gbc.writeMem(0xc610, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc7b9);
        EXPECT(gbc.pc(), 0xc612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc610), 0xcb);
        EXPECT(gbc.readMem(0xc611), 0x28);
        // CB 28 00EB
        gbc.setState(0x4a54, 0xbcbb, 0x2e20, 0xa16e, 0x69c5, 0xefaf, 0x0, 0x1);
        gbc.writeMem(0x4a54, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbcbb);
        EXPECT(gbc.pc(), 0x4a56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00EC
        gbc.setState(0x74ce, 0x2579, 0xed0, 0xaf9b, 0xaee2, 0x4786, 0x0, 0x1);
        gbc.writeMem(0x74ce, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2579);
        EXPECT(gbc.pc(), 0x74d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00ED
        gbc.setState(0x8b6, 0x8daa, 0x8e50, 0x1937, 0x7f4e, 0x6174, 0x1, 0x1);
        gbc.writeMem(0x8b6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8daa);
        EXPECT(gbc.pc(), 0x8b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00EE
        gbc.setState(0x60ce, 0x5fed, 0x850, 0xdb4d, 0x7ce, 0x2d25, 0x1, 0x1);
        gbc.writeMem(0x60ce, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5fed);
        EXPECT(gbc.pc(), 0x60d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00EF
        gbc.setState(0xb55f, 0xe76e, 0x40a0, 0x5fd4, 0x2032, 0x48de, 0x0, 0x1);
        gbc.writeMem(0xb55f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe76e);
        EXPECT(gbc.pc(), 0xb561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb55f), 0xcb);
        EXPECT(gbc.readMem(0xb560), 0x28);
        // CB 28 00F0
        gbc.setState(0x7e3, 0x1b61, 0xf0d0, 0x4c56, 0x9472, 0xc2a6, 0x0, 0x0);
        gbc.writeMem(0x7e3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1b61);
        EXPECT(gbc.pc(), 0x7e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00F1
        gbc.setState(0x3af5, 0x3bd7, 0x9aa0, 0x5dbe, 0x60db, 0xf16, 0x1, 0x1);
        gbc.writeMem(0x3af5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3bd7);
        EXPECT(gbc.pc(), 0x3af7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00F2
        gbc.setState(0xef10, 0x34b7, 0x6d90, 0xbca2, 0xdd44, 0xc46c, 0x1, 0x0);
        gbc.writeMem(0xef10, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x34b7);
        EXPECT(gbc.pc(), 0xef12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef10), 0xcb);
        EXPECT(gbc.readMem(0xef11), 0x28);
        // CB 28 00F3
        gbc.setState(0xd8f8, 0xccf4, 0x9110, 0x9b55, 0xf9af, 0xd533, 0x1, 0x0);
        gbc.writeMem(0xd8f8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xccf4);
        EXPECT(gbc.pc(), 0xd8fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8f8), 0xcb);
        EXPECT(gbc.readMem(0xd8f9), 0x28);
        // CB 28 00F4
        gbc.setState(0x2fec, 0x61ef, 0x3c0, 0x8c71, 0x7444, 0x5d3c, 0x0, 0x0);
        gbc.writeMem(0x2fec, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x61ef);
        EXPECT(gbc.pc(), 0x2fee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00F5
        gbc.setState(0xa0a2, 0xe7c3, 0x1c90, 0xd5f8, 0x3c49, 0x1774, 0x1, 0x0);
        gbc.writeMem(0xa0a2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe7c3);
        EXPECT(gbc.pc(), 0xa0a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0a2), 0xcb);
        EXPECT(gbc.readMem(0xa0a3), 0x28);
        // CB 28 00F6
        gbc.setState(0xbe5f, 0x1769, 0xdca0, 0xf534, 0x55d1, 0xea4b, 0x1, 0x1);
        gbc.writeMem(0xbe5f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1769);
        EXPECT(gbc.pc(), 0xbe61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe5f), 0xcb);
        EXPECT(gbc.readMem(0xbe60), 0x28);
        // CB 28 00F7
        gbc.setState(0xd003, 0xad3d, 0x1f30, 0xcda7, 0xafdb, 0x1099, 0x1, 0x0);
        gbc.writeMem(0xd003, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xad3d);
        EXPECT(gbc.pc(), 0xd005);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd003), 0xcb);
        EXPECT(gbc.readMem(0xd004), 0x28);
        // CB 28 00F8
        gbc.setState(0xed21, 0x350c, 0x9120, 0x1e05, 0x123a, 0x58f7, 0x0, 0x0);
        gbc.writeMem(0xed21, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x350c);
        EXPECT(gbc.pc(), 0xed23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed21), 0xcb);
        EXPECT(gbc.readMem(0xed22), 0x28);
        // CB 28 00F9
        gbc.setState(0x8895, 0xfe7e, 0x61f0, 0xb5b7, 0xe2ab, 0xbac2, 0x0, 0x0);
        gbc.writeMem(0x8895, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xfe7e);
        EXPECT(gbc.pc(), 0x8897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8895), 0xcb);
        EXPECT(gbc.readMem(0x8896), 0x28);
        // CB 28 00FA
        gbc.setState(0x6097, 0x8a76, 0x51a0, 0x341c, 0x2dfe, 0x99a6, 0x1, 0x0);
        gbc.writeMem(0x6097, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8a76);
        EXPECT(gbc.pc(), 0x6099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 00FB
        gbc.setState(0xe54f, 0xdc7, 0x5750, 0xdf50, 0xbfde, 0xcb59, 0x0, 0x0);
        gbc.writeMem(0xe54f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xdc7);
        EXPECT(gbc.pc(), 0xe551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe54f), 0xcb);
        EXPECT(gbc.readMem(0xe550), 0x28);
        // CB 28 00FC
        gbc.setState(0x5480, 0x760e, 0x6d00, 0x11b9, 0x6f82, 0x2fb2, 0x0, 0x1);
        gbc.writeMem(0x5480, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x760e);
        EXPECT(gbc.pc(), 0x5482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00FD
        gbc.setState(0x3ef8, 0x747, 0xd6f0, 0x55bb, 0xcfad, 0xbde9, 0x1, 0x0);
        gbc.writeMem(0x3ef8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x747);
        EXPECT(gbc.pc(), 0x3efa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00FE
        gbc.setState(0x560a, 0x82ca, 0x39d0, 0xfd81, 0xa010, 0x4a6e, 0x1, 0x1);
        gbc.writeMem(0x560a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x82ca);
        EXPECT(gbc.pc(), 0x560c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 00FF
        gbc.setState(0x8ba8, 0xa289, 0x6570, 0xb664, 0xc69d, 0x9c03, 0x1, 0x0);
        gbc.writeMem(0x8ba8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa289);
        EXPECT(gbc.pc(), 0x8baa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ba8), 0xcb);
        EXPECT(gbc.readMem(0x8ba9), 0x28);
        // CB 28 0100
        gbc.setState(0x525e, 0x4932, 0xb320, 0x2a56, 0x8416, 0x455c, 0x1, 0x0);
        gbc.writeMem(0x525e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4932);
        EXPECT(gbc.pc(), 0x5260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0101
        gbc.setState(0x52e6, 0xcf57, 0xf180, 0x5b81, 0x7eb5, 0x4a19, 0x0, 0x1);
        gbc.writeMem(0x52e6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xcf57);
        EXPECT(gbc.pc(), 0x52e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0102
        gbc.setState(0xb967, 0xab2e, 0x3210, 0xc9c9, 0x8535, 0x4505, 0x1, 0x1);
        gbc.writeMem(0xb967, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xab2e);
        EXPECT(gbc.pc(), 0xb969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb967), 0xcb);
        EXPECT(gbc.readMem(0xb968), 0x28);
        // CB 28 0103
        gbc.setState(0x30a6, 0x1024, 0x9390, 0xf07f, 0x92d5, 0x28ac, 0x0, 0x1);
        gbc.writeMem(0x30a6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1024);
        EXPECT(gbc.pc(), 0x30a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0104
        gbc.setState(0xb13e, 0xcf0c, 0xec40, 0x89ed, 0x9d16, 0xc7c6, 0x0, 0x0);
        gbc.writeMem(0xb13e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcf0c);
        EXPECT(gbc.pc(), 0xb140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb13e), 0xcb);
        EXPECT(gbc.readMem(0xb13f), 0x28);
        // CB 28 0105
        gbc.setState(0x889e, 0x3544, 0x7740, 0x3153, 0x1c7d, 0xaba5, 0x0, 0x1);
        gbc.writeMem(0x889e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3544);
        EXPECT(gbc.pc(), 0x88a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x889e), 0xcb);
        EXPECT(gbc.readMem(0x889f), 0x28);
        // CB 28 0106
        gbc.setState(0xa27e, 0xa7e, 0xc660, 0x6523, 0x6642, 0xa71, 0x1, 0x1);
        gbc.writeMem(0xa27e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa7e);
        EXPECT(gbc.pc(), 0xa280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa27e), 0xcb);
        EXPECT(gbc.readMem(0xa27f), 0x28);
        // CB 28 0107
        gbc.setState(0x65d4, 0x1525, 0xe8b0, 0x7d83, 0xd2ad, 0x4dc, 0x1, 0x0);
        gbc.writeMem(0x65d4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1525);
        EXPECT(gbc.pc(), 0x65d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0108
        gbc.setState(0xa47b, 0xafb7, 0x5c0, 0xa46c, 0xc63f, 0xed91, 0x1, 0x0);
        gbc.writeMem(0xa47b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xafb7);
        EXPECT(gbc.pc(), 0xa47d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa47b), 0xcb);
        EXPECT(gbc.readMem(0xa47c), 0x28);
        // CB 28 0109
        gbc.setState(0xb4a0, 0x63bf, 0xc0c0, 0x33b6, 0xe97e, 0xe4b0, 0x0, 0x0);
        gbc.writeMem(0xb4a0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x63bf);
        EXPECT(gbc.pc(), 0xb4a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a0), 0xcb);
        EXPECT(gbc.readMem(0xb4a1), 0x28);
        // CB 28 010A
        gbc.setState(0x9ae4, 0x5961, 0xd220, 0x15d, 0x7512, 0xe9bb, 0x0, 0x0);
        gbc.writeMem(0x9ae4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5961);
        EXPECT(gbc.pc(), 0x9ae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae4), 0xcb);
        EXPECT(gbc.readMem(0x9ae5), 0x28);
        // CB 28 010B
        gbc.setState(0xc6a7, 0xc39, 0xb310, 0x55e9, 0x4934, 0x2a22, 0x1, 0x0);
        gbc.writeMem(0xc6a7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc39);
        EXPECT(gbc.pc(), 0xc6a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6a7), 0xcb);
        EXPECT(gbc.readMem(0xc6a8), 0x28);
        // CB 28 010C
        gbc.setState(0x1d60, 0x727f, 0xd0, 0x5dea, 0xb32b, 0xd4ef, 0x1, 0x1);
        gbc.writeMem(0x1d60, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x727f);
        EXPECT(gbc.pc(), 0x1d62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 010D
        gbc.setState(0xf26, 0xaf5d, 0xdaf0, 0x3b15, 0x43d7, 0xa580, 0x0, 0x1);
        gbc.writeMem(0xf26, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xaf5d);
        EXPECT(gbc.pc(), 0xf28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 010E
        gbc.setState(0x9ef2, 0x70bc, 0xa980, 0x3c94, 0x1d63, 0xd6b3, 0x0, 0x0);
        gbc.writeMem(0x9ef2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x70bc);
        EXPECT(gbc.pc(), 0x9ef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ef2), 0xcb);
        EXPECT(gbc.readMem(0x9ef3), 0x28);
        // CB 28 010F
        gbc.setState(0x2066, 0x2b1d, 0x19b0, 0x44aa, 0x5fce, 0xe610, 0x0, 0x0);
        gbc.writeMem(0x2066, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2b1d);
        EXPECT(gbc.pc(), 0x2068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0112
        gbc.setState(0x5536, 0x5c65, 0xd3a0, 0x63cf, 0x5e8b, 0x3db4, 0x1, 0x0);
        gbc.writeMem(0x5536, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5c65);
        EXPECT(gbc.pc(), 0x5538);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0113
        gbc.setState(0x3eb, 0xe140, 0xf780, 0x340f, 0x4a07, 0xae40, 0x0, 0x0);
        gbc.writeMem(0x3eb, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe140);
        EXPECT(gbc.pc(), 0x3ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0114
        gbc.setState(0xb894, 0x6357, 0x83f0, 0x4f96, 0x2eb1, 0x966c, 0x1, 0x0);
        gbc.writeMem(0xb894, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6357);
        EXPECT(gbc.pc(), 0xb896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb894), 0xcb);
        EXPECT(gbc.readMem(0xb895), 0x28);
        // CB 28 0115
        gbc.setState(0x8f83, 0x2a22, 0x4db0, 0xfd4e, 0x5cf9, 0xd96d, 0x1, 0x1);
        gbc.writeMem(0x8f83, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2a22);
        EXPECT(gbc.pc(), 0x8f85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f83), 0xcb);
        EXPECT(gbc.readMem(0x8f84), 0x28);
        // CB 28 0116
        gbc.setState(0xcc1f, 0x4aa0, 0x2a00, 0x4491, 0x5fd2, 0xc5ba, 0x0, 0x1);
        gbc.writeMem(0xcc1f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4aa0);
        EXPECT(gbc.pc(), 0xcc21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc1f), 0xcb);
        EXPECT(gbc.readMem(0xcc20), 0x28);
        // CB 28 0117
        gbc.setState(0xcece, 0xc01e, 0x3380, 0xb0e4, 0xc8a1, 0xa873, 0x1, 0x1);
        gbc.writeMem(0xcece, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc01e);
        EXPECT(gbc.pc(), 0xced0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcece), 0xcb);
        EXPECT(gbc.readMem(0xcecf), 0x28);
        // CB 28 0118
        gbc.setState(0xac13, 0x1ba0, 0xa240, 0x3581, 0xd408, 0xe3aa, 0x0, 0x1);
        gbc.writeMem(0xac13, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1ba0);
        EXPECT(gbc.pc(), 0xac15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac13), 0xcb);
        EXPECT(gbc.readMem(0xac14), 0x28);
        // CB 28 011A
        gbc.setState(0xaefa, 0x60f2, 0xbc70, 0x306c, 0xb6a, 0xfa8f, 0x1, 0x1);
        gbc.writeMem(0xaefa, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x60f2);
        EXPECT(gbc.pc(), 0xaefc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaefa), 0xcb);
        EXPECT(gbc.readMem(0xaefb), 0x28);
        // CB 28 011B
        gbc.setState(0x1133, 0xfbd4, 0xb6e0, 0xbbb4, 0xc013, 0x691b, 0x1, 0x1);
        gbc.writeMem(0x1133, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xfbd4);
        EXPECT(gbc.pc(), 0x1135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 011C
        gbc.setState(0x555c, 0xa96c, 0x61b0, 0xa0de, 0xa0b0, 0x62aa, 0x0, 0x1);
        gbc.writeMem(0x555c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa96c);
        EXPECT(gbc.pc(), 0x555e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 011D
        gbc.setState(0xcc33, 0x6e41, 0xb240, 0x64bb, 0x86ba, 0xa98b, 0x1, 0x1);
        gbc.writeMem(0xcc33, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6e41);
        EXPECT(gbc.pc(), 0xcc35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc33), 0xcb);
        EXPECT(gbc.readMem(0xcc34), 0x28);
        // CB 28 011E
        gbc.setState(0xa61c, 0x24c8, 0xfdf0, 0x4c1d, 0x8408, 0xc678, 0x0, 0x0);
        gbc.writeMem(0xa61c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x24c8);
        EXPECT(gbc.pc(), 0xa61e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa61c), 0xcb);
        EXPECT(gbc.readMem(0xa61d), 0x28);
        // CB 28 011F
        gbc.setState(0xbe62, 0x1425, 0xbaa0, 0xde63, 0x3c43, 0xac9d, 0x0, 0x0);
        gbc.writeMem(0xbe62, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1425);
        EXPECT(gbc.pc(), 0xbe64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe62), 0xcb);
        EXPECT(gbc.readMem(0xbe63), 0x28);
        // CB 28 0121
        gbc.setState(0xb2ee, 0x5a34, 0x82b0, 0xa349, 0x5d95, 0x30dc, 0x0, 0x0);
        gbc.writeMem(0xb2ee, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5a34);
        EXPECT(gbc.pc(), 0xb2f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ee), 0xcb);
        EXPECT(gbc.readMem(0xb2ef), 0x28);
        // CB 28 0122
        gbc.setState(0x25f6, 0x66c2, 0x2930, 0x5f43, 0xdde0, 0xb4fe, 0x0, 0x1);
        gbc.writeMem(0x25f6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x66c2);
        EXPECT(gbc.pc(), 0x25f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0123
        gbc.setState(0xd611, 0x61cc, 0xa10, 0xcca, 0x644d, 0x4f9, 0x0, 0x1);
        gbc.writeMem(0xd611, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x61cc);
        EXPECT(gbc.pc(), 0xd613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd611), 0xcb);
        EXPECT(gbc.readMem(0xd612), 0x28);
        // CB 28 0124
        gbc.setState(0xb9cf, 0x322, 0x74b0, 0x8f66, 0xecde, 0x8dbf, 0x1, 0x1);
        gbc.writeMem(0xb9cf, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x322);
        EXPECT(gbc.pc(), 0xb9d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9cf), 0xcb);
        EXPECT(gbc.readMem(0xb9d0), 0x28);
        // CB 28 0125
        gbc.setState(0xee5a, 0xf883, 0x99b0, 0x7dfb, 0xcc63, 0xd343, 0x0, 0x1);
        gbc.writeMem(0xee5a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf883);
        EXPECT(gbc.pc(), 0xee5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee5a), 0xcb);
        EXPECT(gbc.readMem(0xee5b), 0x28);
        // CB 28 0126
        gbc.setState(0x8fc5, 0xd1be, 0x2710, 0xcdb, 0x4acb, 0xa2ce, 0x1, 0x1);
        gbc.writeMem(0x8fc5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd1be);
        EXPECT(gbc.pc(), 0x8fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc5), 0xcb);
        EXPECT(gbc.readMem(0x8fc6), 0x28);
        // CB 28 0127
        gbc.setState(0x1b05, 0x4bbe, 0x34f0, 0x9c6f, 0x45ad, 0xb215, 0x0, 0x1);
        gbc.writeMem(0x1b05, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4bbe);
        EXPECT(gbc.pc(), 0x1b07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0128
        gbc.setState(0x644d, 0x851c, 0xd5a0, 0x843d, 0x8b1f, 0xcf94, 0x0, 0x1);
        gbc.writeMem(0x644d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x851c);
        EXPECT(gbc.pc(), 0x644f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0129
        gbc.setState(0x4e2f, 0xe5e, 0xf5e0, 0xbcaa, 0xc58c, 0x5474, 0x0, 0x1);
        gbc.writeMem(0x4e2f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe5e);
        EXPECT(gbc.pc(), 0x4e31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 012A
        gbc.setState(0x7de, 0x5ddd, 0x4770, 0xdfc0, 0xa0b7, 0xd99d, 0x1, 0x0);
        gbc.writeMem(0x7de, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5ddd);
        EXPECT(gbc.pc(), 0x7e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 012C
        gbc.setState(0x97a0, 0x4e59, 0x3b50, 0xd015, 0x3c4b, 0xeb03, 0x1, 0x0);
        gbc.writeMem(0x97a0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4e59);
        EXPECT(gbc.pc(), 0x97a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97a0), 0xcb);
        EXPECT(gbc.readMem(0x97a1), 0x28);
        // CB 28 012D
        gbc.setState(0xacb7, 0x614e, 0xa960, 0x6fec, 0x97a4, 0xaa75, 0x1, 0x0);
        gbc.writeMem(0xacb7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x614e);
        EXPECT(gbc.pc(), 0xacb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacb7), 0xcb);
        EXPECT(gbc.readMem(0xacb8), 0x28);
        // CB 28 012F
        gbc.setState(0x9f95, 0x6ca0, 0x9f50, 0x23c, 0xd6e9, 0x718e, 0x0, 0x1);
        gbc.writeMem(0x9f95, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6ca0);
        EXPECT(gbc.pc(), 0x9f97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f95), 0xcb);
        EXPECT(gbc.readMem(0x9f96), 0x28);
        // CB 28 0130
        gbc.setState(0x8524, 0x2d65, 0x8a40, 0xb2b5, 0xa633, 0xefb7, 0x1, 0x0);
        gbc.writeMem(0x8524, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2d65);
        EXPECT(gbc.pc(), 0x8526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8524), 0xcb);
        EXPECT(gbc.readMem(0x8525), 0x28);
        // CB 28 0131
        gbc.setState(0xb92e, 0x652c, 0x3f0, 0x7923, 0x3a8a, 0x5394, 0x0, 0x1);
        gbc.writeMem(0xb92e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x652c);
        EXPECT(gbc.pc(), 0xb930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb92e), 0xcb);
        EXPECT(gbc.readMem(0xb92f), 0x28);
        // CB 28 0132
        gbc.setState(0xce24, 0x1efe, 0xc970, 0xe5e8, 0x2fcf, 0x240c, 0x1, 0x1);
        gbc.writeMem(0xce24, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1efe);
        EXPECT(gbc.pc(), 0xce26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce24), 0xcb);
        EXPECT(gbc.readMem(0xce25), 0x28);
        // CB 28 0133
        gbc.setState(0x67e5, 0x96ac, 0x2b00, 0xf4e6, 0xd15a, 0xc836, 0x0, 0x1);
        gbc.writeMem(0x67e5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x96ac);
        EXPECT(gbc.pc(), 0x67e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0134
        gbc.setState(0x4f1c, 0x957a, 0x5660, 0xfb7f, 0x1bc8, 0xd0b7, 0x1, 0x1);
        gbc.writeMem(0x4f1c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x957a);
        EXPECT(gbc.pc(), 0x4f1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0135
        gbc.setState(0x4321, 0xa592, 0x75b0, 0x8f7c, 0x3fde, 0x8215, 0x0, 0x0);
        gbc.writeMem(0x4321, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa592);
        EXPECT(gbc.pc(), 0x4323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0136
        gbc.setState(0x5a21, 0x7466, 0x6b60, 0x338a, 0xd5a3, 0xa57f, 0x0, 0x1);
        gbc.writeMem(0x5a21, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7466);
        EXPECT(gbc.pc(), 0x5a23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0137
        gbc.setState(0xe1f, 0x4901, 0xc850, 0x1044, 0xd7cd, 0x997f, 0x0, 0x0);
        gbc.writeMem(0xe1f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4901);
        EXPECT(gbc.pc(), 0xe21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0138
        gbc.setState(0x938c, 0x6cc5, 0x4500, 0xf86a, 0xd99a, 0xc800, 0x0, 0x0);
        gbc.writeMem(0x938c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6cc5);
        EXPECT(gbc.pc(), 0x938e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x938c), 0xcb);
        EXPECT(gbc.readMem(0x938d), 0x28);
        // CB 28 0139
        gbc.setState(0x4b73, 0x75e7, 0x4980, 0xb814, 0x4348, 0x7d4e, 0x0, 0x1);
        gbc.writeMem(0x4b73, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x75e7);
        EXPECT(gbc.pc(), 0x4b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 013A
        gbc.setState(0x53b7, 0x6769, 0xb850, 0x1b7, 0x979a, 0x9fb6, 0x1, 0x0);
        gbc.writeMem(0x53b7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6769);
        EXPECT(gbc.pc(), 0x53b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 013C
        gbc.setState(0x8899, 0x5d62, 0x7530, 0xcdb2, 0x912c, 0x43ec, 0x1, 0x1);
        gbc.writeMem(0x8899, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5d62);
        EXPECT(gbc.pc(), 0x889b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8899), 0xcb);
        EXPECT(gbc.readMem(0x889a), 0x28);
        // CB 28 013D
        gbc.setState(0x7fc9, 0x63cb, 0xe880, 0x2a9e, 0xc386, 0x3385, 0x1, 0x0);
        gbc.writeMem(0x7fc9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x63cb);
        EXPECT(gbc.pc(), 0x7fcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 013E
        gbc.setState(0x57ad, 0x482, 0x5fe0, 0x4af5, 0x1bac, 0x7da6, 0x1, 0x0);
        gbc.writeMem(0x57ad, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x482);
        EXPECT(gbc.pc(), 0x57af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 013F
        gbc.setState(0xa6a6, 0xb553, 0x9330, 0x2782, 0x457b, 0x5fed, 0x1, 0x0);
        gbc.writeMem(0xa6a6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb553);
        EXPECT(gbc.pc(), 0xa6a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6a6), 0xcb);
        EXPECT(gbc.readMem(0xa6a7), 0x28);
        // CB 28 0140
        gbc.setState(0x8a44, 0x736e, 0x5e00, 0x12c5, 0x964f, 0x11af, 0x0, 0x0);
        gbc.writeMem(0x8a44, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x736e);
        EXPECT(gbc.pc(), 0x8a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a44), 0xcb);
        EXPECT(gbc.readMem(0x8a45), 0x28);
        // CB 28 0141
        gbc.setState(0x92c9, 0xfe9d, 0xf030, 0x5b81, 0x6c96, 0x55a6, 0x1, 0x1);
        gbc.writeMem(0x92c9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfe9d);
        EXPECT(gbc.pc(), 0x92cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c9), 0xcb);
        EXPECT(gbc.readMem(0x92ca), 0x28);
        // CB 28 0142
        gbc.setState(0xb324, 0x72d3, 0x77e0, 0xcc6c, 0xfaf4, 0x4437, 0x0, 0x1);
        gbc.writeMem(0xb324, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x72d3);
        EXPECT(gbc.pc(), 0xb326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb324), 0xcb);
        EXPECT(gbc.readMem(0xb325), 0x28);
        // CB 28 0143
        gbc.setState(0x52d6, 0xb920, 0xe320, 0xcb85, 0xbcd9, 0x4f65, 0x0, 0x1);
        gbc.writeMem(0x52d6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb920);
        EXPECT(gbc.pc(), 0x52d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0144
        gbc.setState(0xacb, 0xa4ef, 0x6cb0, 0x8430, 0x9e65, 0x83a0, 0x0, 0x1);
        gbc.writeMem(0xacb, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa4ef);
        EXPECT(gbc.pc(), 0xacd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0145
        gbc.setState(0x2d94, 0x9efd, 0x7850, 0xe282, 0xbbe7, 0x7b44, 0x1, 0x0);
        gbc.writeMem(0x2d94, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9efd);
        EXPECT(gbc.pc(), 0x2d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0146
        gbc.setState(0x5c3c, 0xa5a5, 0x38a0, 0xcbde, 0x79f, 0xa02e, 0x0, 0x1);
        gbc.writeMem(0x5c3c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa5a5);
        EXPECT(gbc.pc(), 0x5c3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0148
        gbc.setState(0x7c10, 0xcada, 0xf8a0, 0x79e8, 0x1fc6, 0x5707, 0x1, 0x1);
        gbc.writeMem(0x7c10, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcada);
        EXPECT(gbc.pc(), 0x7c12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0149
        gbc.setState(0x37eb, 0x1d92, 0x84a0, 0xf627, 0x99d9, 0x3687, 0x1, 0x1);
        gbc.writeMem(0x37eb, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1d92);
        EXPECT(gbc.pc(), 0x37ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 014A
        gbc.setState(0xd006, 0x74ab, 0x5840, 0xc532, 0xc081, 0x4593, 0x1, 0x0);
        gbc.writeMem(0xd006, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x74ab);
        EXPECT(gbc.pc(), 0xd008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd006), 0xcb);
        EXPECT(gbc.readMem(0xd007), 0x28);
        // CB 28 014B
        gbc.setState(0x8e1e, 0xa4a1, 0x31b0, 0x15a5, 0x6c84, 0x4d9a, 0x1, 0x0);
        gbc.writeMem(0x8e1e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa4a1);
        EXPECT(gbc.pc(), 0x8e20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e1e), 0xcb);
        EXPECT(gbc.readMem(0x8e1f), 0x28);
        // CB 28 014D
        gbc.setState(0x414, 0xea9a, 0xf730, 0xcae4, 0xa838, 0x76a0, 0x0, 0x1);
        gbc.writeMem(0x414, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xea9a);
        EXPECT(gbc.pc(), 0x416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 014E
        gbc.setState(0x9fbd, 0x6415, 0x9e60, 0x2ee4, 0xe1ed, 0x528c, 0x1, 0x0);
        gbc.writeMem(0x9fbd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x6415);
        EXPECT(gbc.pc(), 0x9fbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fbd), 0xcb);
        EXPECT(gbc.readMem(0x9fbe), 0x28);
        // CB 28 014F
        gbc.setState(0x6df8, 0x6f22, 0xc060, 0x3e2b, 0x7c71, 0xd8a5, 0x0, 0x1);
        gbc.writeMem(0x6df8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6f22);
        EXPECT(gbc.pc(), 0x6dfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0150
        gbc.setState(0x5972, 0x6d41, 0x3d70, 0xc2bd, 0xa5f6, 0x2a61, 0x1, 0x1);
        gbc.writeMem(0x5972, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6d41);
        EXPECT(gbc.pc(), 0x5974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0151
        gbc.setState(0x5ad9, 0xae39, 0xf0f0, 0x9c08, 0xbbf4, 0xdc04, 0x0, 0x0);
        gbc.writeMem(0x5ad9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xae39);
        EXPECT(gbc.pc(), 0x5adb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0152
        gbc.setState(0x9a08, 0x2d75, 0xf680, 0x136a, 0xc80e, 0xa10c, 0x0, 0x1);
        gbc.writeMem(0x9a08, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2d75);
        EXPECT(gbc.pc(), 0x9a0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a08), 0xcb);
        EXPECT(gbc.readMem(0x9a09), 0x28);
        // CB 28 0153
        gbc.setState(0x28c2, 0x7ceb, 0x2c0, 0x385b, 0x38cd, 0xd3d5, 0x0, 0x1);
        gbc.writeMem(0x28c2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7ceb);
        EXPECT(gbc.pc(), 0x28c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0154
        gbc.setState(0x6748, 0x4aed, 0x2a20, 0x2e74, 0x49f7, 0x9e4f, 0x1, 0x1);
        gbc.writeMem(0x6748, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4aed);
        EXPECT(gbc.pc(), 0x674a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0155
        gbc.setState(0x740a, 0x8f6c, 0x86e0, 0xdd3b, 0xfce9, 0xa362, 0x1, 0x0);
        gbc.writeMem(0x740a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8f6c);
        EXPECT(gbc.pc(), 0x740c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0156
        gbc.setState(0x15f7, 0x1c2e, 0xe0a0, 0xb9a0, 0x5f09, 0x87a5, 0x1, 0x0);
        gbc.writeMem(0x15f7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1c2e);
        EXPECT(gbc.pc(), 0x15f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0157
        gbc.setState(0x932e, 0x2fd, 0xe810, 0xe9be, 0x81cf, 0xc200, 0x0, 0x1);
        gbc.writeMem(0x932e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2fd);
        EXPECT(gbc.pc(), 0x9330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x932e), 0xcb);
        EXPECT(gbc.readMem(0x932f), 0x28);
        // CB 28 0158
        gbc.setState(0xaa6a, 0x4bda, 0x3eb0, 0xdb54, 0xe7e7, 0x6ef9, 0x1, 0x1);
        gbc.writeMem(0xaa6a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4bda);
        EXPECT(gbc.pc(), 0xaa6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa6a), 0xcb);
        EXPECT(gbc.readMem(0xaa6b), 0x28);
        // CB 28 0159
        gbc.setState(0xb7d1, 0x4312, 0x5790, 0xd452, 0x6bfc, 0x871a, 0x1, 0x1);
        gbc.writeMem(0xb7d1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4312);
        EXPECT(gbc.pc(), 0xb7d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d1), 0xcb);
        EXPECT(gbc.readMem(0xb7d2), 0x28);
        // CB 28 015A
        gbc.setState(0x4934, 0x11fd, 0xb970, 0x8c32, 0x5499, 0x7ac6, 0x1, 0x1);
        gbc.writeMem(0x4934, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x11fd);
        EXPECT(gbc.pc(), 0x4936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 015B
        gbc.setState(0x7203, 0x113d, 0x75f0, 0xb2a4, 0x7feb, 0x6120, 0x1, 0x0);
        gbc.writeMem(0x7203, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x113d);
        EXPECT(gbc.pc(), 0x7205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 015C
        gbc.setState(0x207, 0x1baa, 0x130, 0x34bf, 0x21d3, 0x1f91, 0x1, 0x1);
        gbc.writeMem(0x207, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1baa);
        EXPECT(gbc.pc(), 0x209);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 015D
        gbc.setState(0xbe3b, 0x7288, 0x2fa0, 0xea43, 0xe19a, 0xaaed, 0x0, 0x0);
        gbc.writeMem(0xbe3b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7288);
        EXPECT(gbc.pc(), 0xbe3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe3b), 0xcb);
        EXPECT(gbc.readMem(0xbe3c), 0x28);
        // CB 28 015E
        gbc.setState(0xe730, 0x3a27, 0xcc0, 0x409c, 0x5879, 0x6d30, 0x0, 0x0);
        gbc.writeMem(0xe730, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3a27);
        EXPECT(gbc.pc(), 0xe732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe730), 0xcb);
        EXPECT(gbc.readMem(0xe731), 0x28);
        // CB 28 015F
        gbc.setState(0x470, 0xf091, 0x86c0, 0xa530, 0xd2a5, 0x1723, 0x0, 0x0);
        gbc.writeMem(0x470, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf091);
        EXPECT(gbc.pc(), 0x472);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0160
        gbc.setState(0x8e7d, 0xc1f5, 0x31f0, 0xae38, 0x1f02, 0xcfb5, 0x0, 0x1);
        gbc.writeMem(0x8e7d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc1f5);
        EXPECT(gbc.pc(), 0x8e7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e7d), 0xcb);
        EXPECT(gbc.readMem(0x8e7e), 0x28);
        // CB 28 0161
        gbc.setState(0x6c70, 0xd6a8, 0xfc20, 0x16f2, 0x6f32, 0x518e, 0x0, 0x1);
        gbc.writeMem(0x6c70, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd6a8);
        EXPECT(gbc.pc(), 0x6c72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0162
        gbc.setState(0x2597, 0x78a9, 0xb890, 0xaf6c, 0x10dc, 0x6b42, 0x0, 0x0);
        gbc.writeMem(0x2597, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x78a9);
        EXPECT(gbc.pc(), 0x2599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0163
        gbc.setState(0xe272, 0x81ad, 0x2dc0, 0xb53a, 0x9117, 0x778, 0x1, 0x1);
        gbc.writeMem(0xe272, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x81ad);
        EXPECT(gbc.pc(), 0xe274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe272), 0xcb);
        EXPECT(gbc.readMem(0xe273), 0x28);
        // CB 28 0164
        gbc.setState(0xc45c, 0xd04c, 0x60, 0x5467, 0x4601, 0x90b9, 0x1, 0x1);
        gbc.writeMem(0xc45c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd04c);
        EXPECT(gbc.pc(), 0xc45e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc45c), 0xcb);
        EXPECT(gbc.readMem(0xc45d), 0x28);
        // CB 28 0165
        gbc.setState(0xe90a, 0x26d2, 0x1170, 0xcbf, 0xc7ef, 0x55b3, 0x1, 0x1);
        gbc.writeMem(0xe90a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x26d2);
        EXPECT(gbc.pc(), 0xe90c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe90a), 0xcb);
        EXPECT(gbc.readMem(0xe90b), 0x28);
        // CB 28 0166
        gbc.setState(0xd8a3, 0xed5a, 0xaea0, 0x6371, 0x706a, 0x906, 0x1, 0x0);
        gbc.writeMem(0xd8a3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xed5a);
        EXPECT(gbc.pc(), 0xd8a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8a3), 0xcb);
        EXPECT(gbc.readMem(0xd8a4), 0x28);
        // CB 28 0167
        gbc.setState(0xeabf, 0x961e, 0xb420, 0xd9be, 0xd715, 0x3203, 0x1, 0x1);
        gbc.writeMem(0xeabf, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x961e);
        EXPECT(gbc.pc(), 0xeac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeabf), 0xcb);
        EXPECT(gbc.readMem(0xeac0), 0x28);
        // CB 28 0168
        gbc.setState(0x782, 0x3d62, 0x1cf0, 0x4fb6, 0x7f46, 0x4359, 0x0, 0x0);
        gbc.writeMem(0x782, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3d62);
        EXPECT(gbc.pc(), 0x784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0169
        gbc.setState(0xdcb5, 0xd876, 0x1880, 0x2fa0, 0xa20d, 0x557d, 0x1, 0x0);
        gbc.writeMem(0xdcb5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd876);
        EXPECT(gbc.pc(), 0xdcb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcb5), 0xcb);
        EXPECT(gbc.readMem(0xdcb6), 0x28);
        // CB 28 016A
        gbc.setState(0x9917, 0x4e00, 0x8b50, 0xb02e, 0x57ed, 0x490e, 0x1, 0x0);
        gbc.writeMem(0x9917, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4e00);
        EXPECT(gbc.pc(), 0x9919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9917), 0xcb);
        EXPECT(gbc.readMem(0x9918), 0x28);
        // CB 28 016B
        gbc.setState(0x3b41, 0xe37b, 0xd8f0, 0x8aa, 0xbb2c, 0x437c, 0x0, 0x0);
        gbc.writeMem(0x3b41, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe37b);
        EXPECT(gbc.pc(), 0x3b43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 016C
        gbc.setState(0x3a6b, 0x37e, 0x7c50, 0x68a2, 0x9a86, 0x3f9b, 0x1, 0x0);
        gbc.writeMem(0x3a6b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x37e);
        EXPECT(gbc.pc(), 0x3a6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 016D
        gbc.setState(0xc5ec, 0xfafd, 0x7640, 0xce66, 0xcf4a, 0xb3cb, 0x0, 0x0);
        gbc.writeMem(0xc5ec, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xfafd);
        EXPECT(gbc.pc(), 0xc5ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ec), 0xcb);
        EXPECT(gbc.readMem(0xc5ed), 0x28);
        // CB 28 016E
        gbc.setState(0xaba1, 0x6628, 0xfc70, 0x660e, 0x56bc, 0x62b0, 0x0, 0x0);
        gbc.writeMem(0xaba1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6628);
        EXPECT(gbc.pc(), 0xaba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba1), 0xcb);
        EXPECT(gbc.readMem(0xaba2), 0x28);
        // CB 28 016F
        gbc.setState(0x2d69, 0x1383, 0x3800, 0x9292, 0xf1db, 0x865, 0x1, 0x0);
        gbc.writeMem(0x2d69, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1383);
        EXPECT(gbc.pc(), 0x2d6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0171
        gbc.setState(0xa251, 0x5de7, 0xfb00, 0xdbbb, 0x6f1, 0xb744, 0x1, 0x0);
        gbc.writeMem(0xa251, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5de7);
        EXPECT(gbc.pc(), 0xa253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa251), 0xcb);
        EXPECT(gbc.readMem(0xa252), 0x28);
        // CB 28 0172
        gbc.setState(0x8a9f, 0xceec, 0x51d0, 0xfb56, 0x18d9, 0x93ad, 0x0, 0x0);
        gbc.writeMem(0x8a9f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xceec);
        EXPECT(gbc.pc(), 0x8aa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a9f), 0xcb);
        EXPECT(gbc.readMem(0x8aa0), 0x28);
        // CB 28 0173
        gbc.setState(0x939f, 0x533f, 0x6b80, 0x1637, 0x4ed6, 0x1f5d, 0x0, 0x0);
        gbc.writeMem(0x939f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x533f);
        EXPECT(gbc.pc(), 0x93a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x939f), 0xcb);
        EXPECT(gbc.readMem(0x93a0), 0x28);
        // CB 28 0174
        gbc.setState(0x6f7d, 0xfaca, 0x3c10, 0x209f, 0x17be, 0xd94c, 0x0, 0x0);
        gbc.writeMem(0x6f7d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfaca);
        EXPECT(gbc.pc(), 0x6f7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0175
        gbc.setState(0xba81, 0x953a, 0xeca0, 0xe5cb, 0x27b6, 0x9ee, 0x1, 0x1);
        gbc.writeMem(0xba81, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x953a);
        EXPECT(gbc.pc(), 0xba83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba81), 0xcb);
        EXPECT(gbc.readMem(0xba82), 0x28);
        // CB 28 0176
        gbc.setState(0x957b, 0x48ec, 0xf620, 0x2e47, 0xa57c, 0xc2af, 0x1, 0x1);
        gbc.writeMem(0x957b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x48ec);
        EXPECT(gbc.pc(), 0x957d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x957b), 0xcb);
        EXPECT(gbc.readMem(0x957c), 0x28);
        // CB 28 0177
        gbc.setState(0xa15f, 0xe4eb, 0x4f20, 0x11d0, 0x7eb9, 0x70bd, 0x0, 0x0);
        gbc.writeMem(0xa15f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe4eb);
        EXPECT(gbc.pc(), 0xa161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa15f), 0xcb);
        EXPECT(gbc.readMem(0xa160), 0x28);
        // CB 28 0178
        gbc.setState(0xb078, 0x3b82, 0x2400, 0xec4, 0x5875, 0x57c0, 0x1, 0x1);
        gbc.writeMem(0xb078, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3b82);
        EXPECT(gbc.pc(), 0xb07a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb078), 0xcb);
        EXPECT(gbc.readMem(0xb079), 0x28);
        // CB 28 0179
        gbc.setState(0x35b3, 0x5680, 0x40e0, 0xb9b2, 0x85d1, 0xc1d7, 0x0, 0x0);
        gbc.writeMem(0x35b3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5680);
        EXPECT(gbc.pc(), 0x35b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 017A
        gbc.setState(0x4e43, 0x50a8, 0xdcc0, 0x506f, 0x5fc3, 0x1129, 0x1, 0x1);
        gbc.writeMem(0x4e43, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x50a8);
        EXPECT(gbc.pc(), 0x4e45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 017B
        gbc.setState(0x3795, 0xde06, 0xf970, 0x8a6, 0x2bdd, 0xce44, 0x1, 0x1);
        gbc.writeMem(0x3795, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xde06);
        EXPECT(gbc.pc(), 0x3797);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 017D
        gbc.setState(0x8b9, 0x706e, 0x6570, 0xe33b, 0xd082, 0xd437, 0x1, 0x0);
        gbc.writeMem(0x8b9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x706e);
        EXPECT(gbc.pc(), 0x8bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 017E
        gbc.setState(0x1431, 0x171f, 0xa520, 0x2c82, 0x82f0, 0xede0, 0x0, 0x0);
        gbc.writeMem(0x1431, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x171f);
        EXPECT(gbc.pc(), 0x1433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 017F
        gbc.setState(0x64cb, 0x2f3d, 0xdcd0, 0x9389, 0x1204, 0x8944, 0x0, 0x1);
        gbc.writeMem(0x64cb, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2f3d);
        EXPECT(gbc.pc(), 0x64cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0180
        gbc.setState(0x47ce, 0x7d45, 0x3700, 0x7454, 0xed33, 0x36bd, 0x0, 0x1);
        gbc.writeMem(0x47ce, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7d45);
        EXPECT(gbc.pc(), 0x47d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0181
        gbc.setState(0x52e8, 0x8981, 0x1c40, 0xd70e, 0x1cb3, 0x51ac, 0x1, 0x0);
        gbc.writeMem(0x52e8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8981);
        EXPECT(gbc.pc(), 0x52ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0182
        gbc.setState(0xaad5, 0xcb82, 0xbfe0, 0x4d28, 0x4478, 0xace8, 0x0, 0x0);
        gbc.writeMem(0xaad5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xcb82);
        EXPECT(gbc.pc(), 0xaad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaad5), 0xcb);
        EXPECT(gbc.readMem(0xaad6), 0x28);
        // CB 28 0183
        gbc.setState(0x8700, 0x43a0, 0x6cb0, 0x7c0d, 0x701b, 0xa38c, 0x0, 0x1);
        gbc.writeMem(0x8700, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x43a0);
        EXPECT(gbc.pc(), 0x8702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8700), 0xcb);
        EXPECT(gbc.readMem(0x8701), 0x28);
        // CB 28 0184
        gbc.setState(0x5181, 0x6f66, 0x4270, 0x5227, 0x84d, 0xde07, 0x1, 0x1);
        gbc.writeMem(0x5181, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6f66);
        EXPECT(gbc.pc(), 0x5183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0185
        gbc.setState(0x1fbc, 0x26f6, 0x41e0, 0xf1d2, 0xc273, 0xbc99, 0x1, 0x1);
        gbc.writeMem(0x1fbc, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x26f6);
        EXPECT(gbc.pc(), 0x1fbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0186
        gbc.setState(0x254d, 0xe809, 0xa300, 0xb861, 0x94a5, 0x5de1, 0x1, 0x0);
        gbc.writeMem(0x254d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe809);
        EXPECT(gbc.pc(), 0x254f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0187
        gbc.setState(0x2a3b, 0xb57e, 0x7ab0, 0x2347, 0x2a3e, 0xdee5, 0x1, 0x0);
        gbc.writeMem(0x2a3b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb57e);
        EXPECT(gbc.pc(), 0x2a3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0188
        gbc.setState(0x9b9f, 0x861, 0xc10, 0xb7da, 0x9d83, 0xde3, 0x0, 0x1);
        gbc.writeMem(0x9b9f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x861);
        EXPECT(gbc.pc(), 0x9ba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b9f), 0xcb);
        EXPECT(gbc.readMem(0x9ba0), 0x28);
        // CB 28 0189
        gbc.setState(0xe2d3, 0x393e, 0xf30, 0xeece, 0xf1ad, 0x8398, 0x1, 0x0);
        gbc.writeMem(0xe2d3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x393e);
        EXPECT(gbc.pc(), 0xe2d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2d3), 0xcb);
        EXPECT(gbc.readMem(0xe2d4), 0x28);
        // CB 28 018A
        gbc.setState(0xb924, 0x1f0a, 0x8760, 0xae18, 0xf3eb, 0x883d, 0x1, 0x0);
        gbc.writeMem(0xb924, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1f0a);
        EXPECT(gbc.pc(), 0xb926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb924), 0xcb);
        EXPECT(gbc.readMem(0xb925), 0x28);
        // CB 28 018C
        gbc.setState(0xbc2f, 0x8f55, 0x5260, 0xce86, 0x140b, 0xaf3, 0x1, 0x0);
        gbc.writeMem(0xbc2f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8f55);
        EXPECT(gbc.pc(), 0xbc31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc2f), 0xcb);
        EXPECT(gbc.readMem(0xbc30), 0x28);
        // CB 28 018D
        gbc.setState(0x7a3c, 0xe92f, 0x4200, 0x8b9b, 0xe8, 0x6d07, 0x1, 0x1);
        gbc.writeMem(0x7a3c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe92f);
        EXPECT(gbc.pc(), 0x7a3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 018E
        gbc.setState(0x9e2, 0x8d73, 0x5980, 0x1bc6, 0xc196, 0xd0d3, 0x0, 0x1);
        gbc.writeMem(0x9e2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8d73);
        EXPECT(gbc.pc(), 0x9e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 018F
        gbc.setState(0xdca6, 0xdd, 0xbb50, 0x74eb, 0xacfd, 0x6075, 0x1, 0x0);
        gbc.writeMem(0xdca6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xdd);
        EXPECT(gbc.pc(), 0xdca8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca6), 0xcb);
        EXPECT(gbc.readMem(0xdca7), 0x28);
        // CB 28 0190
        gbc.setState(0x71f1, 0x92fd, 0x74a0, 0xe545, 0xa9a, 0x45bf, 0x1, 0x1);
        gbc.writeMem(0x71f1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x92fd);
        EXPECT(gbc.pc(), 0x71f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0191
        gbc.setState(0x3df2, 0x2411, 0xeef0, 0x481c, 0xa996, 0x2ac7, 0x0, 0x0);
        gbc.writeMem(0x3df2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2411);
        EXPECT(gbc.pc(), 0x3df4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0192
        gbc.setState(0x90ca, 0x70bb, 0x2e80, 0x4332, 0x407b, 0xd22d, 0x1, 0x1);
        gbc.writeMem(0x90ca, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x70bb);
        EXPECT(gbc.pc(), 0x90cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ca), 0xcb);
        EXPECT(gbc.readMem(0x90cb), 0x28);
        // CB 28 0193
        gbc.setState(0x1eb9, 0x4c85, 0xcdc0, 0x3b0c, 0x572b, 0xd7e, 0x0, 0x1);
        gbc.writeMem(0x1eb9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4c85);
        EXPECT(gbc.pc(), 0x1ebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0194
        gbc.setState(0x70a6, 0x5cf5, 0x2c60, 0x1c4e, 0x85b8, 0x2145, 0x0, 0x0);
        gbc.writeMem(0x70a6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5cf5);
        EXPECT(gbc.pc(), 0x70a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0195
        gbc.setState(0x1081, 0xdb9a, 0x6e60, 0xa0cc, 0x603f, 0x81a6, 0x1, 0x0);
        gbc.writeMem(0x1081, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xdb9a);
        EXPECT(gbc.pc(), 0x1083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0196
        gbc.setState(0xb266, 0x5664, 0x8840, 0x9610, 0x1267, 0xc2a1, 0x1, 0x0);
        gbc.writeMem(0xb266, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5664);
        EXPECT(gbc.pc(), 0xb268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb266), 0xcb);
        EXPECT(gbc.readMem(0xb267), 0x28);
        // CB 28 0197
        gbc.setState(0x5876, 0x6cfe, 0xc170, 0x3fd3, 0xe0a, 0xf55d, 0x1, 0x1);
        gbc.writeMem(0x5876, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6cfe);
        EXPECT(gbc.pc(), 0x5878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0198
        gbc.setState(0xa337, 0xe2d5, 0xba20, 0x658c, 0x1276, 0x8292, 0x1, 0x1);
        gbc.writeMem(0xa337, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe2d5);
        EXPECT(gbc.pc(), 0xa339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa337), 0xcb);
        EXPECT(gbc.readMem(0xa338), 0x28);
        // CB 28 0199
        gbc.setState(0x142f, 0x25fd, 0xb670, 0x1357, 0x7fb6, 0x6341, 0x1, 0x1);
        gbc.writeMem(0x142f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x25fd);
        EXPECT(gbc.pc(), 0x1431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 019A
        gbc.setState(0x5447, 0xcf68, 0x6510, 0x3e80, 0xbfdb, 0xd20b, 0x1, 0x0);
        gbc.writeMem(0x5447, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xcf68);
        EXPECT(gbc.pc(), 0x5449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 019B
        gbc.setState(0x6d94, 0x88a3, 0x9370, 0xd4ab, 0x33f, 0xc721, 0x1, 0x0);
        gbc.writeMem(0x6d94, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x88a3);
        EXPECT(gbc.pc(), 0x6d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 019C
        gbc.setState(0x3823, 0x5b83, 0xba60, 0xd8de, 0x126b, 0x3031, 0x1, 0x0);
        gbc.writeMem(0x3823, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5b83);
        EXPECT(gbc.pc(), 0x3825);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 019D
        gbc.setState(0xd278, 0x1263, 0x19f0, 0x7d4, 0xb103, 0xc08d, 0x1, 0x1);
        gbc.writeMem(0xd278, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1263);
        EXPECT(gbc.pc(), 0xd27a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd278), 0xcb);
        EXPECT(gbc.readMem(0xd279), 0x28);
        // CB 28 019E
        gbc.setState(0x9c01, 0x594e, 0x210, 0xbe22, 0x55b5, 0xd4ea, 0x0, 0x0);
        gbc.writeMem(0x9c01, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x594e);
        EXPECT(gbc.pc(), 0x9c03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c01), 0xcb);
        EXPECT(gbc.readMem(0x9c02), 0x28);
        // CB 28 019F
        gbc.setState(0x1aba, 0xb837, 0xce70, 0x60cb, 0x83a0, 0xbc4d, 0x0, 0x1);
        gbc.writeMem(0x1aba, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb837);
        EXPECT(gbc.pc(), 0x1abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01A0
        gbc.setState(0xc743, 0x9f21, 0x72d0, 0x4458, 0xb2c5, 0x1143, 0x0, 0x0);
        gbc.writeMem(0xc743, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9f21);
        EXPECT(gbc.pc(), 0xc745);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc743), 0xcb);
        EXPECT(gbc.readMem(0xc744), 0x28);
        // CB 28 01A2
        gbc.setState(0xed5, 0x99c9, 0x77c0, 0x396f, 0x1976, 0x6896, 0x1, 0x1);
        gbc.writeMem(0xed5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x99c9);
        EXPECT(gbc.pc(), 0xed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01A3
        gbc.setState(0x76e1, 0xac84, 0x2390, 0x4a7c, 0xf881, 0x3c44, 0x1, 0x0);
        gbc.writeMem(0x76e1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xac84);
        EXPECT(gbc.pc(), 0x76e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01A5
        gbc.setState(0xebab, 0x5db9, 0xf4e0, 0x386f, 0x2f4f, 0xf243, 0x1, 0x1);
        gbc.writeMem(0xebab, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x5db9);
        EXPECT(gbc.pc(), 0xebad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebab), 0xcb);
        EXPECT(gbc.readMem(0xebac), 0x28);
        // CB 28 01A6
        gbc.setState(0x6dda, 0xe660, 0x5630, 0xc5a0, 0x3128, 0x1aae, 0x1, 0x1);
        gbc.writeMem(0x6dda, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe660);
        EXPECT(gbc.pc(), 0x6ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01A7
        gbc.setState(0xb387, 0x9ca8, 0x7fa0, 0x6f86, 0xe6e3, 0x232f, 0x0, 0x1);
        gbc.writeMem(0xb387, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9ca8);
        EXPECT(gbc.pc(), 0xb389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb387), 0xcb);
        EXPECT(gbc.readMem(0xb388), 0x28);
        // CB 28 01A8
        gbc.setState(0x1974, 0xd81b, 0x98b0, 0xbd36, 0xb3a6, 0xe21d, 0x1, 0x1);
        gbc.writeMem(0x1974, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd81b);
        EXPECT(gbc.pc(), 0x1976);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01A9
        gbc.setState(0xe8fb, 0xbcd2, 0x2c00, 0xd88f, 0x39bf, 0xa55, 0x1, 0x1);
        gbc.writeMem(0xe8fb, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xbcd2);
        EXPECT(gbc.pc(), 0xe8fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8fb), 0xcb);
        EXPECT(gbc.readMem(0xe8fc), 0x28);
        // CB 28 01AA
        gbc.setState(0x8de6, 0xb9b2, 0xe740, 0x5e3b, 0x86c1, 0xd72e, 0x1, 0x1);
        gbc.writeMem(0x8de6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb9b2);
        EXPECT(gbc.pc(), 0x8de8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8de6), 0xcb);
        EXPECT(gbc.readMem(0x8de7), 0x28);
        // CB 28 01AB
        gbc.setState(0xdc14, 0x6e64, 0x3e30, 0x7f38, 0x4aef, 0x241d, 0x0, 0x0);
        gbc.writeMem(0xdc14, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6e64);
        EXPECT(gbc.pc(), 0xdc16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc14), 0xcb);
        EXPECT(gbc.readMem(0xdc15), 0x28);
        // CB 28 01AC
        gbc.setState(0x26d4, 0xdeb5, 0xb8a0, 0xa4d8, 0x96fc, 0x1275, 0x1, 0x0);
        gbc.writeMem(0x26d4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xdeb5);
        EXPECT(gbc.pc(), 0x26d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01AD
        gbc.setState(0xd427, 0x462d, 0x8990, 0x1e33, 0xc128, 0x9eb4, 0x1, 0x1);
        gbc.writeMem(0xd427, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x462d);
        EXPECT(gbc.pc(), 0xd429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd427), 0xcb);
        EXPECT(gbc.readMem(0xd428), 0x28);
        // CB 28 01AE
        gbc.setState(0x1eec, 0xb192, 0x2c30, 0xaf9, 0x831d, 0xf011, 0x0, 0x1);
        gbc.writeMem(0x1eec, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb192);
        EXPECT(gbc.pc(), 0x1eee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01AF
        gbc.setState(0x671f, 0x7280, 0x3580, 0x919e, 0x20be, 0x7d2c, 0x1, 0x0);
        gbc.writeMem(0x671f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7280);
        EXPECT(gbc.pc(), 0x6721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01B0
        gbc.setState(0xb768, 0x9b03, 0xffa0, 0x7c4e, 0xd566, 0x66dc, 0x0, 0x0);
        gbc.writeMem(0xb768, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9b03);
        EXPECT(gbc.pc(), 0xb76a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb768), 0xcb);
        EXPECT(gbc.readMem(0xb769), 0x28);
        // CB 28 01B1
        gbc.setState(0x6b3d, 0xf26b, 0x1880, 0x63a0, 0xae, 0xa07f, 0x1, 0x0);
        gbc.writeMem(0x6b3d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf26b);
        EXPECT(gbc.pc(), 0x6b3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01B2
        gbc.setState(0x6c95, 0x88aa, 0x72e0, 0x171e, 0xd961, 0x93da, 0x0, 0x0);
        gbc.writeMem(0x6c95, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x88aa);
        EXPECT(gbc.pc(), 0x6c97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01B3
        gbc.setState(0xb7e7, 0x9557, 0x59f0, 0xce92, 0xdc6f, 0x9d21, 0x1, 0x1);
        gbc.writeMem(0xb7e7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9557);
        EXPECT(gbc.pc(), 0xb7e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7e7), 0xcb);
        EXPECT(gbc.readMem(0xb7e8), 0x28);
        // CB 28 01B4
        gbc.setState(0xf9a, 0xd6fd, 0xdbd0, 0xe31f, 0x4996, 0x582c, 0x1, 0x0);
        gbc.writeMem(0xf9a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd6fd);
        EXPECT(gbc.pc(), 0xf9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01B5
        gbc.setState(0x60c1, 0xded4, 0x9e30, 0x1edf, 0x4b38, 0xb782, 0x1, 0x1);
        gbc.writeMem(0x60c1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xded4);
        EXPECT(gbc.pc(), 0x60c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01B6
        gbc.setState(0x5fab, 0x4de8, 0x4730, 0xc06c, 0x4c0b, 0x48af, 0x1, 0x0);
        gbc.writeMem(0x5fab, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4de8);
        EXPECT(gbc.pc(), 0x5fad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01B7
        gbc.setState(0xb5b8, 0xd890, 0x3090, 0x774f, 0x585a, 0x696b, 0x0, 0x1);
        gbc.writeMem(0xb5b8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd890);
        EXPECT(gbc.pc(), 0xb5ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5b8), 0xcb);
        EXPECT(gbc.readMem(0xb5b9), 0x28);
        // CB 28 01B8
        gbc.setState(0x235c, 0xc658, 0x8e30, 0x6e4, 0x9b31, 0x80a7, 0x1, 0x0);
        gbc.writeMem(0x235c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc658);
        EXPECT(gbc.pc(), 0x235e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01B9
        gbc.setState(0x6908, 0xfc10, 0xa030, 0x4262, 0x84f7, 0xcc5a, 0x0, 0x0);
        gbc.writeMem(0x6908, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xfc10);
        EXPECT(gbc.pc(), 0x690a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01BA
        gbc.setState(0x8794, 0x3d4e, 0x2d60, 0x204a, 0x2613, 0x64a, 0x1, 0x1);
        gbc.writeMem(0x8794, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3d4e);
        EXPECT(gbc.pc(), 0x8796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8794), 0xcb);
        EXPECT(gbc.readMem(0x8795), 0x28);
        // CB 28 01BB
        gbc.setState(0x15d9, 0x712e, 0x2eb0, 0xb3a, 0x9d6e, 0x2726, 0x0, 0x1);
        gbc.writeMem(0x15d9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x712e);
        EXPECT(gbc.pc(), 0x15db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01BC
        gbc.setState(0x4754, 0x8def, 0x2420, 0xcabb, 0xe52b, 0x7689, 0x1, 0x1);
        gbc.writeMem(0x4754, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8def);
        EXPECT(gbc.pc(), 0x4756);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01BD
        gbc.setState(0x6062, 0xb3b8, 0x4580, 0xe829, 0x5a5c, 0xac43, 0x0, 0x1);
        gbc.writeMem(0x6062, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb3b8);
        EXPECT(gbc.pc(), 0x6064);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01BE
        gbc.setState(0xed87, 0x3762, 0x8bd0, 0xc629, 0x27, 0x46ed, 0x0, 0x0);
        gbc.writeMem(0xed87, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3762);
        EXPECT(gbc.pc(), 0xed89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed87), 0xcb);
        EXPECT(gbc.readMem(0xed88), 0x28);
        // CB 28 01BF
        gbc.setState(0xd539, 0x7e26, 0x4ab0, 0x2583, 0x68d1, 0x70d5, 0x0, 0x1);
        gbc.writeMem(0xd539, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7e26);
        EXPECT(gbc.pc(), 0xd53b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd539), 0xcb);
        EXPECT(gbc.readMem(0xd53a), 0x28);
        // CB 28 01C0
        gbc.setState(0x8873, 0x786f, 0xece0, 0x8c23, 0x1055, 0x22fb, 0x0, 0x1);
        gbc.writeMem(0x8873, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x786f);
        EXPECT(gbc.pc(), 0x8875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8873), 0xcb);
        EXPECT(gbc.readMem(0x8874), 0x28);
        // CB 28 01C1
        gbc.setState(0x85d2, 0x3b2e, 0xa390, 0x92a2, 0x7794, 0xf774, 0x1, 0x0);
        gbc.writeMem(0x85d2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3b2e);
        EXPECT(gbc.pc(), 0x85d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d2), 0xcb);
        EXPECT(gbc.readMem(0x85d3), 0x28);
        // CB 28 01C2
        gbc.setState(0x7e53, 0xd2fd, 0x31f0, 0xa16c, 0x2f29, 0x8ae5, 0x1, 0x1);
        gbc.writeMem(0x7e53, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd2fd);
        EXPECT(gbc.pc(), 0x7e55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01C3
        gbc.setState(0xbe7d, 0x5c5b, 0x88a0, 0xad9, 0x55d2, 0x6d7c, 0x1, 0x0);
        gbc.writeMem(0xbe7d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5c5b);
        EXPECT(gbc.pc(), 0xbe7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe7d), 0xcb);
        EXPECT(gbc.readMem(0xbe7e), 0x28);
        // CB 28 01C4
        gbc.setState(0x1891, 0xe284, 0x6b70, 0xc10e, 0xb6d0, 0xe80, 0x0, 0x0);
        gbc.writeMem(0x1891, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe284);
        EXPECT(gbc.pc(), 0x1893);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01C5
        gbc.setState(0xdae7, 0x4641, 0xd4d0, 0x3497, 0x4804, 0xf0dc, 0x1, 0x1);
        gbc.writeMem(0xdae7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4641);
        EXPECT(gbc.pc(), 0xdae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdae7), 0xcb);
        EXPECT(gbc.readMem(0xdae8), 0x28);
        // CB 28 01C6
        gbc.setState(0x3824, 0xe85f, 0x8190, 0x3a8d, 0xef5b, 0x3364, 0x1, 0x0);
        gbc.writeMem(0x3824, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe85f);
        EXPECT(gbc.pc(), 0x3826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01C7
        gbc.setState(0x1782, 0xcff6, 0x16c0, 0x65e4, 0x6340, 0xc8b7, 0x1, 0x1);
        gbc.writeMem(0x1782, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xcff6);
        EXPECT(gbc.pc(), 0x1784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01C8
        gbc.setState(0x8934, 0x9cd0, 0x4640, 0x7099, 0x4aec, 0x2e9c, 0x1, 0x0);
        gbc.writeMem(0x8934, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9cd0);
        EXPECT(gbc.pc(), 0x8936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8934), 0xcb);
        EXPECT(gbc.readMem(0x8935), 0x28);
        // CB 28 01CA
        gbc.setState(0x4a09, 0x87c2, 0x6310, 0xc334, 0xed2a, 0x9f60, 0x1, 0x1);
        gbc.writeMem(0x4a09, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x87c2);
        EXPECT(gbc.pc(), 0x4a0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01CB
        gbc.setState(0x5db6, 0x31b6, 0xc140, 0x4b34, 0xa9da, 0xda5c, 0x1, 0x0);
        gbc.writeMem(0x5db6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x31b6);
        EXPECT(gbc.pc(), 0x5db8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01CC
        gbc.setState(0x5418, 0x786, 0xf7c0, 0xb1d, 0x5f0b, 0xa841, 0x0, 0x1);
        gbc.writeMem(0x5418, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x786);
        EXPECT(gbc.pc(), 0x541a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01CD
        gbc.setState(0x12b5, 0x4fb0, 0xe620, 0x8d38, 0xa3ca, 0x10ff, 0x0, 0x1);
        gbc.writeMem(0x12b5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4fb0);
        EXPECT(gbc.pc(), 0x12b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01CF
        gbc.setState(0x960, 0x8f85, 0x92f0, 0xf941, 0xc57d, 0xf541, 0x0, 0x1);
        gbc.writeMem(0x960, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8f85);
        EXPECT(gbc.pc(), 0x962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01D0
        gbc.setState(0x5688, 0x6359, 0xd730, 0xfed0, 0x31f4, 0x75fa, 0x0, 0x0);
        gbc.writeMem(0x5688, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6359);
        EXPECT(gbc.pc(), 0x568a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01D1
        gbc.setState(0x21b8, 0x3228, 0x8e60, 0x23ca, 0x26a9, 0x1f46, 0x0, 0x0);
        gbc.writeMem(0x21b8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3228);
        EXPECT(gbc.pc(), 0x21ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01D2
        gbc.setState(0x9704, 0xc4fd, 0x1950, 0x3c7a, 0x2b88, 0x48ed, 0x1, 0x1);
        gbc.writeMem(0x9704, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc4fd);
        EXPECT(gbc.pc(), 0x9706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9704), 0xcb);
        EXPECT(gbc.readMem(0x9705), 0x28);
        // CB 28 01D3
        gbc.setState(0x1dac, 0xf57d, 0x160, 0x506e, 0xd269, 0xf158, 0x0, 0x0);
        gbc.writeMem(0x1dac, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf57d);
        EXPECT(gbc.pc(), 0x1dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01D4
        gbc.setState(0x1af7, 0x8037, 0xcc10, 0x153e, 0x64a9, 0xb809, 0x0, 0x1);
        gbc.writeMem(0x1af7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8037);
        EXPECT(gbc.pc(), 0x1af9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01D5
        gbc.setState(0x75c3, 0xe5, 0xbd70, 0x3cc8, 0xb0f4, 0xb456, 0x1, 0x0);
        gbc.writeMem(0x75c3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe5);
        EXPECT(gbc.pc(), 0x75c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01D6
        gbc.setState(0xa8e8, 0xf56c, 0x1c40, 0xf3f2, 0x2a62, 0x41a9, 0x0, 0x0);
        gbc.writeMem(0xa8e8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf56c);
        EXPECT(gbc.pc(), 0xa8ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e8), 0xcb);
        EXPECT(gbc.readMem(0xa8e9), 0x28);
        // CB 28 01D7
        gbc.setState(0x4d19, 0xdf0f, 0x94f0, 0x7e17, 0x721f, 0x3cab, 0x1, 0x1);
        gbc.writeMem(0x4d19, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xdf0f);
        EXPECT(gbc.pc(), 0x4d1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01D9
        gbc.setState(0xc0ac, 0x3380, 0xfbc0, 0x3281, 0x5fa3, 0x106a, 0x1, 0x0);
        gbc.writeMem(0xc0ac, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3380);
        EXPECT(gbc.pc(), 0xc0ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ac), 0xcb);
        EXPECT(gbc.readMem(0xc0ad), 0x28);
        // CB 28 01DA
        gbc.setState(0x1fc5, 0x5c4a, 0xecf0, 0x20fb, 0xb615, 0x80b5, 0x0, 0x1);
        gbc.writeMem(0x1fc5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5c4a);
        EXPECT(gbc.pc(), 0x1fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01DB
        gbc.setState(0xca57, 0x114e, 0xa10, 0xaec0, 0xe5f7, 0xb496, 0x0, 0x1);
        gbc.writeMem(0xca57, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x114e);
        EXPECT(gbc.pc(), 0xca59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca57), 0xcb);
        EXPECT(gbc.readMem(0xca58), 0x28);
        // CB 28 01DC
        gbc.setState(0xc297, 0xd9e5, 0xabd0, 0x527c, 0x926b, 0x1b04, 0x1, 0x1);
        gbc.writeMem(0xc297, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd9e5);
        EXPECT(gbc.pc(), 0xc299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc297), 0xcb);
        EXPECT(gbc.readMem(0xc298), 0x28);
        // CB 28 01DD
        gbc.setState(0x5bf4, 0x3700, 0x280, 0xed95, 0x2f40, 0xa1a2, 0x1, 0x0);
        gbc.writeMem(0x5bf4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x3700);
        EXPECT(gbc.pc(), 0x5bf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01DE
        gbc.setState(0x215, 0x1c2f, 0x1f0, 0xda5d, 0x5e57, 0x131b, 0x0, 0x0);
        gbc.writeMem(0x215, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1c2f);
        EXPECT(gbc.pc(), 0x217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01DF
        gbc.setState(0xea78, 0x3c9b, 0xed90, 0xf16a, 0xfe9b, 0x3986, 0x1, 0x1);
        gbc.writeMem(0xea78, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3c9b);
        EXPECT(gbc.pc(), 0xea7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea78), 0xcb);
        EXPECT(gbc.readMem(0xea79), 0x28);
        // CB 28 01E0
        gbc.setState(0x979c, 0xeefd, 0x3720, 0x1d96, 0xbb23, 0xb780, 0x0, 0x0);
        gbc.writeMem(0x979c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xeefd);
        EXPECT(gbc.pc(), 0x979e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x979c), 0xcb);
        EXPECT(gbc.readMem(0x979d), 0x28);
        // CB 28 01E1
        gbc.setState(0x2b85, 0x8c5b, 0xa4e0, 0xb84f, 0xe24f, 0xb552, 0x0, 0x1);
        gbc.writeMem(0x2b85, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8c5b);
        EXPECT(gbc.pc(), 0x2b87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01E2
        gbc.setState(0x57b8, 0x625f, 0x4070, 0x31f4, 0xdb1e, 0xf57, 0x0, 0x0);
        gbc.writeMem(0x57b8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x625f);
        EXPECT(gbc.pc(), 0x57ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01E3
        gbc.setState(0x12fb, 0x85ea, 0xa480, 0xa2c2, 0xfa2b, 0x621f, 0x0, 0x0);
        gbc.writeMem(0x12fb, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x85ea);
        EXPECT(gbc.pc(), 0x12fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01E4
        gbc.setState(0x791f, 0xb9da, 0x10d0, 0x59e2, 0x12ca, 0x67f0, 0x1, 0x1);
        gbc.writeMem(0x791f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb9da);
        EXPECT(gbc.pc(), 0x7921);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01E5
        gbc.setState(0x923e, 0xe537, 0x9930, 0x65e8, 0xf51f, 0x2410, 0x1, 0x0);
        gbc.writeMem(0x923e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe537);
        EXPECT(gbc.pc(), 0x9240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x923e), 0xcb);
        EXPECT(gbc.readMem(0x923f), 0x28);
        // CB 28 01E6
        gbc.setState(0x59ab, 0xab05, 0xea00, 0xfced, 0x4b21, 0x73c6, 0x1, 0x0);
        gbc.writeMem(0x59ab, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xab05);
        EXPECT(gbc.pc(), 0x59ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01E7
        gbc.setState(0x3236, 0xcf6e, 0xc030, 0xd9d2, 0x4c2c, 0x4453, 0x1, 0x1);
        gbc.writeMem(0x3236, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xcf6e);
        EXPECT(gbc.pc(), 0x3238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01E8
        gbc.setState(0x6af3, 0x82c6, 0xabb0, 0xcd78, 0xd70b, 0x86d1, 0x0, 0x1);
        gbc.writeMem(0x6af3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x82c6);
        EXPECT(gbc.pc(), 0x6af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01EA
        gbc.setState(0x6a0e, 0xbfa5, 0x2210, 0xa190, 0x374a, 0xa0e6, 0x0, 0x1);
        gbc.writeMem(0x6a0e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xbfa5);
        EXPECT(gbc.pc(), 0x6a10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01EB
        gbc.setState(0xeb87, 0xfeec, 0xb50, 0x7454, 0x33b0, 0xcbee, 0x1, 0x0);
        gbc.writeMem(0xeb87, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xfeec);
        EXPECT(gbc.pc(), 0xeb89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb87), 0xcb);
        EXPECT(gbc.readMem(0xeb88), 0x28);
        // CB 28 01EC
        gbc.setState(0x46db, 0xca93, 0xea20, 0x6153, 0x43ec, 0xc6fd, 0x0, 0x0);
        gbc.writeMem(0x46db, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xca93);
        EXPECT(gbc.pc(), 0x46dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01ED
        gbc.setState(0x28b9, 0xd264, 0x1f40, 0xa773, 0x513d, 0xffaa, 0x0, 0x0);
        gbc.writeMem(0x28b9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd264);
        EXPECT(gbc.pc(), 0x28bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01EF
        gbc.setState(0xccf7, 0xbe61, 0xc4d0, 0x7ee3, 0x4672, 0xbfd7, 0x1, 0x0);
        gbc.writeMem(0xccf7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xbe61);
        EXPECT(gbc.pc(), 0xccf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf7), 0xcb);
        EXPECT(gbc.readMem(0xccf8), 0x28);
        // CB 28 01F0
        gbc.setState(0x6fcb, 0x45fc, 0xbf60, 0x444f, 0x467e, 0x65e0, 0x1, 0x0);
        gbc.writeMem(0x6fcb, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x45fc);
        EXPECT(gbc.pc(), 0x6fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01F1
        gbc.setState(0xc82c, 0x2dde, 0xda70, 0xabf0, 0xbe8a, 0x23ff, 0x0, 0x0);
        gbc.writeMem(0xc82c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2dde);
        EXPECT(gbc.pc(), 0xc82e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc82c), 0xcb);
        EXPECT(gbc.readMem(0xc82d), 0x28);
        // CB 28 01F2
        gbc.setState(0x3ac8, 0x84eb, 0x2350, 0x62b0, 0x2095, 0xfcc0, 0x1, 0x1);
        gbc.writeMem(0x3ac8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x84eb);
        EXPECT(gbc.pc(), 0x3aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01F3
        gbc.setState(0x6494, 0x4bc8, 0xf830, 0xcef1, 0x3021, 0x5494, 0x1, 0x1);
        gbc.writeMem(0x6494, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4bc8);
        EXPECT(gbc.pc(), 0x6496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01F4
        gbc.setState(0x13e7, 0xef36, 0x1a20, 0x4f24, 0x9007, 0x3d0, 0x0, 0x1);
        gbc.writeMem(0x13e7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xef36);
        EXPECT(gbc.pc(), 0x13e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01F5
        gbc.setState(0x72a8, 0x3837, 0xd870, 0x8da6, 0xd777, 0xdcd8, 0x0, 0x1);
        gbc.writeMem(0x72a8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3837);
        EXPECT(gbc.pc(), 0x72aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01F6
        gbc.setState(0x36ac, 0x2891, 0xc620, 0xb65, 0x212b, 0x1995, 0x1, 0x0);
        gbc.writeMem(0x36ac, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2891);
        EXPECT(gbc.pc(), 0x36ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01F7
        gbc.setState(0x15cf, 0xa2cf, 0x76e0, 0xa18d, 0x35d6, 0x97c7, 0x1, 0x1);
        gbc.writeMem(0x15cf, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa2cf);
        EXPECT(gbc.pc(), 0x15d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01F8
        gbc.setState(0x591, 0xd88f, 0x20d0, 0xa723, 0xf8f, 0x2693, 0x1, 0x0);
        gbc.writeMem(0x591, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd88f);
        EXPECT(gbc.pc(), 0x593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01F9
        gbc.setState(0x628a, 0x60c6, 0x5ae0, 0xbf3b, 0xefe7, 0x7019, 0x0, 0x1);
        gbc.writeMem(0x628a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x60c6);
        EXPECT(gbc.pc(), 0x628c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01FA
        gbc.setState(0x747d, 0xee4b, 0x2360, 0xda89, 0xaa7e, 0x5e86, 0x1, 0x0);
        gbc.writeMem(0x747d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xee4b);
        EXPECT(gbc.pc(), 0x747f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 01FB
        gbc.setState(0x4af3, 0x25f9, 0x97c0, 0x5385, 0xfb57, 0xbb9f, 0x0, 0x1);
        gbc.writeMem(0x4af3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x25f9);
        EXPECT(gbc.pc(), 0x4af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01FC
        gbc.setState(0x4fb3, 0x4331, 0xfa30, 0x818e, 0xf293, 0x7c15, 0x1, 0x0);
        gbc.writeMem(0x4fb3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4331);
        EXPECT(gbc.pc(), 0x4fb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01FD
        gbc.setState(0x9f3e, 0x52d1, 0xf560, 0x77b, 0xb55c, 0x57c, 0x1, 0x1);
        gbc.writeMem(0x9f3e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x52d1);
        EXPECT(gbc.pc(), 0x9f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f3e), 0xcb);
        EXPECT(gbc.readMem(0x9f3f), 0x28);
        // CB 28 01FE
        gbc.setState(0x707f, 0x91ae, 0x6890, 0xddcf, 0x96c4, 0x8f03, 0x0, 0x1);
        gbc.writeMem(0x707f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x91ae);
        EXPECT(gbc.pc(), 0x7081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 01FF
        gbc.setState(0x9436, 0x7b63, 0x3c50, 0x720a, 0xe89a, 0x4b3e, 0x0, 0x1);
        gbc.writeMem(0x9436, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7b63);
        EXPECT(gbc.pc(), 0x9438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9436), 0xcb);
        EXPECT(gbc.readMem(0x9437), 0x28);
        // CB 28 0200
        gbc.setState(0x2efb, 0x78f8, 0x9df0, 0x5a72, 0x175f, 0xfeb2, 0x1, 0x0);
        gbc.writeMem(0x2efb, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x78f8);
        EXPECT(gbc.pc(), 0x2efd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0201
        gbc.setState(0x70ec, 0xc21d, 0x3040, 0x2204, 0x5782, 0x2598, 0x1, 0x1);
        gbc.writeMem(0x70ec, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc21d);
        EXPECT(gbc.pc(), 0x70ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0202
        gbc.setState(0x83db, 0x9bb3, 0x4e60, 0xb67e, 0x9088, 0xd8ce, 0x0, 0x1);
        gbc.writeMem(0x83db, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9bb3);
        EXPECT(gbc.pc(), 0x83dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83db), 0xcb);
        EXPECT(gbc.readMem(0x83dc), 0x28);
        // CB 28 0203
        gbc.setState(0x5676, 0x50b2, 0xf530, 0xaafc, 0xdfba, 0x1e09, 0x1, 0x0);
        gbc.writeMem(0x5676, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x50b2);
        EXPECT(gbc.pc(), 0x5678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0204
        gbc.setState(0xca60, 0xa9bc, 0x5a0, 0x884f, 0xaec8, 0x13dd, 0x0, 0x1);
        gbc.writeMem(0xca60, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa9bc);
        EXPECT(gbc.pc(), 0xca62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca60), 0xcb);
        EXPECT(gbc.readMem(0xca61), 0x28);
        // CB 28 0205
        gbc.setState(0x97dc, 0x6058, 0x9250, 0xf743, 0x44ac, 0xbdee, 0x1, 0x0);
        gbc.writeMem(0x97dc, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6058);
        EXPECT(gbc.pc(), 0x97de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97dc), 0xcb);
        EXPECT(gbc.readMem(0x97dd), 0x28);
        // CB 28 0207
        gbc.setState(0x2778, 0x95be, 0x8ec0, 0x5d3c, 0x7c06, 0xf003, 0x1, 0x0);
        gbc.writeMem(0x2778, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x95be);
        EXPECT(gbc.pc(), 0x277a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0208
        gbc.setState(0xca3e, 0x55f4, 0x6bf0, 0x39b5, 0x3311, 0x6398, 0x0, 0x1);
        gbc.writeMem(0xca3e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x55f4);
        EXPECT(gbc.pc(), 0xca40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca3e), 0xcb);
        EXPECT(gbc.readMem(0xca3f), 0x28);
        // CB 28 0209
        gbc.setState(0x192a, 0xe1d6, 0xdf10, 0xb23b, 0xcba7, 0x5f3f, 0x1, 0x0);
        gbc.writeMem(0x192a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe1d6);
        EXPECT(gbc.pc(), 0x192c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 020A
        gbc.setState(0x7d95, 0x5446, 0x1c20, 0x5588, 0xdf79, 0x7015, 0x1, 0x0);
        gbc.writeMem(0x7d95, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5446);
        EXPECT(gbc.pc(), 0x7d97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 020B
        gbc.setState(0x6336, 0xcf32, 0xe0d0, 0x9ed7, 0xd6ba, 0x61fc, 0x0, 0x1);
        gbc.writeMem(0x6336, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xcf32);
        EXPECT(gbc.pc(), 0x6338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 020C
        gbc.setState(0x7315, 0x6f31, 0x6f50, 0x99a7, 0x269e, 0xc87c, 0x1, 0x1);
        gbc.writeMem(0x7315, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6f31);
        EXPECT(gbc.pc(), 0x7317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 020D
        gbc.setState(0xd313, 0xe4d9, 0xfef0, 0xe02e, 0xc6c6, 0xaba2, 0x0, 0x0);
        gbc.writeMem(0xd313, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe4d9);
        EXPECT(gbc.pc(), 0xd315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd313), 0xcb);
        EXPECT(gbc.readMem(0xd314), 0x28);
        // CB 28 020E
        gbc.setState(0xa38e, 0x49d3, 0x2fc0, 0xfda2, 0xdf14, 0x39aa, 0x0, 0x0);
        gbc.writeMem(0xa38e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x49d3);
        EXPECT(gbc.pc(), 0xa390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa38e), 0xcb);
        EXPECT(gbc.readMem(0xa38f), 0x28);
        // CB 28 020F
        gbc.setState(0x6185, 0xc2de, 0x54d0, 0xc2e, 0xa9c2, 0x1977, 0x0, 0x1);
        gbc.writeMem(0x6185, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc2de);
        EXPECT(gbc.pc(), 0x6187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0210
        gbc.setState(0xb217, 0xdaa5, 0x4d00, 0xa516, 0xc7f6, 0x9cbc, 0x1, 0x0);
        gbc.writeMem(0xb217, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdaa5);
        EXPECT(gbc.pc(), 0xb219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb217), 0xcb);
        EXPECT(gbc.readMem(0xb218), 0x28);
        // CB 28 0211
        gbc.setState(0x7272, 0x338, 0xc880, 0x92a6, 0x4d3b, 0x5942, 0x1, 0x1);
        gbc.writeMem(0x7272, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x338);
        EXPECT(gbc.pc(), 0x7274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0212
        gbc.setState(0x4c25, 0x16e5, 0xa0a0, 0xdb83, 0xcd0a, 0x225b, 0x1, 0x0);
        gbc.writeMem(0x4c25, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x16e5);
        EXPECT(gbc.pc(), 0x4c27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0214
        gbc.setState(0x1b93, 0xfb70, 0xa70, 0xc01d, 0x3452, 0x4de1, 0x1, 0x1);
        gbc.writeMem(0x1b93, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfb70);
        EXPECT(gbc.pc(), 0x1b95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0215
        gbc.setState(0x94a9, 0x2354, 0x3a50, 0x9c08, 0xc2c2, 0x263, 0x1, 0x1);
        gbc.writeMem(0x94a9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2354);
        EXPECT(gbc.pc(), 0x94ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a9), 0xcb);
        EXPECT(gbc.readMem(0x94aa), 0x28);
        // CB 28 0216
        gbc.setState(0x6dbe, 0x7a1e, 0x87e0, 0x57e5, 0x3962, 0x804d, 0x1, 0x0);
        gbc.writeMem(0x6dbe, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7a1e);
        EXPECT(gbc.pc(), 0x6dc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0217
        gbc.setState(0x3403, 0x8a9c, 0xbfa0, 0xc1f1, 0x58e0, 0x721b, 0x1, 0x1);
        gbc.writeMem(0x3403, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8a9c);
        EXPECT(gbc.pc(), 0x3405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0218
        gbc.setState(0x9c79, 0x9388, 0xa980, 0xec41, 0x9cbb, 0xebbe, 0x1, 0x0);
        gbc.writeMem(0x9c79, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9388);
        EXPECT(gbc.pc(), 0x9c7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c79), 0xcb);
        EXPECT(gbc.readMem(0x9c7a), 0x28);
        // CB 28 0219
        gbc.setState(0x85aa, 0x3db8, 0x4fa0, 0x595b, 0x961f, 0x448d, 0x0, 0x0);
        gbc.writeMem(0x85aa, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3db8);
        EXPECT(gbc.pc(), 0x85ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85aa), 0xcb);
        EXPECT(gbc.readMem(0x85ab), 0x28);
        // CB 28 021A
        gbc.setState(0x8fa1, 0xd48f, 0x9e40, 0x152e, 0xadcd, 0xdca5, 0x1, 0x0);
        gbc.writeMem(0x8fa1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd48f);
        EXPECT(gbc.pc(), 0x8fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fa1), 0xcb);
        EXPECT(gbc.readMem(0x8fa2), 0x28);
        // CB 28 021C
        gbc.setState(0x3933, 0x1e0c, 0xcb70, 0xa42e, 0xc31b, 0x611e, 0x1, 0x1);
        gbc.writeMem(0x3933, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1e0c);
        EXPECT(gbc.pc(), 0x3935);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 021D
        gbc.setState(0x1740, 0xea87, 0x10, 0x92b7, 0x237d, 0xc8f9, 0x0, 0x1);
        gbc.writeMem(0x1740, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xea87);
        EXPECT(gbc.pc(), 0x1742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 021E
        gbc.setState(0xab61, 0xaa3a, 0x1b50, 0xe45e, 0xc495, 0xb5ec, 0x1, 0x1);
        gbc.writeMem(0xab61, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xaa3a);
        EXPECT(gbc.pc(), 0xab63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab61), 0xcb);
        EXPECT(gbc.readMem(0xab62), 0x28);
        // CB 28 021F
        gbc.setState(0x70a8, 0x6c58, 0x4760, 0xeaf9, 0x37a4, 0x6e19, 0x1, 0x0);
        gbc.writeMem(0x70a8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6c58);
        EXPECT(gbc.pc(), 0x70aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0220
        gbc.setState(0xebfd, 0x739e, 0x7250, 0xb7dc, 0x4072, 0x75bd, 0x0, 0x0);
        gbc.writeMem(0xebfd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x739e);
        EXPECT(gbc.pc(), 0xebff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebfd), 0xcb);
        EXPECT(gbc.readMem(0xebfe), 0x28);
        // CB 28 0222
        gbc.setState(0x51f8, 0x1c1c, 0x5cc0, 0x5c06, 0x93eb, 0x8ca8, 0x0, 0x0);
        gbc.writeMem(0x51f8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1c1c);
        EXPECT(gbc.pc(), 0x51fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0223
        gbc.setState(0xd200, 0xdaa6, 0x4730, 0xa5f4, 0x1c50, 0xd71a, 0x1, 0x0);
        gbc.writeMem(0xd200, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdaa6);
        EXPECT(gbc.pc(), 0xd202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd200), 0xcb);
        EXPECT(gbc.readMem(0xd201), 0x28);
        // CB 28 0224
        gbc.setState(0x4f2, 0xe9d7, 0x26f0, 0x568c, 0x55c6, 0xf0c9, 0x0, 0x1);
        gbc.writeMem(0x4f2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe9d7);
        EXPECT(gbc.pc(), 0x4f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0225
        gbc.setState(0xd60d, 0xf01e, 0xc820, 0x56ef, 0xb9ba, 0x60f3, 0x0, 0x1);
        gbc.writeMem(0xd60d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf01e);
        EXPECT(gbc.pc(), 0xd60f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd60d), 0xcb);
        EXPECT(gbc.readMem(0xd60e), 0x28);
        // CB 28 0226
        gbc.setState(0xdef1, 0x8b91, 0xbc40, 0x8eed, 0xbde0, 0x8087, 0x0, 0x1);
        gbc.writeMem(0xdef1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8b91);
        EXPECT(gbc.pc(), 0xdef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdef1), 0xcb);
        EXPECT(gbc.readMem(0xdef2), 0x28);
        // CB 28 0227
        gbc.setState(0xec99, 0x1243, 0xc5d0, 0x7de8, 0x17de, 0xadfb, 0x0, 0x0);
        gbc.writeMem(0xec99, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1243);
        EXPECT(gbc.pc(), 0xec9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec99), 0xcb);
        EXPECT(gbc.readMem(0xec9a), 0x28);
        // CB 28 0228
        gbc.setState(0xebfb, 0x3aea, 0xf910, 0xe157, 0x1b70, 0x7c8, 0x1, 0x1);
        gbc.writeMem(0xebfb, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3aea);
        EXPECT(gbc.pc(), 0xebfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebfb), 0xcb);
        EXPECT(gbc.readMem(0xebfc), 0x28);
        // CB 28 0229
        gbc.setState(0xe866, 0x90b3, 0x5a40, 0xe3d8, 0x49a8, 0x6eed, 0x0, 0x1);
        gbc.writeMem(0xe866, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x90b3);
        EXPECT(gbc.pc(), 0xe868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe866), 0xcb);
        EXPECT(gbc.readMem(0xe867), 0x28);
        // CB 28 022A
        gbc.setState(0xb88b, 0xdbda, 0x43f0, 0x1269, 0x298a, 0x9251, 0x1, 0x0);
        gbc.writeMem(0xb88b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xdbda);
        EXPECT(gbc.pc(), 0xb88d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb88b), 0xcb);
        EXPECT(gbc.readMem(0xb88c), 0x28);
        // CB 28 022B
        gbc.setState(0xecb3, 0xf62c, 0x68d0, 0xad11, 0xc36f, 0xa613, 0x0, 0x1);
        gbc.writeMem(0xecb3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf62c);
        EXPECT(gbc.pc(), 0xecb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecb3), 0xcb);
        EXPECT(gbc.readMem(0xecb4), 0x28);
        // CB 28 022C
        gbc.setState(0x956e, 0x24ad, 0x6340, 0xec9b, 0x2512, 0xb514, 0x1, 0x1);
        gbc.writeMem(0x956e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x24ad);
        EXPECT(gbc.pc(), 0x9570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x956e), 0xcb);
        EXPECT(gbc.readMem(0x956f), 0x28);
        // CB 28 022D
        gbc.setState(0x7411, 0x99d3, 0xba40, 0x60c2, 0x8a1e, 0xffc, 0x0, 0x1);
        gbc.writeMem(0x7411, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x99d3);
        EXPECT(gbc.pc(), 0x7413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 022E
        gbc.setState(0x661d, 0xabe3, 0x4260, 0x2b36, 0x629c, 0xce20, 0x0, 0x0);
        gbc.writeMem(0x661d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xabe3);
        EXPECT(gbc.pc(), 0x661f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 022F
        gbc.setState(0xef25, 0xcb38, 0xafb0, 0x9157, 0xdd61, 0x5d23, 0x0, 0x1);
        gbc.writeMem(0xef25, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xcb38);
        EXPECT(gbc.pc(), 0xef27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef25), 0xcb);
        EXPECT(gbc.readMem(0xef26), 0x28);
        // CB 28 0230
        gbc.setState(0xcffa, 0xefaf, 0xa5c0, 0xbb22, 0x43ad, 0xc30f, 0x1, 0x0);
        gbc.writeMem(0xcffa, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xefaf);
        EXPECT(gbc.pc(), 0xcffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcffa), 0xcb);
        EXPECT(gbc.readMem(0xcffb), 0x28);
        // CB 28 0231
        gbc.setState(0xe8cd, 0x2dc3, 0x8f50, 0x3c37, 0x716f, 0x7595, 0x1, 0x1);
        gbc.writeMem(0xe8cd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2dc3);
        EXPECT(gbc.pc(), 0xe8cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8cd), 0xcb);
        EXPECT(gbc.readMem(0xe8ce), 0x28);
        // CB 28 0233
        gbc.setState(0x76f8, 0xed59, 0xfee0, 0x9895, 0x85d8, 0xa7, 0x0, 0x1);
        gbc.writeMem(0x76f8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xed59);
        EXPECT(gbc.pc(), 0x76fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0236
        gbc.setState(0x7909, 0xbe77, 0x4840, 0x89cb, 0x6a44, 0x9031, 0x0, 0x1);
        gbc.writeMem(0x7909, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbe77);
        EXPECT(gbc.pc(), 0x790b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0237
        gbc.setState(0x34dc, 0xf352, 0x7440, 0x3520, 0x6093, 0x808e, 0x1, 0x0);
        gbc.writeMem(0x34dc, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf352);
        EXPECT(gbc.pc(), 0x34de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0238
        gbc.setState(0xf82, 0x4c7b, 0xad60, 0x347e, 0x95a4, 0x6078, 0x1, 0x1);
        gbc.writeMem(0xf82, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4c7b);
        EXPECT(gbc.pc(), 0xf84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 023B
        gbc.setState(0xe17d, 0x2346, 0x4090, 0xb4a, 0xf34a, 0xf576, 0x1, 0x1);
        gbc.writeMem(0xe17d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2346);
        EXPECT(gbc.pc(), 0xe17f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe17d), 0xcb);
        EXPECT(gbc.readMem(0xe17e), 0x28);
        // CB 28 023C
        gbc.setState(0x1564, 0xb5c, 0xa3a0, 0xb08e, 0xc5f1, 0x46f7, 0x0, 0x0);
        gbc.writeMem(0x1564, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb5c);
        EXPECT(gbc.pc(), 0x1566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 023D
        gbc.setState(0xd0a1, 0x9f54, 0x1870, 0x2491, 0x9e82, 0x700c, 0x1, 0x1);
        gbc.writeMem(0xd0a1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9f54);
        EXPECT(gbc.pc(), 0xd0a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0a1), 0xcb);
        EXPECT(gbc.readMem(0xd0a2), 0x28);
        // CB 28 023E
        gbc.setState(0x963b, 0xce68, 0x16d0, 0x8936, 0xede4, 0x6c32, 0x1, 0x1);
        gbc.writeMem(0x963b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xce68);
        EXPECT(gbc.pc(), 0x963d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x963b), 0xcb);
        EXPECT(gbc.readMem(0x963c), 0x28);
        // CB 28 023F
        gbc.setState(0xeba6, 0x6152, 0x5110, 0xcf97, 0xc238, 0xd98e, 0x1, 0x1);
        gbc.writeMem(0xeba6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6152);
        EXPECT(gbc.pc(), 0xeba8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba6), 0xcb);
        EXPECT(gbc.readMem(0xeba7), 0x28);
        // CB 28 0241
        gbc.setState(0x8d5b, 0xc4f5, 0x5140, 0xbcb2, 0x4e02, 0x9617, 0x1, 0x0);
        gbc.writeMem(0x8d5b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc4f5);
        EXPECT(gbc.pc(), 0x8d5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d5b), 0xcb);
        EXPECT(gbc.readMem(0x8d5c), 0x28);
        // CB 28 0242
        gbc.setState(0x9302, 0xfea, 0x55a0, 0x4de1, 0xeee5, 0x7175, 0x0, 0x0);
        gbc.writeMem(0x9302, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfea);
        EXPECT(gbc.pc(), 0x9304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9302), 0xcb);
        EXPECT(gbc.readMem(0x9303), 0x28);
        // CB 28 0243
        gbc.setState(0x988e, 0x5f3c, 0x5360, 0x7883, 0x3d7, 0x4aab, 0x0, 0x0);
        gbc.writeMem(0x988e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5f3c);
        EXPECT(gbc.pc(), 0x9890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x988e), 0xcb);
        EXPECT(gbc.readMem(0x988f), 0x28);
        // CB 28 0244
        gbc.setState(0xa4e0, 0xf5e3, 0x5b40, 0xe3d3, 0x7871, 0xf183, 0x0, 0x1);
        gbc.writeMem(0xa4e0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf5e3);
        EXPECT(gbc.pc(), 0xa4e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4e0), 0xcb);
        EXPECT(gbc.readMem(0xa4e1), 0x28);
        // CB 28 0245
        gbc.setState(0xa958, 0x3379, 0x63d0, 0x607c, 0xe735, 0xcd2f, 0x1, 0x1);
        gbc.writeMem(0xa958, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3379);
        EXPECT(gbc.pc(), 0xa95a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa958), 0xcb);
        EXPECT(gbc.readMem(0xa959), 0x28);
        // CB 28 0246
        gbc.setState(0x88f, 0x754c, 0xc3b0, 0xdd0b, 0x13f7, 0x4626, 0x0, 0x1);
        gbc.writeMem(0x88f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x754c);
        EXPECT(gbc.pc(), 0x891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0247
        gbc.setState(0x4072, 0xb2c3, 0x1820, 0x792, 0xcd3f, 0x5313, 0x0, 0x1);
        gbc.writeMem(0x4072, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb2c3);
        EXPECT(gbc.pc(), 0x4074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0248
        gbc.setState(0x8901, 0x5332, 0x70e0, 0xcd1b, 0x664e, 0x7cee, 0x1, 0x1);
        gbc.writeMem(0x8901, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5332);
        EXPECT(gbc.pc(), 0x8903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8901), 0xcb);
        EXPECT(gbc.readMem(0x8902), 0x28);
        // CB 28 0249
        gbc.setState(0x8f55, 0x1a4b, 0xbb0, 0x8ddb, 0xab8c, 0xc255, 0x0, 0x0);
        gbc.writeMem(0x8f55, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1a4b);
        EXPECT(gbc.pc(), 0x8f57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f55), 0xcb);
        EXPECT(gbc.readMem(0x8f56), 0x28);
        // CB 28 024A
        gbc.setState(0x8f85, 0xc3b, 0xdbd0, 0x8b19, 0x9584, 0x1029, 0x0, 0x1);
        gbc.writeMem(0x8f85, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc3b);
        EXPECT(gbc.pc(), 0x8f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f85), 0xcb);
        EXPECT(gbc.readMem(0x8f86), 0x28);
        // CB 28 024B
        gbc.setState(0xd4e0, 0xb230, 0xb750, 0xb3a6, 0x371, 0xe1ba, 0x1, 0x1);
        gbc.writeMem(0xd4e0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb230);
        EXPECT(gbc.pc(), 0xd4e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4e0), 0xcb);
        EXPECT(gbc.readMem(0xd4e1), 0x28);
        // CB 28 024C
        gbc.setState(0x7460, 0x7961, 0xb980, 0x15c4, 0x258a, 0x71b9, 0x0, 0x1);
        gbc.writeMem(0x7460, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7961);
        EXPECT(gbc.pc(), 0x7462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 024D
        gbc.setState(0x68ca, 0xa03, 0x21e0, 0x381f, 0x72b6, 0x6285, 0x0, 0x1);
        gbc.writeMem(0x68ca, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa03);
        EXPECT(gbc.pc(), 0x68cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 024E
        gbc.setState(0xd4ed, 0xdcf7, 0x9ad0, 0x889a, 0x6258, 0x617b, 0x0, 0x0);
        gbc.writeMem(0xd4ed, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xdcf7);
        EXPECT(gbc.pc(), 0xd4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ed), 0xcb);
        EXPECT(gbc.readMem(0xd4ee), 0x28);
        // CB 28 024F
        gbc.setState(0x1515, 0xfca1, 0x5530, 0xea0d, 0xd150, 0x6c45, 0x0, 0x1);
        gbc.writeMem(0x1515, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfca1);
        EXPECT(gbc.pc(), 0x1517);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0250
        gbc.setState(0xea35, 0xf666, 0xa310, 0xb6b5, 0x576c, 0xc977, 0x1, 0x0);
        gbc.writeMem(0xea35, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf666);
        EXPECT(gbc.pc(), 0xea37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea35), 0xcb);
        EXPECT(gbc.readMem(0xea36), 0x28);
        // CB 28 0251
        gbc.setState(0x9142, 0xde82, 0x45c0, 0x2fde, 0xe33e, 0x138f, 0x1, 0x1);
        gbc.writeMem(0x9142, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xde82);
        EXPECT(gbc.pc(), 0x9144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9142), 0xcb);
        EXPECT(gbc.readMem(0x9143), 0x28);
        // CB 28 0252
        gbc.setState(0x5dec, 0x224c, 0x6d70, 0x8e2b, 0x103f, 0x4168, 0x0, 0x1);
        gbc.writeMem(0x5dec, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x224c);
        EXPECT(gbc.pc(), 0x5dee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0253
        gbc.setState(0x4b38, 0x198, 0x7980, 0xc276, 0x5dc8, 0xef8c, 0x0, 0x1);
        gbc.writeMem(0x4b38, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x198);
        EXPECT(gbc.pc(), 0x4b3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0254
        gbc.setState(0x1fbe, 0x5f2, 0x6850, 0x5e34, 0xfb3a, 0xc34e, 0x0, 0x0);
        gbc.writeMem(0x1fbe, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5f2);
        EXPECT(gbc.pc(), 0x1fc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0255
        gbc.setState(0xa289, 0xf111, 0xef40, 0x46ac, 0x7538, 0x1de7, 0x0, 0x1);
        gbc.writeMem(0xa289, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf111);
        EXPECT(gbc.pc(), 0xa28b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa289), 0xcb);
        EXPECT(gbc.readMem(0xa28a), 0x28);
        // CB 28 0256
        gbc.setState(0x34f4, 0xd674, 0xf320, 0x6db, 0x2475, 0xf2f2, 0x0, 0x0);
        gbc.writeMem(0x34f4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd674);
        EXPECT(gbc.pc(), 0x34f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0257
        gbc.setState(0x83c, 0xd3a3, 0xd2d0, 0x5ee2, 0x72dc, 0xf05b, 0x1, 0x1);
        gbc.writeMem(0x83c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd3a3);
        EXPECT(gbc.pc(), 0x83e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0258
        gbc.setState(0x1438, 0x57bb, 0x8860, 0x7470, 0xe2d2, 0x9dd2, 0x0, 0x1);
        gbc.writeMem(0x1438, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x57bb);
        EXPECT(gbc.pc(), 0x143a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0259
        gbc.setState(0x5f2f, 0x7cd3, 0x8660, 0xe08d, 0xed45, 0x86a7, 0x0, 0x1);
        gbc.writeMem(0x5f2f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7cd3);
        EXPECT(gbc.pc(), 0x5f31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 025A
        gbc.setState(0x2009, 0x74e6, 0xc8b0, 0x5a66, 0x7556, 0xf1a5, 0x0, 0x0);
        gbc.writeMem(0x2009, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x74e6);
        EXPECT(gbc.pc(), 0x200b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 025B
        gbc.setState(0xdcef, 0x6f3b, 0xbaa0, 0xbfda, 0x7489, 0x2828, 0x1, 0x0);
        gbc.writeMem(0xdcef, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6f3b);
        EXPECT(gbc.pc(), 0xdcf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcef), 0xcb);
        EXPECT(gbc.readMem(0xdcf0), 0x28);
        // CB 28 025C
        gbc.setState(0x9473, 0x4412, 0xbfa0, 0xf084, 0xe6e8, 0xedff, 0x0, 0x1);
        gbc.writeMem(0x9473, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4412);
        EXPECT(gbc.pc(), 0x9475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9473), 0xcb);
        EXPECT(gbc.readMem(0x9474), 0x28);
        // CB 28 025D
        gbc.setState(0x4ab4, 0x60b3, 0x4400, 0x9134, 0xaaab, 0x9b6, 0x0, 0x1);
        gbc.writeMem(0x4ab4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x60b3);
        EXPECT(gbc.pc(), 0x4ab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 025E
        gbc.setState(0xa6ce, 0x2a6c, 0xa60, 0xbc09, 0x7a84, 0x9340, 0x0, 0x0);
        gbc.writeMem(0xa6ce, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2a6c);
        EXPECT(gbc.pc(), 0xa6d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ce), 0xcb);
        EXPECT(gbc.readMem(0xa6cf), 0x28);
        // CB 28 0260
        gbc.setState(0xb91a, 0x3fef, 0x6530, 0xfb81, 0x156a, 0x78a, 0x1, 0x1);
        gbc.writeMem(0xb91a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3fef);
        EXPECT(gbc.pc(), 0xb91c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb91a), 0xcb);
        EXPECT(gbc.readMem(0xb91b), 0x28);
        // CB 28 0261
        gbc.setState(0x18b5, 0x3eac, 0x2f0, 0xb5b8, 0x18dc, 0xa757, 0x0, 0x1);
        gbc.writeMem(0x18b5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3eac);
        EXPECT(gbc.pc(), 0x18b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0262
        gbc.setState(0xdc7f, 0x6516, 0xc6e0, 0xbc95, 0xd4b0, 0x2dfc, 0x1, 0x1);
        gbc.writeMem(0xdc7f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6516);
        EXPECT(gbc.pc(), 0xdc81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc7f), 0xcb);
        EXPECT(gbc.readMem(0xdc80), 0x28);
        // CB 28 0263
        gbc.setState(0xa86a, 0x8903, 0xb310, 0xd418, 0xfcdf, 0x189d, 0x0, 0x1);
        gbc.writeMem(0xa86a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8903);
        EXPECT(gbc.pc(), 0xa86c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86a), 0xcb);
        EXPECT(gbc.readMem(0xa86b), 0x28);
        // CB 28 0264
        gbc.setState(0x2fc3, 0xe58a, 0xb950, 0xd655, 0x5667, 0xeeb1, 0x0, 0x0);
        gbc.writeMem(0x2fc3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe58a);
        EXPECT(gbc.pc(), 0x2fc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0265
        gbc.setState(0x88d, 0xb785, 0xa420, 0xf1ca, 0xc9fe, 0xa1f, 0x1, 0x0);
        gbc.writeMem(0x88d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb785);
        EXPECT(gbc.pc(), 0x88f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0266
        gbc.setState(0x6f7f, 0x167d, 0x46d0, 0xae99, 0x29f2, 0x72c8, 0x1, 0x0);
        gbc.writeMem(0x6f7f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x167d);
        EXPECT(gbc.pc(), 0x6f81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0267
        gbc.setState(0xdde8, 0x9b7e, 0x6de0, 0x8441, 0xa9aa, 0xc518, 0x1, 0x1);
        gbc.writeMem(0xdde8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9b7e);
        EXPECT(gbc.pc(), 0xddea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdde8), 0xcb);
        EXPECT(gbc.readMem(0xdde9), 0x28);
        // CB 28 0268
        gbc.setState(0x9221, 0xb98c, 0xdad0, 0x49c1, 0xa807, 0x895a, 0x1, 0x1);
        gbc.writeMem(0x9221, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb98c);
        EXPECT(gbc.pc(), 0x9223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9221), 0xcb);
        EXPECT(gbc.readMem(0x9222), 0x28);
        // CB 28 0269
        gbc.setState(0x8e62, 0xce6b, 0x3b90, 0x48d5, 0x4b96, 0x7d61, 0x1, 0x0);
        gbc.writeMem(0x8e62, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xce6b);
        EXPECT(gbc.pc(), 0x8e64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e62), 0xcb);
        EXPECT(gbc.readMem(0x8e63), 0x28);
        // CB 28 026A
        gbc.setState(0x97e, 0xd1f2, 0xa3d0, 0x77b8, 0x3ddb, 0x9737, 0x1, 0x1);
        gbc.writeMem(0x97e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd1f2);
        EXPECT(gbc.pc(), 0x980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 026B
        gbc.setState(0xc805, 0x60d6, 0x4080, 0x58cd, 0x7f90, 0xb3c3, 0x0, 0x1);
        gbc.writeMem(0xc805, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x60d6);
        EXPECT(gbc.pc(), 0xc807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc805), 0xcb);
        EXPECT(gbc.readMem(0xc806), 0x28);
        // CB 28 026C
        gbc.setState(0x71bd, 0xbfec, 0x12e0, 0x4986, 0x5fd8, 0xfeea, 0x1, 0x0);
        gbc.writeMem(0x71bd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbfec);
        EXPECT(gbc.pc(), 0x71bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 026D
        gbc.setState(0x2a9, 0xf2a8, 0x5f80, 0xfa17, 0x30a0, 0x4c7f, 0x1, 0x0);
        gbc.writeMem(0x2a9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf2a8);
        EXPECT(gbc.pc(), 0x2ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 026E
        gbc.setState(0xc7c5, 0x80d9, 0x8150, 0x7daf, 0x5087, 0xc628, 0x0, 0x0);
        gbc.writeMem(0xc7c5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x80d9);
        EXPECT(gbc.pc(), 0xc7c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7c5), 0xcb);
        EXPECT(gbc.readMem(0xc7c6), 0x28);
        // CB 28 026F
        gbc.setState(0xc0aa, 0xe2a7, 0xef40, 0x42fb, 0x8686, 0x1b4a, 0x0, 0x0);
        gbc.writeMem(0xc0aa, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe2a7);
        EXPECT(gbc.pc(), 0xc0ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0aa), 0xcb);
        EXPECT(gbc.readMem(0xc0ab), 0x28);
        // CB 28 0270
        gbc.setState(0x4a4b, 0x3b1c, 0x2230, 0x206a, 0x6456, 0x4c9e, 0x0, 0x0);
        gbc.writeMem(0x4a4b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3b1c);
        EXPECT(gbc.pc(), 0x4a4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0271
        gbc.setState(0x9238, 0xa0dd, 0x5160, 0xc19b, 0x449b, 0xd69e, 0x1, 0x0);
        gbc.writeMem(0x9238, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa0dd);
        EXPECT(gbc.pc(), 0x923a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9238), 0xcb);
        EXPECT(gbc.readMem(0x9239), 0x28);
        // CB 28 0272
        gbc.setState(0x5c14, 0xbd2c, 0xd110, 0x1d5, 0xbdf0, 0x8cd1, 0x0, 0x1);
        gbc.writeMem(0x5c14, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbd2c);
        EXPECT(gbc.pc(), 0x5c16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0273
        gbc.setState(0x4937, 0xfcd5, 0xbce0, 0xb290, 0x1f72, 0x312a, 0x0, 0x0);
        gbc.writeMem(0x4937, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfcd5);
        EXPECT(gbc.pc(), 0x4939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0274
        gbc.setState(0x7cbf, 0x626c, 0xc90, 0xedd4, 0xbde9, 0x43ea, 0x0, 0x0);
        gbc.writeMem(0x7cbf, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x626c);
        EXPECT(gbc.pc(), 0x7cc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0275
        gbc.setState(0xdbc6, 0xee4f, 0xca90, 0x3488, 0x76ff, 0x5bca, 0x0, 0x1);
        gbc.writeMem(0xdbc6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xee4f);
        EXPECT(gbc.pc(), 0xdbc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbc6), 0xcb);
        EXPECT(gbc.readMem(0xdbc7), 0x28);
        // CB 28 0276
        gbc.setState(0xeef5, 0x45a, 0xbdd0, 0xcbe4, 0xa651, 0xd083, 0x0, 0x0);
        gbc.writeMem(0xeef5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x45a);
        EXPECT(gbc.pc(), 0xeef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeef5), 0xcb);
        EXPECT(gbc.readMem(0xeef6), 0x28);
        // CB 28 0277
        gbc.setState(0x68e5, 0xaf73, 0xf7e0, 0x4f62, 0xd22e, 0xe924, 0x1, 0x1);
        gbc.writeMem(0x68e5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xaf73);
        EXPECT(gbc.pc(), 0x68e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0278
        gbc.setState(0x2c07, 0x96a9, 0xa040, 0x2448, 0x8d81, 0x6a, 0x1, 0x1);
        gbc.writeMem(0x2c07, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x96a9);
        EXPECT(gbc.pc(), 0x2c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0279
        gbc.setState(0xd8fa, 0xa208, 0xc050, 0xb9cf, 0x271f, 0x17d, 0x1, 0x1);
        gbc.writeMem(0xd8fa, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa208);
        EXPECT(gbc.pc(), 0xd8fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8fa), 0xcb);
        EXPECT(gbc.readMem(0xd8fb), 0x28);
        // CB 28 027A
        gbc.setState(0x9431, 0x64d4, 0xb6a0, 0x8b1a, 0x9056, 0xe0a4, 0x1, 0x0);
        gbc.writeMem(0x9431, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x64d4);
        EXPECT(gbc.pc(), 0x9433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9431), 0xcb);
        EXPECT(gbc.readMem(0x9432), 0x28);
        // CB 28 027B
        gbc.setState(0x27d5, 0xcafd, 0xb9c0, 0x47d7, 0x8fb8, 0xb4e2, 0x1, 0x0);
        gbc.writeMem(0x27d5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xcafd);
        EXPECT(gbc.pc(), 0x27d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 027C
        gbc.setState(0xdb03, 0xa461, 0x7b40, 0xdc86, 0x785e, 0x4354, 0x1, 0x1);
        gbc.writeMem(0xdb03, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa461);
        EXPECT(gbc.pc(), 0xdb05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb03), 0xcb);
        EXPECT(gbc.readMem(0xdb04), 0x28);
        // CB 28 027D
        gbc.setState(0xda1, 0x7d25, 0xcc0, 0x88c3, 0xc6d2, 0x74e6, 0x1, 0x1);
        gbc.writeMem(0xda1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7d25);
        EXPECT(gbc.pc(), 0xda3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 027E
        gbc.setState(0x7daf, 0x8f3c, 0x670, 0xdbe9, 0x9553, 0xa586, 0x0, 0x1);
        gbc.writeMem(0x7daf, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8f3c);
        EXPECT(gbc.pc(), 0x7db1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 027F
        gbc.setState(0xa5dd, 0xbcec, 0xbd80, 0x53f5, 0x9bfe, 0xc5ba, 0x0, 0x0);
        gbc.writeMem(0xa5dd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xbcec);
        EXPECT(gbc.pc(), 0xa5df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5dd), 0xcb);
        EXPECT(gbc.readMem(0xa5de), 0x28);
        // CB 28 0280
        gbc.setState(0xa183, 0xb6dc, 0x7500, 0x4de6, 0x7002, 0x5dc2, 0x1, 0x0);
        gbc.writeMem(0xa183, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb6dc);
        EXPECT(gbc.pc(), 0xa185);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa183), 0xcb);
        EXPECT(gbc.readMem(0xa184), 0x28);
        // CB 28 0281
        gbc.setState(0x8695, 0xd6b4, 0xae50, 0x6f8f, 0xdf20, 0xd2d0, 0x1, 0x1);
        gbc.writeMem(0x8695, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd6b4);
        EXPECT(gbc.pc(), 0x8697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8695), 0xcb);
        EXPECT(gbc.readMem(0x8696), 0x28);
        // CB 28 0282
        gbc.setState(0x48f5, 0x672b, 0xa1c0, 0x1d03, 0xc931, 0xfc6c, 0x0, 0x1);
        gbc.writeMem(0x48f5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x672b);
        EXPECT(gbc.pc(), 0x48f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0283
        gbc.setState(0x71c8, 0x290e, 0x1390, 0xa4e5, 0x244a, 0x8220, 0x1, 0x1);
        gbc.writeMem(0x71c8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x290e);
        EXPECT(gbc.pc(), 0x71ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0284
        gbc.setState(0xbd7e, 0xaaf4, 0x46e0, 0x6d5a, 0xe428, 0xe6ed, 0x1, 0x1);
        gbc.writeMem(0xbd7e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xaaf4);
        EXPECT(gbc.pc(), 0xbd80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd7e), 0xcb);
        EXPECT(gbc.readMem(0xbd7f), 0x28);
        // CB 28 0285
        gbc.setState(0x2260, 0x2427, 0x5f50, 0x21e1, 0x9d33, 0x2096, 0x0, 0x1);
        gbc.writeMem(0x2260, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2427);
        EXPECT(gbc.pc(), 0x2262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0286
        gbc.setState(0xbc7e, 0x1aa, 0x3fc0, 0xc897, 0x7218, 0x4dbf, 0x1, 0x1);
        gbc.writeMem(0xbc7e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1aa);
        EXPECT(gbc.pc(), 0xbc80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7e), 0xcb);
        EXPECT(gbc.readMem(0xbc7f), 0x28);
        // CB 28 0287
        gbc.setState(0x9dc0, 0x53b9, 0xb3f0, 0xcd5a, 0x33a9, 0x8061, 0x0, 0x1);
        gbc.writeMem(0x9dc0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x53b9);
        EXPECT(gbc.pc(), 0x9dc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc0), 0xcb);
        EXPECT(gbc.readMem(0x9dc1), 0x28);
        // CB 28 0288
        gbc.setState(0xb2f0, 0xbe1e, 0x2d0, 0x712a, 0x94b9, 0xdb27, 0x0, 0x1);
        gbc.writeMem(0xb2f0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbe1e);
        EXPECT(gbc.pc(), 0xb2f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f0), 0xcb);
        EXPECT(gbc.readMem(0xb2f1), 0x28);
        // CB 28 0289
        gbc.setState(0x8eff, 0x82f8, 0x4930, 0xdb8, 0x6e80, 0x681, 0x1, 0x1);
        gbc.writeMem(0x8eff, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x82f8);
        EXPECT(gbc.pc(), 0x8f01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eff), 0xcb);
        EXPECT(gbc.readMem(0x8f00), 0x28);
        // CB 28 028A
        gbc.setState(0xa92e, 0x6dc1, 0xa8b0, 0x10f0, 0x4c93, 0x6964, 0x1, 0x0);
        gbc.writeMem(0xa92e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6dc1);
        EXPECT(gbc.pc(), 0xa930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa92e), 0xcb);
        EXPECT(gbc.readMem(0xa92f), 0x28);
        // CB 28 028B
        gbc.setState(0xda87, 0x1c40, 0xd8f0, 0x8820, 0x876f, 0x297b, 0x0, 0x0);
        gbc.writeMem(0xda87, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1c40);
        EXPECT(gbc.pc(), 0xda89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda87), 0xcb);
        EXPECT(gbc.readMem(0xda88), 0x28);
        // CB 28 028C
        gbc.setState(0x6cd9, 0x8418, 0xbcd0, 0x90b0, 0xb7da, 0xba9c, 0x0, 0x0);
        gbc.writeMem(0x6cd9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8418);
        EXPECT(gbc.pc(), 0x6cdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 028D
        gbc.setState(0x8667, 0x4dbf, 0x28f0, 0xdcab, 0xeaf6, 0x5cdd, 0x1, 0x1);
        gbc.writeMem(0x8667, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4dbf);
        EXPECT(gbc.pc(), 0x8669);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8667), 0xcb);
        EXPECT(gbc.readMem(0x8668), 0x28);
        // CB 28 028E
        gbc.setState(0x487f, 0x3e96, 0x78b0, 0x94c4, 0x5833, 0x1a44, 0x0, 0x1);
        gbc.writeMem(0x487f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3e96);
        EXPECT(gbc.pc(), 0x4881);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 028F
        gbc.setState(0xc362, 0x4b98, 0x460, 0x7838, 0x679c, 0x5e0a, 0x0, 0x0);
        gbc.writeMem(0xc362, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4b98);
        EXPECT(gbc.pc(), 0xc364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc362), 0xcb);
        EXPECT(gbc.readMem(0xc363), 0x28);
        // CB 28 0292
        gbc.setState(0x921, 0x38fd, 0x85f0, 0x7b6, 0x8f5b, 0xd8a6, 0x0, 0x1);
        gbc.writeMem(0x921, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x38fd);
        EXPECT(gbc.pc(), 0x923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0293
        gbc.setState(0xc46f, 0x8546, 0xdf80, 0x6ecd, 0x2974, 0xce83, 0x1, 0x1);
        gbc.writeMem(0xc46f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8546);
        EXPECT(gbc.pc(), 0xc471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc46f), 0xcb);
        EXPECT(gbc.readMem(0xc470), 0x28);
        // CB 28 0294
        gbc.setState(0x1d40, 0x944, 0xc180, 0x3e6d, 0x2f41, 0x4134, 0x0, 0x0);
        gbc.writeMem(0x1d40, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x944);
        EXPECT(gbc.pc(), 0x1d42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0295
        gbc.setState(0x5b, 0x509c, 0x7b90, 0xca9e, 0xaccd, 0xf403, 0x0, 0x0);
        gbc.writeMem(0x5b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x509c);
        EXPECT(gbc.pc(), 0x5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0296
        gbc.setState(0x3969, 0x9d39, 0x1440, 0xa73b, 0xf447, 0x547e, 0x0, 0x1);
        gbc.writeMem(0x3969, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9d39);
        EXPECT(gbc.pc(), 0x396b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0297
        gbc.setState(0x7354, 0x6e8f, 0x9e70, 0x3ce7, 0xf22, 0x829e, 0x1, 0x0);
        gbc.writeMem(0x7354, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6e8f);
        EXPECT(gbc.pc(), 0x7356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0298
        gbc.setState(0x923, 0x2ae6, 0x8400, 0xb80e, 0x76a6, 0x8647, 0x1, 0x0);
        gbc.writeMem(0x923, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2ae6);
        EXPECT(gbc.pc(), 0x925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0299
        gbc.setState(0x543, 0x8829, 0x4710, 0x84dd, 0xcd0a, 0xc65f, 0x0, 0x0);
        gbc.writeMem(0x543, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8829);
        EXPECT(gbc.pc(), 0x545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 029A
        gbc.setState(0xb5ea, 0xea92, 0x9850, 0x27fe, 0x3a72, 0x3654, 0x1, 0x0);
        gbc.writeMem(0xb5ea, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xea92);
        EXPECT(gbc.pc(), 0xb5ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ea), 0xcb);
        EXPECT(gbc.readMem(0xb5eb), 0x28);
        // CB 28 029B
        gbc.setState(0xb32e, 0x1099, 0xcf10, 0xa680, 0x337d, 0x1cf0, 0x1, 0x1);
        gbc.writeMem(0xb32e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1099);
        EXPECT(gbc.pc(), 0xb330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb32e), 0xcb);
        EXPECT(gbc.readMem(0xb32f), 0x28);
        // CB 28 029D
        gbc.setState(0x3e50, 0xd59c, 0x91a0, 0xda7, 0x6ecf, 0xd2fd, 0x0, 0x0);
        gbc.writeMem(0x3e50, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd59c);
        EXPECT(gbc.pc(), 0x3e52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 029E
        gbc.setState(0x1d61, 0x2926, 0xcea0, 0xb942, 0x8787, 0x978, 0x1, 0x0);
        gbc.writeMem(0x1d61, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2926);
        EXPECT(gbc.pc(), 0x1d63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 029F
        gbc.setState(0xcd20, 0xae26, 0x2e10, 0x73b3, 0x2b85, 0x542e, 0x1, 0x0);
        gbc.writeMem(0xcd20, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xae26);
        EXPECT(gbc.pc(), 0xcd22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd20), 0xcb);
        EXPECT(gbc.readMem(0xcd21), 0x28);
        // CB 28 02A1
        gbc.setState(0xe606, 0x65a4, 0xba00, 0x3b23, 0x6144, 0x9776, 0x1, 0x1);
        gbc.writeMem(0xe606, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x65a4);
        EXPECT(gbc.pc(), 0xe608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe606), 0xcb);
        EXPECT(gbc.readMem(0xe607), 0x28);
        // CB 28 02A2
        gbc.setState(0x2ad2, 0x2e32, 0x2d00, 0xa580, 0x945e, 0x83ed, 0x0, 0x0);
        gbc.writeMem(0x2ad2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2e32);
        EXPECT(gbc.pc(), 0x2ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02A3
        gbc.setState(0x2c88, 0xaf90, 0x7e60, 0x6f33, 0x38c7, 0x26e6, 0x0, 0x1);
        gbc.writeMem(0x2c88, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xaf90);
        EXPECT(gbc.pc(), 0x2c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02A4
        gbc.setState(0x5621, 0x6751, 0xe8d0, 0x7ee2, 0xefd6, 0x8dd, 0x0, 0x0);
        gbc.writeMem(0x5621, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6751);
        EXPECT(gbc.pc(), 0x5623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02A5
        gbc.setState(0x7e7d, 0x1b17, 0x8900, 0x280b, 0x47e6, 0x5327, 0x0, 0x1);
        gbc.writeMem(0x7e7d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1b17);
        EXPECT(gbc.pc(), 0x7e7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02A6
        gbc.setState(0x82b8, 0xc7b, 0xbc70, 0x3ade, 0xe59d, 0x989d, 0x1, 0x0);
        gbc.writeMem(0x82b8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc7b);
        EXPECT(gbc.pc(), 0x82ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b8), 0xcb);
        EXPECT(gbc.readMem(0x82b9), 0x28);
        // CB 28 02A7
        gbc.setState(0x523e, 0xbfe5, 0xe8d0, 0x2cf4, 0xb795, 0xd3cc, 0x0, 0x1);
        gbc.writeMem(0x523e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xbfe5);
        EXPECT(gbc.pc(), 0x5240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02A8
        gbc.setState(0x8cd9, 0xc858, 0xa960, 0x98c6, 0xcf89, 0xf934, 0x0, 0x0);
        gbc.writeMem(0x8cd9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc858);
        EXPECT(gbc.pc(), 0x8cdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cd9), 0xcb);
        EXPECT(gbc.readMem(0x8cda), 0x28);
        // CB 28 02A9
        gbc.setState(0x1d8, 0xf9c4, 0x8360, 0xf31, 0xacfb, 0x10c, 0x0, 0x1);
        gbc.writeMem(0x1d8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf9c4);
        EXPECT(gbc.pc(), 0x1da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02AA
        gbc.setState(0x3046, 0x4620, 0x3960, 0x1ea8, 0x26f6, 0xc54b, 0x0, 0x0);
        gbc.writeMem(0x3046, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4620);
        EXPECT(gbc.pc(), 0x3048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02AB
        gbc.setState(0xc6ca, 0xbb81, 0xdc30, 0x3d12, 0xd803, 0xf328, 0x0, 0x1);
        gbc.writeMem(0xc6ca, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbb81);
        EXPECT(gbc.pc(), 0xc6cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ca), 0xcb);
        EXPECT(gbc.readMem(0xc6cb), 0x28);
        // CB 28 02AC
        gbc.setState(0xd57e, 0xbf2a, 0x160, 0xeb7, 0x9161, 0x4d63, 0x0, 0x0);
        gbc.writeMem(0xd57e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbf2a);
        EXPECT(gbc.pc(), 0xd580);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd57e), 0xcb);
        EXPECT(gbc.readMem(0xd57f), 0x28);
        // CB 28 02AD
        gbc.setState(0x8f5, 0x51a7, 0xbc90, 0xb5a7, 0xef8f, 0xa1e5, 0x0, 0x1);
        gbc.writeMem(0x8f5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x51a7);
        EXPECT(gbc.pc(), 0x8f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02AE
        gbc.setState(0x60fe, 0x49be, 0x4d80, 0x9c99, 0xd740, 0x2a09, 0x1, 0x1);
        gbc.writeMem(0x60fe, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x49be);
        EXPECT(gbc.pc(), 0x6100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02AF
        gbc.setState(0xc867, 0x4414, 0x2460, 0xd3ab, 0xed92, 0xe0c4, 0x0, 0x0);
        gbc.writeMem(0xc867, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4414);
        EXPECT(gbc.pc(), 0xc869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc867), 0xcb);
        EXPECT(gbc.readMem(0xc868), 0x28);
        // CB 28 02B0
        gbc.setState(0xd780, 0x3dd5, 0x27f0, 0xddc9, 0x1610, 0x5f6d, 0x0, 0x0);
        gbc.writeMem(0xd780, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3dd5);
        EXPECT(gbc.pc(), 0xd782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd780), 0xcb);
        EXPECT(gbc.readMem(0xd781), 0x28);
        // CB 28 02B1
        gbc.setState(0xcedd, 0x7037, 0xed0, 0x4ed4, 0x8ab3, 0xa723, 0x1, 0x0);
        gbc.writeMem(0xcedd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7037);
        EXPECT(gbc.pc(), 0xcedf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcedd), 0xcb);
        EXPECT(gbc.readMem(0xcede), 0x28);
        // CB 28 02B2
        gbc.setState(0x643d, 0xb948, 0x4790, 0xca3a, 0x684d, 0x65e2, 0x1, 0x0);
        gbc.writeMem(0x643d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb948);
        EXPECT(gbc.pc(), 0x643f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02B4
        gbc.setState(0xc7de, 0x3932, 0x1560, 0xd51b, 0x3e19, 0x4bc6, 0x1, 0x0);
        gbc.writeMem(0xc7de, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3932);
        EXPECT(gbc.pc(), 0xc7e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7de), 0xcb);
        EXPECT(gbc.readMem(0xc7df), 0x28);
        // CB 28 02B5
        gbc.setState(0x22c8, 0xdf62, 0xf4e0, 0xe801, 0xf8a4, 0xbe0a, 0x0, 0x0);
        gbc.writeMem(0x22c8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xdf62);
        EXPECT(gbc.pc(), 0x22ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02B6
        gbc.setState(0x4bd8, 0x2a42, 0x5560, 0x538c, 0x5350, 0xe28b, 0x1, 0x0);
        gbc.writeMem(0x4bd8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2a42);
        EXPECT(gbc.pc(), 0x4bda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02B8
        gbc.setState(0xc2fe, 0xdf96, 0xc0c0, 0x6f4e, 0xcb10, 0xd3d4, 0x0, 0x1);
        gbc.writeMem(0xc2fe, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdf96);
        EXPECT(gbc.pc(), 0xc300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2fe), 0xcb);
        EXPECT(gbc.readMem(0xc2ff), 0x28);
        // CB 28 02B9
        gbc.setState(0xca92, 0xc64f, 0x3350, 0x8c48, 0x9502, 0x39a6, 0x0, 0x0);
        gbc.writeMem(0xca92, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc64f);
        EXPECT(gbc.pc(), 0xca94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca92), 0xcb);
        EXPECT(gbc.readMem(0xca93), 0x28);
        // CB 28 02BA
        gbc.setState(0x4482, 0x7cf5, 0xecb0, 0x9c2c, 0x23ba, 0x7714, 0x1, 0x0);
        gbc.writeMem(0x4482, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7cf5);
        EXPECT(gbc.pc(), 0x4484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02BB
        gbc.setState(0x43c4, 0x21df, 0xd9c0, 0xefef, 0xe7c7, 0xc1d, 0x0, 0x0);
        gbc.writeMem(0x43c4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x21df);
        EXPECT(gbc.pc(), 0x43c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02BC
        gbc.setState(0xdac2, 0x900f, 0xf130, 0x838, 0xf09e, 0x8e28, 0x0, 0x0);
        gbc.writeMem(0xdac2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x900f);
        EXPECT(gbc.pc(), 0xdac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdac2), 0xcb);
        EXPECT(gbc.readMem(0xdac3), 0x28);
        // CB 28 02BD
        gbc.setState(0x9520, 0x3a85, 0x84a0, 0x5e16, 0xb12, 0x4b6a, 0x0, 0x0);
        gbc.writeMem(0x9520, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3a85);
        EXPECT(gbc.pc(), 0x9522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9520), 0xcb);
        EXPECT(gbc.readMem(0x9521), 0x28);
        // CB 28 02BE
        gbc.setState(0xafb3, 0xb1fd, 0x95d0, 0x9f09, 0x4256, 0xfd5f, 0x0, 0x1);
        gbc.writeMem(0xafb3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb1fd);
        EXPECT(gbc.pc(), 0xafb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafb3), 0xcb);
        EXPECT(gbc.readMem(0xafb4), 0x28);
        // CB 28 02BF
        gbc.setState(0xd59e, 0x1adb, 0x5ef0, 0x7186, 0x4296, 0x7846, 0x1, 0x0);
        gbc.writeMem(0xd59e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1adb);
        EXPECT(gbc.pc(), 0xd5a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd59e), 0xcb);
        EXPECT(gbc.readMem(0xd59f), 0x28);
        // CB 28 02C0
        gbc.setState(0x44e1, 0x4e8a, 0x28c0, 0x3ee8, 0x2a9, 0x57cf, 0x0, 0x1);
        gbc.writeMem(0x44e1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4e8a);
        EXPECT(gbc.pc(), 0x44e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02C1
        gbc.setState(0xd5f8, 0x23e3, 0xf270, 0x2263, 0xb0f8, 0xbd38, 0x1, 0x1);
        gbc.writeMem(0xd5f8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x23e3);
        EXPECT(gbc.pc(), 0xd5fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5f8), 0xcb);
        EXPECT(gbc.readMem(0xd5f9), 0x28);
        // CB 28 02C2
        gbc.setState(0x3ebf, 0x98b7, 0x35d0, 0xc04c, 0x7434, 0x427e, 0x0, 0x1);
        gbc.writeMem(0x3ebf, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x98b7);
        EXPECT(gbc.pc(), 0x3ec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02C3
        gbc.setState(0x3454, 0xa168, 0x7940, 0x1674, 0x8c3e, 0xd0eb, 0x1, 0x1);
        gbc.writeMem(0x3454, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa168);
        EXPECT(gbc.pc(), 0x3456);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02C4
        gbc.setState(0x45e5, 0x1ff9, 0x4270, 0xc5e3, 0x889f, 0xc9d0, 0x0, 0x0);
        gbc.writeMem(0x45e5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1ff9);
        EXPECT(gbc.pc(), 0x45e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02C5
        gbc.setState(0x7cb4, 0x9fd3, 0xdf80, 0x2d74, 0xd150, 0xaf30, 0x0, 0x0);
        gbc.writeMem(0x7cb4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9fd3);
        EXPECT(gbc.pc(), 0x7cb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02C6
        gbc.setState(0xa620, 0x4e43, 0x14a0, 0xf863, 0x90c7, 0x8838, 0x1, 0x1);
        gbc.writeMem(0xa620, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4e43);
        EXPECT(gbc.pc(), 0xa622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa620), 0xcb);
        EXPECT(gbc.readMem(0xa621), 0x28);
        // CB 28 02C7
        gbc.setState(0x983, 0x30c8, 0xb760, 0x3934, 0xc922, 0x7ffd, 0x0, 0x1);
        gbc.writeMem(0x983, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x30c8);
        EXPECT(gbc.pc(), 0x985);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02C8
        gbc.setState(0x55a6, 0xbf49, 0xf730, 0x4fd1, 0x395, 0xa965, 0x1, 0x0);
        gbc.writeMem(0x55a6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbf49);
        EXPECT(gbc.pc(), 0x55a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02C9
        gbc.setState(0xd376, 0xd4c, 0xdc0, 0x6741, 0x9a83, 0x2813, 0x0, 0x0);
        gbc.writeMem(0xd376, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd4c);
        EXPECT(gbc.pc(), 0xd378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd376), 0xcb);
        EXPECT(gbc.readMem(0xd377), 0x28);
        // CB 28 02CA
        gbc.setState(0xdfd5, 0xa7f5, 0x61c0, 0xe327, 0xb912, 0xeca6, 0x0, 0x1);
        gbc.writeMem(0xdfd5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa7f5);
        EXPECT(gbc.pc(), 0xdfd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfd5), 0xcb);
        EXPECT(gbc.readMem(0xdfd6), 0x28);
        // CB 28 02CB
        gbc.setState(0x384f, 0xa044, 0x7e70, 0xa3cb, 0x9dc6, 0x4373, 0x1, 0x0);
        gbc.writeMem(0x384f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa044);
        EXPECT(gbc.pc(), 0x3851);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02CC
        gbc.setState(0x6d2d, 0xbecf, 0x8350, 0x9f65, 0xad78, 0x8412, 0x0, 0x1);
        gbc.writeMem(0x6d2d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xbecf);
        EXPECT(gbc.pc(), 0x6d2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02CD
        gbc.setState(0x9da1, 0xed9b, 0xf0c0, 0x9ae6, 0xdd73, 0x963d, 0x0, 0x1);
        gbc.writeMem(0x9da1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xed9b);
        EXPECT(gbc.pc(), 0x9da3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da1), 0xcb);
        EXPECT(gbc.readMem(0x9da2), 0x28);
        // CB 28 02CE
        gbc.setState(0x7f69, 0xc362, 0x58b0, 0xb0fa, 0x85a6, 0x4072, 0x0, 0x0);
        gbc.writeMem(0x7f69, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc362);
        EXPECT(gbc.pc(), 0x7f6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02CF
        gbc.setState(0x6eca, 0xf95c, 0x2470, 0x9991, 0x752b, 0xefc, 0x0, 0x0);
        gbc.writeMem(0x6eca, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf95c);
        EXPECT(gbc.pc(), 0x6ecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02D0
        gbc.setState(0x310f, 0x7b2c, 0x64c0, 0xe239, 0x31f6, 0xdaf6, 0x0, 0x0);
        gbc.writeMem(0x310f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7b2c);
        EXPECT(gbc.pc(), 0x3111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02D1
        gbc.setState(0x293c, 0xbee, 0x63b0, 0x28df, 0xea68, 0x4f0b, 0x1, 0x0);
        gbc.writeMem(0x293c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbee);
        EXPECT(gbc.pc(), 0x293e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02D2
        gbc.setState(0xd64a, 0x483, 0xc8c0, 0x308e, 0xee73, 0x7a81, 0x1, 0x1);
        gbc.writeMem(0xd64a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x483);
        EXPECT(gbc.pc(), 0xd64c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd64a), 0xcb);
        EXPECT(gbc.readMem(0xd64b), 0x28);
        // CB 28 02D3
        gbc.setState(0xaeff, 0x75d9, 0x6150, 0x5428, 0xc331, 0x2996, 0x0, 0x1);
        gbc.writeMem(0xaeff, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x75d9);
        EXPECT(gbc.pc(), 0xaf01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeff), 0xcb);
        EXPECT(gbc.readMem(0xaf00), 0x28);
        // CB 28 02D4
        gbc.setState(0xa592, 0x2316, 0xa350, 0xdf19, 0xe100, 0x2140, 0x1, 0x1);
        gbc.writeMem(0xa592, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2316);
        EXPECT(gbc.pc(), 0xa594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa592), 0xcb);
        EXPECT(gbc.readMem(0xa593), 0x28);
        // CB 28 02D5
        gbc.setState(0x8bcd, 0x8011, 0x3120, 0x249b, 0x9352, 0xc201, 0x1, 0x0);
        gbc.writeMem(0x8bcd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x8011);
        EXPECT(gbc.pc(), 0x8bcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bcd), 0xcb);
        EXPECT(gbc.readMem(0x8bce), 0x28);
        // CB 28 02D6
        gbc.setState(0xc76b, 0x4cf3, 0xeac0, 0x21f1, 0x19a4, 0x7d3e, 0x0, 0x0);
        gbc.writeMem(0xc76b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4cf3);
        EXPECT(gbc.pc(), 0xc76d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc76b), 0xcb);
        EXPECT(gbc.readMem(0xc76c), 0x28);
        // CB 28 02D7
        gbc.setState(0x5c31, 0x6c63, 0x77b0, 0x8168, 0x40a2, 0x3d44, 0x0, 0x0);
        gbc.writeMem(0x5c31, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6c63);
        EXPECT(gbc.pc(), 0x5c33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02D8
        gbc.setState(0xf72, 0x9383, 0xf440, 0x6a81, 0xdd8e, 0x6b2a, 0x1, 0x1);
        gbc.writeMem(0xf72, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9383);
        EXPECT(gbc.pc(), 0xf74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02D9
        gbc.setState(0x477e, 0x4dc6, 0xe900, 0x53f8, 0xde29, 0x6e9e, 0x0, 0x0);
        gbc.writeMem(0x477e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4dc6);
        EXPECT(gbc.pc(), 0x4780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02DA
        gbc.setState(0x484b, 0x4e70, 0x1c00, 0xd049, 0x1f5b, 0x7a1c, 0x1, 0x0);
        gbc.writeMem(0x484b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4e70);
        EXPECT(gbc.pc(), 0x484d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02DB
        gbc.setState(0x4121, 0x3d84, 0xb0f0, 0x3dcd, 0x1a32, 0x64ab, 0x0, 0x0);
        gbc.writeMem(0x4121, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3d84);
        EXPECT(gbc.pc(), 0x4123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02DC
        gbc.setState(0xbdd4, 0x6541, 0xff80, 0xebd5, 0x7968, 0x5aef, 0x0, 0x1);
        gbc.writeMem(0xbdd4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6541);
        EXPECT(gbc.pc(), 0xbdd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdd4), 0xcb);
        EXPECT(gbc.readMem(0xbdd5), 0x28);
        // CB 28 02DD
        gbc.setState(0x74ad, 0x2177, 0xf980, 0x6bbc, 0xe373, 0x88dc, 0x0, 0x1);
        gbc.writeMem(0x74ad, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2177);
        EXPECT(gbc.pc(), 0x74af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02DE
        gbc.setState(0xbedc, 0x893d, 0xdec0, 0xa7aa, 0x1552, 0xd52c, 0x0, 0x0);
        gbc.writeMem(0xbedc, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x893d);
        EXPECT(gbc.pc(), 0xbede);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbedc), 0xcb);
        EXPECT(gbc.readMem(0xbedd), 0x28);
        // CB 28 02DF
        gbc.setState(0x75e9, 0x4727, 0x1a0, 0xe025, 0xcdf4, 0x498b, 0x0, 0x0);
        gbc.writeMem(0x75e9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4727);
        EXPECT(gbc.pc(), 0x75eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02E0
        gbc.setState(0x1a6a, 0xe668, 0x8d0, 0x7235, 0xeb76, 0xaae6, 0x0, 0x0);
        gbc.writeMem(0x1a6a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe668);
        EXPECT(gbc.pc(), 0x1a6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02E1
        gbc.setState(0xcc1b, 0xba9b, 0xbbd0, 0xd550, 0x9cab, 0x8d71, 0x0, 0x1);
        gbc.writeMem(0xcc1b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xba9b);
        EXPECT(gbc.pc(), 0xcc1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc1b), 0xcb);
        EXPECT(gbc.readMem(0xcc1c), 0x28);
        // CB 28 02E2
        gbc.setState(0x9b7e, 0x646a, 0xea60, 0xab94, 0x8b6e, 0xa09e, 0x0, 0x0);
        gbc.writeMem(0x9b7e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x646a);
        EXPECT(gbc.pc(), 0x9b80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b7e), 0xcb);
        EXPECT(gbc.readMem(0x9b7f), 0x28);
        // CB 28 02E4
        gbc.setState(0xa78c, 0x1091, 0x6b00, 0xcefc, 0x43c, 0x123a, 0x1, 0x1);
        gbc.writeMem(0xa78c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1091);
        EXPECT(gbc.pc(), 0xa78e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa78c), 0xcb);
        EXPECT(gbc.readMem(0xa78d), 0x28);
        // CB 28 02E6
        gbc.setState(0x1a79, 0x9518, 0x5840, 0x8d05, 0x355, 0xbf10, 0x0, 0x1);
        gbc.writeMem(0x1a79, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9518);
        EXPECT(gbc.pc(), 0x1a7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02E7
        gbc.setState(0xb39, 0x7e03, 0xfc30, 0x4b60, 0x4e9d, 0xae8, 0x0, 0x1);
        gbc.writeMem(0xb39, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7e03);
        EXPECT(gbc.pc(), 0xb3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02E8
        gbc.setState(0xaf80, 0x4fd8, 0x4b10, 0xeff5, 0x5a9b, 0x3207, 0x1, 0x0);
        gbc.writeMem(0xaf80, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4fd8);
        EXPECT(gbc.pc(), 0xaf82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf80), 0xcb);
        EXPECT(gbc.readMem(0xaf81), 0x28);
        // CB 28 02E9
        gbc.setState(0xb2fd, 0x9dd3, 0xe50, 0xa3c2, 0xe238, 0xbc00, 0x0, 0x0);
        gbc.writeMem(0xb2fd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9dd3);
        EXPECT(gbc.pc(), 0xb2ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2fd), 0xcb);
        EXPECT(gbc.readMem(0xb2fe), 0x28);
        // CB 28 02EA
        gbc.setState(0xe511, 0x47dc, 0xa950, 0x49aa, 0x8105, 0x2541, 0x1, 0x0);
        gbc.writeMem(0xe511, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x47dc);
        EXPECT(gbc.pc(), 0xe513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe511), 0xcb);
        EXPECT(gbc.readMem(0xe512), 0x28);
        // CB 28 02EB
        gbc.setState(0x4676, 0x5e33, 0xf2a0, 0x9ccb, 0x2114, 0xf853, 0x0, 0x1);
        gbc.writeMem(0x4676, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5e33);
        EXPECT(gbc.pc(), 0x4678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02EC
        gbc.setState(0xc59d, 0x21c2, 0x32e0, 0x92ab, 0x5035, 0xd337, 0x1, 0x0);
        gbc.writeMem(0xc59d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x21c2);
        EXPECT(gbc.pc(), 0xc59f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc59d), 0xcb);
        EXPECT(gbc.readMem(0xc59e), 0x28);
        // CB 28 02ED
        gbc.setState(0x6dc4, 0xdcd, 0xd080, 0x5a96, 0x6887, 0x5bfc, 0x1, 0x0);
        gbc.writeMem(0x6dc4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xdcd);
        EXPECT(gbc.pc(), 0x6dc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02EE
        gbc.setState(0x12d5, 0xd3df, 0xeee0, 0xc3ee, 0xbe3d, 0x54fc, 0x1, 0x1);
        gbc.writeMem(0x12d5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd3df);
        EXPECT(gbc.pc(), 0x12d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02EF
        gbc.setState(0x9551, 0xc081, 0x9260, 0xb205, 0x54c5, 0x391b, 0x0, 0x1);
        gbc.writeMem(0x9551, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc081);
        EXPECT(gbc.pc(), 0x9553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9551), 0xcb);
        EXPECT(gbc.readMem(0x9552), 0x28);
        // CB 28 02F0
        gbc.setState(0x2cf2, 0x8130, 0xcd00, 0xea3d, 0x2a92, 0x3cc3, 0x1, 0x0);
        gbc.writeMem(0x2cf2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8130);
        EXPECT(gbc.pc(), 0x2cf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02F1
        gbc.setState(0xea68, 0x9740, 0xc620, 0x51ae, 0xb314, 0xf378, 0x1, 0x1);
        gbc.writeMem(0xea68, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9740);
        EXPECT(gbc.pc(), 0xea6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea68), 0xcb);
        EXPECT(gbc.readMem(0xea69), 0x28);
        // CB 28 02F2
        gbc.setState(0xd38d, 0xc76, 0x2c0, 0xf7e7, 0xf72a, 0xb19c, 0x0, 0x1);
        gbc.writeMem(0xd38d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc76);
        EXPECT(gbc.pc(), 0xd38f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd38d), 0xcb);
        EXPECT(gbc.readMem(0xd38e), 0x28);
        // CB 28 02F3
        gbc.setState(0xb72e, 0xc965, 0xf8a0, 0x1dce, 0x506, 0xec38, 0x1, 0x0);
        gbc.writeMem(0xb72e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc965);
        EXPECT(gbc.pc(), 0xb730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb72e), 0xcb);
        EXPECT(gbc.readMem(0xb72f), 0x28);
        // CB 28 02F5
        gbc.setState(0xc466, 0x77ae, 0x1320, 0x1856, 0xa286, 0xe816, 0x1, 0x1);
        gbc.writeMem(0xc466, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x77ae);
        EXPECT(gbc.pc(), 0xc468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc466), 0xcb);
        EXPECT(gbc.readMem(0xc467), 0x28);
        // CB 28 02F6
        gbc.setState(0x6465, 0x94b3, 0x9cb0, 0xa27f, 0x7e2c, 0xe7e9, 0x1, 0x0);
        gbc.writeMem(0x6465, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x94b3);
        EXPECT(gbc.pc(), 0x6467);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02F7
        gbc.setState(0x53d1, 0x3ae6, 0x64a0, 0xe842, 0x3543, 0xafa9, 0x0, 0x0);
        gbc.writeMem(0x53d1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3ae6);
        EXPECT(gbc.pc(), 0x53d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02F8
        gbc.setState(0xe1a0, 0x7a58, 0x7f80, 0x419e, 0x5c14, 0xfc1d, 0x1, 0x0);
        gbc.writeMem(0xe1a0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7a58);
        EXPECT(gbc.pc(), 0xe1a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1a0), 0xcb);
        EXPECT(gbc.readMem(0xe1a1), 0x28);
        // CB 28 02F9
        gbc.setState(0x161f, 0x90bb, 0x4920, 0xd910, 0xef55, 0x172d, 0x1, 0x0);
        gbc.writeMem(0x161f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x90bb);
        EXPECT(gbc.pc(), 0x1621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02FA
        gbc.setState(0x8e32, 0xd229, 0xf550, 0x4e46, 0x7e5f, 0x4e4, 0x1, 0x0);
        gbc.writeMem(0x8e32, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd229);
        EXPECT(gbc.pc(), 0x8e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e32), 0xcb);
        EXPECT(gbc.readMem(0x8e33), 0x28);
        // CB 28 02FB
        gbc.setState(0x6e7b, 0x58b2, 0x70, 0xc79b, 0x5492, 0x537, 0x0, 0x0);
        gbc.writeMem(0x6e7b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x58b2);
        EXPECT(gbc.pc(), 0x6e7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02FC
        gbc.setState(0xc533, 0xa3e7, 0x9300, 0x4ffa, 0x3ef7, 0x89bb, 0x0, 0x1);
        gbc.writeMem(0xc533, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa3e7);
        EXPECT(gbc.pc(), 0xc535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc533), 0xcb);
        EXPECT(gbc.readMem(0xc534), 0x28);
        // CB 28 02FD
        gbc.setState(0x3a07, 0x48ad, 0x18a0, 0x6f13, 0xb81d, 0xdb6a, 0x0, 0x1);
        gbc.writeMem(0x3a07, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x48ad);
        EXPECT(gbc.pc(), 0x3a09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 02FE
        gbc.setState(0x7ab5, 0x720c, 0x3630, 0xac47, 0x820b, 0xad47, 0x0, 0x0);
        gbc.writeMem(0x7ab5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x720c);
        EXPECT(gbc.pc(), 0x7ab7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 02FF
        gbc.setState(0x1079, 0x25d8, 0x340, 0xa21e, 0xb273, 0x2e5b, 0x1, 0x0);
        gbc.writeMem(0x1079, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x25d8);
        EXPECT(gbc.pc(), 0x107b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0300
        gbc.setState(0x2657, 0x9fc2, 0xa4a0, 0xc3a4, 0x5b88, 0x3a74, 0x1, 0x1);
        gbc.writeMem(0x2657, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9fc2);
        EXPECT(gbc.pc(), 0x2659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0301
        gbc.setState(0xc555, 0xa908, 0x5300, 0xa357, 0xbd23, 0x58de, 0x0, 0x0);
        gbc.writeMem(0xc555, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa908);
        EXPECT(gbc.pc(), 0xc557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc555), 0xcb);
        EXPECT(gbc.readMem(0xc556), 0x28);
        // CB 28 0302
        gbc.setState(0x1b0c, 0x3222, 0x7b00, 0x50ea, 0x2fe4, 0xc2e4, 0x1, 0x1);
        gbc.writeMem(0x1b0c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3222);
        EXPECT(gbc.pc(), 0x1b0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0304
        gbc.setState(0x25a7, 0x25f2, 0x9d90, 0xa83c, 0x22b1, 0xcab, 0x0, 0x0);
        gbc.writeMem(0x25a7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x25f2);
        EXPECT(gbc.pc(), 0x25a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0305
        gbc.setState(0x741b, 0x5613, 0x1180, 0x1c71, 0x1a80, 0x239d, 0x1, 0x1);
        gbc.writeMem(0x741b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5613);
        EXPECT(gbc.pc(), 0x741d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0306
        gbc.setState(0xd184, 0x4adf, 0x7870, 0x6c3b, 0xdd42, 0x5b6c, 0x1, 0x1);
        gbc.writeMem(0xd184, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4adf);
        EXPECT(gbc.pc(), 0xd186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd184), 0xcb);
        EXPECT(gbc.readMem(0xd185), 0x28);
        // CB 28 0307
        gbc.setState(0xa6e2, 0x60ce, 0x8c60, 0x4d4d, 0xc96f, 0x84c7, 0x1, 0x1);
        gbc.writeMem(0xa6e2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x60ce);
        EXPECT(gbc.pc(), 0xa6e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6e2), 0xcb);
        EXPECT(gbc.readMem(0xa6e3), 0x28);
        // CB 28 0308
        gbc.setState(0x5786, 0x1397, 0x5d90, 0xa9cc, 0x99b7, 0xcdab, 0x0, 0x1);
        gbc.writeMem(0x5786, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1397);
        EXPECT(gbc.pc(), 0x5788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0309
        gbc.setState(0x95c9, 0xa357, 0x4af0, 0x72ed, 0x7d5c, 0x906b, 0x0, 0x1);
        gbc.writeMem(0x95c9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa357);
        EXPECT(gbc.pc(), 0x95cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95c9), 0xcb);
        EXPECT(gbc.readMem(0x95ca), 0x28);
        // CB 28 030A
        gbc.setState(0x9023, 0x96d3, 0x43a0, 0xc93e, 0xb79e, 0xa69a, 0x0, 0x1);
        gbc.writeMem(0x9023, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x96d3);
        EXPECT(gbc.pc(), 0x9025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9023), 0xcb);
        EXPECT(gbc.readMem(0x9024), 0x28);
        // CB 28 030B
        gbc.setState(0x4ccb, 0xf207, 0x2170, 0x85c6, 0xe3cd, 0xd2a1, 0x0, 0x0);
        gbc.writeMem(0x4ccb, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf207);
        EXPECT(gbc.pc(), 0x4ccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 030C
        gbc.setState(0xb893, 0xd7ce, 0x7c0, 0x8069, 0xd46, 0x7cb5, 0x1, 0x0);
        gbc.writeMem(0xb893, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd7ce);
        EXPECT(gbc.pc(), 0xb895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb893), 0xcb);
        EXPECT(gbc.readMem(0xb894), 0x28);
        // CB 28 030D
        gbc.setState(0x3eb3, 0x10ad, 0x7fe0, 0xc178, 0x2232, 0xc122, 0x1, 0x1);
        gbc.writeMem(0x3eb3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x10ad);
        EXPECT(gbc.pc(), 0x3eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 030E
        gbc.setState(0x7bb7, 0xd1b8, 0xb640, 0x14ae, 0xae4b, 0x4730, 0x0, 0x0);
        gbc.writeMem(0x7bb7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd1b8);
        EXPECT(gbc.pc(), 0x7bb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 030F
        gbc.setState(0xb0af, 0x604e, 0x55e0, 0xefff, 0x380c, 0x4b2f, 0x1, 0x1);
        gbc.writeMem(0xb0af, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x604e);
        EXPECT(gbc.pc(), 0xb0b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0af), 0xcb);
        EXPECT(gbc.readMem(0xb0b0), 0x28);
        // CB 28 0310
        gbc.setState(0x8d72, 0x29c8, 0x9dd0, 0xb6cd, 0xd4f0, 0xbc25, 0x1, 0x1);
        gbc.writeMem(0x8d72, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x29c8);
        EXPECT(gbc.pc(), 0x8d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d72), 0xcb);
        EXPECT(gbc.readMem(0x8d73), 0x28);
        // CB 28 0311
        gbc.setState(0x4e5c, 0xce39, 0x1810, 0x7783, 0x5d3e, 0xf7a2, 0x1, 0x1);
        gbc.writeMem(0x4e5c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xce39);
        EXPECT(gbc.pc(), 0x4e5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0312
        gbc.setState(0x1239, 0xe207, 0xf4b0, 0xa29, 0xffcc, 0xf8e5, 0x0, 0x1);
        gbc.writeMem(0x1239, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe207);
        EXPECT(gbc.pc(), 0x123b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0315
        gbc.setState(0x689c, 0xddf8, 0x15d0, 0x3853, 0xe537, 0x28f3, 0x0, 0x0);
        gbc.writeMem(0x689c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xddf8);
        EXPECT(gbc.pc(), 0x689e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0316
        gbc.setState(0x4314, 0xe322, 0xa00, 0x9a83, 0x73db, 0x9a08, 0x0, 0x1);
        gbc.writeMem(0x4314, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe322);
        EXPECT(gbc.pc(), 0x4316);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0318
        gbc.setState(0xbca, 0x574a, 0x2f20, 0xbcd2, 0x2d2f, 0xf664, 0x0, 0x1);
        gbc.writeMem(0xbca, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x574a);
        EXPECT(gbc.pc(), 0xbcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0319
        gbc.setState(0xd77b, 0x5bdd, 0xbdb0, 0x827c, 0x5cba, 0xc77a, 0x1, 0x0);
        gbc.writeMem(0xd77b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5bdd);
        EXPECT(gbc.pc(), 0xd77d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77b), 0xcb);
        EXPECT(gbc.readMem(0xd77c), 0x28);
        // CB 28 031A
        gbc.setState(0x9e94, 0x44d6, 0x6d0, 0xa293, 0x11, 0x9882, 0x1, 0x0);
        gbc.writeMem(0x9e94, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x44d6);
        EXPECT(gbc.pc(), 0x9e96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e94), 0xcb);
        EXPECT(gbc.readMem(0x9e95), 0x28);
        // CB 28 031B
        gbc.setState(0x1d8b, 0x5f0d, 0x8df0, 0x36d1, 0x6bcf, 0xa95f, 0x1, 0x0);
        gbc.writeMem(0x1d8b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5f0d);
        EXPECT(gbc.pc(), 0x1d8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 031C
        gbc.setState(0xa0e3, 0x75f4, 0x29e0, 0xc29e, 0x8126, 0xf1b6, 0x0, 0x0);
        gbc.writeMem(0xa0e3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x75f4);
        EXPECT(gbc.pc(), 0xa0e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e3), 0xcb);
        EXPECT(gbc.readMem(0xa0e4), 0x28);
        // CB 28 031D
        gbc.setState(0x6815, 0xe4cc, 0xdd40, 0xb6e4, 0xbb55, 0x6d7b, 0x1, 0x0);
        gbc.writeMem(0x6815, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe4cc);
        EXPECT(gbc.pc(), 0x6817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 031E
        gbc.setState(0x56d5, 0x2f8, 0x1920, 0x76ac, 0xc74, 0x5bb7, 0x1, 0x0);
        gbc.writeMem(0x56d5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2f8);
        EXPECT(gbc.pc(), 0x56d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 031F
        gbc.setState(0x3711, 0x469b, 0xa650, 0xbd13, 0xdf38, 0xc43c, 0x1, 0x1);
        gbc.writeMem(0x3711, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x469b);
        EXPECT(gbc.pc(), 0x3713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0320
        gbc.setState(0x165, 0xe8b, 0x2920, 0xb859, 0xa34e, 0xd357, 0x0, 0x1);
        gbc.writeMem(0x165, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe8b);
        EXPECT(gbc.pc(), 0x167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0321
        gbc.setState(0x90dd, 0x53d, 0x2340, 0xfcc2, 0xf28b, 0x383c, 0x0, 0x1);
        gbc.writeMem(0x90dd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x53d);
        EXPECT(gbc.pc(), 0x90df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90dd), 0xcb);
        EXPECT(gbc.readMem(0x90de), 0x28);
        // CB 28 0322
        gbc.setState(0x1748, 0x7fd8, 0x9f10, 0x31ff, 0x140, 0xf993, 0x1, 0x1);
        gbc.writeMem(0x1748, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7fd8);
        EXPECT(gbc.pc(), 0x174a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0323
        gbc.setState(0x710d, 0x9a79, 0x2bc0, 0x78da, 0x798b, 0xc1fc, 0x1, 0x1);
        gbc.writeMem(0x710d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9a79);
        EXPECT(gbc.pc(), 0x710f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0324
        gbc.setState(0x47c2, 0xaca8, 0x1fe0, 0x1007, 0xa574, 0x9498, 0x1, 0x1);
        gbc.writeMem(0x47c2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xaca8);
        EXPECT(gbc.pc(), 0x47c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0325
        gbc.setState(0x808, 0xf664, 0xeee0, 0xbf0f, 0x1939, 0xd7ea, 0x0, 0x1);
        gbc.writeMem(0x808, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf664);
        EXPECT(gbc.pc(), 0x80a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0326
        gbc.setState(0xe7ff, 0xc313, 0x1ab0, 0xdeae, 0xb5b7, 0xbf09, 0x0, 0x0);
        gbc.writeMem(0xe7ff, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc313);
        EXPECT(gbc.pc(), 0xe801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ff), 0xcb);
        EXPECT(gbc.readMem(0xe800), 0x28);
        // CB 28 0327
        gbc.setState(0x8ac3, 0x6584, 0x91e0, 0xdbb6, 0x397c, 0x6982, 0x1, 0x1);
        gbc.writeMem(0x8ac3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6584);
        EXPECT(gbc.pc(), 0x8ac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac3), 0xcb);
        EXPECT(gbc.readMem(0x8ac4), 0x28);
        // CB 28 0328
        gbc.setState(0xd156, 0x6942, 0x5010, 0xae09, 0x96df, 0x2df7, 0x0, 0x1);
        gbc.writeMem(0xd156, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6942);
        EXPECT(gbc.pc(), 0xd158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd156), 0xcb);
        EXPECT(gbc.readMem(0xd157), 0x28);
        // CB 28 032A
        gbc.setState(0x4c2b, 0xa8d5, 0xc6c0, 0xe2c6, 0xa87e, 0x9c77, 0x0, 0x0);
        gbc.writeMem(0x4c2b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa8d5);
        EXPECT(gbc.pc(), 0x4c2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 032B
        gbc.setState(0x2a04, 0x48a6, 0x8900, 0x698d, 0xd82b, 0x3734, 0x1, 0x0);
        gbc.writeMem(0x2a04, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x48a6);
        EXPECT(gbc.pc(), 0x2a06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 032C
        gbc.setState(0x6e12, 0xb071, 0x9680, 0xca5a, 0x2ef5, 0x7d0a, 0x1, 0x1);
        gbc.writeMem(0x6e12, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb071);
        EXPECT(gbc.pc(), 0x6e14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 032D
        gbc.setState(0xd101, 0x832b, 0x370, 0x43f5, 0xc50f, 0x445c, 0x1, 0x0);
        gbc.writeMem(0xd101, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x832b);
        EXPECT(gbc.pc(), 0xd103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd101), 0xcb);
        EXPECT(gbc.readMem(0xd102), 0x28);
        // CB 28 032E
        gbc.setState(0x81d, 0xec34, 0xbf30, 0x978f, 0x17bb, 0x4a97, 0x0, 0x0);
        gbc.writeMem(0x81d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xec34);
        EXPECT(gbc.pc(), 0x81f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 032F
        gbc.setState(0xefa6, 0xd58c, 0xaf0, 0x3b27, 0xd5ac, 0x4d7e, 0x0, 0x1);
        gbc.writeMem(0xefa6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd58c);
        EXPECT(gbc.pc(), 0xefa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefa6), 0xcb);
        EXPECT(gbc.readMem(0xefa7), 0x28);
        // CB 28 0330
        gbc.setState(0xa57e, 0xad34, 0x5550, 0xcadb, 0x587b, 0x4266, 0x1, 0x0);
        gbc.writeMem(0xa57e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xad34);
        EXPECT(gbc.pc(), 0xa580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa57e), 0xcb);
        EXPECT(gbc.readMem(0xa57f), 0x28);
        // CB 28 0331
        gbc.setState(0xa9bb, 0xf99c, 0xbac0, 0x96bd, 0x137a, 0x3207, 0x0, 0x0);
        gbc.writeMem(0xa9bb, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf99c);
        EXPECT(gbc.pc(), 0xa9bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9bb), 0xcb);
        EXPECT(gbc.readMem(0xa9bc), 0x28);
        // CB 28 0332
        gbc.setState(0xaf5f, 0x5dcd, 0x5130, 0xc1c1, 0xc20e, 0x12b6, 0x1, 0x1);
        gbc.writeMem(0xaf5f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5dcd);
        EXPECT(gbc.pc(), 0xaf61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf5f), 0xcb);
        EXPECT(gbc.readMem(0xaf60), 0x28);
        // CB 28 0333
        gbc.setState(0x5b2c, 0x9023, 0x4d30, 0x35c9, 0x3b62, 0xa742, 0x1, 0x1);
        gbc.writeMem(0x5b2c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9023);
        EXPECT(gbc.pc(), 0x5b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0334
        gbc.setState(0xd00e, 0x75e5, 0xb9b0, 0x7e1e, 0xf890, 0xf84b, 0x1, 0x0);
        gbc.writeMem(0xd00e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x75e5);
        EXPECT(gbc.pc(), 0xd010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd00e), 0xcb);
        EXPECT(gbc.readMem(0xd00f), 0x28);
        // CB 28 0335
        gbc.setState(0x325d, 0x34ac, 0x2830, 0x3a7d, 0xf2ad, 0xec60, 0x1, 0x0);
        gbc.writeMem(0x325d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x34ac);
        EXPECT(gbc.pc(), 0x325f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0336
        gbc.setState(0x24da, 0xa6c8, 0xd8c0, 0xde07, 0x4f83, 0x9887, 0x1, 0x1);
        gbc.writeMem(0x24da, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa6c8);
        EXPECT(gbc.pc(), 0x24dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0337
        gbc.setState(0x7732, 0x2843, 0x5c60, 0x6823, 0x64d8, 0x1c8a, 0x1, 0x1);
        gbc.writeMem(0x7732, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2843);
        EXPECT(gbc.pc(), 0x7734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0338
        gbc.setState(0xb7ad, 0x514c, 0x1dc0, 0x74ed, 0xe484, 0xd108, 0x0, 0x0);
        gbc.writeMem(0xb7ad, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x514c);
        EXPECT(gbc.pc(), 0xb7af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ad), 0xcb);
        EXPECT(gbc.readMem(0xb7ae), 0x28);
        // CB 28 0339
        gbc.setState(0xa627, 0x7c93, 0x4d60, 0x2173, 0x8567, 0xba5c, 0x0, 0x0);
        gbc.writeMem(0xa627, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7c93);
        EXPECT(gbc.pc(), 0xa629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa627), 0xcb);
        EXPECT(gbc.readMem(0xa628), 0x28);
        // CB 28 033A
        gbc.setState(0x2687, 0x8e44, 0x2880, 0x6220, 0x66e8, 0x2cf3, 0x0, 0x1);
        gbc.writeMem(0x2687, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8e44);
        EXPECT(gbc.pc(), 0x2689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 033B
        gbc.setState(0x6475, 0xe443, 0xe570, 0xd12c, 0x4be0, 0xcdf6, 0x1, 0x1);
        gbc.writeMem(0x6475, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe443);
        EXPECT(gbc.pc(), 0x6477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 033C
        gbc.setState(0xdf47, 0xbef5, 0x8c90, 0x6ce0, 0xbc30, 0xa04a, 0x1, 0x0);
        gbc.writeMem(0xdf47, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbef5);
        EXPECT(gbc.pc(), 0xdf49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf47), 0xcb);
        EXPECT(gbc.readMem(0xdf48), 0x28);
        // CB 28 033D
        gbc.setState(0x1bb4, 0xdd4e, 0xe6c0, 0x47ee, 0x3262, 0xaad0, 0x1, 0x1);
        gbc.writeMem(0x1bb4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xdd4e);
        EXPECT(gbc.pc(), 0x1bb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 033E
        gbc.setState(0x9461, 0xee4, 0x2670, 0xbae1, 0xe2ba, 0xca88, 0x1, 0x1);
        gbc.writeMem(0x9461, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xee4);
        EXPECT(gbc.pc(), 0x9463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9461), 0xcb);
        EXPECT(gbc.readMem(0x9462), 0x28);
        // CB 28 033F
        gbc.setState(0xe7c0, 0x86c6, 0xf2d0, 0x41ec, 0xa0ba, 0xb883, 0x1, 0x0);
        gbc.writeMem(0xe7c0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x86c6);
        EXPECT(gbc.pc(), 0xe7c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7c0), 0xcb);
        EXPECT(gbc.readMem(0xe7c1), 0x28);
        // CB 28 0340
        gbc.setState(0x3a3d, 0xf380, 0x9590, 0xdd6f, 0xe1c6, 0xef4, 0x0, 0x1);
        gbc.writeMem(0x3a3d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf380);
        EXPECT(gbc.pc(), 0x3a3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0341
        gbc.setState(0x25c5, 0x8d5e, 0x3590, 0xa86f, 0x971e, 0xea43, 0x1, 0x1);
        gbc.writeMem(0x25c5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8d5e);
        EXPECT(gbc.pc(), 0x25c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0342
        gbc.setState(0x2e78, 0x6571, 0xf310, 0x4fc9, 0x9dbf, 0xfddc, 0x1, 0x1);
        gbc.writeMem(0x2e78, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6571);
        EXPECT(gbc.pc(), 0x2e7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0343
        gbc.setState(0xc927, 0x4945, 0xac40, 0x2a3c, 0xb2de, 0x13ea, 0x1, 0x1);
        gbc.writeMem(0xc927, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4945);
        EXPECT(gbc.pc(), 0xc929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc927), 0xcb);
        EXPECT(gbc.readMem(0xc928), 0x28);
        // CB 28 0344
        gbc.setState(0xb569, 0xebed, 0xb420, 0xe803, 0xde85, 0x4975, 0x1, 0x1);
        gbc.writeMem(0xb569, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xebed);
        EXPECT(gbc.pc(), 0xb56b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb569), 0xcb);
        EXPECT(gbc.readMem(0xb56a), 0x28);
        // CB 28 0345
        gbc.setState(0xe310, 0xdf8, 0xfe20, 0x9be5, 0xcdef, 0x6b14, 0x0, 0x0);
        gbc.writeMem(0xe310, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xdf8);
        EXPECT(gbc.pc(), 0xe312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe310), 0xcb);
        EXPECT(gbc.readMem(0xe311), 0x28);
        // CB 28 0346
        gbc.setState(0x4d76, 0xff30, 0xc1a0, 0x1610, 0xf122, 0xdd46, 0x0, 0x0);
        gbc.writeMem(0x4d76, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xff30);
        EXPECT(gbc.pc(), 0x4d78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0347
        gbc.setState(0x2be8, 0x4ceb, 0x55b0, 0x37d5, 0xd9fc, 0xcf78, 0x0, 0x1);
        gbc.writeMem(0x2be8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4ceb);
        EXPECT(gbc.pc(), 0x2bea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0348
        gbc.setState(0xabdd, 0xf729, 0xba10, 0x91d0, 0x7486, 0x891c, 0x1, 0x1);
        gbc.writeMem(0xabdd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf729);
        EXPECT(gbc.pc(), 0xabdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabdd), 0xcb);
        EXPECT(gbc.readMem(0xabde), 0x28);
        // CB 28 0349
        gbc.setState(0xcc4e, 0x764f, 0x7360, 0x4e8d, 0x4c1a, 0xbd05, 0x1, 0x0);
        gbc.writeMem(0xcc4e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x764f);
        EXPECT(gbc.pc(), 0xcc50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4e), 0xcb);
        EXPECT(gbc.readMem(0xcc4f), 0x28);
        // CB 28 034A
        gbc.setState(0xd7c5, 0xd233, 0x1150, 0xb466, 0x5686, 0x3e12, 0x0, 0x1);
        gbc.writeMem(0xd7c5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd233);
        EXPECT(gbc.pc(), 0xd7c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c5), 0xcb);
        EXPECT(gbc.readMem(0xd7c6), 0x28);
        // CB 28 034C
        gbc.setState(0x894a, 0xc443, 0x1b90, 0x6c6, 0x4965, 0x5adc, 0x0, 0x0);
        gbc.writeMem(0x894a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc443);
        EXPECT(gbc.pc(), 0x894c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x894a), 0xcb);
        EXPECT(gbc.readMem(0x894b), 0x28);
        // CB 28 034D
        gbc.setState(0x2ea1, 0xcf41, 0x51c0, 0x3fc3, 0xd72c, 0xfec6, 0x1, 0x1);
        gbc.writeMem(0x2ea1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcf41);
        EXPECT(gbc.pc(), 0x2ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 034E
        gbc.setState(0x9d58, 0xcff3, 0xe6b0, 0xa844, 0x99ed, 0xbd5c, 0x0, 0x0);
        gbc.writeMem(0x9d58, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xcff3);
        EXPECT(gbc.pc(), 0x9d5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d58), 0xcb);
        EXPECT(gbc.readMem(0x9d59), 0x28);
        // CB 28 034F
        gbc.setState(0xbef4, 0xa107, 0xfd80, 0x5ab1, 0xe56d, 0xeb59, 0x0, 0x0);
        gbc.writeMem(0xbef4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa107);
        EXPECT(gbc.pc(), 0xbef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbef4), 0xcb);
        EXPECT(gbc.readMem(0xbef5), 0x28);
        // CB 28 0350
        gbc.setState(0x653b, 0x103e, 0x7690, 0x456b, 0x445e, 0x4433, 0x1, 0x1);
        gbc.writeMem(0x653b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x103e);
        EXPECT(gbc.pc(), 0x653d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0351
        gbc.setState(0xd519, 0xd5a9, 0x4ba0, 0x379d, 0xeef, 0x6554, 0x0, 0x1);
        gbc.writeMem(0xd519, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd5a9);
        EXPECT(gbc.pc(), 0xd51b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd519), 0xcb);
        EXPECT(gbc.readMem(0xd51a), 0x28);
        // CB 28 0352
        gbc.setState(0xd12d, 0xd9cf, 0xc7a0, 0xd986, 0x106b, 0x435d, 0x0, 0x0);
        gbc.writeMem(0xd12d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd9cf);
        EXPECT(gbc.pc(), 0xd12f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd12d), 0xcb);
        EXPECT(gbc.readMem(0xd12e), 0x28);
        // CB 28 0353
        gbc.setState(0x1b95, 0xd7d9, 0x3630, 0xe865, 0xc84a, 0xf9b8, 0x0, 0x0);
        gbc.writeMem(0x1b95, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd7d9);
        EXPECT(gbc.pc(), 0x1b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0354
        gbc.setState(0xe97c, 0x48ba, 0x660, 0x1c6, 0x247c, 0x7cd, 0x0, 0x1);
        gbc.writeMem(0xe97c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x48ba);
        EXPECT(gbc.pc(), 0xe97e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe97c), 0xcb);
        EXPECT(gbc.readMem(0xe97d), 0x28);
        // CB 28 0355
        gbc.setState(0xdd23, 0xe806, 0xb2f0, 0xf664, 0x1984, 0x53cb, 0x1, 0x0);
        gbc.writeMem(0xdd23, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe806);
        EXPECT(gbc.pc(), 0xdd25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd23), 0xcb);
        EXPECT(gbc.readMem(0xdd24), 0x28);
        // CB 28 0356
        gbc.setState(0xd5c5, 0x13f2, 0x9e70, 0xa2cf, 0x541f, 0x65b0, 0x0, 0x0);
        gbc.writeMem(0xd5c5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x13f2);
        EXPECT(gbc.pc(), 0xd5c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5c5), 0xcb);
        EXPECT(gbc.readMem(0xd5c6), 0x28);
        // CB 28 0357
        gbc.setState(0x7d9c, 0x292b, 0xb4a0, 0xb390, 0xdbbb, 0x3259, 0x0, 0x1);
        gbc.writeMem(0x7d9c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x292b);
        EXPECT(gbc.pc(), 0x7d9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0358
        gbc.setState(0xa6a1, 0x313d, 0x8360, 0xf52a, 0x3e9, 0x6628, 0x1, 0x1);
        gbc.writeMem(0xa6a1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x313d);
        EXPECT(gbc.pc(), 0xa6a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6a1), 0xcb);
        EXPECT(gbc.readMem(0xa6a2), 0x28);
        // CB 28 0359
        gbc.setState(0x3c96, 0x9261, 0x9460, 0x73bf, 0xd86f, 0xf9f5, 0x0, 0x1);
        gbc.writeMem(0x3c96, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9261);
        EXPECT(gbc.pc(), 0x3c98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 035A
        gbc.setState(0x930d, 0x75f1, 0x6e60, 0xbad0, 0x771d, 0x99b1, 0x0, 0x0);
        gbc.writeMem(0x930d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x75f1);
        EXPECT(gbc.pc(), 0x930f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x930d), 0xcb);
        EXPECT(gbc.readMem(0x930e), 0x28);
        // CB 28 035B
        gbc.setState(0x5e3f, 0xb69f, 0x5c00, 0xca9, 0x6343, 0xf555, 0x1, 0x1);
        gbc.writeMem(0x5e3f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb69f);
        EXPECT(gbc.pc(), 0x5e41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 035C
        gbc.setState(0x342a, 0xb8c6, 0x1fc0, 0x89d5, 0xad01, 0xd9b1, 0x1, 0x1);
        gbc.writeMem(0x342a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb8c6);
        EXPECT(gbc.pc(), 0x342c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 035D
        gbc.setState(0x8d62, 0xf91a, 0xe380, 0x5dea, 0x1ed2, 0xc9d7, 0x0, 0x1);
        gbc.writeMem(0x8d62, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf91a);
        EXPECT(gbc.pc(), 0x8d64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d62), 0xcb);
        EXPECT(gbc.readMem(0x8d63), 0x28);
        // CB 28 035E
        gbc.setState(0x95d1, 0x3a75, 0x3010, 0x1816, 0x6f1b, 0xa946, 0x1, 0x0);
        gbc.writeMem(0x95d1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3a75);
        EXPECT(gbc.pc(), 0x95d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95d1), 0xcb);
        EXPECT(gbc.readMem(0x95d2), 0x28);
        // CB 28 035F
        gbc.setState(0x9233, 0x5879, 0xc7a0, 0x7ab7, 0xa89e, 0x36b2, 0x1, 0x0);
        gbc.writeMem(0x9233, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5879);
        EXPECT(gbc.pc(), 0x9235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9233), 0xcb);
        EXPECT(gbc.readMem(0x9234), 0x28);
        // CB 28 0360
        gbc.setState(0xbbc4, 0x87f1, 0x6c40, 0xd230, 0xf8e0, 0xa4a8, 0x1, 0x1);
        gbc.writeMem(0xbbc4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x87f1);
        EXPECT(gbc.pc(), 0xbbc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbc4), 0xcb);
        EXPECT(gbc.readMem(0xbbc5), 0x28);
        // CB 28 0361
        gbc.setState(0xdf53, 0x663c, 0x55a0, 0x114a, 0x9533, 0x9b80, 0x0, 0x1);
        gbc.writeMem(0xdf53, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x663c);
        EXPECT(gbc.pc(), 0xdf55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf53), 0xcb);
        EXPECT(gbc.readMem(0xdf54), 0x28);
        // CB 28 0362
        gbc.setState(0xdf5, 0xa0a6, 0x8f50, 0x2dad, 0x1222, 0x968, 0x1, 0x0);
        gbc.writeMem(0xdf5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa0a6);
        EXPECT(gbc.pc(), 0xdf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0363
        gbc.setState(0x45d8, 0x162f, 0xef00, 0x9376, 0xb356, 0xde39, 0x1, 0x1);
        gbc.writeMem(0x45d8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x162f);
        EXPECT(gbc.pc(), 0x45da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0364
        gbc.setState(0xe168, 0x5c82, 0xc000, 0x2f80, 0x134d, 0x3842, 0x0, 0x0);
        gbc.writeMem(0xe168, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5c82);
        EXPECT(gbc.pc(), 0xe16a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe168), 0xcb);
        EXPECT(gbc.readMem(0xe169), 0x28);
        // CB 28 0365
        gbc.setState(0xc529, 0x46c9, 0x4b50, 0xac13, 0x37c5, 0x4aa4, 0x0, 0x1);
        gbc.writeMem(0xc529, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x46c9);
        EXPECT(gbc.pc(), 0xc52b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc529), 0xcb);
        EXPECT(gbc.readMem(0xc52a), 0x28);
        // CB 28 0366
        gbc.setState(0x9b59, 0x1996, 0xb7f0, 0x3628, 0x4b97, 0x8626, 0x1, 0x0);
        gbc.writeMem(0x9b59, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1996);
        EXPECT(gbc.pc(), 0x9b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b59), 0xcb);
        EXPECT(gbc.readMem(0x9b5a), 0x28);
        // CB 28 0367
        gbc.setState(0xc7ed, 0x1354, 0xb8a0, 0x676, 0xf1a9, 0xc077, 0x0, 0x1);
        gbc.writeMem(0xc7ed, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1354);
        EXPECT(gbc.pc(), 0xc7ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ed), 0xcb);
        EXPECT(gbc.readMem(0xc7ee), 0x28);
        // CB 28 0368
        gbc.setState(0x4bec, 0x8df2, 0x2330, 0x669e, 0x7dd, 0x8592, 0x1, 0x1);
        gbc.writeMem(0x4bec, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8df2);
        EXPECT(gbc.pc(), 0x4bee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0369
        gbc.setState(0xa010, 0xb16e, 0x6030, 0xf642, 0xe918, 0x6f12, 0x0, 0x1);
        gbc.writeMem(0xa010, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb16e);
        EXPECT(gbc.pc(), 0xa012);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa010), 0xcb);
        EXPECT(gbc.readMem(0xa011), 0x28);
        // CB 28 036A
        gbc.setState(0x10dd, 0x59b, 0xa5f0, 0x1342, 0x19d1, 0xdaa6, 0x1, 0x0);
        gbc.writeMem(0x10dd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x59b);
        EXPECT(gbc.pc(), 0x10df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 036B
        gbc.setState(0x203c, 0x639f, 0x9d0, 0x7143, 0xae3d, 0x7aa7, 0x1, 0x1);
        gbc.writeMem(0x203c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x639f);
        EXPECT(gbc.pc(), 0x203e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 036C
        gbc.setState(0xc2f4, 0xabe7, 0x78c0, 0xfd40, 0xeb5d, 0x13fd, 0x0, 0x1);
        gbc.writeMem(0xc2f4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xabe7);
        EXPECT(gbc.pc(), 0xc2f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2f4), 0xcb);
        EXPECT(gbc.readMem(0xc2f5), 0x28);
        // CB 28 036D
        gbc.setState(0x95e4, 0xc940, 0xee0, 0x3f03, 0xe254, 0x59ae, 0x0, 0x1);
        gbc.writeMem(0x95e4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc940);
        EXPECT(gbc.pc(), 0x95e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e4), 0xcb);
        EXPECT(gbc.readMem(0x95e5), 0x28);
        // CB 28 036E
        gbc.setState(0x2bc, 0x253c, 0x2420, 0x6f0, 0x3fe6, 0x8256, 0x0, 0x1);
        gbc.writeMem(0x2bc, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x253c);
        EXPECT(gbc.pc(), 0x2be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 036F
        gbc.setState(0x9553, 0x5969, 0x7a20, 0xcb01, 0xad72, 0x6000, 0x0, 0x0);
        gbc.writeMem(0x9553, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5969);
        EXPECT(gbc.pc(), 0x9555);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9553), 0xcb);
        EXPECT(gbc.readMem(0x9554), 0x28);
        // CB 28 0370
        gbc.setState(0x4ffb, 0x74ba, 0xdd70, 0x8b3d, 0x8ec3, 0x1943, 0x1, 0x0);
        gbc.writeMem(0x4ffb, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x74ba);
        EXPECT(gbc.pc(), 0x4ffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0371
        gbc.setState(0x3924, 0x9597, 0x1710, 0xdf2f, 0xb364, 0x3300, 0x0, 0x1);
        gbc.writeMem(0x3924, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9597);
        EXPECT(gbc.pc(), 0x3926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0372
        gbc.setState(0x6608, 0x6636, 0x6f90, 0x1a9f, 0x91ed, 0x4020, 0x1, 0x0);
        gbc.writeMem(0x6608, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6636);
        EXPECT(gbc.pc(), 0x660a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0373
        gbc.setState(0xd25a, 0x2702, 0xf590, 0x25f7, 0x7b41, 0xb6c3, 0x0, 0x0);
        gbc.writeMem(0xd25a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2702);
        EXPECT(gbc.pc(), 0xd25c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd25a), 0xcb);
        EXPECT(gbc.readMem(0xd25b), 0x28);
        // CB 28 0374
        gbc.setState(0x933e, 0x66b, 0x19c0, 0x7bc1, 0x148e, 0x83cd, 0x1, 0x1);
        gbc.writeMem(0x933e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x66b);
        EXPECT(gbc.pc(), 0x9340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x933e), 0xcb);
        EXPECT(gbc.readMem(0x933f), 0x28);
        // CB 28 0375
        gbc.setState(0xeab5, 0x525b, 0x4490, 0x62d4, 0xa7bd, 0xf30e, 0x1, 0x1);
        gbc.writeMem(0xeab5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x525b);
        EXPECT(gbc.pc(), 0xeab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeab5), 0xcb);
        EXPECT(gbc.readMem(0xeab6), 0x28);
        // CB 28 0376
        gbc.setState(0x2929, 0x1777, 0x7a30, 0xe2ff, 0xdade, 0xe07c, 0x0, 0x1);
        gbc.writeMem(0x2929, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1777);
        EXPECT(gbc.pc(), 0x292b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0377
        gbc.setState(0xa2c, 0xaadb, 0x9ec0, 0x7e29, 0x7bcc, 0x6656, 0x0, 0x1);
        gbc.writeMem(0xa2c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xaadb);
        EXPECT(gbc.pc(), 0xa2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0378
        gbc.setState(0x1f40, 0xa49e, 0x9270, 0xdfec, 0xc8df, 0x81df, 0x1, 0x0);
        gbc.writeMem(0x1f40, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa49e);
        EXPECT(gbc.pc(), 0x1f42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0379
        gbc.setState(0xb307, 0x8089, 0x67c0, 0x435c, 0xc717, 0xf9c1, 0x0, 0x0);
        gbc.writeMem(0xb307, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8089);
        EXPECT(gbc.pc(), 0xb309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb307), 0xcb);
        EXPECT(gbc.readMem(0xb308), 0x28);
        // CB 28 037A
        gbc.setState(0x149, 0x6fa8, 0x7360, 0xf479, 0x86f5, 0xcadd, 0x0, 0x0);
        gbc.writeMem(0x149, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6fa8);
        EXPECT(gbc.pc(), 0x14b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 037B
        gbc.setState(0x5ee5, 0xef54, 0x3060, 0x506, 0x2273, 0xeed1, 0x1, 0x0);
        gbc.writeMem(0x5ee5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xef54);
        EXPECT(gbc.pc(), 0x5ee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 037C
        gbc.setState(0xc4f, 0x1e45, 0x3d0, 0xda9, 0xd430, 0x1fee, 0x0, 0x1);
        gbc.writeMem(0xc4f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1e45);
        EXPECT(gbc.pc(), 0xc51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 037D
        gbc.setState(0xbf79, 0x81fb, 0xc3f0, 0x26d8, 0x4c82, 0xb20, 0x0, 0x1);
        gbc.writeMem(0xbf79, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x81fb);
        EXPECT(gbc.pc(), 0xbf7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf79), 0xcb);
        EXPECT(gbc.readMem(0xbf7a), 0x28);
        // CB 28 037E
        gbc.setState(0x84e9, 0x779d, 0xee90, 0x21d8, 0xc8ca, 0x777a, 0x0, 0x0);
        gbc.writeMem(0x84e9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x779d);
        EXPECT(gbc.pc(), 0x84eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e9), 0xcb);
        EXPECT(gbc.readMem(0x84ea), 0x28);
        // CB 28 037F
        gbc.setState(0xdf97, 0xebbf, 0x67a0, 0x5082, 0x6057, 0x5e6b, 0x1, 0x0);
        gbc.writeMem(0xdf97, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xebbf);
        EXPECT(gbc.pc(), 0xdf99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf97), 0xcb);
        EXPECT(gbc.readMem(0xdf98), 0x28);
        // CB 28 0380
        gbc.setState(0x9050, 0xba3, 0x49f0, 0x2ad9, 0x85d4, 0xae0b, 0x1, 0x0);
        gbc.writeMem(0x9050, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xba3);
        EXPECT(gbc.pc(), 0x9052);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9050), 0xcb);
        EXPECT(gbc.readMem(0x9051), 0x28);
        // CB 28 0381
        gbc.setState(0x9e88, 0xf9e3, 0x6290, 0x2d66, 0x93eb, 0xf8c3, 0x1, 0x1);
        gbc.writeMem(0x9e88, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf9e3);
        EXPECT(gbc.pc(), 0x9e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e88), 0xcb);
        EXPECT(gbc.readMem(0x9e89), 0x28);
        // CB 28 0382
        gbc.setState(0x2dd4, 0xd91e, 0x4fd0, 0xf326, 0x8e35, 0xbc64, 0x1, 0x1);
        gbc.writeMem(0x2dd4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd91e);
        EXPECT(gbc.pc(), 0x2dd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0383
        gbc.setState(0x6cd5, 0x9933, 0xc50, 0xd4c3, 0x6c98, 0x971a, 0x0, 0x0);
        gbc.writeMem(0x6cd5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9933);
        EXPECT(gbc.pc(), 0x6cd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0384
        gbc.setState(0xad8, 0xa38c, 0x9960, 0x8828, 0x8a05, 0x275a, 0x0, 0x1);
        gbc.writeMem(0xad8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa38c);
        EXPECT(gbc.pc(), 0xada);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0385
        gbc.setState(0xdc5c, 0x1094, 0x3d70, 0xe92a, 0xf86a, 0x3f3f, 0x0, 0x0);
        gbc.writeMem(0xdc5c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1094);
        EXPECT(gbc.pc(), 0xdc5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc5c), 0xcb);
        EXPECT(gbc.readMem(0xdc5d), 0x28);
        // CB 28 0386
        gbc.setState(0xafbf, 0x3990, 0xa4e0, 0x4313, 0xc41b, 0xb57f, 0x1, 0x0);
        gbc.writeMem(0xafbf, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3990);
        EXPECT(gbc.pc(), 0xafc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafbf), 0xcb);
        EXPECT(gbc.readMem(0xafc0), 0x28);
        // CB 28 0387
        gbc.setState(0xc1a2, 0x30fd, 0x5b80, 0x4443, 0xa426, 0x47e6, 0x0, 0x0);
        gbc.writeMem(0xc1a2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x30fd);
        EXPECT(gbc.pc(), 0xc1a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1a2), 0xcb);
        EXPECT(gbc.readMem(0xc1a3), 0x28);
        // CB 28 0388
        gbc.setState(0xabfe, 0xb843, 0x9c0, 0xa4a, 0x211b, 0x24fc, 0x0, 0x1);
        gbc.writeMem(0xabfe, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb843);
        EXPECT(gbc.pc(), 0xac00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabfe), 0xcb);
        EXPECT(gbc.readMem(0xabff), 0x28);
        // CB 28 0389
        gbc.setState(0x5c1e, 0x9bf9, 0xe180, 0xd90f, 0xa678, 0xf024, 0x1, 0x0);
        gbc.writeMem(0x5c1e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9bf9);
        EXPECT(gbc.pc(), 0x5c20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 038A
        gbc.setState(0xa312, 0xf4f8, 0x48f0, 0x481c, 0xc4cc, 0x35b1, 0x0, 0x0);
        gbc.writeMem(0xa312, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf4f8);
        EXPECT(gbc.pc(), 0xa314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa312), 0xcb);
        EXPECT(gbc.readMem(0xa313), 0x28);
        // CB 28 038B
        gbc.setState(0xd5d0, 0x5812, 0xb3d0, 0xbe9a, 0xe16a, 0x84a3, 0x0, 0x0);
        gbc.writeMem(0xd5d0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5812);
        EXPECT(gbc.pc(), 0xd5d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5d0), 0xcb);
        EXPECT(gbc.readMem(0xd5d1), 0x28);
        // CB 28 038C
        gbc.setState(0xc4c4, 0xa646, 0xa310, 0x1033, 0x6bd5, 0xd271, 0x1, 0x0);
        gbc.writeMem(0xc4c4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa646);
        EXPECT(gbc.pc(), 0xc4c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4c4), 0xcb);
        EXPECT(gbc.readMem(0xc4c5), 0x28);
        // CB 28 038D
        gbc.setState(0x324f, 0x2225, 0xb390, 0xd101, 0x1a93, 0xfd9c, 0x0, 0x0);
        gbc.writeMem(0x324f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2225);
        EXPECT(gbc.pc(), 0x3251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 038E
        gbc.setState(0xb3a7, 0x111c, 0x18c0, 0x3962, 0xfe22, 0xb95c, 0x1, 0x0);
        gbc.writeMem(0xb3a7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x111c);
        EXPECT(gbc.pc(), 0xb3a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3a7), 0xcb);
        EXPECT(gbc.readMem(0xb3a8), 0x28);
        // CB 28 038F
        gbc.setState(0xc6fa, 0xd77d, 0x21e0, 0xac51, 0x1a4a, 0xe2f5, 0x1, 0x0);
        gbc.writeMem(0xc6fa, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd77d);
        EXPECT(gbc.pc(), 0xc6fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6fa), 0xcb);
        EXPECT(gbc.readMem(0xc6fb), 0x28);
        // CB 28 0390
        gbc.setState(0x300b, 0x27a6, 0x6470, 0x2d2, 0x9424, 0x1230, 0x1, 0x0);
        gbc.writeMem(0x300b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x27a6);
        EXPECT(gbc.pc(), 0x300d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0391
        gbc.setState(0x5b5e, 0xfb65, 0x9db0, 0xb2a2, 0xb8ba, 0x542a, 0x0, 0x1);
        gbc.writeMem(0x5b5e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfb65);
        EXPECT(gbc.pc(), 0x5b60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 0392
        gbc.setState(0x7944, 0x1c51, 0x7960, 0x6b54, 0xd050, 0x5fc4, 0x1, 0x0);
        gbc.writeMem(0x7944, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1c51);
        EXPECT(gbc.pc(), 0x7946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0393
        gbc.setState(0xd868, 0x2dc5, 0xa700, 0xd2d9, 0x806d, 0x6284, 0x0, 0x0);
        gbc.writeMem(0xd868, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2dc5);
        EXPECT(gbc.pc(), 0xd86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd868), 0xcb);
        EXPECT(gbc.readMem(0xd869), 0x28);
        // CB 28 0394
        gbc.setState(0x3516, 0x71b8, 0x3360, 0x5d0, 0xfb30, 0x8600, 0x0, 0x0);
        gbc.writeMem(0x3516, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x71b8);
        EXPECT(gbc.pc(), 0x3518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0395
        gbc.setState(0xcdb8, 0x8093, 0x7400, 0xbe62, 0xf3b7, 0xa976, 0x1, 0x0);
        gbc.writeMem(0xcdb8, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8093);
        EXPECT(gbc.pc(), 0xcdba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb8), 0xcb);
        EXPECT(gbc.readMem(0xcdb9), 0x28);
        // CB 28 0396
        gbc.setState(0x605e, 0xe435, 0x58d0, 0x239b, 0x5fe2, 0xa658, 0x1, 0x0);
        gbc.writeMem(0x605e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe435);
        EXPECT(gbc.pc(), 0x6060);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 0398
        gbc.setState(0xba13, 0xa3a, 0x8e10, 0x4d25, 0xefc6, 0x434b, 0x0, 0x1);
        gbc.writeMem(0xba13, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa3a);
        EXPECT(gbc.pc(), 0xba15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba13), 0xcb);
        EXPECT(gbc.readMem(0xba14), 0x28);
        // CB 28 039A
        gbc.setState(0x6ea7, 0xbf97, 0xa210, 0x46bb, 0xc58e, 0xf8ad, 0x0, 0x1);
        gbc.writeMem(0x6ea7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbf97);
        EXPECT(gbc.pc(), 0x6ea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 039B
        gbc.setState(0xc8b1, 0x75ad, 0x1e60, 0x67d7, 0x5dc7, 0xc934, 0x1, 0x0);
        gbc.writeMem(0xc8b1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x75ad);
        EXPECT(gbc.pc(), 0xc8b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8b1), 0xcb);
        EXPECT(gbc.readMem(0xc8b2), 0x28);
        // CB 28 039D
        gbc.setState(0xa2a, 0xfe91, 0xef90, 0xe120, 0x9325, 0xa4e1, 0x1, 0x0);
        gbc.writeMem(0xa2a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfe91);
        EXPECT(gbc.pc(), 0xa2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 039E
        gbc.setState(0x84cd, 0x929, 0x2a60, 0x303e, 0x5794, 0x91ae, 0x1, 0x0);
        gbc.writeMem(0x84cd, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x929);
        EXPECT(gbc.pc(), 0x84cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84cd), 0xcb);
        EXPECT(gbc.readMem(0x84ce), 0x28);
        // CB 28 039F
        gbc.setState(0x7ffe, 0x23dd, 0x8ef0, 0xb359, 0xf6e1, 0x72f9, 0x0, 0x0);
        gbc.writeMem(0x7ffe, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x23dd);
        EXPECT(gbc.pc(), 0x8000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03A0
        gbc.setState(0x7cfa, 0x8cd3, 0xc820, 0x4535, 0x6eca, 0xe015, 0x1, 0x1);
        gbc.writeMem(0x7cfa, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8cd3);
        EXPECT(gbc.pc(), 0x7cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03A1
        gbc.setState(0x9a08, 0x4b7b, 0x6990, 0x15f0, 0x8682, 0xa325, 0x0, 0x1);
        gbc.writeMem(0x9a08, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4b7b);
        EXPECT(gbc.pc(), 0x9a0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a08), 0xcb);
        EXPECT(gbc.readMem(0x9a09), 0x28);
        // CB 28 03A2
        gbc.setState(0x4584, 0x704a, 0x37b0, 0x9c7, 0x2784, 0xe639, 0x0, 0x0);
        gbc.writeMem(0x4584, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x704a);
        EXPECT(gbc.pc(), 0x4586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03A3
        gbc.setState(0x111e, 0x7ce8, 0x4ad0, 0xded0, 0x9450, 0xcdb5, 0x1, 0x0);
        gbc.writeMem(0x111e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7ce8);
        EXPECT(gbc.pc(), 0x1120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03A4
        gbc.setState(0x65e0, 0xddae, 0x32d0, 0x9ffc, 0xbef, 0xaeef, 0x1, 0x0);
        gbc.writeMem(0x65e0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xddae);
        EXPECT(gbc.pc(), 0x65e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03A5
        gbc.setState(0xd9d3, 0x26b5, 0xe2a0, 0x49ed, 0x13f7, 0x2142, 0x1, 0x0);
        gbc.writeMem(0xd9d3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x26b5);
        EXPECT(gbc.pc(), 0xd9d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d3), 0xcb);
        EXPECT(gbc.readMem(0xd9d4), 0x28);
        // CB 28 03A6
        gbc.setState(0x353c, 0x1cd4, 0x2cb0, 0xc2f2, 0x2f0f, 0x378f, 0x1, 0x1);
        gbc.writeMem(0x353c, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1cd4);
        EXPECT(gbc.pc(), 0x353e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03A7
        gbc.setState(0x6973, 0x57c0, 0xd500, 0x6d94, 0xe271, 0xa7e2, 0x0, 0x1);
        gbc.writeMem(0x6973, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x57c0);
        EXPECT(gbc.pc(), 0x6975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03A8
        gbc.setState(0x6441, 0x2dd4, 0xd150, 0x302e, 0x7541, 0x9730, 0x0, 0x0);
        gbc.writeMem(0x6441, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2dd4);
        EXPECT(gbc.pc(), 0x6443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03A9
        gbc.setState(0xd931, 0x24fa, 0x4000, 0xed0, 0x312a, 0x454f, 0x1, 0x1);
        gbc.writeMem(0xd931, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x24fa);
        EXPECT(gbc.pc(), 0xd933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd931), 0xcb);
        EXPECT(gbc.readMem(0xd932), 0x28);
        // CB 28 03AA
        gbc.setState(0xc2f7, 0x3b1f, 0xba30, 0x6f4e, 0x9615, 0x6c39, 0x1, 0x1);
        gbc.writeMem(0xc2f7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3b1f);
        EXPECT(gbc.pc(), 0xc2f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2f7), 0xcb);
        EXPECT(gbc.readMem(0xc2f8), 0x28);
        // CB 28 03AC
        gbc.setState(0xbab7, 0x4644, 0xd5c0, 0x6573, 0xeb1a, 0xde65, 0x0, 0x1);
        gbc.writeMem(0xbab7, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4644);
        EXPECT(gbc.pc(), 0xbab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbab7), 0xcb);
        EXPECT(gbc.readMem(0xbab8), 0x28);
        // CB 28 03AD
        gbc.setState(0x9afb, 0x4f4e, 0x9250, 0xf934, 0x81d2, 0x424e, 0x0, 0x1);
        gbc.writeMem(0x9afb, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4f4e);
        EXPECT(gbc.pc(), 0x9afd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9afb), 0xcb);
        EXPECT(gbc.readMem(0x9afc), 0x28);
        // CB 28 03AE
        gbc.setState(0x9012, 0x9e41, 0xba80, 0x4929, 0xe78e, 0xb028, 0x0, 0x0);
        gbc.writeMem(0x9012, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9e41);
        EXPECT(gbc.pc(), 0x9014);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9012), 0xcb);
        EXPECT(gbc.readMem(0x9013), 0x28);
        // CB 28 03AF
        gbc.setState(0x2594, 0x8a66, 0xfd90, 0xb63b, 0x7003, 0x50ed, 0x1, 0x1);
        gbc.writeMem(0x2594, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8a66);
        EXPECT(gbc.pc(), 0x2596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03B0
        gbc.setState(0xa59b, 0xfe55, 0x5b00, 0x6441, 0x18d1, 0xd6c9, 0x0, 0x0);
        gbc.writeMem(0xa59b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfe55);
        EXPECT(gbc.pc(), 0xa59d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa59b), 0xcb);
        EXPECT(gbc.readMem(0xa59c), 0x28);
        // CB 28 03B1
        gbc.setState(0x8dc0, 0x154f, 0x28d0, 0x93d9, 0x285, 0x7247, 0x1, 0x0);
        gbc.writeMem(0x8dc0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x154f);
        EXPECT(gbc.pc(), 0x8dc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc0), 0xcb);
        EXPECT(gbc.readMem(0x8dc1), 0x28);
        // CB 28 03B2
        gbc.setState(0xada3, 0x6fc3, 0xa140, 0xb1ff, 0xf265, 0xd09e, 0x1, 0x1);
        gbc.writeMem(0xada3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6fc3);
        EXPECT(gbc.pc(), 0xada5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xada3), 0xcb);
        EXPECT(gbc.readMem(0xada4), 0x28);
        // CB 28 03B3
        gbc.setState(0xda3e, 0xd8f0, 0xd0f0, 0x5f1a, 0x1166, 0x729c, 0x1, 0x1);
        gbc.writeMem(0xda3e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd8f0);
        EXPECT(gbc.pc(), 0xda40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda3e), 0xcb);
        EXPECT(gbc.readMem(0xda3f), 0x28);
        // CB 28 03B4
        gbc.setState(0x72b, 0x357c, 0xaa70, 0xca10, 0x5ec0, 0xf413, 0x0, 0x1);
        gbc.writeMem(0x72b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x357c);
        EXPECT(gbc.pc(), 0x72d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03B5
        gbc.setState(0x1a05, 0xaaf2, 0x3350, 0xbce0, 0xbad7, 0x8a12, 0x1, 0x1);
        gbc.writeMem(0x1a05, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xaaf2);
        EXPECT(gbc.pc(), 0x1a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03B6
        gbc.setState(0xe23b, 0x36f6, 0x2af0, 0x7607, 0x34fe, 0xaaf7, 0x1, 0x0);
        gbc.writeMem(0xe23b, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x36f6);
        EXPECT(gbc.pc(), 0xe23d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe23b), 0xcb);
        EXPECT(gbc.readMem(0xe23c), 0x28);
        // CB 28 03B7
        gbc.setState(0x7a05, 0xfc45, 0x9eb0, 0x35fa, 0x9ffc, 0x73ff, 0x0, 0x0);
        gbc.writeMem(0x7a05, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xfc45);
        EXPECT(gbc.pc(), 0x7a07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03B8
        gbc.setState(0xd1ab, 0xb228, 0xd160, 0xbe59, 0x238a, 0xf977, 0x1, 0x1);
        gbc.writeMem(0xd1ab, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb228);
        EXPECT(gbc.pc(), 0xd1ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ab), 0xcb);
        EXPECT(gbc.readMem(0xd1ac), 0x28);
        // CB 28 03B9
        gbc.setState(0x77ec, 0x185f, 0xe280, 0xe845, 0x132f, 0xfcf3, 0x0, 0x0);
        gbc.writeMem(0x77ec, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x185f);
        EXPECT(gbc.pc(), 0x77ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03BA
        gbc.setState(0x32c5, 0x9577, 0x5330, 0x2e95, 0x15be, 0x5dd7, 0x1, 0x1);
        gbc.writeMem(0x32c5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9577);
        EXPECT(gbc.pc(), 0x32c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03BB
        gbc.setState(0xeae0, 0xbecd, 0x96c0, 0x944b, 0x1191, 0x35cd, 0x1, 0x0);
        gbc.writeMem(0xeae0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xbecd);
        EXPECT(gbc.pc(), 0xeae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeae0), 0xcb);
        EXPECT(gbc.readMem(0xeae1), 0x28);
        // CB 28 03BC
        gbc.setState(0x6874, 0x6c7c, 0x1c0, 0x9131, 0x7d9d, 0xde14, 0x0, 0x1);
        gbc.writeMem(0x6874, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6c7c);
        EXPECT(gbc.pc(), 0x6876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03BE
        gbc.setState(0x324a, 0x5e89, 0x87c0, 0x5652, 0x253, 0x552, 0x1, 0x0);
        gbc.writeMem(0x324a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5e89);
        EXPECT(gbc.pc(), 0x324c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03BF
        gbc.setState(0xdba3, 0x8e6d, 0xa790, 0x51a8, 0xb36f, 0xa8ee, 0x1, 0x0);
        gbc.writeMem(0xdba3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8e6d);
        EXPECT(gbc.pc(), 0xdba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba3), 0xcb);
        EXPECT(gbc.readMem(0xdba4), 0x28);
        // CB 28 03C0
        gbc.setState(0xccf, 0x1f72, 0x17a0, 0x2b9e, 0x27c1, 0xf1d0, 0x0, 0x0);
        gbc.writeMem(0xccf, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1f72);
        EXPECT(gbc.pc(), 0xcd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03C1
        gbc.setState(0x6161, 0x1628, 0xde0, 0xb49f, 0x28cf, 0x6334, 0x1, 0x0);
        gbc.writeMem(0x6161, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1628);
        EXPECT(gbc.pc(), 0x6163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03C2
        gbc.setState(0xe5b0, 0x1428, 0x32f0, 0xac74, 0x72a3, 0x622, 0x1, 0x0);
        gbc.writeMem(0xe5b0, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1428);
        EXPECT(gbc.pc(), 0xe5b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b0), 0xcb);
        EXPECT(gbc.readMem(0xe5b1), 0x28);
        // CB 28 03C3
        gbc.setState(0x5d6a, 0x3030, 0x1ea0, 0xb1d5, 0xc6f5, 0xfb93, 0x1, 0x1);
        gbc.writeMem(0x5d6a, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3030);
        EXPECT(gbc.pc(), 0x5d6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03C5
        gbc.setState(0xb73f, 0x136e, 0xbbd0, 0x5586, 0x4c93, 0x7982, 0x1, 0x0);
        gbc.writeMem(0xb73f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x136e);
        EXPECT(gbc.pc(), 0xb741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb73f), 0xcb);
        EXPECT(gbc.readMem(0xb740), 0x28);
        // CB 28 03C6
        gbc.setState(0x6043, 0xf83e, 0x61c0, 0xa3e6, 0x3447, 0x1438, 0x0, 0x1);
        gbc.writeMem(0x6043, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf83e);
        EXPECT(gbc.pc(), 0x6045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03C7
        gbc.setState(0x98a5, 0xa2b9, 0xc0, 0xa25b, 0x94c9, 0xa1d5, 0x0, 0x0);
        gbc.writeMem(0x98a5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa2b9);
        EXPECT(gbc.pc(), 0x98a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a5), 0xcb);
        EXPECT(gbc.readMem(0x98a6), 0x28);
        // CB 28 03C8
        gbc.setState(0x1a96, 0x6a87, 0xd20, 0x5893, 0xbf4, 0x5dca, 0x0, 0x0);
        gbc.writeMem(0x1a96, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6a87);
        EXPECT(gbc.pc(), 0x1a98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03C9
        gbc.setState(0xcc1f, 0x658c, 0xe0c0, 0xb830, 0x77d0, 0x7ff2, 0x1, 0x1);
        gbc.writeMem(0xcc1f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x658c);
        EXPECT(gbc.pc(), 0xcc21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc1f), 0xcb);
        EXPECT(gbc.readMem(0xcc20), 0x28);
        // CB 28 03CA
        gbc.setState(0x3814, 0xad5, 0x5910, 0xd726, 0x71f7, 0x8780, 0x1, 0x0);
        gbc.writeMem(0x3814, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xad5);
        EXPECT(gbc.pc(), 0x3816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03CB
        gbc.setState(0xd13f, 0x91bb, 0x3200, 0xe7c, 0x15ce, 0xa9b2, 0x0, 0x0);
        gbc.writeMem(0xd13f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x91bb);
        EXPECT(gbc.pc(), 0xd141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd13f), 0xcb);
        EXPECT(gbc.readMem(0xd140), 0x28);
        // CB 28 03CC
        gbc.setState(0xe2e1, 0xdd5b, 0x1d0, 0xac0d, 0xc7e3, 0x169f, 0x0, 0x1);
        gbc.writeMem(0xe2e1, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xdd5b);
        EXPECT(gbc.pc(), 0xe2e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2e1), 0xcb);
        EXPECT(gbc.readMem(0xe2e2), 0x28);
        // CB 28 03CD
        gbc.setState(0x3553, 0x27cf, 0xf360, 0xf34, 0xdf36, 0x84dc, 0x1, 0x1);
        gbc.writeMem(0x3553, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x27cf);
        EXPECT(gbc.pc(), 0x3555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03CE
        gbc.setState(0xe107, 0x7dee, 0x4fc0, 0xe7c2, 0x19db, 0xde0e, 0x0, 0x1);
        gbc.writeMem(0xe107, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7dee);
        EXPECT(gbc.pc(), 0xe109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe107), 0xcb);
        EXPECT(gbc.readMem(0xe108), 0x28);
        // CB 28 03D0
        gbc.setState(0x330e, 0x2d2c, 0x3fa0, 0xe5b4, 0x6662, 0xb752, 0x1, 0x0);
        gbc.writeMem(0x330e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2d2c);
        EXPECT(gbc.pc(), 0x3310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03D1
        gbc.setState(0x2e89, 0x11ba, 0x5030, 0x128d, 0x6f55, 0xeb71, 0x1, 0x1);
        gbc.writeMem(0x2e89, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x11ba);
        EXPECT(gbc.pc(), 0x2e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03D2
        gbc.setState(0x2c49, 0xd36d, 0x80c0, 0x1155, 0xa06c, 0xc539, 0x0, 0x0);
        gbc.writeMem(0x2c49, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd36d);
        EXPECT(gbc.pc(), 0x2c4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03D4
        gbc.setState(0x8a17, 0x6a3c, 0xd410, 0xefa5, 0x9b45, 0xe5b5, 0x1, 0x0);
        gbc.writeMem(0x8a17, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6a3c);
        EXPECT(gbc.pc(), 0x8a19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a17), 0xcb);
        EXPECT(gbc.readMem(0x8a18), 0x28);
        // CB 28 03D5
        gbc.setState(0xc8d4, 0x89d0, 0x7150, 0xf613, 0xf3d5, 0xac59, 0x1, 0x1);
        gbc.writeMem(0xc8d4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x89d0);
        EXPECT(gbc.pc(), 0xc8d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8d4), 0xcb);
        EXPECT(gbc.readMem(0xc8d5), 0x28);
        // CB 28 03D6
        gbc.setState(0xd20d, 0x21c2, 0xb740, 0x32ad, 0x2bd, 0xa56a, 0x0, 0x1);
        gbc.writeMem(0xd20d, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x21c2);
        EXPECT(gbc.pc(), 0xd20f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd20d), 0xcb);
        EXPECT(gbc.readMem(0xd20e), 0x28);
        // CB 28 03D7
        gbc.setState(0xdb3f, 0x3219, 0xb510, 0x9540, 0x2620, 0x5e1, 0x1, 0x1);
        gbc.writeMem(0xdb3f, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3219);
        EXPECT(gbc.pc(), 0xdb41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb3f), 0xcb);
        EXPECT(gbc.readMem(0xdb40), 0x28);
        // CB 28 03D8
        gbc.setState(0xa370, 0xeb63, 0x9c60, 0x90b0, 0x67b4, 0xd46c, 0x1, 0x0);
        gbc.writeMem(0xa370, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xeb63);
        EXPECT(gbc.pc(), 0xa372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa370), 0xcb);
        EXPECT(gbc.readMem(0xa371), 0x28);
        // CB 28 03D9
        gbc.setState(0xefc4, 0x7c60, 0xcc50, 0x3342, 0xf878, 0xf306, 0x0, 0x0);
        gbc.writeMem(0xefc4, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7c60);
        EXPECT(gbc.pc(), 0xefc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefc4), 0xcb);
        EXPECT(gbc.readMem(0xefc5), 0x28);
        // CB 28 03DA
        gbc.setState(0xcc40, 0x604d, 0x6de0, 0xa7d0, 0xa08a, 0xf47f, 0x1, 0x0);
        gbc.writeMem(0xcc40, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x604d);
        EXPECT(gbc.pc(), 0xcc42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc40), 0xcb);
        EXPECT(gbc.readMem(0xcc41), 0x28);
        // CB 28 03DB
        gbc.setState(0x2825, 0x4852, 0xb210, 0xaa08, 0x1439, 0xc2f3, 0x1, 0x0);
        gbc.writeMem(0x2825, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4852);
        EXPECT(gbc.pc(), 0x2827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03DC
        gbc.setState(0x4f6e, 0x3043, 0x4c50, 0x27d8, 0xf60e, 0x8889, 0x0, 0x0);
        gbc.writeMem(0x4f6e, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3043);
        EXPECT(gbc.pc(), 0x4f70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03DD
        gbc.setState(0x4add, 0xfa3f, 0xefd0, 0x2c01, 0xa101, 0x9623, 0x1, 0x0);
        gbc.writeMem(0x4add, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xfa3f);
        EXPECT(gbc.pc(), 0x4adf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03DE
        gbc.setState(0xd4eb, 0x9109, 0xbc80, 0x9f9a, 0x41a1, 0xc387, 0x1, 0x0);
        gbc.writeMem(0xd4eb, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9109);
        EXPECT(gbc.pc(), 0xd4ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4eb), 0xcb);
        EXPECT(gbc.readMem(0xd4ec), 0x28);
        // CB 28 03DF
        gbc.setState(0x19e2, 0x5102, 0xb810, 0xcf07, 0xea94, 0x6551, 0x0, 0x0);
        gbc.writeMem(0x19e2, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5102);
        EXPECT(gbc.pc(), 0x19e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 28 03E0
        gbc.setState(0x2524, 0x986e, 0x6eb0, 0xbe52, 0x54be, 0x7239, 0x1, 0x1);
        gbc.writeMem(0x2524, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x986e);
        EXPECT(gbc.pc(), 0x2526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03E1
        gbc.setState(0x3ac3, 0xbf5, 0xde0, 0x6ea9, 0xfd3e, 0x23e7, 0x1, 0x1);
        gbc.writeMem(0x3ac3, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xbf5);
        EXPECT(gbc.pc(), 0x3ac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03E2
        gbc.setState(0x75c6, 0xb54d, 0xe940, 0xdadd, 0x3373, 0x4a, 0x1, 0x0);
        gbc.writeMem(0x75c6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb54d);
        EXPECT(gbc.pc(), 0x75c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03E3
        gbc.setState(0x3ac6, 0x964, 0x27e0, 0xf02a, 0x90ff, 0xb8a2, 0x1, 0x0);
        gbc.writeMem(0x3ac6, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x964);
        EXPECT(gbc.pc(), 0x3ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03E4
        gbc.setState(0x8fbe, 0x6f5f, 0xc2e0, 0x49b3, 0x9e94, 0xa3b9, 0x1, 0x1);
        gbc.writeMem(0x8fbe, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6f5f);
        EXPECT(gbc.pc(), 0x8fc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fbe), 0xcb);
        EXPECT(gbc.readMem(0x8fbf), 0x28);
        // CB 28 03E5
        gbc.setState(0x99d9, 0x194b, 0xe260, 0xd092, 0xa869, 0x7109, 0x1, 0x1);
        gbc.writeMem(0x99d9, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x194b);
        EXPECT(gbc.pc(), 0x99db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d9), 0xcb);
        EXPECT(gbc.readMem(0x99da), 0x28);
        // CB 28 03E6
        gbc.setState(0x64dc, 0xd138, 0x9270, 0x983a, 0x48a9, 0x5f74, 0x0, 0x0);
        gbc.writeMem(0x64dc, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd138);
        EXPECT(gbc.pc(), 0x64de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 28 03E7
        gbc.setState(0x74f5, 0xad11, 0x9dc0, 0x66f6, 0x3629, 0x7f8f, 0x1, 0x1);
        gbc.writeMem(0x74f5, { 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xad11);
        EXPECT(gbc.pc(), 0x74f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
    }
