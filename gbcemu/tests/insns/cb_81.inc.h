    TEST(gbcemu, opcode_cb_81) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 81 0000
        gbc.setState(0x2aba, 0x4c3b, 0x3d30, 0x47f6, 0x3a19, 0x103f, 0x1, 0x1);
        gbc.writeMem(0x2aba, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4c3b);
        EXPECT(gbc.pc(), 0x2abc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0001
        gbc.setState(0x7b6c, 0xdaf6, 0xb300, 0x42a2, 0x8197, 0x2cfc, 0x0, 0x1);
        gbc.writeMem(0x7b6c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xdaf6);
        EXPECT(gbc.pc(), 0x7b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0002
        gbc.setState(0x6730, 0x4800, 0x6ea0, 0x56f7, 0xae86, 0xdcc8, 0x1, 0x0);
        gbc.writeMem(0x6730, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4800);
        EXPECT(gbc.pc(), 0x6732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0003
        gbc.setState(0x9ebe, 0xd9bf, 0xe930, 0x1844, 0xfe19, 0x405d, 0x0, 0x1);
        gbc.writeMem(0x9ebe, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd9bf);
        EXPECT(gbc.pc(), 0x9ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ebe), 0xcb);
        EXPECT(gbc.readMem(0x9ebf), 0x81);
        // CB 81 0004
        gbc.setState(0x99c1, 0xc4cd, 0x90e0, 0xa8bf, 0xc2f8, 0x6f50, 0x0, 0x1);
        gbc.writeMem(0x99c1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc4cd);
        EXPECT(gbc.pc(), 0x99c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c1), 0xcb);
        EXPECT(gbc.readMem(0x99c2), 0x81);
        // CB 81 0005
        gbc.setState(0x9091, 0xd759, 0xacf0, 0x20cd, 0x47d8, 0x34bb, 0x1, 0x1);
        gbc.writeMem(0x9091, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd759);
        EXPECT(gbc.pc(), 0x9093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9091), 0xcb);
        EXPECT(gbc.readMem(0x9092), 0x81);
        // CB 81 0006
        gbc.setState(0xbb3f, 0x3083, 0x2500, 0xbe3a, 0x3a3c, 0x44fc, 0x0, 0x0);
        gbc.writeMem(0xbb3f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3083);
        EXPECT(gbc.pc(), 0xbb41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb3f), 0xcb);
        EXPECT(gbc.readMem(0xbb40), 0x81);
        // CB 81 0007
        gbc.setState(0xd51b, 0x65e2, 0x1bb0, 0x5215, 0xaee4, 0x4b53, 0x0, 0x0);
        gbc.writeMem(0xd51b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x65e2);
        EXPECT(gbc.pc(), 0xd51d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd51b), 0xcb);
        EXPECT(gbc.readMem(0xd51c), 0x81);
        // CB 81 0008
        gbc.setState(0xbbfe, 0x7a0a, 0xd130, 0x3770, 0x79c1, 0x5de6, 0x1, 0x1);
        gbc.writeMem(0xbbfe, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7a0a);
        EXPECT(gbc.pc(), 0xbc00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbfe), 0xcb);
        EXPECT(gbc.readMem(0xbbff), 0x81);
        // CB 81 0009
        gbc.setState(0xb564, 0xa66a, 0x5290, 0xd1d3, 0x637a, 0x5011, 0x1, 0x0);
        gbc.writeMem(0xb564, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa66a);
        EXPECT(gbc.pc(), 0xb566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb564), 0xcb);
        EXPECT(gbc.readMem(0xb565), 0x81);
        // CB 81 000A
        gbc.setState(0xb283, 0x615e, 0x3300, 0xcedb, 0x52a0, 0x79a2, 0x1, 0x0);
        gbc.writeMem(0xb283, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x615e);
        EXPECT(gbc.pc(), 0xb285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb283), 0xcb);
        EXPECT(gbc.readMem(0xb284), 0x81);
        // CB 81 000B
        gbc.setState(0x9703, 0xeef4, 0x4a80, 0xaaac, 0x679a, 0xcd8e, 0x0, 0x0);
        gbc.writeMem(0x9703, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xeef4);
        EXPECT(gbc.pc(), 0x9705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9703), 0xcb);
        EXPECT(gbc.readMem(0x9704), 0x81);
        // CB 81 000C
        gbc.setState(0xe949, 0xf769, 0x8860, 0x54db, 0x9014, 0x759f, 0x0, 0x0);
        gbc.writeMem(0xe949, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf769);
        EXPECT(gbc.pc(), 0xe94b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe949), 0xcb);
        EXPECT(gbc.readMem(0xe94a), 0x81);
        // CB 81 000D
        gbc.setState(0x64db, 0x4f9d, 0xf680, 0xd653, 0xb89, 0x31c6, 0x1, 0x1);
        gbc.writeMem(0x64db, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4f9d);
        EXPECT(gbc.pc(), 0x64dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 000F
        gbc.setState(0x301a, 0xec4b, 0x2840, 0x71d, 0x1f46, 0x2e0, 0x1, 0x0);
        gbc.writeMem(0x301a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xec4b);
        EXPECT(gbc.pc(), 0x301c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0010
        gbc.setState(0xdae3, 0xa6dd, 0x7c50, 0xd61e, 0xcecc, 0xd2b9, 0x1, 0x1);
        gbc.writeMem(0xdae3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa6dd);
        EXPECT(gbc.pc(), 0xdae5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae3), 0xcb);
        EXPECT(gbc.readMem(0xdae4), 0x81);
        // CB 81 0011
        gbc.setState(0x617c, 0x2409, 0xc230, 0x6f7e, 0xc224, 0x5a60, 0x0, 0x0);
        gbc.writeMem(0x617c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2409);
        EXPECT(gbc.pc(), 0x617e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0012
        gbc.setState(0x2eb, 0x8e2, 0x600, 0x502f, 0xd4c6, 0x5a5, 0x1, 0x1);
        gbc.writeMem(0x2eb, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8e2);
        EXPECT(gbc.pc(), 0x2ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0013
        gbc.setState(0xd7, 0xb9da, 0x1300, 0x8184, 0xd915, 0x27a5, 0x1, 0x1);
        gbc.writeMem(0xd7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb9da);
        EXPECT(gbc.pc(), 0xd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0014
        gbc.setState(0x2343, 0xa979, 0xaac0, 0x1579, 0x6470, 0xb70e, 0x0, 0x1);
        gbc.writeMem(0x2343, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa979);
        EXPECT(gbc.pc(), 0x2345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0015
        gbc.setState(0x76e5, 0xbcde, 0x7d20, 0x6453, 0x2bc1, 0x1ec6, 0x0, 0x0);
        gbc.writeMem(0x76e5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xbcde);
        EXPECT(gbc.pc(), 0x76e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0016
        gbc.setState(0xc144, 0xf3f3, 0x5360, 0x978f, 0x9f26, 0xad73, 0x0, 0x0);
        gbc.writeMem(0xc144, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf3f3);
        EXPECT(gbc.pc(), 0xc146);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc144), 0xcb);
        EXPECT(gbc.readMem(0xc145), 0x81);
        // CB 81 0017
        gbc.setState(0xc93e, 0x405c, 0xbff0, 0xf2, 0xf156, 0xf850, 0x1, 0x0);
        gbc.writeMem(0xc93e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x405c);
        EXPECT(gbc.pc(), 0xc940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc93e), 0xcb);
        EXPECT(gbc.readMem(0xc93f), 0x81);
        // CB 81 0018
        gbc.setState(0x868b, 0x89c8, 0x3420, 0xaea, 0xa25a, 0x7599, 0x0, 0x0);
        gbc.writeMem(0x868b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x89c8);
        EXPECT(gbc.pc(), 0x868d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x868b), 0xcb);
        EXPECT(gbc.readMem(0x868c), 0x81);
        // CB 81 0019
        gbc.setState(0x8e04, 0x1912, 0xf90, 0xe41d, 0xa30c, 0x2508, 0x1, 0x0);
        gbc.writeMem(0x8e04, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1912);
        EXPECT(gbc.pc(), 0x8e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e04), 0xcb);
        EXPECT(gbc.readMem(0x8e05), 0x81);
        // CB 81 001A
        gbc.setState(0x507e, 0xe33b, 0x4730, 0x7b74, 0x233c, 0x1cd6, 0x0, 0x0);
        gbc.writeMem(0x507e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe33b);
        EXPECT(gbc.pc(), 0x5080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 001B
        gbc.setState(0xc5ce, 0x7cea, 0xcd20, 0xaecc, 0xac8a, 0xdff7, 0x0, 0x1);
        gbc.writeMem(0xc5ce, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7cea);
        EXPECT(gbc.pc(), 0xc5d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ce), 0xcb);
        EXPECT(gbc.readMem(0xc5cf), 0x81);
        // CB 81 001C
        gbc.setState(0x5498, 0xde8d, 0xdbd0, 0xd1dd, 0xf8e2, 0x19ca, 0x1, 0x1);
        gbc.writeMem(0x5498, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xde8d);
        EXPECT(gbc.pc(), 0x549a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 001D
        gbc.setState(0xbdaf, 0xad90, 0xc810, 0xa954, 0x818d, 0xe3cd, 0x0, 0x1);
        gbc.writeMem(0xbdaf, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xad90);
        EXPECT(gbc.pc(), 0xbdb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdaf), 0xcb);
        EXPECT(gbc.readMem(0xbdb0), 0x81);
        // CB 81 001E
        gbc.setState(0x61df, 0x8e50, 0x2070, 0x304, 0x44ce, 0x4486, 0x0, 0x1);
        gbc.writeMem(0x61df, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8e50);
        EXPECT(gbc.pc(), 0x61e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 001F
        gbc.setState(0x34c0, 0xaa97, 0xc410, 0x152b, 0x1ff8, 0x306f, 0x1, 0x1);
        gbc.writeMem(0x34c0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xaa97);
        EXPECT(gbc.pc(), 0x34c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0020
        gbc.setState(0x126a, 0xe0bb, 0xd7d0, 0xd865, 0x5d15, 0x9e32, 0x0, 0x1);
        gbc.writeMem(0x126a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe0bb);
        EXPECT(gbc.pc(), 0x126c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0021
        gbc.setState(0x4070, 0x78eb, 0x61e0, 0x5453, 0xe026, 0xed13, 0x1, 0x1);
        gbc.writeMem(0x4070, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x78eb);
        EXPECT(gbc.pc(), 0x4072);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0022
        gbc.setState(0xd433, 0xf86e, 0x3060, 0x1e12, 0xe4dd, 0x3320, 0x0, 0x1);
        gbc.writeMem(0xd433, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf86e);
        EXPECT(gbc.pc(), 0xd435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd433), 0xcb);
        EXPECT(gbc.readMem(0xd434), 0x81);
        // CB 81 0023
        gbc.setState(0x1271, 0x5775, 0x2760, 0xeb2a, 0x6270, 0x83d8, 0x0, 0x0);
        gbc.writeMem(0x1271, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5775);
        EXPECT(gbc.pc(), 0x1273);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0024
        gbc.setState(0xae7, 0x8ed2, 0x5ec0, 0xa302, 0x68dc, 0x5758, 0x0, 0x0);
        gbc.writeMem(0xae7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8ed2);
        EXPECT(gbc.pc(), 0xae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0026
        gbc.setState(0xa7e1, 0xd4fd, 0x850, 0xe835, 0xa06e, 0xa3ec, 0x1, 0x1);
        gbc.writeMem(0xa7e1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd4fd);
        EXPECT(gbc.pc(), 0xa7e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7e1), 0xcb);
        EXPECT(gbc.readMem(0xa7e2), 0x81);
        // CB 81 0027
        gbc.setState(0xb99f, 0x3230, 0xf3b0, 0x6828, 0x3ecc, 0x1326, 0x1, 0x0);
        gbc.writeMem(0xb99f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3230);
        EXPECT(gbc.pc(), 0xb9a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb99f), 0xcb);
        EXPECT(gbc.readMem(0xb9a0), 0x81);
        // CB 81 0028
        gbc.setState(0x4188, 0xe54, 0xec70, 0x827e, 0xd75e, 0xf4d1, 0x1, 0x1);
        gbc.writeMem(0x4188, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe54);
        EXPECT(gbc.pc(), 0x418a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0029
        gbc.setState(0xaac3, 0xdc9c, 0x7e20, 0xa72, 0xfadb, 0x885f, 0x1, 0x1);
        gbc.writeMem(0xaac3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xdc9c);
        EXPECT(gbc.pc(), 0xaac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaac3), 0xcb);
        EXPECT(gbc.readMem(0xaac4), 0x81);
        // CB 81 002A
        gbc.setState(0x8e6d, 0xef66, 0x84e0, 0x5c01, 0xf389, 0x5c5c, 0x0, 0x0);
        gbc.writeMem(0x8e6d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xef66);
        EXPECT(gbc.pc(), 0x8e6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e6d), 0xcb);
        EXPECT(gbc.readMem(0x8e6e), 0x81);
        // CB 81 002B
        gbc.setState(0x27ef, 0x2e6a, 0xf260, 0xc1df, 0x78d5, 0x71e, 0x1, 0x0);
        gbc.writeMem(0x27ef, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2e6a);
        EXPECT(gbc.pc(), 0x27f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 002C
        gbc.setState(0x2dd, 0x6ff4, 0x3780, 0x973, 0x296b, 0xe8a1, 0x0, 0x1);
        gbc.writeMem(0x2dd, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6ff4);
        EXPECT(gbc.pc(), 0x2df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 002D
        gbc.setState(0xe946, 0xb448, 0xb760, 0x1d38, 0xffe9, 0xc0d0, 0x1, 0x0);
        gbc.writeMem(0xe946, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb448);
        EXPECT(gbc.pc(), 0xe948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe946), 0xcb);
        EXPECT(gbc.readMem(0xe947), 0x81);
        // CB 81 002E
        gbc.setState(0xcde5, 0x455b, 0x6ee0, 0x6b28, 0x5559, 0xbca3, 0x1, 0x1);
        gbc.writeMem(0xcde5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x455b);
        EXPECT(gbc.pc(), 0xcde7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcde5), 0xcb);
        EXPECT(gbc.readMem(0xcde6), 0x81);
        // CB 81 002F
        gbc.setState(0x995c, 0xc731, 0xf2a0, 0x624a, 0x6ce7, 0xba4f, 0x0, 0x1);
        gbc.writeMem(0x995c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc731);
        EXPECT(gbc.pc(), 0x995e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x995c), 0xcb);
        EXPECT(gbc.readMem(0x995d), 0x81);
        // CB 81 0030
        gbc.setState(0xd9b6, 0x51da, 0xadc0, 0xa229, 0xe7f0, 0x1494, 0x0, 0x1);
        gbc.writeMem(0xd9b6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x51da);
        EXPECT(gbc.pc(), 0xd9b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9b6), 0xcb);
        EXPECT(gbc.readMem(0xd9b7), 0x81);
        // CB 81 0031
        gbc.setState(0x7378, 0xf60c, 0xe0c0, 0x544f, 0x420c, 0x78de, 0x0, 0x1);
        gbc.writeMem(0x7378, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf60c);
        EXPECT(gbc.pc(), 0x737a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0032
        gbc.setState(0xbbe5, 0x69a9, 0x70, 0xe7e6, 0x84e7, 0x9f42, 0x1, 0x0);
        gbc.writeMem(0xbbe5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x69a9);
        EXPECT(gbc.pc(), 0xbbe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe5), 0xcb);
        EXPECT(gbc.readMem(0xbbe6), 0x81);
        // CB 81 0033
        gbc.setState(0x3f41, 0x7021, 0x8cd0, 0x29e6, 0x6e72, 0xa60c, 0x1, 0x0);
        gbc.writeMem(0x3f41, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7021);
        EXPECT(gbc.pc(), 0x3f43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0034
        gbc.setState(0x992f, 0x890c, 0xd8f0, 0xc75d, 0xc855, 0xebc3, 0x1, 0x1);
        gbc.writeMem(0x992f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x890c);
        EXPECT(gbc.pc(), 0x9931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x992f), 0xcb);
        EXPECT(gbc.readMem(0x9930), 0x81);
        // CB 81 0035
        gbc.setState(0x7b84, 0x8d80, 0xadc0, 0x9cd5, 0x3ec9, 0x1d9c, 0x1, 0x0);
        gbc.writeMem(0x7b84, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8d80);
        EXPECT(gbc.pc(), 0x7b86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0036
        gbc.setState(0x6ed1, 0xb8c8, 0x79e0, 0x7825, 0x1289, 0x93a2, 0x0, 0x1);
        gbc.writeMem(0x6ed1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb8c8);
        EXPECT(gbc.pc(), 0x6ed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0037
        gbc.setState(0x27d5, 0x4c9b, 0x3070, 0x76b4, 0x986, 0xd07d, 0x1, 0x1);
        gbc.writeMem(0x27d5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4c9b);
        EXPECT(gbc.pc(), 0x27d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0038
        gbc.setState(0xc226, 0x3e7, 0x9bc0, 0x5bcc, 0xe4f9, 0xbcba, 0x0, 0x0);
        gbc.writeMem(0xc226, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3e7);
        EXPECT(gbc.pc(), 0xc228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc226), 0xcb);
        EXPECT(gbc.readMem(0xc227), 0x81);
        // CB 81 0039
        gbc.setState(0xd1f9, 0x2ecb, 0x5620, 0x66ea, 0xe374, 0x3928, 0x0, 0x0);
        gbc.writeMem(0xd1f9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2ecb);
        EXPECT(gbc.pc(), 0xd1fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f9), 0xcb);
        EXPECT(gbc.readMem(0xd1fa), 0x81);
        // CB 81 003A
        gbc.setState(0x311f, 0xbbea, 0x1b90, 0x902d, 0xf72e, 0xd538, 0x0, 0x1);
        gbc.writeMem(0x311f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xbbea);
        EXPECT(gbc.pc(), 0x3121);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 003B
        gbc.setState(0x4286, 0xc1b, 0xeb0, 0xe2d3, 0x5ab4, 0x761a, 0x0, 0x0);
        gbc.writeMem(0x4286, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc1b);
        EXPECT(gbc.pc(), 0x4288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 003C
        gbc.setState(0x9829, 0x3985, 0x6c10, 0xecd8, 0x6d17, 0x117b, 0x0, 0x1);
        gbc.writeMem(0x9829, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3985);
        EXPECT(gbc.pc(), 0x982b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9829), 0xcb);
        EXPECT(gbc.readMem(0x982a), 0x81);
        // CB 81 003D
        gbc.setState(0x3e32, 0x967c, 0xc560, 0xb47b, 0x8c93, 0xb36c, 0x1, 0x1);
        gbc.writeMem(0x3e32, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x967c);
        EXPECT(gbc.pc(), 0x3e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 003E
        gbc.setState(0x4dd1, 0x49db, 0x6270, 0xd8d0, 0x26c5, 0x78b8, 0x1, 0x1);
        gbc.writeMem(0x4dd1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x49db);
        EXPECT(gbc.pc(), 0x4dd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 003F
        gbc.setState(0xddb, 0x9d6f, 0x5e80, 0xeadf, 0xf75a, 0x25a3, 0x1, 0x1);
        gbc.writeMem(0xddb, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9d6f);
        EXPECT(gbc.pc(), 0xddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0040
        gbc.setState(0x73d7, 0xdc72, 0x3600, 0xc424, 0xa1f3, 0x5356, 0x0, 0x0);
        gbc.writeMem(0x73d7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xdc72);
        EXPECT(gbc.pc(), 0x73d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0041
        gbc.setState(0xa560, 0x337a, 0x57e0, 0x30f4, 0x77ec, 0x7200, 0x1, 0x1);
        gbc.writeMem(0xa560, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x337a);
        EXPECT(gbc.pc(), 0xa562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa560), 0xcb);
        EXPECT(gbc.readMem(0xa561), 0x81);
        // CB 81 0042
        gbc.setState(0x1c03, 0x9987, 0xebe0, 0xcdda, 0x4268, 0x4dbc, 0x1, 0x1);
        gbc.writeMem(0x1c03, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9987);
        EXPECT(gbc.pc(), 0x1c05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0043
        gbc.setState(0x8e11, 0x5419, 0x2980, 0x8280, 0x346c, 0x5a1c, 0x0, 0x0);
        gbc.writeMem(0x8e11, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5419);
        EXPECT(gbc.pc(), 0x8e13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e11), 0xcb);
        EXPECT(gbc.readMem(0x8e12), 0x81);
        // CB 81 0044
        gbc.setState(0xaff1, 0x8909, 0x5150, 0x5c4b, 0xa9a5, 0x8e39, 0x1, 0x1);
        gbc.writeMem(0xaff1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8909);
        EXPECT(gbc.pc(), 0xaff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaff1), 0xcb);
        EXPECT(gbc.readMem(0xaff2), 0x81);
        // CB 81 0045
        gbc.setState(0x1631, 0xad94, 0x7780, 0x56b0, 0x8433, 0x2fcb, 0x0, 0x1);
        gbc.writeMem(0x1631, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xad94);
        EXPECT(gbc.pc(), 0x1633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0046
        gbc.setState(0x4ffa, 0x437e, 0x7fb0, 0x3703, 0x5785, 0xcfb6, 0x0, 0x0);
        gbc.writeMem(0x4ffa, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x437e);
        EXPECT(gbc.pc(), 0x4ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0047
        gbc.setState(0x316e, 0x1e61, 0xf310, 0xd5a7, 0xe9e0, 0x2cba, 0x1, 0x0);
        gbc.writeMem(0x316e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1e61);
        EXPECT(gbc.pc(), 0x3170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0048
        gbc.setState(0x75fe, 0x60bf, 0xf180, 0xf674, 0xa61, 0x8947, 0x1, 0x1);
        gbc.writeMem(0x75fe, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x60bf);
        EXPECT(gbc.pc(), 0x7600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0049
        gbc.setState(0xcda3, 0x6a6a, 0x31b0, 0x6455, 0x9a15, 0x7619, 0x1, 0x1);
        gbc.writeMem(0xcda3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6a6a);
        EXPECT(gbc.pc(), 0xcda5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcda3), 0xcb);
        EXPECT(gbc.readMem(0xcda4), 0x81);
        // CB 81 004A
        gbc.setState(0xe6a, 0x3972, 0x96a0, 0x801b, 0xfa59, 0xc6b, 0x0, 0x0);
        gbc.writeMem(0xe6a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3972);
        EXPECT(gbc.pc(), 0xe6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 004B
        gbc.setState(0x63c7, 0x88c4, 0x1910, 0x3834, 0xb229, 0xb4e1, 0x1, 0x1);
        gbc.writeMem(0x63c7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x88c4);
        EXPECT(gbc.pc(), 0x63c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 004C
        gbc.setState(0xeb22, 0x64f, 0x3c50, 0x7166, 0x77da, 0x26e2, 0x1, 0x0);
        gbc.writeMem(0xeb22, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x64f);
        EXPECT(gbc.pc(), 0xeb24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb22), 0xcb);
        EXPECT(gbc.readMem(0xeb23), 0x81);
        // CB 81 004D
        gbc.setState(0xe0d0, 0x4356, 0xd110, 0xb19, 0x146, 0x2b26, 0x0, 0x1);
        gbc.writeMem(0xe0d0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4356);
        EXPECT(gbc.pc(), 0xe0d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0d0), 0xcb);
        EXPECT(gbc.readMem(0xe0d1), 0x81);
        // CB 81 004E
        gbc.setState(0x1be8, 0x5610, 0x3740, 0xbd5f, 0x79d2, 0x2d63, 0x1, 0x0);
        gbc.writeMem(0x1be8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5610);
        EXPECT(gbc.pc(), 0x1bea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 004F
        gbc.setState(0x51a9, 0xb14e, 0xf610, 0x92ad, 0x70db, 0x337d, 0x0, 0x1);
        gbc.writeMem(0x51a9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb14e);
        EXPECT(gbc.pc(), 0x51ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0050
        gbc.setState(0x5836, 0x4969, 0x470, 0x1721, 0x35b6, 0xe394, 0x1, 0x1);
        gbc.writeMem(0x5836, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4969);
        EXPECT(gbc.pc(), 0x5838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0051
        gbc.setState(0xb27e, 0x78b8, 0xadf0, 0x7e1a, 0xe1bb, 0x2699, 0x0, 0x0);
        gbc.writeMem(0xb27e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x78b8);
        EXPECT(gbc.pc(), 0xb280);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb27e), 0xcb);
        EXPECT(gbc.readMem(0xb27f), 0x81);
        // CB 81 0052
        gbc.setState(0x63ce, 0xd232, 0x39d0, 0xbd8d, 0xf56c, 0x7bae, 0x1, 0x1);
        gbc.writeMem(0x63ce, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd232);
        EXPECT(gbc.pc(), 0x63d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0053
        gbc.setState(0x6e4d, 0x2037, 0xd3b0, 0x2ab6, 0x8b37, 0x8ca5, 0x0, 0x0);
        gbc.writeMem(0x6e4d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2037);
        EXPECT(gbc.pc(), 0x6e4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0054
        gbc.setState(0x8082, 0x4dd3, 0xef10, 0x2156, 0x82e1, 0x2f38, 0x1, 0x0);
        gbc.writeMem(0x8082, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4dd3);
        EXPECT(gbc.pc(), 0x8084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8082), 0xcb);
        EXPECT(gbc.readMem(0x8083), 0x81);
        // CB 81 0055
        gbc.setState(0x1d20, 0xba34, 0x4ec0, 0x43d4, 0x4503, 0xaf0a, 0x0, 0x0);
        gbc.writeMem(0x1d20, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xba34);
        EXPECT(gbc.pc(), 0x1d22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0056
        gbc.setState(0x1da6, 0x4c15, 0xf5e0, 0x9cf1, 0x491a, 0xcfaf, 0x0, 0x0);
        gbc.writeMem(0x1da6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4c15);
        EXPECT(gbc.pc(), 0x1da8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0057
        gbc.setState(0x4e09, 0xdab9, 0x2860, 0xc16, 0xeef7, 0x23a1, 0x1, 0x0);
        gbc.writeMem(0x4e09, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xdab9);
        EXPECT(gbc.pc(), 0x4e0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0058
        gbc.setState(0x7d1f, 0x1f1e, 0xa2d0, 0x47db, 0xd4f4, 0xff5, 0x0, 0x0);
        gbc.writeMem(0x7d1f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1f1e);
        EXPECT(gbc.pc(), 0x7d21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0059
        gbc.setState(0xb183, 0x8a4b, 0xf800, 0x3597, 0xa9b4, 0xb5e7, 0x1, 0x1);
        gbc.writeMem(0xb183, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8a4b);
        EXPECT(gbc.pc(), 0xb185);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb183), 0xcb);
        EXPECT(gbc.readMem(0xb184), 0x81);
        // CB 81 005B
        gbc.setState(0xcb62, 0xfddf, 0x62d0, 0xe1e4, 0x798a, 0x30bd, 0x1, 0x1);
        gbc.writeMem(0xcb62, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfddf);
        EXPECT(gbc.pc(), 0xcb64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb62), 0xcb);
        EXPECT(gbc.readMem(0xcb63), 0x81);
        // CB 81 005C
        gbc.setState(0x4677, 0xc7b, 0xee50, 0x5578, 0x48f3, 0x8402, 0x1, 0x0);
        gbc.writeMem(0x4677, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc7b);
        EXPECT(gbc.pc(), 0x4679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 005D
        gbc.setState(0x4ea7, 0xeda5, 0xaf00, 0xaace, 0xfb22, 0x512d, 0x1, 0x0);
        gbc.writeMem(0x4ea7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xeda5);
        EXPECT(gbc.pc(), 0x4ea9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 005E
        gbc.setState(0x8d2e, 0x4aba, 0x1b80, 0x89b4, 0xb9eb, 0x108a, 0x0, 0x1);
        gbc.writeMem(0x8d2e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4aba);
        EXPECT(gbc.pc(), 0x8d30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d2e), 0xcb);
        EXPECT(gbc.readMem(0x8d2f), 0x81);
        // CB 81 005F
        gbc.setState(0x4a29, 0x73ef, 0x8e80, 0xd74c, 0x9ba3, 0xf97d, 0x0, 0x1);
        gbc.writeMem(0x4a29, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x73ef);
        EXPECT(gbc.pc(), 0x4a2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0061
        gbc.setState(0x47a0, 0x4685, 0x99a0, 0xd1e1, 0xc16f, 0x717a, 0x0, 0x1);
        gbc.writeMem(0x47a0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4685);
        EXPECT(gbc.pc(), 0x47a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0062
        gbc.setState(0xec14, 0x5f41, 0x19c0, 0xd073, 0xe70a, 0xdc0, 0x1, 0x0);
        gbc.writeMem(0xec14, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5f41);
        EXPECT(gbc.pc(), 0xec16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec14), 0xcb);
        EXPECT(gbc.readMem(0xec15), 0x81);
        // CB 81 0063
        gbc.setState(0xa95b, 0x77c7, 0x72a0, 0x1588, 0x911c, 0xa6c8, 0x0, 0x1);
        gbc.writeMem(0xa95b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x77c7);
        EXPECT(gbc.pc(), 0xa95d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa95b), 0xcb);
        EXPECT(gbc.readMem(0xa95c), 0x81);
        // CB 81 0065
        gbc.setState(0x3703, 0xca52, 0x3b00, 0x448d, 0xd2f8, 0x7d8b, 0x1, 0x0);
        gbc.writeMem(0x3703, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xca52);
        EXPECT(gbc.pc(), 0x3705);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0066
        gbc.setState(0xce86, 0x4095, 0x5320, 0xd727, 0x69ae, 0xba04, 0x0, 0x1);
        gbc.writeMem(0xce86, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x4095);
        EXPECT(gbc.pc(), 0xce88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce86), 0xcb);
        EXPECT(gbc.readMem(0xce87), 0x81);
        // CB 81 0067
        gbc.setState(0xbc90, 0x5bc1, 0x2ca0, 0xafde, 0x3a38, 0xe8a5, 0x1, 0x1);
        gbc.writeMem(0xbc90, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5bc1);
        EXPECT(gbc.pc(), 0xbc92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc90), 0xcb);
        EXPECT(gbc.readMem(0xbc91), 0x81);
        // CB 81 0068
        gbc.setState(0xaac1, 0x3bf, 0x8ae0, 0x36de, 0xf8d, 0xc093, 0x1, 0x1);
        gbc.writeMem(0xaac1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3bf);
        EXPECT(gbc.pc(), 0xaac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaac1), 0xcb);
        EXPECT(gbc.readMem(0xaac2), 0x81);
        // CB 81 0069
        gbc.setState(0x9d2f, 0xc0b2, 0xa660, 0xb171, 0x869, 0x9e67, 0x1, 0x0);
        gbc.writeMem(0x9d2f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc0b2);
        EXPECT(gbc.pc(), 0x9d31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d2f), 0xcb);
        EXPECT(gbc.readMem(0x9d30), 0x81);
        // CB 81 006A
        gbc.setState(0x3cc, 0x60a8, 0x5130, 0x53d7, 0x30a, 0x69ba, 0x0, 0x1);
        gbc.writeMem(0x3cc, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x60a8);
        EXPECT(gbc.pc(), 0x3ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 006B
        gbc.setState(0x527f, 0x6d29, 0x7260, 0x7358, 0xda4a, 0x2b27, 0x1, 0x0);
        gbc.writeMem(0x527f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6d29);
        EXPECT(gbc.pc(), 0x5281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 006C
        gbc.setState(0x68aa, 0x670a, 0xfa30, 0x49ae, 0xacc, 0x6341, 0x0, 0x0);
        gbc.writeMem(0x68aa, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x670a);
        EXPECT(gbc.pc(), 0x68ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 006D
        gbc.setState(0xe3e2, 0x9b46, 0xa0f0, 0x2463, 0x72ea, 0x78d, 0x0, 0x0);
        gbc.writeMem(0xe3e2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9b46);
        EXPECT(gbc.pc(), 0xe3e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3e2), 0xcb);
        EXPECT(gbc.readMem(0xe3e3), 0x81);
        // CB 81 006E
        gbc.setState(0x81a9, 0x8d1d, 0x8c30, 0x3182, 0xb608, 0x264d, 0x1, 0x1);
        gbc.writeMem(0x81a9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8d1d);
        EXPECT(gbc.pc(), 0x81ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81a9), 0xcb);
        EXPECT(gbc.readMem(0x81aa), 0x81);
        // CB 81 006F
        gbc.setState(0x4b0f, 0x5457, 0x9b70, 0x3679, 0x2b5f, 0xca0, 0x1, 0x0);
        gbc.writeMem(0x4b0f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5457);
        EXPECT(gbc.pc(), 0x4b11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0071
        gbc.setState(0xb76f, 0xf566, 0xb840, 0x7b5c, 0xd47b, 0x54b9, 0x0, 0x0);
        gbc.writeMem(0xb76f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf566);
        EXPECT(gbc.pc(), 0xb771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb76f), 0xcb);
        EXPECT(gbc.readMem(0xb770), 0x81);
        // CB 81 0072
        gbc.setState(0xe5ab, 0x3fa1, 0x13d0, 0x2ce2, 0x98f4, 0xe72b, 0x1, 0x0);
        gbc.writeMem(0xe5ab, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3fa1);
        EXPECT(gbc.pc(), 0xe5ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5ab), 0xcb);
        EXPECT(gbc.readMem(0xe5ac), 0x81);
        // CB 81 0073
        gbc.setState(0x46a5, 0x405d, 0xe2e0, 0x1ddc, 0x8aaa, 0x1809, 0x1, 0x1);
        gbc.writeMem(0x46a5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x405d);
        EXPECT(gbc.pc(), 0x46a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0074
        gbc.setState(0xc6ac, 0x36e5, 0x51f0, 0xe7da, 0xee67, 0x827b, 0x0, 0x1);
        gbc.writeMem(0xc6ac, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x36e5);
        EXPECT(gbc.pc(), 0xc6ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ac), 0xcb);
        EXPECT(gbc.readMem(0xc6ad), 0x81);
        // CB 81 0075
        gbc.setState(0xd226, 0xf4bc, 0x3550, 0x7864, 0x4d5f, 0xb0b4, 0x1, 0x1);
        gbc.writeMem(0xd226, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf4bc);
        EXPECT(gbc.pc(), 0xd228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd226), 0xcb);
        EXPECT(gbc.readMem(0xd227), 0x81);
        // CB 81 0076
        gbc.setState(0xbe18, 0x603a, 0x90e0, 0x72d, 0x1489, 0x6d0c, 0x1, 0x0);
        gbc.writeMem(0xbe18, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x603a);
        EXPECT(gbc.pc(), 0xbe1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe18), 0xcb);
        EXPECT(gbc.readMem(0xbe19), 0x81);
        // CB 81 0077
        gbc.setState(0xd39c, 0x22ba, 0xc0b0, 0xf20d, 0x341, 0xf3b3, 0x1, 0x0);
        gbc.writeMem(0xd39c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x22ba);
        EXPECT(gbc.pc(), 0xd39e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd39c), 0xcb);
        EXPECT(gbc.readMem(0xd39d), 0x81);
        // CB 81 0078
        gbc.setState(0x9765, 0xa096, 0x1ef0, 0x7e48, 0x57af, 0x6d90, 0x1, 0x0);
        gbc.writeMem(0x9765, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa096);
        EXPECT(gbc.pc(), 0x9767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9765), 0xcb);
        EXPECT(gbc.readMem(0x9766), 0x81);
        // CB 81 0079
        gbc.setState(0x82fb, 0x91ab, 0xddf0, 0xcca9, 0x84b2, 0xde51, 0x1, 0x0);
        gbc.writeMem(0x82fb, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x91ab);
        EXPECT(gbc.pc(), 0x82fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82fb), 0xcb);
        EXPECT(gbc.readMem(0x82fc), 0x81);
        // CB 81 007A
        gbc.setState(0x401f, 0x796f, 0x6330, 0x69f4, 0xab4, 0xce41, 0x1, 0x0);
        gbc.writeMem(0x401f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x796f);
        EXPECT(gbc.pc(), 0x4021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 007C
        gbc.setState(0xcf15, 0xe6f, 0x97a0, 0xfc2d, 0x1581, 0x9c9a, 0x1, 0x0);
        gbc.writeMem(0xcf15, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe6f);
        EXPECT(gbc.pc(), 0xcf17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf15), 0xcb);
        EXPECT(gbc.readMem(0xcf16), 0x81);
        // CB 81 007D
        gbc.setState(0x94ac, 0xdb28, 0xae90, 0x6c0d, 0x8246, 0x1520, 0x0, 0x0);
        gbc.writeMem(0x94ac, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xdb28);
        EXPECT(gbc.pc(), 0x94ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ac), 0xcb);
        EXPECT(gbc.readMem(0x94ad), 0x81);
        // CB 81 007E
        gbc.setState(0x871e, 0x56cf, 0xd30, 0xf297, 0x61bd, 0x9d57, 0x1, 0x0);
        gbc.writeMem(0x871e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x56cf);
        EXPECT(gbc.pc(), 0x8720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x871e), 0xcb);
        EXPECT(gbc.readMem(0x871f), 0x81);
        // CB 81 007F
        gbc.setState(0x8ced, 0xc7af, 0x5a90, 0x62e5, 0xf71, 0x152f, 0x0, 0x0);
        gbc.writeMem(0x8ced, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc7af);
        EXPECT(gbc.pc(), 0x8cef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ced), 0xcb);
        EXPECT(gbc.readMem(0x8cee), 0x81);
        // CB 81 0080
        gbc.setState(0x9b5f, 0xeb2a, 0x35d0, 0x7b93, 0x138, 0x3f0f, 0x0, 0x0);
        gbc.writeMem(0x9b5f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xeb2a);
        EXPECT(gbc.pc(), 0x9b61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b5f), 0xcb);
        EXPECT(gbc.readMem(0x9b60), 0x81);
        // CB 81 0081
        gbc.setState(0xcd23, 0xad8b, 0xa5a0, 0xa2b4, 0xd1be, 0x57d7, 0x0, 0x1);
        gbc.writeMem(0xcd23, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xad8b);
        EXPECT(gbc.pc(), 0xcd25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd23), 0xcb);
        EXPECT(gbc.readMem(0xcd24), 0x81);
        // CB 81 0082
        gbc.setState(0x5970, 0x68a6, 0xfec0, 0x6e67, 0x885d, 0x8532, 0x0, 0x0);
        gbc.writeMem(0x5970, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x68a6);
        EXPECT(gbc.pc(), 0x5972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0083
        gbc.setState(0xcb22, 0xfa2f, 0x1dd0, 0xa4df, 0x63e, 0xe22e, 0x1, 0x1);
        gbc.writeMem(0xcb22, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xfa2f);
        EXPECT(gbc.pc(), 0xcb24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb22), 0xcb);
        EXPECT(gbc.readMem(0xcb23), 0x81);
        // CB 81 0084
        gbc.setState(0x1799, 0xef6, 0x94b0, 0x2126, 0x4447, 0x3e2e, 0x1, 0x0);
        gbc.writeMem(0x1799, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xef6);
        EXPECT(gbc.pc(), 0x179b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0085
        gbc.setState(0x8491, 0x1a6a, 0x61d0, 0x87cc, 0x6650, 0x9e0e, 0x1, 0x0);
        gbc.writeMem(0x8491, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1a6a);
        EXPECT(gbc.pc(), 0x8493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8491), 0xcb);
        EXPECT(gbc.readMem(0x8492), 0x81);
        // CB 81 0087
        gbc.setState(0xbc6b, 0x7038, 0x5970, 0x6140, 0x85b7, 0x8fed, 0x0, 0x0);
        gbc.writeMem(0xbc6b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7038);
        EXPECT(gbc.pc(), 0xbc6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc6b), 0xcb);
        EXPECT(gbc.readMem(0xbc6c), 0x81);
        // CB 81 0088
        gbc.setState(0x29a0, 0x55e6, 0x8c60, 0x57a3, 0xc753, 0x2336, 0x0, 0x1);
        gbc.writeMem(0x29a0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x55e6);
        EXPECT(gbc.pc(), 0x29a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0089
        gbc.setState(0x4428, 0x257c, 0x73b0, 0xa1aa, 0x8693, 0x603, 0x1, 0x0);
        gbc.writeMem(0x4428, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x257c);
        EXPECT(gbc.pc(), 0x442a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 008A
        gbc.setState(0x479c, 0x88f2, 0xefb0, 0x2c56, 0xdf03, 0xcdc3, 0x1, 0x1);
        gbc.writeMem(0x479c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x88f2);
        EXPECT(gbc.pc(), 0x479e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 008B
        gbc.setState(0xea90, 0xac8, 0x1b00, 0xfc50, 0x2881, 0xb1ec, 0x1, 0x1);
        gbc.writeMem(0xea90, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xac8);
        EXPECT(gbc.pc(), 0xea92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea90), 0xcb);
        EXPECT(gbc.readMem(0xea91), 0x81);
        // CB 81 008C
        gbc.setState(0xa12b, 0xca5c, 0x120, 0x9d86, 0xf45a, 0x8062, 0x1, 0x1);
        gbc.writeMem(0xa12b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xca5c);
        EXPECT(gbc.pc(), 0xa12d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa12b), 0xcb);
        EXPECT(gbc.readMem(0xa12c), 0x81);
        // CB 81 008D
        gbc.setState(0x12c0, 0x2dee, 0xf270, 0xd372, 0xbcf3, 0x2a7, 0x0, 0x1);
        gbc.writeMem(0x12c0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2dee);
        EXPECT(gbc.pc(), 0x12c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 008E
        gbc.setState(0x6fbc, 0xc971, 0xb700, 0x4852, 0xfcf7, 0xadd, 0x1, 0x0);
        gbc.writeMem(0x6fbc, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc971);
        EXPECT(gbc.pc(), 0x6fbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 008F
        gbc.setState(0x4353, 0x9b8e, 0x2490, 0xcf5e, 0x9716, 0xd5ca, 0x1, 0x0);
        gbc.writeMem(0x4353, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9b8e);
        EXPECT(gbc.pc(), 0x4355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0090
        gbc.setState(0xea22, 0x9faf, 0xb640, 0xf345, 0x891e, 0x8cef, 0x1, 0x0);
        gbc.writeMem(0xea22, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9faf);
        EXPECT(gbc.pc(), 0xea24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea22), 0xcb);
        EXPECT(gbc.readMem(0xea23), 0x81);
        // CB 81 0091
        gbc.setState(0x4133, 0x64a9, 0x9600, 0x25b6, 0x37ea, 0x3dd1, 0x1, 0x0);
        gbc.writeMem(0x4133, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x64a9);
        EXPECT(gbc.pc(), 0x4135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0092
        gbc.setState(0x1ec7, 0x100e, 0x8c10, 0xd348, 0xb2c8, 0x46eb, 0x1, 0x0);
        gbc.writeMem(0x1ec7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x100e);
        EXPECT(gbc.pc(), 0x1ec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0094
        gbc.setState(0xd7f7, 0xcbde, 0xca50, 0xc73b, 0x16c1, 0xf460, 0x1, 0x1);
        gbc.writeMem(0xd7f7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xcbde);
        EXPECT(gbc.pc(), 0xd7f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f7), 0xcb);
        EXPECT(gbc.readMem(0xd7f8), 0x81);
        // CB 81 0095
        gbc.setState(0x427d, 0x4222, 0x6980, 0x663c, 0x4d5e, 0xce2f, 0x1, 0x1);
        gbc.writeMem(0x427d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4222);
        EXPECT(gbc.pc(), 0x427f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0096
        gbc.setState(0x8c84, 0xa5e0, 0xf390, 0x9a63, 0xc024, 0xc22, 0x0, 0x0);
        gbc.writeMem(0x8c84, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa5e0);
        EXPECT(gbc.pc(), 0x8c86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c84), 0xcb);
        EXPECT(gbc.readMem(0x8c85), 0x81);
        // CB 81 0097
        gbc.setState(0xb765, 0xe6a9, 0x8da0, 0xb53a, 0xb218, 0xa7a9, 0x1, 0x1);
        gbc.writeMem(0xb765, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe6a9);
        EXPECT(gbc.pc(), 0xb767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb765), 0xcb);
        EXPECT(gbc.readMem(0xb766), 0x81);
        // CB 81 0098
        gbc.setState(0x6734, 0x279, 0x4d30, 0x600, 0x6558, 0x2be8, 0x0, 0x0);
        gbc.writeMem(0x6734, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x279);
        EXPECT(gbc.pc(), 0x6736);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0099
        gbc.setState(0x7f6a, 0xaf92, 0x37d0, 0xe131, 0x8861, 0xc059, 0x1, 0x0);
        gbc.writeMem(0x7f6a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xaf92);
        EXPECT(gbc.pc(), 0x7f6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 009A
        gbc.setState(0xc009, 0x6d6c, 0x9a70, 0x5efe, 0x621d, 0xfafe, 0x0, 0x0);
        gbc.writeMem(0xc009, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6d6c);
        EXPECT(gbc.pc(), 0xc00b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc009), 0xcb);
        EXPECT(gbc.readMem(0xc00a), 0x81);
        // CB 81 009B
        gbc.setState(0xcae4, 0x67e1, 0xc2e0, 0x9be, 0x879d, 0x318d, 0x1, 0x1);
        gbc.writeMem(0xcae4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x67e1);
        EXPECT(gbc.pc(), 0xcae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcae4), 0xcb);
        EXPECT(gbc.readMem(0xcae5), 0x81);
        // CB 81 009C
        gbc.setState(0xc806, 0x4581, 0xf5b0, 0xbb59, 0x8684, 0x4383, 0x1, 0x0);
        gbc.writeMem(0xc806, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4581);
        EXPECT(gbc.pc(), 0xc808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc806), 0xcb);
        EXPECT(gbc.readMem(0xc807), 0x81);
        // CB 81 009D
        gbc.setState(0x67a4, 0x8498, 0xab30, 0x2e2, 0x20b1, 0x6c86, 0x0, 0x1);
        gbc.writeMem(0x67a4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8498);
        EXPECT(gbc.pc(), 0x67a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 009E
        gbc.setState(0x4d12, 0x158, 0x21c0, 0xcb11, 0x4e87, 0xc032, 0x1, 0x0);
        gbc.writeMem(0x4d12, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x158);
        EXPECT(gbc.pc(), 0x4d14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 009F
        gbc.setState(0xc5b2, 0x522c, 0x1160, 0xd060, 0xcf87, 0x3a8, 0x1, 0x0);
        gbc.writeMem(0xc5b2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x522c);
        EXPECT(gbc.pc(), 0xc5b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b2), 0xcb);
        EXPECT(gbc.readMem(0xc5b3), 0x81);
        // CB 81 00A0
        gbc.setState(0x838, 0x79ee, 0x6b70, 0x2f1f, 0xfe80, 0x2961, 0x1, 0x0);
        gbc.writeMem(0x838, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x79ee);
        EXPECT(gbc.pc(), 0x83a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00A1
        gbc.setState(0x4b87, 0xc671, 0x4960, 0xd26f, 0x9ebf, 0x391f, 0x1, 0x1);
        gbc.writeMem(0x4b87, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc671);
        EXPECT(gbc.pc(), 0x4b89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00A3
        gbc.setState(0x6444, 0x7528, 0x1400, 0x7935, 0xe075, 0xe2e2, 0x1, 0x0);
        gbc.writeMem(0x6444, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7528);
        EXPECT(gbc.pc(), 0x6446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00A4
        gbc.setState(0xc518, 0x3ae7, 0x43e0, 0xb42b, 0xb2b8, 0x4924, 0x0, 0x1);
        gbc.writeMem(0xc518, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3ae7);
        EXPECT(gbc.pc(), 0xc51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc518), 0xcb);
        EXPECT(gbc.readMem(0xc519), 0x81);
        // CB 81 00A5
        gbc.setState(0x8580, 0x296d, 0xd300, 0x1018, 0xe36b, 0xeb68, 0x1, 0x1);
        gbc.writeMem(0x8580, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x296d);
        EXPECT(gbc.pc(), 0x8582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8580), 0xcb);
        EXPECT(gbc.readMem(0x8581), 0x81);
        // CB 81 00A7
        gbc.setState(0x31b6, 0xccf2, 0xbf60, 0xba9, 0x1e13, 0x55d, 0x1, 0x1);
        gbc.writeMem(0x31b6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xccf2);
        EXPECT(gbc.pc(), 0x31b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00A8
        gbc.setState(0x883d, 0xc0c, 0x1d40, 0x9ae4, 0xbcd2, 0x3e7d, 0x1, 0x1);
        gbc.writeMem(0x883d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc0c);
        EXPECT(gbc.pc(), 0x883f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x883d), 0xcb);
        EXPECT(gbc.readMem(0x883e), 0x81);
        // CB 81 00A9
        gbc.setState(0x3040, 0x3de3, 0x9a00, 0xc4a6, 0x8569, 0x42e6, 0x0, 0x1);
        gbc.writeMem(0x3040, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3de3);
        EXPECT(gbc.pc(), 0x3042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00AA
        gbc.setState(0x7b65, 0xd493, 0xb940, 0x878a, 0x324f, 0x5ac0, 0x0, 0x0);
        gbc.writeMem(0x7b65, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd493);
        EXPECT(gbc.pc(), 0x7b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00AB
        gbc.setState(0x329e, 0x1b84, 0xc040, 0x34ab, 0x6b22, 0x9a39, 0x0, 0x1);
        gbc.writeMem(0x329e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1b84);
        EXPECT(gbc.pc(), 0x32a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00AC
        gbc.setState(0x5c12, 0x10ab, 0x2ca0, 0x9130, 0x9548, 0x8bb1, 0x1, 0x0);
        gbc.writeMem(0x5c12, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x10ab);
        EXPECT(gbc.pc(), 0x5c14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00AD
        gbc.setState(0x8120, 0xd2eb, 0x29a0, 0xd330, 0xba83, 0xf310, 0x1, 0x1);
        gbc.writeMem(0x8120, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd2eb);
        EXPECT(gbc.pc(), 0x8122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8120), 0xcb);
        EXPECT(gbc.readMem(0x8121), 0x81);
        // CB 81 00AE
        gbc.setState(0x929d, 0xa36f, 0x3ab0, 0x755e, 0xbf2a, 0x2698, 0x0, 0x1);
        gbc.writeMem(0x929d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa36f);
        EXPECT(gbc.pc(), 0x929f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x929d), 0xcb);
        EXPECT(gbc.readMem(0x929e), 0x81);
        // CB 81 00B0
        gbc.setState(0x3cbc, 0x7038, 0x37a0, 0x2e39, 0xd3f, 0xfad2, 0x0, 0x1);
        gbc.writeMem(0x3cbc, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7038);
        EXPECT(gbc.pc(), 0x3cbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00B1
        gbc.setState(0xa610, 0x8f0b, 0x82b0, 0x3f31, 0xb021, 0x6ea2, 0x0, 0x0);
        gbc.writeMem(0xa610, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8f0b);
        EXPECT(gbc.pc(), 0xa612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa610), 0xcb);
        EXPECT(gbc.readMem(0xa611), 0x81);
        // CB 81 00B2
        gbc.setState(0x8b84, 0xcf0c, 0x4880, 0x3182, 0x3fe9, 0x5632, 0x0, 0x0);
        gbc.writeMem(0x8b84, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xcf0c);
        EXPECT(gbc.pc(), 0x8b86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b84), 0xcb);
        EXPECT(gbc.readMem(0x8b85), 0x81);
        // CB 81 00B3
        gbc.setState(0x5272, 0x4530, 0x39e0, 0x3d58, 0xb67b, 0xd7dd, 0x1, 0x1);
        gbc.writeMem(0x5272, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4530);
        EXPECT(gbc.pc(), 0x5274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00B4
        gbc.setState(0x5f1b, 0xbd0a, 0xe210, 0xd53a, 0x12e7, 0x322c, 0x1, 0x1);
        gbc.writeMem(0x5f1b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbd0a);
        EXPECT(gbc.pc(), 0x5f1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00B5
        gbc.setState(0x5335, 0x2690, 0x6a20, 0x571a, 0x189e, 0x6767, 0x1, 0x1);
        gbc.writeMem(0x5335, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2690);
        EXPECT(gbc.pc(), 0x5337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00B6
        gbc.setState(0xd386, 0x5766, 0xc4d0, 0x93a, 0xdafd, 0xa8da, 0x1, 0x0);
        gbc.writeMem(0xd386, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5766);
        EXPECT(gbc.pc(), 0xd388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd386), 0xcb);
        EXPECT(gbc.readMem(0xd387), 0x81);
        // CB 81 00B7
        gbc.setState(0x6bf7, 0x9145, 0xd020, 0xf43b, 0x8e3a, 0x3789, 0x1, 0x0);
        gbc.writeMem(0x6bf7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9145);
        EXPECT(gbc.pc(), 0x6bf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00B8
        gbc.setState(0x493, 0x267, 0xc8b0, 0x8d24, 0x7dc3, 0xe7e, 0x0, 0x1);
        gbc.writeMem(0x493, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x267);
        EXPECT(gbc.pc(), 0x495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00B9
        gbc.setState(0xaf6c, 0x78b2, 0x4640, 0xafcd, 0x15a3, 0xbd31, 0x1, 0x1);
        gbc.writeMem(0xaf6c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x78b2);
        EXPECT(gbc.pc(), 0xaf6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf6c), 0xcb);
        EXPECT(gbc.readMem(0xaf6d), 0x81);
        // CB 81 00BA
        gbc.setState(0x9bd9, 0x6ce8, 0x4cc0, 0x7583, 0x1e2a, 0xab60, 0x1, 0x0);
        gbc.writeMem(0x9bd9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x6ce8);
        EXPECT(gbc.pc(), 0x9bdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bd9), 0xcb);
        EXPECT(gbc.readMem(0x9bda), 0x81);
        // CB 81 00BB
        gbc.setState(0x984c, 0xa5df, 0xad50, 0x17fe, 0xe10c, 0x173a, 0x1, 0x0);
        gbc.writeMem(0x984c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa5df);
        EXPECT(gbc.pc(), 0x984e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x984c), 0xcb);
        EXPECT(gbc.readMem(0x984d), 0x81);
        // CB 81 00BC
        gbc.setState(0x15bc, 0x198b, 0xd60, 0x483a, 0x5e66, 0x4fc2, 0x0, 0x1);
        gbc.writeMem(0x15bc, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x198b);
        EXPECT(gbc.pc(), 0x15be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00BD
        gbc.setState(0xb526, 0xdd49, 0xbbe0, 0x87, 0x8b66, 0x1b55, 0x0, 0x1);
        gbc.writeMem(0xb526, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xdd49);
        EXPECT(gbc.pc(), 0xb528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb526), 0xcb);
        EXPECT(gbc.readMem(0xb527), 0x81);
        // CB 81 00BF
        gbc.setState(0xdb8f, 0x8f17, 0x5560, 0xb8b3, 0x4c83, 0x5a39, 0x1, 0x0);
        gbc.writeMem(0xdb8f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8f17);
        EXPECT(gbc.pc(), 0xdb91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb8f), 0xcb);
        EXPECT(gbc.readMem(0xdb90), 0x81);
        // CB 81 00C0
        gbc.setState(0x8839, 0xd18b, 0xed40, 0x3435, 0x32b, 0x36eb, 0x1, 0x1);
        gbc.writeMem(0x8839, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd18b);
        EXPECT(gbc.pc(), 0x883b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8839), 0xcb);
        EXPECT(gbc.readMem(0x883a), 0x81);
        // CB 81 00C1
        gbc.setState(0xbb32, 0xfae, 0x6180, 0x4166, 0x843b, 0x7181, 0x1, 0x1);
        gbc.writeMem(0xbb32, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfae);
        EXPECT(gbc.pc(), 0xbb34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb32), 0xcb);
        EXPECT(gbc.readMem(0xbb33), 0x81);
        // CB 81 00C2
        gbc.setState(0xd559, 0xf36c, 0x5b10, 0xaa05, 0x832b, 0xd060, 0x1, 0x1);
        gbc.writeMem(0xd559, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf36c);
        EXPECT(gbc.pc(), 0xd55b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd559), 0xcb);
        EXPECT(gbc.readMem(0xd55a), 0x81);
        // CB 81 00C3
        gbc.setState(0xdd25, 0xc173, 0x1c60, 0xf2a4, 0xf3a4, 0x4cec, 0x1, 0x0);
        gbc.writeMem(0xdd25, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc173);
        EXPECT(gbc.pc(), 0xdd27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd25), 0xcb);
        EXPECT(gbc.readMem(0xdd26), 0x81);
        // CB 81 00C4
        gbc.setState(0xe84, 0x127f, 0xe3e0, 0xf301, 0x6e91, 0xdc0a, 0x1, 0x0);
        gbc.writeMem(0xe84, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x127f);
        EXPECT(gbc.pc(), 0xe86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00C5
        gbc.setState(0x5e6f, 0xad68, 0xb530, 0x1bc5, 0x60c5, 0x1cce, 0x1, 0x0);
        gbc.writeMem(0x5e6f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xad68);
        EXPECT(gbc.pc(), 0x5e71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00C7
        gbc.setState(0x9b03, 0xd78a, 0x5680, 0xfa1a, 0x3a95, 0xb93c, 0x0, 0x0);
        gbc.writeMem(0x9b03, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd78a);
        EXPECT(gbc.pc(), 0x9b05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b03), 0xcb);
        EXPECT(gbc.readMem(0x9b04), 0x81);
        // CB 81 00C8
        gbc.setState(0x9100, 0x206, 0x3c10, 0x554, 0x992e, 0x6d2b, 0x0, 0x1);
        gbc.writeMem(0x9100, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x206);
        EXPECT(gbc.pc(), 0x9102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9100), 0xcb);
        EXPECT(gbc.readMem(0x9101), 0x81);
        // CB 81 00C9
        gbc.setState(0x600d, 0x1564, 0xfe00, 0x707f, 0x1f0d, 0xd728, 0x0, 0x0);
        gbc.writeMem(0x600d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1564);
        EXPECT(gbc.pc(), 0x600f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00CA
        gbc.setState(0xb452, 0x4255, 0x6ca0, 0x9ee1, 0xa9de, 0xdac6, 0x0, 0x0);
        gbc.writeMem(0xb452, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4255);
        EXPECT(gbc.pc(), 0xb454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb452), 0xcb);
        EXPECT(gbc.readMem(0xb453), 0x81);
        // CB 81 00CB
        gbc.setState(0x8fe, 0x1ec8, 0x3340, 0xfbaa, 0x590a, 0xd43f, 0x0, 0x0);
        gbc.writeMem(0x8fe, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1ec8);
        EXPECT(gbc.pc(), 0x900);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00CC
        gbc.setState(0x3461, 0x2d6, 0xd3a0, 0x7029, 0x114c, 0x2d9, 0x0, 0x0);
        gbc.writeMem(0x3461, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2d6);
        EXPECT(gbc.pc(), 0x3463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00CD
        gbc.setState(0x64e8, 0x69b6, 0x96c0, 0xdb4e, 0x2e57, 0x86ca, 0x0, 0x0);
        gbc.writeMem(0x64e8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x69b6);
        EXPECT(gbc.pc(), 0x64ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00CE
        gbc.setState(0x1f2d, 0x5410, 0x4b00, 0xf9c, 0xee00, 0x8868, 0x1, 0x0);
        gbc.writeMem(0x1f2d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5410);
        EXPECT(gbc.pc(), 0x1f2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00CF
        gbc.setState(0x8ede, 0xf13d, 0xe960, 0x254c, 0x4290, 0x6dea, 0x0, 0x0);
        gbc.writeMem(0x8ede, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf13d);
        EXPECT(gbc.pc(), 0x8ee0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ede), 0xcb);
        EXPECT(gbc.readMem(0x8edf), 0x81);
        // CB 81 00D0
        gbc.setState(0xb177, 0x7edd, 0xe530, 0x7461, 0x2a47, 0x8ffc, 0x0, 0x1);
        gbc.writeMem(0xb177, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7edd);
        EXPECT(gbc.pc(), 0xb179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb177), 0xcb);
        EXPECT(gbc.readMem(0xb178), 0x81);
        // CB 81 00D1
        gbc.setState(0xdce8, 0x2911, 0xf20, 0xcadc, 0x2cab, 0xf973, 0x1, 0x1);
        gbc.writeMem(0xdce8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2911);
        EXPECT(gbc.pc(), 0xdcea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce8), 0xcb);
        EXPECT(gbc.readMem(0xdce9), 0x81);
        // CB 81 00D2
        gbc.setState(0x30f5, 0x6006, 0x2360, 0x49a8, 0xe133, 0xd65, 0x0, 0x0);
        gbc.writeMem(0x30f5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6006);
        EXPECT(gbc.pc(), 0x30f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00D3
        gbc.setState(0xcc69, 0x7c8c, 0x1d10, 0x27ce, 0x6552, 0x7098, 0x0, 0x1);
        gbc.writeMem(0xcc69, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7c8c);
        EXPECT(gbc.pc(), 0xcc6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc69), 0xcb);
        EXPECT(gbc.readMem(0xcc6a), 0x81);
        // CB 81 00D4
        gbc.setState(0x564a, 0x5df4, 0x620, 0x47f5, 0x2800, 0xfed5, 0x0, 0x1);
        gbc.writeMem(0x564a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5df4);
        EXPECT(gbc.pc(), 0x564c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00D5
        gbc.setState(0xc1b4, 0x7b42, 0xdad0, 0xd82d, 0x685f, 0xdc75, 0x1, 0x0);
        gbc.writeMem(0xc1b4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7b42);
        EXPECT(gbc.pc(), 0xc1b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1b4), 0xcb);
        EXPECT(gbc.readMem(0xc1b5), 0x81);
        // CB 81 00D6
        gbc.setState(0x2518, 0xa750, 0xc6d0, 0x7f6f, 0xadf4, 0xc7b1, 0x1, 0x0);
        gbc.writeMem(0x2518, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa750);
        EXPECT(gbc.pc(), 0x251a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00D7
        gbc.setState(0x76e5, 0xffdc, 0xe8e0, 0x4fc6, 0xbeba, 0x821, 0x0, 0x0);
        gbc.writeMem(0x76e5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xffdc);
        EXPECT(gbc.pc(), 0x76e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00D9
        gbc.setState(0x59de, 0xe38e, 0xb180, 0xbc6e, 0xae6f, 0x4e1c, 0x0, 0x0);
        gbc.writeMem(0x59de, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe38e);
        EXPECT(gbc.pc(), 0x59e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00DA
        gbc.setState(0x4133, 0x2b08, 0x85b0, 0x626e, 0x54a3, 0x738f, 0x0, 0x0);
        gbc.writeMem(0x4133, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2b08);
        EXPECT(gbc.pc(), 0x4135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00DB
        gbc.setState(0x6213, 0x7927, 0xd000, 0x5e02, 0xb66, 0x14a0, 0x0, 0x1);
        gbc.writeMem(0x6213, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7927);
        EXPECT(gbc.pc(), 0x6215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00DC
        gbc.setState(0x25a8, 0x98e, 0x8d90, 0xcbf1, 0xa362, 0x8e77, 0x0, 0x0);
        gbc.writeMem(0x25a8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x98e);
        EXPECT(gbc.pc(), 0x25aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00DD
        gbc.setState(0x1737, 0x103c, 0xb810, 0xf368, 0xa1b2, 0x1396, 0x0, 0x0);
        gbc.writeMem(0x1737, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x103c);
        EXPECT(gbc.pc(), 0x1739);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00DE
        gbc.setState(0xd51c, 0x30ff, 0x500, 0x75f9, 0x342a, 0xb564, 0x0, 0x1);
        gbc.writeMem(0xd51c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x30ff);
        EXPECT(gbc.pc(), 0xd51e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd51c), 0xcb);
        EXPECT(gbc.readMem(0xd51d), 0x81);
        // CB 81 00DF
        gbc.setState(0x47f2, 0x5568, 0xc890, 0x37d1, 0x8acb, 0xa2c4, 0x0, 0x0);
        gbc.writeMem(0x47f2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5568);
        EXPECT(gbc.pc(), 0x47f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00E0
        gbc.setState(0x9e6b, 0xb17e, 0xa140, 0x1c50, 0x3d33, 0xd3df, 0x0, 0x0);
        gbc.writeMem(0x9e6b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb17e);
        EXPECT(gbc.pc(), 0x9e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e6b), 0xcb);
        EXPECT(gbc.readMem(0x9e6c), 0x81);
        // CB 81 00E1
        gbc.setState(0x79c7, 0xf8d4, 0x5db0, 0x75b3, 0x2688, 0xa024, 0x1, 0x1);
        gbc.writeMem(0x79c7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf8d4);
        EXPECT(gbc.pc(), 0x79c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00E2
        gbc.setState(0x2b4c, 0x5f4, 0x36e0, 0x80e3, 0xe50e, 0x5972, 0x0, 0x1);
        gbc.writeMem(0x2b4c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5f4);
        EXPECT(gbc.pc(), 0x2b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00E3
        gbc.setState(0xe38a, 0xe62f, 0x34b0, 0xc284, 0x1954, 0xf851, 0x0, 0x1);
        gbc.writeMem(0xe38a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe62f);
        EXPECT(gbc.pc(), 0xe38c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe38a), 0xcb);
        EXPECT(gbc.readMem(0xe38b), 0x81);
        // CB 81 00E4
        gbc.setState(0x3059, 0x2a97, 0x10, 0x654e, 0xd7b7, 0xe2e6, 0x1, 0x1);
        gbc.writeMem(0x3059, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2a97);
        EXPECT(gbc.pc(), 0x305b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00E5
        gbc.setState(0x86b3, 0x557b, 0x320, 0x7752, 0xd6d, 0xa4a9, 0x1, 0x1);
        gbc.writeMem(0x86b3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x557b);
        EXPECT(gbc.pc(), 0x86b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b3), 0xcb);
        EXPECT(gbc.readMem(0x86b4), 0x81);
        // CB 81 00E6
        gbc.setState(0x911f, 0x227c, 0x400, 0x95ce, 0xdd81, 0x117c, 0x1, 0x1);
        gbc.writeMem(0x911f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x227c);
        EXPECT(gbc.pc(), 0x9121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x911f), 0xcb);
        EXPECT(gbc.readMem(0x9120), 0x81);
        // CB 81 00E7
        gbc.setState(0xeb3b, 0x5c0e, 0x8450, 0xcdf5, 0x521f, 0x9b44, 0x0, 0x0);
        gbc.writeMem(0xeb3b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5c0e);
        EXPECT(gbc.pc(), 0xeb3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb3b), 0xcb);
        EXPECT(gbc.readMem(0xeb3c), 0x81);
        // CB 81 00E8
        gbc.setState(0x4b26, 0x4bdd, 0x7d50, 0xc739, 0x5bc, 0xb462, 0x1, 0x0);
        gbc.writeMem(0x4b26, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4bdd);
        EXPECT(gbc.pc(), 0x4b28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00E9
        gbc.setState(0x3cbf, 0xd028, 0x6470, 0x7961, 0xdbea, 0xe397, 0x0, 0x1);
        gbc.writeMem(0x3cbf, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd028);
        EXPECT(gbc.pc(), 0x3cc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00EA
        gbc.setState(0x86aa, 0x7dc0, 0xf0, 0x8c04, 0x6592, 0xbba3, 0x0, 0x1);
        gbc.writeMem(0x86aa, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7dc0);
        EXPECT(gbc.pc(), 0x86ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86aa), 0xcb);
        EXPECT(gbc.readMem(0x86ab), 0x81);
        // CB 81 00EB
        gbc.setState(0xa965, 0x285a, 0xcea0, 0xc62d, 0xe360, 0x724a, 0x1, 0x1);
        gbc.writeMem(0xa965, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x285a);
        EXPECT(gbc.pc(), 0xa967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa965), 0xcb);
        EXPECT(gbc.readMem(0xa966), 0x81);
        // CB 81 00EC
        gbc.setState(0x8631, 0x23fd, 0x8470, 0x7de2, 0x7ba8, 0x7d3b, 0x1, 0x0);
        gbc.writeMem(0x8631, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x23fd);
        EXPECT(gbc.pc(), 0x8633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8631), 0xcb);
        EXPECT(gbc.readMem(0x8632), 0x81);
        // CB 81 00ED
        gbc.setState(0x56fb, 0xfeab, 0x56d0, 0xe4df, 0x432, 0xaa6c, 0x1, 0x0);
        gbc.writeMem(0x56fb, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfeab);
        EXPECT(gbc.pc(), 0x56fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00EE
        gbc.setState(0xe737, 0x48b8, 0x71f0, 0x3fc4, 0xe7ca, 0x4405, 0x0, 0x1);
        gbc.writeMem(0xe737, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x48b8);
        EXPECT(gbc.pc(), 0xe739);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe737), 0xcb);
        EXPECT(gbc.readMem(0xe738), 0x81);
        // CB 81 00EF
        gbc.setState(0x8753, 0xdaa2, 0xcc20, 0xd9c6, 0xb669, 0xbbb4, 0x1, 0x0);
        gbc.writeMem(0x8753, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdaa2);
        EXPECT(gbc.pc(), 0x8755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8753), 0xcb);
        EXPECT(gbc.readMem(0x8754), 0x81);
        // CB 81 00F0
        gbc.setState(0x932c, 0xeba4, 0x64b0, 0xd641, 0xf87b, 0x2359, 0x0, 0x0);
        gbc.writeMem(0x932c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xeba4);
        EXPECT(gbc.pc(), 0x932e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x932c), 0xcb);
        EXPECT(gbc.readMem(0x932d), 0x81);
        // CB 81 00F1
        gbc.setState(0xed4d, 0x5d68, 0x9d40, 0xe4f5, 0x58dd, 0x62ac, 0x0, 0x1);
        gbc.writeMem(0xed4d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5d68);
        EXPECT(gbc.pc(), 0xed4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed4d), 0xcb);
        EXPECT(gbc.readMem(0xed4e), 0x81);
        // CB 81 00F2
        gbc.setState(0x402f, 0x818a, 0xd7e0, 0xf4fa, 0x64b2, 0xd378, 0x1, 0x0);
        gbc.writeMem(0x402f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x818a);
        EXPECT(gbc.pc(), 0x4031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00F3
        gbc.setState(0x5852, 0xdb22, 0x50a0, 0x4913, 0x6636, 0xb47b, 0x0, 0x1);
        gbc.writeMem(0x5852, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xdb22);
        EXPECT(gbc.pc(), 0x5854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00F4
        gbc.setState(0xeeb3, 0x5f45, 0x6500, 0x4e83, 0x9c9d, 0xadae, 0x0, 0x1);
        gbc.writeMem(0xeeb3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5f45);
        EXPECT(gbc.pc(), 0xeeb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeb3), 0xcb);
        EXPECT(gbc.readMem(0xeeb4), 0x81);
        // CB 81 00F5
        gbc.setState(0x96e8, 0x4230, 0xba60, 0xef37, 0x8f4c, 0x216e, 0x1, 0x1);
        gbc.writeMem(0x96e8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4230);
        EXPECT(gbc.pc(), 0x96ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96e8), 0xcb);
        EXPECT(gbc.readMem(0x96e9), 0x81);
        // CB 81 00F6
        gbc.setState(0xe18d, 0xa90d, 0xc850, 0x980, 0xa77, 0x9f1a, 0x1, 0x1);
        gbc.writeMem(0xe18d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa90d);
        EXPECT(gbc.pc(), 0xe18f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe18d), 0xcb);
        EXPECT(gbc.readMem(0xe18e), 0x81);
        // CB 81 00F7
        gbc.setState(0x2455, 0xd8ae, 0xe2b0, 0x1911, 0xb5ec, 0x9478, 0x1, 0x0);
        gbc.writeMem(0x2455, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd8ae);
        EXPECT(gbc.pc(), 0x2457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00F8
        gbc.setState(0x9709, 0x682c, 0x83d0, 0x8cfd, 0xa476, 0x6c4f, 0x1, 0x1);
        gbc.writeMem(0x9709, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x682c);
        EXPECT(gbc.pc(), 0x970b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9709), 0xcb);
        EXPECT(gbc.readMem(0x970a), 0x81);
        // CB 81 00F9
        gbc.setState(0x621a, 0x3faa, 0x49a0, 0x36eb, 0x95da, 0xf168, 0x1, 0x0);
        gbc.writeMem(0x621a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3faa);
        EXPECT(gbc.pc(), 0x621c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00FA
        gbc.setState(0x531c, 0x687a, 0xc210, 0x24c, 0xa309, 0xa3c8, 0x0, 0x1);
        gbc.writeMem(0x531c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x687a);
        EXPECT(gbc.pc(), 0x531e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00FB
        gbc.setState(0xa20a, 0x3bfa, 0x64a0, 0xa570, 0x147e, 0xe1e1, 0x1, 0x1);
        gbc.writeMem(0xa20a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3bfa);
        EXPECT(gbc.pc(), 0xa20c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa20a), 0xcb);
        EXPECT(gbc.readMem(0xa20b), 0x81);
        // CB 81 00FC
        gbc.setState(0xc33c, 0x85e, 0x84a0, 0xbf76, 0x73e7, 0xa2e8, 0x1, 0x1);
        gbc.writeMem(0xc33c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x85e);
        EXPECT(gbc.pc(), 0xc33e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc33c), 0xcb);
        EXPECT(gbc.readMem(0xc33d), 0x81);
        // CB 81 00FD
        gbc.setState(0x224b, 0x885f, 0x2190, 0xcadd, 0x6bb0, 0xb133, 0x0, 0x1);
        gbc.writeMem(0x224b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x885f);
        EXPECT(gbc.pc(), 0x224d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 00FE
        gbc.setState(0x78b2, 0xf84e, 0x4020, 0x7d1d, 0x102e, 0xe5f7, 0x1, 0x1);
        gbc.writeMem(0x78b2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf84e);
        EXPECT(gbc.pc(), 0x78b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 00FF
        gbc.setState(0x3a79, 0x387e, 0x61d0, 0x8e55, 0x544e, 0x9b10, 0x1, 0x1);
        gbc.writeMem(0x3a79, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x387e);
        EXPECT(gbc.pc(), 0x3a7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0100
        gbc.setState(0x2e25, 0x7298, 0x4580, 0x5d50, 0x1916, 0xaeba, 0x1, 0x1);
        gbc.writeMem(0x2e25, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7298);
        EXPECT(gbc.pc(), 0x2e27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0101
        gbc.setState(0xd408, 0x981a, 0x2930, 0xe754, 0xde71, 0xc17f, 0x1, 0x1);
        gbc.writeMem(0xd408, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x981a);
        EXPECT(gbc.pc(), 0xd40a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd408), 0xcb);
        EXPECT(gbc.readMem(0xd409), 0x81);
        // CB 81 0102
        gbc.setState(0xbc35, 0x9865, 0x79a0, 0xf601, 0x3089, 0xab58, 0x0, 0x0);
        gbc.writeMem(0xbc35, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9865);
        EXPECT(gbc.pc(), 0xbc37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc35), 0xcb);
        EXPECT(gbc.readMem(0xbc36), 0x81);
        // CB 81 0103
        gbc.setState(0xc89, 0xe7f6, 0xce20, 0x9b70, 0x8e49, 0x222b, 0x0, 0x1);
        gbc.writeMem(0xc89, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe7f6);
        EXPECT(gbc.pc(), 0xc8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0104
        gbc.setState(0x835c, 0x9ec9, 0xa7d0, 0x1e8c, 0x99b2, 0xc484, 0x1, 0x1);
        gbc.writeMem(0x835c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9ec9);
        EXPECT(gbc.pc(), 0x835e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x835c), 0xcb);
        EXPECT(gbc.readMem(0x835d), 0x81);
        // CB 81 0105
        gbc.setState(0x4516, 0x52b7, 0x49b0, 0x4aa7, 0x8e4c, 0x1, 0x0, 0x0);
        gbc.writeMem(0x4516, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x52b7);
        EXPECT(gbc.pc(), 0x4518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0106
        gbc.setState(0xbf7b, 0x92f0, 0x90c0, 0x8e74, 0x32e, 0xe37f, 0x1, 0x1);
        gbc.writeMem(0xbf7b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x92f0);
        EXPECT(gbc.pc(), 0xbf7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf7b), 0xcb);
        EXPECT(gbc.readMem(0xbf7c), 0x81);
        // CB 81 0107
        gbc.setState(0xca2f, 0x735e, 0x2910, 0x3946, 0xe327, 0xc531, 0x0, 0x0);
        gbc.writeMem(0xca2f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x735e);
        EXPECT(gbc.pc(), 0xca31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca2f), 0xcb);
        EXPECT(gbc.readMem(0xca30), 0x81);
        // CB 81 0108
        gbc.setState(0xd1e3, 0x7af4, 0x910, 0xd8ca, 0x5563, 0x2a94, 0x1, 0x1);
        gbc.writeMem(0xd1e3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7af4);
        EXPECT(gbc.pc(), 0xd1e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1e3), 0xcb);
        EXPECT(gbc.readMem(0xd1e4), 0x81);
        // CB 81 0109
        gbc.setState(0xee0, 0xfd15, 0xad30, 0xbbd3, 0x6bc5, 0x228b, 0x1, 0x0);
        gbc.writeMem(0xee0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xfd15);
        EXPECT(gbc.pc(), 0xee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 010A
        gbc.setState(0x729a, 0x828f, 0xaeb0, 0x2c09, 0xad5e, 0xcfd8, 0x1, 0x1);
        gbc.writeMem(0x729a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x828f);
        EXPECT(gbc.pc(), 0x729c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 010B
        gbc.setState(0xd3f6, 0x6c8c, 0x28e0, 0x9421, 0x790b, 0xe9a7, 0x0, 0x0);
        gbc.writeMem(0xd3f6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6c8c);
        EXPECT(gbc.pc(), 0xd3f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3f6), 0xcb);
        EXPECT(gbc.readMem(0xd3f7), 0x81);
        // CB 81 010C
        gbc.setState(0xc0de, 0x8b66, 0xd8f0, 0x2551, 0xdabe, 0xec4a, 0x0, 0x1);
        gbc.writeMem(0xc0de, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8b66);
        EXPECT(gbc.pc(), 0xc0e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0de), 0xcb);
        EXPECT(gbc.readMem(0xc0df), 0x81);
        // CB 81 010D
        gbc.setState(0x29c8, 0xe957, 0xdb70, 0xf252, 0xe420, 0xe410, 0x1, 0x1);
        gbc.writeMem(0x29c8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe957);
        EXPECT(gbc.pc(), 0x29ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 010F
        gbc.setState(0x1a3, 0x820, 0xa790, 0xa697, 0x7707, 0xa0d4, 0x0, 0x0);
        gbc.writeMem(0x1a3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x820);
        EXPECT(gbc.pc(), 0x1a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0110
        gbc.setState(0x1776, 0xe5d9, 0xd250, 0x7576, 0x867a, 0xc750, 0x0, 0x1);
        gbc.writeMem(0x1776, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe5d9);
        EXPECT(gbc.pc(), 0x1778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0111
        gbc.setState(0xc466, 0x3319, 0x9ff0, 0x9d6e, 0xd789, 0xd02c, 0x1, 0x1);
        gbc.writeMem(0xc466, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3319);
        EXPECT(gbc.pc(), 0xc468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc466), 0xcb);
        EXPECT(gbc.readMem(0xc467), 0x81);
        // CB 81 0112
        gbc.setState(0xc940, 0x12f5, 0x72f0, 0xd6f1, 0x8652, 0x27a4, 0x0, 0x1);
        gbc.writeMem(0xc940, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x12f5);
        EXPECT(gbc.pc(), 0xc942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc940), 0xcb);
        EXPECT(gbc.readMem(0xc941), 0x81);
        // CB 81 0113
        gbc.setState(0xb758, 0xe7f9, 0x1710, 0xde7b, 0xed80, 0x4060, 0x1, 0x0);
        gbc.writeMem(0xb758, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe7f9);
        EXPECT(gbc.pc(), 0xb75a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb758), 0xcb);
        EXPECT(gbc.readMem(0xb759), 0x81);
        // CB 81 0115
        gbc.setState(0x8f6c, 0x927a, 0x9a30, 0x4ddf, 0x3ea, 0xacbf, 0x1, 0x0);
        gbc.writeMem(0x8f6c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x927a);
        EXPECT(gbc.pc(), 0x8f6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f6c), 0xcb);
        EXPECT(gbc.readMem(0x8f6d), 0x81);
        // CB 81 0117
        gbc.setState(0xd1d3, 0x63e4, 0xeb30, 0xbf11, 0x8134, 0xd5fc, 0x0, 0x0);
        gbc.writeMem(0xd1d3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x63e4);
        EXPECT(gbc.pc(), 0xd1d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1d3), 0xcb);
        EXPECT(gbc.readMem(0xd1d4), 0x81);
        // CB 81 0119
        gbc.setState(0xa459, 0x1d2e, 0x6f70, 0xad30, 0xc247, 0x5573, 0x1, 0x0);
        gbc.writeMem(0xa459, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1d2e);
        EXPECT(gbc.pc(), 0xa45b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa459), 0xcb);
        EXPECT(gbc.readMem(0xa45a), 0x81);
        // CB 81 011A
        gbc.setState(0xceb6, 0xf0a0, 0x8910, 0x8607, 0xf6bb, 0x81cf, 0x1, 0x0);
        gbc.writeMem(0xceb6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf0a0);
        EXPECT(gbc.pc(), 0xceb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb6), 0xcb);
        EXPECT(gbc.readMem(0xceb7), 0x81);
        // CB 81 011B
        gbc.setState(0x1a50, 0x537, 0xb160, 0x6735, 0xe46f, 0x852c, 0x0, 0x0);
        gbc.writeMem(0x1a50, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x537);
        EXPECT(gbc.pc(), 0x1a52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 011C
        gbc.setState(0x7693, 0x2ddd, 0x14d0, 0x60dd, 0x22bd, 0x5455, 0x1, 0x1);
        gbc.writeMem(0x7693, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2ddd);
        EXPECT(gbc.pc(), 0x7695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 011D
        gbc.setState(0xffe, 0xea5a, 0xffb0, 0x36d8, 0xc68e, 0x575b, 0x0, 0x0);
        gbc.writeMem(0xffe, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xea5a);
        EXPECT(gbc.pc(), 0x1000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 011E
        gbc.setState(0x48fb, 0x13a4, 0x7e40, 0x9695, 0xa192, 0x994e, 0x1, 0x0);
        gbc.writeMem(0x48fb, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x13a4);
        EXPECT(gbc.pc(), 0x48fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 011F
        gbc.setState(0xa6d6, 0x83fa, 0xe640, 0x8d2e, 0x452a, 0x2271, 0x1, 0x0);
        gbc.writeMem(0xa6d6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x83fa);
        EXPECT(gbc.pc(), 0xa6d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d6), 0xcb);
        EXPECT(gbc.readMem(0xa6d7), 0x81);
        // CB 81 0120
        gbc.setState(0xad11, 0xdb0c, 0x3380, 0x3929, 0x41ec, 0xd4fe, 0x0, 0x0);
        gbc.writeMem(0xad11, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xdb0c);
        EXPECT(gbc.pc(), 0xad13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad11), 0xcb);
        EXPECT(gbc.readMem(0xad12), 0x81);
        // CB 81 0121
        gbc.setState(0x8e39, 0xf8df, 0xd200, 0xb620, 0x24fe, 0x879f, 0x1, 0x1);
        gbc.writeMem(0x8e39, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf8df);
        EXPECT(gbc.pc(), 0x8e3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e39), 0xcb);
        EXPECT(gbc.readMem(0x8e3a), 0x81);
        // CB 81 0122
        gbc.setState(0x4c77, 0x53f3, 0xb880, 0xbb8a, 0x4135, 0x1b30, 0x0, 0x0);
        gbc.writeMem(0x4c77, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x53f3);
        EXPECT(gbc.pc(), 0x4c79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0123
        gbc.setState(0x1882, 0xb18c, 0x8a90, 0x452a, 0x7b27, 0x2c98, 0x0, 0x1);
        gbc.writeMem(0x1882, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb18c);
        EXPECT(gbc.pc(), 0x1884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0124
        gbc.setState(0x3074, 0xb021, 0x7420, 0xe05c, 0xbcb7, 0xf4b5, 0x1, 0x1);
        gbc.writeMem(0x3074, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb021);
        EXPECT(gbc.pc(), 0x3076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0125
        gbc.setState(0xddd9, 0x7f2a, 0x8a70, 0x9a81, 0x6d32, 0x541a, 0x0, 0x1);
        gbc.writeMem(0xddd9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x7f2a);
        EXPECT(gbc.pc(), 0xdddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd9), 0xcb);
        EXPECT(gbc.readMem(0xddda), 0x81);
        // CB 81 0126
        gbc.setState(0x975, 0x2764, 0x69a0, 0xe9a0, 0x4fe6, 0x8693, 0x1, 0x1);
        gbc.writeMem(0x975, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2764);
        EXPECT(gbc.pc(), 0x977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0127
        gbc.setState(0x583e, 0xc1de, 0xd150, 0x6319, 0x3af1, 0x2a51, 0x1, 0x1);
        gbc.writeMem(0x583e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc1de);
        EXPECT(gbc.pc(), 0x5840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0128
        gbc.setState(0x65a7, 0x965d, 0x2cc0, 0x961e, 0x9ecf, 0x4422, 0x1, 0x0);
        gbc.writeMem(0x65a7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x965d);
        EXPECT(gbc.pc(), 0x65a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0129
        gbc.setState(0x6b17, 0x26f8, 0x6980, 0xd0b5, 0x682d, 0x6185, 0x0, 0x0);
        gbc.writeMem(0x6b17, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x26f8);
        EXPECT(gbc.pc(), 0x6b19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 012A
        gbc.setState(0x794e, 0x36f3, 0x18b0, 0xd2f1, 0x48da, 0x986c, 0x0, 0x1);
        gbc.writeMem(0x794e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x36f3);
        EXPECT(gbc.pc(), 0x7950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 012B
        gbc.setState(0xf27, 0x678a, 0x5e50, 0x82c5, 0x7bd5, 0xbc04, 0x1, 0x0);
        gbc.writeMem(0xf27, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x678a);
        EXPECT(gbc.pc(), 0xf29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 012C
        gbc.setState(0xab5e, 0xe153, 0x36a0, 0xe7bc, 0x6fb1, 0xf868, 0x0, 0x0);
        gbc.writeMem(0xab5e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe153);
        EXPECT(gbc.pc(), 0xab60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab5e), 0xcb);
        EXPECT(gbc.readMem(0xab5f), 0x81);
        // CB 81 012D
        gbc.setState(0xae3d, 0xb705, 0xd2d0, 0xbb9d, 0x26b3, 0x2c0d, 0x0, 0x1);
        gbc.writeMem(0xae3d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb705);
        EXPECT(gbc.pc(), 0xae3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae3d), 0xcb);
        EXPECT(gbc.readMem(0xae3e), 0x81);
        // CB 81 012E
        gbc.setState(0x162a, 0x3c88, 0x9e10, 0x160b, 0x1e5b, 0xb4aa, 0x1, 0x1);
        gbc.writeMem(0x162a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3c88);
        EXPECT(gbc.pc(), 0x162c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 012F
        gbc.setState(0x521f, 0xb1f0, 0xe060, 0x121e, 0xa345, 0xa823, 0x1, 0x0);
        gbc.writeMem(0x521f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb1f0);
        EXPECT(gbc.pc(), 0x5221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0130
        gbc.setState(0x3c99, 0xd791, 0x1d80, 0x374d, 0xc441, 0x3491, 0x1, 0x0);
        gbc.writeMem(0x3c99, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd791);
        EXPECT(gbc.pc(), 0x3c9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0131
        gbc.setState(0x38db, 0x62c2, 0x2000, 0x2fdb, 0x3b16, 0x6aa1, 0x1, 0x1);
        gbc.writeMem(0x38db, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x62c2);
        EXPECT(gbc.pc(), 0x38dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0132
        gbc.setState(0x140b, 0xc40f, 0x32e0, 0xfee4, 0x2bdb, 0xbcb0, 0x1, 0x1);
        gbc.writeMem(0x140b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc40f);
        EXPECT(gbc.pc(), 0x140d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0133
        gbc.setState(0x6dec, 0xaaa7, 0x8e20, 0x4d40, 0xb521, 0x345, 0x0, 0x1);
        gbc.writeMem(0x6dec, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xaaa7);
        EXPECT(gbc.pc(), 0x6dee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0134
        gbc.setState(0xee49, 0xd176, 0x1520, 0xb5cc, 0x319f, 0x5fb0, 0x0, 0x0);
        gbc.writeMem(0xee49, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd176);
        EXPECT(gbc.pc(), 0xee4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee49), 0xcb);
        EXPECT(gbc.readMem(0xee4a), 0x81);
        // CB 81 0135
        gbc.setState(0x24d1, 0xfeea, 0x1630, 0x9525, 0x72c5, 0xeffa, 0x1, 0x1);
        gbc.writeMem(0x24d1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfeea);
        EXPECT(gbc.pc(), 0x24d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0136
        gbc.setState(0x7cb5, 0x90e0, 0x70d0, 0x8d46, 0x3ed, 0xea67, 0x0, 0x0);
        gbc.writeMem(0x7cb5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x90e0);
        EXPECT(gbc.pc(), 0x7cb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0137
        gbc.setState(0xd264, 0x5817, 0xe650, 0x6b88, 0x60fc, 0x7af, 0x0, 0x1);
        gbc.writeMem(0xd264, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5817);
        EXPECT(gbc.pc(), 0xd266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd264), 0xcb);
        EXPECT(gbc.readMem(0xd265), 0x81);
        // CB 81 0138
        gbc.setState(0x8e33, 0x103a, 0x500, 0x29bf, 0x2703, 0x677, 0x1, 0x1);
        gbc.writeMem(0x8e33, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x103a);
        EXPECT(gbc.pc(), 0x8e35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e33), 0xcb);
        EXPECT(gbc.readMem(0x8e34), 0x81);
        // CB 81 0139
        gbc.setState(0xa092, 0x7eb7, 0x2490, 0xaa89, 0x1606, 0x4600, 0x1, 0x1);
        gbc.writeMem(0xa092, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7eb7);
        EXPECT(gbc.pc(), 0xa094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa092), 0xcb);
        EXPECT(gbc.readMem(0xa093), 0x81);
        // CB 81 013A
        gbc.setState(0xd6c8, 0x158e, 0x7900, 0xad0e, 0x1060, 0x47b2, 0x0, 0x0);
        gbc.writeMem(0xd6c8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x158e);
        EXPECT(gbc.pc(), 0xd6ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c8), 0xcb);
        EXPECT(gbc.readMem(0xd6c9), 0x81);
        // CB 81 013B
        gbc.setState(0xa376, 0x9fde, 0x8c50, 0xf102, 0x18a0, 0xe3ea, 0x0, 0x0);
        gbc.writeMem(0xa376, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9fde);
        EXPECT(gbc.pc(), 0xa378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa376), 0xcb);
        EXPECT(gbc.readMem(0xa377), 0x81);
        // CB 81 013C
        gbc.setState(0xca5e, 0x4b16, 0x840, 0xe001, 0xea5e, 0x6c4f, 0x1, 0x1);
        gbc.writeMem(0xca5e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4b16);
        EXPECT(gbc.pc(), 0xca60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca5e), 0xcb);
        EXPECT(gbc.readMem(0xca5f), 0x81);
        // CB 81 013D
        gbc.setState(0xbb3a, 0x634f, 0xabc0, 0xf088, 0x9af5, 0xf789, 0x1, 0x1);
        gbc.writeMem(0xbb3a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x634f);
        EXPECT(gbc.pc(), 0xbb3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb3a), 0xcb);
        EXPECT(gbc.readMem(0xbb3b), 0x81);
        // CB 81 013E
        gbc.setState(0xeb54, 0xbf5b, 0x30d0, 0xface, 0xe659, 0x94d3, 0x0, 0x0);
        gbc.writeMem(0xeb54, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xbf5b);
        EXPECT(gbc.pc(), 0xeb56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb54), 0xcb);
        EXPECT(gbc.readMem(0xeb55), 0x81);
        // CB 81 013F
        gbc.setState(0xa6d6, 0x9e15, 0x9ea0, 0x6893, 0x7a74, 0x28eb, 0x0, 0x0);
        gbc.writeMem(0xa6d6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9e15);
        EXPECT(gbc.pc(), 0xa6d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d6), 0xcb);
        EXPECT(gbc.readMem(0xa6d7), 0x81);
        // CB 81 0140
        gbc.setState(0x6d7f, 0xd51a, 0x1140, 0xe6ad, 0x99b2, 0xce23, 0x1, 0x0);
        gbc.writeMem(0x6d7f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd51a);
        EXPECT(gbc.pc(), 0x6d81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0142
        gbc.setState(0xdca5, 0x2e57, 0xdaa0, 0xf509, 0xc914, 0xfbfb, 0x0, 0x0);
        gbc.writeMem(0xdca5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2e57);
        EXPECT(gbc.pc(), 0xdca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca5), 0xcb);
        EXPECT(gbc.readMem(0xdca6), 0x81);
        // CB 81 0143
        gbc.setState(0xe7cd, 0xf657, 0x65b0, 0x2db7, 0xdc48, 0x1178, 0x0, 0x0);
        gbc.writeMem(0xe7cd, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf657);
        EXPECT(gbc.pc(), 0xe7cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7cd), 0xcb);
        EXPECT(gbc.readMem(0xe7ce), 0x81);
        // CB 81 0144
        gbc.setState(0x49e0, 0x2455, 0x6a20, 0xc371, 0x5dfd, 0xfe59, 0x0, 0x1);
        gbc.writeMem(0x49e0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2455);
        EXPECT(gbc.pc(), 0x49e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0145
        gbc.setState(0xdc56, 0x4b87, 0xdf70, 0x76b7, 0x58b, 0x4a19, 0x0, 0x0);
        gbc.writeMem(0xdc56, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4b87);
        EXPECT(gbc.pc(), 0xdc58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc56), 0xcb);
        EXPECT(gbc.readMem(0xdc57), 0x81);
        // CB 81 0146
        gbc.setState(0x8989, 0x6d07, 0xea90, 0x5404, 0x69dc, 0x5d77, 0x0, 0x0);
        gbc.writeMem(0x8989, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6d07);
        EXPECT(gbc.pc(), 0x898b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8989), 0xcb);
        EXPECT(gbc.readMem(0x898a), 0x81);
        // CB 81 0147
        gbc.setState(0xe075, 0xea8e, 0x6220, 0xcff2, 0xdc72, 0xf58e, 0x0, 0x0);
        gbc.writeMem(0xe075, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xea8e);
        EXPECT(gbc.pc(), 0xe077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe075), 0xcb);
        EXPECT(gbc.readMem(0xe076), 0x81);
        // CB 81 0149
        gbc.setState(0x7607, 0x9595, 0xa660, 0x7a8e, 0x5c1a, 0xa7a6, 0x1, 0x1);
        gbc.writeMem(0x7607, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9595);
        EXPECT(gbc.pc(), 0x7609);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 014A
        gbc.setState(0x9d18, 0x1049, 0x3b20, 0x7dc2, 0x679f, 0x74be, 0x1, 0x1);
        gbc.writeMem(0x9d18, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1049);
        EXPECT(gbc.pc(), 0x9d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d18), 0xcb);
        EXPECT(gbc.readMem(0x9d19), 0x81);
        // CB 81 014C
        gbc.setState(0x5cf, 0xe835, 0xf710, 0x405a, 0x8fee, 0xd9e2, 0x0, 0x0);
        gbc.writeMem(0x5cf, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe835);
        EXPECT(gbc.pc(), 0x5d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 014D
        gbc.setState(0x453b, 0xa198, 0x9ae0, 0xe6fb, 0xe94e, 0xd32c, 0x0, 0x1);
        gbc.writeMem(0x453b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa198);
        EXPECT(gbc.pc(), 0x453d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 014E
        gbc.setState(0xacab, 0x38e4, 0x8330, 0xc9cc, 0x51d9, 0xe1d, 0x0, 0x0);
        gbc.writeMem(0xacab, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x38e4);
        EXPECT(gbc.pc(), 0xacad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacab), 0xcb);
        EXPECT(gbc.readMem(0xacac), 0x81);
        // CB 81 014F
        gbc.setState(0x3025, 0xa6a0, 0x18e0, 0xd977, 0xe441, 0x59af, 0x1, 0x0);
        gbc.writeMem(0x3025, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa6a0);
        EXPECT(gbc.pc(), 0x3027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0150
        gbc.setState(0x3847, 0x8554, 0xbcc0, 0x3202, 0x5d22, 0xc6e5, 0x0, 0x1);
        gbc.writeMem(0x3847, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8554);
        EXPECT(gbc.pc(), 0x3849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0151
        gbc.setState(0x293e, 0x4505, 0xa9d0, 0xcab1, 0x83e3, 0xafe4, 0x1, 0x0);
        gbc.writeMem(0x293e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4505);
        EXPECT(gbc.pc(), 0x2940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0153
        gbc.setState(0x2b04, 0xa12, 0xd950, 0xb440, 0x5391, 0xfecb, 0x0, 0x1);
        gbc.writeMem(0x2b04, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa12);
        EXPECT(gbc.pc(), 0x2b06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0154
        gbc.setState(0x6f75, 0x11a1, 0xc920, 0x7420, 0x9500, 0x7d13, 0x1, 0x0);
        gbc.writeMem(0x6f75, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x11a1);
        EXPECT(gbc.pc(), 0x6f77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0155
        gbc.setState(0x6535, 0x6777, 0x7180, 0xb2b4, 0xa5a0, 0x6a9d, 0x1, 0x0);
        gbc.writeMem(0x6535, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6777);
        EXPECT(gbc.pc(), 0x6537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0156
        gbc.setState(0xc8fe, 0x2b13, 0xe360, 0xd55, 0x72bd, 0x57eb, 0x1, 0x0);
        gbc.writeMem(0xc8fe, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2b13);
        EXPECT(gbc.pc(), 0xc900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8fe), 0xcb);
        EXPECT(gbc.readMem(0xc8ff), 0x81);
        // CB 81 0157
        gbc.setState(0x4fe8, 0x476b, 0x3510, 0x5a00, 0x6693, 0xae97, 0x1, 0x1);
        gbc.writeMem(0x4fe8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x476b);
        EXPECT(gbc.pc(), 0x4fea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0158
        gbc.setState(0xd755, 0xf51b, 0xcd20, 0xb4ed, 0x5d60, 0xbbc, 0x0, 0x0);
        gbc.writeMem(0xd755, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf51b);
        EXPECT(gbc.pc(), 0xd757);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd755), 0xcb);
        EXPECT(gbc.readMem(0xd756), 0x81);
        // CB 81 0159
        gbc.setState(0x2859, 0x404f, 0xd050, 0x6eff, 0x7335, 0x569, 0x0, 0x1);
        gbc.writeMem(0x2859, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x404f);
        EXPECT(gbc.pc(), 0x285b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 015A
        gbc.setState(0x377e, 0x7bdc, 0xa7b0, 0x5d95, 0xbc79, 0x4393, 0x0, 0x0);
        gbc.writeMem(0x377e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7bdc);
        EXPECT(gbc.pc(), 0x3780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 015C
        gbc.setState(0x44ce, 0x50f7, 0x8a80, 0x8fbb, 0xb2d1, 0xf064, 0x1, 0x0);
        gbc.writeMem(0x44ce, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x50f7);
        EXPECT(gbc.pc(), 0x44d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 015D
        gbc.setState(0x916e, 0xfcd8, 0x3670, 0x80df, 0x7162, 0x6dbc, 0x0, 0x0);
        gbc.writeMem(0x916e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xfcd8);
        EXPECT(gbc.pc(), 0x9170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x916e), 0xcb);
        EXPECT(gbc.readMem(0x916f), 0x81);
        // CB 81 015E
        gbc.setState(0xb74c, 0xa231, 0xd130, 0x6a20, 0xf7bd, 0x7c60, 0x1, 0x0);
        gbc.writeMem(0xb74c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa231);
        EXPECT(gbc.pc(), 0xb74e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb74c), 0xcb);
        EXPECT(gbc.readMem(0xb74d), 0x81);
        // CB 81 015F
        gbc.setState(0x203d, 0x5e02, 0xc1d0, 0x74dd, 0x6f50, 0x8c29, 0x1, 0x1);
        gbc.writeMem(0x203d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5e02);
        EXPECT(gbc.pc(), 0x203f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0160
        gbc.setState(0x8549, 0x1d51, 0xc970, 0xc1a0, 0x85b, 0xee0c, 0x0, 0x1);
        gbc.writeMem(0x8549, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1d51);
        EXPECT(gbc.pc(), 0x854b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8549), 0xcb);
        EXPECT(gbc.readMem(0x854a), 0x81);
        // CB 81 0162
        gbc.setState(0xcefc, 0x4bb6, 0xfc20, 0x918, 0x5a6, 0x345a, 0x1, 0x1);
        gbc.writeMem(0xcefc, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4bb6);
        EXPECT(gbc.pc(), 0xcefe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcefc), 0xcb);
        EXPECT(gbc.readMem(0xcefd), 0x81);
        // CB 81 0163
        gbc.setState(0x1ce9, 0xc590, 0x2500, 0x51e9, 0xf45b, 0x2fda, 0x0, 0x0);
        gbc.writeMem(0x1ce9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc590);
        EXPECT(gbc.pc(), 0x1ceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0164
        gbc.setState(0xd0d5, 0xe18d, 0xd730, 0x5c59, 0x9279, 0x555a, 0x1, 0x1);
        gbc.writeMem(0xd0d5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe18d);
        EXPECT(gbc.pc(), 0xd0d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d5), 0xcb);
        EXPECT(gbc.readMem(0xd0d6), 0x81);
        // CB 81 0165
        gbc.setState(0xa303, 0x1076, 0x6850, 0xbfd9, 0x817e, 0xe9bc, 0x1, 0x0);
        gbc.writeMem(0xa303, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1076);
        EXPECT(gbc.pc(), 0xa305);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa303), 0xcb);
        EXPECT(gbc.readMem(0xa304), 0x81);
        // CB 81 0166
        gbc.setState(0x2b5, 0xed0a, 0xf8c0, 0x9159, 0xd3cc, 0x2b5e, 0x0, 0x0);
        gbc.writeMem(0x2b5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xed0a);
        EXPECT(gbc.pc(), 0x2b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0167
        gbc.setState(0xdeb0, 0x4d29, 0xb200, 0xad85, 0x54e5, 0xf2e6, 0x0, 0x1);
        gbc.writeMem(0xdeb0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4d29);
        EXPECT(gbc.pc(), 0xdeb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeb0), 0xcb);
        EXPECT(gbc.readMem(0xdeb1), 0x81);
        // CB 81 0168
        gbc.setState(0xb26d, 0xab07, 0xcda0, 0xfee0, 0x9ae7, 0xc3ee, 0x0, 0x0);
        gbc.writeMem(0xb26d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xab07);
        EXPECT(gbc.pc(), 0xb26f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb26d), 0xcb);
        EXPECT(gbc.readMem(0xb26e), 0x81);
        // CB 81 0169
        gbc.setState(0x653e, 0xdef9, 0xc4b0, 0x3a50, 0x5b9f, 0xfc0d, 0x1, 0x1);
        gbc.writeMem(0x653e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xdef9);
        EXPECT(gbc.pc(), 0x6540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 016A
        gbc.setState(0xe40, 0xd2d9, 0xa2e0, 0x115e, 0x33e6, 0xe6a2, 0x0, 0x1);
        gbc.writeMem(0xe40, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd2d9);
        EXPECT(gbc.pc(), 0xe42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 016B
        gbc.setState(0xab6, 0xd186, 0x30f0, 0xd6e2, 0xddd7, 0x4780, 0x1, 0x0);
        gbc.writeMem(0xab6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd186);
        EXPECT(gbc.pc(), 0xab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 016C
        gbc.setState(0x7079, 0x40de, 0x2d90, 0x605f, 0x9e2e, 0x6d5a, 0x1, 0x1);
        gbc.writeMem(0x7079, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x40de);
        EXPECT(gbc.pc(), 0x707b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 016D
        gbc.setState(0x8171, 0x713d, 0x38c0, 0xf40, 0xa733, 0xf6e, 0x1, 0x0);
        gbc.writeMem(0x8171, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x713d);
        EXPECT(gbc.pc(), 0x8173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8171), 0xcb);
        EXPECT(gbc.readMem(0x8172), 0x81);
        // CB 81 016E
        gbc.setState(0xb922, 0x9186, 0xdaa0, 0xfe24, 0xfcf4, 0xf939, 0x1, 0x0);
        gbc.writeMem(0xb922, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9186);
        EXPECT(gbc.pc(), 0xb924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb922), 0xcb);
        EXPECT(gbc.readMem(0xb923), 0x81);
        // CB 81 016F
        gbc.setState(0x3a28, 0x83a, 0xa8e0, 0x32a6, 0xd4c1, 0xe37c, 0x1, 0x1);
        gbc.writeMem(0x3a28, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x83a);
        EXPECT(gbc.pc(), 0x3a2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0171
        gbc.setState(0x1933, 0x2e31, 0xdef0, 0x5d3c, 0xf822, 0xd909, 0x1, 0x1);
        gbc.writeMem(0x1933, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2e31);
        EXPECT(gbc.pc(), 0x1935);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0172
        gbc.setState(0xe4ba, 0xcfd4, 0xbd10, 0xcc53, 0xf48e, 0xa0d1, 0x1, 0x0);
        gbc.writeMem(0xe4ba, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xcfd4);
        EXPECT(gbc.pc(), 0xe4bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ba), 0xcb);
        EXPECT(gbc.readMem(0xe4bb), 0x81);
        // CB 81 0173
        gbc.setState(0x9663, 0x4e03, 0x7430, 0x87a1, 0xb7d7, 0x775e, 0x0, 0x1);
        gbc.writeMem(0x9663, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4e03);
        EXPECT(gbc.pc(), 0x9665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9663), 0xcb);
        EXPECT(gbc.readMem(0x9664), 0x81);
        // CB 81 0174
        gbc.setState(0x586f, 0xb999, 0xf170, 0xe39f, 0x188, 0xb75, 0x0, 0x0);
        gbc.writeMem(0x586f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb999);
        EXPECT(gbc.pc(), 0x5871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0175
        gbc.setState(0x3e0a, 0xe28a, 0x8580, 0x4ac8, 0xa4b2, 0x3c71, 0x1, 0x0);
        gbc.writeMem(0x3e0a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe28a);
        EXPECT(gbc.pc(), 0x3e0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0176
        gbc.setState(0x4cef, 0x386c, 0x4a80, 0x42db, 0x855b, 0x1265, 0x1, 0x1);
        gbc.writeMem(0x4cef, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x386c);
        EXPECT(gbc.pc(), 0x4cf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0177
        gbc.setState(0x3867, 0x7da5, 0x9260, 0x31fb, 0xdc5b, 0x4e4b, 0x0, 0x0);
        gbc.writeMem(0x3867, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7da5);
        EXPECT(gbc.pc(), 0x3869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0178
        gbc.setState(0xabb6, 0x5b87, 0x9e0, 0x9602, 0xf553, 0xc1f5, 0x1, 0x0);
        gbc.writeMem(0xabb6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5b87);
        EXPECT(gbc.pc(), 0xabb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb6), 0xcb);
        EXPECT(gbc.readMem(0xabb7), 0x81);
        // CB 81 0179
        gbc.setState(0x61bf, 0xcf2d, 0xa220, 0x21e, 0xe981, 0x44f3, 0x0, 0x1);
        gbc.writeMem(0x61bf, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xcf2d);
        EXPECT(gbc.pc(), 0x61c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 017A
        gbc.setState(0x26f, 0xddf1, 0x370, 0x79cf, 0x3d0b, 0x5fa0, 0x1, 0x0);
        gbc.writeMem(0x26f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xddf1);
        EXPECT(gbc.pc(), 0x271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 017B
        gbc.setState(0x18d, 0xed9, 0x62f0, 0x7997, 0xd5e3, 0xed07, 0x0, 0x0);
        gbc.writeMem(0x18d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xed9);
        EXPECT(gbc.pc(), 0x18f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 017C
        gbc.setState(0x1f7f, 0x6d91, 0x1ab0, 0x1b9f, 0xfee7, 0xa81b, 0x1, 0x0);
        gbc.writeMem(0x1f7f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6d91);
        EXPECT(gbc.pc(), 0x1f81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 017D
        gbc.setState(0x6b04, 0xd9c0, 0xf820, 0xd40f, 0x67b9, 0xdf95, 0x1, 0x0);
        gbc.writeMem(0x6b04, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd9c0);
        EXPECT(gbc.pc(), 0x6b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 017E
        gbc.setState(0xad4, 0x2c9, 0x4b00, 0xd32b, 0x3208, 0xaef, 0x0, 0x0);
        gbc.writeMem(0xad4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2c9);
        EXPECT(gbc.pc(), 0xad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 017F
        gbc.setState(0x8db3, 0x3c2e, 0x8630, 0xaea2, 0x1997, 0x76f2, 0x1, 0x0);
        gbc.writeMem(0x8db3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3c2e);
        EXPECT(gbc.pc(), 0x8db5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db3), 0xcb);
        EXPECT(gbc.readMem(0x8db4), 0x81);
        // CB 81 0180
        gbc.setState(0xb249, 0x15f9, 0xcd90, 0x1e18, 0xf056, 0x896a, 0x0, 0x0);
        gbc.writeMem(0xb249, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x15f9);
        EXPECT(gbc.pc(), 0xb24b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb249), 0xcb);
        EXPECT(gbc.readMem(0xb24a), 0x81);
        // CB 81 0181
        gbc.setState(0x1568, 0xfe68, 0xff20, 0xb8b4, 0xc2d8, 0xb54c, 0x1, 0x0);
        gbc.writeMem(0x1568, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfe68);
        EXPECT(gbc.pc(), 0x156a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0182
        gbc.setState(0xbac2, 0xa31f, 0x1ec0, 0xc4e7, 0xf4b5, 0x3549, 0x0, 0x1);
        gbc.writeMem(0xbac2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa31f);
        EXPECT(gbc.pc(), 0xbac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac2), 0xcb);
        EXPECT(gbc.readMem(0xbac3), 0x81);
        // CB 81 0183
        gbc.setState(0x3095, 0x356b, 0x2450, 0x6a9e, 0xc64c, 0xb6b0, 0x0, 0x0);
        gbc.writeMem(0x3095, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x356b);
        EXPECT(gbc.pc(), 0x3097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0184
        gbc.setState(0x670a, 0xb029, 0x1560, 0xade1, 0xe438, 0xe08a, 0x0, 0x1);
        gbc.writeMem(0x670a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb029);
        EXPECT(gbc.pc(), 0x670c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0185
        gbc.setState(0xcf9e, 0x2a10, 0xd30, 0x94e, 0x207c, 0x9178, 0x0, 0x1);
        gbc.writeMem(0xcf9e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2a10);
        EXPECT(gbc.pc(), 0xcfa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf9e), 0xcb);
        EXPECT(gbc.readMem(0xcf9f), 0x81);
        // CB 81 0186
        gbc.setState(0x938c, 0x37ac, 0xadc0, 0xe43d, 0xd5f3, 0xff32, 0x1, 0x1);
        gbc.writeMem(0x938c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x37ac);
        EXPECT(gbc.pc(), 0x938e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x938c), 0xcb);
        EXPECT(gbc.readMem(0x938d), 0x81);
        // CB 81 0187
        gbc.setState(0xdd42, 0x4721, 0x4920, 0x8068, 0x845c, 0x5a5, 0x1, 0x0);
        gbc.writeMem(0xdd42, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4721);
        EXPECT(gbc.pc(), 0xdd44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd42), 0xcb);
        EXPECT(gbc.readMem(0xdd43), 0x81);
        // CB 81 0188
        gbc.setState(0xa51f, 0xbcd2, 0x4fb0, 0xa743, 0x2ef, 0x1086, 0x1, 0x1);
        gbc.writeMem(0xa51f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xbcd2);
        EXPECT(gbc.pc(), 0xa521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa51f), 0xcb);
        EXPECT(gbc.readMem(0xa520), 0x81);
        // CB 81 0189
        gbc.setState(0x46f1, 0xd724, 0xa210, 0x30a6, 0xd763, 0x373d, 0x1, 0x1);
        gbc.writeMem(0x46f1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd724);
        EXPECT(gbc.pc(), 0x46f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 018A
        gbc.setState(0x752c, 0xc80a, 0x890, 0xda8, 0xfc4b, 0x389, 0x1, 0x0);
        gbc.writeMem(0x752c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc80a);
        EXPECT(gbc.pc(), 0x752e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 018B
        gbc.setState(0x80b0, 0xa420, 0x4f0, 0x8e01, 0xefcc, 0x2d7a, 0x0, 0x0);
        gbc.writeMem(0x80b0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa420);
        EXPECT(gbc.pc(), 0x80b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80b0), 0xcb);
        EXPECT(gbc.readMem(0x80b1), 0x81);
        // CB 81 018C
        gbc.setState(0x526e, 0x62dc, 0xd8f0, 0x2a5c, 0x91a5, 0x691b, 0x1, 0x0);
        gbc.writeMem(0x526e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x62dc);
        EXPECT(gbc.pc(), 0x5270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 018D
        gbc.setState(0xeb89, 0xa31e, 0xce40, 0x5b4f, 0x8b0e, 0x193b, 0x1, 0x0);
        gbc.writeMem(0xeb89, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa31e);
        EXPECT(gbc.pc(), 0xeb8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb89), 0xcb);
        EXPECT(gbc.readMem(0xeb8a), 0x81);
        // CB 81 018E
        gbc.setState(0x6647, 0xab71, 0x2600, 0x97ab, 0xc1cd, 0xd192, 0x1, 0x0);
        gbc.writeMem(0x6647, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xab71);
        EXPECT(gbc.pc(), 0x6649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 018F
        gbc.setState(0xcbf9, 0x6a2c, 0x8900, 0x5ad7, 0xfbcc, 0x94cc, 0x1, 0x1);
        gbc.writeMem(0xcbf9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6a2c);
        EXPECT(gbc.pc(), 0xcbfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf9), 0xcb);
        EXPECT(gbc.readMem(0xcbfa), 0x81);
        // CB 81 0190
        gbc.setState(0xedde, 0xf1eb, 0x8d80, 0x5f99, 0xe570, 0xb0e6, 0x1, 0x1);
        gbc.writeMem(0xedde, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf1eb);
        EXPECT(gbc.pc(), 0xede0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedde), 0xcb);
        EXPECT(gbc.readMem(0xeddf), 0x81);
        // CB 81 0191
        gbc.setState(0x24ca, 0xd0fc, 0x91f0, 0x3008, 0x8b9c, 0x953b, 0x1, 0x1);
        gbc.writeMem(0x24ca, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd0fc);
        EXPECT(gbc.pc(), 0x24cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0192
        gbc.setState(0xb7b9, 0x59ff, 0x97d0, 0x3fb0, 0x9b61, 0xa9e, 0x1, 0x1);
        gbc.writeMem(0xb7b9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x59ff);
        EXPECT(gbc.pc(), 0xb7bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7b9), 0xcb);
        EXPECT(gbc.readMem(0xb7ba), 0x81);
        // CB 81 0193
        gbc.setState(0x898d, 0x3f36, 0x7d80, 0xb38f, 0x7561, 0x7909, 0x1, 0x1);
        gbc.writeMem(0x898d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3f36);
        EXPECT(gbc.pc(), 0x898f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x898d), 0xcb);
        EXPECT(gbc.readMem(0x898e), 0x81);
        // CB 81 0194
        gbc.setState(0x2660, 0x83a5, 0x1500, 0xf625, 0xf588, 0x4042, 0x0, 0x1);
        gbc.writeMem(0x2660, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x83a5);
        EXPECT(gbc.pc(), 0x2662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0195
        gbc.setState(0xf53, 0x1fd9, 0x8940, 0x2759, 0x2a16, 0x4ca, 0x0, 0x0);
        gbc.writeMem(0xf53, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1fd9);
        EXPECT(gbc.pc(), 0xf55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0196
        gbc.setState(0x1cbb, 0xfe5, 0x26c0, 0xf0be, 0x36a2, 0x7c9, 0x1, 0x0);
        gbc.writeMem(0x1cbb, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfe5);
        EXPECT(gbc.pc(), 0x1cbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0197
        gbc.setState(0x29f7, 0x661, 0x8300, 0xcc8f, 0xa461, 0x850b, 0x1, 0x1);
        gbc.writeMem(0x29f7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x661);
        EXPECT(gbc.pc(), 0x29f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0198
        gbc.setState(0x6a02, 0x625a, 0xbee0, 0x2285, 0x138f, 0xc332, 0x1, 0x0);
        gbc.writeMem(0x6a02, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x625a);
        EXPECT(gbc.pc(), 0x6a04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0199
        gbc.setState(0xe636, 0x22fe, 0x5e50, 0xb636, 0x1759, 0xaddc, 0x1, 0x0);
        gbc.writeMem(0xe636, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x22fe);
        EXPECT(gbc.pc(), 0xe638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe636), 0xcb);
        EXPECT(gbc.readMem(0xe637), 0x81);
        // CB 81 019A
        gbc.setState(0x2c9, 0xf288, 0xada0, 0x7ea6, 0x18ac, 0x1997, 0x1, 0x1);
        gbc.writeMem(0x2c9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf288);
        EXPECT(gbc.pc(), 0x2cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 019B
        gbc.setState(0x9535, 0x2d6f, 0xc5d0, 0x7ae5, 0x1182, 0xfc37, 0x0, 0x1);
        gbc.writeMem(0x9535, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2d6f);
        EXPECT(gbc.pc(), 0x9537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9535), 0xcb);
        EXPECT(gbc.readMem(0x9536), 0x81);
        // CB 81 019D
        gbc.setState(0x104f, 0x73a3, 0x3850, 0xc81, 0x2aa3, 0xd7b4, 0x1, 0x0);
        gbc.writeMem(0x104f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x73a3);
        EXPECT(gbc.pc(), 0x1051);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 019E
        gbc.setState(0xa704, 0xdac5, 0xba00, 0xcb9a, 0x66b9, 0x86a2, 0x0, 0x0);
        gbc.writeMem(0xa704, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xdac5);
        EXPECT(gbc.pc(), 0xa706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa704), 0xcb);
        EXPECT(gbc.readMem(0xa705), 0x81);
        // CB 81 019F
        gbc.setState(0x7e73, 0xe2d0, 0x17e0, 0x2df9, 0x4ddc, 0x4e62, 0x1, 0x0);
        gbc.writeMem(0x7e73, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe2d0);
        EXPECT(gbc.pc(), 0x7e75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01A0
        gbc.setState(0x2a0c, 0xde4f, 0x8880, 0x131c, 0x8475, 0x6255, 0x1, 0x1);
        gbc.writeMem(0x2a0c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xde4f);
        EXPECT(gbc.pc(), 0x2a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01A1
        gbc.setState(0xe30f, 0x918, 0xeeb0, 0x5343, 0xa565, 0xdaf2, 0x0, 0x1);
        gbc.writeMem(0xe30f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x918);
        EXPECT(gbc.pc(), 0xe311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe30f), 0xcb);
        EXPECT(gbc.readMem(0xe310), 0x81);
        // CB 81 01A2
        gbc.setState(0x3f54, 0xe304, 0x64c0, 0xbce1, 0x8116, 0x8ea1, 0x0, 0x1);
        gbc.writeMem(0x3f54, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe304);
        EXPECT(gbc.pc(), 0x3f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01A3
        gbc.setState(0x62a, 0x719, 0xf70, 0x2e35, 0xdb50, 0x78c3, 0x0, 0x1);
        gbc.writeMem(0x62a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x719);
        EXPECT(gbc.pc(), 0x62c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01A4
        gbc.setState(0xdfa1, 0x88e7, 0x27d0, 0x89e1, 0xe6f, 0x4295, 0x0, 0x1);
        gbc.writeMem(0xdfa1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x88e7);
        EXPECT(gbc.pc(), 0xdfa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfa1), 0xcb);
        EXPECT(gbc.readMem(0xdfa2), 0x81);
        // CB 81 01A5
        gbc.setState(0x61ae, 0x3946, 0xa480, 0xb472, 0x7e17, 0xe7e5, 0x1, 0x0);
        gbc.writeMem(0x61ae, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3946);
        EXPECT(gbc.pc(), 0x61b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01A6
        gbc.setState(0xb803, 0xfdc0, 0x8d20, 0x9393, 0x77b1, 0xecf0, 0x1, 0x0);
        gbc.writeMem(0xb803, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xfdc0);
        EXPECT(gbc.pc(), 0xb805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb803), 0xcb);
        EXPECT(gbc.readMem(0xb804), 0x81);
        // CB 81 01A7
        gbc.setState(0xc234, 0xf781, 0x8900, 0xa842, 0xab5f, 0x4a8f, 0x0, 0x0);
        gbc.writeMem(0xc234, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf781);
        EXPECT(gbc.pc(), 0xc236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc234), 0xcb);
        EXPECT(gbc.readMem(0xc235), 0x81);
        // CB 81 01A8
        gbc.setState(0x65ca, 0xff6a, 0xae20, 0x4864, 0x5bed, 0x2932, 0x0, 0x1);
        gbc.writeMem(0x65ca, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xff6a);
        EXPECT(gbc.pc(), 0x65cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01A9
        gbc.setState(0x95d7, 0xadae, 0xd800, 0x8b3b, 0xddf8, 0x42da, 0x1, 0x0);
        gbc.writeMem(0x95d7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xadae);
        EXPECT(gbc.pc(), 0x95d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95d7), 0xcb);
        EXPECT(gbc.readMem(0x95d8), 0x81);
        // CB 81 01AA
        gbc.setState(0xcafe, 0xf481, 0x3940, 0x4e3d, 0x2f31, 0xff60, 0x0, 0x0);
        gbc.writeMem(0xcafe, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf481);
        EXPECT(gbc.pc(), 0xcb00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcafe), 0xcb);
        EXPECT(gbc.readMem(0xcaff), 0x81);
        // CB 81 01AC
        gbc.setState(0x706a, 0xd2c8, 0xef80, 0xef72, 0xe979, 0x12a2, 0x0, 0x0);
        gbc.writeMem(0x706a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd2c8);
        EXPECT(gbc.pc(), 0x706c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01AD
        gbc.setState(0x796a, 0x2e1d, 0xc4c0, 0xa5d, 0xe68a, 0x8eca, 0x1, 0x0);
        gbc.writeMem(0x796a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2e1d);
        EXPECT(gbc.pc(), 0x796c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01AF
        gbc.setState(0x5d3f, 0x8cb7, 0x8ab0, 0x8c2a, 0x3a3a, 0xa6b2, 0x1, 0x0);
        gbc.writeMem(0x5d3f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8cb7);
        EXPECT(gbc.pc(), 0x5d41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01B0
        gbc.setState(0xdfd, 0xfe69, 0xace0, 0x90dd, 0x2246, 0x4f36, 0x0, 0x0);
        gbc.writeMem(0xdfd, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xfe69);
        EXPECT(gbc.pc(), 0xdff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01B1
        gbc.setState(0x7ab6, 0x1004, 0x6650, 0x43b1, 0x5ed3, 0xfa84, 0x0, 0x0);
        gbc.writeMem(0x7ab6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1004);
        EXPECT(gbc.pc(), 0x7ab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01B2
        gbc.setState(0xf2, 0xb321, 0xe200, 0x59d7, 0xa0fe, 0x8a8, 0x0, 0x0);
        gbc.writeMem(0xf2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb321);
        EXPECT(gbc.pc(), 0xf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01B3
        gbc.setState(0x3a58, 0x6885, 0x3c0, 0xbaf4, 0xb608, 0x7b4b, 0x0, 0x0);
        gbc.writeMem(0x3a58, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6885);
        EXPECT(gbc.pc(), 0x3a5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01B4
        gbc.setState(0x54c0, 0x6213, 0xa690, 0x12f9, 0x7900, 0x666c, 0x1, 0x0);
        gbc.writeMem(0x54c0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6213);
        EXPECT(gbc.pc(), 0x54c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01B5
        gbc.setState(0xcabe, 0xbba1, 0x4970, 0x51de, 0xdacd, 0x49b3, 0x1, 0x0);
        gbc.writeMem(0xcabe, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xbba1);
        EXPECT(gbc.pc(), 0xcac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcabe), 0xcb);
        EXPECT(gbc.readMem(0xcabf), 0x81);
        // CB 81 01B6
        gbc.setState(0x8367, 0x943c, 0x4ed0, 0xf14e, 0x826, 0xf837, 0x0, 0x1);
        gbc.writeMem(0x8367, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x943c);
        EXPECT(gbc.pc(), 0x8369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8367), 0xcb);
        EXPECT(gbc.readMem(0x8368), 0x81);
        // CB 81 01B7
        gbc.setState(0xa00d, 0xd130, 0xf620, 0x1bd, 0x9664, 0x8d6b, 0x0, 0x1);
        gbc.writeMem(0xa00d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd130);
        EXPECT(gbc.pc(), 0xa00f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa00d), 0xcb);
        EXPECT(gbc.readMem(0xa00e), 0x81);
        // CB 81 01B8
        gbc.setState(0x839d, 0x731f, 0xc470, 0xc262, 0xbefa, 0x28d8, 0x1, 0x0);
        gbc.writeMem(0x839d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x731f);
        EXPECT(gbc.pc(), 0x839f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x839d), 0xcb);
        EXPECT(gbc.readMem(0x839e), 0x81);
        // CB 81 01B9
        gbc.setState(0x1031, 0x686a, 0xab90, 0xbe8e, 0xba34, 0xd8cb, 0x0, 0x0);
        gbc.writeMem(0x1031, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x686a);
        EXPECT(gbc.pc(), 0x1033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01BA
        gbc.setState(0x3908, 0xa63, 0xbc40, 0xd17d, 0x431d, 0x46af, 0x0, 0x0);
        gbc.writeMem(0x3908, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa63);
        EXPECT(gbc.pc(), 0x390a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01BB
        gbc.setState(0x1889, 0x482, 0xa570, 0x9d, 0x8e7e, 0x9d48, 0x0, 0x0);
        gbc.writeMem(0x1889, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x482);
        EXPECT(gbc.pc(), 0x188b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01BC
        gbc.setState(0x7b1a, 0xb3b3, 0x44f0, 0x710e, 0xec0, 0xc4ed, 0x1, 0x0);
        gbc.writeMem(0x7b1a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb3b3);
        EXPECT(gbc.pc(), 0x7b1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01BD
        gbc.setState(0x8722, 0x921d, 0x6260, 0xe1be, 0x6015, 0x26aa, 0x1, 0x1);
        gbc.writeMem(0x8722, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x921d);
        EXPECT(gbc.pc(), 0x8724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8722), 0xcb);
        EXPECT(gbc.readMem(0x8723), 0x81);
        // CB 81 01BE
        gbc.setState(0xc990, 0x1ff6, 0x9b00, 0x2908, 0x41bc, 0x3123, 0x0, 0x0);
        gbc.writeMem(0xc990, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1ff6);
        EXPECT(gbc.pc(), 0xc992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc990), 0xcb);
        EXPECT(gbc.readMem(0xc991), 0x81);
        // CB 81 01BF
        gbc.setState(0x63bb, 0x8dd4, 0x71b0, 0xa5f5, 0xb781, 0x133, 0x0, 0x0);
        gbc.writeMem(0x63bb, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8dd4);
        EXPECT(gbc.pc(), 0x63bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01C0
        gbc.setState(0x823, 0x557f, 0x1050, 0xbdb6, 0x2437, 0x195, 0x0, 0x0);
        gbc.writeMem(0x823, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x557f);
        EXPECT(gbc.pc(), 0x825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01C1
        gbc.setState(0xb318, 0x9e57, 0xe020, 0x7018, 0x3e5, 0x747, 0x1, 0x0);
        gbc.writeMem(0xb318, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9e57);
        EXPECT(gbc.pc(), 0xb31a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb318), 0xcb);
        EXPECT(gbc.readMem(0xb319), 0x81);
        // CB 81 01C2
        gbc.setState(0xb408, 0x1945, 0x2c0, 0xc818, 0xaea2, 0x1ced, 0x0, 0x0);
        gbc.writeMem(0xb408, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1945);
        EXPECT(gbc.pc(), 0xb40a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb408), 0xcb);
        EXPECT(gbc.readMem(0xb409), 0x81);
        // CB 81 01C3
        gbc.setState(0x98e, 0x37b, 0x6790, 0xc19e, 0x8f6a, 0x81a1, 0x1, 0x0);
        gbc.writeMem(0x98e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x37b);
        EXPECT(gbc.pc(), 0x990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01C4
        gbc.setState(0x939, 0xc351, 0xb030, 0xeb24, 0xfcfd, 0x27b9, 0x0, 0x0);
        gbc.writeMem(0x939, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc351);
        EXPECT(gbc.pc(), 0x93b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01C6
        gbc.setState(0xc138, 0xfa4c, 0xdf60, 0xdcf8, 0xbb3b, 0xfd8e, 0x0, 0x1);
        gbc.writeMem(0xc138, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xfa4c);
        EXPECT(gbc.pc(), 0xc13a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc138), 0xcb);
        EXPECT(gbc.readMem(0xc139), 0x81);
        // CB 81 01C7
        gbc.setState(0xa636, 0x9509, 0xaf80, 0x8f4a, 0xae72, 0x9889, 0x0, 0x0);
        gbc.writeMem(0xa636, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9509);
        EXPECT(gbc.pc(), 0xa638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa636), 0xcb);
        EXPECT(gbc.readMem(0xa637), 0x81);
        // CB 81 01C8
        gbc.setState(0xdb4e, 0xe22b, 0xff60, 0x1408, 0x7b3e, 0xd568, 0x0, 0x1);
        gbc.writeMem(0xdb4e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe22b);
        EXPECT(gbc.pc(), 0xdb50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb4e), 0xcb);
        EXPECT(gbc.readMem(0xdb4f), 0x81);
        // CB 81 01C9
        gbc.setState(0x5107, 0xe723, 0x38d0, 0x66b9, 0xf055, 0x207e, 0x0, 0x0);
        gbc.writeMem(0x5107, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe723);
        EXPECT(gbc.pc(), 0x5109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01CA
        gbc.setState(0x94, 0x20c5, 0x4c20, 0xb7af, 0xc132, 0x8b0a, 0x0, 0x1);
        gbc.writeMem(0x94, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x20c5);
        EXPECT(gbc.pc(), 0x96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01CB
        gbc.setState(0xbee, 0x1047, 0x39a0, 0x9f4b, 0x3977, 0xa1f5, 0x1, 0x0);
        gbc.writeMem(0xbee, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1047);
        EXPECT(gbc.pc(), 0xbf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01CC
        gbc.setState(0x431c, 0x2b77, 0x6070, 0x9275, 0xfc17, 0x432c, 0x0, 0x1);
        gbc.writeMem(0x431c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2b77);
        EXPECT(gbc.pc(), 0x431e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01CD
        gbc.setState(0x9872, 0x6743, 0xb920, 0x56c1, 0xb8a3, 0xb855, 0x0, 0x0);
        gbc.writeMem(0x9872, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6743);
        EXPECT(gbc.pc(), 0x9874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9872), 0xcb);
        EXPECT(gbc.readMem(0x9873), 0x81);
        // CB 81 01CE
        gbc.setState(0x761b, 0xfd25, 0x9c70, 0xaf7b, 0xe7b6, 0xf997, 0x0, 0x0);
        gbc.writeMem(0x761b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xfd25);
        EXPECT(gbc.pc(), 0x761d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01CF
        gbc.setState(0x3b77, 0x7cc9, 0xfa0, 0x942d, 0xb11e, 0x6ae1, 0x1, 0x1);
        gbc.writeMem(0x3b77, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7cc9);
        EXPECT(gbc.pc(), 0x3b79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01D0
        gbc.setState(0x97e1, 0x2a22, 0x9bb0, 0x9088, 0xeff9, 0xcdff, 0x1, 0x1);
        gbc.writeMem(0x97e1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2a22);
        EXPECT(gbc.pc(), 0x97e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97e1), 0xcb);
        EXPECT(gbc.readMem(0x97e2), 0x81);
        // CB 81 01D1
        gbc.setState(0x1b73, 0xc4e3, 0x7790, 0xeb1a, 0x3c2c, 0xc1d6, 0x1, 0x1);
        gbc.writeMem(0x1b73, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc4e3);
        EXPECT(gbc.pc(), 0x1b75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01D2
        gbc.setState(0x626c, 0x1a95, 0x7720, 0xa73e, 0xf6a0, 0x2d84, 0x1, 0x1);
        gbc.writeMem(0x626c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1a95);
        EXPECT(gbc.pc(), 0x626e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01D3
        gbc.setState(0x31c1, 0x50b4, 0xb0c0, 0x9045, 0x5b70, 0xc8d2, 0x1, 0x1);
        gbc.writeMem(0x31c1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x50b4);
        EXPECT(gbc.pc(), 0x31c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01D4
        gbc.setState(0x8fd, 0x5149, 0x9c50, 0x5efe, 0xb215, 0x41c2, 0x0, 0x0);
        gbc.writeMem(0x8fd, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5149);
        EXPECT(gbc.pc(), 0x8ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01D5
        gbc.setState(0x6b66, 0x6b75, 0xb5a0, 0x2285, 0xc9fa, 0xe679, 0x1, 0x1);
        gbc.writeMem(0x6b66, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6b75);
        EXPECT(gbc.pc(), 0x6b68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01D6
        gbc.setState(0x5c51, 0x375b, 0x2f80, 0x5e98, 0xd046, 0x254b, 0x1, 0x1);
        gbc.writeMem(0x5c51, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x375b);
        EXPECT(gbc.pc(), 0x5c53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01D7
        gbc.setState(0xe1b4, 0x3948, 0x950, 0xe26d, 0xd0e7, 0x27f1, 0x1, 0x0);
        gbc.writeMem(0xe1b4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3948);
        EXPECT(gbc.pc(), 0xe1b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1b4), 0xcb);
        EXPECT(gbc.readMem(0xe1b5), 0x81);
        // CB 81 01D8
        gbc.setState(0x3df1, 0x5e2b, 0xf3f0, 0x130e, 0xa1b3, 0xc854, 0x0, 0x0);
        gbc.writeMem(0x3df1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5e2b);
        EXPECT(gbc.pc(), 0x3df3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01D9
        gbc.setState(0x6e9c, 0xa48, 0x1620, 0x43e7, 0x83f8, 0xc626, 0x0, 0x0);
        gbc.writeMem(0x6e9c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa48);
        EXPECT(gbc.pc(), 0x6e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01DA
        gbc.setState(0x312b, 0x7c60, 0x72c0, 0xf674, 0x5dd1, 0x6481, 0x1, 0x1);
        gbc.writeMem(0x312b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7c60);
        EXPECT(gbc.pc(), 0x312d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01DB
        gbc.setState(0xa3dc, 0x96f1, 0x21b0, 0xa1cc, 0x93a5, 0xe10b, 0x1, 0x0);
        gbc.writeMem(0xa3dc, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x96f1);
        EXPECT(gbc.pc(), 0xa3de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3dc), 0xcb);
        EXPECT(gbc.readMem(0xa3dd), 0x81);
        // CB 81 01DC
        gbc.setState(0x4653, 0xb804, 0xae00, 0xebf5, 0xfe79, 0x7a36, 0x0, 0x0);
        gbc.writeMem(0x4653, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb804);
        EXPECT(gbc.pc(), 0x4655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01DD
        gbc.setState(0x793b, 0x57b6, 0xf8d0, 0x635c, 0x815e, 0x548e, 0x0, 0x1);
        gbc.writeMem(0x793b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x57b6);
        EXPECT(gbc.pc(), 0x793d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01DE
        gbc.setState(0x2b44, 0xae55, 0x5e0, 0x547a, 0xe111, 0x533f, 0x1, 0x0);
        gbc.writeMem(0x2b44, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xae55);
        EXPECT(gbc.pc(), 0x2b46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01DF
        gbc.setState(0x4955, 0x8408, 0x84b0, 0x8dda, 0xc735, 0x6787, 0x1, 0x1);
        gbc.writeMem(0x4955, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8408);
        EXPECT(gbc.pc(), 0x4957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01E0
        gbc.setState(0xac81, 0x9055, 0x4600, 0x48a, 0x5bb3, 0xb35d, 0x1, 0x1);
        gbc.writeMem(0xac81, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9055);
        EXPECT(gbc.pc(), 0xac83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac81), 0xcb);
        EXPECT(gbc.readMem(0xac82), 0x81);
        // CB 81 01E1
        gbc.setState(0x8422, 0x6c1f, 0x8550, 0xc1d4, 0x9a2e, 0x13fb, 0x1, 0x1);
        gbc.writeMem(0x8422, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6c1f);
        EXPECT(gbc.pc(), 0x8424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8422), 0xcb);
        EXPECT(gbc.readMem(0x8423), 0x81);
        // CB 81 01E3
        gbc.setState(0xdcca, 0x829e, 0xc470, 0x30ed, 0x4902, 0xc03d, 0x0, 0x1);
        gbc.writeMem(0xdcca, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x829e);
        EXPECT(gbc.pc(), 0xdccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcca), 0xcb);
        EXPECT(gbc.readMem(0xdccb), 0x81);
        // CB 81 01E4
        gbc.setState(0xef9d, 0x7124, 0x12b0, 0x6d17, 0x1942, 0xbe52, 0x1, 0x0);
        gbc.writeMem(0xef9d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7124);
        EXPECT(gbc.pc(), 0xef9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef9d), 0xcb);
        EXPECT(gbc.readMem(0xef9e), 0x81);
        // CB 81 01E5
        gbc.setState(0x8be, 0x1247, 0x2d60, 0x62ea, 0xd66f, 0xc5b1, 0x1, 0x0);
        gbc.writeMem(0x8be, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1247);
        EXPECT(gbc.pc(), 0x8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01E6
        gbc.setState(0x605f, 0x97a2, 0x3b0, 0x897b, 0xc164, 0x9bcb, 0x1, 0x0);
        gbc.writeMem(0x605f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x97a2);
        EXPECT(gbc.pc(), 0x6061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01E7
        gbc.setState(0x127f, 0x336a, 0x6010, 0x62cb, 0xfb25, 0x3e3d, 0x1, 0x1);
        gbc.writeMem(0x127f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x336a);
        EXPECT(gbc.pc(), 0x1281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01E8
        gbc.setState(0xa41e, 0x696d, 0xfb30, 0xc6a0, 0x9f98, 0xc609, 0x1, 0x0);
        gbc.writeMem(0xa41e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x696d);
        EXPECT(gbc.pc(), 0xa420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa41e), 0xcb);
        EXPECT(gbc.readMem(0xa41f), 0x81);
        // CB 81 01E9
        gbc.setState(0xba1f, 0x9778, 0x7350, 0x7955, 0x2cfb, 0xda8b, 0x0, 0x1);
        gbc.writeMem(0xba1f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9778);
        EXPECT(gbc.pc(), 0xba21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba1f), 0xcb);
        EXPECT(gbc.readMem(0xba20), 0x81);
        // CB 81 01EA
        gbc.setState(0x2b01, 0x28af, 0x5440, 0x4eec, 0x4299, 0xa19b, 0x1, 0x1);
        gbc.writeMem(0x2b01, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x28af);
        EXPECT(gbc.pc(), 0x2b03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01EB
        gbc.setState(0x24ec, 0xafa7, 0x6dd0, 0xc6f3, 0x7d5f, 0x7f98, 0x1, 0x0);
        gbc.writeMem(0x24ec, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xafa7);
        EXPECT(gbc.pc(), 0x24ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01EC
        gbc.setState(0xc618, 0xc732, 0x6d00, 0x9709, 0x4f0e, 0xadea, 0x0, 0x0);
        gbc.writeMem(0xc618, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc732);
        EXPECT(gbc.pc(), 0xc61a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc618), 0xcb);
        EXPECT(gbc.readMem(0xc619), 0x81);
        // CB 81 01ED
        gbc.setState(0xe488, 0x39ea, 0xe640, 0xb182, 0x72f7, 0xe694, 0x0, 0x1);
        gbc.writeMem(0xe488, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x39ea);
        EXPECT(gbc.pc(), 0xe48a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe488), 0xcb);
        EXPECT(gbc.readMem(0xe489), 0x81);
        // CB 81 01EE
        gbc.setState(0xb298, 0x670, 0x48f0, 0xd137, 0x986b, 0x60bb, 0x0, 0x0);
        gbc.writeMem(0xb298, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x670);
        EXPECT(gbc.pc(), 0xb29a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb298), 0xcb);
        EXPECT(gbc.readMem(0xb299), 0x81);
        // CB 81 01EF
        gbc.setState(0xe4ea, 0x14c5, 0xf030, 0x64c0, 0xfd39, 0xfadf, 0x0, 0x0);
        gbc.writeMem(0xe4ea, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x14c5);
        EXPECT(gbc.pc(), 0xe4ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ea), 0xcb);
        EXPECT(gbc.readMem(0xe4eb), 0x81);
        // CB 81 01F0
        gbc.setState(0xea90, 0xfa97, 0x1d90, 0x645, 0xc3, 0x3b6a, 0x1, 0x0);
        gbc.writeMem(0xea90, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfa97);
        EXPECT(gbc.pc(), 0xea92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea90), 0xcb);
        EXPECT(gbc.readMem(0xea91), 0x81);
        // CB 81 01F1
        gbc.setState(0xbc42, 0xe3b9, 0x1230, 0x58fb, 0x1a95, 0x54f3, 0x1, 0x0);
        gbc.writeMem(0xbc42, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe3b9);
        EXPECT(gbc.pc(), 0xbc44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc42), 0xcb);
        EXPECT(gbc.readMem(0xbc43), 0x81);
        // CB 81 01F2
        gbc.setState(0x5cd9, 0x7584, 0x3c0, 0xc03, 0x8f68, 0x44f2, 0x1, 0x0);
        gbc.writeMem(0x5cd9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7584);
        EXPECT(gbc.pc(), 0x5cdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01F3
        gbc.setState(0x5eb, 0x45e, 0x680, 0x63ff, 0x68f7, 0xed49, 0x1, 0x0);
        gbc.writeMem(0x5eb, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x45e);
        EXPECT(gbc.pc(), 0x5ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01F4
        gbc.setState(0x3ed8, 0xd21c, 0x79d0, 0xa499, 0xe539, 0x17ab, 0x0, 0x1);
        gbc.writeMem(0x3ed8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd21c);
        EXPECT(gbc.pc(), 0x3eda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01F5
        gbc.setState(0x5f27, 0x466c, 0xae10, 0xfdc5, 0x7714, 0x4996, 0x1, 0x0);
        gbc.writeMem(0x5f27, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x466c);
        EXPECT(gbc.pc(), 0x5f29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 01F7
        gbc.setState(0xb9d4, 0x5ed4, 0x8a80, 0x2008, 0x66fc, 0x1258, 0x1, 0x1);
        gbc.writeMem(0xb9d4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5ed4);
        EXPECT(gbc.pc(), 0xb9d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9d4), 0xcb);
        EXPECT(gbc.readMem(0xb9d5), 0x81);
        // CB 81 01F8
        gbc.setState(0xb4d, 0xee39, 0xc740, 0xefe5, 0xac5e, 0x26c2, 0x0, 0x1);
        gbc.writeMem(0xb4d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xee39);
        EXPECT(gbc.pc(), 0xb4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01F9
        gbc.setState(0xe378, 0x6ad0, 0xb6b0, 0x5607, 0x758c, 0xa8eb, 0x0, 0x1);
        gbc.writeMem(0xe378, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6ad0);
        EXPECT(gbc.pc(), 0xe37a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe378), 0xcb);
        EXPECT(gbc.readMem(0xe379), 0x81);
        // CB 81 01FA
        gbc.setState(0xaf35, 0x56d3, 0xa860, 0x2c01, 0x913a, 0xd2e1, 0x1, 0x1);
        gbc.writeMem(0xaf35, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x56d3);
        EXPECT(gbc.pc(), 0xaf37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf35), 0xcb);
        EXPECT(gbc.readMem(0xaf36), 0x81);
        // CB 81 01FB
        gbc.setState(0x756f, 0x62cc, 0xed20, 0xad27, 0x317c, 0x1a4c, 0x1, 0x1);
        gbc.writeMem(0x756f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x62cc);
        EXPECT(gbc.pc(), 0x7571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01FC
        gbc.setState(0xd722, 0x50d7, 0x3e40, 0xb527, 0x61a5, 0xc041, 0x0, 0x1);
        gbc.writeMem(0xd722, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x50d7);
        EXPECT(gbc.pc(), 0xd724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd722), 0xcb);
        EXPECT(gbc.readMem(0xd723), 0x81);
        // CB 81 01FD
        gbc.setState(0xa29a, 0x1fc9, 0xf570, 0x2071, 0x40db, 0x8a8c, 0x0, 0x0);
        gbc.writeMem(0xa29a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1fc9);
        EXPECT(gbc.pc(), 0xa29c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa29a), 0xcb);
        EXPECT(gbc.readMem(0xa29b), 0x81);
        // CB 81 01FE
        gbc.setState(0x2c23, 0xcb3c, 0x2ce0, 0x5421, 0xd259, 0xba23, 0x1, 0x0);
        gbc.writeMem(0x2c23, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xcb3c);
        EXPECT(gbc.pc(), 0x2c25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 01FF
        gbc.setState(0x4067, 0x254b, 0x35d0, 0x5a66, 0x8fd5, 0xd800, 0x0, 0x1);
        gbc.writeMem(0x4067, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x254b);
        EXPECT(gbc.pc(), 0x4069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0200
        gbc.setState(0xba4d, 0x99a7, 0xf7f0, 0xd2de, 0x72ee, 0xe2c5, 0x1, 0x1);
        gbc.writeMem(0xba4d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x99a7);
        EXPECT(gbc.pc(), 0xba4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba4d), 0xcb);
        EXPECT(gbc.readMem(0xba4e), 0x81);
        // CB 81 0201
        gbc.setState(0xcdd, 0xa295, 0xe1c0, 0xfe18, 0x818, 0x8a6a, 0x1, 0x1);
        gbc.writeMem(0xcdd, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa295);
        EXPECT(gbc.pc(), 0xcdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0202
        gbc.setState(0x5c78, 0x7318, 0xb900, 0xd9f1, 0xd9bf, 0x6a9d, 0x1, 0x1);
        gbc.writeMem(0x5c78, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7318);
        EXPECT(gbc.pc(), 0x5c7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0203
        gbc.setState(0x2242, 0x7af6, 0x1f60, 0x1572, 0x77d1, 0x4d5c, 0x1, 0x1);
        gbc.writeMem(0x2242, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7af6);
        EXPECT(gbc.pc(), 0x2244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0204
        gbc.setState(0x96d2, 0xe02d, 0xa680, 0xcddc, 0x452d, 0x2814, 0x1, 0x0);
        gbc.writeMem(0x96d2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe02d);
        EXPECT(gbc.pc(), 0x96d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96d2), 0xcb);
        EXPECT(gbc.readMem(0x96d3), 0x81);
        // CB 81 0205
        gbc.setState(0x8632, 0x7b5d, 0xf60, 0x2e79, 0xd73, 0xb734, 0x0, 0x0);
        gbc.writeMem(0x8632, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7b5d);
        EXPECT(gbc.pc(), 0x8634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8632), 0xcb);
        EXPECT(gbc.readMem(0x8633), 0x81);
        // CB 81 0206
        gbc.setState(0xc1c2, 0x2851, 0x8570, 0x8ca1, 0x3904, 0x2a6b, 0x0, 0x0);
        gbc.writeMem(0xc1c2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2851);
        EXPECT(gbc.pc(), 0xc1c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1c2), 0xcb);
        EXPECT(gbc.readMem(0xc1c3), 0x81);
        // CB 81 0207
        gbc.setState(0x9515, 0x7be6, 0x6950, 0x61da, 0xa165, 0x6e1e, 0x1, 0x1);
        gbc.writeMem(0x9515, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7be6);
        EXPECT(gbc.pc(), 0x9517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9515), 0xcb);
        EXPECT(gbc.readMem(0x9516), 0x81);
        // CB 81 0209
        gbc.setState(0xd35d, 0x462e, 0x16d0, 0xd61d, 0xff1a, 0xd4f0, 0x0, 0x0);
        gbc.writeMem(0xd35d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x462e);
        EXPECT(gbc.pc(), 0xd35f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd35d), 0xcb);
        EXPECT(gbc.readMem(0xd35e), 0x81);
        // CB 81 020A
        gbc.setState(0x2349, 0x4669, 0x6a40, 0x5662, 0x88e2, 0x73d4, 0x1, 0x0);
        gbc.writeMem(0x2349, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4669);
        EXPECT(gbc.pc(), 0x234b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 020B
        gbc.setState(0x31fc, 0x8630, 0xb390, 0xdf8, 0x2e75, 0x51ad, 0x1, 0x1);
        gbc.writeMem(0x31fc, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8630);
        EXPECT(gbc.pc(), 0x31fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 020C
        gbc.setState(0x6218, 0x8ef8, 0x3cf0, 0x1b2d, 0x491d, 0x9c37, 0x0, 0x1);
        gbc.writeMem(0x6218, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8ef8);
        EXPECT(gbc.pc(), 0x621a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 020D
        gbc.setState(0x6e44, 0x9b0, 0x13b0, 0x47df, 0x5502, 0xf1f5, 0x1, 0x0);
        gbc.writeMem(0x6e44, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9b0);
        EXPECT(gbc.pc(), 0x6e46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 020E
        gbc.setState(0xbb83, 0xc7e, 0xf610, 0xe215, 0xf487, 0x824b, 0x1, 0x1);
        gbc.writeMem(0xbb83, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc7e);
        EXPECT(gbc.pc(), 0xbb85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb83), 0xcb);
        EXPECT(gbc.readMem(0xbb84), 0x81);
        // CB 81 020F
        gbc.setState(0x982f, 0xc7df, 0x87f0, 0x5595, 0x887c, 0x2c22, 0x1, 0x1);
        gbc.writeMem(0x982f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc7df);
        EXPECT(gbc.pc(), 0x9831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x982f), 0xcb);
        EXPECT(gbc.readMem(0x9830), 0x81);
        // CB 81 0210
        gbc.setState(0xd39e, 0xba0f, 0x2360, 0x26ff, 0x3a46, 0x8d1e, 0x0, 0x0);
        gbc.writeMem(0xd39e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xba0f);
        EXPECT(gbc.pc(), 0xd3a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd39e), 0xcb);
        EXPECT(gbc.readMem(0xd39f), 0x81);
        // CB 81 0211
        gbc.setState(0x48ef, 0xef58, 0x1110, 0xcca6, 0x32a7, 0x6051, 0x1, 0x1);
        gbc.writeMem(0x48ef, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xef58);
        EXPECT(gbc.pc(), 0x48f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0213
        gbc.setState(0xcdef, 0xec65, 0x45d0, 0x2078, 0xe37, 0x4b31, 0x1, 0x1);
        gbc.writeMem(0xcdef, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xec65);
        EXPECT(gbc.pc(), 0xcdf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdef), 0xcb);
        EXPECT(gbc.readMem(0xcdf0), 0x81);
        // CB 81 0214
        gbc.setState(0xe997, 0x49b8, 0xfb00, 0x4822, 0x571e, 0x3731, 0x0, 0x0);
        gbc.writeMem(0xe997, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x49b8);
        EXPECT(gbc.pc(), 0xe999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe997), 0xcb);
        EXPECT(gbc.readMem(0xe998), 0x81);
        // CB 81 0215
        gbc.setState(0xafdf, 0xc239, 0x3030, 0xb8d2, 0x7640, 0x2651, 0x1, 0x1);
        gbc.writeMem(0xafdf, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc239);
        EXPECT(gbc.pc(), 0xafe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafdf), 0xcb);
        EXPECT(gbc.readMem(0xafe0), 0x81);
        // CB 81 0216
        gbc.setState(0x159c, 0x4b8e, 0x5da0, 0x884f, 0x9776, 0x11f3, 0x0, 0x0);
        gbc.writeMem(0x159c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4b8e);
        EXPECT(gbc.pc(), 0x159e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0217
        gbc.setState(0x12d, 0xb33e, 0xb1b0, 0xb534, 0xb48c, 0x458f, 0x1, 0x0);
        gbc.writeMem(0x12d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb33e);
        EXPECT(gbc.pc(), 0x12f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0218
        gbc.setState(0xb005, 0xffe0, 0x5e10, 0x72df, 0xef63, 0xfad7, 0x1, 0x1);
        gbc.writeMem(0xb005, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xffe0);
        EXPECT(gbc.pc(), 0xb007);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb005), 0xcb);
        EXPECT(gbc.readMem(0xb006), 0x81);
        // CB 81 0219
        gbc.setState(0xd4b1, 0x3079, 0x9bc0, 0xe5d6, 0x5669, 0x2a8f, 0x1, 0x0);
        gbc.writeMem(0xd4b1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3079);
        EXPECT(gbc.pc(), 0xd4b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4b1), 0xcb);
        EXPECT(gbc.readMem(0xd4b2), 0x81);
        // CB 81 021A
        gbc.setState(0xaf18, 0x3698, 0xfa0, 0x9472, 0x82a5, 0x32bb, 0x0, 0x1);
        gbc.writeMem(0xaf18, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3698);
        EXPECT(gbc.pc(), 0xaf1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf18), 0xcb);
        EXPECT(gbc.readMem(0xaf19), 0x81);
        // CB 81 021B
        gbc.setState(0x8fe9, 0x5bda, 0x9880, 0xbe9c, 0x9663, 0x2072, 0x0, 0x1);
        gbc.writeMem(0x8fe9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5bda);
        EXPECT(gbc.pc(), 0x8feb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe9), 0xcb);
        EXPECT(gbc.readMem(0x8fea), 0x81);
        // CB 81 021C
        gbc.setState(0xc54b, 0x92d5, 0xbb20, 0x7983, 0xb40e, 0x658a, 0x1, 0x1);
        gbc.writeMem(0xc54b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x92d5);
        EXPECT(gbc.pc(), 0xc54d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc54b), 0xcb);
        EXPECT(gbc.readMem(0xc54c), 0x81);
        // CB 81 021D
        gbc.setState(0xbab3, 0x3b28, 0x7f20, 0x5321, 0xbdf2, 0x41a8, 0x1, 0x0);
        gbc.writeMem(0xbab3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3b28);
        EXPECT(gbc.pc(), 0xbab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab3), 0xcb);
        EXPECT(gbc.readMem(0xbab4), 0x81);
        // CB 81 021E
        gbc.setState(0xa228, 0x9205, 0x74d0, 0x7e5f, 0x2631, 0xa3b3, 0x1, 0x0);
        gbc.writeMem(0xa228, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9205);
        EXPECT(gbc.pc(), 0xa22a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa228), 0xcb);
        EXPECT(gbc.readMem(0xa229), 0x81);
        // CB 81 021F
        gbc.setState(0x92d2, 0xe61e, 0x25a0, 0xe76b, 0x7ecf, 0xdc52, 0x1, 0x1);
        gbc.writeMem(0x92d2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe61e);
        EXPECT(gbc.pc(), 0x92d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d2), 0xcb);
        EXPECT(gbc.readMem(0x92d3), 0x81);
        // CB 81 0220
        gbc.setState(0x9b18, 0x29c7, 0xaac0, 0xe5d3, 0x542a, 0xb645, 0x1, 0x0);
        gbc.writeMem(0x9b18, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x29c7);
        EXPECT(gbc.pc(), 0x9b1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b18), 0xcb);
        EXPECT(gbc.readMem(0x9b19), 0x81);
        // CB 81 0221
        gbc.setState(0x338c, 0x4b71, 0xe700, 0xcee2, 0x1b81, 0x9e85, 0x0, 0x0);
        gbc.writeMem(0x338c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4b71);
        EXPECT(gbc.pc(), 0x338e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0222
        gbc.setState(0x3f66, 0xa68a, 0x4120, 0xfa56, 0x2a0a, 0xe8d, 0x0, 0x1);
        gbc.writeMem(0x3f66, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa68a);
        EXPECT(gbc.pc(), 0x3f68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0223
        gbc.setState(0x1157, 0x966e, 0x4c30, 0x8f93, 0x723c, 0xeea0, 0x1, 0x0);
        gbc.writeMem(0x1157, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x966e);
        EXPECT(gbc.pc(), 0x1159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0224
        gbc.setState(0xcb18, 0xd654, 0x6560, 0x8df, 0x4fdf, 0x27fc, 0x1, 0x0);
        gbc.writeMem(0xcb18, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd654);
        EXPECT(gbc.pc(), 0xcb1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb18), 0xcb);
        EXPECT(gbc.readMem(0xcb19), 0x81);
        // CB 81 0225
        gbc.setState(0x4bc6, 0x87b1, 0xa430, 0x9d0, 0x41f1, 0x22ac, 0x1, 0x0);
        gbc.writeMem(0x4bc6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x87b1);
        EXPECT(gbc.pc(), 0x4bc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0226
        gbc.setState(0x391f, 0xd82a, 0xe6b0, 0xe1fd, 0xa3b0, 0x33e6, 0x0, 0x1);
        gbc.writeMem(0x391f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd82a);
        EXPECT(gbc.pc(), 0x3921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0228
        gbc.setState(0xea95, 0xa969, 0x81e0, 0xadf4, 0xba22, 0x719e, 0x1, 0x0);
        gbc.writeMem(0xea95, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa969);
        EXPECT(gbc.pc(), 0xea97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea95), 0xcb);
        EXPECT(gbc.readMem(0xea96), 0x81);
        // CB 81 0229
        gbc.setState(0xbce6, 0xb7e6, 0x26b0, 0xe20d, 0x5d64, 0x8977, 0x1, 0x0);
        gbc.writeMem(0xbce6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb7e6);
        EXPECT(gbc.pc(), 0xbce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbce6), 0xcb);
        EXPECT(gbc.readMem(0xbce7), 0x81);
        // CB 81 022A
        gbc.setState(0xcea7, 0xac98, 0x2210, 0xb187, 0x3c6b, 0xbfb9, 0x1, 0x0);
        gbc.writeMem(0xcea7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xac98);
        EXPECT(gbc.pc(), 0xcea9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea7), 0xcb);
        EXPECT(gbc.readMem(0xcea8), 0x81);
        // CB 81 022B
        gbc.setState(0x67a1, 0x5540, 0x2c00, 0xa63d, 0x2a71, 0x897d, 0x0, 0x1);
        gbc.writeMem(0x67a1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5540);
        EXPECT(gbc.pc(), 0x67a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 022C
        gbc.setState(0xa67f, 0x980f, 0x50a0, 0x14e6, 0x9c54, 0x5680, 0x0, 0x1);
        gbc.writeMem(0xa67f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x980f);
        EXPECT(gbc.pc(), 0xa681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa67f), 0xcb);
        EXPECT(gbc.readMem(0xa680), 0x81);
        // CB 81 022D
        gbc.setState(0x486a, 0xe484, 0xde0, 0x314e, 0xbde8, 0x910a, 0x0, 0x0);
        gbc.writeMem(0x486a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe484);
        EXPECT(gbc.pc(), 0x486c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 022E
        gbc.setState(0x9972, 0x7fc9, 0x1b00, 0x9900, 0x6c65, 0x3c8, 0x1, 0x1);
        gbc.writeMem(0x9972, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7fc9);
        EXPECT(gbc.pc(), 0x9974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9972), 0xcb);
        EXPECT(gbc.readMem(0x9973), 0x81);
        // CB 81 022F
        gbc.setState(0x3c1a, 0x2caa, 0xe600, 0xfac3, 0x8e0c, 0x6ff, 0x0, 0x1);
        gbc.writeMem(0x3c1a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2caa);
        EXPECT(gbc.pc(), 0x3c1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0231
        gbc.setState(0x2b01, 0x70fb, 0x9860, 0xae71, 0x53d5, 0x66de, 0x0, 0x1);
        gbc.writeMem(0x2b01, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x70fb);
        EXPECT(gbc.pc(), 0x2b03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0232
        gbc.setState(0xb70c, 0xcfd6, 0xf540, 0x5807, 0x2857, 0x8e80, 0x0, 0x1);
        gbc.writeMem(0xb70c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcfd6);
        EXPECT(gbc.pc(), 0xb70e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb70c), 0xcb);
        EXPECT(gbc.readMem(0xb70d), 0x81);
        // CB 81 0233
        gbc.setState(0x97e0, 0x8ebd, 0x40a0, 0x5d80, 0x1d61, 0x506, 0x0, 0x1);
        gbc.writeMem(0x97e0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8ebd);
        EXPECT(gbc.pc(), 0x97e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e0), 0xcb);
        EXPECT(gbc.readMem(0x97e1), 0x81);
        // CB 81 0234
        gbc.setState(0x230c, 0x7d29, 0x4e10, 0x58c1, 0x7a2a, 0xe5b3, 0x0, 0x0);
        gbc.writeMem(0x230c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7d29);
        EXPECT(gbc.pc(), 0x230e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0235
        gbc.setState(0x67e6, 0xb920, 0xff40, 0x2745, 0x952f, 0xd5ed, 0x1, 0x0);
        gbc.writeMem(0x67e6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb920);
        EXPECT(gbc.pc(), 0x67e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0236
        gbc.setState(0x3a7a, 0x6df4, 0x50c0, 0xf711, 0x1a1f, 0x6a24, 0x0, 0x1);
        gbc.writeMem(0x3a7a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6df4);
        EXPECT(gbc.pc(), 0x3a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0237
        gbc.setState(0x8647, 0x61e1, 0xbe00, 0xf573, 0x4137, 0x4ba2, 0x0, 0x0);
        gbc.writeMem(0x8647, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x61e1);
        EXPECT(gbc.pc(), 0x8649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8647), 0xcb);
        EXPECT(gbc.readMem(0x8648), 0x81);
        // CB 81 0238
        gbc.setState(0xb05a, 0xd429, 0xf910, 0x628d, 0xa784, 0xefa8, 0x1, 0x1);
        gbc.writeMem(0xb05a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd429);
        EXPECT(gbc.pc(), 0xb05c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb05a), 0xcb);
        EXPECT(gbc.readMem(0xb05b), 0x81);
        // CB 81 0239
        gbc.setState(0x6767, 0x682f, 0x70e0, 0xc36, 0x661a, 0x55ed, 0x0, 0x1);
        gbc.writeMem(0x6767, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x682f);
        EXPECT(gbc.pc(), 0x6769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 023A
        gbc.setState(0x83e0, 0x2d55, 0xa6a0, 0x4e3b, 0xa14c, 0xad40, 0x0, 0x1);
        gbc.writeMem(0x83e0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2d55);
        EXPECT(gbc.pc(), 0x83e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e0), 0xcb);
        EXPECT(gbc.readMem(0x83e1), 0x81);
        // CB 81 023B
        gbc.setState(0x81e5, 0x90f, 0x8d0, 0x1d94, 0x439d, 0x2f55, 0x1, 0x1);
        gbc.writeMem(0x81e5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x90f);
        EXPECT(gbc.pc(), 0x81e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81e5), 0xcb);
        EXPECT(gbc.readMem(0x81e6), 0x81);
        // CB 81 023C
        gbc.setState(0x79ba, 0x7950, 0x2020, 0xf117, 0xbf51, 0x3a7b, 0x0, 0x1);
        gbc.writeMem(0x79ba, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7950);
        EXPECT(gbc.pc(), 0x79bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 023D
        gbc.setState(0x7495, 0xe8ff, 0xd7d0, 0xd3a6, 0x491c, 0xc36c, 0x0, 0x1);
        gbc.writeMem(0x7495, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe8ff);
        EXPECT(gbc.pc(), 0x7497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 023E
        gbc.setState(0xa69e, 0xf9f2, 0xeb90, 0x1553, 0x7aeb, 0x4729, 0x0, 0x1);
        gbc.writeMem(0xa69e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf9f2);
        EXPECT(gbc.pc(), 0xa6a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa69e), 0xcb);
        EXPECT(gbc.readMem(0xa69f), 0x81);
        // CB 81 023F
        gbc.setState(0x6e02, 0xe434, 0xe720, 0x27fb, 0x3290, 0xee47, 0x1, 0x0);
        gbc.writeMem(0x6e02, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe434);
        EXPECT(gbc.pc(), 0x6e04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0240
        gbc.setState(0x8d74, 0x4118, 0x13c0, 0x5330, 0xdd37, 0xaed3, 0x0, 0x0);
        gbc.writeMem(0x8d74, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4118);
        EXPECT(gbc.pc(), 0x8d76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d74), 0xcb);
        EXPECT(gbc.readMem(0x8d75), 0x81);
        // CB 81 0241
        gbc.setState(0x19b7, 0xc6dc, 0xf60, 0xdcd3, 0x2c12, 0xe325, 0x0, 0x1);
        gbc.writeMem(0x19b7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc6dc);
        EXPECT(gbc.pc(), 0x19b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0242
        gbc.setState(0x44ec, 0xfcd1, 0xfcf0, 0xf0a1, 0xfda5, 0x7366, 0x1, 0x1);
        gbc.writeMem(0x44ec, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xfcd1);
        EXPECT(gbc.pc(), 0x44ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0243
        gbc.setState(0x267d, 0x278c, 0xb9a0, 0xff34, 0x9d0c, 0xf5a0, 0x0, 0x0);
        gbc.writeMem(0x267d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x278c);
        EXPECT(gbc.pc(), 0x267f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0244
        gbc.setState(0xdcc, 0xbc5a, 0xd710, 0x3aac, 0x8451, 0x6c9b, 0x1, 0x1);
        gbc.writeMem(0xdcc, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xbc5a);
        EXPECT(gbc.pc(), 0xdce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0245
        gbc.setState(0x2ed4, 0x92aa, 0x4630, 0xb9c6, 0xcf8, 0xc0b2, 0x1, 0x1);
        gbc.writeMem(0x2ed4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x92aa);
        EXPECT(gbc.pc(), 0x2ed6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0246
        gbc.setState(0x900a, 0x9286, 0x7fb0, 0x5a10, 0xcc31, 0x8511, 0x0, 0x1);
        gbc.writeMem(0x900a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9286);
        EXPECT(gbc.pc(), 0x900c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x900a), 0xcb);
        EXPECT(gbc.readMem(0x900b), 0x81);
        // CB 81 0247
        gbc.setState(0xa73, 0xd072, 0x3ff0, 0x7a75, 0x9fe1, 0x6f5e, 0x1, 0x0);
        gbc.writeMem(0xa73, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd072);
        EXPECT(gbc.pc(), 0xa75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0249
        gbc.setState(0x484d, 0xc2aa, 0x9870, 0x6783, 0x8130, 0xf35a, 0x1, 0x1);
        gbc.writeMem(0x484d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc2aa);
        EXPECT(gbc.pc(), 0x484f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 024A
        gbc.setState(0xa312, 0x5d20, 0xa780, 0x1f6f, 0x50ac, 0x885, 0x0, 0x1);
        gbc.writeMem(0xa312, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5d20);
        EXPECT(gbc.pc(), 0xa314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa312), 0xcb);
        EXPECT(gbc.readMem(0xa313), 0x81);
        // CB 81 024B
        gbc.setState(0x756c, 0xfff5, 0x6970, 0x2c22, 0x65b, 0xc2a7, 0x0, 0x0);
        gbc.writeMem(0x756c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xfff5);
        EXPECT(gbc.pc(), 0x756e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 024D
        gbc.setState(0x4122, 0x261b, 0x4440, 0x667b, 0xb8e2, 0xe19a, 0x0, 0x1);
        gbc.writeMem(0x4122, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x261b);
        EXPECT(gbc.pc(), 0x4124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 024E
        gbc.setState(0x15a8, 0x5a9c, 0xb1c0, 0xe1a, 0xf732, 0x2937, 0x0, 0x0);
        gbc.writeMem(0x15a8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5a9c);
        EXPECT(gbc.pc(), 0x15aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 024F
        gbc.setState(0xde1d, 0x6113, 0xbdd0, 0xfc31, 0x47ce, 0x8b97, 0x0, 0x1);
        gbc.writeMem(0xde1d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6113);
        EXPECT(gbc.pc(), 0xde1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde1d), 0xcb);
        EXPECT(gbc.readMem(0xde1e), 0x81);
        // CB 81 0250
        gbc.setState(0x1b52, 0xfae2, 0xca20, 0x51b7, 0x14be, 0x5d8b, 0x1, 0x1);
        gbc.writeMem(0x1b52, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xfae2);
        EXPECT(gbc.pc(), 0x1b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0251
        gbc.setState(0x625a, 0xc8d, 0x51f0, 0xa2c9, 0x3aa2, 0x5732, 0x0, 0x0);
        gbc.writeMem(0x625a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc8d);
        EXPECT(gbc.pc(), 0x625c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0252
        gbc.setState(0x1f4d, 0x110a, 0xa470, 0x2715, 0x2d9d, 0x5170, 0x1, 0x0);
        gbc.writeMem(0x1f4d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x110a);
        EXPECT(gbc.pc(), 0x1f4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0253
        gbc.setState(0xa8a4, 0xeb0d, 0x7a30, 0x7112, 0xe0d1, 0xa14, 0x1, 0x1);
        gbc.writeMem(0xa8a4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xeb0d);
        EXPECT(gbc.pc(), 0xa8a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8a4), 0xcb);
        EXPECT(gbc.readMem(0xa8a5), 0x81);
        // CB 81 0254
        gbc.setState(0x94a7, 0x5d17, 0xa6d0, 0xeafd, 0x2cc6, 0x3cd8, 0x1, 0x0);
        gbc.writeMem(0x94a7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5d17);
        EXPECT(gbc.pc(), 0x94a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94a7), 0xcb);
        EXPECT(gbc.readMem(0x94a8), 0x81);
        // CB 81 0255
        gbc.setState(0x380e, 0x67c5, 0x8680, 0x2d1e, 0x63f7, 0xd058, 0x0, 0x0);
        gbc.writeMem(0x380e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x67c5);
        EXPECT(gbc.pc(), 0x3810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0256
        gbc.setState(0x1129, 0x508f, 0x9370, 0xf9ef, 0x9454, 0x4687, 0x0, 0x0);
        gbc.writeMem(0x1129, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x508f);
        EXPECT(gbc.pc(), 0x112b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0257
        gbc.setState(0xcfa5, 0x25bd, 0xb920, 0xae03, 0xe140, 0xece2, 0x0, 0x1);
        gbc.writeMem(0xcfa5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x25bd);
        EXPECT(gbc.pc(), 0xcfa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfa5), 0xcb);
        EXPECT(gbc.readMem(0xcfa6), 0x81);
        // CB 81 0258
        gbc.setState(0x5803, 0x5ba9, 0xe370, 0xcf1a, 0xed64, 0x3660, 0x0, 0x0);
        gbc.writeMem(0x5803, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5ba9);
        EXPECT(gbc.pc(), 0x5805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0259
        gbc.setState(0xae98, 0x165d, 0xa6b0, 0x746, 0xca72, 0x86fb, 0x1, 0x1);
        gbc.writeMem(0xae98, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x165d);
        EXPECT(gbc.pc(), 0xae9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae98), 0xcb);
        EXPECT(gbc.readMem(0xae99), 0x81);
        // CB 81 025A
        gbc.setState(0x3d89, 0x388e, 0xb900, 0x7a40, 0x32fb, 0x8c9b, 0x0, 0x1);
        gbc.writeMem(0x3d89, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x388e);
        EXPECT(gbc.pc(), 0x3d8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 025B
        gbc.setState(0xd29c, 0x995f, 0x9f80, 0x2ed9, 0x98de, 0x8a64, 0x1, 0x0);
        gbc.writeMem(0xd29c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x995f);
        EXPECT(gbc.pc(), 0xd29e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd29c), 0xcb);
        EXPECT(gbc.readMem(0xd29d), 0x81);
        // CB 81 025C
        gbc.setState(0xc473, 0xd7f1, 0x8a90, 0x683c, 0xfd87, 0xb83a, 0x1, 0x0);
        gbc.writeMem(0xc473, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd7f1);
        EXPECT(gbc.pc(), 0xc475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc473), 0xcb);
        EXPECT(gbc.readMem(0xc474), 0x81);
        // CB 81 025D
        gbc.setState(0x148b, 0xb59d, 0xdb50, 0x5fae, 0x1480, 0xd476, 0x0, 0x1);
        gbc.writeMem(0x148b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb59d);
        EXPECT(gbc.pc(), 0x148d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 025E
        gbc.setState(0x2274, 0xc8a4, 0xcb50, 0x3a18, 0x8c07, 0xa429, 0x1, 0x1);
        gbc.writeMem(0x2274, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc8a4);
        EXPECT(gbc.pc(), 0x2276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 025F
        gbc.setState(0xba91, 0x2d56, 0x1f70, 0xc87c, 0xe6bd, 0xe06f, 0x0, 0x0);
        gbc.writeMem(0xba91, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2d56);
        EXPECT(gbc.pc(), 0xba93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba91), 0xcb);
        EXPECT(gbc.readMem(0xba92), 0x81);
        // CB 81 0260
        gbc.setState(0xdc5, 0xa20, 0xf9b0, 0xd7b7, 0x55fc, 0x7c7b, 0x0, 0x0);
        gbc.writeMem(0xdc5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa20);
        EXPECT(gbc.pc(), 0xdc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0261
        gbc.setState(0x1128, 0xf4e7, 0xd020, 0xb9ae, 0xd63, 0xf972, 0x0, 0x0);
        gbc.writeMem(0x1128, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf4e7);
        EXPECT(gbc.pc(), 0x112a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0262
        gbc.setState(0x82d9, 0xfe7b, 0xb050, 0x556, 0xee13, 0xccf8, 0x0, 0x1);
        gbc.writeMem(0x82d9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfe7b);
        EXPECT(gbc.pc(), 0x82db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d9), 0xcb);
        EXPECT(gbc.readMem(0x82da), 0x81);
        // CB 81 0263
        gbc.setState(0x1043, 0xb564, 0x8f90, 0x2579, 0x20e2, 0x865e, 0x1, 0x0);
        gbc.writeMem(0x1043, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb564);
        EXPECT(gbc.pc(), 0x1045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0264
        gbc.setState(0xe717, 0x4983, 0xeb70, 0xbccf, 0xa807, 0x4f33, 0x1, 0x0);
        gbc.writeMem(0xe717, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4983);
        EXPECT(gbc.pc(), 0xe719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe717), 0xcb);
        EXPECT(gbc.readMem(0xe718), 0x81);
        // CB 81 0265
        gbc.setState(0x608, 0x3847, 0x4590, 0xae42, 0x211d, 0x9f5f, 0x1, 0x1);
        gbc.writeMem(0x608, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3847);
        EXPECT(gbc.pc(), 0x60a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0266
        gbc.setState(0x23e1, 0x7b94, 0xd5f0, 0x4646, 0x56f9, 0xdd85, 0x0, 0x1);
        gbc.writeMem(0x23e1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7b94);
        EXPECT(gbc.pc(), 0x23e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0267
        gbc.setState(0xa0bc, 0x92f7, 0x6770, 0x18a7, 0x79ae, 0x83fe, 0x0, 0x1);
        gbc.writeMem(0xa0bc, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x92f7);
        EXPECT(gbc.pc(), 0xa0be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0bc), 0xcb);
        EXPECT(gbc.readMem(0xa0bd), 0x81);
        // CB 81 0268
        gbc.setState(0x57bd, 0x71d6, 0x6380, 0x1b8d, 0x9cf0, 0xf189, 0x1, 0x0);
        gbc.writeMem(0x57bd, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x71d6);
        EXPECT(gbc.pc(), 0x57bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0269
        gbc.setState(0xa232, 0x6764, 0xa450, 0x6676, 0x916b, 0xc294, 0x0, 0x0);
        gbc.writeMem(0xa232, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6764);
        EXPECT(gbc.pc(), 0xa234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa232), 0xcb);
        EXPECT(gbc.readMem(0xa233), 0x81);
        // CB 81 026A
        gbc.setState(0x95e0, 0x8557, 0x6b20, 0x6431, 0x9277, 0x36c4, 0x0, 0x0);
        gbc.writeMem(0x95e0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8557);
        EXPECT(gbc.pc(), 0x95e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e0), 0xcb);
        EXPECT(gbc.readMem(0x95e1), 0x81);
        // CB 81 026B
        gbc.setState(0x4779, 0x3921, 0xefa0, 0xad5c, 0x6fde, 0xe4d6, 0x0, 0x0);
        gbc.writeMem(0x4779, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3921);
        EXPECT(gbc.pc(), 0x477b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 026C
        gbc.setState(0x734b, 0x3697, 0x1680, 0xde2b, 0xfa48, 0xfe39, 0x0, 0x0);
        gbc.writeMem(0x734b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3697);
        EXPECT(gbc.pc(), 0x734d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 026D
        gbc.setState(0x7c01, 0xa7b2, 0xe990, 0xcf6c, 0x61d4, 0xc194, 0x0, 0x1);
        gbc.writeMem(0x7c01, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa7b2);
        EXPECT(gbc.pc(), 0x7c03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 026E
        gbc.setState(0x287d, 0x2479, 0x56e0, 0x2d8f, 0x540d, 0x438d, 0x1, 0x1);
        gbc.writeMem(0x287d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2479);
        EXPECT(gbc.pc(), 0x287f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 026F
        gbc.setState(0x966f, 0x679f, 0xb5c0, 0xe4f, 0xbd50, 0xb173, 0x0, 0x0);
        gbc.writeMem(0x966f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x679f);
        EXPECT(gbc.pc(), 0x9671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x966f), 0xcb);
        EXPECT(gbc.readMem(0x9670), 0x81);
        // CB 81 0270
        gbc.setState(0x3af4, 0x41eb, 0x8d30, 0x8a45, 0xb554, 0x1030, 0x1, 0x0);
        gbc.writeMem(0x3af4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x41eb);
        EXPECT(gbc.pc(), 0x3af6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0271
        gbc.setState(0xcd99, 0x8717, 0xda70, 0x4693, 0x8ac8, 0xdd9b, 0x0, 0x0);
        gbc.writeMem(0xcd99, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8717);
        EXPECT(gbc.pc(), 0xcd9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd99), 0xcb);
        EXPECT(gbc.readMem(0xcd9a), 0x81);
        // CB 81 0272
        gbc.setState(0x4ef3, 0x9de4, 0x4e20, 0xe154, 0xd6dc, 0x34b, 0x1, 0x1);
        gbc.writeMem(0x4ef3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9de4);
        EXPECT(gbc.pc(), 0x4ef5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0273
        gbc.setState(0xa746, 0x7b48, 0xd270, 0xa463, 0x2721, 0xdd41, 0x1, 0x1);
        gbc.writeMem(0xa746, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7b48);
        EXPECT(gbc.pc(), 0xa748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa746), 0xcb);
        EXPECT(gbc.readMem(0xa747), 0x81);
        // CB 81 0274
        gbc.setState(0x6344, 0xf277, 0xecb0, 0x3321, 0x9ec4, 0x5d57, 0x0, 0x1);
        gbc.writeMem(0x6344, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf277);
        EXPECT(gbc.pc(), 0x6346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0275
        gbc.setState(0x9210, 0x8ee8, 0x4400, 0x7914, 0x19f4, 0x8817, 0x0, 0x0);
        gbc.writeMem(0x9210, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8ee8);
        EXPECT(gbc.pc(), 0x9212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9210), 0xcb);
        EXPECT(gbc.readMem(0x9211), 0x81);
        // CB 81 0276
        gbc.setState(0x5266, 0xa850, 0x5f30, 0x6df3, 0xec17, 0x1a96, 0x0, 0x0);
        gbc.writeMem(0x5266, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa850);
        EXPECT(gbc.pc(), 0x5268);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0277
        gbc.setState(0xa62d, 0xfd2, 0x74a0, 0x42f7, 0x9f6b, 0x99d3, 0x0, 0x1);
        gbc.writeMem(0xa62d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xfd2);
        EXPECT(gbc.pc(), 0xa62f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa62d), 0xcb);
        EXPECT(gbc.readMem(0xa62e), 0x81);
        // CB 81 0278
        gbc.setState(0x3de8, 0x647d, 0xbbb0, 0x6733, 0x69fa, 0xb057, 0x0, 0x1);
        gbc.writeMem(0x3de8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x647d);
        EXPECT(gbc.pc(), 0x3dea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0279
        gbc.setState(0x41a9, 0x7c01, 0x760, 0xb165, 0x83e, 0xd111, 0x0, 0x1);
        gbc.writeMem(0x41a9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7c01);
        EXPECT(gbc.pc(), 0x41ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 027A
        gbc.setState(0xeb15, 0x52f5, 0xdab0, 0xabbb, 0xd17c, 0x6268, 0x1, 0x1);
        gbc.writeMem(0xeb15, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x52f5);
        EXPECT(gbc.pc(), 0xeb17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb15), 0xcb);
        EXPECT(gbc.readMem(0xeb16), 0x81);
        // CB 81 027B
        gbc.setState(0xb232, 0x5bf, 0x31c0, 0x5e09, 0x3fcd, 0x2468, 0x0, 0x0);
        gbc.writeMem(0xb232, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5bf);
        EXPECT(gbc.pc(), 0xb234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb232), 0xcb);
        EXPECT(gbc.readMem(0xb233), 0x81);
        // CB 81 027C
        gbc.setState(0xa81, 0xa156, 0x5ed0, 0xe074, 0x7ef5, 0x87c0, 0x1, 0x0);
        gbc.writeMem(0xa81, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa156);
        EXPECT(gbc.pc(), 0xa83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 027D
        gbc.setState(0x77e2, 0x9ec5, 0x8590, 0x88dd, 0x6d7a, 0xcaa1, 0x1, 0x1);
        gbc.writeMem(0x77e2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9ec5);
        EXPECT(gbc.pc(), 0x77e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 027E
        gbc.setState(0x1c82, 0xb33d, 0xbc50, 0xf65e, 0x9ee8, 0xfb1, 0x1, 0x0);
        gbc.writeMem(0x1c82, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb33d);
        EXPECT(gbc.pc(), 0x1c84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 027F
        gbc.setState(0xed0f, 0x50c3, 0x43f0, 0xa1f4, 0x3b0a, 0xeb3c, 0x1, 0x0);
        gbc.writeMem(0xed0f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x50c3);
        EXPECT(gbc.pc(), 0xed11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed0f), 0xcb);
        EXPECT(gbc.readMem(0xed10), 0x81);
        // CB 81 0280
        gbc.setState(0x79cd, 0xc664, 0x4070, 0x1d45, 0x60dd, 0x49ff, 0x0, 0x1);
        gbc.writeMem(0x79cd, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc664);
        EXPECT(gbc.pc(), 0x79cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0281
        gbc.setState(0x79d9, 0xa975, 0x2550, 0xe47, 0xdf54, 0x9acd, 0x0, 0x0);
        gbc.writeMem(0x79d9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa975);
        EXPECT(gbc.pc(), 0x79db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0282
        gbc.setState(0xdff6, 0xf59e, 0x4040, 0x76a6, 0xbb98, 0x5f7a, 0x1, 0x1);
        gbc.writeMem(0xdff6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf59e);
        EXPECT(gbc.pc(), 0xdff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdff6), 0xcb);
        EXPECT(gbc.readMem(0xdff7), 0x81);
        // CB 81 0283
        gbc.setState(0xa0db, 0x67e1, 0xb6a0, 0x7486, 0x49ac, 0xc9a7, 0x0, 0x0);
        gbc.writeMem(0xa0db, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x67e1);
        EXPECT(gbc.pc(), 0xa0dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0db), 0xcb);
        EXPECT(gbc.readMem(0xa0dc), 0x81);
        // CB 81 0284
        gbc.setState(0xece3, 0xbf75, 0xd1d0, 0xa6bb, 0x85ed, 0xb23a, 0x0, 0x0);
        gbc.writeMem(0xece3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xbf75);
        EXPECT(gbc.pc(), 0xece5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xece3), 0xcb);
        EXPECT(gbc.readMem(0xece4), 0x81);
        // CB 81 0285
        gbc.setState(0xb696, 0x27cd, 0xa240, 0xa77, 0xed3, 0xefd8, 0x0, 0x1);
        gbc.writeMem(0xb696, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x27cd);
        EXPECT(gbc.pc(), 0xb698);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb696), 0xcb);
        EXPECT(gbc.readMem(0xb697), 0x81);
        // CB 81 0286
        gbc.setState(0xd32b, 0xf670, 0x250, 0x4d31, 0x4fe8, 0x908e, 0x1, 0x0);
        gbc.writeMem(0xd32b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf670);
        EXPECT(gbc.pc(), 0xd32d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd32b), 0xcb);
        EXPECT(gbc.readMem(0xd32c), 0x81);
        // CB 81 0287
        gbc.setState(0x873d, 0xf193, 0xe6d0, 0x670f, 0x99dd, 0xfc01, 0x0, 0x1);
        gbc.writeMem(0x873d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf193);
        EXPECT(gbc.pc(), 0x873f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x873d), 0xcb);
        EXPECT(gbc.readMem(0x873e), 0x81);
        // CB 81 0288
        gbc.setState(0xa6cd, 0xb9a3, 0x5e10, 0xc34c, 0x5da5, 0x15cd, 0x1, 0x0);
        gbc.writeMem(0xa6cd, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb9a3);
        EXPECT(gbc.pc(), 0xa6cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6cd), 0xcb);
        EXPECT(gbc.readMem(0xa6ce), 0x81);
        // CB 81 0289
        gbc.setState(0xb812, 0xbea8, 0xd590, 0xd2d8, 0x8ce4, 0xfa94, 0x1, 0x0);
        gbc.writeMem(0xb812, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbea8);
        EXPECT(gbc.pc(), 0xb814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb812), 0xcb);
        EXPECT(gbc.readMem(0xb813), 0x81);
        // CB 81 028A
        gbc.setState(0xdba4, 0x9c46, 0x7bb0, 0x203, 0x352c, 0xe1dd, 0x0, 0x1);
        gbc.writeMem(0xdba4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9c46);
        EXPECT(gbc.pc(), 0xdba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba4), 0xcb);
        EXPECT(gbc.readMem(0xdba5), 0x81);
        // CB 81 028B
        gbc.setState(0x6f3a, 0x19d1, 0x86b0, 0xff54, 0xe81b, 0xbea9, 0x1, 0x0);
        gbc.writeMem(0x6f3a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x19d1);
        EXPECT(gbc.pc(), 0x6f3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 028C
        gbc.setState(0x3a6e, 0x105f, 0x58b0, 0x6817, 0x3716, 0x196, 0x0, 0x1);
        gbc.writeMem(0x3a6e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x105f);
        EXPECT(gbc.pc(), 0x3a70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 028D
        gbc.setState(0xa517, 0x8aa0, 0x2e90, 0x46c6, 0x23af, 0x2a41, 0x0, 0x0);
        gbc.writeMem(0xa517, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8aa0);
        EXPECT(gbc.pc(), 0xa519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa517), 0xcb);
        EXPECT(gbc.readMem(0xa518), 0x81);
        // CB 81 028E
        gbc.setState(0x27bb, 0xd146, 0x1550, 0xd82f, 0x8c26, 0x7110, 0x0, 0x1);
        gbc.writeMem(0x27bb, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd146);
        EXPECT(gbc.pc(), 0x27bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 028F
        gbc.setState(0xe66b, 0x7e93, 0x3e0, 0x6b91, 0xccb9, 0xe500, 0x1, 0x1);
        gbc.writeMem(0xe66b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7e93);
        EXPECT(gbc.pc(), 0xe66d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe66b), 0xcb);
        EXPECT(gbc.readMem(0xe66c), 0x81);
        // CB 81 0290
        gbc.setState(0xdd7, 0x6c6a, 0x8560, 0x11a, 0x78a1, 0x58a3, 0x0, 0x0);
        gbc.writeMem(0xdd7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6c6a);
        EXPECT(gbc.pc(), 0xdd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0292
        gbc.setState(0x8eb7, 0x3331, 0x6990, 0x29a5, 0xf041, 0x7e83, 0x1, 0x1);
        gbc.writeMem(0x8eb7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3331);
        EXPECT(gbc.pc(), 0x8eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb7), 0xcb);
        EXPECT(gbc.readMem(0x8eb8), 0x81);
        // CB 81 0293
        gbc.setState(0xe8d2, 0xde6a, 0x4780, 0xdcf, 0xb1a3, 0x78f0, 0x0, 0x0);
        gbc.writeMem(0xe8d2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xde6a);
        EXPECT(gbc.pc(), 0xe8d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d2), 0xcb);
        EXPECT(gbc.readMem(0xe8d3), 0x81);
        // CB 81 0294
        gbc.setState(0x1478, 0x6a9a, 0x7360, 0x7e36, 0x18ac, 0x9837, 0x1, 0x1);
        gbc.writeMem(0x1478, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6a9a);
        EXPECT(gbc.pc(), 0x147a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0295
        gbc.setState(0x8d70, 0x8136, 0x1db0, 0x581c, 0xa994, 0x4afc, 0x1, 0x0);
        gbc.writeMem(0x8d70, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8136);
        EXPECT(gbc.pc(), 0x8d72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d70), 0xcb);
        EXPECT(gbc.readMem(0x8d71), 0x81);
        // CB 81 0296
        gbc.setState(0xd008, 0xbbb, 0xe120, 0x763e, 0xbce7, 0x85f2, 0x1, 0x1);
        gbc.writeMem(0xd008, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xbbb);
        EXPECT(gbc.pc(), 0xd00a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd008), 0xcb);
        EXPECT(gbc.readMem(0xd009), 0x81);
        // CB 81 0297
        gbc.setState(0xba86, 0x9d31, 0x4d90, 0x819a, 0xb562, 0xe0e4, 0x0, 0x1);
        gbc.writeMem(0xba86, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9d31);
        EXPECT(gbc.pc(), 0xba88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba86), 0xcb);
        EXPECT(gbc.readMem(0xba87), 0x81);
        // CB 81 0298
        gbc.setState(0x539, 0x30a6, 0x9e20, 0x3050, 0x3ba4, 0x616d, 0x1, 0x1);
        gbc.writeMem(0x539, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x30a6);
        EXPECT(gbc.pc(), 0x53b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0299
        gbc.setState(0x5294, 0x41e6, 0x3c10, 0x504, 0x524, 0xb36d, 0x1, 0x0);
        gbc.writeMem(0x5294, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x41e6);
        EXPECT(gbc.pc(), 0x5296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 029A
        gbc.setState(0x52d8, 0x81e7, 0x1360, 0x87ab, 0x7aa8, 0x8313, 0x0, 0x0);
        gbc.writeMem(0x52d8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x81e7);
        EXPECT(gbc.pc(), 0x52da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 029B
        gbc.setState(0xa5a3, 0x18e5, 0x2750, 0xde42, 0xedf, 0x4b20, 0x1, 0x1);
        gbc.writeMem(0xa5a3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x18e5);
        EXPECT(gbc.pc(), 0xa5a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5a3), 0xcb);
        EXPECT(gbc.readMem(0xa5a4), 0x81);
        // CB 81 029C
        gbc.setState(0x6ad7, 0x4687, 0xf30, 0x7b07, 0x6fb1, 0xb66c, 0x1, 0x0);
        gbc.writeMem(0x6ad7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4687);
        EXPECT(gbc.pc(), 0x6ad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 029D
        gbc.setState(0x4247, 0xb21c, 0xe6f0, 0x379d, 0x7e48, 0x8683, 0x1, 0x1);
        gbc.writeMem(0x4247, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb21c);
        EXPECT(gbc.pc(), 0x4249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 029E
        gbc.setState(0x462a, 0x8a48, 0x8660, 0x2227, 0xa9a3, 0x121a, 0x0, 0x1);
        gbc.writeMem(0x462a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8a48);
        EXPECT(gbc.pc(), 0x462c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 029F
        gbc.setState(0x9058, 0x9266, 0xa000, 0x727d, 0xa155, 0xf227, 0x1, 0x1);
        gbc.writeMem(0x9058, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9266);
        EXPECT(gbc.pc(), 0x905a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9058), 0xcb);
        EXPECT(gbc.readMem(0x9059), 0x81);
        // CB 81 02A0
        gbc.setState(0xbbe8, 0xe740, 0x10b0, 0xa859, 0x812a, 0xb881, 0x0, 0x0);
        gbc.writeMem(0xbbe8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe740);
        EXPECT(gbc.pc(), 0xbbea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe8), 0xcb);
        EXPECT(gbc.readMem(0xbbe9), 0x81);
        // CB 81 02A1
        gbc.setState(0x70e1, 0x31cf, 0x3fd0, 0x17a5, 0xfd69, 0x30bd, 0x1, 0x1);
        gbc.writeMem(0x70e1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x31cf);
        EXPECT(gbc.pc(), 0x70e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02A2
        gbc.setState(0x32a7, 0x5baf, 0x99e0, 0xc6e9, 0x36cf, 0x39d3, 0x0, 0x1);
        gbc.writeMem(0x32a7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5baf);
        EXPECT(gbc.pc(), 0x32a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02A3
        gbc.setState(0xca01, 0x2530, 0xf560, 0x3c9e, 0x65e, 0xffa, 0x0, 0x1);
        gbc.writeMem(0xca01, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2530);
        EXPECT(gbc.pc(), 0xca03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca01), 0xcb);
        EXPECT(gbc.readMem(0xca02), 0x81);
        // CB 81 02A4
        gbc.setState(0x5d9d, 0xaeda, 0xf280, 0xb214, 0xf816, 0x89b9, 0x0, 0x0);
        gbc.writeMem(0x5d9d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xaeda);
        EXPECT(gbc.pc(), 0x5d9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02A5
        gbc.setState(0xac52, 0xcb5f, 0x8d80, 0xf72, 0x630b, 0xf3c1, 0x1, 0x0);
        gbc.writeMem(0xac52, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xcb5f);
        EXPECT(gbc.pc(), 0xac54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac52), 0xcb);
        EXPECT(gbc.readMem(0xac53), 0x81);
        // CB 81 02A6
        gbc.setState(0x80dd, 0x6f47, 0x3850, 0x589d, 0x9d30, 0x4def, 0x1, 0x0);
        gbc.writeMem(0x80dd, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6f47);
        EXPECT(gbc.pc(), 0x80df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80dd), 0xcb);
        EXPECT(gbc.readMem(0x80de), 0x81);
        // CB 81 02A7
        gbc.setState(0xbf75, 0xbc3a, 0xd000, 0x31a5, 0xce57, 0xfb86, 0x0, 0x0);
        gbc.writeMem(0xbf75, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xbc3a);
        EXPECT(gbc.pc(), 0xbf77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf75), 0xcb);
        EXPECT(gbc.readMem(0xbf76), 0x81);
        // CB 81 02A8
        gbc.setState(0x2ed4, 0x169e, 0xd9e0, 0x609f, 0x8582, 0xe5ed, 0x0, 0x0);
        gbc.writeMem(0x2ed4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x169e);
        EXPECT(gbc.pc(), 0x2ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02A9
        gbc.setState(0x5710, 0xba9c, 0xdb0, 0xb2db, 0xd75a, 0xa7a5, 0x0, 0x1);
        gbc.writeMem(0x5710, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xba9c);
        EXPECT(gbc.pc(), 0x5712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02AA
        gbc.setState(0x952, 0x7b47, 0xce10, 0x2f3f, 0x1235, 0x514a, 0x0, 0x0);
        gbc.writeMem(0x952, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7b47);
        EXPECT(gbc.pc(), 0x954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02AB
        gbc.setState(0xd42, 0x74e, 0x5340, 0x2c51, 0x950d, 0xd132, 0x1, 0x1);
        gbc.writeMem(0xd42, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x74e);
        EXPECT(gbc.pc(), 0xd44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02AC
        gbc.setState(0x4065, 0xa5c0, 0x77f0, 0x7e0e, 0x88d, 0xc9a7, 0x0, 0x1);
        gbc.writeMem(0x4065, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa5c0);
        EXPECT(gbc.pc(), 0x4067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02AD
        gbc.setState(0x3d8f, 0x43c4, 0x1c10, 0x4f44, 0x1719, 0x895e, 0x1, 0x1);
        gbc.writeMem(0x3d8f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x43c4);
        EXPECT(gbc.pc(), 0x3d91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02AE
        gbc.setState(0x154f, 0x487c, 0x16d0, 0x5b6d, 0xd638, 0xb921, 0x0, 0x1);
        gbc.writeMem(0x154f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x487c);
        EXPECT(gbc.pc(), 0x1551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02AF
        gbc.setState(0xd9c8, 0x47e0, 0x6580, 0x5fee, 0x3e58, 0xa29a, 0x0, 0x1);
        gbc.writeMem(0xd9c8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x47e0);
        EXPECT(gbc.pc(), 0xd9ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c8), 0xcb);
        EXPECT(gbc.readMem(0xd9c9), 0x81);
        // CB 81 02B0
        gbc.setState(0x81f7, 0x3aeb, 0x3ee0, 0xeab8, 0xc9fb, 0xe35, 0x1, 0x1);
        gbc.writeMem(0x81f7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3aeb);
        EXPECT(gbc.pc(), 0x81f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f7), 0xcb);
        EXPECT(gbc.readMem(0x81f8), 0x81);
        // CB 81 02B1
        gbc.setState(0x5191, 0x6467, 0xc280, 0x1eff, 0xc3a7, 0x8554, 0x0, 0x0);
        gbc.writeMem(0x5191, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6467);
        EXPECT(gbc.pc(), 0x5193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02B2
        gbc.setState(0x19e4, 0x1595, 0x45c0, 0xb306, 0x1c2c, 0xd84e, 0x0, 0x1);
        gbc.writeMem(0x19e4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1595);
        EXPECT(gbc.pc(), 0x19e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02B3
        gbc.setState(0x8b52, 0x2d9c, 0x2f40, 0xbdc, 0xad6f, 0xb90b, 0x1, 0x1);
        gbc.writeMem(0x8b52, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2d9c);
        EXPECT(gbc.pc(), 0x8b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b52), 0xcb);
        EXPECT(gbc.readMem(0x8b53), 0x81);
        // CB 81 02B4
        gbc.setState(0x6e54, 0x43c2, 0xb430, 0xafeb, 0x2779, 0xb229, 0x1, 0x0);
        gbc.writeMem(0x6e54, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x43c2);
        EXPECT(gbc.pc(), 0x6e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02B5
        gbc.setState(0x48b5, 0x511f, 0x3550, 0x3688, 0x4f5a, 0x30c4, 0x0, 0x0);
        gbc.writeMem(0x48b5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x511f);
        EXPECT(gbc.pc(), 0x48b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02B6
        gbc.setState(0x7612, 0x513c, 0xa300, 0x4d7b, 0xecb2, 0xd5c2, 0x0, 0x1);
        gbc.writeMem(0x7612, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x513c);
        EXPECT(gbc.pc(), 0x7614);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02B7
        gbc.setState(0x86cf, 0x8909, 0x3830, 0x31a0, 0x2255, 0x9ee3, 0x0, 0x0);
        gbc.writeMem(0x86cf, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8909);
        EXPECT(gbc.pc(), 0x86d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86cf), 0xcb);
        EXPECT(gbc.readMem(0x86d0), 0x81);
        // CB 81 02B8
        gbc.setState(0xb03f, 0xc46b, 0x44f0, 0xbccf, 0xc03a, 0x57c0, 0x0, 0x1);
        gbc.writeMem(0xb03f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc46b);
        EXPECT(gbc.pc(), 0xb041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb03f), 0xcb);
        EXPECT(gbc.readMem(0xb040), 0x81);
        // CB 81 02B9
        gbc.setState(0xecbc, 0xbd5, 0x56b0, 0xcbfe, 0x1717, 0xc967, 0x1, 0x1);
        gbc.writeMem(0xecbc, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbd5);
        EXPECT(gbc.pc(), 0xecbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecbc), 0xcb);
        EXPECT(gbc.readMem(0xecbd), 0x81);
        // CB 81 02BA
        gbc.setState(0xa0ab, 0x95da, 0xe860, 0xef86, 0x1cdb, 0xa9f9, 0x0, 0x0);
        gbc.writeMem(0xa0ab, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x95da);
        EXPECT(gbc.pc(), 0xa0ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ab), 0xcb);
        EXPECT(gbc.readMem(0xa0ac), 0x81);
        // CB 81 02BB
        gbc.setState(0xe08a, 0x60cd, 0xd9f0, 0xae79, 0xf94e, 0x55b, 0x1, 0x1);
        gbc.writeMem(0xe08a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x60cd);
        EXPECT(gbc.pc(), 0xe08c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe08a), 0xcb);
        EXPECT(gbc.readMem(0xe08b), 0x81);
        // CB 81 02BC
        gbc.setState(0x5612, 0x5294, 0x8750, 0xf2b9, 0xc29e, 0xea2c, 0x0, 0x0);
        gbc.writeMem(0x5612, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5294);
        EXPECT(gbc.pc(), 0x5614);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02BD
        gbc.setState(0x721, 0x22fd, 0xd430, 0xea0a, 0xe325, 0xf373, 0x1, 0x0);
        gbc.writeMem(0x721, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x22fd);
        EXPECT(gbc.pc(), 0x723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02BE
        gbc.setState(0x5e3a, 0xc39f, 0x8c30, 0x1d16, 0x769d, 0xa4ac, 0x1, 0x0);
        gbc.writeMem(0x5e3a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc39f);
        EXPECT(gbc.pc(), 0x5e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02BF
        gbc.setState(0xee87, 0x61f1, 0x7a00, 0x3042, 0x5fc8, 0x8743, 0x1, 0x1);
        gbc.writeMem(0xee87, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x61f1);
        EXPECT(gbc.pc(), 0xee89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee87), 0xcb);
        EXPECT(gbc.readMem(0xee88), 0x81);
        // CB 81 02C0
        gbc.setState(0x6633, 0xeab9, 0xba90, 0x91a8, 0x6aa, 0x8b81, 0x1, 0x0);
        gbc.writeMem(0x6633, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xeab9);
        EXPECT(gbc.pc(), 0x6635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02C1
        gbc.setState(0x79d7, 0x9a1, 0x7900, 0xb7e9, 0xeb24, 0xd515, 0x1, 0x0);
        gbc.writeMem(0x79d7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9a1);
        EXPECT(gbc.pc(), 0x79d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02C2
        gbc.setState(0x9892, 0xce1e, 0x9320, 0x67a8, 0x6aff, 0xf17c, 0x1, 0x1);
        gbc.writeMem(0x9892, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xce1e);
        EXPECT(gbc.pc(), 0x9894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9892), 0xcb);
        EXPECT(gbc.readMem(0x9893), 0x81);
        // CB 81 02C3
        gbc.setState(0x57c6, 0x132c, 0x4f90, 0xb219, 0x35dc, 0x66db, 0x1, 0x0);
        gbc.writeMem(0x57c6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x132c);
        EXPECT(gbc.pc(), 0x57c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02C5
        gbc.setState(0xb5a7, 0x951, 0xf520, 0xe9cf, 0x7b89, 0xc3e5, 0x1, 0x1);
        gbc.writeMem(0xb5a7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x951);
        EXPECT(gbc.pc(), 0xb5a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a7), 0xcb);
        EXPECT(gbc.readMem(0xb5a8), 0x81);
        // CB 81 02C6
        gbc.setState(0x2e79, 0x8a9b, 0xaee0, 0x80ed, 0x547b, 0xb2ed, 0x0, 0x1);
        gbc.writeMem(0x2e79, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8a9b);
        EXPECT(gbc.pc(), 0x2e7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02C7
        gbc.setState(0xa424, 0x9ac4, 0x46a0, 0x8d1e, 0x39cc, 0xc96d, 0x1, 0x1);
        gbc.writeMem(0xa424, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9ac4);
        EXPECT(gbc.pc(), 0xa426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa424), 0xcb);
        EXPECT(gbc.readMem(0xa425), 0x81);
        // CB 81 02C8
        gbc.setState(0x1fae, 0x21de, 0x2e10, 0x4095, 0x1798, 0xf9d6, 0x1, 0x1);
        gbc.writeMem(0x1fae, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x21de);
        EXPECT(gbc.pc(), 0x1fb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02C9
        gbc.setState(0x519f, 0x4eb3, 0x83f0, 0x2b71, 0xc44c, 0xfac0, 0x1, 0x0);
        gbc.writeMem(0x519f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4eb3);
        EXPECT(gbc.pc(), 0x51a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02CA
        gbc.setState(0x66a4, 0xf835, 0xc370, 0xd4b5, 0xe72e, 0xedc1, 0x0, 0x1);
        gbc.writeMem(0x66a4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf835);
        EXPECT(gbc.pc(), 0x66a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02CB
        gbc.setState(0xe012, 0x7448, 0x19e0, 0xc5f6, 0x4c52, 0x71ba, 0x1, 0x0);
        gbc.writeMem(0xe012, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7448);
        EXPECT(gbc.pc(), 0xe014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe012), 0xcb);
        EXPECT(gbc.readMem(0xe013), 0x81);
        // CB 81 02CC
        gbc.setState(0x2baf, 0xdacb, 0xa5e0, 0x54d0, 0xaa8, 0x5113, 0x0, 0x0);
        gbc.writeMem(0x2baf, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdacb);
        EXPECT(gbc.pc(), 0x2bb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02CD
        gbc.setState(0xad49, 0x51ae, 0xc080, 0xfeab, 0xa77f, 0xf368, 0x0, 0x0);
        gbc.writeMem(0xad49, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x51ae);
        EXPECT(gbc.pc(), 0xad4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad49), 0xcb);
        EXPECT(gbc.readMem(0xad4a), 0x81);
        // CB 81 02CE
        gbc.setState(0x92e6, 0x6b24, 0x8e20, 0x426c, 0x442a, 0xb482, 0x1, 0x1);
        gbc.writeMem(0x92e6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6b24);
        EXPECT(gbc.pc(), 0x92e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e6), 0xcb);
        EXPECT(gbc.readMem(0x92e7), 0x81);
        // CB 81 02CF
        gbc.setState(0xe7d3, 0x3092, 0x5940, 0x67e7, 0xa14a, 0x3b1e, 0x0, 0x0);
        gbc.writeMem(0xe7d3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3092);
        EXPECT(gbc.pc(), 0xe7d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7d3), 0xcb);
        EXPECT(gbc.readMem(0xe7d4), 0x81);
        // CB 81 02D0
        gbc.setState(0xee05, 0xc5e0, 0xe130, 0x78b2, 0x4888, 0x2d20, 0x0, 0x1);
        gbc.writeMem(0xee05, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc5e0);
        EXPECT(gbc.pc(), 0xee07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee05), 0xcb);
        EXPECT(gbc.readMem(0xee06), 0x81);
        // CB 81 02D1
        gbc.setState(0x9983, 0x7288, 0x2da0, 0x34ce, 0x58c7, 0x900c, 0x1, 0x1);
        gbc.writeMem(0x9983, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7288);
        EXPECT(gbc.pc(), 0x9985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9983), 0xcb);
        EXPECT(gbc.readMem(0x9984), 0x81);
        // CB 81 02D2
        gbc.setState(0xecbf, 0x800c, 0x6c60, 0xc78, 0x7af5, 0x716a, 0x0, 0x0);
        gbc.writeMem(0xecbf, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x800c);
        EXPECT(gbc.pc(), 0xecc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecbf), 0xcb);
        EXPECT(gbc.readMem(0xecc0), 0x81);
        // CB 81 02D3
        gbc.setState(0x5712, 0x40ff, 0x6780, 0x88a1, 0xa01d, 0x9c35, 0x0, 0x1);
        gbc.writeMem(0x5712, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x40ff);
        EXPECT(gbc.pc(), 0x5714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02D4
        gbc.setState(0x45af, 0x411c, 0x3800, 0x614d, 0x8808, 0xb187, 0x0, 0x1);
        gbc.writeMem(0x45af, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x411c);
        EXPECT(gbc.pc(), 0x45b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02D5
        gbc.setState(0xc5f7, 0x106b, 0x3cb0, 0x6691, 0x3527, 0x7527, 0x0, 0x1);
        gbc.writeMem(0xc5f7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x106b);
        EXPECT(gbc.pc(), 0xc5f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f7), 0xcb);
        EXPECT(gbc.readMem(0xc5f8), 0x81);
        // CB 81 02D6
        gbc.setState(0x44e5, 0x462f, 0xc9f0, 0x650c, 0xd4e7, 0x2c72, 0x0, 0x1);
        gbc.writeMem(0x44e5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x462f);
        EXPECT(gbc.pc(), 0x44e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02D7
        gbc.setState(0x5bba, 0x9776, 0x29c0, 0xec8, 0x2868, 0x1c39, 0x0, 0x1);
        gbc.writeMem(0x5bba, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9776);
        EXPECT(gbc.pc(), 0x5bbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02D8
        gbc.setState(0xa10b, 0x368a, 0x85d0, 0x5578, 0xff71, 0xa999, 0x0, 0x1);
        gbc.writeMem(0xa10b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x368a);
        EXPECT(gbc.pc(), 0xa10d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa10b), 0xcb);
        EXPECT(gbc.readMem(0xa10c), 0x81);
        // CB 81 02DA
        gbc.setState(0x550f, 0x5f6, 0xf090, 0x5076, 0xfa0c, 0xa151, 0x0, 0x1);
        gbc.writeMem(0x550f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5f6);
        EXPECT(gbc.pc(), 0x5511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02DB
        gbc.setState(0x47e5, 0x674b, 0x4df0, 0xaf75, 0x524a, 0x6e13, 0x1, 0x1);
        gbc.writeMem(0x47e5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x674b);
        EXPECT(gbc.pc(), 0x47e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02DC
        gbc.setState(0xa971, 0xdf2d, 0x37a0, 0xf74b, 0xa34e, 0xe98e, 0x0, 0x0);
        gbc.writeMem(0xa971, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdf2d);
        EXPECT(gbc.pc(), 0xa973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa971), 0xcb);
        EXPECT(gbc.readMem(0xa972), 0x81);
        // CB 81 02DD
        gbc.setState(0x31a3, 0xc194, 0xe1f0, 0xa645, 0xe4f1, 0x4a62, 0x1, 0x0);
        gbc.writeMem(0x31a3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc194);
        EXPECT(gbc.pc(), 0x31a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02DE
        gbc.setState(0x673e, 0x40be, 0x6fe0, 0x4551, 0x7fe1, 0x7706, 0x1, 0x0);
        gbc.writeMem(0x673e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x40be);
        EXPECT(gbc.pc(), 0x6740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02DF
        gbc.setState(0xb26a, 0x91a3, 0x43b0, 0xd6e8, 0xb945, 0x35c5, 0x1, 0x1);
        gbc.writeMem(0xb26a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x91a3);
        EXPECT(gbc.pc(), 0xb26c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb26a), 0xcb);
        EXPECT(gbc.readMem(0xb26b), 0x81);
        // CB 81 02E0
        gbc.setState(0xa3ab, 0xf4, 0xb000, 0x1e11, 0x7b4b, 0x5c4e, 0x1, 0x0);
        gbc.writeMem(0xa3ab, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf4);
        EXPECT(gbc.pc(), 0xa3ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ab), 0xcb);
        EXPECT(gbc.readMem(0xa3ac), 0x81);
        // CB 81 02E1
        gbc.setState(0x3603, 0x1135, 0x5f10, 0x41d3, 0xb8e8, 0xdb80, 0x0, 0x0);
        gbc.writeMem(0x3603, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1135);
        EXPECT(gbc.pc(), 0x3605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02E2
        gbc.setState(0xbaee, 0xf786, 0x1e90, 0x2ef3, 0xa47a, 0xf96, 0x0, 0x0);
        gbc.writeMem(0xbaee, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf786);
        EXPECT(gbc.pc(), 0xbaf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaee), 0xcb);
        EXPECT(gbc.readMem(0xbaef), 0x81);
        // CB 81 02E3
        gbc.setState(0xe847, 0x305f, 0x2550, 0x4087, 0x90cd, 0x7830, 0x0, 0x0);
        gbc.writeMem(0xe847, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x305f);
        EXPECT(gbc.pc(), 0xe849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe847), 0xcb);
        EXPECT(gbc.readMem(0xe848), 0x81);
        // CB 81 02E4
        gbc.setState(0x189d, 0xa812, 0xf150, 0x762b, 0xad70, 0x4f1, 0x0, 0x0);
        gbc.writeMem(0x189d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa812);
        EXPECT(gbc.pc(), 0x189f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02E5
        gbc.setState(0x9081, 0xbe30, 0x9910, 0xa1ad, 0xe3c8, 0x6cf9, 0x1, 0x0);
        gbc.writeMem(0x9081, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbe30);
        EXPECT(gbc.pc(), 0x9083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9081), 0xcb);
        EXPECT(gbc.readMem(0x9082), 0x81);
        // CB 81 02E7
        gbc.setState(0xe8db, 0xefa1, 0xb8e0, 0x7cf9, 0x7fb9, 0x84d2, 0x0, 0x0);
        gbc.writeMem(0xe8db, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xefa1);
        EXPECT(gbc.pc(), 0xe8dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8db), 0xcb);
        EXPECT(gbc.readMem(0xe8dc), 0x81);
        // CB 81 02E8
        gbc.setState(0x8b96, 0x7da4, 0xf520, 0x66fa, 0xa3b3, 0xb14, 0x0, 0x0);
        gbc.writeMem(0x8b96, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7da4);
        EXPECT(gbc.pc(), 0x8b98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b96), 0xcb);
        EXPECT(gbc.readMem(0x8b97), 0x81);
        // CB 81 02E9
        gbc.setState(0x59d2, 0x796f, 0x6040, 0x5514, 0x65b1, 0x9d88, 0x0, 0x1);
        gbc.writeMem(0x59d2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x796f);
        EXPECT(gbc.pc(), 0x59d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02EA
        gbc.setState(0x6f62, 0x1fa, 0x3220, 0xc085, 0x917c, 0xe27d, 0x1, 0x0);
        gbc.writeMem(0x6f62, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1fa);
        EXPECT(gbc.pc(), 0x6f64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02EB
        gbc.setState(0x424e, 0x212c, 0xc320, 0x1e83, 0x9b06, 0x7158, 0x1, 0x0);
        gbc.writeMem(0x424e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x212c);
        EXPECT(gbc.pc(), 0x4250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02EE
        gbc.setState(0x921c, 0xd79e, 0x7ee0, 0xf465, 0xe8a7, 0xa158, 0x1, 0x1);
        gbc.writeMem(0x921c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd79e);
        EXPECT(gbc.pc(), 0x921e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x921c), 0xcb);
        EXPECT(gbc.readMem(0x921d), 0x81);
        // CB 81 02EF
        gbc.setState(0x9945, 0x296, 0x4450, 0xcdb0, 0x7dc0, 0x766c, 0x0, 0x0);
        gbc.writeMem(0x9945, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x296);
        EXPECT(gbc.pc(), 0x9947);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9945), 0xcb);
        EXPECT(gbc.readMem(0x9946), 0x81);
        // CB 81 02F0
        gbc.setState(0x7bbe, 0x61da, 0x8aa0, 0x796a, 0xa1c5, 0xc2f8, 0x1, 0x1);
        gbc.writeMem(0x7bbe, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x61da);
        EXPECT(gbc.pc(), 0x7bc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02F1
        gbc.setState(0x279f, 0x255, 0x6bc0, 0x33d0, 0x7dd3, 0xa129, 0x0, 0x0);
        gbc.writeMem(0x279f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x255);
        EXPECT(gbc.pc(), 0x27a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02F2
        gbc.setState(0x6f71, 0xeeef, 0x3520, 0xd778, 0x102d, 0xc217, 0x1, 0x0);
        gbc.writeMem(0x6f71, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xeeef);
        EXPECT(gbc.pc(), 0x6f73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02F3
        gbc.setState(0xa580, 0xb31f, 0x5d10, 0x280e, 0x2722, 0x7f14, 0x0, 0x0);
        gbc.writeMem(0xa580, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb31f);
        EXPECT(gbc.pc(), 0xa582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa580), 0xcb);
        EXPECT(gbc.readMem(0xa581), 0x81);
        // CB 81 02F4
        gbc.setState(0x137a, 0x618a, 0xf1a0, 0x3f88, 0xb6dc, 0x65f0, 0x0, 0x0);
        gbc.writeMem(0x137a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x618a);
        EXPECT(gbc.pc(), 0x137c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02F5
        gbc.setState(0x882a, 0xa21b, 0xba0, 0xd1a0, 0x878c, 0x4833, 0x1, 0x1);
        gbc.writeMem(0x882a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa21b);
        EXPECT(gbc.pc(), 0x882c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x882a), 0xcb);
        EXPECT(gbc.readMem(0x882b), 0x81);
        // CB 81 02F6
        gbc.setState(0xe0aa, 0x3026, 0x34e0, 0x2e75, 0x67fb, 0xc0c4, 0x0, 0x1);
        gbc.writeMem(0xe0aa, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3026);
        EXPECT(gbc.pc(), 0xe0ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0aa), 0xcb);
        EXPECT(gbc.readMem(0xe0ab), 0x81);
        // CB 81 02F7
        gbc.setState(0xaac3, 0x5d84, 0xe6a0, 0xf5d6, 0x2395, 0xc44c, 0x1, 0x0);
        gbc.writeMem(0xaac3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5d84);
        EXPECT(gbc.pc(), 0xaac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaac3), 0xcb);
        EXPECT(gbc.readMem(0xaac4), 0x81);
        // CB 81 02F8
        gbc.setState(0xd7e1, 0xcbcd, 0x98b0, 0x82ec, 0xa40a, 0x3f6e, 0x0, 0x1);
        gbc.writeMem(0xd7e1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcbcd);
        EXPECT(gbc.pc(), 0xd7e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e1), 0xcb);
        EXPECT(gbc.readMem(0xd7e2), 0x81);
        // CB 81 02F9
        gbc.setState(0x365c, 0x5ae5, 0xd00, 0xa199, 0x2eda, 0xb027, 0x1, 0x0);
        gbc.writeMem(0x365c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5ae5);
        EXPECT(gbc.pc(), 0x365e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02FA
        gbc.setState(0x516, 0x8a42, 0x6780, 0x4326, 0x2480, 0x527d, 0x1, 0x0);
        gbc.writeMem(0x516, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8a42);
        EXPECT(gbc.pc(), 0x518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02FC
        gbc.setState(0x1d1, 0x77be, 0xb610, 0x395c, 0xf7c5, 0x408e, 0x1, 0x1);
        gbc.writeMem(0x1d1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x77be);
        EXPECT(gbc.pc(), 0x1d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 02FD
        gbc.setState(0x43c1, 0x5dce, 0x8d60, 0xadfb, 0x24d3, 0x5356, 0x0, 0x1);
        gbc.writeMem(0x43c1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5dce);
        EXPECT(gbc.pc(), 0x43c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02FE
        gbc.setState(0xf96, 0xb5e2, 0x97c0, 0x6707, 0x1e97, 0x60fb, 0x0, 0x0);
        gbc.writeMem(0xf96, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb5e2);
        EXPECT(gbc.pc(), 0xf98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 02FF
        gbc.setState(0xd055, 0x9672, 0x7610, 0x33ad, 0x965d, 0x4995, 0x1, 0x1);
        gbc.writeMem(0xd055, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9672);
        EXPECT(gbc.pc(), 0xd057);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd055), 0xcb);
        EXPECT(gbc.readMem(0xd056), 0x81);
        // CB 81 0300
        gbc.setState(0xe8b9, 0xefa4, 0xd560, 0x3c6c, 0x8bfe, 0x566a, 0x1, 0x1);
        gbc.writeMem(0xe8b9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xefa4);
        EXPECT(gbc.pc(), 0xe8bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b9), 0xcb);
        EXPECT(gbc.readMem(0xe8ba), 0x81);
        // CB 81 0301
        gbc.setState(0x765c, 0x89fc, 0xa8d0, 0x30f5, 0x5f12, 0x85d1, 0x1, 0x0);
        gbc.writeMem(0x765c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x89fc);
        EXPECT(gbc.pc(), 0x765e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0302
        gbc.setState(0x1a88, 0xcac5, 0xf420, 0x4ea1, 0xe672, 0xf6f3, 0x1, 0x1);
        gbc.writeMem(0x1a88, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xcac5);
        EXPECT(gbc.pc(), 0x1a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0303
        gbc.setState(0x6d76, 0xd0d5, 0xd860, 0x90fb, 0x1c11, 0xd5f8, 0x0, 0x0);
        gbc.writeMem(0x6d76, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd0d5);
        EXPECT(gbc.pc(), 0x6d78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0304
        gbc.setState(0x3acc, 0x184e, 0xb80, 0x4937, 0x3047, 0x1c8, 0x1, 0x1);
        gbc.writeMem(0x3acc, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x184e);
        EXPECT(gbc.pc(), 0x3ace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0305
        gbc.setState(0x72f4, 0xa2c, 0x8d50, 0x20fc, 0xfaea, 0x1063, 0x1, 0x0);
        gbc.writeMem(0x72f4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa2c);
        EXPECT(gbc.pc(), 0x72f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0306
        gbc.setState(0x142e, 0xac91, 0x4ba0, 0x231c, 0x59d8, 0x8b0, 0x1, 0x0);
        gbc.writeMem(0x142e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xac91);
        EXPECT(gbc.pc(), 0x1430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0307
        gbc.setState(0xca1b, 0x1156, 0x6e10, 0xe861, 0xf14e, 0xd700, 0x0, 0x1);
        gbc.writeMem(0xca1b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1156);
        EXPECT(gbc.pc(), 0xca1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca1b), 0xcb);
        EXPECT(gbc.readMem(0xca1c), 0x81);
        // CB 81 0309
        gbc.setState(0xad44, 0x38df, 0x7ac0, 0xb912, 0xf7f8, 0x482, 0x0, 0x1);
        gbc.writeMem(0xad44, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x38df);
        EXPECT(gbc.pc(), 0xad46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad44), 0xcb);
        EXPECT(gbc.readMem(0xad45), 0x81);
        // CB 81 030A
        gbc.setState(0x7ecd, 0xa833, 0xe910, 0x4c1, 0xa3ed, 0xa2cf, 0x0, 0x1);
        gbc.writeMem(0x7ecd, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa833);
        EXPECT(gbc.pc(), 0x7ecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 030B
        gbc.setState(0x8be2, 0x6d6f, 0x3200, 0x964f, 0xb364, 0x9c0f, 0x0, 0x1);
        gbc.writeMem(0x8be2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6d6f);
        EXPECT(gbc.pc(), 0x8be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be2), 0xcb);
        EXPECT(gbc.readMem(0x8be3), 0x81);
        // CB 81 030C
        gbc.setState(0x17c, 0xbb4, 0xf210, 0x74a9, 0x2ec5, 0xfa42, 0x0, 0x0);
        gbc.writeMem(0x17c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xbb4);
        EXPECT(gbc.pc(), 0x17e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 030D
        gbc.setState(0x4f32, 0x4c36, 0xeb80, 0x8630, 0xe868, 0x9620, 0x0, 0x1);
        gbc.writeMem(0x4f32, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4c36);
        EXPECT(gbc.pc(), 0x4f34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 030E
        gbc.setState(0xb8f1, 0x3f01, 0x1560, 0xf5b8, 0x51ed, 0x6c42, 0x1, 0x1);
        gbc.writeMem(0xb8f1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3f01);
        EXPECT(gbc.pc(), 0xb8f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f1), 0xcb);
        EXPECT(gbc.readMem(0xb8f2), 0x81);
        // CB 81 030F
        gbc.setState(0xc68d, 0x205f, 0x1be0, 0xd44f, 0x308, 0x70e7, 0x0, 0x1);
        gbc.writeMem(0xc68d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x205f);
        EXPECT(gbc.pc(), 0xc68f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc68d), 0xcb);
        EXPECT(gbc.readMem(0xc68e), 0x81);
        // CB 81 0310
        gbc.setState(0x925a, 0xc4e3, 0x58c0, 0xe56f, 0x4a0a, 0x3b28, 0x1, 0x0);
        gbc.writeMem(0x925a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc4e3);
        EXPECT(gbc.pc(), 0x925c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x925a), 0xcb);
        EXPECT(gbc.readMem(0x925b), 0x81);
        // CB 81 0311
        gbc.setState(0xc2bd, 0x543f, 0xac50, 0xed7f, 0x8817, 0xa7bc, 0x0, 0x1);
        gbc.writeMem(0xc2bd, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x543f);
        EXPECT(gbc.pc(), 0xc2bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2bd), 0xcb);
        EXPECT(gbc.readMem(0xc2be), 0x81);
        // CB 81 0312
        gbc.setState(0x4b96, 0xba6b, 0xa8c0, 0xb91d, 0xfc4d, 0x776, 0x1, 0x1);
        gbc.writeMem(0x4b96, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xba6b);
        EXPECT(gbc.pc(), 0x4b98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0314
        gbc.setState(0xb482, 0x7db5, 0xc1c0, 0x92b4, 0x9e1e, 0x142a, 0x1, 0x0);
        gbc.writeMem(0xb482, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7db5);
        EXPECT(gbc.pc(), 0xb484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb482), 0xcb);
        EXPECT(gbc.readMem(0xb483), 0x81);
        // CB 81 0315
        gbc.setState(0x48a, 0xefba, 0x4db0, 0xad95, 0xb618, 0xcd83, 0x1, 0x0);
        gbc.writeMem(0x48a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xefba);
        EXPECT(gbc.pc(), 0x48c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0316
        gbc.setState(0xa9b0, 0xd5de, 0xfcd0, 0x8af3, 0xa9fd, 0x2b4, 0x0, 0x0);
        gbc.writeMem(0xa9b0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd5de);
        EXPECT(gbc.pc(), 0xa9b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9b0), 0xcb);
        EXPECT(gbc.readMem(0xa9b1), 0x81);
        // CB 81 0317
        gbc.setState(0x179, 0x12d, 0x220, 0x53b8, 0x549a, 0x3cf3, 0x1, 0x1);
        gbc.writeMem(0x179, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x12d);
        EXPECT(gbc.pc(), 0x17b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0318
        gbc.setState(0xdb2c, 0x8bd4, 0xd480, 0x89fe, 0xccde, 0xb56d, 0x1, 0x0);
        gbc.writeMem(0xdb2c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8bd4);
        EXPECT(gbc.pc(), 0xdb2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb2c), 0xcb);
        EXPECT(gbc.readMem(0xdb2d), 0x81);
        // CB 81 0319
        gbc.setState(0x936c, 0x7c0f, 0x4b00, 0x3163, 0x390e, 0x3200, 0x0, 0x0);
        gbc.writeMem(0x936c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7c0f);
        EXPECT(gbc.pc(), 0x936e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x936c), 0xcb);
        EXPECT(gbc.readMem(0x936d), 0x81);
        // CB 81 031A
        gbc.setState(0xa701, 0xf9a7, 0x3850, 0xd3, 0x96ad, 0x519a, 0x0, 0x1);
        gbc.writeMem(0xa701, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf9a7);
        EXPECT(gbc.pc(), 0xa703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa701), 0xcb);
        EXPECT(gbc.readMem(0xa702), 0x81);
        // CB 81 031B
        gbc.setState(0xb080, 0x7656, 0x64b0, 0x99c6, 0x23c, 0x8df5, 0x0, 0x1);
        gbc.writeMem(0xb080, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7656);
        EXPECT(gbc.pc(), 0xb082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb080), 0xcb);
        EXPECT(gbc.readMem(0xb081), 0x81);
        // CB 81 031C
        gbc.setState(0xd4b0, 0xc44b, 0x5020, 0x2e0a, 0x6a06, 0x26aa, 0x0, 0x1);
        gbc.writeMem(0xd4b0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc44b);
        EXPECT(gbc.pc(), 0xd4b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4b0), 0xcb);
        EXPECT(gbc.readMem(0xd4b1), 0x81);
        // CB 81 031D
        gbc.setState(0x6b7, 0x992a, 0xde0, 0x540d, 0x183f, 0xa4ed, 0x0, 0x1);
        gbc.writeMem(0x6b7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x992a);
        EXPECT(gbc.pc(), 0x6b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 031E
        gbc.setState(0x642, 0x87c5, 0x72e0, 0x2a76, 0x7c27, 0xa789, 0x1, 0x0);
        gbc.writeMem(0x642, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x87c5);
        EXPECT(gbc.pc(), 0x644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 031F
        gbc.setState(0x27af, 0x87fb, 0xd9b0, 0x66fd, 0xbdeb, 0x932b, 0x1, 0x1);
        gbc.writeMem(0x27af, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x87fb);
        EXPECT(gbc.pc(), 0x27b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0320
        gbc.setState(0x8a8c, 0xb6ca, 0x2da0, 0x449e, 0xb74a, 0xdea1, 0x1, 0x0);
        gbc.writeMem(0x8a8c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb6ca);
        EXPECT(gbc.pc(), 0x8a8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a8c), 0xcb);
        EXPECT(gbc.readMem(0x8a8d), 0x81);
        // CB 81 0321
        gbc.setState(0xdcc2, 0xaa0b, 0xfff0, 0xa246, 0x1c88, 0xeff1, 0x0, 0x1);
        gbc.writeMem(0xdcc2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xaa0b);
        EXPECT(gbc.pc(), 0xdcc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcc2), 0xcb);
        EXPECT(gbc.readMem(0xdcc3), 0x81);
        // CB 81 0322
        gbc.setState(0xd562, 0x1e7f, 0xd530, 0x3779, 0x4acd, 0x66ce, 0x1, 0x1);
        gbc.writeMem(0xd562, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1e7f);
        EXPECT(gbc.pc(), 0xd564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd562), 0xcb);
        EXPECT(gbc.readMem(0xd563), 0x81);
        // CB 81 0323
        gbc.setState(0xc623, 0x1d86, 0x7010, 0x46b6, 0x7e34, 0xeed8, 0x0, 0x1);
        gbc.writeMem(0xc623, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1d86);
        EXPECT(gbc.pc(), 0xc625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc623), 0xcb);
        EXPECT(gbc.readMem(0xc624), 0x81);
        // CB 81 0324
        gbc.setState(0x70a0, 0xd30b, 0x3df0, 0x799d, 0xa510, 0x377a, 0x0, 0x0);
        gbc.writeMem(0x70a0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd30b);
        EXPECT(gbc.pc(), 0x70a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0325
        gbc.setState(0xcda0, 0x7bca, 0x7f80, 0x9fb, 0xce52, 0x30e8, 0x1, 0x1);
        gbc.writeMem(0xcda0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7bca);
        EXPECT(gbc.pc(), 0xcda2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcda0), 0xcb);
        EXPECT(gbc.readMem(0xcda1), 0x81);
        // CB 81 0326
        gbc.setState(0x8b22, 0xb2d1, 0xca50, 0xff7b, 0x3643, 0xca92, 0x1, 0x0);
        gbc.writeMem(0x8b22, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb2d1);
        EXPECT(gbc.pc(), 0x8b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b22), 0xcb);
        EXPECT(gbc.readMem(0x8b23), 0x81);
        // CB 81 0328
        gbc.setState(0x29e4, 0x2bbd, 0xccb0, 0x1b64, 0x382c, 0xa0ea, 0x0, 0x0);
        gbc.writeMem(0x29e4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2bbd);
        EXPECT(gbc.pc(), 0x29e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0329
        gbc.setState(0x6c33, 0x910b, 0xa120, 0xa235, 0x4317, 0x2025, 0x1, 0x0);
        gbc.writeMem(0x6c33, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x910b);
        EXPECT(gbc.pc(), 0x6c35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 032A
        gbc.setState(0xad60, 0xba88, 0xe200, 0x35bd, 0x2230, 0xdc9c, 0x0, 0x1);
        gbc.writeMem(0xad60, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xba88);
        EXPECT(gbc.pc(), 0xad62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad60), 0xcb);
        EXPECT(gbc.readMem(0xad61), 0x81);
        // CB 81 032B
        gbc.setState(0xe3a1, 0x9254, 0x8d10, 0xb45f, 0x71b9, 0xe435, 0x1, 0x1);
        gbc.writeMem(0xe3a1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9254);
        EXPECT(gbc.pc(), 0xe3a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3a1), 0xcb);
        EXPECT(gbc.readMem(0xe3a2), 0x81);
        // CB 81 032D
        gbc.setState(0x509d, 0xcd52, 0x2460, 0xa982, 0x422, 0xe422, 0x1, 0x0);
        gbc.writeMem(0x509d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xcd52);
        EXPECT(gbc.pc(), 0x509f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 032E
        gbc.setState(0x306b, 0x676, 0x2390, 0xd7cb, 0x9dc3, 0xd358, 0x0, 0x0);
        gbc.writeMem(0x306b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x676);
        EXPECT(gbc.pc(), 0x306d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 032F
        gbc.setState(0x50c6, 0x4367, 0x6e0, 0x4fed, 0x15b6, 0x64f6, 0x0, 0x0);
        gbc.writeMem(0x50c6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4367);
        EXPECT(gbc.pc(), 0x50c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0330
        gbc.setState(0x686b, 0x39df, 0x8b00, 0x21cc, 0xaab8, 0x849, 0x1, 0x0);
        gbc.writeMem(0x686b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x39df);
        EXPECT(gbc.pc(), 0x686d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0331
        gbc.setState(0x507b, 0xb959, 0x2b30, 0x8c14, 0x904, 0x83cb, 0x0, 0x0);
        gbc.writeMem(0x507b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb959);
        EXPECT(gbc.pc(), 0x507d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0332
        gbc.setState(0x616, 0x5cd7, 0x7100, 0x7f28, 0xcbf4, 0x9da5, 0x1, 0x0);
        gbc.writeMem(0x616, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5cd7);
        EXPECT(gbc.pc(), 0x618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0333
        gbc.setState(0x4765, 0x19ab, 0xc3a0, 0x6a9e, 0x323f, 0x49f9, 0x1, 0x1);
        gbc.writeMem(0x4765, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x19ab);
        EXPECT(gbc.pc(), 0x4767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0334
        gbc.setState(0x3fda, 0x7559, 0xed00, 0x174b, 0x7718, 0x2da4, 0x0, 0x1);
        gbc.writeMem(0x3fda, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7559);
        EXPECT(gbc.pc(), 0x3fdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0335
        gbc.setState(0xed80, 0x7f69, 0x2b80, 0x249, 0x5e8a, 0x9aa0, 0x0, 0x0);
        gbc.writeMem(0xed80, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7f69);
        EXPECT(gbc.pc(), 0xed82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed80), 0xcb);
        EXPECT(gbc.readMem(0xed81), 0x81);
        // CB 81 0336
        gbc.setState(0x66c7, 0x467a, 0xc540, 0x8f38, 0xdc7, 0xf4d9, 0x1, 0x1);
        gbc.writeMem(0x66c7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x467a);
        EXPECT(gbc.pc(), 0x66c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0337
        gbc.setState(0x4639, 0xcba9, 0xde70, 0x5495, 0x75bd, 0xe9b6, 0x1, 0x1);
        gbc.writeMem(0x4639, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcba9);
        EXPECT(gbc.pc(), 0x463b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0338
        gbc.setState(0x1c70, 0x346f, 0xd2e0, 0x97cc, 0x85ad, 0xcbc8, 0x1, 0x0);
        gbc.writeMem(0x1c70, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x346f);
        EXPECT(gbc.pc(), 0x1c72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0339
        gbc.setState(0xeb13, 0x6f73, 0x24a0, 0x1d3d, 0xef01, 0x1797, 0x1, 0x0);
        gbc.writeMem(0xeb13, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6f73);
        EXPECT(gbc.pc(), 0xeb15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb13), 0xcb);
        EXPECT(gbc.readMem(0xeb14), 0x81);
        // CB 81 033A
        gbc.setState(0x4c67, 0x7ee9, 0xaa70, 0x6802, 0xcea9, 0xe1a9, 0x0, 0x1);
        gbc.writeMem(0x4c67, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7ee9);
        EXPECT(gbc.pc(), 0x4c69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 033B
        gbc.setState(0x7f47, 0xe989, 0xa70, 0x8ad6, 0x2a5e, 0x8fd, 0x1, 0x0);
        gbc.writeMem(0x7f47, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe989);
        EXPECT(gbc.pc(), 0x7f49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 033C
        gbc.setState(0x6c0e, 0xb89c, 0x2c40, 0x8635, 0xf062, 0x6203, 0x1, 0x1);
        gbc.writeMem(0x6c0e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb89c);
        EXPECT(gbc.pc(), 0x6c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 033D
        gbc.setState(0x5dfa, 0xd37e, 0x21e0, 0xf128, 0x9cf2, 0x1c32, 0x1, 0x0);
        gbc.writeMem(0x5dfa, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd37e);
        EXPECT(gbc.pc(), 0x5dfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 033E
        gbc.setState(0x75b0, 0x99ae, 0x83e0, 0xb716, 0xb1f1, 0x19a0, 0x0, 0x0);
        gbc.writeMem(0x75b0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x99ae);
        EXPECT(gbc.pc(), 0x75b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 033F
        gbc.setState(0x97a3, 0xe3fd, 0x48e0, 0xf691, 0xba58, 0x5406, 0x1, 0x0);
        gbc.writeMem(0x97a3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe3fd);
        EXPECT(gbc.pc(), 0x97a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97a3), 0xcb);
        EXPECT(gbc.readMem(0x97a4), 0x81);
        // CB 81 0340
        gbc.setState(0xd76c, 0xc4bc, 0xa950, 0x409, 0x483e, 0xc98e, 0x1, 0x1);
        gbc.writeMem(0xd76c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc4bc);
        EXPECT(gbc.pc(), 0xd76e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd76c), 0xcb);
        EXPECT(gbc.readMem(0xd76d), 0x81);
        // CB 81 0341
        gbc.setState(0xdf28, 0x21ae, 0x2e10, 0x9d87, 0x8fda, 0xc729, 0x1, 0x0);
        gbc.writeMem(0xdf28, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x21ae);
        EXPECT(gbc.pc(), 0xdf2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf28), 0xcb);
        EXPECT(gbc.readMem(0xdf29), 0x81);
        // CB 81 0342
        gbc.setState(0xd47c, 0xab61, 0xe7e0, 0x49a0, 0x8ffc, 0x687a, 0x0, 0x0);
        gbc.writeMem(0xd47c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xab61);
        EXPECT(gbc.pc(), 0xd47e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd47c), 0xcb);
        EXPECT(gbc.readMem(0xd47d), 0x81);
        // CB 81 0343
        gbc.setState(0xd8ac, 0x72d0, 0x3a90, 0xb2a6, 0x6977, 0xe9bc, 0x0, 0x0);
        gbc.writeMem(0xd8ac, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x72d0);
        EXPECT(gbc.pc(), 0xd8ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8ac), 0xcb);
        EXPECT(gbc.readMem(0xd8ad), 0x81);
        // CB 81 0344
        gbc.setState(0x926a, 0xa136, 0x2de0, 0xb291, 0xeacb, 0x5f44, 0x0, 0x0);
        gbc.writeMem(0x926a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa136);
        EXPECT(gbc.pc(), 0x926c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x926a), 0xcb);
        EXPECT(gbc.readMem(0x926b), 0x81);
        // CB 81 0345
        gbc.setState(0xe807, 0x279b, 0x6c80, 0x8a06, 0x2087, 0x4e95, 0x0, 0x0);
        gbc.writeMem(0xe807, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x279b);
        EXPECT(gbc.pc(), 0xe809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe807), 0xcb);
        EXPECT(gbc.readMem(0xe808), 0x81);
        // CB 81 0347
        gbc.setState(0x75d2, 0xf5f1, 0x35b0, 0xf46e, 0x8f00, 0x5f61, 0x1, 0x0);
        gbc.writeMem(0x75d2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf5f1);
        EXPECT(gbc.pc(), 0x75d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0348
        gbc.setState(0x1451, 0x9656, 0xd580, 0x1989, 0x7420, 0x28a2, 0x0, 0x0);
        gbc.writeMem(0x1451, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9656);
        EXPECT(gbc.pc(), 0x1453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0349
        gbc.setState(0x4fc, 0x973d, 0xca10, 0x92bc, 0xfb35, 0x23af, 0x1, 0x0);
        gbc.writeMem(0x4fc, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x973d);
        EXPECT(gbc.pc(), 0x4fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 034A
        gbc.setState(0xe106, 0x865b, 0xd060, 0xb495, 0x44e4, 0xc890, 0x0, 0x0);
        gbc.writeMem(0xe106, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x865b);
        EXPECT(gbc.pc(), 0xe108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe106), 0xcb);
        EXPECT(gbc.readMem(0xe107), 0x81);
        // CB 81 034B
        gbc.setState(0xd995, 0x710, 0x75e0, 0xab29, 0x52ac, 0xf0a1, 0x1, 0x1);
        gbc.writeMem(0xd995, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x710);
        EXPECT(gbc.pc(), 0xd997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd995), 0xcb);
        EXPECT(gbc.readMem(0xd996), 0x81);
        // CB 81 034C
        gbc.setState(0xd389, 0xe076, 0xc810, 0x3434, 0xfb0e, 0x16c7, 0x0, 0x0);
        gbc.writeMem(0xd389, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe076);
        EXPECT(gbc.pc(), 0xd38b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd389), 0xcb);
        EXPECT(gbc.readMem(0xd38a), 0x81);
        // CB 81 034D
        gbc.setState(0x3d83, 0x2c1c, 0x44f0, 0x28a0, 0x8026, 0xe668, 0x1, 0x0);
        gbc.writeMem(0x3d83, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2c1c);
        EXPECT(gbc.pc(), 0x3d85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 034E
        gbc.setState(0x3a41, 0x1815, 0xafe0, 0x283a, 0x1545, 0x32ca, 0x0, 0x1);
        gbc.writeMem(0x3a41, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1815);
        EXPECT(gbc.pc(), 0x3a43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 034F
        gbc.setState(0xcde5, 0xafe8, 0xa950, 0x4e6a, 0x580b, 0x8683, 0x1, 0x1);
        gbc.writeMem(0xcde5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xafe8);
        EXPECT(gbc.pc(), 0xcde7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde5), 0xcb);
        EXPECT(gbc.readMem(0xcde6), 0x81);
        // CB 81 0350
        gbc.setState(0x472e, 0xfe78, 0x5600, 0x9f6b, 0x6b9, 0x52a0, 0x0, 0x1);
        gbc.writeMem(0x472e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfe78);
        EXPECT(gbc.pc(), 0x4730);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0351
        gbc.setState(0x35c7, 0x160c, 0x3c20, 0xf3c6, 0x4395, 0xefea, 0x0, 0x0);
        gbc.writeMem(0x35c7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x160c);
        EXPECT(gbc.pc(), 0x35c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0352
        gbc.setState(0xd0e1, 0xcd17, 0x2270, 0xd6ab, 0xec42, 0xc41a, 0x0, 0x0);
        gbc.writeMem(0xd0e1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xcd17);
        EXPECT(gbc.pc(), 0xd0e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0e1), 0xcb);
        EXPECT(gbc.readMem(0xd0e2), 0x81);
        // CB 81 0353
        gbc.setState(0x153c, 0x4893, 0xfdd0, 0xae3a, 0xb438, 0xc16c, 0x1, 0x0);
        gbc.writeMem(0x153c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4893);
        EXPECT(gbc.pc(), 0x153e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0355
        gbc.setState(0x1761, 0x7dec, 0xaa0, 0xab62, 0x6ec8, 0xef79, 0x0, 0x0);
        gbc.writeMem(0x1761, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7dec);
        EXPECT(gbc.pc(), 0x1763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0356
        gbc.setState(0x418, 0x2196, 0x59e0, 0x325d, 0x89bb, 0xf42c, 0x0, 0x0);
        gbc.writeMem(0x418, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2196);
        EXPECT(gbc.pc(), 0x41a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0357
        gbc.setState(0x2a04, 0x87a, 0x1010, 0x1daf, 0x257b, 0xd0a3, 0x0, 0x0);
        gbc.writeMem(0x2a04, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x87a);
        EXPECT(gbc.pc(), 0x2a06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0358
        gbc.setState(0xca29, 0x10e8, 0x4050, 0x1f76, 0x5c, 0xa88, 0x0, 0x1);
        gbc.writeMem(0xca29, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x10e8);
        EXPECT(gbc.pc(), 0xca2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca29), 0xcb);
        EXPECT(gbc.readMem(0xca2a), 0x81);
        // CB 81 0359
        gbc.setState(0x2f0e, 0x6c18, 0x4440, 0x91ef, 0xb2d5, 0xc242, 0x0, 0x1);
        gbc.writeMem(0x2f0e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6c18);
        EXPECT(gbc.pc(), 0x2f10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 035A
        gbc.setState(0x8f21, 0xd34f, 0xecb0, 0x8dca, 0xbdc8, 0x256f, 0x0, 0x0);
        gbc.writeMem(0x8f21, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd34f);
        EXPECT(gbc.pc(), 0x8f23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f21), 0xcb);
        EXPECT(gbc.readMem(0x8f22), 0x81);
        // CB 81 035B
        gbc.setState(0x2562, 0xc5e1, 0x63c0, 0x65b, 0x452, 0xd6d8, 0x0, 0x0);
        gbc.writeMem(0x2562, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc5e1);
        EXPECT(gbc.pc(), 0x2564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 035C
        gbc.setState(0x26e6, 0x8aac, 0xdc70, 0xdbe1, 0xe5b7, 0x620b, 0x1, 0x0);
        gbc.writeMem(0x26e6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8aac);
        EXPECT(gbc.pc(), 0x26e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 035D
        gbc.setState(0x8e2e, 0x3454, 0x5ea0, 0xe877, 0xa0af, 0x76a6, 0x0, 0x0);
        gbc.writeMem(0x8e2e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3454);
        EXPECT(gbc.pc(), 0x8e30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e2e), 0xcb);
        EXPECT(gbc.readMem(0x8e2f), 0x81);
        // CB 81 035E
        gbc.setState(0xc657, 0x1a7e, 0x39a0, 0xb2d2, 0xf496, 0x8fe2, 0x1, 0x0);
        gbc.writeMem(0xc657, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1a7e);
        EXPECT(gbc.pc(), 0xc659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc657), 0xcb);
        EXPECT(gbc.readMem(0xc658), 0x81);
        // CB 81 035F
        gbc.setState(0x3313, 0x2bdf, 0x1f20, 0x8158, 0x256f, 0xe9d0, 0x1, 0x1);
        gbc.writeMem(0x3313, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2bdf);
        EXPECT(gbc.pc(), 0x3315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0360
        gbc.setState(0x7f93, 0x944c, 0x26e0, 0x1fa0, 0x599, 0x8a80, 0x0, 0x0);
        gbc.writeMem(0x7f93, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x944c);
        EXPECT(gbc.pc(), 0x7f95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0361
        gbc.setState(0x2dc5, 0x49a8, 0x9fb0, 0x73e6, 0xdcd7, 0xd7ea, 0x1, 0x0);
        gbc.writeMem(0x2dc5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x49a8);
        EXPECT(gbc.pc(), 0x2dc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0362
        gbc.setState(0xacd, 0x388d, 0x3a70, 0xa56a, 0xd4f4, 0xc917, 0x1, 0x0);
        gbc.writeMem(0xacd, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x388d);
        EXPECT(gbc.pc(), 0xacf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0363
        gbc.setState(0x8646, 0xd178, 0x130, 0xc876, 0x5653, 0xaac8, 0x1, 0x1);
        gbc.writeMem(0x8646, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd178);
        EXPECT(gbc.pc(), 0x8648);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8646), 0xcb);
        EXPECT(gbc.readMem(0x8647), 0x81);
        // CB 81 0364
        gbc.setState(0xe411, 0xb577, 0x41c0, 0x22fc, 0xf6ff, 0x8b82, 0x0, 0x1);
        gbc.writeMem(0xe411, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb577);
        EXPECT(gbc.pc(), 0xe413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe411), 0xcb);
        EXPECT(gbc.readMem(0xe412), 0x81);
        // CB 81 0365
        gbc.setState(0x929, 0x66ab, 0xa880, 0x1cf0, 0xa3be, 0x747b, 0x0, 0x1);
        gbc.writeMem(0x929, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x66ab);
        EXPECT(gbc.pc(), 0x92b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0366
        gbc.setState(0x99b3, 0xdc3a, 0x7900, 0x806b, 0x2e6, 0x4d72, 0x0, 0x1);
        gbc.writeMem(0x99b3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xdc3a);
        EXPECT(gbc.pc(), 0x99b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99b3), 0xcb);
        EXPECT(gbc.readMem(0x99b4), 0x81);
        // CB 81 0367
        gbc.setState(0x642f, 0x7861, 0xc70, 0xe4e4, 0x43e, 0x5675, 0x0, 0x1);
        gbc.writeMem(0x642f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7861);
        EXPECT(gbc.pc(), 0x6431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0368
        gbc.setState(0xc820, 0xee8c, 0x1590, 0x7ba, 0xd6b9, 0x55e5, 0x1, 0x1);
        gbc.writeMem(0xc820, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xee8c);
        EXPECT(gbc.pc(), 0xc822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc820), 0xcb);
        EXPECT(gbc.readMem(0xc821), 0x81);
        // CB 81 0369
        gbc.setState(0x35d8, 0xe470, 0xdde0, 0x1c74, 0x3637, 0x376c, 0x1, 0x0);
        gbc.writeMem(0x35d8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe470);
        EXPECT(gbc.pc(), 0x35da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 036A
        gbc.setState(0x67ea, 0x1e33, 0xa900, 0xf721, 0x2798, 0xcd56, 0x1, 0x1);
        gbc.writeMem(0x67ea, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1e33);
        EXPECT(gbc.pc(), 0x67ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 036B
        gbc.setState(0x113d, 0x83d6, 0xd470, 0x1fba, 0x4a5a, 0x6cc8, 0x0, 0x1);
        gbc.writeMem(0x113d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x83d6);
        EXPECT(gbc.pc(), 0x113f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 036C
        gbc.setState(0x7ef, 0x3f15, 0x7bb0, 0xc3d, 0xea2b, 0x38b2, 0x0, 0x0);
        gbc.writeMem(0x7ef, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3f15);
        EXPECT(gbc.pc(), 0x7f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 036D
        gbc.setState(0xcc59, 0x9ec3, 0x81b0, 0x2316, 0x3bc6, 0xac81, 0x0, 0x0);
        gbc.writeMem(0xcc59, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9ec3);
        EXPECT(gbc.pc(), 0xcc5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc59), 0xcb);
        EXPECT(gbc.readMem(0xcc5a), 0x81);
        // CB 81 036E
        gbc.setState(0x3b47, 0xed35, 0x7950, 0x275a, 0x7f14, 0xc7f, 0x0, 0x1);
        gbc.writeMem(0x3b47, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xed35);
        EXPECT(gbc.pc(), 0x3b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 036F
        gbc.setState(0x92ee, 0xee96, 0xf770, 0x4dc1, 0x2970, 0x31d7, 0x0, 0x1);
        gbc.writeMem(0x92ee, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xee96);
        EXPECT(gbc.pc(), 0x92f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ee), 0xcb);
        EXPECT(gbc.readMem(0x92ef), 0x81);
        // CB 81 0370
        gbc.setState(0xd809, 0x2f60, 0xde40, 0x287d, 0xdb39, 0x9019, 0x1, 0x1);
        gbc.writeMem(0xd809, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2f60);
        EXPECT(gbc.pc(), 0xd80b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd809), 0xcb);
        EXPECT(gbc.readMem(0xd80a), 0x81);
        // CB 81 0371
        gbc.setState(0x9f, 0x3b38, 0x2b60, 0xcb17, 0xb4c0, 0x6929, 0x1, 0x0);
        gbc.writeMem(0x9f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3b38);
        EXPECT(gbc.pc(), 0xa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0372
        gbc.setState(0x7f30, 0x90e1, 0x89f0, 0xa7b0, 0xa316, 0xf8c0, 0x1, 0x0);
        gbc.writeMem(0x7f30, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x90e1);
        EXPECT(gbc.pc(), 0x7f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0374
        gbc.setState(0xd190, 0xec48, 0x7000, 0x89c1, 0xcf2e, 0x380d, 0x0, 0x0);
        gbc.writeMem(0xd190, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xec48);
        EXPECT(gbc.pc(), 0xd192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd190), 0xcb);
        EXPECT(gbc.readMem(0xd191), 0x81);
        // CB 81 0375
        gbc.setState(0xad7f, 0x6a91, 0xc850, 0x1758, 0x8b7d, 0x939, 0x1, 0x0);
        gbc.writeMem(0xad7f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6a91);
        EXPECT(gbc.pc(), 0xad81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad7f), 0xcb);
        EXPECT(gbc.readMem(0xad80), 0x81);
        // CB 81 0376
        gbc.setState(0xaf99, 0x1035, 0xf500, 0x192b, 0xe805, 0x6ff9, 0x0, 0x1);
        gbc.writeMem(0xaf99, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1035);
        EXPECT(gbc.pc(), 0xaf9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf99), 0xcb);
        EXPECT(gbc.readMem(0xaf9a), 0x81);
        // CB 81 0377
        gbc.setState(0x6042, 0x6641, 0x9b40, 0x8c65, 0x40b2, 0xfa63, 0x0, 0x1);
        gbc.writeMem(0x6042, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6641);
        EXPECT(gbc.pc(), 0x6044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0378
        gbc.setState(0xc91, 0x1452, 0xad80, 0x2c2b, 0x3cf6, 0x15ce, 0x0, 0x1);
        gbc.writeMem(0xc91, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1452);
        EXPECT(gbc.pc(), 0xc93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0379
        gbc.setState(0x66bd, 0xb37e, 0x1e70, 0x55e8, 0xfaa7, 0x3dbd, 0x0, 0x1);
        gbc.writeMem(0x66bd, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb37e);
        EXPECT(gbc.pc(), 0x66bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 037A
        gbc.setState(0x271a, 0x8aa9, 0xfd40, 0x5804, 0xb0b6, 0x8482, 0x1, 0x1);
        gbc.writeMem(0x271a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8aa9);
        EXPECT(gbc.pc(), 0x271c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 037B
        gbc.setState(0x863e, 0xf285, 0x8e20, 0x5b04, 0x38dc, 0x45b9, 0x0, 0x1);
        gbc.writeMem(0x863e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf285);
        EXPECT(gbc.pc(), 0x8640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x863e), 0xcb);
        EXPECT(gbc.readMem(0x863f), 0x81);
        // CB 81 037C
        gbc.setState(0x7f84, 0x78c1, 0xeff0, 0xcc69, 0x353c, 0xeafc, 0x1, 0x1);
        gbc.writeMem(0x7f84, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x78c1);
        EXPECT(gbc.pc(), 0x7f86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 037D
        gbc.setState(0x577b, 0x90ae, 0x1330, 0xa1ff, 0xbb1b, 0x5aca, 0x0, 0x0);
        gbc.writeMem(0x577b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x90ae);
        EXPECT(gbc.pc(), 0x577d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 037E
        gbc.setState(0x1666, 0x9d90, 0xb110, 0xc5d, 0x5b54, 0x5d33, 0x1, 0x0);
        gbc.writeMem(0x1666, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9d90);
        EXPECT(gbc.pc(), 0x1668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 037F
        gbc.setState(0xae45, 0x560, 0xabd0, 0xd42c, 0x882f, 0x753e, 0x1, 0x0);
        gbc.writeMem(0xae45, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x560);
        EXPECT(gbc.pc(), 0xae47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae45), 0xcb);
        EXPECT(gbc.readMem(0xae46), 0x81);
        // CB 81 0380
        gbc.setState(0xa747, 0xb5a9, 0x5b0, 0xeb50, 0x252d, 0x4cdb, 0x1, 0x0);
        gbc.writeMem(0xa747, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb5a9);
        EXPECT(gbc.pc(), 0xa749);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa747), 0xcb);
        EXPECT(gbc.readMem(0xa748), 0x81);
        // CB 81 0381
        gbc.setState(0xc3df, 0x9c3f, 0x5530, 0x3bbc, 0xbe11, 0xa054, 0x1, 0x1);
        gbc.writeMem(0xc3df, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9c3f);
        EXPECT(gbc.pc(), 0xc3e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3df), 0xcb);
        EXPECT(gbc.readMem(0xc3e0), 0x81);
        // CB 81 0382
        gbc.setState(0xc75c, 0xc109, 0x7d70, 0x86aa, 0x444b, 0x400d, 0x0, 0x0);
        gbc.writeMem(0xc75c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc109);
        EXPECT(gbc.pc(), 0xc75e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc75c), 0xcb);
        EXPECT(gbc.readMem(0xc75d), 0x81);
        // CB 81 0383
        gbc.setState(0xb465, 0xe5a7, 0x89c0, 0x9e00, 0x121, 0xcd10, 0x0, 0x0);
        gbc.writeMem(0xb465, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe5a7);
        EXPECT(gbc.pc(), 0xb467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb465), 0xcb);
        EXPECT(gbc.readMem(0xb466), 0x81);
        // CB 81 0384
        gbc.setState(0x7e3, 0x679, 0x35b0, 0xbdc1, 0x1411, 0x2f15, 0x0, 0x1);
        gbc.writeMem(0x7e3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x679);
        EXPECT(gbc.pc(), 0x7e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0385
        gbc.setState(0x1602, 0xbd95, 0x4160, 0xaefe, 0x801f, 0xa122, 0x0, 0x1);
        gbc.writeMem(0x1602, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbd95);
        EXPECT(gbc.pc(), 0x1604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0386
        gbc.setState(0x9bf, 0xa92c, 0x6170, 0xfce1, 0x889e, 0x45cf, 0x1, 0x1);
        gbc.writeMem(0x9bf, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa92c);
        EXPECT(gbc.pc(), 0x9c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0387
        gbc.setState(0xe1ca, 0x3e33, 0x6950, 0x2e92, 0x3038, 0x1c3b, 0x0, 0x0);
        gbc.writeMem(0xe1ca, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3e33);
        EXPECT(gbc.pc(), 0xe1cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ca), 0xcb);
        EXPECT(gbc.readMem(0xe1cb), 0x81);
        // CB 81 0388
        gbc.setState(0x9385, 0xaf8f, 0xe860, 0x1aae, 0x93ed, 0x316c, 0x1, 0x1);
        gbc.writeMem(0x9385, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xaf8f);
        EXPECT(gbc.pc(), 0x9387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9385), 0xcb);
        EXPECT(gbc.readMem(0x9386), 0x81);
        // CB 81 0389
        gbc.setState(0xdd56, 0xbe33, 0x9e00, 0xcf67, 0x2543, 0x653a, 0x1, 0x0);
        gbc.writeMem(0xdd56, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xbe33);
        EXPECT(gbc.pc(), 0xdd58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd56), 0xcb);
        EXPECT(gbc.readMem(0xdd57), 0x81);
        // CB 81 038A
        gbc.setState(0x681c, 0xc944, 0xe630, 0xbb40, 0x2c1d, 0x6357, 0x1, 0x0);
        gbc.writeMem(0x681c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc944);
        EXPECT(gbc.pc(), 0x681e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 038B
        gbc.setState(0xec46, 0x45e9, 0x4d20, 0xe733, 0x49f1, 0x906f, 0x0, 0x0);
        gbc.writeMem(0xec46, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x45e9);
        EXPECT(gbc.pc(), 0xec48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec46), 0xcb);
        EXPECT(gbc.readMem(0xec47), 0x81);
        // CB 81 038C
        gbc.setState(0x6ed1, 0xfa8d, 0x3730, 0xd580, 0x5775, 0xa912, 0x0, 0x1);
        gbc.writeMem(0x6ed1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xfa8d);
        EXPECT(gbc.pc(), 0x6ed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 038D
        gbc.setState(0x809e, 0xd00d, 0x8990, 0xacd2, 0xb833, 0x1d78, 0x1, 0x1);
        gbc.writeMem(0x809e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd00d);
        EXPECT(gbc.pc(), 0x80a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x809e), 0xcb);
        EXPECT(gbc.readMem(0x809f), 0x81);
        // CB 81 038E
        gbc.setState(0x4f34, 0x6e2b, 0xc150, 0xfe07, 0xc2e7, 0x5cf0, 0x0, 0x0);
        gbc.writeMem(0x4f34, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6e2b);
        EXPECT(gbc.pc(), 0x4f36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 038F
        gbc.setState(0xc735, 0x8d90, 0xb260, 0xe2c3, 0x1a7d, 0x9cc9, 0x0, 0x1);
        gbc.writeMem(0xc735, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8d90);
        EXPECT(gbc.pc(), 0xc737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc735), 0xcb);
        EXPECT(gbc.readMem(0xc736), 0x81);
        // CB 81 0390
        gbc.setState(0x69b0, 0x25ca, 0x230, 0xf599, 0x30c3, 0x91e1, 0x0, 0x0);
        gbc.writeMem(0x69b0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x25ca);
        EXPECT(gbc.pc(), 0x69b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 0392
        gbc.setState(0x816b, 0x8a9b, 0x9aa0, 0x4f09, 0xc2ca, 0x470c, 0x1, 0x1);
        gbc.writeMem(0x816b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8a9b);
        EXPECT(gbc.pc(), 0x816d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x816b), 0xcb);
        EXPECT(gbc.readMem(0x816c), 0x81);
        // CB 81 0394
        gbc.setState(0xac6d, 0xbc87, 0x5f40, 0xcf59, 0x6090, 0x8e00, 0x0, 0x1);
        gbc.writeMem(0xac6d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xbc87);
        EXPECT(gbc.pc(), 0xac6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac6d), 0xcb);
        EXPECT(gbc.readMem(0xac6e), 0x81);
        // CB 81 0396
        gbc.setState(0x9e7a, 0x87ff, 0x2640, 0x7735, 0x222d, 0x2d7, 0x0, 0x1);
        gbc.writeMem(0x9e7a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x87ff);
        EXPECT(gbc.pc(), 0x9e7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e7a), 0xcb);
        EXPECT(gbc.readMem(0x9e7b), 0x81);
        // CB 81 0397
        gbc.setState(0xd5d2, 0x456a, 0x4b70, 0xa6a1, 0x5205, 0x496e, 0x0, 0x0);
        gbc.writeMem(0xd5d2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x456a);
        EXPECT(gbc.pc(), 0xd5d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d2), 0xcb);
        EXPECT(gbc.readMem(0xd5d3), 0x81);
        // CB 81 0398
        gbc.setState(0x403d, 0x66cf, 0x3880, 0xc6eb, 0x4b13, 0x5884, 0x1, 0x1);
        gbc.writeMem(0x403d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x66cf);
        EXPECT(gbc.pc(), 0x403f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 0399
        gbc.setState(0x9b86, 0x48a3, 0x7e30, 0xfc8a, 0x459c, 0xc400, 0x1, 0x0);
        gbc.writeMem(0x9b86, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x48a3);
        EXPECT(gbc.pc(), 0x9b88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b86), 0xcb);
        EXPECT(gbc.readMem(0x9b87), 0x81);
        // CB 81 039A
        gbc.setState(0xeef2, 0x6183, 0x59f0, 0x7fd7, 0x7442, 0xe155, 0x1, 0x1);
        gbc.writeMem(0xeef2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6183);
        EXPECT(gbc.pc(), 0xeef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeef2), 0xcb);
        EXPECT(gbc.readMem(0xeef3), 0x81);
        // CB 81 039B
        gbc.setState(0x8b8e, 0x21a8, 0x41f0, 0xd8ff, 0xf6e, 0xd34b, 0x0, 0x1);
        gbc.writeMem(0x8b8e, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x21a8);
        EXPECT(gbc.pc(), 0x8b90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b8e), 0xcb);
        EXPECT(gbc.readMem(0x8b8f), 0x81);
        // CB 81 039C
        gbc.setState(0x5227, 0xf1e6, 0x9b20, 0xde35, 0x6d7d, 0x6295, 0x0, 0x1);
        gbc.writeMem(0x5227, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf1e6);
        EXPECT(gbc.pc(), 0x5229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 039D
        gbc.setState(0x1a3c, 0x2a8a, 0x7e70, 0xcdf, 0xc317, 0xe6ea, 0x1, 0x1);
        gbc.writeMem(0x1a3c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2a8a);
        EXPECT(gbc.pc(), 0x1a3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 039E
        gbc.setState(0xe395, 0x3b0d, 0xc0a0, 0x5d10, 0x4e93, 0xa2f3, 0x1, 0x1);
        gbc.writeMem(0xe395, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3b0d);
        EXPECT(gbc.pc(), 0xe397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe395), 0xcb);
        EXPECT(gbc.readMem(0xe396), 0x81);
        // CB 81 039F
        gbc.setState(0x77e0, 0xd2e3, 0x2b90, 0x6f85, 0x10f4, 0xf4ae, 0x1, 0x1);
        gbc.writeMem(0x77e0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd2e3);
        EXPECT(gbc.pc(), 0x77e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03A0
        gbc.setState(0x7605, 0x8a29, 0x1fa0, 0x7fbe, 0x7adb, 0x2908, 0x1, 0x0);
        gbc.writeMem(0x7605, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8a29);
        EXPECT(gbc.pc(), 0x7607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03A1
        gbc.setState(0x76f3, 0x53e4, 0xc600, 0xaf08, 0xdd3b, 0x8d19, 0x0, 0x0);
        gbc.writeMem(0x76f3, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x53e4);
        EXPECT(gbc.pc(), 0x76f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03A2
        gbc.setState(0x7950, 0x168f, 0x9b90, 0x388d, 0xd33, 0xca0a, 0x0, 0x1);
        gbc.writeMem(0x7950, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x168f);
        EXPECT(gbc.pc(), 0x7952);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03A3
        gbc.setState(0xb693, 0x616c, 0x6410, 0x544b, 0x7f95, 0xb292, 0x0, 0x0);
        gbc.writeMem(0xb693, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x616c);
        EXPECT(gbc.pc(), 0xb695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb693), 0xcb);
        EXPECT(gbc.readMem(0xb694), 0x81);
        // CB 81 03A4
        gbc.setState(0x67ba, 0x9444, 0xae20, 0xf91c, 0xfec4, 0x8e37, 0x1, 0x0);
        gbc.writeMem(0x67ba, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9444);
        EXPECT(gbc.pc(), 0x67bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03A5
        gbc.setState(0xdc5a, 0x974d, 0x10e0, 0xf92, 0x6f42, 0xb603, 0x0, 0x0);
        gbc.writeMem(0xdc5a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x974d);
        EXPECT(gbc.pc(), 0xdc5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc5a), 0xcb);
        EXPECT(gbc.readMem(0xdc5b), 0x81);
        // CB 81 03A6
        gbc.setState(0x1b77, 0x52b6, 0x1950, 0x12f, 0x1d4c, 0x457d, 0x0, 0x0);
        gbc.writeMem(0x1b77, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x52b6);
        EXPECT(gbc.pc(), 0x1b79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03A7
        gbc.setState(0x8476, 0xc0e6, 0xcce0, 0x18c4, 0x4f48, 0x7850, 0x0, 0x1);
        gbc.writeMem(0x8476, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc0e6);
        EXPECT(gbc.pc(), 0x8478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8476), 0xcb);
        EXPECT(gbc.readMem(0x8477), 0x81);
        // CB 81 03A8
        gbc.setState(0x5e26, 0xc630, 0x530, 0xa3cd, 0xce8a, 0x4b4f, 0x0, 0x1);
        gbc.writeMem(0x5e26, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc630);
        EXPECT(gbc.pc(), 0x5e28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03A9
        gbc.setState(0x3e81, 0xbca3, 0xad00, 0x907e, 0xecb2, 0xc394, 0x0, 0x0);
        gbc.writeMem(0x3e81, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbca3);
        EXPECT(gbc.pc(), 0x3e83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03AA
        gbc.setState(0x5714, 0xe2bd, 0x1aa0, 0xd5f3, 0x5981, 0x4542, 0x1, 0x1);
        gbc.writeMem(0x5714, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe2bd);
        EXPECT(gbc.pc(), 0x5716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03AB
        gbc.setState(0x6e24, 0xabff, 0x8d30, 0xddda, 0xf6e, 0x3761, 0x1, 0x1);
        gbc.writeMem(0x6e24, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xabff);
        EXPECT(gbc.pc(), 0x6e26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03AC
        gbc.setState(0xd79b, 0x26e9, 0x77a0, 0x305e, 0xaf29, 0xaee1, 0x0, 0x0);
        gbc.writeMem(0xd79b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x26e9);
        EXPECT(gbc.pc(), 0xd79d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd79b), 0xcb);
        EXPECT(gbc.readMem(0xd79c), 0x81);
        // CB 81 03AD
        gbc.setState(0x6f7, 0x728, 0x690, 0x4712, 0x3f0c, 0xfbf1, 0x1, 0x1);
        gbc.writeMem(0x6f7, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x728);
        EXPECT(gbc.pc(), 0x6f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03AE
        gbc.setState(0xa1b, 0xbcdf, 0xbef0, 0xbcb3, 0xc78f, 0xb473, 0x1, 0x1);
        gbc.writeMem(0xa1b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xbcdf);
        EXPECT(gbc.pc(), 0xa1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03AF
        gbc.setState(0xe284, 0xe7e, 0x10f0, 0x99bc, 0xbc06, 0x472d, 0x1, 0x1);
        gbc.writeMem(0xe284, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe7e);
        EXPECT(gbc.pc(), 0xe286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe284), 0xcb);
        EXPECT(gbc.readMem(0xe285), 0x81);
        // CB 81 03B0
        gbc.setState(0x5b37, 0xc911, 0x5c0, 0x29f4, 0x7a47, 0x7396, 0x1, 0x0);
        gbc.writeMem(0x5b37, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc911);
        EXPECT(gbc.pc(), 0x5b39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03B1
        gbc.setState(0xeb6, 0x305, 0x8a30, 0x6a65, 0x1ca0, 0xe8de, 0x0, 0x1);
        gbc.writeMem(0xeb6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x305);
        EXPECT(gbc.pc(), 0xeb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03B2
        gbc.setState(0x866b, 0xf333, 0x3240, 0x229e, 0x3030, 0x134b, 0x1, 0x1);
        gbc.writeMem(0x866b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf333);
        EXPECT(gbc.pc(), 0x866d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x866b), 0xcb);
        EXPECT(gbc.readMem(0x866c), 0x81);
        // CB 81 03B4
        gbc.setState(0x31e6, 0xd35e, 0xbec0, 0xffe4, 0x9d7, 0x74ea, 0x1, 0x1);
        gbc.writeMem(0x31e6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd35e);
        EXPECT(gbc.pc(), 0x31e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03B5
        gbc.setState(0xe8e8, 0xf7d5, 0x990, 0x75fd, 0x5b84, 0x3c62, 0x1, 0x0);
        gbc.writeMem(0xe8e8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf7d5);
        EXPECT(gbc.pc(), 0xe8ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8e8), 0xcb);
        EXPECT(gbc.readMem(0xe8e9), 0x81);
        // CB 81 03B6
        gbc.setState(0xda21, 0x8f20, 0x8400, 0xf9bb, 0x1a1f, 0xf8f5, 0x0, 0x0);
        gbc.writeMem(0xda21, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8f20);
        EXPECT(gbc.pc(), 0xda23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda21), 0xcb);
        EXPECT(gbc.readMem(0xda22), 0x81);
        // CB 81 03B7
        gbc.setState(0xa91, 0x2b40, 0x66a0, 0xd0dc, 0x977, 0x4507, 0x1, 0x0);
        gbc.writeMem(0xa91, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2b40);
        EXPECT(gbc.pc(), 0xa93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03B8
        gbc.setState(0x52c5, 0xcc46, 0x8010, 0x52b2, 0x9f9f, 0x479e, 0x1, 0x0);
        gbc.writeMem(0x52c5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xcc46);
        EXPECT(gbc.pc(), 0x52c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03B9
        gbc.setState(0x7c8d, 0xb6dd, 0x3ce0, 0x8050, 0x5ad7, 0x7fdd, 0x1, 0x1);
        gbc.writeMem(0x7c8d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb6dd);
        EXPECT(gbc.pc(), 0x7c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03BA
        gbc.setState(0xe8e1, 0x9895, 0x5500, 0x16ff, 0x2736, 0xcdf4, 0x0, 0x0);
        gbc.writeMem(0xe8e1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9895);
        EXPECT(gbc.pc(), 0xe8e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8e1), 0xcb);
        EXPECT(gbc.readMem(0xe8e2), 0x81);
        // CB 81 03BB
        gbc.setState(0xee4d, 0x6b39, 0x22d0, 0x3510, 0xa912, 0xc729, 0x1, 0x1);
        gbc.writeMem(0xee4d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6b39);
        EXPECT(gbc.pc(), 0xee4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee4d), 0xcb);
        EXPECT(gbc.readMem(0xee4e), 0x81);
        // CB 81 03BC
        gbc.setState(0xa77a, 0x62dc, 0x35f0, 0x5feb, 0xa8b7, 0x8955, 0x1, 0x0);
        gbc.writeMem(0xa77a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x62dc);
        EXPECT(gbc.pc(), 0xa77c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa77a), 0xcb);
        EXPECT(gbc.readMem(0xa77b), 0x81);
        // CB 81 03BD
        gbc.setState(0x123f, 0x9ce5, 0x9e70, 0x3aad, 0x3d7c, 0xa948, 0x1, 0x0);
        gbc.writeMem(0x123f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9ce5);
        EXPECT(gbc.pc(), 0x1241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03BE
        gbc.setState(0xb24b, 0x37cb, 0x3630, 0xb59f, 0x1533, 0x4a18, 0x1, 0x1);
        gbc.writeMem(0xb24b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x37cb);
        EXPECT(gbc.pc(), 0xb24d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb24b), 0xcb);
        EXPECT(gbc.readMem(0xb24c), 0x81);
        // CB 81 03BF
        gbc.setState(0xcced, 0x53af, 0xf2e0, 0x28d7, 0x5de9, 0x3d8f, 0x1, 0x1);
        gbc.writeMem(0xcced, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x53af);
        EXPECT(gbc.pc(), 0xccef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcced), 0xcb);
        EXPECT(gbc.readMem(0xccee), 0x81);
        // CB 81 03C0
        gbc.setState(0x7c24, 0x7dc, 0xed50, 0xfca8, 0xaca, 0x656a, 0x0, 0x1);
        gbc.writeMem(0x7c24, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x7dc);
        EXPECT(gbc.pc(), 0x7c26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03C2
        gbc.setState(0x5b0a, 0xaec9, 0xf2f0, 0x4776, 0x709e, 0xead5, 0x0, 0x0);
        gbc.writeMem(0x5b0a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xaec9);
        EXPECT(gbc.pc(), 0x5b0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03C3
        gbc.setState(0x395f, 0x755e, 0x6c40, 0x722e, 0x57a6, 0x7a67, 0x0, 0x1);
        gbc.writeMem(0x395f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x755e);
        EXPECT(gbc.pc(), 0x3961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03C4
        gbc.setState(0x21fe, 0x726c, 0xb6c0, 0xb09b, 0xab09, 0xdba2, 0x1, 0x1);
        gbc.writeMem(0x21fe, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x726c);
        EXPECT(gbc.pc(), 0x2200);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03C5
        gbc.setState(0x1fd8, 0xf01, 0xe30, 0x8bd7, 0x42cf, 0x2e68, 0x0, 0x0);
        gbc.writeMem(0x1fd8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf01);
        EXPECT(gbc.pc(), 0x1fda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03C6
        gbc.setState(0x468a, 0x42db, 0x8af0, 0x7a93, 0xad5e, 0x4978, 0x0, 0x1);
        gbc.writeMem(0x468a, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x42db);
        EXPECT(gbc.pc(), 0x468c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03C7
        gbc.setState(0x5f1, 0xed96, 0x4f00, 0xcfde, 0x777e, 0x9613, 0x0, 0x0);
        gbc.writeMem(0x5f1, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xed96);
        EXPECT(gbc.pc(), 0x5f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03C8
        gbc.setState(0x641b, 0xa225, 0xe600, 0xe470, 0xb798, 0xac66, 0x1, 0x1);
        gbc.writeMem(0x641b, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa225);
        EXPECT(gbc.pc(), 0x641d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03C9
        gbc.setState(0x786f, 0x6427, 0x92a0, 0x22f8, 0x6874, 0x9274, 0x0, 0x0);
        gbc.writeMem(0x786f, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6427);
        EXPECT(gbc.pc(), 0x7871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03CA
        gbc.setState(0xec46, 0xf973, 0x6c70, 0x2a38, 0x1b40, 0xc243, 0x1, 0x0);
        gbc.writeMem(0xec46, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf973);
        EXPECT(gbc.pc(), 0xec48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec46), 0xcb);
        EXPECT(gbc.readMem(0xec47), 0x81);
        // CB 81 03CB
        gbc.setState(0x900c, 0x3d90, 0x9b80, 0x68c6, 0x2e77, 0x350e, 0x0, 0x0);
        gbc.writeMem(0x900c, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3d90);
        EXPECT(gbc.pc(), 0x900e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x900c), 0xcb);
        EXPECT(gbc.readMem(0x900d), 0x81);
        // CB 81 03CC
        gbc.setState(0xcb55, 0xf3e3, 0x5fe0, 0x99ec, 0x3956, 0xdcbc, 0x1, 0x0);
        gbc.writeMem(0xcb55, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf3e3);
        EXPECT(gbc.pc(), 0xcb57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb55), 0xcb);
        EXPECT(gbc.readMem(0xcb56), 0x81);
        // CB 81 03CD
        gbc.setState(0x5cec, 0x5ac4, 0x1cc0, 0x8343, 0x9134, 0x5220, 0x0, 0x0);
        gbc.writeMem(0x5cec, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5ac4);
        EXPECT(gbc.pc(), 0x5cee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03CE
        gbc.setState(0x6efa, 0xb8ee, 0x9130, 0x1f3a, 0x9908, 0x121a, 0x0, 0x0);
        gbc.writeMem(0x6efa, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb8ee);
        EXPECT(gbc.pc(), 0x6efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03CF
        gbc.setState(0xb003, 0x7c45, 0x6620, 0x2c9e, 0x7424, 0x5ca9, 0x0, 0x1);
        gbc.writeMem(0xb003, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7c45);
        EXPECT(gbc.pc(), 0xb005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb003), 0xcb);
        EXPECT(gbc.readMem(0xb004), 0x81);
        // CB 81 03D0
        gbc.setState(0x2256, 0x2848, 0x2170, 0x7205, 0x19c0, 0x588d, 0x0, 0x1);
        gbc.writeMem(0x2256, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2848);
        EXPECT(gbc.pc(), 0x2258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03D1
        gbc.setState(0x43af, 0x5a7c, 0xc370, 0xfc2, 0x841b, 0xe664, 0x0, 0x1);
        gbc.writeMem(0x43af, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5a7c);
        EXPECT(gbc.pc(), 0x43b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03D2
        gbc.setState(0x1182, 0x3d63, 0xb70, 0xa4a4, 0x4df9, 0x65e9, 0x1, 0x1);
        gbc.writeMem(0x1182, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x3d63);
        EXPECT(gbc.pc(), 0x1184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03D3
        gbc.setState(0x5934, 0x8bd2, 0xb780, 0x4b8b, 0x6e8b, 0x34ec, 0x1, 0x0);
        gbc.writeMem(0x5934, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8bd2);
        EXPECT(gbc.pc(), 0x5936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03D4
        gbc.setState(0x61ec, 0xde2c, 0x2fb0, 0x8ea3, 0x2995, 0x6c4a, 0x0, 0x1);
        gbc.writeMem(0x61ec, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xde2c);
        EXPECT(gbc.pc(), 0x61ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03D5
        gbc.setState(0xa712, 0x9625, 0x4260, 0xeedf, 0x660b, 0xd7b7, 0x0, 0x1);
        gbc.writeMem(0xa712, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9625);
        EXPECT(gbc.pc(), 0xa714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa712), 0xcb);
        EXPECT(gbc.readMem(0xa713), 0x81);
        // CB 81 03D6
        gbc.setState(0x82cb, 0xf76d, 0x1b60, 0xb830, 0xe0ce, 0x2f60, 0x1, 0x1);
        gbc.writeMem(0x82cb, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf76d);
        EXPECT(gbc.pc(), 0x82cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82cb), 0xcb);
        EXPECT(gbc.readMem(0x82cc), 0x81);
        // CB 81 03D7
        gbc.setState(0xe8d0, 0x112b, 0x6ac0, 0x5795, 0xb831, 0x9e00, 0x0, 0x0);
        gbc.writeMem(0xe8d0, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x112b);
        EXPECT(gbc.pc(), 0xe8d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d0), 0xcb);
        EXPECT(gbc.readMem(0xe8d1), 0x81);
        // CB 81 03D8
        gbc.setState(0x98d, 0xe4a3, 0x7b20, 0x474e, 0x40f6, 0x476a, 0x0, 0x1);
        gbc.writeMem(0x98d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe4a3);
        EXPECT(gbc.pc(), 0x98f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03D9
        gbc.setState(0x71ed, 0xb9e3, 0xc400, 0xd2ed, 0x2d1f, 0x3668, 0x0, 0x0);
        gbc.writeMem(0x71ed, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb9e3);
        EXPECT(gbc.pc(), 0x71ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03DA
        gbc.setState(0x9ca8, 0x9cef, 0x3d00, 0x9f7e, 0x65e4, 0x5456, 0x1, 0x0);
        gbc.writeMem(0x9ca8, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9cef);
        EXPECT(gbc.pc(), 0x9caa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca8), 0xcb);
        EXPECT(gbc.readMem(0x9ca9), 0x81);
        // CB 81 03DB
        gbc.setState(0x71e9, 0x1db0, 0xaa30, 0x4378, 0xe156, 0x7ee5, 0x1, 0x1);
        gbc.writeMem(0x71e9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1db0);
        EXPECT(gbc.pc(), 0x71eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03DC
        gbc.setState(0xb923, 0xfc9b, 0x3fe0, 0x96ca, 0xcd06, 0x8673, 0x0, 0x0);
        gbc.writeMem(0xb923, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xfc9b);
        EXPECT(gbc.pc(), 0xb925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb923), 0xcb);
        EXPECT(gbc.readMem(0xb924), 0x81);
        // CB 81 03DD
        gbc.setState(0xc408, 0x22cb, 0x1ac0, 0x7a9d, 0xf933, 0x92c8, 0x1, 0x0);
        gbc.writeMem(0xc408, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x22cb);
        EXPECT(gbc.pc(), 0xc40a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc408), 0xcb);
        EXPECT(gbc.readMem(0xc409), 0x81);
        // CB 81 03DE
        gbc.setState(0xc461, 0x4668, 0xd90, 0x7b88, 0x39fc, 0x12d7, 0x1, 0x1);
        gbc.writeMem(0xc461, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4668);
        EXPECT(gbc.pc(), 0xc463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc461), 0xcb);
        EXPECT(gbc.readMem(0xc462), 0x81);
        // CB 81 03DF
        gbc.setState(0x198d, 0x3423, 0xf3b0, 0xa482, 0x5d5b, 0x1cf8, 0x0, 0x0);
        gbc.writeMem(0x198d, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3423);
        EXPECT(gbc.pc(), 0x198f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03E0
        gbc.setState(0xb2a9, 0x5970, 0x4e20, 0xd74c, 0x8d9d, 0x1ea6, 0x0, 0x0);
        gbc.writeMem(0xb2a9, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5970);
        EXPECT(gbc.pc(), 0xb2ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a9), 0xcb);
        EXPECT(gbc.readMem(0xb2aa), 0x81);
        // CB 81 03E1
        gbc.setState(0x5080, 0xc24b, 0x44c0, 0xf243, 0x451c, 0x350d, 0x1, 0x0);
        gbc.writeMem(0x5080, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc24b);
        EXPECT(gbc.pc(), 0x5082);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03E2
        gbc.setState(0x9ac6, 0x379f, 0x5420, 0x3351, 0xb88b, 0xe3fb, 0x0, 0x0);
        gbc.writeMem(0x9ac6, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x379f);
        EXPECT(gbc.pc(), 0x9ac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac6), 0xcb);
        EXPECT(gbc.readMem(0x9ac7), 0x81);
        // CB 81 03E3
        gbc.setState(0x7aa2, 0x6fb9, 0x6180, 0xafdc, 0x6347, 0x1fb8, 0x1, 0x1);
        gbc.writeMem(0x7aa2, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6fb9);
        EXPECT(gbc.pc(), 0x7aa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 81 03E4
        gbc.setState(0xa7f4, 0x912d, 0xcc30, 0xaca6, 0xbbf3, 0x248e, 0x1, 0x1);
        gbc.writeMem(0xa7f4, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x912d);
        EXPECT(gbc.pc(), 0xa7f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f4), 0xcb);
        EXPECT(gbc.readMem(0xa7f5), 0x81);
        // CB 81 03E5
        gbc.setState(0x94f5, 0x1d38, 0x8430, 0x90d6, 0x810f, 0xb22e, 0x0, 0x1);
        gbc.writeMem(0x94f5, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1d38);
        EXPECT(gbc.pc(), 0x94f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94f5), 0xcb);
        EXPECT(gbc.readMem(0x94f6), 0x81);
        // CB 81 03E6
        gbc.setState(0x5115, 0x46c6, 0x48b0, 0x7764, 0xb6ea, 0xf897, 0x0, 0x0);
        gbc.writeMem(0x5115, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x46c6);
        EXPECT(gbc.pc(), 0x5117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 81 03E7
        gbc.setState(0xb6ee, 0xc4de, 0x7c40, 0xe0d1, 0x827b, 0x41a4, 0x1, 0x1);
        gbc.writeMem(0xb6ee, { 0xcb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc4de);
        EXPECT(gbc.pc(), 0xb6f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ee), 0xcb);
        EXPECT(gbc.readMem(0xb6ef), 0x81);
    }
