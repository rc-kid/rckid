#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_ca)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_ca) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CA 0000
        gbc.setState(0x93d4, 0x35f0, 0xa360, 0xfee7, 0xe11d, 0xe5c1, 0x1, 0x1);
        gbc.writeMem(0x93d4, { 0xca, 0xa5, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x35f0);
        EXPECT(gbc.pc(), 0x93d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93d4), 0xca);
        EXPECT(gbc.readMem(0x93d5), 0xa5);
        EXPECT(gbc.readMem(0x93d6), 0xcb);
        // CA 0001
        gbc.setState(0x4416, 0xc398, 0x6ff0, 0x89a9, 0xe82b, 0xe3e0, 0x0, 0x0);
        gbc.writeMem(0x4416, { 0xca, 0xf6, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc398);
        EXPECT(gbc.pc(), 0x91f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0002
        gbc.setState(0x9d37, 0x954d, 0x3e00, 0x332d, 0x733d, 0xea0b, 0x1, 0x0);
        gbc.writeMem(0x9d37, { 0xca, 0xd6, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x954d);
        EXPECT(gbc.pc(), 0x9d3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d37), 0xca);
        EXPECT(gbc.readMem(0x9d38), 0xd6);
        EXPECT(gbc.readMem(0x9d39), 0xd8);
        // CA 0003
        gbc.setState(0x21e4, 0xa632, 0xa380, 0xe523, 0xe502, 0x9c63, 0x0, 0x0);
        gbc.writeMem(0x21e4, { 0xca, 0x56, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa632);
        EXPECT(gbc.pc(), 0x6456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0004
        gbc.setState(0xd1, 0x1519, 0x80e0, 0x2382, 0x95d, 0x728a, 0x0, 0x1);
        gbc.writeMem(0xd1, { 0xca, 0x5e, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1519);
        EXPECT(gbc.pc(), 0xc95e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0006
        gbc.setState(0x8ce1, 0xf19b, 0x390, 0xafc5, 0x4362, 0xd731, 0x1, 0x1);
        gbc.writeMem(0x8ce1, { 0xca, 0x7, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf19b);
        EXPECT(gbc.pc(), 0xc907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce1), 0xca);
        EXPECT(gbc.readMem(0x8ce2), 0x7);
        EXPECT(gbc.readMem(0x8ce3), 0xc9);
        // CA 0007
        gbc.setState(0x81dd, 0xfedd, 0xeb0, 0x2bcf, 0x5a9c, 0x42c1, 0x1, 0x1);
        gbc.writeMem(0x81dd, { 0xca, 0x1b, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xfedd);
        EXPECT(gbc.pc(), 0x71b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81dd), 0xca);
        EXPECT(gbc.readMem(0x81de), 0x1b);
        EXPECT(gbc.readMem(0x81df), 0x7);
        // CA 0008
        gbc.setState(0xe42c, 0x3b5c, 0x8870, 0xae4a, 0x3f98, 0x1431, 0x1, 0x1);
        gbc.writeMem(0xe42c, { 0xca, 0xcb, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3b5c);
        EXPECT(gbc.pc(), 0xe42f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe42c), 0xca);
        EXPECT(gbc.readMem(0xe42d), 0xcb);
        EXPECT(gbc.readMem(0xe42e), 0xd7);
        // CA 0009
        gbc.setState(0x3cf4, 0x35a8, 0x34d0, 0x57a0, 0x68cb, 0x345, 0x1, 0x0);
        gbc.writeMem(0x3cf4, { 0xca, 0x84, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x35a8);
        EXPECT(gbc.pc(), 0x684);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 000A
        gbc.setState(0xe17a, 0xa1be, 0x3cf0, 0x1015, 0x4fa5, 0xdcf5, 0x0, 0x1);
        gbc.writeMem(0xe17a, { 0xca, 0x40, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa1be);
        EXPECT(gbc.pc(), 0x6540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe17a), 0xca);
        EXPECT(gbc.readMem(0xe17b), 0x40);
        EXPECT(gbc.readMem(0xe17c), 0x65);
        // CA 000B
        gbc.setState(0xdec2, 0x5c60, 0xef20, 0xc52e, 0xf4f3, 0x41a7, 0x0, 0x0);
        gbc.writeMem(0xdec2, { 0xca, 0xd7, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5c60);
        EXPECT(gbc.pc(), 0xdec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdec2), 0xca);
        EXPECT(gbc.readMem(0xdec3), 0xd7);
        EXPECT(gbc.readMem(0xdec4), 0x57);
        // CA 000D
        gbc.setState(0x15ee, 0xfb1a, 0x3bc0, 0x8867, 0x9399, 0x3120, 0x0, 0x0);
        gbc.writeMem(0x15ee, { 0xca, 0x5a, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfb1a);
        EXPECT(gbc.pc(), 0x155a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 000E
        gbc.setState(0x4d67, 0x832f, 0x2a70, 0xfdb8, 0x445c, 0x5290, 0x0, 0x0);
        gbc.writeMem(0x4d67, { 0xca, 0xa9, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x832f);
        EXPECT(gbc.pc(), 0x4d6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0010
        gbc.setState(0x1b8, 0x8b07, 0xcaf0, 0xf10c, 0x178c, 0x655, 0x0, 0x1);
        gbc.writeMem(0x1b8, { 0xca, 0x28, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8b07);
        EXPECT(gbc.pc(), 0x5428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0011
        gbc.setState(0xe4cf, 0x82d, 0xf7e0, 0x9fe, 0x458a, 0x465b, 0x1, 0x1);
        gbc.writeMem(0xe4cf, { 0xca, 0xb6, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x82d);
        EXPECT(gbc.pc(), 0x61b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4cf), 0xca);
        EXPECT(gbc.readMem(0xe4d0), 0xb6);
        EXPECT(gbc.readMem(0xe4d1), 0x61);
        // CA 0012
        gbc.setState(0x4e2, 0x980d, 0x88b0, 0xf7d8, 0x4c80, 0x7b7e, 0x0, 0x0);
        gbc.writeMem(0x4e2, { 0xca, 0x59, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x980d);
        EXPECT(gbc.pc(), 0x6959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0013
        gbc.setState(0xbc80, 0xbb81, 0xa1a0, 0xef5e, 0x3666, 0x854e, 0x1, 0x1);
        gbc.writeMem(0xbc80, { 0xca, 0xae, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xbb81);
        EXPECT(gbc.pc(), 0x42ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc80), 0xca);
        EXPECT(gbc.readMem(0xbc81), 0xae);
        EXPECT(gbc.readMem(0xbc82), 0x42);
        // CA 0014
        gbc.setState(0x4854, 0x880, 0x1670, 0x669a, 0x1162, 0x2bbe, 0x1, 0x0);
        gbc.writeMem(0x4854, { 0xca, 0x5f, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x880);
        EXPECT(gbc.pc(), 0x4857);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0015
        gbc.setState(0xbdb1, 0x65f0, 0x1ab0, 0x2f36, 0x6169, 0x7cd9, 0x1, 0x0);
        gbc.writeMem(0xbdb1, { 0xca, 0x53, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x65f0);
        EXPECT(gbc.pc(), 0x1953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb1), 0xca);
        EXPECT(gbc.readMem(0xbdb2), 0x53);
        EXPECT(gbc.readMem(0xbdb3), 0x19);
        // CA 0016
        gbc.setState(0xc1e0, 0x55d0, 0xb40, 0xf53f, 0xc706, 0x66b7, 0x1, 0x0);
        gbc.writeMem(0xc1e0, { 0xca, 0x4d, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x55d0);
        EXPECT(gbc.pc(), 0xc1e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e0), 0xca);
        EXPECT(gbc.readMem(0xc1e1), 0x4d);
        EXPECT(gbc.readMem(0xc1e2), 0xdd);
        // CA 0017
        gbc.setState(0x3409, 0x1d30, 0x80d0, 0x53fc, 0xfe4a, 0x3208, 0x0, 0x1);
        gbc.writeMem(0x3409, { 0xca, 0x5b, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1d30);
        EXPECT(gbc.pc(), 0x925b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0018
        gbc.setState(0x8961, 0xd470, 0x4880, 0xd7df, 0x9145, 0xe564, 0x1, 0x1);
        gbc.writeMem(0x8961, { 0xca, 0x76, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd470);
        EXPECT(gbc.pc(), 0x976);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8961), 0xca);
        EXPECT(gbc.readMem(0x8962), 0x76);
        EXPECT(gbc.readMem(0x8963), 0x9);
        // CA 0019
        gbc.setState(0x22d, 0x274b, 0x9740, 0x56d2, 0x3463, 0xa928, 0x1, 0x0);
        gbc.writeMem(0x22d, { 0xca, 0xb4, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x274b);
        EXPECT(gbc.pc(), 0x230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 001A
        gbc.setState(0xa868, 0x3289, 0x2a10, 0x28fd, 0xf167, 0x8e1, 0x1, 0x1);
        gbc.writeMem(0xa868, { 0xca, 0x78, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3289);
        EXPECT(gbc.pc(), 0xa86b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa868), 0xca);
        EXPECT(gbc.readMem(0xa869), 0x78);
        EXPECT(gbc.readMem(0xa86a), 0xfc);
        // CA 001B
        gbc.setState(0x2f4b, 0x6351, 0x160, 0x3c99, 0x7895, 0x2f71, 0x1, 0x1);
        gbc.writeMem(0x2f4b, { 0xca, 0xa4, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6351);
        EXPECT(gbc.pc(), 0x2f4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 001C
        gbc.setState(0x99fd, 0x64cd, 0x6a10, 0x21c0, 0xf49b, 0x967a, 0x1, 0x1);
        gbc.writeMem(0x99fd, { 0xca, 0x38, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x64cd);
        EXPECT(gbc.pc(), 0x9a00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fd), 0xca);
        EXPECT(gbc.readMem(0x99fe), 0x38);
        EXPECT(gbc.readMem(0x99ff), 0x62);
        // CA 001D
        gbc.setState(0x34de, 0x53a4, 0x6fd0, 0xcac9, 0x48ad, 0x7ddc, 0x1, 0x0);
        gbc.writeMem(0x34de, { 0xca, 0xed, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x53a4);
        EXPECT(gbc.pc(), 0x88ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 001E
        gbc.setState(0x3af8, 0x565, 0x6230, 0x5ac9, 0x9b, 0xecdb, 0x0, 0x0);
        gbc.writeMem(0x3af8, { 0xca, 0xdf, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x565);
        EXPECT(gbc.pc(), 0x3afb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 001F
        gbc.setState(0xce53, 0x8718, 0xe100, 0xecee, 0xe14d, 0x42e5, 0x0, 0x1);
        gbc.writeMem(0xce53, { 0xca, 0xa9, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8718);
        EXPECT(gbc.pc(), 0xce56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce53), 0xca);
        EXPECT(gbc.readMem(0xce54), 0xa9);
        EXPECT(gbc.readMem(0xce55), 0xa);
        // CA 0020
        gbc.setState(0xd93f, 0xd1a4, 0x1850, 0xaab9, 0x6a0b, 0x8e7f, 0x0, 0x1);
        gbc.writeMem(0xd93f, { 0xca, 0x4, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd1a4);
        EXPECT(gbc.pc(), 0xd942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd93f), 0xca);
        EXPECT(gbc.readMem(0xd940), 0x4);
        EXPECT(gbc.readMem(0xd941), 0xb);
        // CA 0021
        gbc.setState(0xc430, 0x47f3, 0x96a0, 0xace2, 0x556b, 0x8060, 0x1, 0x1);
        gbc.writeMem(0xc430, { 0xca, 0xb6, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x47f3);
        EXPECT(gbc.pc(), 0x24b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc430), 0xca);
        EXPECT(gbc.readMem(0xc431), 0xb6);
        EXPECT(gbc.readMem(0xc432), 0x24);
        // CA 0022
        gbc.setState(0xa186, 0x570b, 0xf360, 0xa43b, 0x9cf, 0xb064, 0x0, 0x0);
        gbc.writeMem(0xa186, { 0xca, 0x66, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x570b);
        EXPECT(gbc.pc(), 0xa189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa186), 0xca);
        EXPECT(gbc.readMem(0xa187), 0x66);
        EXPECT(gbc.readMem(0xa188), 0x52);
        // CA 0023
        gbc.setState(0xc5ca, 0x7308, 0x9250, 0x5027, 0xdcea, 0xbeee, 0x1, 0x1);
        gbc.writeMem(0xc5ca, { 0xca, 0xee, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7308);
        EXPECT(gbc.pc(), 0xc5cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5ca), 0xca);
        EXPECT(gbc.readMem(0xc5cb), 0xee);
        EXPECT(gbc.readMem(0xc5cc), 0x98);
        // CA 0024
        gbc.setState(0xd4ca, 0x29e7, 0x6570, 0x1c0c, 0x113d, 0xc895, 0x0, 0x1);
        gbc.writeMem(0xd4ca, { 0xca, 0x1, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x29e7);
        EXPECT(gbc.pc(), 0xd4cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4ca), 0xca);
        EXPECT(gbc.readMem(0xd4cb), 0x1);
        EXPECT(gbc.readMem(0xd4cc), 0x8f);
        // CA 0026
        gbc.setState(0x9c76, 0xb10d, 0x7550, 0xeae6, 0x42f2, 0x5ecb, 0x1, 0x1);
        gbc.writeMem(0x9c76, { 0xca, 0x44, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb10d);
        EXPECT(gbc.pc(), 0x9c79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c76), 0xca);
        EXPECT(gbc.readMem(0x9c77), 0x44);
        EXPECT(gbc.readMem(0x9c78), 0xf4);
        // CA 0027
        gbc.setState(0xceea, 0xde94, 0x9430, 0xa3e3, 0x4482, 0x579b, 0x0, 0x0);
        gbc.writeMem(0xceea, { 0xca, 0x58, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xde94);
        EXPECT(gbc.pc(), 0xceed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceea), 0xca);
        EXPECT(gbc.readMem(0xceeb), 0x58);
        EXPECT(gbc.readMem(0xceec), 0xd5);
        // CA 0028
        gbc.setState(0x7dc6, 0x5862, 0x1db0, 0x35a, 0xdf8c, 0xabc0, 0x0, 0x0);
        gbc.writeMem(0x7dc6, { 0xca, 0x83, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5862);
        EXPECT(gbc.pc(), 0xd83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0029
        gbc.setState(0x62ff, 0x6f2, 0x1d20, 0xd28f, 0xb744, 0x5154, 0x1, 0x0);
        gbc.writeMem(0x62ff, { 0xca, 0x3a, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6f2);
        EXPECT(gbc.pc(), 0x6302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 002A
        gbc.setState(0x7c48, 0x9757, 0x53f0, 0xb64e, 0xffbe, 0x3597, 0x0, 0x1);
        gbc.writeMem(0x7c48, { 0xca, 0x8f, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9757);
        EXPECT(gbc.pc(), 0x168f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 002B
        gbc.setState(0xe8b9, 0xcf2b, 0x7f60, 0xe151, 0x1bad, 0x8517, 0x0, 0x1);
        gbc.writeMem(0xe8b9, { 0xca, 0x16, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xcf2b);
        EXPECT(gbc.pc(), 0xe8bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b9), 0xca);
        EXPECT(gbc.readMem(0xe8ba), 0x16);
        EXPECT(gbc.readMem(0xe8bb), 0x74);
        // CA 002C
        gbc.setState(0xb698, 0xafdc, 0xea80, 0xcfff, 0xe83, 0xe5d, 0x0, 0x1);
        gbc.writeMem(0xb698, { 0xca, 0x66, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xafdc);
        EXPECT(gbc.pc(), 0x8966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb698), 0xca);
        EXPECT(gbc.readMem(0xb699), 0x66);
        EXPECT(gbc.readMem(0xb69a), 0x89);
        // CA 002D
        gbc.setState(0xb32b, 0x92e3, 0xfc40, 0xb5d7, 0xbac2, 0xd6f1, 0x1, 0x0);
        gbc.writeMem(0xb32b, { 0xca, 0x15, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x92e3);
        EXPECT(gbc.pc(), 0xb32e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb32b), 0xca);
        EXPECT(gbc.readMem(0xb32c), 0x15);
        EXPECT(gbc.readMem(0xb32d), 0xea);
        // CA 002E
        gbc.setState(0xc5ee, 0x2da4, 0xcc0, 0x8424, 0x94d1, 0x5c6a, 0x1, 0x1);
        gbc.writeMem(0xc5ee, { 0xca, 0x2f, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x2da4);
        EXPECT(gbc.pc(), 0xa62f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ee), 0xca);
        EXPECT(gbc.readMem(0xc5ef), 0x2f);
        EXPECT(gbc.readMem(0xc5f0), 0xa6);
        // CA 002F
        gbc.setState(0xce33, 0x8792, 0x3980, 0x252e, 0xa636, 0x83ef, 0x1, 0x1);
        gbc.writeMem(0xce33, { 0xca, 0x58, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8792);
        EXPECT(gbc.pc(), 0xeb58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce33), 0xca);
        EXPECT(gbc.readMem(0xce34), 0x58);
        EXPECT(gbc.readMem(0xce35), 0xeb);
        // CA 0030
        gbc.setState(0xb84e, 0xd976, 0x4560, 0x1d66, 0x8df8, 0xa8db, 0x0, 0x1);
        gbc.writeMem(0xb84e, { 0xca, 0x1b, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd976);
        EXPECT(gbc.pc(), 0xb851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb84e), 0xca);
        EXPECT(gbc.readMem(0xb84f), 0x1b);
        EXPECT(gbc.readMem(0xb850), 0x9c);
        // CA 0031
        gbc.setState(0xeaf2, 0x3026, 0xd60, 0xb3c0, 0xec19, 0x1179, 0x1, 0x0);
        gbc.writeMem(0xeaf2, { 0xca, 0x9f, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3026);
        EXPECT(gbc.pc(), 0xeaf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaf2), 0xca);
        EXPECT(gbc.readMem(0xeaf3), 0x9f);
        EXPECT(gbc.readMem(0xeaf4), 0x81);
        // CA 0032
        gbc.setState(0x542b, 0x77c6, 0x63e0, 0x52d0, 0x5759, 0x3614, 0x0, 0x0);
        gbc.writeMem(0x542b, { 0xca, 0xa7, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x77c6);
        EXPECT(gbc.pc(), 0xdaa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0033
        gbc.setState(0x50ca, 0x6ed, 0x1f30, 0xdd2d, 0x586c, 0x8840, 0x1, 0x0);
        gbc.writeMem(0x50ca, { 0xca, 0x61, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x6ed);
        EXPECT(gbc.pc(), 0x50cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0034
        gbc.setState(0x4865, 0xa9b1, 0xc2d0, 0xf6cf, 0x12c8, 0xfb07, 0x0, 0x1);
        gbc.writeMem(0x4865, { 0xca, 0x12, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa9b1);
        EXPECT(gbc.pc(), 0x6c12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0035
        gbc.setState(0x8dce, 0xe979, 0x400, 0xaad7, 0x256d, 0x2ba6, 0x0, 0x1);
        gbc.writeMem(0x8dce, { 0xca, 0x64, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe979);
        EXPECT(gbc.pc(), 0x8dd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dce), 0xca);
        EXPECT(gbc.readMem(0x8dcf), 0x64);
        EXPECT(gbc.readMem(0x8dd0), 0x13);
        // CA 0036
        gbc.setState(0xdc13, 0x2b7e, 0x45d0, 0xe384, 0x25ea, 0x342d, 0x0, 0x1);
        gbc.writeMem(0xdc13, { 0xca, 0x65, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2b7e);
        EXPECT(gbc.pc(), 0x5a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc13), 0xca);
        EXPECT(gbc.readMem(0xdc14), 0x65);
        EXPECT(gbc.readMem(0xdc15), 0x5a);
        // CA 0037
        gbc.setState(0x7fb1, 0x60c6, 0xd20, 0xf90, 0x61f7, 0x709b, 0x1, 0x1);
        gbc.writeMem(0x7fb1, { 0xca, 0xa0, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x60c6);
        EXPECT(gbc.pc(), 0x7fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0038
        gbc.setState(0x8389, 0x3951, 0x95a0, 0xbad1, 0x268f, 0x510c, 0x0, 0x0);
        gbc.writeMem(0x8389, { 0xca, 0xa3, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3951);
        EXPECT(gbc.pc(), 0xf0a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8389), 0xca);
        EXPECT(gbc.readMem(0x838a), 0xa3);
        EXPECT(gbc.readMem(0x838b), 0xf0);
        // CA 0039
        gbc.setState(0x848d, 0x77b9, 0x2410, 0x7a5a, 0x53ec, 0xab6e, 0x0, 0x0);
        gbc.writeMem(0x848d, { 0xca, 0x55, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x77b9);
        EXPECT(gbc.pc(), 0x8490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x848d), 0xca);
        EXPECT(gbc.readMem(0x848e), 0x55);
        EXPECT(gbc.readMem(0x848f), 0x5c);
        // CA 003A
        gbc.setState(0x3d65, 0xb2de, 0x4450, 0x216c, 0x182d, 0x254f, 0x0, 0x0);
        gbc.writeMem(0x3d65, { 0xca, 0x67, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb2de);
        EXPECT(gbc.pc(), 0x3d68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 003B
        gbc.setState(0x2715, 0x3e69, 0x52b0, 0x93fb, 0x1360, 0x2123, 0x0, 0x1);
        gbc.writeMem(0x2715, { 0xca, 0x1e, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3e69);
        EXPECT(gbc.pc(), 0xf01e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 003C
        gbc.setState(0xb15b, 0x5147, 0xd060, 0x1774, 0x8973, 0xd7ff, 0x0, 0x0);
        gbc.writeMem(0xb15b, { 0xca, 0x24, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5147);
        EXPECT(gbc.pc(), 0xb15e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb15b), 0xca);
        EXPECT(gbc.readMem(0xb15c), 0x24);
        EXPECT(gbc.readMem(0xb15d), 0xe2);
        // CA 003D
        gbc.setState(0x7be, 0xfe0e, 0x4e10, 0x5ada, 0x692c, 0xe203, 0x1, 0x1);
        gbc.writeMem(0x7be, { 0xca, 0x85, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfe0e);
        EXPECT(gbc.pc(), 0x7c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 003E
        gbc.setState(0x7d91, 0x9b6e, 0x3bd0, 0x5b4f, 0xc113, 0xd801, 0x1, 0x0);
        gbc.writeMem(0x7d91, { 0xca, 0xed, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9b6e);
        EXPECT(gbc.pc(), 0x98ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 003F
        gbc.setState(0xd37e, 0xf71e, 0x6c50, 0x6386, 0xc81c, 0xf33, 0x1, 0x0);
        gbc.writeMem(0xd37e, { 0xca, 0xb6, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf71e);
        EXPECT(gbc.pc(), 0xd381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd37e), 0xca);
        EXPECT(gbc.readMem(0xd37f), 0xb6);
        EXPECT(gbc.readMem(0xd380), 0xa9);
        // CA 0040
        gbc.setState(0xe498, 0x5098, 0xc400, 0xe436, 0xcbb1, 0xd67b, 0x1, 0x0);
        gbc.writeMem(0xe498, { 0xca, 0x7, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5098);
        EXPECT(gbc.pc(), 0xe49b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe498), 0xca);
        EXPECT(gbc.readMem(0xe499), 0x7);
        EXPECT(gbc.readMem(0xe49a), 0x95);
        // CA 0041
        gbc.setState(0xd8bd, 0x8585, 0x5e30, 0x5118, 0xab2c, 0x7c38, 0x1, 0x0);
        gbc.writeMem(0xd8bd, { 0xca, 0xde, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8585);
        EXPECT(gbc.pc(), 0xd8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8bd), 0xca);
        EXPECT(gbc.readMem(0xd8be), 0xde);
        EXPECT(gbc.readMem(0xd8bf), 0x7f);
        // CA 0042
        gbc.setState(0x96dc, 0x8af0, 0xd8f0, 0x2386, 0xcf3f, 0x6e8a, 0x0, 0x0);
        gbc.writeMem(0x96dc, { 0xca, 0x83, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8af0);
        EXPECT(gbc.pc(), 0xee83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96dc), 0xca);
        EXPECT(gbc.readMem(0x96dd), 0x83);
        EXPECT(gbc.readMem(0x96de), 0xee);
        // CA 0043
        gbc.setState(0xda0, 0xca58, 0x89f0, 0xbb55, 0xda55, 0x37b2, 0x0, 0x1);
        gbc.writeMem(0xda0, { 0xca, 0x6e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xca58);
        EXPECT(gbc.pc(), 0x776e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0044
        gbc.setState(0x2f75, 0x579, 0x32a0, 0x8a9b, 0xa906, 0x359e, 0x0, 0x0);
        gbc.writeMem(0x2f75, { 0xca, 0xa5, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x579);
        EXPECT(gbc.pc(), 0x39a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0045
        gbc.setState(0xbe10, 0x70db, 0xaa0, 0x2a61, 0x9db6, 0xabaa, 0x0, 0x1);
        gbc.writeMem(0xbe10, { 0xca, 0x95, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x70db);
        EXPECT(gbc.pc(), 0x7195);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe10), 0xca);
        EXPECT(gbc.readMem(0xbe11), 0x95);
        EXPECT(gbc.readMem(0xbe12), 0x71);
        // CA 0046
        gbc.setState(0x60df, 0x4c7d, 0x9530, 0xc19a, 0x6939, 0xbb5b, 0x0, 0x0);
        gbc.writeMem(0x60df, { 0xca, 0x7d, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4c7d);
        EXPECT(gbc.pc(), 0x60e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0047
        gbc.setState(0x8782, 0xff8c, 0x4f70, 0x298a, 0x5fe2, 0x5270, 0x1, 0x1);
        gbc.writeMem(0x8782, { 0xca, 0xf3, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xff8c);
        EXPECT(gbc.pc(), 0x8785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8782), 0xca);
        EXPECT(gbc.readMem(0x8783), 0xf3);
        EXPECT(gbc.readMem(0x8784), 0x5);
        // CA 0048
        gbc.setState(0xda0e, 0xc85, 0x3a0, 0x27fe, 0x4162, 0x1f58, 0x1, 0x1);
        gbc.writeMem(0xda0e, { 0xca, 0xb1, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc85);
        EXPECT(gbc.pc(), 0x8bb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda0e), 0xca);
        EXPECT(gbc.readMem(0xda0f), 0xb1);
        EXPECT(gbc.readMem(0xda10), 0x8b);
        // CA 0049
        gbc.setState(0x91c1, 0x6bec, 0x4a30, 0x4c45, 0x8f59, 0x625a, 0x1, 0x0);
        gbc.writeMem(0x91c1, { 0xca, 0xa5, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6bec);
        EXPECT(gbc.pc(), 0x91c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c1), 0xca);
        EXPECT(gbc.readMem(0x91c2), 0xa5);
        EXPECT(gbc.readMem(0x91c3), 0x23);
        // CA 004A
        gbc.setState(0x3ba6, 0xb6e6, 0x5fd0, 0x22e2, 0xc5cb, 0xc3c9, 0x0, 0x0);
        gbc.writeMem(0x3ba6, { 0xca, 0xf1, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb6e6);
        EXPECT(gbc.pc(), 0x6af1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 004B
        gbc.setState(0x3130, 0xc461, 0xa420, 0xe788, 0x13f9, 0x3630, 0x0, 0x1);
        gbc.writeMem(0x3130, { 0xca, 0xe8, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc461);
        EXPECT(gbc.pc(), 0x3133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 004C
        gbc.setState(0x231d, 0xd1b2, 0xd2d0, 0x210b, 0xda6, 0x4fff, 0x1, 0x0);
        gbc.writeMem(0x231d, { 0xca, 0x95, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd1b2);
        EXPECT(gbc.pc(), 0x895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 004D
        gbc.setState(0x58ad, 0xfa8e, 0xabe0, 0xe93c, 0x65dc, 0xa33b, 0x0, 0x0);
        gbc.writeMem(0x58ad, { 0xca, 0x33, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xfa8e);
        EXPECT(gbc.pc(), 0xd133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 004E
        gbc.setState(0x5191, 0x3281, 0xfc90, 0xcd63, 0xd7c5, 0x5ce1, 0x0, 0x1);
        gbc.writeMem(0x5191, { 0xca, 0x60, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3281);
        EXPECT(gbc.pc(), 0x9960);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0050
        gbc.setState(0xdfe, 0x652a, 0x8780, 0xf5c4, 0x5ff4, 0x9a62, 0x1, 0x1);
        gbc.writeMem(0xdfe, { 0xca, 0x8d, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x652a);
        EXPECT(gbc.pc(), 0x418d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0051
        gbc.setState(0x5709, 0xb7ec, 0x3ff0, 0xc941, 0xed45, 0x1ee7, 0x1, 0x0);
        gbc.writeMem(0x5709, { 0xca, 0x1b, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb7ec);
        EXPECT(gbc.pc(), 0xf71b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0052
        gbc.setState(0xec7e, 0xf827, 0xecf0, 0x3182, 0x21f1, 0x94c4, 0x1, 0x1);
        gbc.writeMem(0xec7e, { 0xca, 0xd5, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf827);
        EXPECT(gbc.pc(), 0xd0d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec7e), 0xca);
        EXPECT(gbc.readMem(0xec7f), 0xd5);
        EXPECT(gbc.readMem(0xec80), 0xd0);
        // CA 0053
        gbc.setState(0xd6da, 0xc08b, 0xfa80, 0x35d1, 0x943, 0xc1a, 0x1, 0x0);
        gbc.writeMem(0xd6da, { 0xca, 0x4, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc08b);
        EXPECT(gbc.pc(), 0xf004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6da), 0xca);
        EXPECT(gbc.readMem(0xd6db), 0x4);
        EXPECT(gbc.readMem(0xd6dc), 0xf0);
        // CA 0054
        gbc.setState(0xdb23, 0x39d0, 0x45f0, 0x8fa0, 0x2ed1, 0xb288, 0x1, 0x0);
        gbc.writeMem(0xdb23, { 0xca, 0x33, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x39d0);
        EXPECT(gbc.pc(), 0x6f33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb23), 0xca);
        EXPECT(gbc.readMem(0xdb24), 0x33);
        EXPECT(gbc.readMem(0xdb25), 0x6f);
        // CA 0055
        gbc.setState(0xbef, 0x1f36, 0xccf0, 0xe07c, 0xa5e0, 0xb10e, 0x0, 0x1);
        gbc.writeMem(0xbef, { 0xca, 0xf, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1f36);
        EXPECT(gbc.pc(), 0x9a0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0056
        gbc.setState(0x2f25, 0x8dd2, 0x7170, 0x9a9, 0xe722, 0x5b03, 0x1, 0x0);
        gbc.writeMem(0x2f25, { 0xca, 0x14, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8dd2);
        EXPECT(gbc.pc(), 0x2f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0057
        gbc.setState(0xd534, 0xb5d3, 0xaf90, 0xd249, 0xd550, 0x6638, 0x1, 0x1);
        gbc.writeMem(0xd534, { 0xca, 0x72, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb5d3);
        EXPECT(gbc.pc(), 0x7c72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd534), 0xca);
        EXPECT(gbc.readMem(0xd535), 0x72);
        EXPECT(gbc.readMem(0xd536), 0x7c);
        // CA 0058
        gbc.setState(0x18b0, 0x3156, 0xa8e0, 0xa018, 0x3704, 0x41, 0x0, 0x1);
        gbc.writeMem(0x18b0, { 0xca, 0x79, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3156);
        EXPECT(gbc.pc(), 0x5379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0059
        gbc.setState(0xb778, 0xf469, 0x6640, 0xdde1, 0x141a, 0x4546, 0x1, 0x0);
        gbc.writeMem(0xb778, { 0xca, 0x9c, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf469);
        EXPECT(gbc.pc(), 0xb77b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb778), 0xca);
        EXPECT(gbc.readMem(0xb779), 0x9c);
        EXPECT(gbc.readMem(0xb77a), 0x15);
        // CA 005A
        gbc.setState(0x5ef9, 0x59f9, 0xcbd0, 0x9dc2, 0x888c, 0x1300, 0x1, 0x0);
        gbc.writeMem(0x5ef9, { 0xca, 0x9c, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x59f9);
        EXPECT(gbc.pc(), 0xad9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 005B
        gbc.setState(0x7501, 0x2f92, 0xe20, 0x3c79, 0x52af, 0x1a0b, 0x1, 0x1);
        gbc.writeMem(0x7501, { 0xca, 0x6b, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2f92);
        EXPECT(gbc.pc(), 0x7504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 005C
        gbc.setState(0x8ff4, 0xce1a, 0x2980, 0x8c9d, 0xc370, 0xa009, 0x1, 0x0);
        gbc.writeMem(0x8ff4, { 0xca, 0xa9, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xce1a);
        EXPECT(gbc.pc(), 0x95a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff4), 0xca);
        EXPECT(gbc.readMem(0x8ff5), 0xa9);
        EXPECT(gbc.readMem(0x8ff6), 0x95);
        // CA 005D
        gbc.setState(0x2909, 0x50f6, 0xb320, 0xf8d8, 0x275f, 0x1930, 0x1, 0x1);
        gbc.writeMem(0x2909, { 0xca, 0xe0, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x50f6);
        EXPECT(gbc.pc(), 0x290c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 005E
        gbc.setState(0x59f, 0xe, 0xacd0, 0xa0ff, 0x122c, 0x75a2, 0x1, 0x0);
        gbc.writeMem(0x59f, { 0xca, 0x45, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe);
        EXPECT(gbc.pc(), 0x3745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 005F
        gbc.setState(0x8311, 0x9869, 0x5030, 0x4c45, 0x718f, 0xdefd, 0x0, 0x1);
        gbc.writeMem(0x8311, { 0xca, 0xd3, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9869);
        EXPECT(gbc.pc(), 0x8314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8311), 0xca);
        EXPECT(gbc.readMem(0x8312), 0xd3);
        EXPECT(gbc.readMem(0x8313), 0xf3);
        // CA 0060
        gbc.setState(0x380c, 0x4ca9, 0x2df0, 0xc02f, 0x835a, 0x59b, 0x0, 0x0);
        gbc.writeMem(0x380c, { 0xca, 0x99, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4ca9);
        EXPECT(gbc.pc(), 0x7299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0061
        gbc.setState(0xc3c1, 0xcdee, 0x7a20, 0x7e0a, 0x3f3, 0x9794, 0x0, 0x0);
        gbc.writeMem(0xc3c1, { 0xca, 0xe0, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcdee);
        EXPECT(gbc.pc(), 0xc3c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3c1), 0xca);
        EXPECT(gbc.readMem(0xc3c2), 0xe0);
        EXPECT(gbc.readMem(0xc3c3), 0x96);
        // CA 0062
        gbc.setState(0xbc00, 0x47aa, 0x96c0, 0x9a2f, 0x1d0e, 0x5698, 0x0, 0x0);
        gbc.writeMem(0xbc00, { 0xca, 0xa4, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x47aa);
        EXPECT(gbc.pc(), 0x96a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc00), 0xca);
        EXPECT(gbc.readMem(0xbc01), 0xa4);
        EXPECT(gbc.readMem(0xbc02), 0x96);
        // CA 0063
        gbc.setState(0x65fa, 0xf67a, 0xc540, 0xc081, 0x47f7, 0xf133, 0x1, 0x1);
        gbc.writeMem(0x65fa, { 0xca, 0xe3, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf67a);
        EXPECT(gbc.pc(), 0x65fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0064
        gbc.setState(0x2b72, 0xda3a, 0xd230, 0x436a, 0xfd69, 0x166d, 0x0, 0x1);
        gbc.writeMem(0x2b72, { 0xca, 0xa0, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xda3a);
        EXPECT(gbc.pc(), 0x2b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0065
        gbc.setState(0x675a, 0xa5fc, 0x9a80, 0xfffb, 0x32c, 0xb5aa, 0x1, 0x0);
        gbc.writeMem(0x675a, { 0xca, 0x3d, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa5fc);
        EXPECT(gbc.pc(), 0xf03d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0066
        gbc.setState(0x6abe, 0x76a3, 0x2a20, 0xba10, 0x5800, 0x9874, 0x0, 0x0);
        gbc.writeMem(0x6abe, { 0xca, 0x9f, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x76a3);
        EXPECT(gbc.pc(), 0x6ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0067
        gbc.setState(0xbc71, 0x7027, 0xa30, 0xec78, 0x5bc2, 0x77c9, 0x0, 0x1);
        gbc.writeMem(0xbc71, { 0xca, 0x18, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7027);
        EXPECT(gbc.pc(), 0xbc74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc71), 0xca);
        EXPECT(gbc.readMem(0xbc72), 0x18);
        EXPECT(gbc.readMem(0xbc73), 0x84);
        // CA 0068
        gbc.setState(0xa781, 0x21ad, 0xfd80, 0xf669, 0x489, 0x3024, 0x1, 0x0);
        gbc.writeMem(0xa781, { 0xca, 0x37, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x21ad);
        EXPECT(gbc.pc(), 0xd637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa781), 0xca);
        EXPECT(gbc.readMem(0xa782), 0x37);
        EXPECT(gbc.readMem(0xa783), 0xd6);
        // CA 0069
        gbc.setState(0x69c, 0xe004, 0xbe40, 0xe8c8, 0x3513, 0x952c, 0x0, 0x1);
        gbc.writeMem(0x69c, { 0xca, 0x54, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe004);
        EXPECT(gbc.pc(), 0x69f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 006A
        gbc.setState(0x7b6e, 0x19fe, 0x8e0, 0x1f51, 0xb54d, 0xd1f, 0x1, 0x0);
        gbc.writeMem(0x7b6e, { 0xca, 0xee, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x19fe);
        EXPECT(gbc.pc(), 0x66ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 006C
        gbc.setState(0x702d, 0xbd72, 0xed40, 0x87c4, 0x3f78, 0x84e8, 0x1, 0x1);
        gbc.writeMem(0x702d, { 0xca, 0xbc, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbd72);
        EXPECT(gbc.pc(), 0x7030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 006D
        gbc.setState(0x4698, 0x2c5a, 0x1c20, 0xb260, 0x4c41, 0x9e6d, 0x0, 0x0);
        gbc.writeMem(0x4698, { 0xca, 0x16, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2c5a);
        EXPECT(gbc.pc(), 0x469b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 006E
        gbc.setState(0x7d8c, 0xa4ad, 0xaee0, 0x5b0e, 0xd736, 0x6e6d, 0x1, 0x0);
        gbc.writeMem(0x7d8c, { 0xca, 0x41, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa4ad);
        EXPECT(gbc.pc(), 0x2641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 006F
        gbc.setState(0x3332, 0x62fa, 0x1e80, 0xfd01, 0xea3c, 0x2aa3, 0x0, 0x0);
        gbc.writeMem(0x3332, { 0xca, 0x67, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x62fa);
        EXPECT(gbc.pc(), 0xf067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0070
        gbc.setState(0x5ea9, 0xccc4, 0x5c80, 0x5020, 0x46dd, 0x27d1, 0x1, 0x0);
        gbc.writeMem(0x5ea9, { 0xca, 0xc1, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xccc4);
        EXPECT(gbc.pc(), 0x26c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0071
        gbc.setState(0xdfaa, 0x11fe, 0x6320, 0x84c8, 0x535d, 0x44d8, 0x0, 0x0);
        gbc.writeMem(0xdfaa, { 0xca, 0x6c, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x11fe);
        EXPECT(gbc.pc(), 0xdfad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfaa), 0xca);
        EXPECT(gbc.readMem(0xdfab), 0x6c);
        EXPECT(gbc.readMem(0xdfac), 0x87);
        // CA 0072
        gbc.setState(0xa3c4, 0x6ebb, 0x9620, 0xd4d4, 0xbcdc, 0x3824, 0x1, 0x1);
        gbc.writeMem(0xa3c4, { 0xca, 0x89, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6ebb);
        EXPECT(gbc.pc(), 0xa3c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3c4), 0xca);
        EXPECT(gbc.readMem(0xa3c5), 0x89);
        EXPECT(gbc.readMem(0xa3c6), 0xb6);
        // CA 0073
        gbc.setState(0x72bd, 0x18af, 0x5950, 0xd5b9, 0x588f, 0x17b1, 0x0, 0x1);
        gbc.writeMem(0x72bd, { 0xca, 0x91, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x18af);
        EXPECT(gbc.pc(), 0x72c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0074
        gbc.setState(0xecdb, 0xd357, 0xac60, 0x6633, 0xd92c, 0x8c3d, 0x0, 0x1);
        gbc.writeMem(0xecdb, { 0xca, 0x95, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd357);
        EXPECT(gbc.pc(), 0xecde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecdb), 0xca);
        EXPECT(gbc.readMem(0xecdc), 0x95);
        EXPECT(gbc.readMem(0xecdd), 0x32);
        // CA 0075
        gbc.setState(0xe3f7, 0xb3e4, 0xa860, 0x9d4b, 0x7deb, 0x85de, 0x1, 0x1);
        gbc.writeMem(0xe3f7, { 0xca, 0x4, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb3e4);
        EXPECT(gbc.pc(), 0xe3fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f7), 0xca);
        EXPECT(gbc.readMem(0xe3f8), 0x4);
        EXPECT(gbc.readMem(0xe3f9), 0x8);
        // CA 0076
        gbc.setState(0x4fc9, 0xfdfa, 0xa770, 0x221, 0x3d30, 0xb798, 0x1, 0x1);
        gbc.writeMem(0x4fc9, { 0xca, 0x66, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfdfa);
        EXPECT(gbc.pc(), 0x4fcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0077
        gbc.setState(0x5467, 0x6f67, 0x8c50, 0xf9cd, 0x7b1b, 0xe889, 0x1, 0x0);
        gbc.writeMem(0x5467, { 0xca, 0xe9, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6f67);
        EXPECT(gbc.pc(), 0x546a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0078
        gbc.setState(0xabef, 0xb5d5, 0x5510, 0xecee, 0x8cdf, 0xda3f, 0x1, 0x1);
        gbc.writeMem(0xabef, { 0xca, 0xa7, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb5d5);
        EXPECT(gbc.pc(), 0xabf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabef), 0xca);
        EXPECT(gbc.readMem(0xabf0), 0xa7);
        EXPECT(gbc.readMem(0xabf1), 0x98);
        // CA 0079
        gbc.setState(0x25ae, 0x4db7, 0x82b0, 0x52c8, 0x2439, 0xa8d6, 0x0, 0x0);
        gbc.writeMem(0x25ae, { 0xca, 0xb3, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4db7);
        EXPECT(gbc.pc(), 0x77b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 007A
        gbc.setState(0xaad7, 0x3738, 0x9510, 0x717c, 0xf9d1, 0x3b18, 0x0, 0x1);
        gbc.writeMem(0xaad7, { 0xca, 0xd9, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3738);
        EXPECT(gbc.pc(), 0xaada);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaad7), 0xca);
        EXPECT(gbc.readMem(0xaad8), 0xd9);
        EXPECT(gbc.readMem(0xaad9), 0x76);
        // CA 007B
        gbc.setState(0xc127, 0x1214, 0x9df0, 0xb496, 0xb932, 0xfce8, 0x0, 0x0);
        gbc.writeMem(0xc127, { 0xca, 0xa0, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1214);
        EXPECT(gbc.pc(), 0x5a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc127), 0xca);
        EXPECT(gbc.readMem(0xc128), 0xa0);
        EXPECT(gbc.readMem(0xc129), 0x5);
        // CA 007C
        gbc.setState(0x174f, 0x9d44, 0x62e0, 0x4d7c, 0x8a2f, 0xc08f, 0x0, 0x1);
        gbc.writeMem(0x174f, { 0xca, 0xc8, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9d44);
        EXPECT(gbc.pc(), 0xbc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 007D
        gbc.setState(0x5eb9, 0xc63, 0x67c0, 0x8039, 0xdbae, 0xc30b, 0x0, 0x0);
        gbc.writeMem(0x5eb9, { 0xca, 0x5e, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc63);
        EXPECT(gbc.pc(), 0x955e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 007E
        gbc.setState(0xdb4a, 0xf3d8, 0x6790, 0x776e, 0x5c7f, 0x11b7, 0x1, 0x1);
        gbc.writeMem(0xdb4a, { 0xca, 0x80, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf3d8);
        EXPECT(gbc.pc(), 0xde80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb4a), 0xca);
        EXPECT(gbc.readMem(0xdb4b), 0x80);
        EXPECT(gbc.readMem(0xdb4c), 0xde);
        // CA 007F
        gbc.setState(0xe75c, 0x48ee, 0xab70, 0x1039, 0xca77, 0x68a1, 0x1, 0x1);
        gbc.writeMem(0xe75c, { 0xca, 0x9, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x48ee);
        EXPECT(gbc.pc(), 0xe75f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe75c), 0xca);
        EXPECT(gbc.readMem(0xe75d), 0x9);
        EXPECT(gbc.readMem(0xe75e), 0xaf);
        // CA 0080
        gbc.setState(0xf16, 0xdebe, 0xac0, 0x36a8, 0x2a19, 0xbc53, 0x1, 0x0);
        gbc.writeMem(0xf16, { 0xca, 0xea, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdebe);
        EXPECT(gbc.pc(), 0x99ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0081
        gbc.setState(0x8294, 0x7ddd, 0x1350, 0x9813, 0x4a84, 0x967f, 0x1, 0x0);
        gbc.writeMem(0x8294, { 0xca, 0xd9, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7ddd);
        EXPECT(gbc.pc(), 0x8297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8294), 0xca);
        EXPECT(gbc.readMem(0x8295), 0xd9);
        EXPECT(gbc.readMem(0x8296), 0xd2);
        // CA 0082
        gbc.setState(0xbf91, 0x5322, 0x1b10, 0x7a28, 0x2452, 0x47b2, 0x1, 0x0);
        gbc.writeMem(0xbf91, { 0xca, 0x6, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5322);
        EXPECT(gbc.pc(), 0xbf94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf91), 0xca);
        EXPECT(gbc.readMem(0xbf92), 0x6);
        EXPECT(gbc.readMem(0xbf93), 0x9d);
        // CA 0083
        gbc.setState(0xb5b3, 0x7de2, 0x4c0, 0xd938, 0xccbd, 0x9b31, 0x0, 0x0);
        gbc.writeMem(0xb5b3, { 0xca, 0xb6, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7de2);
        EXPECT(gbc.pc(), 0x15b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b3), 0xca);
        EXPECT(gbc.readMem(0xb5b4), 0xb6);
        EXPECT(gbc.readMem(0xb5b5), 0x15);
        // CA 0084
        gbc.setState(0x264b, 0x6a28, 0xe60, 0x1c5f, 0x380d, 0xc085, 0x0, 0x1);
        gbc.writeMem(0x264b, { 0xca, 0x7d, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6a28);
        EXPECT(gbc.pc(), 0x264e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0085
        gbc.setState(0x8211, 0xc687, 0x8dd0, 0x7f6e, 0x86e8, 0x73d4, 0x1, 0x0);
        gbc.writeMem(0x8211, { 0xca, 0x71, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc687);
        EXPECT(gbc.pc(), 0xc671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8211), 0xca);
        EXPECT(gbc.readMem(0x8212), 0x71);
        EXPECT(gbc.readMem(0x8213), 0xc6);
        // CA 0086
        gbc.setState(0x7792, 0x3ffd, 0x2f70, 0x54f0, 0x4b85, 0x6a65, 0x0, 0x1);
        gbc.writeMem(0x7792, { 0xca, 0x41, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3ffd);
        EXPECT(gbc.pc(), 0x7795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0087
        gbc.setState(0x91bf, 0x10e3, 0xa0a0, 0x86b6, 0xa574, 0xbd9a, 0x0, 0x1);
        gbc.writeMem(0x91bf, { 0xca, 0x9a, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x10e3);
        EXPECT(gbc.pc(), 0x499a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91bf), 0xca);
        EXPECT(gbc.readMem(0x91c0), 0x9a);
        EXPECT(gbc.readMem(0x91c1), 0x49);
        // CA 0088
        gbc.setState(0x7763, 0xd463, 0xe10, 0x1c55, 0xde69, 0x5396, 0x1, 0x0);
        gbc.writeMem(0x7763, { 0xca, 0xa4, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd463);
        EXPECT(gbc.pc(), 0x7766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0089
        gbc.setState(0x4d9c, 0x2256, 0x6a60, 0x5743, 0x2189, 0x7df3, 0x1, 0x0);
        gbc.writeMem(0x4d9c, { 0xca, 0x39, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2256);
        EXPECT(gbc.pc(), 0x4d9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 008A
        gbc.setState(0x48a5, 0x94a7, 0xb830, 0xe48f, 0x4921, 0xbd69, 0x1, 0x0);
        gbc.writeMem(0x48a5, { 0xca, 0x57, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x94a7);
        EXPECT(gbc.pc(), 0x48a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 008B
        gbc.setState(0x1b3e, 0x28de, 0x1b10, 0xf19d, 0xc70b, 0xb0, 0x1, 0x1);
        gbc.writeMem(0x1b3e, { 0xca, 0x7d, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x28de);
        EXPECT(gbc.pc(), 0x1b41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 008C
        gbc.setState(0xccc2, 0x1b34, 0x3120, 0xdb1f, 0x67b9, 0x221a, 0x1, 0x0);
        gbc.writeMem(0xccc2, { 0xca, 0xf2, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1b34);
        EXPECT(gbc.pc(), 0xccc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccc2), 0xca);
        EXPECT(gbc.readMem(0xccc3), 0xf2);
        EXPECT(gbc.readMem(0xccc4), 0x65);
        // CA 008D
        gbc.setState(0x73f3, 0xfed7, 0x3e70, 0xc70, 0xde4d, 0xfb0a, 0x0, 0x1);
        gbc.writeMem(0x73f3, { 0xca, 0x1d, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xfed7);
        EXPECT(gbc.pc(), 0x73f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 008E
        gbc.setState(0x704c, 0x6d3a, 0x9e30, 0x86d2, 0x9e63, 0x6f9e, 0x0, 0x1);
        gbc.writeMem(0x704c, { 0xca, 0xc1, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6d3a);
        EXPECT(gbc.pc(), 0x704f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 008F
        gbc.setState(0xa0c8, 0x4492, 0x1840, 0xde3, 0xc70f, 0x4039, 0x1, 0x1);
        gbc.writeMem(0xa0c8, { 0xca, 0x7b, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4492);
        EXPECT(gbc.pc(), 0xa0cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c8), 0xca);
        EXPECT(gbc.readMem(0xa0c9), 0x7b);
        EXPECT(gbc.readMem(0xa0ca), 0xe5);
        // CA 0090
        gbc.setState(0x6334, 0xd40a, 0xcf70, 0x8a04, 0x7c4, 0x3200, 0x0, 0x0);
        gbc.writeMem(0x6334, { 0xca, 0xe8, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd40a);
        EXPECT(gbc.pc(), 0x6337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0091
        gbc.setState(0x436d, 0x59a2, 0x8510, 0x956, 0xf8e4, 0xbb6f, 0x0, 0x1);
        gbc.writeMem(0x436d, { 0xca, 0xbf, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x59a2);
        EXPECT(gbc.pc(), 0x4370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0092
        gbc.setState(0xb994, 0x9fee, 0xcc40, 0x3773, 0x69, 0xe4fc, 0x0, 0x1);
        gbc.writeMem(0xb994, { 0xca, 0xd0, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9fee);
        EXPECT(gbc.pc(), 0xb997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb994), 0xca);
        EXPECT(gbc.readMem(0xb995), 0xd0);
        EXPECT(gbc.readMem(0xb996), 0x71);
        // CA 0093
        gbc.setState(0x1ba1, 0x4a00, 0xa200, 0x188e, 0xe1a5, 0x3270, 0x1, 0x0);
        gbc.writeMem(0x1ba1, { 0xca, 0xf8, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4a00);
        EXPECT(gbc.pc(), 0x1ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0094
        gbc.setState(0x3d4, 0xf7a7, 0x9ec0, 0x1f10, 0x7af4, 0x4c53, 0x0, 0x0);
        gbc.writeMem(0x3d4, { 0xca, 0x77, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf7a7);
        EXPECT(gbc.pc(), 0xae77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0095
        gbc.setState(0x4672, 0x3f7, 0xe1b0, 0xd264, 0x4c75, 0x7f77, 0x0, 0x0);
        gbc.writeMem(0x4672, { 0xca, 0x44, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3f7);
        EXPECT(gbc.pc(), 0xf344);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0096
        gbc.setState(0xde70, 0xe79, 0x5ab0, 0x8aa0, 0x8046, 0xd557, 0x1, 0x1);
        gbc.writeMem(0xde70, { 0xca, 0x7f, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe79);
        EXPECT(gbc.pc(), 0xc17f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde70), 0xca);
        EXPECT(gbc.readMem(0xde71), 0x7f);
        EXPECT(gbc.readMem(0xde72), 0xc1);
        // CA 0097
        gbc.setState(0x31ba, 0x1d6, 0xf7d0, 0x16f1, 0x7b4f, 0x3d2f, 0x0, 0x1);
        gbc.writeMem(0x31ba, { 0xca, 0x93, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1d6);
        EXPECT(gbc.pc(), 0xd493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0099
        gbc.setState(0xcf58, 0xcd92, 0xc980, 0xc836, 0x6ecc, 0xe652, 0x1, 0x0);
        gbc.writeMem(0xcf58, { 0xca, 0x6e, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xcd92);
        EXPECT(gbc.pc(), 0x636e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf58), 0xca);
        EXPECT(gbc.readMem(0xcf59), 0x6e);
        EXPECT(gbc.readMem(0xcf5a), 0x63);
        // CA 009A
        gbc.setState(0xa404, 0xa624, 0x6480, 0x54de, 0xad9a, 0x2a0c, 0x0, 0x0);
        gbc.writeMem(0xa404, { 0xca, 0x56, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa624);
        EXPECT(gbc.pc(), 0xf856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa404), 0xca);
        EXPECT(gbc.readMem(0xa405), 0x56);
        EXPECT(gbc.readMem(0xa406), 0xf8);
        // CA 009B
        gbc.setState(0x2b9, 0xf0e9, 0xb240, 0x896b, 0x6fea, 0xa3c4, 0x1, 0x0);
        gbc.writeMem(0x2b9, { 0xca, 0xe4, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf0e9);
        EXPECT(gbc.pc(), 0x2bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 009C
        gbc.setState(0x6627, 0x1257, 0x6df0, 0xa1c0, 0x4044, 0x8122, 0x0, 0x0);
        gbc.writeMem(0x6627, { 0xca, 0x75, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1257);
        EXPECT(gbc.pc(), 0xff75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 009D
        gbc.setState(0xec2, 0xbe67, 0x7850, 0xaba4, 0x7ea, 0x7020, 0x1, 0x1);
        gbc.writeMem(0xec2, { 0xca, 0x81, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xbe67);
        EXPECT(gbc.pc(), 0xec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 009E
        gbc.setState(0xb8a3, 0x696d, 0x5850, 0xe59b, 0xe199, 0x3b90, 0x0, 0x0);
        gbc.writeMem(0xb8a3, { 0xca, 0xb6, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x696d);
        EXPECT(gbc.pc(), 0xb8a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a3), 0xca);
        EXPECT(gbc.readMem(0xb8a4), 0xb6);
        EXPECT(gbc.readMem(0xb8a5), 0x8f);
        // CA 00A0
        gbc.setState(0x3128, 0xe042, 0xcb00, 0x2690, 0x8903, 0x7de2, 0x1, 0x0);
        gbc.writeMem(0x3128, { 0xca, 0x91, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe042);
        EXPECT(gbc.pc(), 0x312b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 00A1
        gbc.setState(0xba06, 0x1bc8, 0x6bc0, 0x29f3, 0xc375, 0xd48b, 0x0, 0x0);
        gbc.writeMem(0xba06, { 0xca, 0x6b, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1bc8);
        EXPECT(gbc.pc(), 0xe66b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba06), 0xca);
        EXPECT(gbc.readMem(0xba07), 0x6b);
        EXPECT(gbc.readMem(0xba08), 0xe6);
        // CA 00A2
        gbc.setState(0x95a5, 0xb101, 0xf890, 0x7280, 0xe75e, 0xbfbe, 0x0, 0x1);
        gbc.writeMem(0x95a5, { 0xca, 0xec, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb101);
        EXPECT(gbc.pc(), 0x18ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95a5), 0xca);
        EXPECT(gbc.readMem(0x95a6), 0xec);
        EXPECT(gbc.readMem(0x95a7), 0x18);
        // CA 00A3
        gbc.setState(0xe9c8, 0x98dd, 0xd2d0, 0x73df, 0xe91e, 0x8570, 0x0, 0x0);
        gbc.writeMem(0xe9c8, { 0xca, 0x37, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x98dd);
        EXPECT(gbc.pc(), 0xa637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c8), 0xca);
        EXPECT(gbc.readMem(0xe9c9), 0x37);
        EXPECT(gbc.readMem(0xe9ca), 0xa6);
        // CA 00A4
        gbc.setState(0x77b0, 0x18fc, 0xc730, 0xe249, 0xe7a1, 0x3c47, 0x1, 0x0);
        gbc.writeMem(0x77b0, { 0xca, 0x5, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x18fc);
        EXPECT(gbc.pc(), 0x77b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 00A5
        gbc.setState(0xe66c, 0x6931, 0x9320, 0x8fe, 0x917d, 0xf02a, 0x1, 0x0);
        gbc.writeMem(0xe66c, { 0xca, 0x82, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x6931);
        EXPECT(gbc.pc(), 0xe66f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe66c), 0xca);
        EXPECT(gbc.readMem(0xe66d), 0x82);
        EXPECT(gbc.readMem(0xe66e), 0x40);
        // CA 00A6
        gbc.setState(0x9f95, 0xcff8, 0x48e0, 0x4882, 0x894c, 0x9b0e, 0x0, 0x0);
        gbc.writeMem(0x9f95, { 0xca, 0x13, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xcff8);
        EXPECT(gbc.pc(), 0x1513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f95), 0xca);
        EXPECT(gbc.readMem(0x9f96), 0x13);
        EXPECT(gbc.readMem(0x9f97), 0x15);
        // CA 00A7
        gbc.setState(0x7864, 0x60fb, 0x2e70, 0x260e, 0x69fb, 0x8be0, 0x1, 0x0);
        gbc.writeMem(0x7864, { 0xca, 0x6e, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x60fb);
        EXPECT(gbc.pc(), 0x7867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 00A8
        gbc.setState(0x35e3, 0x55ff, 0xad90, 0xcb4d, 0xc08b, 0xea63, 0x0, 0x1);
        gbc.writeMem(0x35e3, { 0xca, 0x5d, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x55ff);
        EXPECT(gbc.pc(), 0xe45d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 00A9
        gbc.setState(0x3674, 0x227b, 0xf3f0, 0xfc81, 0x5dae, 0x9ef3, 0x0, 0x1);
        gbc.writeMem(0x3674, { 0xca, 0xb1, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x227b);
        EXPECT(gbc.pc(), 0x7ab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 00AA
        gbc.setState(0x13cf, 0x63f, 0xa560, 0xcc06, 0xd06f, 0xef5d, 0x1, 0x1);
        gbc.writeMem(0x13cf, { 0xca, 0xcd, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x63f);
        EXPECT(gbc.pc(), 0x13d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 00AB
        gbc.setState(0x2dd9, 0x359e, 0xe720, 0xeb84, 0xb94b, 0x9c0, 0x1, 0x0);
        gbc.writeMem(0x2dd9, { 0xca, 0xa, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x359e);
        EXPECT(gbc.pc(), 0x2ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 00AC
        gbc.setState(0xd17, 0xee01, 0xc7a0, 0xee30, 0x58, 0x7e4a, 0x1, 0x1);
        gbc.writeMem(0xd17, { 0xca, 0xc2, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xee01);
        EXPECT(gbc.pc(), 0xf7c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 00AD
        gbc.setState(0x527, 0xd6fe, 0xc5e0, 0x16ea, 0x28af, 0x5b7b, 0x0, 0x0);
        gbc.writeMem(0x527, { 0xca, 0xb8, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd6fe);
        EXPECT(gbc.pc(), 0x7db8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 00AE
        gbc.setState(0x4c9e, 0x9c06, 0x6560, 0xb018, 0xa2bf, 0xd445, 0x1, 0x0);
        gbc.writeMem(0x4c9e, { 0xca, 0xca, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9c06);
        EXPECT(gbc.pc(), 0x4ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 00AF
        gbc.setState(0x6f23, 0xaedb, 0x5d20, 0x818a, 0xe6e0, 0x1e21, 0x1, 0x1);
        gbc.writeMem(0x6f23, { 0xca, 0x89, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xaedb);
        EXPECT(gbc.pc(), 0x6f26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 00B0
        gbc.setState(0x95a9, 0x5e7d, 0xc2c0, 0x369c, 0x457b, 0xa881, 0x1, 0x1);
        gbc.writeMem(0x95a9, { 0xca, 0x17, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5e7d);
        EXPECT(gbc.pc(), 0x2817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a9), 0xca);
        EXPECT(gbc.readMem(0x95aa), 0x17);
        EXPECT(gbc.readMem(0x95ab), 0x28);
        // CA 00B2
        gbc.setState(0x90a5, 0x317a, 0x9de0, 0xb36d, 0x410, 0xf599, 0x1, 0x0);
        gbc.writeMem(0x90a5, { 0xca, 0x7e, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x317a);
        EXPECT(gbc.pc(), 0x967e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90a5), 0xca);
        EXPECT(gbc.readMem(0x90a6), 0x7e);
        EXPECT(gbc.readMem(0x90a7), 0x96);
        // CA 00B3
        gbc.setState(0xbd4d, 0x1efa, 0x6b90, 0xea04, 0xc5c2, 0x9ed9, 0x0, 0x0);
        gbc.writeMem(0xbd4d, { 0xca, 0xdb, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1efa);
        EXPECT(gbc.pc(), 0x7ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd4d), 0xca);
        EXPECT(gbc.readMem(0xbd4e), 0xdb);
        EXPECT(gbc.readMem(0xbd4f), 0x7d);
        // CA 00B4
        gbc.setState(0x8161, 0xe71f, 0xc960, 0x1293, 0x5af5, 0x6efb, 0x1, 0x1);
        gbc.writeMem(0x8161, { 0xca, 0x5e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe71f);
        EXPECT(gbc.pc(), 0x8164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8161), 0xca);
        EXPECT(gbc.readMem(0x8162), 0x5e);
        EXPECT(gbc.readMem(0x8163), 0x42);
        // CA 00B5
        gbc.setState(0x5209, 0xa412, 0x1590, 0x774d, 0xa4ca, 0x1b9e, 0x0, 0x1);
        gbc.writeMem(0x5209, { 0xca, 0xd0, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa412);
        EXPECT(gbc.pc(), 0x72d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 00B6
        gbc.setState(0x98ad, 0x7ccb, 0xc620, 0x1498, 0xa77, 0x6310, 0x1, 0x0);
        gbc.writeMem(0x98ad, { 0xca, 0x53, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7ccb);
        EXPECT(gbc.pc(), 0x98b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98ad), 0xca);
        EXPECT(gbc.readMem(0x98ae), 0x53);
        EXPECT(gbc.readMem(0x98af), 0x5b);
        // CA 00B7
        gbc.setState(0x22a1, 0x300b, 0x3920, 0xadbe, 0xf549, 0x9884, 0x1, 0x0);
        gbc.writeMem(0x22a1, { 0xca, 0x26, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x300b);
        EXPECT(gbc.pc(), 0x22a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 00B8
        gbc.setState(0xb41b, 0xbd84, 0xc800, 0xcce9, 0xb711, 0xac0c, 0x0, 0x1);
        gbc.writeMem(0xb41b, { 0xca, 0x58, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbd84);
        EXPECT(gbc.pc(), 0xb41e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb41b), 0xca);
        EXPECT(gbc.readMem(0xb41c), 0x58);
        EXPECT(gbc.readMem(0xb41d), 0x63);
        // CA 00BA
        gbc.setState(0xbe67, 0xf5d6, 0x86c0, 0xdd6f, 0x96b3, 0x87f2, 0x0, 0x0);
        gbc.writeMem(0xbe67, { 0xca, 0x67, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf5d6);
        EXPECT(gbc.pc(), 0x5667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe67), 0xca);
        EXPECT(gbc.readMem(0xbe68), 0x67);
        EXPECT(gbc.readMem(0xbe69), 0x56);
        // CA 00BC
        gbc.setState(0xbbe7, 0xda26, 0x27b0, 0x10fe, 0xda2, 0x4e3, 0x0, 0x0);
        gbc.writeMem(0xbbe7, { 0xca, 0x9, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xda26);
        EXPECT(gbc.pc(), 0xf309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe7), 0xca);
        EXPECT(gbc.readMem(0xbbe8), 0x9);
        EXPECT(gbc.readMem(0xbbe9), 0xf3);
        // CA 00BD
        gbc.setState(0x78cb, 0xd58a, 0x3a10, 0x7e62, 0xf930, 0x8006, 0x0, 0x0);
        gbc.writeMem(0x78cb, { 0xca, 0xcd, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd58a);
        EXPECT(gbc.pc(), 0x78ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 00BE
        gbc.setState(0x61e4, 0x1d9d, 0x7560, 0xff6e, 0x64f4, 0x293b, 0x0, 0x0);
        gbc.writeMem(0x61e4, { 0xca, 0xdc, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1d9d);
        EXPECT(gbc.pc(), 0x61e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 00BF
        gbc.setState(0xdaf7, 0x405a, 0x4700, 0x93f, 0xb779, 0x7360, 0x1, 0x0);
        gbc.writeMem(0xdaf7, { 0xca, 0xe1, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x405a);
        EXPECT(gbc.pc(), 0xdafa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaf7), 0xca);
        EXPECT(gbc.readMem(0xdaf8), 0xe1);
        EXPECT(gbc.readMem(0xdaf9), 0x21);
        // CA 00C0
        gbc.setState(0x7a2a, 0x625, 0x5b10, 0x83de, 0xd907, 0x7315, 0x1, 0x1);
        gbc.writeMem(0x7a2a, { 0xca, 0x59, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x625);
        EXPECT(gbc.pc(), 0x7a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 00C1
        gbc.setState(0x1149, 0xd3ac, 0x7a20, 0x36a2, 0x497e, 0xa50a, 0x0, 0x1);
        gbc.writeMem(0x1149, { 0xca, 0x1b, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd3ac);
        EXPECT(gbc.pc(), 0x114c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 00C2
        gbc.setState(0x6beb, 0x9219, 0xae10, 0x7ce5, 0x8481, 0xc06, 0x0, 0x0);
        gbc.writeMem(0x6beb, { 0xca, 0x52, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9219);
        EXPECT(gbc.pc(), 0x6bee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 00C3
        gbc.setState(0xe2e9, 0x61e7, 0x1690, 0x29d2, 0x591a, 0xe536, 0x0, 0x0);
        gbc.writeMem(0xe2e9, { 0xca, 0xf8, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x61e7);
        EXPECT(gbc.pc(), 0xedf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2e9), 0xca);
        EXPECT(gbc.readMem(0xe2ea), 0xf8);
        EXPECT(gbc.readMem(0xe2eb), 0xed);
        // CA 00C4
        gbc.setState(0x248d, 0x3513, 0x3e70, 0x173c, 0xe13d, 0x3b31, 0x1, 0x0);
        gbc.writeMem(0x248d, { 0xca, 0xba, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3513);
        EXPECT(gbc.pc(), 0x2490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 00C5
        gbc.setState(0xddfe, 0xfeaa, 0x1f0, 0x61bb, 0x2c20, 0xdab5, 0x0, 0x0);
        gbc.writeMem(0xddfe, { 0xca, 0x29, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xfeaa);
        EXPECT(gbc.pc(), 0xb29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddfe), 0xca);
        EXPECT(gbc.readMem(0xddff), 0x29);
        EXPECT(gbc.readMem(0xde00), 0xb);
        // CA 00C6
        gbc.setState(0xee2c, 0xf3df, 0x82f0, 0x8fc3, 0x2308, 0x71a8, 0x1, 0x1);
        gbc.writeMem(0xee2c, { 0xca, 0xf9, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf3df);
        EXPECT(gbc.pc(), 0x94f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee2c), 0xca);
        EXPECT(gbc.readMem(0xee2d), 0xf9);
        EXPECT(gbc.readMem(0xee2e), 0x94);
        // CA 00C7
        gbc.setState(0x1bd8, 0x8b4e, 0x360, 0xccee, 0x6d92, 0x7941, 0x1, 0x0);
        gbc.writeMem(0x1bd8, { 0xca, 0x7a, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8b4e);
        EXPECT(gbc.pc(), 0x1bdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 00C8
        gbc.setState(0x363d, 0xa366, 0xf100, 0x657a, 0x1db, 0x7f7f, 0x0, 0x1);
        gbc.writeMem(0x363d, { 0xca, 0xd, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa366);
        EXPECT(gbc.pc(), 0x3640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 00C9
        gbc.setState(0xa89c, 0x656f, 0xcb60, 0x6824, 0x7378, 0x8b52, 0x1, 0x0);
        gbc.writeMem(0xa89c, { 0xca, 0x2c, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x656f);
        EXPECT(gbc.pc(), 0xa89f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa89c), 0xca);
        EXPECT(gbc.readMem(0xa89d), 0x2c);
        EXPECT(gbc.readMem(0xa89e), 0x82);
        // CA 00CA
        gbc.setState(0x7246, 0x623e, 0x5060, 0x8d72, 0xf1f5, 0xfc83, 0x0, 0x1);
        gbc.writeMem(0x7246, { 0xca, 0xc4, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x623e);
        EXPECT(gbc.pc(), 0x7249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 00CB
        gbc.setState(0xe2e8, 0x62fe, 0xd70, 0x523d, 0x5b9c, 0x29a3, 0x1, 0x1);
        gbc.writeMem(0xe2e8, { 0xca, 0xbb, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x62fe);
        EXPECT(gbc.pc(), 0xe2eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2e8), 0xca);
        EXPECT(gbc.readMem(0xe2e9), 0xbb);
        EXPECT(gbc.readMem(0xe2ea), 0xf8);
        // CA 00CC
        gbc.setState(0x2002, 0x6978, 0xab80, 0x30a1, 0x6aa7, 0x364f, 0x1, 0x1);
        gbc.writeMem(0x2002, { 0xca, 0x96, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6978);
        EXPECT(gbc.pc(), 0x7a96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 00CD
        gbc.setState(0xd189, 0x83b2, 0x91e0, 0xe92b, 0xd4f4, 0xd5a8, 0x1, 0x1);
        gbc.writeMem(0xd189, { 0xca, 0x8d, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x83b2);
        EXPECT(gbc.pc(), 0x8b8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd189), 0xca);
        EXPECT(gbc.readMem(0xd18a), 0x8d);
        EXPECT(gbc.readMem(0xd18b), 0x8b);
        // CA 00CE
        gbc.setState(0x554a, 0x4c40, 0xf2b0, 0x8219, 0x5990, 0xabe3, 0x1, 0x0);
        gbc.writeMem(0x554a, { 0xca, 0x54, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4c40);
        EXPECT(gbc.pc(), 0xd154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 00CF
        gbc.setState(0x3b8, 0x4258, 0x6730, 0x8786, 0x24ac, 0xfefa, 0x0, 0x0);
        gbc.writeMem(0x3b8, { 0xca, 0x87, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4258);
        EXPECT(gbc.pc(), 0x3bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 00D0
        gbc.setState(0xa621, 0xc31d, 0xcab0, 0x7b0e, 0x1c8a, 0x5e88, 0x1, 0x0);
        gbc.writeMem(0xa621, { 0xca, 0xc6, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc31d);
        EXPECT(gbc.pc(), 0xadc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa621), 0xca);
        EXPECT(gbc.readMem(0xa622), 0xc6);
        EXPECT(gbc.readMem(0xa623), 0xad);
        // CA 00D1
        gbc.setState(0x1f96, 0x13ac, 0xbb10, 0x655a, 0xa660, 0x37c4, 0x0, 0x1);
        gbc.writeMem(0x1f96, { 0xca, 0xce, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x13ac);
        EXPECT(gbc.pc(), 0x1f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 00D2
        gbc.setState(0xccc9, 0x7099, 0x13a0, 0x90fd, 0x2f25, 0x1457, 0x1, 0x0);
        gbc.writeMem(0xccc9, { 0xca, 0x32, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7099);
        EXPECT(gbc.pc(), 0x6932);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccc9), 0xca);
        EXPECT(gbc.readMem(0xccca), 0x32);
        EXPECT(gbc.readMem(0xcccb), 0x69);
        // CA 00D3
        gbc.setState(0x519, 0x2690, 0x830, 0x2a41, 0x1bb2, 0x4eea, 0x0, 0x0);
        gbc.writeMem(0x519, { 0xca, 0x42, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2690);
        EXPECT(gbc.pc(), 0x51c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 00D4
        gbc.setState(0x73da, 0x9276, 0x46c0, 0xf6b9, 0xf231, 0xa453, 0x1, 0x0);
        gbc.writeMem(0x73da, { 0xca, 0x92, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9276);
        EXPECT(gbc.pc(), 0xf792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 00D5
        gbc.setState(0xd597, 0xf92a, 0xbf30, 0x6726, 0xc4b0, 0x15f9, 0x0, 0x0);
        gbc.writeMem(0xd597, { 0xca, 0x15, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf92a);
        EXPECT(gbc.pc(), 0xd59a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd597), 0xca);
        EXPECT(gbc.readMem(0xd598), 0x15);
        EXPECT(gbc.readMem(0xd599), 0x55);
        // CA 00D6
        gbc.setState(0x7259, 0xf4f1, 0xed50, 0x7756, 0x2e59, 0x9f5d, 0x0, 0x1);
        gbc.writeMem(0x7259, { 0xca, 0x4d, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf4f1);
        EXPECT(gbc.pc(), 0x725c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 00D7
        gbc.setState(0xe3f5, 0x9cc6, 0x2f70, 0xc9c8, 0x3f87, 0x3599, 0x1, 0x0);
        gbc.writeMem(0xe3f5, { 0xca, 0x7e, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9cc6);
        EXPECT(gbc.pc(), 0xe3f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3f5), 0xca);
        EXPECT(gbc.readMem(0xe3f6), 0x7e);
        EXPECT(gbc.readMem(0xe3f7), 0x20);
        // CA 00D8
        gbc.setState(0x87b7, 0x7d5b, 0x4430, 0x35d8, 0x4474, 0x956f, 0x0, 0x0);
        gbc.writeMem(0x87b7, { 0xca, 0x8c, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7d5b);
        EXPECT(gbc.pc(), 0x87ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87b7), 0xca);
        EXPECT(gbc.readMem(0x87b8), 0x8c);
        EXPECT(gbc.readMem(0x87b9), 0xa6);
        // CA 00DA
        gbc.setState(0x7354, 0x6d90, 0x3ac0, 0x3757, 0x37b5, 0xedb5, 0x1, 0x1);
        gbc.writeMem(0x7354, { 0xca, 0x3d, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6d90);
        EXPECT(gbc.pc(), 0x2e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 00DB
        gbc.setState(0x9874, 0xf464, 0xc9e0, 0xe660, 0x3f06, 0x34, 0x1, 0x1);
        gbc.writeMem(0x9874, { 0xca, 0x1e, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf464);
        EXPECT(gbc.pc(), 0x181e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9874), 0xca);
        EXPECT(gbc.readMem(0x9875), 0x1e);
        EXPECT(gbc.readMem(0x9876), 0x18);
        // CA 00DC
        gbc.setState(0x37ad, 0xb200, 0x7ab0, 0xe453, 0xc4f9, 0x5e, 0x0, 0x1);
        gbc.writeMem(0x37ad, { 0xca, 0xa3, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb200);
        EXPECT(gbc.pc(), 0xaba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 00DD
        gbc.setState(0xd9f2, 0x4ae2, 0xa150, 0x31c7, 0xe5bc, 0x6a6f, 0x0, 0x0);
        gbc.writeMem(0xd9f2, { 0xca, 0x5, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4ae2);
        EXPECT(gbc.pc(), 0xd9f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9f2), 0xca);
        EXPECT(gbc.readMem(0xd9f3), 0x5);
        EXPECT(gbc.readMem(0xd9f4), 0xf4);
        // CA 00DE
        gbc.setState(0xb516, 0xbe29, 0xc080, 0xd391, 0xb331, 0xfc84, 0x1, 0x1);
        gbc.writeMem(0xb516, { 0xca, 0x89, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xbe29);
        EXPECT(gbc.pc(), 0x6d89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb516), 0xca);
        EXPECT(gbc.readMem(0xb517), 0x89);
        EXPECT(gbc.readMem(0xb518), 0x6d);
        // CA 00DF
        gbc.setState(0x81de, 0xa99d, 0x2ce0, 0xd8c3, 0x7d67, 0x1209, 0x1, 0x1);
        gbc.writeMem(0x81de, { 0xca, 0x7, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa99d);
        EXPECT(gbc.pc(), 0xe307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81de), 0xca);
        EXPECT(gbc.readMem(0x81df), 0x7);
        EXPECT(gbc.readMem(0x81e0), 0xe3);
        // CA 00E0
        gbc.setState(0xe0a5, 0xa3c9, 0x8c40, 0x741a, 0xc618, 0x2ac1, 0x0, 0x0);
        gbc.writeMem(0xe0a5, { 0xca, 0x68, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa3c9);
        EXPECT(gbc.pc(), 0xe0a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0a5), 0xca);
        EXPECT(gbc.readMem(0xe0a6), 0x68);
        EXPECT(gbc.readMem(0xe0a7), 0x8b);
        // CA 00E1
        gbc.setState(0x3775, 0x21cb, 0x8010, 0x8c83, 0xb1f8, 0x3891, 0x1, 0x1);
        gbc.writeMem(0x3775, { 0xca, 0x30, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x21cb);
        EXPECT(gbc.pc(), 0x3778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 00E2
        gbc.setState(0x5b21, 0xbff1, 0x6600, 0xb9c4, 0x8c9d, 0xb28a, 0x0, 0x0);
        gbc.writeMem(0x5b21, { 0xca, 0xbb, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbff1);
        EXPECT(gbc.pc(), 0x5b24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 00E3
        gbc.setState(0x7ec8, 0x2ca5, 0xb1f0, 0x9fa6, 0xbaa5, 0x7eef, 0x0, 0x1);
        gbc.writeMem(0x7ec8, { 0xca, 0x4c, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2ca5);
        EXPECT(gbc.pc(), 0x414c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 00E4
        gbc.setState(0x42b, 0x3a93, 0xa8f0, 0xf6bc, 0x2c7e, 0xe736, 0x1, 0x1);
        gbc.writeMem(0x42b, { 0xca, 0xd7, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3a93);
        EXPECT(gbc.pc(), 0x1cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 00E6
        gbc.setState(0xeeab, 0xdaa1, 0xbc10, 0x5362, 0x2477, 0xc413, 0x0, 0x0);
        gbc.writeMem(0xeeab, { 0xca, 0x87, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdaa1);
        EXPECT(gbc.pc(), 0xeeae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeab), 0xca);
        EXPECT(gbc.readMem(0xeeac), 0x87);
        EXPECT(gbc.readMem(0xeead), 0x3f);
        // CA 00E7
        gbc.setState(0xabcc, 0x33bd, 0x54d0, 0xfc2b, 0xd74f, 0x792, 0x1, 0x1);
        gbc.writeMem(0xabcc, { 0xca, 0x70, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x33bd);
        EXPECT(gbc.pc(), 0x5370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabcc), 0xca);
        EXPECT(gbc.readMem(0xabcd), 0x70);
        EXPECT(gbc.readMem(0xabce), 0x53);
        // CA 00E8
        gbc.setState(0x17e3, 0x2dff, 0xd090, 0xb047, 0x3d5f, 0x41db, 0x0, 0x1);
        gbc.writeMem(0x17e3, { 0xca, 0xd, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2dff);
        EXPECT(gbc.pc(), 0xd70d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 00E9
        gbc.setState(0xc9db, 0x4b5d, 0xe870, 0x10df, 0x1e08, 0x33ae, 0x1, 0x1);
        gbc.writeMem(0xc9db, { 0xca, 0xf8, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4b5d);
        EXPECT(gbc.pc(), 0xc9de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9db), 0xca);
        EXPECT(gbc.readMem(0xc9dc), 0xf8);
        EXPECT(gbc.readMem(0xc9dd), 0x76);
        // CA 00EA
        gbc.setState(0xb08a, 0xc588, 0x27b0, 0xabd4, 0x15f4, 0xbb09, 0x1, 0x0);
        gbc.writeMem(0xb08a, { 0xca, 0xcc, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc588);
        EXPECT(gbc.pc(), 0x9bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb08a), 0xca);
        EXPECT(gbc.readMem(0xb08b), 0xcc);
        EXPECT(gbc.readMem(0xb08c), 0x9b);
        // CA 00EB
        gbc.setState(0x7cd7, 0xe7bd, 0x5cf0, 0xdcc2, 0x6a33, 0xf094, 0x1, 0x1);
        gbc.writeMem(0x7cd7, { 0xca, 0x11, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe7bd);
        EXPECT(gbc.pc(), 0x6e11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 00EC
        gbc.setState(0x930b, 0x5770, 0xed30, 0xfbc, 0x95ac, 0xde74, 0x0, 0x1);
        gbc.writeMem(0x930b, { 0xca, 0xb0, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5770);
        EXPECT(gbc.pc(), 0x930e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x930b), 0xca);
        EXPECT(gbc.readMem(0x930c), 0xb0);
        EXPECT(gbc.readMem(0x930d), 0x5e);
        // CA 00ED
        gbc.setState(0x4a06, 0x3d37, 0xc6b0, 0x854, 0x85b5, 0x33e, 0x0, 0x1);
        gbc.writeMem(0x4a06, { 0xca, 0x1a, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3d37);
        EXPECT(gbc.pc(), 0xd11a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 00EE
        gbc.setState(0x7b87, 0x83f2, 0x18a0, 0xe387, 0xd62f, 0x64bf, 0x0, 0x0);
        gbc.writeMem(0x7b87, { 0xca, 0xad, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x83f2);
        EXPECT(gbc.pc(), 0xe3ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 00EF
        gbc.setState(0xd49b, 0x295a, 0x2270, 0x7264, 0x4afd, 0x8d73, 0x1, 0x1);
        gbc.writeMem(0xd49b, { 0xca, 0x33, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x295a);
        EXPECT(gbc.pc(), 0xd49e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd49b), 0xca);
        EXPECT(gbc.readMem(0xd49c), 0x33);
        EXPECT(gbc.readMem(0xd49d), 0xee);
        // CA 00F0
        gbc.setState(0xe1cf, 0xe7d2, 0xbef0, 0x7dbd, 0xc636, 0xffb3, 0x1, 0x0);
        gbc.writeMem(0xe1cf, { 0xca, 0xa4, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe7d2);
        EXPECT(gbc.pc(), 0xea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1cf), 0xca);
        EXPECT(gbc.readMem(0xe1d0), 0xa4);
        EXPECT(gbc.readMem(0xe1d1), 0xe);
        // CA 00F1
        gbc.setState(0x496c, 0x2bcc, 0x8160, 0x1989, 0x5e19, 0x79f2, 0x0, 0x0);
        gbc.writeMem(0x496c, { 0xca, 0x23, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2bcc);
        EXPECT(gbc.pc(), 0x496f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 00F2
        gbc.setState(0xe0eb, 0xaf34, 0x69c0, 0x66ca, 0x3062, 0x81e8, 0x0, 0x0);
        gbc.writeMem(0xe0eb, { 0xca, 0x24, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xaf34);
        EXPECT(gbc.pc(), 0x6d24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0eb), 0xca);
        EXPECT(gbc.readMem(0xe0ec), 0x24);
        EXPECT(gbc.readMem(0xe0ed), 0x6d);
        // CA 00F3
        gbc.setState(0x8715, 0x540e, 0xb660, 0xd0cb, 0x5a89, 0x4edf, 0x1, 0x1);
        gbc.writeMem(0x8715, { 0xca, 0x45, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x540e);
        EXPECT(gbc.pc(), 0x8718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8715), 0xca);
        EXPECT(gbc.readMem(0x8716), 0x45);
        EXPECT(gbc.readMem(0x8717), 0x55);
        // CA 00F4
        gbc.setState(0xb2a5, 0x9c1d, 0x6dd0, 0x2230, 0xbd0d, 0xd44c, 0x1, 0x1);
        gbc.writeMem(0xb2a5, { 0xca, 0x62, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9c1d);
        EXPECT(gbc.pc(), 0x362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2a5), 0xca);
        EXPECT(gbc.readMem(0xb2a6), 0x62);
        EXPECT(gbc.readMem(0xb2a7), 0x3);
        // CA 00F5
        gbc.setState(0xa77b, 0xbe41, 0xc0d0, 0xec77, 0xe9c4, 0x2d28, 0x0, 0x1);
        gbc.writeMem(0xa77b, { 0xca, 0x2a, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbe41);
        EXPECT(gbc.pc(), 0x762a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa77b), 0xca);
        EXPECT(gbc.readMem(0xa77c), 0x2a);
        EXPECT(gbc.readMem(0xa77d), 0x76);
        // CA 00F6
        gbc.setState(0xb019, 0x79f2, 0x9330, 0xe58, 0x9ad0, 0xc1cb, 0x1, 0x0);
        gbc.writeMem(0xb019, { 0xca, 0xb9, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x79f2);
        EXPECT(gbc.pc(), 0xb01c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb019), 0xca);
        EXPECT(gbc.readMem(0xb01a), 0xb9);
        EXPECT(gbc.readMem(0xb01b), 0x95);
        // CA 00F7
        gbc.setState(0xb98b, 0xcff9, 0xeb70, 0xc0b8, 0xc6c, 0xf292, 0x1, 0x0);
        gbc.writeMem(0xb98b, { 0xca, 0x13, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcff9);
        EXPECT(gbc.pc(), 0xb98e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb98b), 0xca);
        EXPECT(gbc.readMem(0xb98c), 0x13);
        EXPECT(gbc.readMem(0xb98d), 0xf6);
        // CA 00F8
        gbc.setState(0x3b30, 0x219f, 0x96a0, 0xcc7f, 0x71fd, 0x86e7, 0x1, 0x0);
        gbc.writeMem(0x3b30, { 0xca, 0xfb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x219f);
        EXPECT(gbc.pc(), 0xe1fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 00FA
        gbc.setState(0x74dc, 0x1c8a, 0xe330, 0x5b26, 0x1f47, 0x2795, 0x1, 0x1);
        gbc.writeMem(0x74dc, { 0xca, 0x58, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1c8a);
        EXPECT(gbc.pc(), 0x74df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 00FB
        gbc.setState(0x1e70, 0x98b, 0x1900, 0xd8a4, 0x8141, 0x770c, 0x1, 0x1);
        gbc.writeMem(0x1e70, { 0xca, 0x70, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x98b);
        EXPECT(gbc.pc(), 0x1e73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 00FC
        gbc.setState(0x1ffc, 0x4a51, 0xde10, 0xabb6, 0xdf94, 0x297e, 0x1, 0x1);
        gbc.writeMem(0x1ffc, { 0xca, 0x49, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4a51);
        EXPECT(gbc.pc(), 0x1fff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 00FD
        gbc.setState(0xacb9, 0xa221, 0xf920, 0x1e00, 0x8d46, 0x42e7, 0x0, 0x0);
        gbc.writeMem(0xacb9, { 0xca, 0x78, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa221);
        EXPECT(gbc.pc(), 0xacbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacb9), 0xca);
        EXPECT(gbc.readMem(0xacba), 0x78);
        EXPECT(gbc.readMem(0xacbb), 0x20);
        // CA 00FE
        gbc.setState(0xbe35, 0x6f57, 0x2a00, 0x69ab, 0x497c, 0x42c5, 0x1, 0x0);
        gbc.writeMem(0xbe35, { 0xca, 0x6e, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6f57);
        EXPECT(gbc.pc(), 0xbe38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe35), 0xca);
        EXPECT(gbc.readMem(0xbe36), 0x6e);
        EXPECT(gbc.readMem(0xbe37), 0x22);
        // CA 00FF
        gbc.setState(0xed52, 0xcbf7, 0x200, 0x8682, 0x94b3, 0xbca7, 0x0, 0x1);
        gbc.writeMem(0xed52, { 0xca, 0xb9, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcbf7);
        EXPECT(gbc.pc(), 0xed55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed52), 0xca);
        EXPECT(gbc.readMem(0xed53), 0xb9);
        EXPECT(gbc.readMem(0xed54), 0xdb);
        // CA 0100
        gbc.setState(0x173f, 0x366b, 0xc1e0, 0x4be6, 0x28e3, 0x1d36, 0x1, 0x0);
        gbc.writeMem(0x173f, { 0xca, 0xa, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x366b);
        EXPECT(gbc.pc(), 0xd80a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0101
        gbc.setState(0x448e, 0xeb27, 0x80d0, 0xda30, 0x2d6a, 0x1a36, 0x0, 0x1);
        gbc.writeMem(0x448e, { 0xca, 0x4d, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xeb27);
        EXPECT(gbc.pc(), 0x324d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0102
        gbc.setState(0x8ad5, 0xdfd0, 0x1a90, 0x44ba, 0x41fd, 0xd4b0, 0x1, 0x1);
        gbc.writeMem(0x8ad5, { 0xca, 0xd1, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xdfd0);
        EXPECT(gbc.pc(), 0x8cd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad5), 0xca);
        EXPECT(gbc.readMem(0x8ad6), 0xd1);
        EXPECT(gbc.readMem(0x8ad7), 0x8c);
        // CA 0104
        gbc.setState(0x45d6, 0xf153, 0xab90, 0x6e48, 0xb625, 0x5881, 0x0, 0x0);
        gbc.writeMem(0x45d6, { 0xca, 0x23, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf153);
        EXPECT(gbc.pc(), 0x4d23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0105
        gbc.setState(0x48f6, 0xc190, 0xad80, 0x5170, 0xa2de, 0x22c8, 0x0, 0x0);
        gbc.writeMem(0x48f6, { 0xca, 0x2d, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc190);
        EXPECT(gbc.pc(), 0x802d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0106
        gbc.setState(0x1d81, 0xc53c, 0x5780, 0x9f65, 0xa659, 0xc2a, 0x0, 0x0);
        gbc.writeMem(0x1d81, { 0xca, 0xee, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc53c);
        EXPECT(gbc.pc(), 0xdbee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0107
        gbc.setState(0xce80, 0xe99e, 0x7ae0, 0x5c97, 0xf958, 0x32a9, 0x1, 0x0);
        gbc.writeMem(0xce80, { 0xca, 0x4e, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe99e);
        EXPECT(gbc.pc(), 0x334e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce80), 0xca);
        EXPECT(gbc.readMem(0xce81), 0x4e);
        EXPECT(gbc.readMem(0xce82), 0x33);
        // CA 0108
        gbc.setState(0xc74f, 0xbac2, 0x9e50, 0xabe5, 0x658, 0xc1ed, 0x1, 0x1);
        gbc.writeMem(0xc74f, { 0xca, 0xb5, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xbac2);
        EXPECT(gbc.pc(), 0xc752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc74f), 0xca);
        EXPECT(gbc.readMem(0xc750), 0xb5);
        EXPECT(gbc.readMem(0xc751), 0xdc);
        // CA 0109
        gbc.setState(0x62a4, 0xea19, 0x78a0, 0x7948, 0xf350, 0x3bab, 0x0, 0x0);
        gbc.writeMem(0x62a4, { 0xca, 0xbd, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xea19);
        EXPECT(gbc.pc(), 0x28bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 010A
        gbc.setState(0xade8, 0x744, 0x2920, 0x4842, 0x9f7b, 0x6025, 0x1, 0x1);
        gbc.writeMem(0xade8, { 0xca, 0xaa, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x744);
        EXPECT(gbc.pc(), 0xadeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade8), 0xca);
        EXPECT(gbc.readMem(0xade9), 0xaa);
        EXPECT(gbc.readMem(0xadea), 0xe7);
        // CA 010B
        gbc.setState(0xbea0, 0xa0fb, 0xa810, 0xbcb7, 0x3d1, 0xfc15, 0x1, 0x1);
        gbc.writeMem(0xbea0, { 0xca, 0xa, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa0fb);
        EXPECT(gbc.pc(), 0xbea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbea0), 0xca);
        EXPECT(gbc.readMem(0xbea1), 0xa);
        EXPECT(gbc.readMem(0xbea2), 0xb4);
        // CA 010C
        gbc.setState(0xd81, 0xde08, 0x4700, 0x9f3f, 0x90e5, 0xccd0, 0x0, 0x1);
        gbc.writeMem(0xd81, { 0xca, 0x77, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xde08);
        EXPECT(gbc.pc(), 0xd84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 010D
        gbc.setState(0xb1e5, 0x997a, 0x550, 0xe88e, 0x41af, 0x3fa, 0x1, 0x1);
        gbc.writeMem(0xb1e5, { 0xca, 0x6a, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x997a);
        EXPECT(gbc.pc(), 0xb1e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1e5), 0xca);
        EXPECT(gbc.readMem(0xb1e6), 0x6a);
        EXPECT(gbc.readMem(0xb1e7), 0x70);
        // CA 010E
        gbc.setState(0x7859, 0x6967, 0xa10, 0x2dac, 0x98bb, 0x7088, 0x1, 0x0);
        gbc.writeMem(0x7859, { 0xca, 0x44, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6967);
        EXPECT(gbc.pc(), 0x785c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 010F
        gbc.setState(0x62f8, 0xa3cd, 0x3100, 0x960f, 0x51ba, 0x67be, 0x0, 0x1);
        gbc.writeMem(0x62f8, { 0xca, 0x7c, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa3cd);
        EXPECT(gbc.pc(), 0x62fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0110
        gbc.setState(0x4057, 0x5c3d, 0xd4d0, 0x4890, 0xa108, 0x1bbb, 0x1, 0x0);
        gbc.writeMem(0x4057, { 0xca, 0x6c, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5c3d);
        EXPECT(gbc.pc(), 0xfe6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0111
        gbc.setState(0xaf61, 0x9014, 0x1690, 0x89eb, 0x5024, 0xb6a1, 0x1, 0x0);
        gbc.writeMem(0xaf61, { 0xca, 0xff, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9014);
        EXPECT(gbc.pc(), 0xb2ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf61), 0xca);
        EXPECT(gbc.readMem(0xaf62), 0xff);
        EXPECT(gbc.readMem(0xaf63), 0xb2);
        // CA 0112
        gbc.setState(0x3764, 0x472, 0xa520, 0x628f, 0x3590, 0x7e37, 0x1, 0x0);
        gbc.writeMem(0x3764, { 0xca, 0x78, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x472);
        EXPECT(gbc.pc(), 0x3767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0113
        gbc.setState(0x2f9b, 0x4953, 0xfc80, 0xa5e8, 0xabc2, 0xbfe4, 0x1, 0x1);
        gbc.writeMem(0x2f9b, { 0xca, 0x53, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4953);
        EXPECT(gbc.pc(), 0x7653);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0114
        gbc.setState(0x4e6b, 0xb4a3, 0xac70, 0x1dc6, 0x1c01, 0x1166, 0x0, 0x0);
        gbc.writeMem(0x4e6b, { 0xca, 0x46, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb4a3);
        EXPECT(gbc.pc(), 0x4e6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0115
        gbc.setState(0x4bb0, 0x647d, 0xb730, 0xc3b9, 0xf64c, 0xa4f, 0x0, 0x1);
        gbc.writeMem(0x4bb0, { 0xca, 0x49, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x647d);
        EXPECT(gbc.pc(), 0x4bb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0116
        gbc.setState(0x183a, 0x28f4, 0xf960, 0xfa7d, 0x6be3, 0xfff6, 0x1, 0x0);
        gbc.writeMem(0x183a, { 0xca, 0xfd, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x28f4);
        EXPECT(gbc.pc(), 0x183d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0117
        gbc.setState(0x0, 0x6838, 0x18a0, 0xfbac, 0x2e60, 0xabcc, 0x0, 0x1);
        gbc.writeMem(0x0, { 0xca, 0x1f, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6838);
        EXPECT(gbc.pc(), 0xc21f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0118
        gbc.setState(0xc0de, 0x3bbb, 0x2c90, 0xd33a, 0x4eac, 0x8235, 0x1, 0x0);
        gbc.writeMem(0xc0de, { 0xca, 0xa6, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3bbb);
        EXPECT(gbc.pc(), 0x43a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0de), 0xca);
        EXPECT(gbc.readMem(0xc0df), 0xa6);
        EXPECT(gbc.readMem(0xc0e0), 0x43);
        // CA 0119
        gbc.setState(0xe51d, 0x8a52, 0xf5e0, 0x1bc5, 0x9762, 0xdf, 0x0, 0x0);
        gbc.writeMem(0xe51d, { 0xca, 0xe3, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8a52);
        EXPECT(gbc.pc(), 0x4ae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe51d), 0xca);
        EXPECT(gbc.readMem(0xe51e), 0xe3);
        EXPECT(gbc.readMem(0xe51f), 0x4a);
        // CA 011A
        gbc.setState(0xafbd, 0xdfd4, 0xcd40, 0xb70f, 0x2901, 0xf261, 0x0, 0x0);
        gbc.writeMem(0xafbd, { 0xca, 0x59, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xdfd4);
        EXPECT(gbc.pc(), 0xafc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafbd), 0xca);
        EXPECT(gbc.readMem(0xafbe), 0x59);
        EXPECT(gbc.readMem(0xafbf), 0x58);
        // CA 011B
        gbc.setState(0x8438, 0xd749, 0xea80, 0xfe85, 0x1649, 0xba1b, 0x0, 0x1);
        gbc.writeMem(0x8438, { 0xca, 0x42, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xd749);
        EXPECT(gbc.pc(), 0xbe42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8438), 0xca);
        EXPECT(gbc.readMem(0x8439), 0x42);
        EXPECT(gbc.readMem(0x843a), 0xbe);
        // CA 011C
        gbc.setState(0xb851, 0xad3c, 0x1420, 0xf526, 0x830e, 0x9099, 0x1, 0x0);
        gbc.writeMem(0xb851, { 0xca, 0xc6, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xad3c);
        EXPECT(gbc.pc(), 0xb854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb851), 0xca);
        EXPECT(gbc.readMem(0xb852), 0xc6);
        EXPECT(gbc.readMem(0xb853), 0xa6);
        // CA 011D
        gbc.setState(0xd3b4, 0x54dc, 0x7bf0, 0x340c, 0xc34d, 0x43bf, 0x1, 0x1);
        gbc.writeMem(0xd3b4, { 0xca, 0x27, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x54dc);
        EXPECT(gbc.pc(), 0xfa27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b4), 0xca);
        EXPECT(gbc.readMem(0xd3b5), 0x27);
        EXPECT(gbc.readMem(0xd3b6), 0xfa);
        // CA 011E
        gbc.setState(0x69ca, 0x5a45, 0x45f0, 0x5574, 0x631c, 0x69f9, 0x1, 0x0);
        gbc.writeMem(0x69ca, { 0xca, 0x12, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5a45);
        EXPECT(gbc.pc(), 0x6b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 011F
        gbc.setState(0xb3fc, 0x6393, 0x64f0, 0x3a01, 0x7332, 0xfae4, 0x1, 0x0);
        gbc.writeMem(0xb3fc, { 0xca, 0x38, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6393);
        EXPECT(gbc.pc(), 0xd138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3fc), 0xca);
        EXPECT(gbc.readMem(0xb3fd), 0x38);
        EXPECT(gbc.readMem(0xb3fe), 0xd1);
        // CA 0120
        gbc.setState(0x8033, 0xb66e, 0xed90, 0x1e62, 0xd2f0, 0xd829, 0x0, 0x1);
        gbc.writeMem(0x8033, { 0xca, 0x44, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb66e);
        EXPECT(gbc.pc(), 0x8a44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8033), 0xca);
        EXPECT(gbc.readMem(0x8034), 0x44);
        EXPECT(gbc.readMem(0x8035), 0x8a);
        // CA 0121
        gbc.setState(0x589, 0x201a, 0x2c80, 0x9faf, 0xa32d, 0xae9b, 0x1, 0x1);
        gbc.writeMem(0x589, { 0xca, 0x42, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x201a);
        EXPECT(gbc.pc(), 0xc942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0122
        gbc.setState(0x3e2c, 0xfe4d, 0x59a0, 0x9e75, 0xbbe1, 0x895f, 0x0, 0x1);
        gbc.writeMem(0x3e2c, { 0xca, 0x50, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfe4d);
        EXPECT(gbc.pc(), 0x7350);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0123
        gbc.setState(0x848d, 0x74d0, 0xf1c0, 0xbc24, 0xfd06, 0x3345, 0x0, 0x1);
        gbc.writeMem(0x848d, { 0xca, 0x55, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x74d0);
        EXPECT(gbc.pc(), 0x5c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x848d), 0xca);
        EXPECT(gbc.readMem(0x848e), 0x55);
        EXPECT(gbc.readMem(0x848f), 0x5c);
        // CA 0124
        gbc.setState(0x14b7, 0x56be, 0x1840, 0xe46c, 0x8ff1, 0x7637, 0x1, 0x0);
        gbc.writeMem(0x14b7, { 0xca, 0x3a, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x56be);
        EXPECT(gbc.pc(), 0x14ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0125
        gbc.setState(0x4f58, 0xf29b, 0x7ed0, 0xf9f4, 0xd614, 0x3c8c, 0x0, 0x1);
        gbc.writeMem(0x4f58, { 0xca, 0x39, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf29b);
        EXPECT(gbc.pc(), 0xe339);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0126
        gbc.setState(0x8e89, 0xba58, 0x1920, 0xeba1, 0x8631, 0x5cdf, 0x1, 0x0);
        gbc.writeMem(0x8e89, { 0xca, 0x99, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xba58);
        EXPECT(gbc.pc(), 0x8e8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e89), 0xca);
        EXPECT(gbc.readMem(0x8e8a), 0x99);
        EXPECT(gbc.readMem(0x8e8b), 0xf);
        // CA 0127
        gbc.setState(0x8b98, 0x4d70, 0xb5f0, 0xc129, 0xfa62, 0x3f0c, 0x0, 0x0);
        gbc.writeMem(0x8b98, { 0xca, 0xe6, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4d70);
        EXPECT(gbc.pc(), 0xf2e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b98), 0xca);
        EXPECT(gbc.readMem(0x8b99), 0xe6);
        EXPECT(gbc.readMem(0x8b9a), 0xf2);
        // CA 0128
        gbc.setState(0xaa06, 0x41ff, 0x4950, 0x8441, 0xc1dd, 0x9c78, 0x0, 0x0);
        gbc.writeMem(0xaa06, { 0xca, 0xd6, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x41ff);
        EXPECT(gbc.pc(), 0xaa09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa06), 0xca);
        EXPECT(gbc.readMem(0xaa07), 0xd6);
        EXPECT(gbc.readMem(0xaa08), 0xa4);
        // CA 0129
        gbc.setState(0x86b6, 0x50aa, 0xf4e0, 0x22a8, 0xfaf3, 0x31ee, 0x0, 0x0);
        gbc.writeMem(0x86b6, { 0xca, 0x25, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x50aa);
        EXPECT(gbc.pc(), 0xbb25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b6), 0xca);
        EXPECT(gbc.readMem(0x86b7), 0x25);
        EXPECT(gbc.readMem(0x86b8), 0xbb);
        // CA 012A
        gbc.setState(0x9180, 0x808e, 0x2b00, 0xe62a, 0x3d02, 0x3c73, 0x0, 0x1);
        gbc.writeMem(0x9180, { 0xca, 0x85, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x808e);
        EXPECT(gbc.pc(), 0x9183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9180), 0xca);
        EXPECT(gbc.readMem(0x9181), 0x85);
        EXPECT(gbc.readMem(0x9182), 0xf3);
        // CA 012B
        gbc.setState(0x36e2, 0x53d1, 0x8110, 0x4137, 0xec89, 0x9a0d, 0x1, 0x1);
        gbc.writeMem(0x36e2, { 0xca, 0x41, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x53d1);
        EXPECT(gbc.pc(), 0x36e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 012C
        gbc.setState(0xb39c, 0xbf8c, 0x2990, 0xba61, 0x3325, 0xcb4a, 0x1, 0x0);
        gbc.writeMem(0xb39c, { 0xca, 0x35, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbf8c);
        EXPECT(gbc.pc(), 0x6c35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb39c), 0xca);
        EXPECT(gbc.readMem(0xb39d), 0x35);
        EXPECT(gbc.readMem(0xb39e), 0x6c);
        // CA 012D
        gbc.setState(0xec66, 0xc515, 0xddb0, 0xb5b6, 0x342c, 0xeb1a, 0x0, 0x1);
        gbc.writeMem(0xec66, { 0xca, 0x2c, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc515);
        EXPECT(gbc.pc(), 0xe02c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec66), 0xca);
        EXPECT(gbc.readMem(0xec67), 0x2c);
        EXPECT(gbc.readMem(0xec68), 0xe0);
        // CA 012E
        gbc.setState(0x450c, 0x4e28, 0x9690, 0xee8e, 0xc678, 0x2894, 0x1, 0x0);
        gbc.writeMem(0x450c, { 0xca, 0xc3, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4e28);
        EXPECT(gbc.pc(), 0x30c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 012F
        gbc.setState(0x34b4, 0xac65, 0xf970, 0x11e6, 0xd69c, 0xe647, 0x0, 0x1);
        gbc.writeMem(0x34b4, { 0xca, 0xa9, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xac65);
        EXPECT(gbc.pc(), 0x34b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0130
        gbc.setState(0x84e2, 0xf82c, 0x5b70, 0x169d, 0x287d, 0x86f7, 0x0, 0x0);
        gbc.writeMem(0x84e2, { 0xca, 0x66, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf82c);
        EXPECT(gbc.pc(), 0x84e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e2), 0xca);
        EXPECT(gbc.readMem(0x84e3), 0x66);
        EXPECT(gbc.readMem(0x84e4), 0xfb);
        // CA 0131
        gbc.setState(0x8632, 0x73be, 0xa720, 0xb96c, 0x3ad5, 0x90f3, 0x1, 0x1);
        gbc.writeMem(0x8632, { 0xca, 0xfe, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x73be);
        EXPECT(gbc.pc(), 0x8635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8632), 0xca);
        EXPECT(gbc.readMem(0x8633), 0xfe);
        EXPECT(gbc.readMem(0x8634), 0x38);
        // CA 0132
        gbc.setState(0xcf1f, 0xb779, 0xb220, 0xc5b9, 0x307c, 0xf9b4, 0x0, 0x0);
        gbc.writeMem(0xcf1f, { 0xca, 0xc2, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb779);
        EXPECT(gbc.pc(), 0xcf22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf1f), 0xca);
        EXPECT(gbc.readMem(0xcf20), 0xc2);
        EXPECT(gbc.readMem(0xcf21), 0xec);
        // CA 0133
        gbc.setState(0x4b1f, 0xda58, 0x2040, 0x7e1b, 0x8f83, 0xe6e, 0x0, 0x1);
        gbc.writeMem(0x4b1f, { 0xca, 0x8c, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xda58);
        EXPECT(gbc.pc(), 0x4b22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0134
        gbc.setState(0x69f7, 0x2be0, 0x9300, 0xe979, 0xa4d8, 0x1dd5, 0x0, 0x0);
        gbc.writeMem(0x69f7, { 0xca, 0xb0, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2be0);
        EXPECT(gbc.pc(), 0x69fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0135
        gbc.setState(0x8857, 0xffe7, 0xce50, 0xe114, 0x3845, 0x9050, 0x1, 0x1);
        gbc.writeMem(0x8857, { 0xca, 0xb6, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xffe7);
        EXPECT(gbc.pc(), 0x885a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8857), 0xca);
        EXPECT(gbc.readMem(0x8858), 0xb6);
        EXPECT(gbc.readMem(0x8859), 0xba);
        // CA 0136
        gbc.setState(0x8199, 0xf88, 0x1ce0, 0x7afd, 0x1727, 0x5c7, 0x1, 0x1);
        gbc.writeMem(0x8199, { 0xca, 0xb2, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf88);
        EXPECT(gbc.pc(), 0x2fb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8199), 0xca);
        EXPECT(gbc.readMem(0x819a), 0xb2);
        EXPECT(gbc.readMem(0x819b), 0x2f);
        // CA 0138
        gbc.setState(0x32ce, 0x3dc, 0xdfb0, 0xcbb6, 0x716b, 0xa5da, 0x0, 0x1);
        gbc.writeMem(0x32ce, { 0xca, 0x8a, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3dc);
        EXPECT(gbc.pc(), 0xfe8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0139
        gbc.setState(0x1ad0, 0x703e, 0x1420, 0x75a, 0xb3dd, 0x9982, 0x0, 0x1);
        gbc.writeMem(0x1ad0, { 0xca, 0x80, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x703e);
        EXPECT(gbc.pc(), 0x1ad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 013A
        gbc.setState(0x24c0, 0xee12, 0xe5f0, 0x4c99, 0xd24a, 0x7d4b, 0x0, 0x1);
        gbc.writeMem(0x24c0, { 0xca, 0xf9, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xee12);
        EXPECT(gbc.pc(), 0xd4f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 013B
        gbc.setState(0xc1d8, 0x9909, 0x6e30, 0xc629, 0x85a8, 0x913e, 0x1, 0x0);
        gbc.writeMem(0xc1d8, { 0xca, 0x4d, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9909);
        EXPECT(gbc.pc(), 0xc1db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d8), 0xca);
        EXPECT(gbc.readMem(0xc1d9), 0x4d);
        EXPECT(gbc.readMem(0xc1da), 0x7c);
        // CA 013C
        gbc.setState(0x83f0, 0x720, 0x87e0, 0x7859, 0x4314, 0x8417, 0x1, 0x0);
        gbc.writeMem(0x83f0, { 0xca, 0x5b, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x720);
        EXPECT(gbc.pc(), 0x285b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83f0), 0xca);
        EXPECT(gbc.readMem(0x83f1), 0x5b);
        EXPECT(gbc.readMem(0x83f2), 0x28);
        // CA 013D
        gbc.setState(0xada6, 0xb691, 0xef40, 0x914b, 0x19c7, 0x7854, 0x0, 0x0);
        gbc.writeMem(0xada6, { 0xca, 0x72, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb691);
        EXPECT(gbc.pc(), 0xada9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada6), 0xca);
        EXPECT(gbc.readMem(0xada7), 0x72);
        EXPECT(gbc.readMem(0xada8), 0xc7);
        // CA 013E
        gbc.setState(0xa899, 0x5646, 0x96a0, 0xeb97, 0x28da, 0x979c, 0x1, 0x0);
        gbc.writeMem(0xa899, { 0xca, 0x66, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5646);
        EXPECT(gbc.pc(), 0x9f66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa899), 0xca);
        EXPECT(gbc.readMem(0xa89a), 0x66);
        EXPECT(gbc.readMem(0xa89b), 0x9f);
        // CA 013F
        gbc.setState(0xecfc, 0x719c, 0xa220, 0xb695, 0x1e07, 0x95e8, 0x1, 0x0);
        gbc.writeMem(0xecfc, { 0xca, 0xd4, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x719c);
        EXPECT(gbc.pc(), 0xecff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecfc), 0xca);
        EXPECT(gbc.readMem(0xecfd), 0xd4);
        EXPECT(gbc.readMem(0xecfe), 0xd7);
        // CA 0140
        gbc.setState(0xd9e, 0x347b, 0x44b0, 0xf599, 0x9968, 0xfde8, 0x0, 0x1);
        gbc.writeMem(0xd9e, { 0xca, 0x87, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x347b);
        EXPECT(gbc.pc(), 0x6c87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0141
        gbc.setState(0x6465, 0xaff8, 0xe040, 0xabe3, 0xbf3c, 0xf80f, 0x1, 0x1);
        gbc.writeMem(0x6465, { 0xca, 0x41, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xaff8);
        EXPECT(gbc.pc(), 0x6468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0142
        gbc.setState(0x4212, 0x4714, 0xf490, 0x18d5, 0x6352, 0xd716, 0x1, 0x0);
        gbc.writeMem(0x4212, { 0xca, 0x8d, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4714);
        EXPECT(gbc.pc(), 0x428d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0143
        gbc.setState(0xb39c, 0xc8ee, 0x5a90, 0x99a9, 0xb5ba, 0x3b86, 0x1, 0x1);
        gbc.writeMem(0xb39c, { 0xca, 0x35, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc8ee);
        EXPECT(gbc.pc(), 0x6c35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb39c), 0xca);
        EXPECT(gbc.readMem(0xb39d), 0x35);
        EXPECT(gbc.readMem(0xb39e), 0x6c);
        // CA 0144
        gbc.setState(0x8675, 0x9955, 0x2350, 0xa028, 0xd09c, 0x7a26, 0x1, 0x0);
        gbc.writeMem(0x8675, { 0xca, 0xf2, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9955);
        EXPECT(gbc.pc(), 0x8678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8675), 0xca);
        EXPECT(gbc.readMem(0x8676), 0xf2);
        EXPECT(gbc.readMem(0x8677), 0xe9);
        // CA 0145
        gbc.setState(0xc326, 0xcd76, 0x3610, 0x8b32, 0x672d, 0xec05, 0x1, 0x0);
        gbc.writeMem(0xc326, { 0xca, 0x6b, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xcd76);
        EXPECT(gbc.pc(), 0xc329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc326), 0xca);
        EXPECT(gbc.readMem(0xc327), 0x6b);
        EXPECT(gbc.readMem(0xc328), 0x2b);
        // CA 0146
        gbc.setState(0xcdc4, 0xf07e, 0xa300, 0xfef2, 0xbc13, 0xabd6, 0x1, 0x0);
        gbc.writeMem(0xcdc4, { 0xca, 0x64, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf07e);
        EXPECT(gbc.pc(), 0xcdc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdc4), 0xca);
        EXPECT(gbc.readMem(0xcdc5), 0x64);
        EXPECT(gbc.readMem(0xcdc6), 0x4c);
        // CA 0147
        gbc.setState(0xa98a, 0x26ad, 0x2950, 0xd4b0, 0x761a, 0xc692, 0x0, 0x0);
        gbc.writeMem(0xa98a, { 0xca, 0x59, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x26ad);
        EXPECT(gbc.pc(), 0xa98d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa98a), 0xca);
        EXPECT(gbc.readMem(0xa98b), 0x59);
        EXPECT(gbc.readMem(0xa98c), 0x54);
        // CA 0148
        gbc.setState(0xc702, 0x31b0, 0x7980, 0xedaf, 0x4a49, 0x852c, 0x1, 0x1);
        gbc.writeMem(0xc702, { 0xca, 0xd2, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x31b0);
        EXPECT(gbc.pc(), 0x1bd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc702), 0xca);
        EXPECT(gbc.readMem(0xc703), 0xd2);
        EXPECT(gbc.readMem(0xc704), 0x1b);
        // CA 0149
        gbc.setState(0xd8b9, 0xc708, 0xe2b0, 0xa56b, 0x7401, 0xcd03, 0x1, 0x1);
        gbc.writeMem(0xd8b9, { 0xca, 0x9a, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc708);
        EXPECT(gbc.pc(), 0x269a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8b9), 0xca);
        EXPECT(gbc.readMem(0xd8ba), 0x9a);
        EXPECT(gbc.readMem(0xd8bb), 0x26);
        // CA 014A
        gbc.setState(0xe4eb, 0x812f, 0x3360, 0x5d24, 0x49ce, 0x28f9, 0x0, 0x0);
        gbc.writeMem(0xe4eb, { 0xca, 0xb5, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x812f);
        EXPECT(gbc.pc(), 0xe4ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4eb), 0xca);
        EXPECT(gbc.readMem(0xe4ec), 0xb5);
        EXPECT(gbc.readMem(0xe4ed), 0x38);
        // CA 014B
        gbc.setState(0x9b49, 0x13c2, 0x1bc0, 0xff7e, 0x28f3, 0xd4e0, 0x1, 0x0);
        gbc.writeMem(0x9b49, { 0xca, 0xb0, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x13c2);
        EXPECT(gbc.pc(), 0x88b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b49), 0xca);
        EXPECT(gbc.readMem(0x9b4a), 0xb0);
        EXPECT(gbc.readMem(0x9b4b), 0x88);
        // CA 014C
        gbc.setState(0xd50d, 0x8ab5, 0xe0c0, 0x9938, 0x748f, 0x7d0b, 0x0, 0x1);
        gbc.writeMem(0xd50d, { 0xca, 0x65, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8ab5);
        EXPECT(gbc.pc(), 0x2865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd50d), 0xca);
        EXPECT(gbc.readMem(0xd50e), 0x65);
        EXPECT(gbc.readMem(0xd50f), 0x28);
        // CA 014D
        gbc.setState(0x9337, 0xa638, 0x740, 0x7ed, 0xb754, 0x89fa, 0x0, 0x0);
        gbc.writeMem(0x9337, { 0xca, 0x16, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa638);
        EXPECT(gbc.pc(), 0x933a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9337), 0xca);
        EXPECT(gbc.readMem(0x9338), 0x16);
        EXPECT(gbc.readMem(0x9339), 0x88);
        // CA 014E
        gbc.setState(0xcd75, 0xb7c8, 0x96e0, 0xb23d, 0x4abf, 0x3cc1, 0x0, 0x1);
        gbc.writeMem(0xcd75, { 0xca, 0x53, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb7c8);
        EXPECT(gbc.pc(), 0xf153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd75), 0xca);
        EXPECT(gbc.readMem(0xcd76), 0x53);
        EXPECT(gbc.readMem(0xcd77), 0xf1);
        // CA 014F
        gbc.setState(0x3b9e, 0x5cf8, 0x89e0, 0x58b8, 0x2f19, 0x9477, 0x0, 0x1);
        gbc.writeMem(0x3b9e, { 0xca, 0x42, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5cf8);
        EXPECT(gbc.pc(), 0xc042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0150
        gbc.setState(0xa010, 0x5875, 0x640, 0x1733, 0xf53d, 0x7931, 0x0, 0x0);
        gbc.writeMem(0xa010, { 0xca, 0x9, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5875);
        EXPECT(gbc.pc(), 0xa013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa010), 0xca);
        EXPECT(gbc.readMem(0xa011), 0x9);
        EXPECT(gbc.readMem(0xa012), 0x34);
        // CA 0151
        gbc.setState(0x7045, 0x57b4, 0x52b0, 0x7ddb, 0xdc69, 0x14d9, 0x1, 0x0);
        gbc.writeMem(0x7045, { 0xca, 0xe4, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x57b4);
        EXPECT(gbc.pc(), 0xbae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0152
        gbc.setState(0x5de2, 0x1dfc, 0x2400, 0xdee, 0x5ed, 0xd4c2, 0x0, 0x0);
        gbc.writeMem(0x5de2, { 0xca, 0xab, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1dfc);
        EXPECT(gbc.pc(), 0x5de5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0153
        gbc.setState(0x87c1, 0x7b38, 0x3880, 0x9ada, 0x5076, 0xeaa6, 0x1, 0x1);
        gbc.writeMem(0x87c1, { 0xca, 0xfd, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7b38);
        EXPECT(gbc.pc(), 0x9cfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c1), 0xca);
        EXPECT(gbc.readMem(0x87c2), 0xfd);
        EXPECT(gbc.readMem(0x87c3), 0x9c);
        // CA 0154
        gbc.setState(0xb5ca, 0xe772, 0xbf30, 0xd95b, 0x1e6f, 0xd4b2, 0x1, 0x0);
        gbc.writeMem(0xb5ca, { 0xca, 0x17, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe772);
        EXPECT(gbc.pc(), 0xb5cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ca), 0xca);
        EXPECT(gbc.readMem(0xb5cb), 0x17);
        EXPECT(gbc.readMem(0xb5cc), 0xbb);
        // CA 0155
        gbc.setState(0xce94, 0xa81b, 0x24c0, 0x7a1e, 0x98a7, 0xf2f8, 0x1, 0x1);
        gbc.writeMem(0xce94, { 0xca, 0x11, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa81b);
        EXPECT(gbc.pc(), 0x5911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce94), 0xca);
        EXPECT(gbc.readMem(0xce95), 0x11);
        EXPECT(gbc.readMem(0xce96), 0x59);
        // CA 0156
        gbc.setState(0xe39, 0x5632, 0x1fa0, 0x7985, 0xc264, 0x3fc4, 0x0, 0x1);
        gbc.writeMem(0xe39, { 0xca, 0x6a, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5632);
        EXPECT(gbc.pc(), 0xd36a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0157
        gbc.setState(0xe4ea, 0xa89, 0xb0f0, 0x9e8e, 0x8db7, 0xf01b, 0x1, 0x0);
        gbc.writeMem(0xe4ea, { 0xca, 0x1b, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa89);
        EXPECT(gbc.pc(), 0xb51b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4ea), 0xca);
        EXPECT(gbc.readMem(0xe4eb), 0x1b);
        EXPECT(gbc.readMem(0xe4ec), 0xb5);
        // CA 0158
        gbc.setState(0xe64, 0x1178, 0x1590, 0x8d40, 0xfd8, 0x9284, 0x0, 0x1);
        gbc.writeMem(0xe64, { 0xca, 0x1e, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1178);
        EXPECT(gbc.pc(), 0xce1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0159
        gbc.setState(0xd98e, 0xf2aa, 0x3600, 0x994f, 0x407b, 0x4f75, 0x1, 0x1);
        gbc.writeMem(0xd98e, { 0xca, 0xbb, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf2aa);
        EXPECT(gbc.pc(), 0xd991);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd98e), 0xca);
        EXPECT(gbc.readMem(0xd98f), 0xbb);
        EXPECT(gbc.readMem(0xd990), 0x78);
        // CA 015A
        gbc.setState(0x7d74, 0x893a, 0x7740, 0x963f, 0x6584, 0xf312, 0x0, 0x1);
        gbc.writeMem(0x7d74, { 0xca, 0xf, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x893a);
        EXPECT(gbc.pc(), 0x7d77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 015B
        gbc.setState(0xac00, 0x8f55, 0x1c10, 0x8690, 0xe198, 0xe23b, 0x1, 0x0);
        gbc.writeMem(0xac00, { 0xca, 0x7b, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8f55);
        EXPECT(gbc.pc(), 0xac03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac00), 0xca);
        EXPECT(gbc.readMem(0xac01), 0x7b);
        EXPECT(gbc.readMem(0xac02), 0x18);
        // CA 015C
        gbc.setState(0x5605, 0xdc1e, 0x3fd0, 0xea3, 0x2b1, 0x4c01, 0x1, 0x0);
        gbc.writeMem(0x5605, { 0xca, 0x69, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xdc1e);
        EXPECT(gbc.pc(), 0x8069);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 015D
        gbc.setState(0xdf57, 0x7169, 0x5830, 0xdd5a, 0x9787, 0xffd1, 0x1, 0x1);
        gbc.writeMem(0xdf57, { 0xca, 0x37, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7169);
        EXPECT(gbc.pc(), 0xdf5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf57), 0xca);
        EXPECT(gbc.readMem(0xdf58), 0x37);
        EXPECT(gbc.readMem(0xdf59), 0x4);
        // CA 015E
        gbc.setState(0xad6c, 0xd575, 0x3270, 0x32f1, 0x4cbe, 0xf3db, 0x1, 0x1);
        gbc.writeMem(0xad6c, { 0xca, 0x4d, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd575);
        EXPECT(gbc.pc(), 0xad6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad6c), 0xca);
        EXPECT(gbc.readMem(0xad6d), 0x4d);
        EXPECT(gbc.readMem(0xad6e), 0x5c);
        // CA 015F
        gbc.setState(0x5ee6, 0x57f4, 0x2d10, 0x3d0f, 0xd8ab, 0xc560, 0x1, 0x0);
        gbc.writeMem(0x5ee6, { 0xca, 0x42, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x57f4);
        EXPECT(gbc.pc(), 0x5ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0160
        gbc.setState(0x4ce1, 0xf26e, 0x97b0, 0x2fa5, 0x81f2, 0xcfbb, 0x0, 0x0);
        gbc.writeMem(0x4ce1, { 0xca, 0x56, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf26e);
        EXPECT(gbc.pc(), 0x2256);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0161
        gbc.setState(0xe86, 0x3cd9, 0x64e0, 0x9c68, 0x43fd, 0x9bcb, 0x0, 0x0);
        gbc.writeMem(0xe86, { 0xca, 0x9b, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3cd9);
        EXPECT(gbc.pc(), 0xc89b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0162
        gbc.setState(0xcfcb, 0x78bb, 0x890, 0xbcc8, 0x77a4, 0x2364, 0x1, 0x0);
        gbc.writeMem(0xcfcb, { 0xca, 0x9d, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x78bb);
        EXPECT(gbc.pc(), 0xe89d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfcb), 0xca);
        EXPECT(gbc.readMem(0xcfcc), 0x9d);
        EXPECT(gbc.readMem(0xcfcd), 0xe8);
        // CA 0163
        gbc.setState(0x3a31, 0xdeb4, 0x2bf0, 0x48f1, 0x262d, 0x380d, 0x1, 0x0);
        gbc.writeMem(0x3a31, { 0xca, 0x77, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xdeb4);
        EXPECT(gbc.pc(), 0xa077);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0165
        gbc.setState(0xade6, 0x2549, 0x54c0, 0x7acc, 0x8d17, 0xd36d, 0x1, 0x0);
        gbc.writeMem(0xade6, { 0xca, 0x2a, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2549);
        EXPECT(gbc.pc(), 0xd62a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade6), 0xca);
        EXPECT(gbc.readMem(0xade7), 0x2a);
        EXPECT(gbc.readMem(0xade8), 0xd6);
        // CA 0166
        gbc.setState(0x295c, 0x62a, 0x9040, 0x5c48, 0x632d, 0xad6e, 0x0, 0x1);
        gbc.writeMem(0x295c, { 0xca, 0xf5, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x62a);
        EXPECT(gbc.pc(), 0x295f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0167
        gbc.setState(0x91f1, 0x675a, 0x5e10, 0x488c, 0x1e8d, 0x896c, 0x1, 0x1);
        gbc.writeMem(0x91f1, { 0xca, 0x85, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x675a);
        EXPECT(gbc.pc(), 0x91f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f1), 0xca);
        EXPECT(gbc.readMem(0x91f2), 0x85);
        EXPECT(gbc.readMem(0x91f3), 0xaa);
        // CA 0168
        gbc.setState(0x75f3, 0xcdc6, 0xc0e0, 0x20cc, 0x7fc, 0x3d6c, 0x1, 0x1);
        gbc.writeMem(0x75f3, { 0xca, 0x12, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcdc6);
        EXPECT(gbc.pc(), 0x2e12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0169
        gbc.setState(0x7877, 0x2e6c, 0x9500, 0x8a59, 0xbbea, 0x9137, 0x0, 0x0);
        gbc.writeMem(0x7877, { 0xca, 0xef, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2e6c);
        EXPECT(gbc.pc(), 0x787a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 016A
        gbc.setState(0x1da0, 0x2c8c, 0xfc0, 0x1542, 0x36e2, 0x66e8, 0x0, 0x1);
        gbc.writeMem(0x1da0, { 0xca, 0x3b, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2c8c);
        EXPECT(gbc.pc(), 0x4a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 016B
        gbc.setState(0x1a83, 0x2190, 0xc420, 0xb3eb, 0x2bfc, 0xb5f6, 0x0, 0x1);
        gbc.writeMem(0x1a83, { 0xca, 0x1d, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2190);
        EXPECT(gbc.pc(), 0x1a86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 016C
        gbc.setState(0x7ef2, 0x5cc7, 0x13f0, 0x13ba, 0xcd4c, 0xc61b, 0x1, 0x1);
        gbc.writeMem(0x7ef2, { 0xca, 0x94, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5cc7);
        EXPECT(gbc.pc(), 0x4894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 016D
        gbc.setState(0x7ae4, 0x8bcd, 0xb2d0, 0xa378, 0xaad1, 0x2bd6, 0x1, 0x0);
        gbc.writeMem(0x7ae4, { 0xca, 0xb2, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8bcd);
        EXPECT(gbc.pc(), 0xcfb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 016E
        gbc.setState(0x8ffb, 0x10a0, 0xdf20, 0xd73c, 0xefed, 0x6146, 0x1, 0x0);
        gbc.writeMem(0x8ffb, { 0xca, 0x6e, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x10a0);
        EXPECT(gbc.pc(), 0x8ffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ffb), 0xca);
        EXPECT(gbc.readMem(0x8ffc), 0x6e);
        EXPECT(gbc.readMem(0x8ffd), 0xef);
        // CA 016F
        gbc.setState(0xb0e2, 0xa0a1, 0x35e0, 0xd0df, 0x4b72, 0x9339, 0x1, 0x1);
        gbc.writeMem(0xb0e2, { 0xca, 0x19, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa0a1);
        EXPECT(gbc.pc(), 0xeb19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0e2), 0xca);
        EXPECT(gbc.readMem(0xb0e3), 0x19);
        EXPECT(gbc.readMem(0xb0e4), 0xeb);
        // CA 0170
        gbc.setState(0x2a91, 0xd589, 0xd6b0, 0xc746, 0x9444, 0xafe2, 0x1, 0x0);
        gbc.writeMem(0x2a91, { 0xca, 0x31, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd589);
        EXPECT(gbc.pc(), 0x3b31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0171
        gbc.setState(0xeafd, 0x8941, 0x5fd0, 0xff8e, 0x9bd4, 0xaf90, 0x1, 0x0);
        gbc.writeMem(0xeafd, { 0xca, 0xb3, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8941);
        EXPECT(gbc.pc(), 0xebb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeafd), 0xca);
        EXPECT(gbc.readMem(0xeafe), 0xb3);
        EXPECT(gbc.readMem(0xeaff), 0xeb);
        // CA 0172
        gbc.setState(0x87d6, 0x1783, 0x58a0, 0xf518, 0x3ffd, 0x3de, 0x1, 0x1);
        gbc.writeMem(0x87d6, { 0xca, 0x4a, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1783);
        EXPECT(gbc.pc(), 0x3a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87d6), 0xca);
        EXPECT(gbc.readMem(0x87d7), 0x4a);
        EXPECT(gbc.readMem(0x87d8), 0x3a);
        // CA 0173
        gbc.setState(0x7d9c, 0xad54, 0xf0a0, 0x1ae8, 0x8691, 0x6832, 0x1, 0x1);
        gbc.writeMem(0x7d9c, { 0xca, 0x24, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xad54);
        EXPECT(gbc.pc(), 0xb324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0174
        gbc.setState(0xbcf9, 0x46c7, 0x78a0, 0xab7a, 0x5d4e, 0x4a63, 0x0, 0x0);
        gbc.writeMem(0xbcf9, { 0xca, 0xae, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x46c7);
        EXPECT(gbc.pc(), 0x9cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf9), 0xca);
        EXPECT(gbc.readMem(0xbcfa), 0xae);
        EXPECT(gbc.readMem(0xbcfb), 0x9c);
        // CA 0175
        gbc.setState(0x4df2, 0x2705, 0x8ba0, 0x94ab, 0x399a, 0xec67, 0x0, 0x0);
        gbc.writeMem(0x4df2, { 0xca, 0xf7, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2705);
        EXPECT(gbc.pc(), 0xd9f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0176
        gbc.setState(0x2e3e, 0x1966, 0xd670, 0xa0c1, 0x1260, 0x927c, 0x1, 0x0);
        gbc.writeMem(0x2e3e, { 0xca, 0xc, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1966);
        EXPECT(gbc.pc(), 0x2e41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0177
        gbc.setState(0x819f, 0xa120, 0x1250, 0x3407, 0xa3c7, 0xf5ad, 0x0, 0x1);
        gbc.writeMem(0x819f, { 0xca, 0xf8, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa120);
        EXPECT(gbc.pc(), 0x81a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x819f), 0xca);
        EXPECT(gbc.readMem(0x81a0), 0xf8);
        EXPECT(gbc.readMem(0x81a1), 0x81);
        // CA 0178
        gbc.setState(0xd43f, 0x80e8, 0xc9d0, 0x431d, 0xc87, 0x9443, 0x0, 0x0);
        gbc.writeMem(0xd43f, { 0xca, 0x27, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x80e8);
        EXPECT(gbc.pc(), 0xde27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd43f), 0xca);
        EXPECT(gbc.readMem(0xd440), 0x27);
        EXPECT(gbc.readMem(0xd441), 0xde);
        // CA 0179
        gbc.setState(0x410f, 0x83fa, 0xa30, 0xb948, 0xed67, 0x3eae, 0x0, 0x1);
        gbc.writeMem(0x410f, { 0xca, 0x6a, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x83fa);
        EXPECT(gbc.pc(), 0x4112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 017A
        gbc.setState(0x930a, 0xe6c0, 0x4810, 0xe5a6, 0xf990, 0x98a2, 0x0, 0x0);
        gbc.writeMem(0x930a, { 0xca, 0x7e, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe6c0);
        EXPECT(gbc.pc(), 0x930d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x930a), 0xca);
        EXPECT(gbc.readMem(0x930b), 0x7e);
        EXPECT(gbc.readMem(0x930c), 0xb0);
        // CA 017B
        gbc.setState(0x7b9, 0x14a9, 0xf670, 0x40b4, 0x9f81, 0x1ba8, 0x1, 0x1);
        gbc.writeMem(0x7b9, { 0xca, 0xa5, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x14a9);
        EXPECT(gbc.pc(), 0x7bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 017C
        gbc.setState(0x328e, 0x89dd, 0x4ba0, 0x2ce3, 0xeaed, 0xb1f, 0x1, 0x1);
        gbc.writeMem(0x328e, { 0xca, 0x22, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x89dd);
        EXPECT(gbc.pc(), 0x9422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 017D
        gbc.setState(0x3974, 0xcad8, 0x1340, 0x4ba0, 0x2b38, 0xd35e, 0x0, 0x0);
        gbc.writeMem(0x3974, { 0xca, 0xcc, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcad8);
        EXPECT(gbc.pc(), 0x3977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 017E
        gbc.setState(0x9da, 0xb4fc, 0x7bc0, 0x58b1, 0xc15, 0x7998, 0x1, 0x1);
        gbc.writeMem(0x9da, { 0xca, 0x55, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb4fc);
        EXPECT(gbc.pc(), 0xde55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 017F
        gbc.setState(0x89e6, 0x1565, 0xa730, 0x2dfd, 0x9a7b, 0x4dbf, 0x0, 0x1);
        gbc.writeMem(0x89e6, { 0xca, 0x10, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1565);
        EXPECT(gbc.pc(), 0x89e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89e6), 0xca);
        EXPECT(gbc.readMem(0x89e7), 0x10);
        EXPECT(gbc.readMem(0x89e8), 0xb6);
        // CA 0181
        gbc.setState(0x1387, 0x3622, 0x2b00, 0x3c05, 0x3ffd, 0xff8c, 0x1, 0x0);
        gbc.writeMem(0x1387, { 0xca, 0x34, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3622);
        EXPECT(gbc.pc(), 0x138a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0182
        gbc.setState(0x6f3a, 0x9d93, 0x3360, 0x1d55, 0x61fc, 0xa66a, 0x1, 0x1);
        gbc.writeMem(0x6f3a, { 0xca, 0x4a, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9d93);
        EXPECT(gbc.pc(), 0x6f3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0183
        gbc.setState(0x3be9, 0x9eff, 0xf4a0, 0x5b5c, 0xfa73, 0x22b4, 0x1, 0x0);
        gbc.writeMem(0x3be9, { 0xca, 0x65, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9eff);
        EXPECT(gbc.pc(), 0x3d65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0184
        gbc.setState(0x2115, 0x9786, 0xf500, 0xe5e6, 0xa7ed, 0x2ed9, 0x0, 0x1);
        gbc.writeMem(0x2115, { 0xca, 0xda, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9786);
        EXPECT(gbc.pc(), 0x2118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0185
        gbc.setState(0x78b8, 0x669b, 0x1b20, 0x163, 0x2288, 0x601a, 0x1, 0x0);
        gbc.writeMem(0x78b8, { 0xca, 0xa3, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x669b);
        EXPECT(gbc.pc(), 0x78bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0186
        gbc.setState(0xac46, 0x50a2, 0xbcf0, 0x8da5, 0xb42a, 0xc261, 0x1, 0x1);
        gbc.writeMem(0xac46, { 0xca, 0xc1, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x50a2);
        EXPECT(gbc.pc(), 0x9ac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac46), 0xca);
        EXPECT(gbc.readMem(0xac47), 0xc1);
        EXPECT(gbc.readMem(0xac48), 0x9a);
        // CA 0187
        gbc.setState(0x7131, 0x190a, 0xe6b0, 0x8805, 0xf3f5, 0x6156, 0x0, 0x0);
        gbc.writeMem(0x7131, { 0xca, 0xd8, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x190a);
        EXPECT(gbc.pc(), 0xbfd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0189
        gbc.setState(0x1e2b, 0xc3ca, 0xfd60, 0xb800, 0xa33, 0x4aeb, 0x0, 0x0);
        gbc.writeMem(0x1e2b, { 0xca, 0x33, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc3ca);
        EXPECT(gbc.pc(), 0x1e2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 018A
        gbc.setState(0xcfc7, 0xfd1f, 0x32f0, 0xc718, 0x6ead, 0xb093, 0x0, 0x1);
        gbc.writeMem(0xcfc7, { 0xca, 0x3e, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xfd1f);
        EXPECT(gbc.pc(), 0xdf3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfc7), 0xca);
        EXPECT(gbc.readMem(0xcfc8), 0x3e);
        EXPECT(gbc.readMem(0xcfc9), 0xdf);
        // CA 018B
        gbc.setState(0xd290, 0x5d9, 0x2d90, 0x95ee, 0xb3f5, 0xd7f9, 0x1, 0x1);
        gbc.writeMem(0xd290, { 0xca, 0x55, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5d9);
        EXPECT(gbc.pc(), 0x4755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd290), 0xca);
        EXPECT(gbc.readMem(0xd291), 0x55);
        EXPECT(gbc.readMem(0xd292), 0x47);
        // CA 018D
        gbc.setState(0xeb57, 0x274d, 0x2990, 0xea6b, 0xdec3, 0xf6de, 0x0, 0x0);
        gbc.writeMem(0xeb57, { 0xca, 0x81, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x274d);
        EXPECT(gbc.pc(), 0x5181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb57), 0xca);
        EXPECT(gbc.readMem(0xeb58), 0x81);
        EXPECT(gbc.readMem(0xeb59), 0x51);
        // CA 018E
        gbc.setState(0x4238, 0xd136, 0x4fa0, 0xf364, 0x67ef, 0x8554, 0x1, 0x1);
        gbc.writeMem(0x4238, { 0xca, 0x24, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd136);
        EXPECT(gbc.pc(), 0x2624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 018F
        gbc.setState(0xceb1, 0xfd2, 0xece0, 0x42a0, 0x82d3, 0xa328, 0x0, 0x1);
        gbc.writeMem(0xceb1, { 0xca, 0x11, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xfd2);
        EXPECT(gbc.pc(), 0xee11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceb1), 0xca);
        EXPECT(gbc.readMem(0xceb2), 0x11);
        EXPECT(gbc.readMem(0xceb3), 0xee);
        // CA 0190
        gbc.setState(0x8988, 0x7cbd, 0xa6b0, 0x60bb, 0xb62a, 0x3381, 0x1, 0x0);
        gbc.writeMem(0x8988, { 0xca, 0x14, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7cbd);
        EXPECT(gbc.pc(), 0x1f14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8988), 0xca);
        EXPECT(gbc.readMem(0x8989), 0x14);
        EXPECT(gbc.readMem(0x898a), 0x1f);
        // CA 0191
        gbc.setState(0x398d, 0x2dc3, 0xed00, 0x8d6b, 0xf4de, 0xd1af, 0x0, 0x0);
        gbc.writeMem(0x398d, { 0xca, 0x69, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2dc3);
        EXPECT(gbc.pc(), 0x3990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0192
        gbc.setState(0xc510, 0x12b5, 0x4cf0, 0x5b40, 0x2644, 0x3c6c, 0x1, 0x0);
        gbc.writeMem(0xc510, { 0xca, 0xad, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x12b5);
        EXPECT(gbc.pc(), 0x4dad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc510), 0xca);
        EXPECT(gbc.readMem(0xc511), 0xad);
        EXPECT(gbc.readMem(0xc512), 0x4d);
        // CA 0193
        gbc.setState(0xa948, 0xe3b2, 0xc660, 0x60c6, 0x9799, 0x9050, 0x0, 0x1);
        gbc.writeMem(0xa948, { 0xca, 0xef, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe3b2);
        EXPECT(gbc.pc(), 0xa94b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa948), 0xca);
        EXPECT(gbc.readMem(0xa949), 0xef);
        EXPECT(gbc.readMem(0xa94a), 0x4);
        // CA 0194
        gbc.setState(0xa805, 0x308d, 0x9f60, 0x4e29, 0x7415, 0x7bf3, 0x1, 0x0);
        gbc.writeMem(0xa805, { 0xca, 0x9a, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x308d);
        EXPECT(gbc.pc(), 0xa808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa805), 0xca);
        EXPECT(gbc.readMem(0xa806), 0x9a);
        EXPECT(gbc.readMem(0xa807), 0xf7);
        // CA 0195
        gbc.setState(0x1809, 0xd848, 0xc0a0, 0x2bd0, 0xe0f5, 0xfdb0, 0x0, 0x0);
        gbc.writeMem(0x1809, { 0xca, 0xe9, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd848);
        EXPECT(gbc.pc(), 0xe3e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0196
        gbc.setState(0x7c42, 0x24b2, 0x23a0, 0x8add, 0xae55, 0xa746, 0x0, 0x1);
        gbc.writeMem(0x7c42, { 0xca, 0x90, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x24b2);
        EXPECT(gbc.pc(), 0x6290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0197
        gbc.setState(0x93c9, 0xb553, 0x34b0, 0x1b99, 0x8076, 0x6529, 0x0, 0x0);
        gbc.writeMem(0x93c9, { 0xca, 0x15, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb553);
        EXPECT(gbc.pc(), 0x7315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c9), 0xca);
        EXPECT(gbc.readMem(0x93ca), 0x15);
        EXPECT(gbc.readMem(0x93cb), 0x73);
        // CA 0198
        gbc.setState(0xcc1b, 0xb257, 0x59b0, 0x397d, 0xc4a3, 0x58b1, 0x1, 0x1);
        gbc.writeMem(0xcc1b, { 0xca, 0xcd, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb257);
        EXPECT(gbc.pc(), 0x7acd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc1b), 0xca);
        EXPECT(gbc.readMem(0xcc1c), 0xcd);
        EXPECT(gbc.readMem(0xcc1d), 0x7a);
        // CA 0199
        gbc.setState(0xb5cb, 0x22ff, 0x1c30, 0x34d4, 0x9487, 0x2c42, 0x0, 0x1);
        gbc.writeMem(0xb5cb, { 0xca, 0xbb, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x22ff);
        EXPECT(gbc.pc(), 0xb5ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5cb), 0xca);
        EXPECT(gbc.readMem(0xb5cc), 0xbb);
        EXPECT(gbc.readMem(0xb5cd), 0xbb);
        // CA 019A
        gbc.setState(0xd720, 0x56cc, 0x93e0, 0xf7d2, 0x96ef, 0xeefa, 0x0, 0x0);
        gbc.writeMem(0xd720, { 0xca, 0x83, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x56cc);
        EXPECT(gbc.pc(), 0xfe83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd720), 0xca);
        EXPECT(gbc.readMem(0xd721), 0x83);
        EXPECT(gbc.readMem(0xd722), 0xfe);
        // CA 019C
        gbc.setState(0x8f6f, 0x26fe, 0x1d10, 0xb725, 0x7dae, 0x8960, 0x0, 0x1);
        gbc.writeMem(0x8f6f, { 0xca, 0x50, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x26fe);
        EXPECT(gbc.pc(), 0x8f72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f6f), 0xca);
        EXPECT(gbc.readMem(0x8f70), 0x50);
        EXPECT(gbc.readMem(0x8f71), 0xff);
        // CA 019D
        gbc.setState(0x207b, 0xa51f, 0xfe20, 0xc316, 0x8afe, 0x6e40, 0x0, 0x0);
        gbc.writeMem(0x207b, { 0xca, 0x52, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa51f);
        EXPECT(gbc.pc(), 0x207e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 019E
        gbc.setState(0x2e16, 0xef7f, 0xedd0, 0x48e6, 0x7eb8, 0x3fb5, 0x1, 0x0);
        gbc.writeMem(0x2e16, { 0xca, 0xfd, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xef7f);
        EXPECT(gbc.pc(), 0xd3fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 019F
        gbc.setState(0xe5c6, 0xc88e, 0x8fd0, 0x2ff5, 0xb655, 0x5e8d, 0x1, 0x0);
        gbc.writeMem(0xe5c6, { 0xca, 0xb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc88e);
        EXPECT(gbc.pc(), 0xbc0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5c6), 0xca);
        EXPECT(gbc.readMem(0xe5c7), 0xb);
        EXPECT(gbc.readMem(0xe5c8), 0xbc);
        // CA 01A0
        gbc.setState(0x226d, 0xb540, 0x92b0, 0xdf4d, 0x690b, 0xf91, 0x1, 0x0);
        gbc.writeMem(0x226d, { 0xca, 0xe0, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb540);
        EXPECT(gbc.pc(), 0x28e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 01A1
        gbc.setState(0x5b0a, 0x5961, 0xc840, 0x889b, 0x7cd, 0x53b2, 0x0, 0x1);
        gbc.writeMem(0x5b0a, { 0xca, 0x3, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5961);
        EXPECT(gbc.pc(), 0x5b0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 01A2
        gbc.setState(0x60cf, 0x3473, 0x3ab0, 0xeb8, 0x9d61, 0xb1bb, 0x0, 0x0);
        gbc.writeMem(0x60cf, { 0xca, 0x78, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3473);
        EXPECT(gbc.pc(), 0xc578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 01A3
        gbc.setState(0x26b5, 0xce7c, 0x95d0, 0x39bf, 0xc542, 0x2646, 0x0, 0x0);
        gbc.writeMem(0x26b5, { 0xca, 0x23, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xce7c);
        EXPECT(gbc.pc(), 0x8c23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 01A4
        gbc.setState(0x5c73, 0x2d40, 0x53b0, 0x702d, 0xeb2c, 0x6fb4, 0x0, 0x0);
        gbc.writeMem(0x5c73, { 0xca, 0x92, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2d40);
        EXPECT(gbc.pc(), 0xb392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 01A5
        gbc.setState(0x2d2b, 0x7070, 0x9660, 0x16c0, 0x7d31, 0x46fa, 0x1, 0x1);
        gbc.writeMem(0x2d2b, { 0xca, 0x6, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7070);
        EXPECT(gbc.pc(), 0x2d2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 01A6
        gbc.setState(0x8e84, 0xd8c1, 0x930, 0x21d, 0xaccc, 0x65b3, 0x0, 0x0);
        gbc.writeMem(0x8e84, { 0xca, 0x9, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd8c1);
        EXPECT(gbc.pc(), 0x8e87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e84), 0xca);
        EXPECT(gbc.readMem(0x8e85), 0x9);
        EXPECT(gbc.readMem(0x8e86), 0x94);
        // CA 01A7
        gbc.setState(0xde98, 0x7e43, 0xb9f0, 0xcad0, 0x2761, 0xb1d1, 0x0, 0x1);
        gbc.writeMem(0xde98, { 0xca, 0xf9, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7e43);
        EXPECT(gbc.pc(), 0x60f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde98), 0xca);
        EXPECT(gbc.readMem(0xde99), 0xf9);
        EXPECT(gbc.readMem(0xde9a), 0x60);
        // CA 01A8
        gbc.setState(0x30b6, 0xc184, 0xab70, 0x73f8, 0x4811, 0xce02, 0x1, 0x1);
        gbc.writeMem(0x30b6, { 0xca, 0xa4, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc184);
        EXPECT(gbc.pc(), 0x30b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 01A9
        gbc.setState(0x8cab, 0xc081, 0xf660, 0x5c88, 0xb8d1, 0xace0, 0x0, 0x0);
        gbc.writeMem(0x8cab, { 0xca, 0xe1, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc081);
        EXPECT(gbc.pc(), 0x8cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cab), 0xca);
        EXPECT(gbc.readMem(0x8cac), 0xe1);
        EXPECT(gbc.readMem(0x8cad), 0x45);
        // CA 01AA
        gbc.setState(0x427, 0x4f1b, 0xb260, 0xfccd, 0x7b4a, 0xe56b, 0x1, 0x0);
        gbc.writeMem(0x427, { 0xca, 0x6d, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4f1b);
        EXPECT(gbc.pc(), 0x42a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 01AB
        gbc.setState(0x495f, 0x9f35, 0x42b0, 0xf1f0, 0x8b2, 0x4234, 0x0, 0x0);
        gbc.writeMem(0x495f, { 0xca, 0xf8, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9f35);
        EXPECT(gbc.pc(), 0x1af8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 01AC
        gbc.setState(0xb7c6, 0x1852, 0x3d0, 0x4aab, 0xede2, 0xce92, 0x0, 0x0);
        gbc.writeMem(0xb7c6, { 0xca, 0x2d, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1852);
        EXPECT(gbc.pc(), 0x8b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7c6), 0xca);
        EXPECT(gbc.readMem(0xb7c7), 0x2d);
        EXPECT(gbc.readMem(0xb7c8), 0x8b);
        // CA 01AD
        gbc.setState(0xb855, 0xf1d7, 0x5f90, 0xbe4c, 0x8a11, 0xf8ea, 0x1, 0x0);
        gbc.writeMem(0xb855, { 0xca, 0x50, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf1d7);
        EXPECT(gbc.pc(), 0x1350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb855), 0xca);
        EXPECT(gbc.readMem(0xb856), 0x50);
        EXPECT(gbc.readMem(0xb857), 0x13);
        // CA 01AE
        gbc.setState(0x604e, 0x72f8, 0xded0, 0xd2ee, 0xd39b, 0xdbdd, 0x0, 0x1);
        gbc.writeMem(0x604e, { 0xca, 0x80, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x72f8);
        EXPECT(gbc.pc(), 0x8180);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 01AF
        gbc.setState(0xcf5d, 0x833c, 0xe180, 0xfc14, 0xcc16, 0x7c3d, 0x1, 0x1);
        gbc.writeMem(0xcf5d, { 0xca, 0xf0, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x833c);
        EXPECT(gbc.pc(), 0x7ff0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf5d), 0xca);
        EXPECT(gbc.readMem(0xcf5e), 0xf0);
        EXPECT(gbc.readMem(0xcf5f), 0x7f);
        // CA 01B0
        gbc.setState(0x8c2d, 0xa388, 0x22b0, 0x92ef, 0xa9ee, 0xea09, 0x0, 0x1);
        gbc.writeMem(0x8c2d, { 0xca, 0x8d, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa388);
        EXPECT(gbc.pc(), 0xfb8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c2d), 0xca);
        EXPECT(gbc.readMem(0x8c2e), 0x8d);
        EXPECT(gbc.readMem(0x8c2f), 0xfb);
        // CA 01B1
        gbc.setState(0x8911, 0xa905, 0x1c30, 0xe70c, 0x9451, 0xd3d7, 0x1, 0x1);
        gbc.writeMem(0x8911, { 0xca, 0x9e, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa905);
        EXPECT(gbc.pc(), 0x8914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8911), 0xca);
        EXPECT(gbc.readMem(0x8912), 0x9e);
        EXPECT(gbc.readMem(0x8913), 0xe3);
        // CA 01B2
        gbc.setState(0x8af8, 0x8b88, 0xfaa0, 0x9e0f, 0x34b6, 0x282b, 0x1, 0x0);
        gbc.writeMem(0x8af8, { 0xca, 0x88, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8b88);
        EXPECT(gbc.pc(), 0x988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af8), 0xca);
        EXPECT(gbc.readMem(0x8af9), 0x88);
        EXPECT(gbc.readMem(0x8afa), 0x9);
        // CA 01B3
        gbc.setState(0xbd70, 0xfe7, 0x4760, 0xcbc7, 0x5772, 0xbb75, 0x0, 0x0);
        gbc.writeMem(0xbd70, { 0xca, 0xf7, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfe7);
        EXPECT(gbc.pc(), 0xbd73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd70), 0xca);
        EXPECT(gbc.readMem(0xbd71), 0xf7);
        EXPECT(gbc.readMem(0xbd72), 0xa);
        // CA 01B4
        gbc.setState(0x3fb1, 0x3a71, 0xbde0, 0xf42a, 0x1cf5, 0x4e36, 0x1, 0x1);
        gbc.writeMem(0x3fb1, { 0xca, 0x2, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3a71);
        EXPECT(gbc.pc(), 0x7702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 01B5
        gbc.setState(0x757a, 0xea25, 0x5740, 0x56bf, 0xf8ca, 0x7759, 0x1, 0x1);
        gbc.writeMem(0x757a, { 0xca, 0x22, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xea25);
        EXPECT(gbc.pc(), 0x757d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 01B6
        gbc.setState(0x606b, 0xcf8c, 0xd0e0, 0x65bb, 0xfce8, 0x5d93, 0x1, 0x0);
        gbc.writeMem(0x606b, { 0xca, 0x1e, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcf8c);
        EXPECT(gbc.pc(), 0x971e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 01B7
        gbc.setState(0x56c8, 0xf5c1, 0x3e40, 0xbea, 0xc7a2, 0x44b, 0x0, 0x1);
        gbc.writeMem(0x56c8, { 0xca, 0xb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf5c1);
        EXPECT(gbc.pc(), 0x56cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 01B8
        gbc.setState(0x898e, 0x5e8b, 0x1950, 0xe4cd, 0xe570, 0x4f3f, 0x1, 0x0);
        gbc.writeMem(0x898e, { 0xca, 0x9b, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5e8b);
        EXPECT(gbc.pc(), 0x8991);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x898e), 0xca);
        EXPECT(gbc.readMem(0x898f), 0x9b);
        EXPECT(gbc.readMem(0x8990), 0xa7);
        // CA 01B9
        gbc.setState(0x8da6, 0xcca3, 0xe2c0, 0x56b6, 0x2591, 0x4593, 0x1, 0x1);
        gbc.writeMem(0x8da6, { 0xca, 0xb, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcca3);
        EXPECT(gbc.pc(), 0xad0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8da6), 0xca);
        EXPECT(gbc.readMem(0x8da7), 0xb);
        EXPECT(gbc.readMem(0x8da8), 0xad);
        // CA 01BA
        gbc.setState(0x87db, 0xad0c, 0x86b0, 0x935a, 0x397d, 0xde34, 0x1, 0x0);
        gbc.writeMem(0x87db, { 0xca, 0x45, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xad0c);
        EXPECT(gbc.pc(), 0x4545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87db), 0xca);
        EXPECT(gbc.readMem(0x87dc), 0x45);
        EXPECT(gbc.readMem(0x87dd), 0x45);
        // CA 01BB
        gbc.setState(0xac58, 0x4085, 0xb8c0, 0x3586, 0x4f05, 0x4e6b, 0x0, 0x1);
        gbc.writeMem(0xac58, { 0xca, 0xd6, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4085);
        EXPECT(gbc.pc(), 0xe2d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac58), 0xca);
        EXPECT(gbc.readMem(0xac59), 0xd6);
        EXPECT(gbc.readMem(0xac5a), 0xe2);
        // CA 01BC
        gbc.setState(0xac7a, 0x165e, 0x8390, 0x42e8, 0xbc56, 0xf081, 0x1, 0x0);
        gbc.writeMem(0xac7a, { 0xca, 0x2b, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x165e);
        EXPECT(gbc.pc(), 0x732b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac7a), 0xca);
        EXPECT(gbc.readMem(0xac7b), 0x2b);
        EXPECT(gbc.readMem(0xac7c), 0x73);
        // CA 01BD
        gbc.setState(0x874c, 0x13d5, 0x9b60, 0x2289, 0x3eaf, 0x97e9, 0x0, 0x0);
        gbc.writeMem(0x874c, { 0xca, 0x7, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x13d5);
        EXPECT(gbc.pc(), 0x874f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x874c), 0xca);
        EXPECT(gbc.readMem(0x874d), 0x7);
        EXPECT(gbc.readMem(0x874e), 0x9b);
        // CA 01BE
        gbc.setState(0xbd7f, 0x865a, 0x5db0, 0x1589, 0x4422, 0x80ef, 0x1, 0x1);
        gbc.writeMem(0xbd7f, { 0xca, 0xb9, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x865a);
        EXPECT(gbc.pc(), 0xe6b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd7f), 0xca);
        EXPECT(gbc.readMem(0xbd80), 0xb9);
        EXPECT(gbc.readMem(0xbd81), 0xe6);
        // CA 01BF
        gbc.setState(0x7c25, 0x25ab, 0xa140, 0xf57e, 0xad40, 0x1a54, 0x0, 0x0);
        gbc.writeMem(0x7c25, { 0xca, 0x64, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x25ab);
        EXPECT(gbc.pc(), 0x7c28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 01C0
        gbc.setState(0x5306, 0x17e3, 0xfe10, 0xbd7f, 0x9ef5, 0xd212, 0x0, 0x0);
        gbc.writeMem(0x5306, { 0xca, 0x51, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x17e3);
        EXPECT(gbc.pc(), 0x5309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 01C1
        gbc.setState(0x8969, 0x51ce, 0x0, 0xad78, 0x18bb, 0xe816, 0x0, 0x0);
        gbc.writeMem(0x8969, { 0xca, 0x2e, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x51ce);
        EXPECT(gbc.pc(), 0x896c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8969), 0xca);
        EXPECT(gbc.readMem(0x896a), 0x2e);
        EXPECT(gbc.readMem(0x896b), 0x43);
        // CA 01C2
        gbc.setState(0xe974, 0xec8e, 0x6ed0, 0xd23a, 0x388, 0xda1e, 0x1, 0x1);
        gbc.writeMem(0xe974, { 0xca, 0xac, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xec8e);
        EXPECT(gbc.pc(), 0x6eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe974), 0xca);
        EXPECT(gbc.readMem(0xe975), 0xac);
        EXPECT(gbc.readMem(0xe976), 0x6e);
        // CA 01C3
        gbc.setState(0xcf66, 0x79c0, 0x5c0, 0x5091, 0x191c, 0xb497, 0x1, 0x0);
        gbc.writeMem(0xcf66, { 0xca, 0x36, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x79c0);
        EXPECT(gbc.pc(), 0x2e36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf66), 0xca);
        EXPECT(gbc.readMem(0xcf67), 0x36);
        EXPECT(gbc.readMem(0xcf68), 0x2e);
        // CA 01C4
        gbc.setState(0x4110, 0x2454, 0xe280, 0x8ab4, 0x7e23, 0xc307, 0x0, 0x1);
        gbc.writeMem(0x4110, { 0xca, 0xd1, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2454);
        EXPECT(gbc.pc(), 0xe8d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 01C5
        gbc.setState(0x447f, 0xe3e9, 0xb450, 0xa178, 0xcee1, 0xd7af, 0x0, 0x0);
        gbc.writeMem(0x447f, { 0xca, 0xb0, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe3e9);
        EXPECT(gbc.pc(), 0x4482);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 01C6
        gbc.setState(0x920, 0x900c, 0xff00, 0xe8f6, 0xdc9d, 0x3e55, 0x1, 0x0);
        gbc.writeMem(0x920, { 0xca, 0x4f, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x900c);
        EXPECT(gbc.pc(), 0x923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 01C7
        gbc.setState(0x71ad, 0xbc4d, 0x61b0, 0xb145, 0x2fac, 0xd10d, 0x0, 0x0);
        gbc.writeMem(0x71ad, { 0xca, 0xbc, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xbc4d);
        EXPECT(gbc.pc(), 0xb2bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 01C8
        gbc.setState(0x2c78, 0x7cf4, 0xa6b0, 0x3057, 0xe913, 0x93d2, 0x1, 0x0);
        gbc.writeMem(0x2c78, { 0xca, 0x3b, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7cf4);
        EXPECT(gbc.pc(), 0x9d3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 01C9
        gbc.setState(0x3960, 0xde11, 0x9c60, 0x6e00, 0xca00, 0x7d7b, 0x1, 0x1);
        gbc.writeMem(0x3960, { 0xca, 0x4a, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xde11);
        EXPECT(gbc.pc(), 0x3963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 01CA
        gbc.setState(0x1c9c, 0x8e6e, 0x28a0, 0xe0c5, 0x4e9e, 0xd7d5, 0x0, 0x0);
        gbc.writeMem(0x1c9c, { 0xca, 0x7e, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8e6e);
        EXPECT(gbc.pc(), 0x777e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 01CB
        gbc.setState(0xc8da, 0xfbe1, 0xd670, 0xe357, 0x3921, 0x35bc, 0x0, 0x1);
        gbc.writeMem(0xc8da, { 0xca, 0x72, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xfbe1);
        EXPECT(gbc.pc(), 0xc8dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8da), 0xca);
        EXPECT(gbc.readMem(0xc8db), 0x72);
        EXPECT(gbc.readMem(0xc8dc), 0xae);
        // CA 01CC
        gbc.setState(0xd63c, 0xb1e3, 0x4c40, 0xe3eb, 0xa1e1, 0xda92, 0x0, 0x0);
        gbc.writeMem(0xd63c, { 0xca, 0x1b, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb1e3);
        EXPECT(gbc.pc(), 0xd63f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd63c), 0xca);
        EXPECT(gbc.readMem(0xd63d), 0x1b);
        EXPECT(gbc.readMem(0xd63e), 0xae);
        // CA 01CD
        gbc.setState(0x812e, 0x830b, 0xe710, 0xb49, 0x5d75, 0x1344, 0x0, 0x0);
        gbc.writeMem(0x812e, { 0xca, 0xf0, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x830b);
        EXPECT(gbc.pc(), 0x8131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x812e), 0xca);
        EXPECT(gbc.readMem(0x812f), 0xf0);
        EXPECT(gbc.readMem(0x8130), 0xcb);
        // CA 01CE
        gbc.setState(0xaad7, 0xdfc8, 0xac00, 0x52ab, 0xe437, 0xb0f1, 0x1, 0x0);
        gbc.writeMem(0xaad7, { 0xca, 0xd9, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xdfc8);
        EXPECT(gbc.pc(), 0xaada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaad7), 0xca);
        EXPECT(gbc.readMem(0xaad8), 0xd9);
        EXPECT(gbc.readMem(0xaad9), 0x76);
        // CA 01D0
        gbc.setState(0xab31, 0x5f1d, 0x5370, 0x8459, 0x7fe5, 0x6f48, 0x1, 0x0);
        gbc.writeMem(0xab31, { 0xca, 0xfe, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5f1d);
        EXPECT(gbc.pc(), 0xab34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab31), 0xca);
        EXPECT(gbc.readMem(0xab32), 0xfe);
        EXPECT(gbc.readMem(0xab33), 0xf5);
        // CA 01D1
        gbc.setState(0xbbcc, 0xf762, 0x1c20, 0x448, 0xb66c, 0x9ae5, 0x1, 0x1);
        gbc.writeMem(0xbbcc, { 0xca, 0xcd, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf762);
        EXPECT(gbc.pc(), 0xbbcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbcc), 0xca);
        EXPECT(gbc.readMem(0xbbcd), 0xcd);
        EXPECT(gbc.readMem(0xbbce), 0x3d);
        // CA 01D2
        gbc.setState(0x3839, 0xeba8, 0xbb10, 0x17fd, 0x4dea, 0xa4e9, 0x1, 0x1);
        gbc.writeMem(0x3839, { 0xca, 0xdb, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xeba8);
        EXPECT(gbc.pc(), 0x383c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 01D3
        gbc.setState(0xcb6b, 0xd2a9, 0x6480, 0x4f41, 0x8f39, 0xe303, 0x1, 0x0);
        gbc.writeMem(0xcb6b, { 0xca, 0x4b, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd2a9);
        EXPECT(gbc.pc(), 0x6f4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb6b), 0xca);
        EXPECT(gbc.readMem(0xcb6c), 0x4b);
        EXPECT(gbc.readMem(0xcb6d), 0x6f);
        // CA 01D4
        gbc.setState(0xde46, 0xb7b4, 0xf3f0, 0x993, 0x39fb, 0x305, 0x1, 0x0);
        gbc.writeMem(0xde46, { 0xca, 0x30, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb7b4);
        EXPECT(gbc.pc(), 0x8b30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde46), 0xca);
        EXPECT(gbc.readMem(0xde47), 0x30);
        EXPECT(gbc.readMem(0xde48), 0x8b);
        // CA 01D5
        gbc.setState(0x453c, 0x32f5, 0xa470, 0xe206, 0x27e0, 0x4c65, 0x0, 0x1);
        gbc.writeMem(0x453c, { 0xca, 0xb3, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x32f5);
        EXPECT(gbc.pc(), 0x453f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 01D6
        gbc.setState(0x1dfa, 0xa47f, 0xeb0, 0xa42a, 0x20f, 0x374c, 0x0, 0x1);
        gbc.writeMem(0x1dfa, { 0xca, 0x46, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa47f);
        EXPECT(gbc.pc(), 0x2646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 01D7
        gbc.setState(0x2db4, 0x2d30, 0xd500, 0x1b5, 0x9ae0, 0x3bc8, 0x1, 0x0);
        gbc.writeMem(0x2db4, { 0xca, 0xaf, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2d30);
        EXPECT(gbc.pc(), 0x2db7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 01D8
        gbc.setState(0x48de, 0x8632, 0x3f50, 0x351b, 0xd06f, 0x4914, 0x1, 0x1);
        gbc.writeMem(0x48de, { 0xca, 0xb0, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8632);
        EXPECT(gbc.pc(), 0x48e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 01DA
        gbc.setState(0x46cd, 0xdd33, 0x8ab0, 0xf00, 0xf0d8, 0x940e, 0x0, 0x1);
        gbc.writeMem(0x46cd, { 0xca, 0x46, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xdd33);
        EXPECT(gbc.pc(), 0x8f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 01DB
        gbc.setState(0x45c4, 0xb41, 0xed90, 0x7376, 0x362d, 0xc52d, 0x0, 0x0);
        gbc.writeMem(0x45c4, { 0xca, 0x8b, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb41);
        EXPECT(gbc.pc(), 0xb88b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 01DC
        gbc.setState(0xecb1, 0xa5db, 0x5f40, 0x8743, 0x72de, 0xa2a8, 0x0, 0x1);
        gbc.writeMem(0xecb1, { 0xca, 0x52, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa5db);
        EXPECT(gbc.pc(), 0xecb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecb1), 0xca);
        EXPECT(gbc.readMem(0xecb2), 0x52);
        EXPECT(gbc.readMem(0xecb3), 0xa0);
        // CA 01DD
        gbc.setState(0x8a17, 0x709a, 0x3150, 0x183, 0x7abd, 0x39fc, 0x0, 0x0);
        gbc.writeMem(0x8a17, { 0xca, 0x65, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x709a);
        EXPECT(gbc.pc(), 0x8a1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a17), 0xca);
        EXPECT(gbc.readMem(0x8a18), 0x65);
        EXPECT(gbc.readMem(0x8a19), 0x68);
        // CA 01DE
        gbc.setState(0xa91d, 0x5076, 0xba70, 0x116b, 0x4b7c, 0x737b, 0x0, 0x0);
        gbc.writeMem(0xa91d, { 0xca, 0xd9, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5076);
        EXPECT(gbc.pc(), 0xa920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa91d), 0xca);
        EXPECT(gbc.readMem(0xa91e), 0xd9);
        EXPECT(gbc.readMem(0xa91f), 0x31);
        // CA 01DF
        gbc.setState(0x42ba, 0x92e1, 0xfc50, 0xf5ca, 0x2c4e, 0xde38, 0x0, 0x0);
        gbc.writeMem(0x42ba, { 0xca, 0x85, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x92e1);
        EXPECT(gbc.pc(), 0x42bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 01E0
        gbc.setState(0xab1b, 0x9bab, 0x26b0, 0xace1, 0xc4cc, 0x67ca, 0x0, 0x0);
        gbc.writeMem(0xab1b, { 0xca, 0xd0, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9bab);
        EXPECT(gbc.pc(), 0x90d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab1b), 0xca);
        EXPECT(gbc.readMem(0xab1c), 0xd0);
        EXPECT(gbc.readMem(0xab1d), 0x90);
        // CA 01E1
        gbc.setState(0x4398, 0x29b, 0x4210, 0x13a5, 0xc172, 0x97c3, 0x0, 0x1);
        gbc.writeMem(0x4398, { 0xca, 0x2d, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x29b);
        EXPECT(gbc.pc(), 0x439b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 01E2
        gbc.setState(0xd830, 0x4c4e, 0x4330, 0xf399, 0xbcd0, 0xf97d, 0x0, 0x1);
        gbc.writeMem(0xd830, { 0xca, 0x61, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4c4e);
        EXPECT(gbc.pc(), 0xd833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd830), 0xca);
        EXPECT(gbc.readMem(0xd831), 0x61);
        EXPECT(gbc.readMem(0xd832), 0xc3);
        // CA 01E3
        gbc.setState(0x483e, 0xab96, 0x7b20, 0x3da3, 0xe340, 0x6dda, 0x0, 0x0);
        gbc.writeMem(0x483e, { 0xca, 0x91, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xab96);
        EXPECT(gbc.pc(), 0x4841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 01E4
        gbc.setState(0x8301, 0xcab7, 0x5150, 0x87c4, 0x85b8, 0x2711, 0x1, 0x0);
        gbc.writeMem(0x8301, { 0xca, 0x28, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcab7);
        EXPECT(gbc.pc(), 0x8304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8301), 0xca);
        EXPECT(gbc.readMem(0x8302), 0x28);
        EXPECT(gbc.readMem(0x8303), 0x77);
        // CA 01E5
        gbc.setState(0xa14, 0x720a, 0x3dd0, 0x19c1, 0x6107, 0x6916, 0x0, 0x1);
        gbc.writeMem(0xa14, { 0xca, 0xf5, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x720a);
        EXPECT(gbc.pc(), 0xc4f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 01E6
        gbc.setState(0x15ab, 0xd1ea, 0xe900, 0x4395, 0x20a0, 0xeb4d, 0x0, 0x1);
        gbc.writeMem(0x15ab, { 0xca, 0x4d, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd1ea);
        EXPECT(gbc.pc(), 0x15ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 01E7
        gbc.setState(0x3847, 0xe6b, 0xf8e0, 0x7176, 0x543d, 0xc0c, 0x0, 0x0);
        gbc.writeMem(0x3847, { 0xca, 0xac, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe6b);
        EXPECT(gbc.pc(), 0x6aac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 01E8
        gbc.setState(0x1b49, 0x8282, 0xcd80, 0xf9fd, 0x4930, 0x174e, 0x0, 0x1);
        gbc.writeMem(0x1b49, { 0xca, 0x11, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8282);
        EXPECT(gbc.pc(), 0x2a11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 01E9
        gbc.setState(0x97f3, 0x2ea4, 0x5e20, 0x38b7, 0xe9ef, 0xa3b1, 0x0, 0x0);
        gbc.writeMem(0x97f3, { 0xca, 0x7b, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2ea4);
        EXPECT(gbc.pc(), 0x97f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97f3), 0xca);
        EXPECT(gbc.readMem(0x97f4), 0x7b);
        EXPECT(gbc.readMem(0x97f5), 0x41);
        // CA 01EA
        gbc.setState(0xc7b2, 0x7d3b, 0x4ba0, 0xe0c0, 0xfed1, 0xb31, 0x1, 0x0);
        gbc.writeMem(0xc7b2, { 0xca, 0x2f, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7d3b);
        EXPECT(gbc.pc(), 0x572f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b2), 0xca);
        EXPECT(gbc.readMem(0xc7b3), 0x2f);
        EXPECT(gbc.readMem(0xc7b4), 0x57);
        // CA 01EB
        gbc.setState(0xb2e0, 0xcd86, 0x9140, 0x6e34, 0x5421, 0x999c, 0x0, 0x0);
        gbc.writeMem(0xb2e0, { 0xca, 0xea, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xcd86);
        EXPECT(gbc.pc(), 0xb2e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e0), 0xca);
        EXPECT(gbc.readMem(0xb2e1), 0xea);
        EXPECT(gbc.readMem(0xb2e2), 0x52);
        // CA 01EC
        gbc.setState(0x9aa5, 0xca4e, 0xa240, 0x2e6b, 0x66fb, 0xccdc, 0x1, 0x0);
        gbc.writeMem(0x9aa5, { 0xca, 0xc0, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xca4e);
        EXPECT(gbc.pc(), 0x9aa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aa5), 0xca);
        EXPECT(gbc.readMem(0x9aa6), 0xc0);
        EXPECT(gbc.readMem(0x9aa7), 0xb8);
        // CA 01ED
        gbc.setState(0x24e, 0x8daf, 0x4230, 0xe9a8, 0x14e, 0xf457, 0x0, 0x1);
        gbc.writeMem(0x24e, { 0xca, 0xb2, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8daf);
        EXPECT(gbc.pc(), 0x251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 01EE
        gbc.setState(0x3d78, 0xedba, 0x3d60, 0x9a04, 0xd843, 0x6305, 0x1, 0x0);
        gbc.writeMem(0x3d78, { 0xca, 0xf0, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xedba);
        EXPECT(gbc.pc(), 0x3d7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 01EF
        gbc.setState(0x4025, 0x4a48, 0xd5c0, 0x764b, 0x641a, 0xe4e3, 0x1, 0x0);
        gbc.writeMem(0x4025, { 0xca, 0xfd, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4a48);
        EXPECT(gbc.pc(), 0x80fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 01F0
        gbc.setState(0xaae3, 0xe55d, 0xbb10, 0xe6d1, 0xc66b, 0x1735, 0x0, 0x1);
        gbc.writeMem(0xaae3, { 0xca, 0xb5, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe55d);
        EXPECT(gbc.pc(), 0xaae6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaae3), 0xca);
        EXPECT(gbc.readMem(0xaae4), 0xb5);
        EXPECT(gbc.readMem(0xaae5), 0x2f);
        // CA 01F2
        gbc.setState(0x9dc4, 0x1943, 0x1a10, 0xe867, 0xab38, 0xe3a7, 0x0, 0x1);
        gbc.writeMem(0x9dc4, { 0xca, 0x0, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1943);
        EXPECT(gbc.pc(), 0x9dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc4), 0xca);
        EXPECT(gbc.readMem(0x9dc5), 0x0);
        EXPECT(gbc.readMem(0x9dc6), 0x60);
        // CA 01F3
        gbc.setState(0x6fed, 0x339c, 0xae50, 0x972e, 0x2951, 0x2718, 0x1, 0x0);
        gbc.writeMem(0x6fed, { 0xca, 0x25, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x339c);
        EXPECT(gbc.pc(), 0x6ff0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 01F4
        gbc.setState(0xa209, 0x560c, 0x7180, 0xd1f3, 0x3e9, 0x84cc, 0x0, 0x1);
        gbc.writeMem(0xa209, { 0xca, 0x3a, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x560c);
        EXPECT(gbc.pc(), 0x673a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa209), 0xca);
        EXPECT(gbc.readMem(0xa20a), 0x3a);
        EXPECT(gbc.readMem(0xa20b), 0x67);
        // CA 01F5
        gbc.setState(0x5e5, 0xefdc, 0x4120, 0x762b, 0x7eaa, 0x7552, 0x0, 0x1);
        gbc.writeMem(0x5e5, { 0xca, 0x13, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xefdc);
        EXPECT(gbc.pc(), 0x5e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 01F6
        gbc.setState(0xe321, 0x73ae, 0x6180, 0x62f0, 0x5d87, 0x3911, 0x0, 0x0);
        gbc.writeMem(0xe321, { 0xca, 0x4a, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x73ae);
        EXPECT(gbc.pc(), 0x3d4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe321), 0xca);
        EXPECT(gbc.readMem(0xe322), 0x4a);
        EXPECT(gbc.readMem(0xe323), 0x3d);
        // CA 01F7
        gbc.setState(0xd3e2, 0x78c3, 0xc1a0, 0x7a39, 0x9c3, 0x5f99, 0x0, 0x1);
        gbc.writeMem(0xd3e2, { 0xca, 0x7, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x78c3);
        EXPECT(gbc.pc(), 0xe907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3e2), 0xca);
        EXPECT(gbc.readMem(0xd3e3), 0x7);
        EXPECT(gbc.readMem(0xd3e4), 0xe9);
        // CA 01F8
        gbc.setState(0x511d, 0xe7ee, 0x3130, 0x5d84, 0xf39c, 0x2e33, 0x0, 0x1);
        gbc.writeMem(0x511d, { 0xca, 0xfb, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe7ee);
        EXPECT(gbc.pc(), 0x5120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 01F9
        gbc.setState(0xb2e3, 0x1bc4, 0x96e0, 0x39a, 0xa5bd, 0x1a69, 0x1, 0x0);
        gbc.writeMem(0xb2e3, { 0xca, 0x4a, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1bc4);
        EXPECT(gbc.pc(), 0xf14a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e3), 0xca);
        EXPECT(gbc.readMem(0xb2e4), 0x4a);
        EXPECT(gbc.readMem(0xb2e5), 0xf1);
        // CA 01FA
        gbc.setState(0x1ddd, 0x1eac, 0x39e0, 0xa513, 0x470, 0x3107, 0x0, 0x1);
        gbc.writeMem(0x1ddd, { 0xca, 0x8c, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1eac);
        EXPECT(gbc.pc(), 0x508c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 01FB
        gbc.setState(0x7a7a, 0xeecc, 0x4040, 0x4d50, 0x5c80, 0xd958, 0x0, 0x1);
        gbc.writeMem(0x7a7a, { 0xca, 0x72, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xeecc);
        EXPECT(gbc.pc(), 0x7a7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 01FC
        gbc.setState(0xcec7, 0x5145, 0x9c60, 0x8c29, 0xf85a, 0xa0e8, 0x1, 0x0);
        gbc.writeMem(0xcec7, { 0xca, 0xfc, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5145);
        EXPECT(gbc.pc(), 0xceca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec7), 0xca);
        EXPECT(gbc.readMem(0xcec8), 0xfc);
        EXPECT(gbc.readMem(0xcec9), 0x40);
        // CA 01FD
        gbc.setState(0x8481, 0xc96e, 0x3da0, 0x2f0f, 0xfd00, 0x49bb, 0x0, 0x1);
        gbc.writeMem(0x8481, { 0xca, 0xc4, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc96e);
        EXPECT(gbc.pc(), 0x7fc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8481), 0xca);
        EXPECT(gbc.readMem(0x8482), 0xc4);
        EXPECT(gbc.readMem(0x8483), 0x7f);
        // CA 01FE
        gbc.setState(0x4d92, 0xfe17, 0x14c0, 0x424c, 0x961a, 0x9267, 0x1, 0x0);
        gbc.writeMem(0x4d92, { 0xca, 0x78, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfe17);
        EXPECT(gbc.pc(), 0x8878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 01FF
        gbc.setState(0x3189, 0xe615, 0xb8d0, 0xf119, 0x17f5, 0xb29e, 0x1, 0x1);
        gbc.writeMem(0x3189, { 0xca, 0x20, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe615);
        EXPECT(gbc.pc(), 0xc020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0200
        gbc.setState(0xe2e8, 0x646, 0xa950, 0x610c, 0x73bc, 0x4949, 0x1, 0x0);
        gbc.writeMem(0xe2e8, { 0xca, 0xbb, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x646);
        EXPECT(gbc.pc(), 0xe2eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2e8), 0xca);
        EXPECT(gbc.readMem(0xe2e9), 0xbb);
        EXPECT(gbc.readMem(0xe2ea), 0xf8);
        // CA 0201
        gbc.setState(0x27e3, 0x8b2f, 0x22f0, 0x769e, 0xe039, 0x2aef, 0x1, 0x1);
        gbc.writeMem(0x27e3, { 0xca, 0xe4, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8b2f);
        EXPECT(gbc.pc(), 0x27e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0202
        gbc.setState(0xa1bc, 0x2a, 0xcdd0, 0x3917, 0x27d2, 0x8714, 0x1, 0x1);
        gbc.writeMem(0xa1bc, { 0xca, 0x95, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2a);
        EXPECT(gbc.pc(), 0x9195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1bc), 0xca);
        EXPECT(gbc.readMem(0xa1bd), 0x95);
        EXPECT(gbc.readMem(0xa1be), 0x91);
        // CA 0203
        gbc.setState(0x4492, 0x995c, 0x4870, 0xed2b, 0x6444, 0x9256, 0x1, 0x1);
        gbc.writeMem(0x4492, { 0xca, 0x75, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x995c);
        EXPECT(gbc.pc(), 0x4495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0204
        gbc.setState(0x2944, 0xf207, 0x5080, 0x4783, 0xee4a, 0x41c8, 0x0, 0x0);
        gbc.writeMem(0x2944, { 0xca, 0x55, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf207);
        EXPECT(gbc.pc(), 0xc255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0205
        gbc.setState(0x39f, 0x6771, 0xf6b0, 0x4287, 0x5075, 0x316c, 0x1, 0x0);
        gbc.writeMem(0x39f, { 0xca, 0x96, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6771);
        EXPECT(gbc.pc(), 0xfb96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0206
        gbc.setState(0x8c87, 0x4871, 0x640, 0x2c38, 0xf549, 0x1e91, 0x1, 0x1);
        gbc.writeMem(0x8c87, { 0xca, 0x3, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4871);
        EXPECT(gbc.pc(), 0x8c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c87), 0xca);
        EXPECT(gbc.readMem(0x8c88), 0x3);
        EXPECT(gbc.readMem(0x8c89), 0x50);
        // CA 0207
        gbc.setState(0x6afa, 0x1961, 0xc860, 0x1c96, 0x5f0e, 0x4651, 0x0, 0x1);
        gbc.writeMem(0x6afa, { 0xca, 0xfd, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1961);
        EXPECT(gbc.pc(), 0x6afd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0208
        gbc.setState(0x613c, 0xadfa, 0x7670, 0x3150, 0xff10, 0xce5, 0x1, 0x1);
        gbc.writeMem(0x613c, { 0xca, 0x8d, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xadfa);
        EXPECT(gbc.pc(), 0x613f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0209
        gbc.setState(0x3915, 0x35ff, 0x3f00, 0x34e0, 0xbcc4, 0x242a, 0x1, 0x0);
        gbc.writeMem(0x3915, { 0xca, 0xbb, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x35ff);
        EXPECT(gbc.pc(), 0x3918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 020A
        gbc.setState(0x1318, 0x1610, 0x5b80, 0xc421, 0xa7d2, 0x7f7e, 0x0, 0x0);
        gbc.writeMem(0x1318, { 0xca, 0xc3, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1610);
        EXPECT(gbc.pc(), 0x32c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 020B
        gbc.setState(0x1788, 0x7bf8, 0xe110, 0x5eaa, 0x6395, 0xa1ed, 0x0, 0x0);
        gbc.writeMem(0x1788, { 0xca, 0xbd, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7bf8);
        EXPECT(gbc.pc(), 0x178b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 020C
        gbc.setState(0xe47e, 0xdc26, 0x4d30, 0x1dcc, 0x5a69, 0x80d0, 0x0, 0x0);
        gbc.writeMem(0xe47e, { 0xca, 0x84, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xdc26);
        EXPECT(gbc.pc(), 0xe481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe47e), 0xca);
        EXPECT(gbc.readMem(0xe47f), 0x84);
        EXPECT(gbc.readMem(0xe480), 0xfa);
        // CA 020D
        gbc.setState(0xbb9f, 0x7b03, 0xe20, 0xa387, 0x6cb6, 0x31ac, 0x1, 0x0);
        gbc.writeMem(0xbb9f, { 0xca, 0xa7, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7b03);
        EXPECT(gbc.pc(), 0xbba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb9f), 0xca);
        EXPECT(gbc.readMem(0xbba0), 0xa7);
        EXPECT(gbc.readMem(0xbba1), 0xd7);
        // CA 020E
        gbc.setState(0xc2b0, 0x3f02, 0x4120, 0xb302, 0x513, 0x8c7c, 0x1, 0x1);
        gbc.writeMem(0xc2b0, { 0xca, 0xff, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3f02);
        EXPECT(gbc.pc(), 0xc2b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b0), 0xca);
        EXPECT(gbc.readMem(0xc2b1), 0xff);
        EXPECT(gbc.readMem(0xc2b2), 0x45);
        // CA 020F
        gbc.setState(0x9bcb, 0xdd05, 0x5be0, 0x533a, 0xbdbf, 0xea7a, 0x1, 0x1);
        gbc.writeMem(0x9bcb, { 0xca, 0xa6, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xdd05);
        EXPECT(gbc.pc(), 0xa8a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bcb), 0xca);
        EXPECT(gbc.readMem(0x9bcc), 0xa6);
        EXPECT(gbc.readMem(0x9bcd), 0xa8);
        // CA 0210
        gbc.setState(0x8604, 0x8f1b, 0x1ee0, 0xdbc9, 0xad9e, 0xa8b9, 0x1, 0x1);
        gbc.writeMem(0x8604, { 0xca, 0xcb, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8f1b);
        EXPECT(gbc.pc(), 0xfbcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8604), 0xca);
        EXPECT(gbc.readMem(0x8605), 0xcb);
        EXPECT(gbc.readMem(0x8606), 0xfb);
        // CA 0211
        gbc.setState(0x9252, 0x70de, 0x360, 0xf0c8, 0xb90b, 0x7842, 0x1, 0x0);
        gbc.writeMem(0x9252, { 0xca, 0x8c, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x70de);
        EXPECT(gbc.pc(), 0x9255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9252), 0xca);
        EXPECT(gbc.readMem(0x9253), 0x8c);
        EXPECT(gbc.readMem(0x9254), 0xb8);
        // CA 0212
        gbc.setState(0x73a8, 0xedcb, 0x2230, 0x94f6, 0x39c2, 0xa33c, 0x1, 0x1);
        gbc.writeMem(0x73a8, { 0xca, 0xf9, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xedcb);
        EXPECT(gbc.pc(), 0x73ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0213
        gbc.setState(0x9cbb, 0x7153, 0x3d50, 0x8621, 0x4c5c, 0xc871, 0x0, 0x0);
        gbc.writeMem(0x9cbb, { 0xca, 0xd9, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7153);
        EXPECT(gbc.pc(), 0x9cbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cbb), 0xca);
        EXPECT(gbc.readMem(0x9cbc), 0xd9);
        EXPECT(gbc.readMem(0x9cbd), 0x4c);
        // CA 0214
        gbc.setState(0xc934, 0xdb35, 0xf090, 0xe346, 0xf8d9, 0x33a4, 0x0, 0x1);
        gbc.writeMem(0xc934, { 0xca, 0x5e, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xdb35);
        EXPECT(gbc.pc(), 0xd75e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc934), 0xca);
        EXPECT(gbc.readMem(0xc935), 0x5e);
        EXPECT(gbc.readMem(0xc936), 0xd7);
        // CA 0215
        gbc.setState(0x963c, 0x8919, 0x5250, 0x4c01, 0x2b24, 0xb207, 0x0, 0x0);
        gbc.writeMem(0x963c, { 0xca, 0x8, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8919);
        EXPECT(gbc.pc(), 0x963f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x963c), 0xca);
        EXPECT(gbc.readMem(0x963d), 0x8);
        EXPECT(gbc.readMem(0x963e), 0xe);
        // CA 0216
        gbc.setState(0x1f4b, 0xfed0, 0x9f70, 0x4cbc, 0x7ec, 0x6eda, 0x1, 0x1);
        gbc.writeMem(0x1f4b, { 0xca, 0x19, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xfed0);
        EXPECT(gbc.pc(), 0x1f4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0217
        gbc.setState(0x3e2d, 0xdaf9, 0x7750, 0xe146, 0x2e4a, 0xa3ca, 0x0, 0x0);
        gbc.writeMem(0x3e2d, { 0xca, 0x73, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdaf9);
        EXPECT(gbc.pc(), 0x3e30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0218
        gbc.setState(0xa40f, 0xb0a9, 0xa610, 0x5893, 0x8f7e, 0x1224, 0x1, 0x1);
        gbc.writeMem(0xa40f, { 0xca, 0x9c, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb0a9);
        EXPECT(gbc.pc(), 0xa412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa40f), 0xca);
        EXPECT(gbc.readMem(0xa410), 0x9c);
        EXPECT(gbc.readMem(0xa411), 0x74);
        // CA 0219
        gbc.setState(0x2f5f, 0xa220, 0x5b80, 0x39d1, 0xcdb2, 0x9bdd, 0x1, 0x0);
        gbc.writeMem(0x2f5f, { 0xca, 0xe7, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa220);
        EXPECT(gbc.pc(), 0xe3e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 021A
        gbc.setState(0xa44a, 0x9862, 0xd20, 0x2933, 0x87ad, 0xd789, 0x1, 0x0);
        gbc.writeMem(0xa44a, { 0xca, 0xdb, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9862);
        EXPECT(gbc.pc(), 0xa44d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa44a), 0xca);
        EXPECT(gbc.readMem(0xa44b), 0xdb);
        EXPECT(gbc.readMem(0xa44c), 0x9d);
        // CA 021B
        gbc.setState(0xd43d, 0x750c, 0x5e30, 0x371c, 0xbd2c, 0x11e, 0x0, 0x0);
        gbc.writeMem(0xd43d, { 0xca, 0x4, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x750c);
        EXPECT(gbc.pc(), 0xd440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd43d), 0xca);
        EXPECT(gbc.readMem(0xd43e), 0x4);
        EXPECT(gbc.readMem(0xd43f), 0x84);
        // CA 021C
        gbc.setState(0xcffe, 0x5912, 0x1a20, 0x724b, 0x73ba, 0xc668, 0x0, 0x1);
        gbc.writeMem(0xcffe, { 0xca, 0xc, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5912);
        EXPECT(gbc.pc(), 0xd001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcffe), 0xca);
        EXPECT(gbc.readMem(0xcfff), 0xc);
        EXPECT(gbc.readMem(0xd000), 0xd0);
        // CA 021D
        gbc.setState(0x1a7b, 0x8d54, 0x7d20, 0x4bc6, 0xc7b0, 0x2aed, 0x0, 0x0);
        gbc.writeMem(0x1a7b, { 0xca, 0xc2, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8d54);
        EXPECT(gbc.pc(), 0x1a7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 021E
        gbc.setState(0x2f40, 0x71d6, 0x57d0, 0xaa7f, 0xbc4d, 0x4484, 0x1, 0x0);
        gbc.writeMem(0x2f40, { 0xca, 0x9a, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x71d6);
        EXPECT(gbc.pc(), 0x499a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 021F
        gbc.setState(0x6e1, 0xe709, 0x1720, 0x4d1f, 0x9b4f, 0x6ffb, 0x0, 0x0);
        gbc.writeMem(0x6e1, { 0xca, 0x91, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe709);
        EXPECT(gbc.pc(), 0x6e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0220
        gbc.setState(0x3577, 0x10ce, 0xf3f0, 0xa40, 0x9292, 0x8fe0, 0x0, 0x0);
        gbc.writeMem(0x3577, { 0xca, 0xfc, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x10ce);
        EXPECT(gbc.pc(), 0x6cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0221
        gbc.setState(0x5c00, 0x425f, 0x3fe0, 0x8012, 0x32cc, 0x302f, 0x1, 0x0);
        gbc.writeMem(0x5c00, { 0xca, 0xbe, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x425f);
        EXPECT(gbc.pc(), 0x4dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0222
        gbc.setState(0x9ee1, 0x33c9, 0x3830, 0x42a1, 0xd1a7, 0x8c7e, 0x1, 0x0);
        gbc.writeMem(0x9ee1, { 0xca, 0x9c, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x33c9);
        EXPECT(gbc.pc(), 0x9ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee1), 0xca);
        EXPECT(gbc.readMem(0x9ee2), 0x9c);
        EXPECT(gbc.readMem(0x9ee3), 0x5c);
        // CA 0223
        gbc.setState(0xcbb6, 0xeee4, 0x76c0, 0x9efa, 0x6f88, 0x2bbd, 0x0, 0x1);
        gbc.writeMem(0xcbb6, { 0xca, 0x79, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xeee4);
        EXPECT(gbc.pc(), 0xed79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb6), 0xca);
        EXPECT(gbc.readMem(0xcbb7), 0x79);
        EXPECT(gbc.readMem(0xcbb8), 0xed);
        // CA 0224
        gbc.setState(0xc1f2, 0x5ec0, 0x3100, 0x582f, 0x8b4e, 0x6c76, 0x1, 0x1);
        gbc.writeMem(0xc1f2, { 0xca, 0x39, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5ec0);
        EXPECT(gbc.pc(), 0xc1f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1f2), 0xca);
        EXPECT(gbc.readMem(0xc1f3), 0x39);
        EXPECT(gbc.readMem(0xc1f4), 0x4f);
        // CA 0225
        gbc.setState(0x7f06, 0xe920, 0xf280, 0x8c30, 0xd380, 0xd63f, 0x1, 0x1);
        gbc.writeMem(0x7f06, { 0xca, 0x59, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe920);
        EXPECT(gbc.pc(), 0xfd59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0226
        gbc.setState(0x8566, 0x1025, 0x94d0, 0x9949, 0x2f6d, 0x2ad7, 0x1, 0x1);
        gbc.writeMem(0x8566, { 0xca, 0x14, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1025);
        EXPECT(gbc.pc(), 0x2314);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8566), 0xca);
        EXPECT(gbc.readMem(0x8567), 0x14);
        EXPECT(gbc.readMem(0x8568), 0x23);
        // CA 0227
        gbc.setState(0x8abc, 0x821a, 0x3b50, 0xca73, 0xba30, 0xea08, 0x0, 0x1);
        gbc.writeMem(0x8abc, { 0xca, 0x99, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x821a);
        EXPECT(gbc.pc(), 0x8abf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8abc), 0xca);
        EXPECT(gbc.readMem(0x8abd), 0x99);
        EXPECT(gbc.readMem(0x8abe), 0xc5);
        // CA 0228
        gbc.setState(0x2054, 0xdac4, 0x3f0, 0x534f, 0x9461, 0xd49f, 0x1, 0x0);
        gbc.writeMem(0x2054, { 0xca, 0xac, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xdac4);
        EXPECT(gbc.pc(), 0xe3ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0229
        gbc.setState(0xd7fc, 0x1b03, 0x78f0, 0xaf0a, 0x5074, 0x46e6, 0x1, 0x0);
        gbc.writeMem(0xd7fc, { 0xca, 0xfc, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1b03);
        EXPECT(gbc.pc(), 0x15fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7fc), 0xca);
        EXPECT(gbc.readMem(0xd7fd), 0xfc);
        EXPECT(gbc.readMem(0xd7fe), 0x15);
        // CA 022A
        gbc.setState(0xa4b0, 0x83bf, 0x8400, 0x3817, 0xe03, 0x9fa9, 0x0, 0x0);
        gbc.writeMem(0xa4b0, { 0xca, 0x82, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x83bf);
        EXPECT(gbc.pc(), 0xa4b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4b0), 0xca);
        EXPECT(gbc.readMem(0xa4b1), 0x82);
        EXPECT(gbc.readMem(0xa4b2), 0x22);
        // CA 022B
        gbc.setState(0x34a0, 0xf8e7, 0x4d00, 0x4ea, 0xfd31, 0x2e83, 0x1, 0x1);
        gbc.writeMem(0x34a0, { 0xca, 0xd4, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf8e7);
        EXPECT(gbc.pc(), 0x34a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 022C
        gbc.setState(0x3f21, 0x5f9f, 0x4cc0, 0x782b, 0x29ff, 0x4f4c, 0x0, 0x1);
        gbc.writeMem(0x3f21, { 0xca, 0xeb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5f9f);
        EXPECT(gbc.pc(), 0xceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 022D
        gbc.setState(0x62e3, 0xc39c, 0x7470, 0xa291, 0x2384, 0x7e7c, 0x0, 0x0);
        gbc.writeMem(0x62e3, { 0xca, 0xfa, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc39c);
        EXPECT(gbc.pc(), 0x62e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 022E
        gbc.setState(0x6b66, 0xbb96, 0x85e0, 0x8fd4, 0xa95e, 0xced, 0x1, 0x0);
        gbc.writeMem(0x6b66, { 0xca, 0xee, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xbb96);
        EXPECT(gbc.pc(), 0x29ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 022F
        gbc.setState(0x5644, 0x7f75, 0xec90, 0x8c81, 0x16d4, 0xe04e, 0x1, 0x1);
        gbc.writeMem(0x5644, { 0xca, 0x64, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7f75);
        EXPECT(gbc.pc(), 0xf964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0230
        gbc.setState(0xba2a, 0x22cb, 0x710, 0x43c2, 0xefc1, 0x919a, 0x1, 0x1);
        gbc.writeMem(0xba2a, { 0xca, 0x37, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x22cb);
        EXPECT(gbc.pc(), 0xba2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba2a), 0xca);
        EXPECT(gbc.readMem(0xba2b), 0x37);
        EXPECT(gbc.readMem(0xba2c), 0xc8);
        // CA 0231
        gbc.setState(0x1878, 0x379, 0xcf80, 0x6187, 0x6b1b, 0x6bc1, 0x1, 0x0);
        gbc.writeMem(0x1878, { 0xca, 0x43, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x379);
        EXPECT(gbc.pc(), 0x4643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0232
        gbc.setState(0xb70, 0x5432, 0x4ca0, 0xc90f, 0x3f4c, 0x398a, 0x1, 0x1);
        gbc.writeMem(0xb70, { 0xca, 0x9a, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5432);
        EXPECT(gbc.pc(), 0xbc9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0233
        gbc.setState(0x9661, 0x6253, 0xfc00, 0x7bdf, 0xe554, 0x6b84, 0x0, 0x1);
        gbc.writeMem(0x9661, { 0xca, 0x9f, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6253);
        EXPECT(gbc.pc(), 0x9664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9661), 0xca);
        EXPECT(gbc.readMem(0x9662), 0x9f);
        EXPECT(gbc.readMem(0x9663), 0x26);
        // CA 0234
        gbc.setState(0x8e5b, 0x4c12, 0x37d0, 0xce62, 0x27f7, 0xa77b, 0x1, 0x0);
        gbc.writeMem(0x8e5b, { 0xca, 0x7, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4c12);
        EXPECT(gbc.pc(), 0x407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e5b), 0xca);
        EXPECT(gbc.readMem(0x8e5c), 0x7);
        EXPECT(gbc.readMem(0x8e5d), 0x4);
        // CA 0235
        gbc.setState(0xc6f7, 0x1a76, 0x1cf0, 0x62ec, 0x25a0, 0x27cf, 0x0, 0x1);
        gbc.writeMem(0xc6f7, { 0xca, 0x41, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1a76);
        EXPECT(gbc.pc(), 0x5c41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6f7), 0xca);
        EXPECT(gbc.readMem(0xc6f8), 0x41);
        EXPECT(gbc.readMem(0xc6f9), 0x5c);
        // CA 0236
        gbc.setState(0xc3e9, 0x6697, 0x4fb0, 0xff16, 0x19dc, 0xb64b, 0x0, 0x1);
        gbc.writeMem(0xc3e9, { 0xca, 0x8e, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6697);
        EXPECT(gbc.pc(), 0xf98e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3e9), 0xca);
        EXPECT(gbc.readMem(0xc3ea), 0x8e);
        EXPECT(gbc.readMem(0xc3eb), 0xf9);
        // CA 0237
        gbc.setState(0x23b0, 0x965d, 0xfb00, 0x2ee, 0x3146, 0xa23e, 0x1, 0x1);
        gbc.writeMem(0x23b0, { 0xca, 0x35, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x965d);
        EXPECT(gbc.pc(), 0x23b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0238
        gbc.setState(0x2e83, 0xd346, 0xb5a0, 0x96b5, 0xd030, 0xd10, 0x1, 0x0);
        gbc.writeMem(0x2e83, { 0xca, 0xeb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd346);
        EXPECT(gbc.pc(), 0xe1eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0239
        gbc.setState(0xdc55, 0x59a8, 0xb0e0, 0x907, 0x39a3, 0x1a35, 0x0, 0x0);
        gbc.writeMem(0xdc55, { 0xca, 0x51, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x59a8);
        EXPECT(gbc.pc(), 0x8451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc55), 0xca);
        EXPECT(gbc.readMem(0xdc56), 0x51);
        EXPECT(gbc.readMem(0xdc57), 0x84);
        // CA 023A
        gbc.setState(0x1c4f, 0xd23f, 0xaed0, 0xea41, 0x5be1, 0x7d31, 0x1, 0x1);
        gbc.writeMem(0x1c4f, { 0xca, 0x88, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd23f);
        EXPECT(gbc.pc(), 0x5288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 023B
        gbc.setState(0xe39b, 0x86ea, 0x3e40, 0xf7c5, 0xbbc2, 0x9535, 0x1, 0x0);
        gbc.writeMem(0xe39b, { 0xca, 0x72, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x86ea);
        EXPECT(gbc.pc(), 0xe39e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe39b), 0xca);
        EXPECT(gbc.readMem(0xe39c), 0x72);
        EXPECT(gbc.readMem(0xe39d), 0xbd);
        // CA 023C
        gbc.setState(0xea1a, 0x4940, 0x7da0, 0x206e, 0x5d5f, 0x912f, 0x1, 0x0);
        gbc.writeMem(0xea1a, { 0xca, 0xd8, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4940);
        EXPECT(gbc.pc(), 0x2bd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea1a), 0xca);
        EXPECT(gbc.readMem(0xea1b), 0xd8);
        EXPECT(gbc.readMem(0xea1c), 0x2b);
        // CA 023D
        gbc.setState(0x28b6, 0xbe41, 0x71b0, 0x1792, 0x7862, 0x3999, 0x1, 0x1);
        gbc.writeMem(0x28b6, { 0xca, 0xbf, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xbe41);
        EXPECT(gbc.pc(), 0xd6bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 023E
        gbc.setState(0xa8b8, 0x40e5, 0x3620, 0x7df8, 0xa14c, 0xc80c, 0x0, 0x1);
        gbc.writeMem(0xa8b8, { 0xca, 0x73, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x40e5);
        EXPECT(gbc.pc(), 0xa8bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b8), 0xca);
        EXPECT(gbc.readMem(0xa8b9), 0x73);
        EXPECT(gbc.readMem(0xa8ba), 0x50);
        // CA 023F
        gbc.setState(0x2290, 0x178c, 0x6dd0, 0x401e, 0x230e, 0xb65a, 0x1, 0x1);
        gbc.writeMem(0x2290, { 0xca, 0x55, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x178c);
        EXPECT(gbc.pc(), 0xbc55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0240
        gbc.setState(0x1ac2, 0x7a7d, 0x76f0, 0x852c, 0xf2ec, 0x420, 0x0, 0x0);
        gbc.writeMem(0x1ac2, { 0xca, 0xda, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7a7d);
        EXPECT(gbc.pc(), 0x23da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0241
        gbc.setState(0x96ff, 0x25a1, 0x3eb0, 0x871a, 0x7f1a, 0x4154, 0x1, 0x1);
        gbc.writeMem(0x96ff, { 0xca, 0xd7, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x25a1);
        EXPECT(gbc.pc(), 0x19d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ff), 0xca);
        EXPECT(gbc.readMem(0x9700), 0xd7);
        EXPECT(gbc.readMem(0x9701), 0x19);
        // CA 0242
        gbc.setState(0xc479, 0x73a0, 0x3ce0, 0x45a8, 0x759e, 0x5326, 0x0, 0x0);
        gbc.writeMem(0xc479, { 0xca, 0xba, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x73a0);
        EXPECT(gbc.pc(), 0xe6ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc479), 0xca);
        EXPECT(gbc.readMem(0xc47a), 0xba);
        EXPECT(gbc.readMem(0xc47b), 0xe6);
        // CA 0243
        gbc.setState(0xba8a, 0xdff6, 0x5370, 0xb4c9, 0xb72c, 0x1ca1, 0x1, 0x1);
        gbc.writeMem(0xba8a, { 0xca, 0x92, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xdff6);
        EXPECT(gbc.pc(), 0xba8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba8a), 0xca);
        EXPECT(gbc.readMem(0xba8b), 0x92);
        EXPECT(gbc.readMem(0xba8c), 0xdc);
        // CA 0244
        gbc.setState(0x1c1a, 0x3f27, 0xf1b0, 0xb787, 0xf0e2, 0x5fd7, 0x1, 0x0);
        gbc.writeMem(0x1c1a, { 0xca, 0x90, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3f27);
        EXPECT(gbc.pc(), 0xf590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0245
        gbc.setState(0xafc5, 0x86d7, 0x6590, 0x1e99, 0x4cd5, 0xe281, 0x0, 0x1);
        gbc.writeMem(0xafc5, { 0xca, 0x46, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x86d7);
        EXPECT(gbc.pc(), 0xcb46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc5), 0xca);
        EXPECT(gbc.readMem(0xafc6), 0x46);
        EXPECT(gbc.readMem(0xafc7), 0xcb);
        // CA 0246
        gbc.setState(0x382d, 0x3521, 0x71c0, 0x38cf, 0x8c8f, 0x56c9, 0x1, 0x1);
        gbc.writeMem(0x382d, { 0xca, 0x93, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3521);
        EXPECT(gbc.pc(), 0x7293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0248
        gbc.setState(0xc970, 0x37ed, 0x6010, 0x6212, 0x862d, 0xa740, 0x1, 0x0);
        gbc.writeMem(0xc970, { 0xca, 0x9e, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x37ed);
        EXPECT(gbc.pc(), 0xc973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc970), 0xca);
        EXPECT(gbc.readMem(0xc971), 0x9e);
        EXPECT(gbc.readMem(0xc972), 0x71);
        // CA 0249
        gbc.setState(0x36e1, 0x6133, 0xaae0, 0x62f4, 0x79bc, 0xbc41, 0x0, 0x1);
        gbc.writeMem(0x36e1, { 0xca, 0xb7, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6133);
        EXPECT(gbc.pc(), 0x41b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 024A
        gbc.setState(0x6945, 0x8d25, 0x880, 0x9578, 0x842, 0x6b40, 0x1, 0x0);
        gbc.writeMem(0x6945, { 0xca, 0x5e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8d25);
        EXPECT(gbc.pc(), 0xb25e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 024C
        gbc.setState(0x16a9, 0xaa80, 0x52a0, 0x3a7a, 0x83ac, 0xf9c6, 0x0, 0x0);
        gbc.writeMem(0x16a9, { 0xca, 0x1a, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xaa80);
        EXPECT(gbc.pc(), 0xad1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 024D
        gbc.setState(0x7261, 0xbd4f, 0xf3c0, 0xef46, 0xf06a, 0x2d5c, 0x0, 0x1);
        gbc.writeMem(0x7261, { 0xca, 0x46, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xbd4f);
        EXPECT(gbc.pc(), 0xd046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 024E
        gbc.setState(0xff, 0xb283, 0xf490, 0x71a9, 0xc5f2, 0xedc6, 0x1, 0x0);
        gbc.writeMem(0xff, { 0xca, 0x9e, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb283);
        EXPECT(gbc.pc(), 0xaa9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 024F
        gbc.setState(0x3d96, 0xe5a1, 0xa4c0, 0xba, 0x3634, 0xd402, 0x1, 0x1);
        gbc.writeMem(0x3d96, { 0xca, 0xc9, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe5a1);
        EXPECT(gbc.pc(), 0x99c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0250
        gbc.setState(0xbebe, 0xf8c4, 0x1f10, 0x2840, 0x7e36, 0x974f, 0x0, 0x1);
        gbc.writeMem(0xbebe, { 0xca, 0x23, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf8c4);
        EXPECT(gbc.pc(), 0xbec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbebe), 0xca);
        EXPECT(gbc.readMem(0xbebf), 0x23);
        EXPECT(gbc.readMem(0xbec0), 0xee);
        // CA 0251
        gbc.setState(0x15b0, 0xbaed, 0x27f0, 0xb479, 0x6eb1, 0x461f, 0x1, 0x0);
        gbc.writeMem(0x15b0, { 0xca, 0xa7, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xbaed);
        EXPECT(gbc.pc(), 0x5da7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0252
        gbc.setState(0x204, 0x4fa1, 0xa830, 0x6784, 0x5216, 0xcac8, 0x1, 0x1);
        gbc.writeMem(0x204, { 0xca, 0xc4, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4fa1);
        EXPECT(gbc.pc(), 0x207);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0253
        gbc.setState(0x109c, 0xbf10, 0xdde0, 0xe925, 0xbbb5, 0xfbfe, 0x1, 0x0);
        gbc.writeMem(0x109c, { 0xca, 0x59, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xbf10);
        EXPECT(gbc.pc(), 0xb159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0254
        gbc.setState(0x2410, 0x7d00, 0xc070, 0x6b46, 0x3373, 0xa413, 0x1, 0x0);
        gbc.writeMem(0x2410, { 0xca, 0x5e, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7d00);
        EXPECT(gbc.pc(), 0x2413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0255
        gbc.setState(0xe5c6, 0xd762, 0x5790, 0xc1c9, 0x7284, 0x14ea, 0x1, 0x1);
        gbc.writeMem(0xe5c6, { 0xca, 0xb, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd762);
        EXPECT(gbc.pc(), 0xbc0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5c6), 0xca);
        EXPECT(gbc.readMem(0xe5c7), 0xb);
        EXPECT(gbc.readMem(0xe5c8), 0xbc);
        // CA 0256
        gbc.setState(0xd910, 0xb080, 0xdb70, 0xa064, 0x3468, 0x6e9, 0x1, 0x0);
        gbc.writeMem(0xd910, { 0xca, 0x1f, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb080);
        EXPECT(gbc.pc(), 0xd913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd910), 0xca);
        EXPECT(gbc.readMem(0xd911), 0x1f);
        EXPECT(gbc.readMem(0xd912), 0x91);
        // CA 0257
        gbc.setState(0xd4f9, 0x7ba, 0x7bf0, 0x3bce, 0x5d2a, 0x38b0, 0x1, 0x1);
        gbc.writeMem(0xd4f9, { 0xca, 0xe0, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7ba);
        EXPECT(gbc.pc(), 0xd4e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f9), 0xca);
        EXPECT(gbc.readMem(0xd4fa), 0xe0);
        EXPECT(gbc.readMem(0xd4fb), 0xd4);
        // CA 0259
        gbc.setState(0xdd86, 0xa295, 0x4fc0, 0xa996, 0x915f, 0x3565, 0x1, 0x0);
        gbc.writeMem(0xdd86, { 0xca, 0x56, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa295);
        EXPECT(gbc.pc(), 0xc656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd86), 0xca);
        EXPECT(gbc.readMem(0xdd87), 0x56);
        EXPECT(gbc.readMem(0xdd88), 0xc6);
        // CA 025A
        gbc.setState(0x226f, 0x6492, 0xceb0, 0x1a72, 0xab3d, 0x9545, 0x0, 0x0);
        gbc.writeMem(0x226f, { 0xca, 0xbc, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6492);
        EXPECT(gbc.pc(), 0xa3bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 025B
        gbc.setState(0x9bef, 0xfd75, 0x95d0, 0x7745, 0x25d7, 0x75c5, 0x1, 0x1);
        gbc.writeMem(0x9bef, { 0xca, 0xd4, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfd75);
        EXPECT(gbc.pc(), 0xf1d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bef), 0xca);
        EXPECT(gbc.readMem(0x9bf0), 0xd4);
        EXPECT(gbc.readMem(0x9bf1), 0xf1);
        // CA 025C
        gbc.setState(0x1e9a, 0x434d, 0xdea0, 0xd7a6, 0xcd6d, 0xec32, 0x0, 0x1);
        gbc.writeMem(0x1e9a, { 0xca, 0x82, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x434d);
        EXPECT(gbc.pc(), 0x6c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 025D
        gbc.setState(0x60b6, 0xd800, 0xb3f0, 0xd2a7, 0x44c2, 0x1560, 0x0, 0x0);
        gbc.writeMem(0x60b6, { 0xca, 0x61, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd800);
        EXPECT(gbc.pc(), 0x4161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 025E
        gbc.setState(0x3167, 0xa646, 0xd030, 0xb387, 0x94d, 0xaa3c, 0x1, 0x0);
        gbc.writeMem(0x3167, { 0xca, 0xe2, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa646);
        EXPECT(gbc.pc(), 0x316a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 025F
        gbc.setState(0x906c, 0x468e, 0xe090, 0x790d, 0xb4a6, 0xd3fe, 0x1, 0x1);
        gbc.writeMem(0x906c, { 0xca, 0xfd, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x468e);
        EXPECT(gbc.pc(), 0x4cfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x906c), 0xca);
        EXPECT(gbc.readMem(0x906d), 0xfd);
        EXPECT(gbc.readMem(0x906e), 0x4c);
        // CA 0260
        gbc.setState(0x2ad0, 0xc180, 0x7490, 0xdbf1, 0xdafa, 0x4f38, 0x1, 0x0);
        gbc.writeMem(0x2ad0, { 0xca, 0xd3, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc180);
        EXPECT(gbc.pc(), 0x16d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0261
        gbc.setState(0xb58f, 0x1908, 0x90d0, 0xbcbd, 0xe617, 0xe, 0x1, 0x1);
        gbc.writeMem(0xb58f, { 0xca, 0x12, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1908);
        EXPECT(gbc.pc(), 0x1612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb58f), 0xca);
        EXPECT(gbc.readMem(0xb590), 0x12);
        EXPECT(gbc.readMem(0xb591), 0x16);
        // CA 0262
        gbc.setState(0xcd1a, 0x91af, 0x7a10, 0x47e3, 0x929b, 0x221c, 0x0, 0x1);
        gbc.writeMem(0xcd1a, { 0xca, 0x14, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x91af);
        EXPECT(gbc.pc(), 0xcd1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd1a), 0xca);
        EXPECT(gbc.readMem(0xcd1b), 0x14);
        EXPECT(gbc.readMem(0xcd1c), 0xfc);
        // CA 0263
        gbc.setState(0xa979, 0x1e4e, 0xe810, 0x9818, 0x983c, 0x1ccd, 0x1, 0x0);
        gbc.writeMem(0xa979, { 0xca, 0x21, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1e4e);
        EXPECT(gbc.pc(), 0xa97c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa979), 0xca);
        EXPECT(gbc.readMem(0xa97a), 0x21);
        EXPECT(gbc.readMem(0xa97b), 0xa2);
        // CA 0264
        gbc.setState(0x3080, 0xc344, 0x1da0, 0xf975, 0xcf58, 0xa106, 0x1, 0x0);
        gbc.writeMem(0x3080, { 0xca, 0xdc, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc344);
        EXPECT(gbc.pc(), 0x60dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0265
        gbc.setState(0x7155, 0xe18a, 0x10d0, 0xb881, 0xbef6, 0x1788, 0x1, 0x0);
        gbc.writeMem(0x7155, { 0xca, 0x77, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe18a);
        EXPECT(gbc.pc(), 0xe577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0266
        gbc.setState(0xa43f, 0x58c1, 0xaf30, 0x8467, 0x74de, 0xb3eb, 0x0, 0x0);
        gbc.writeMem(0xa43f, { 0xca, 0x5a, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x58c1);
        EXPECT(gbc.pc(), 0xa442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa43f), 0xca);
        EXPECT(gbc.readMem(0xa440), 0x5a);
        EXPECT(gbc.readMem(0xa441), 0xc8);
        // CA 0267
        gbc.setState(0x4db7, 0x7279, 0x5cb0, 0x972, 0xbd, 0x5a5d, 0x0, 0x1);
        gbc.writeMem(0x4db7, { 0xca, 0x6, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7279);
        EXPECT(gbc.pc(), 0x7c06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0268
        gbc.setState(0xa9db, 0x33cf, 0x6f0, 0x36e3, 0x419, 0x39b1, 0x0, 0x1);
        gbc.writeMem(0xa9db, { 0xca, 0x4, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x33cf);
        EXPECT(gbc.pc(), 0xf004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9db), 0xca);
        EXPECT(gbc.readMem(0xa9dc), 0x4);
        EXPECT(gbc.readMem(0xa9dd), 0xf0);
        // CA 0269
        gbc.setState(0x534d, 0xedb6, 0xcf30, 0x30de, 0x50e7, 0xb3ff, 0x1, 0x1);
        gbc.writeMem(0x534d, { 0xca, 0x8, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xedb6);
        EXPECT(gbc.pc(), 0x5350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 026A
        gbc.setState(0x7976, 0x9c46, 0xbf50, 0xd7db, 0xf74d, 0x1416, 0x1, 0x1);
        gbc.writeMem(0x7976, { 0xca, 0xcc, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9c46);
        EXPECT(gbc.pc(), 0x7979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 026B
        gbc.setState(0x35f2, 0x4308, 0x76f0, 0x6244, 0xafe2, 0x67bf, 0x1, 0x0);
        gbc.writeMem(0x35f2, { 0xca, 0xca, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4308);
        EXPECT(gbc.pc(), 0xaaca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 026C
        gbc.setState(0xdbce, 0x1b85, 0x1b80, 0x4d30, 0x6405, 0x27af, 0x0, 0x1);
        gbc.writeMem(0xdbce, { 0xca, 0x8b, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1b85);
        EXPECT(gbc.pc(), 0xa8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbce), 0xca);
        EXPECT(gbc.readMem(0xdbcf), 0x8b);
        EXPECT(gbc.readMem(0xdbd0), 0xa);
        // CA 026D
        gbc.setState(0xe64f, 0x917b, 0xfa70, 0xcc03, 0xadd2, 0x96f8, 0x0, 0x1);
        gbc.writeMem(0xe64f, { 0xca, 0x2b, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x917b);
        EXPECT(gbc.pc(), 0xe652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe64f), 0xca);
        EXPECT(gbc.readMem(0xe650), 0x2b);
        EXPECT(gbc.readMem(0xe651), 0xc0);
        // CA 026E
        gbc.setState(0xd20f, 0x4344, 0x89c0, 0x5c1c, 0xa033, 0x40d1, 0x1, 0x1);
        gbc.writeMem(0xd20f, { 0xca, 0x18, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4344);
        EXPECT(gbc.pc(), 0xe918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd20f), 0xca);
        EXPECT(gbc.readMem(0xd210), 0x18);
        EXPECT(gbc.readMem(0xd211), 0xe9);
        // CA 026F
        gbc.setState(0x5655, 0x243, 0x8520, 0xb084, 0xd8c8, 0x8c09, 0x1, 0x1);
        gbc.writeMem(0x5655, { 0xca, 0xe5, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x243);
        EXPECT(gbc.pc(), 0x5658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0270
        gbc.setState(0xc89b, 0x8272, 0x6950, 0xb92a, 0xfc2e, 0xc0b7, 0x0, 0x1);
        gbc.writeMem(0xc89b, { 0xca, 0xe4, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8272);
        EXPECT(gbc.pc(), 0xc89e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc89b), 0xca);
        EXPECT(gbc.readMem(0xc89c), 0xe4);
        EXPECT(gbc.readMem(0xc89d), 0x58);
        // CA 0271
        gbc.setState(0x2d4, 0xc3d5, 0xae30, 0x165b, 0xf880, 0x9d64, 0x1, 0x1);
        gbc.writeMem(0x2d4, { 0xca, 0xa6, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc3d5);
        EXPECT(gbc.pc(), 0x2d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0272
        gbc.setState(0xe15, 0xe39c, 0x70d0, 0x2c9d, 0x6b57, 0x8716, 0x0, 0x0);
        gbc.writeMem(0xe15, { 0xca, 0x9a, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe39c);
        EXPECT(gbc.pc(), 0xc9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0273
        gbc.setState(0xac10, 0x51c6, 0xba90, 0xe6ac, 0x7f17, 0xfc4c, 0x1, 0x1);
        gbc.writeMem(0xac10, { 0xca, 0x69, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x51c6);
        EXPECT(gbc.pc(), 0x5e69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac10), 0xca);
        EXPECT(gbc.readMem(0xac11), 0x69);
        EXPECT(gbc.readMem(0xac12), 0x5e);
        // CA 0274
        gbc.setState(0x1324, 0xaadb, 0x60c0, 0xa5b7, 0xfa00, 0x17d1, 0x0, 0x1);
        gbc.writeMem(0x1324, { 0xca, 0x77, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xaadb);
        EXPECT(gbc.pc(), 0xa177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0276
        gbc.setState(0x6d9d, 0x7b9f, 0xd850, 0xbfdf, 0xa9d2, 0xfb20, 0x0, 0x0);
        gbc.writeMem(0x6d9d, { 0xca, 0xae, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7b9f);
        EXPECT(gbc.pc(), 0x6da0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0277
        gbc.setState(0xccb4, 0x2929, 0xd790, 0x253b, 0x4d5c, 0x48a1, 0x1, 0x1);
        gbc.writeMem(0xccb4, { 0xca, 0x16, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2929);
        EXPECT(gbc.pc(), 0xd916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccb4), 0xca);
        EXPECT(gbc.readMem(0xccb5), 0x16);
        EXPECT(gbc.readMem(0xccb6), 0xd9);
        // CA 0279
        gbc.setState(0x8fdc, 0x48d, 0x6940, 0xf893, 0xd0ab, 0xed89, 0x0, 0x0);
        gbc.writeMem(0x8fdc, { 0xca, 0xfe, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x48d);
        EXPECT(gbc.pc(), 0x8fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fdc), 0xca);
        EXPECT(gbc.readMem(0x8fdd), 0xfe);
        EXPECT(gbc.readMem(0x8fde), 0x5b);
        // CA 027B
        gbc.setState(0xae47, 0xcd, 0x7db0, 0x41df, 0xe04e, 0x86da, 0x0, 0x0);
        gbc.writeMem(0xae47, { 0xca, 0x4f, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xcd);
        EXPECT(gbc.pc(), 0xd84f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae47), 0xca);
        EXPECT(gbc.readMem(0xae48), 0x4f);
        EXPECT(gbc.readMem(0xae49), 0xd8);
        // CA 027C
        gbc.setState(0x5766, 0xd69e, 0xade0, 0xa7ad, 0x3f5e, 0xeda0, 0x0, 0x0);
        gbc.writeMem(0x5766, { 0xca, 0x19, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd69e);
        EXPECT(gbc.pc(), 0xcc19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 027D
        gbc.setState(0x1cf5, 0x579b, 0x28e0, 0x4cc9, 0x5803, 0x75c8, 0x0, 0x1);
        gbc.writeMem(0x1cf5, { 0xca, 0xd3, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x579b);
        EXPECT(gbc.pc(), 0xddd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 027E
        gbc.setState(0x6e07, 0x6a5a, 0xcb10, 0x3be, 0xb712, 0xd02f, 0x0, 0x1);
        gbc.writeMem(0x6e07, { 0xca, 0xf4, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6a5a);
        EXPECT(gbc.pc(), 0x6e0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 027F
        gbc.setState(0xa7c9, 0xed68, 0xf210, 0x601b, 0x3039, 0xd997, 0x0, 0x0);
        gbc.writeMem(0xa7c9, { 0xca, 0x46, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xed68);
        EXPECT(gbc.pc(), 0xa7cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7c9), 0xca);
        EXPECT(gbc.readMem(0xa7ca), 0x46);
        EXPECT(gbc.readMem(0xa7cb), 0x8a);
        // CA 0280
        gbc.setState(0xae48, 0x74a8, 0xc450, 0xddc2, 0x1168, 0xd852, 0x1, 0x1);
        gbc.writeMem(0xae48, { 0xca, 0xd8, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x74a8);
        EXPECT(gbc.pc(), 0xae4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae48), 0xca);
        EXPECT(gbc.readMem(0xae49), 0xd8);
        EXPECT(gbc.readMem(0xae4a), 0xdb);
        // CA 0281
        gbc.setState(0xa91f, 0x3ad6, 0xda60, 0xf001, 0x9fdf, 0x109c, 0x0, 0x1);
        gbc.writeMem(0xa91f, { 0xca, 0xa7, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3ad6);
        EXPECT(gbc.pc(), 0xa922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa91f), 0xca);
        EXPECT(gbc.readMem(0xa920), 0xa7);
        EXPECT(gbc.readMem(0xa921), 0xd9);
        // CA 0282
        gbc.setState(0xa9be, 0xbf1a, 0x1740, 0xeab9, 0xea22, 0xd762, 0x1, 0x0);
        gbc.writeMem(0xa9be, { 0xca, 0xfa, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xbf1a);
        EXPECT(gbc.pc(), 0xa9c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9be), 0xca);
        EXPECT(gbc.readMem(0xa9bf), 0xfa);
        EXPECT(gbc.readMem(0xa9c0), 0x57);
        // CA 0283
        gbc.setState(0xa97f, 0x418b, 0xead0, 0x8969, 0x642c, 0xfc93, 0x1, 0x0);
        gbc.writeMem(0xa97f, { 0xca, 0xdf, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x418b);
        EXPECT(gbc.pc(), 0x1df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa97f), 0xca);
        EXPECT(gbc.readMem(0xa980), 0xdf);
        EXPECT(gbc.readMem(0xa981), 0x1);
        // CA 0284
        gbc.setState(0x902f, 0xd743, 0xcb10, 0xc604, 0xb77, 0xf8cc, 0x0, 0x1);
        gbc.writeMem(0x902f, { 0xca, 0xb6, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd743);
        EXPECT(gbc.pc(), 0x9032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x902f), 0xca);
        EXPECT(gbc.readMem(0x9030), 0xb6);
        EXPECT(gbc.readMem(0x9031), 0xf4);
        // CA 0285
        gbc.setState(0xc47d, 0x8d92, 0x1250, 0x489a, 0x4324, 0x5bbb, 0x1, 0x0);
        gbc.writeMem(0xc47d, { 0xca, 0xe, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8d92);
        EXPECT(gbc.pc(), 0xc480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc47d), 0xca);
        EXPECT(gbc.readMem(0xc47e), 0xe);
        EXPECT(gbc.readMem(0xc47f), 0x12);
        // CA 0286
        gbc.setState(0xc876, 0x48a, 0xfee0, 0x93ca, 0xd0f7, 0x50ac, 0x0, 0x0);
        gbc.writeMem(0xc876, { 0xca, 0x1b, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x48a);
        EXPECT(gbc.pc(), 0x7f1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc876), 0xca);
        EXPECT(gbc.readMem(0xc877), 0x1b);
        EXPECT(gbc.readMem(0xc878), 0x7f);
        // CA 0288
        gbc.setState(0x305b, 0x93d5, 0x3470, 0x651c, 0xaf25, 0xf2fb, 0x0, 0x0);
        gbc.writeMem(0x305b, { 0xca, 0x9e, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x93d5);
        EXPECT(gbc.pc(), 0x305e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0289
        gbc.setState(0x9caf, 0xd8ac, 0x3170, 0x9893, 0x9fd4, 0x6775, 0x0, 0x1);
        gbc.writeMem(0x9caf, { 0xca, 0xa7, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd8ac);
        EXPECT(gbc.pc(), 0x9cb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9caf), 0xca);
        EXPECT(gbc.readMem(0x9cb0), 0xa7);
        EXPECT(gbc.readMem(0x9cb1), 0x31);
        // CA 028A
        gbc.setState(0xbf79, 0xf2e4, 0xa8d0, 0x24e1, 0xe36f, 0x3723, 0x1, 0x1);
        gbc.writeMem(0xbf79, { 0xca, 0xcc, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf2e4);
        EXPECT(gbc.pc(), 0x4bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf79), 0xca);
        EXPECT(gbc.readMem(0xbf7a), 0xcc);
        EXPECT(gbc.readMem(0xbf7b), 0x4b);
        // CA 028B
        gbc.setState(0x189e, 0x2463, 0xba00, 0xc5d4, 0xc09a, 0xee62, 0x1, 0x1);
        gbc.writeMem(0x189e, { 0xca, 0x77, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2463);
        EXPECT(gbc.pc(), 0x18a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 028E
        gbc.setState(0x7364, 0xe18c, 0x3640, 0x9d96, 0x9e9f, 0x124f, 0x0, 0x1);
        gbc.writeMem(0x7364, { 0xca, 0xb5, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe18c);
        EXPECT(gbc.pc(), 0x7367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 028F
        gbc.setState(0x2ce1, 0xc16f, 0x8780, 0x4e24, 0x284, 0x1223, 0x0, 0x0);
        gbc.writeMem(0x2ce1, { 0xca, 0x90, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc16f);
        EXPECT(gbc.pc(), 0xb990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0290
        gbc.setState(0x780a, 0xa27b, 0xb950, 0x778f, 0x625c, 0x3348, 0x1, 0x1);
        gbc.writeMem(0x780a, { 0xca, 0xad, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa27b);
        EXPECT(gbc.pc(), 0x780d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0291
        gbc.setState(0x88db, 0xaf05, 0xd970, 0x2432, 0x8a14, 0x6eb0, 0x0, 0x1);
        gbc.writeMem(0x88db, { 0xca, 0x3b, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xaf05);
        EXPECT(gbc.pc(), 0x88de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88db), 0xca);
        EXPECT(gbc.readMem(0x88dc), 0x3b);
        EXPECT(gbc.readMem(0x88dd), 0x9);
        // CA 0292
        gbc.setState(0x842d, 0x8558, 0xcbc0, 0xf944, 0x9bf, 0x5cbb, 0x0, 0x1);
        gbc.writeMem(0x842d, { 0xca, 0xd4, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8558);
        EXPECT(gbc.pc(), 0xdcd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x842d), 0xca);
        EXPECT(gbc.readMem(0x842e), 0xd4);
        EXPECT(gbc.readMem(0x842f), 0xdc);
        // CA 0293
        gbc.setState(0xeab8, 0x384f, 0xddc0, 0x1e59, 0xe5e3, 0x19df, 0x1, 0x0);
        gbc.writeMem(0xeab8, { 0xca, 0x2d, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x384f);
        EXPECT(gbc.pc(), 0x172d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeab8), 0xca);
        EXPECT(gbc.readMem(0xeab9), 0x2d);
        EXPECT(gbc.readMem(0xeaba), 0x17);
        // CA 0294
        gbc.setState(0xe8e3, 0xc8a2, 0x4120, 0x6944, 0x79c5, 0x1d15, 0x1, 0x1);
        gbc.writeMem(0xe8e3, { 0xca, 0xdc, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc8a2);
        EXPECT(gbc.pc(), 0xe8e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8e3), 0xca);
        EXPECT(gbc.readMem(0xe8e4), 0xdc);
        EXPECT(gbc.readMem(0xe8e5), 0x48);
        // CA 0295
        gbc.setState(0x1d5a, 0x6d78, 0x750, 0xda9, 0xa10c, 0xea23, 0x0, 0x1);
        gbc.writeMem(0x1d5a, { 0xca, 0x15, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6d78);
        EXPECT(gbc.pc(), 0x1d5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0296
        gbc.setState(0xa321, 0xd2f1, 0xfda0, 0x2011, 0xae8b, 0x1e7c, 0x1, 0x0);
        gbc.writeMem(0xa321, { 0xca, 0x7e, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd2f1);
        EXPECT(gbc.pc(), 0x577e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa321), 0xca);
        EXPECT(gbc.readMem(0xa322), 0x7e);
        EXPECT(gbc.readMem(0xa323), 0x57);
        // CA 0297
        gbc.setState(0x1018, 0x20ae, 0xe80, 0x6519, 0xb7d9, 0xb1fa, 0x0, 0x0);
        gbc.writeMem(0x1018, { 0xca, 0x4, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x20ae);
        EXPECT(gbc.pc(), 0x9104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0299
        gbc.setState(0x571c, 0xef80, 0xddf0, 0x98d6, 0xa7ef, 0xaeb7, 0x1, 0x1);
        gbc.writeMem(0x571c, { 0xca, 0xff, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xef80);
        EXPECT(gbc.pc(), 0xf1ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 029A
        gbc.setState(0x8214, 0xeeb5, 0x4ad0, 0xeba1, 0xb351, 0xa84e, 0x0, 0x0);
        gbc.writeMem(0x8214, { 0xca, 0x73, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xeeb5);
        EXPECT(gbc.pc(), 0x2e73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8214), 0xca);
        EXPECT(gbc.readMem(0x8215), 0x73);
        EXPECT(gbc.readMem(0x8216), 0x2e);
        // CA 029B
        gbc.setState(0xaec5, 0xbc69, 0xd100, 0x1103, 0x2689, 0xe2d7, 0x1, 0x1);
        gbc.writeMem(0xaec5, { 0xca, 0x59, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xbc69);
        EXPECT(gbc.pc(), 0xaec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec5), 0xca);
        EXPECT(gbc.readMem(0xaec6), 0x59);
        EXPECT(gbc.readMem(0xaec7), 0xba);
        // CA 029E
        gbc.setState(0xbcef, 0x82c5, 0xcb10, 0x97c6, 0x26b5, 0xbec9, 0x0, 0x1);
        gbc.writeMem(0xbcef, { 0xca, 0xa7, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x82c5);
        EXPECT(gbc.pc(), 0xbcf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcef), 0xca);
        EXPECT(gbc.readMem(0xbcf0), 0xa7);
        EXPECT(gbc.readMem(0xbcf1), 0x9e);
        // CA 029F
        gbc.setState(0xe068, 0x51c2, 0x6c90, 0xe940, 0xa93b, 0xdc9f, 0x1, 0x0);
        gbc.writeMem(0xe068, { 0xca, 0xc2, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x51c2);
        EXPECT(gbc.pc(), 0x78c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe068), 0xca);
        EXPECT(gbc.readMem(0xe069), 0xc2);
        EXPECT(gbc.readMem(0xe06a), 0x78);
        // CA 02A0
        gbc.setState(0x9cbc, 0x3e46, 0xb740, 0xe3c2, 0x7cc, 0x8673, 0x1, 0x1);
        gbc.writeMem(0x9cbc, { 0xca, 0x4c, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3e46);
        EXPECT(gbc.pc(), 0x9cbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cbc), 0xca);
        EXPECT(gbc.readMem(0x9cbd), 0x4c);
        EXPECT(gbc.readMem(0x9cbe), 0xa0);
        // CA 02A1
        gbc.setState(0x50ad, 0x105a, 0xc630, 0xb8cc, 0x954, 0x1e09, 0x1, 0x0);
        gbc.writeMem(0x50ad, { 0xca, 0xf9, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x105a);
        EXPECT(gbc.pc(), 0x50b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02A2
        gbc.setState(0x4ce4, 0xd9b6, 0xf50, 0x4ba7, 0x33cc, 0x700e, 0x0, 0x0);
        gbc.writeMem(0x4ce4, { 0xca, 0xe8, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd9b6);
        EXPECT(gbc.pc(), 0x4ce7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 02A3
        gbc.setState(0x979d, 0xd976, 0xcf90, 0xabbf, 0x5ec, 0x929d, 0x1, 0x1);
        gbc.writeMem(0x979d, { 0xca, 0xc1, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd976);
        EXPECT(gbc.pc(), 0xbbc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x979d), 0xca);
        EXPECT(gbc.readMem(0x979e), 0xc1);
        EXPECT(gbc.readMem(0x979f), 0xbb);
        // CA 02A4
        gbc.setState(0xa008, 0xd3fd, 0xcc70, 0xaf80, 0xde6b, 0x4d62, 0x0, 0x1);
        gbc.writeMem(0xa008, { 0xca, 0x22, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd3fd);
        EXPECT(gbc.pc(), 0xa00b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa008), 0xca);
        EXPECT(gbc.readMem(0xa009), 0x22);
        EXPECT(gbc.readMem(0xa00a), 0xb6);
        // CA 02A5
        gbc.setState(0xc11c, 0xa65e, 0x5250, 0xc373, 0x9bdd, 0x9ff5, 0x0, 0x0);
        gbc.writeMem(0xc11c, { 0xca, 0x7f, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa65e);
        EXPECT(gbc.pc(), 0xc11f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc11c), 0xca);
        EXPECT(gbc.readMem(0xc11d), 0x7f);
        EXPECT(gbc.readMem(0xc11e), 0x6d);
        // CA 02A6
        gbc.setState(0xb2a, 0x211a, 0x85f0, 0x5e0a, 0xbb4f, 0x8cf5, 0x0, 0x0);
        gbc.writeMem(0xb2a, { 0xca, 0xbe, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x211a);
        EXPECT(gbc.pc(), 0xdabe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02A7
        gbc.setState(0x1d14, 0xe7a5, 0xf8e0, 0x5a23, 0x4a8c, 0x2930, 0x1, 0x0);
        gbc.writeMem(0x1d14, { 0xca, 0x11, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe7a5);
        EXPECT(gbc.pc(), 0xf111);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 02A8
        gbc.setState(0xe49e, 0x616a, 0xb090, 0x7265, 0xf0b4, 0xddde, 0x0, 0x0);
        gbc.writeMem(0xe49e, { 0xca, 0xbf, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x616a);
        EXPECT(gbc.pc(), 0x25bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe49e), 0xca);
        EXPECT(gbc.readMem(0xe49f), 0xbf);
        EXPECT(gbc.readMem(0xe4a0), 0x25);
        // CA 02A9
        gbc.setState(0x9af, 0xf38c, 0x8f50, 0x3641, 0x2a39, 0x3556, 0x1, 0x1);
        gbc.writeMem(0x9af, { 0xca, 0x3a, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf38c);
        EXPECT(gbc.pc(), 0x9b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 02AA
        gbc.setState(0x63d4, 0xeca0, 0x7320, 0xda62, 0x8442, 0x31cc, 0x0, 0x1);
        gbc.writeMem(0x63d4, { 0xca, 0xe6, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xeca0);
        EXPECT(gbc.pc(), 0x63d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 02AC
        gbc.setState(0x77d3, 0x4a39, 0x0, 0xf72d, 0x90fc, 0x5e7b, 0x1, 0x0);
        gbc.writeMem(0x77d3, { 0xca, 0xcb, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4a39);
        EXPECT(gbc.pc(), 0x77d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 02AD
        gbc.setState(0x2bb8, 0xbe0c, 0xf020, 0x1956, 0x679d, 0xab78, 0x0, 0x1);
        gbc.writeMem(0x2bb8, { 0xca, 0xb3, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbe0c);
        EXPECT(gbc.pc(), 0x2bbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 02AE
        gbc.setState(0x181, 0x1d7e, 0x1b0, 0x70c9, 0x2ff0, 0xe45e, 0x1, 0x1);
        gbc.writeMem(0x181, { 0xca, 0xae, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1d7e);
        EXPECT(gbc.pc(), 0xb4ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02AF
        gbc.setState(0x9805, 0xc317, 0x1f80, 0xc0b4, 0x141f, 0xd284, 0x1, 0x0);
        gbc.writeMem(0x9805, { 0xca, 0xb1, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc317);
        EXPECT(gbc.pc(), 0xc1b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9805), 0xca);
        EXPECT(gbc.readMem(0x9806), 0xb1);
        EXPECT(gbc.readMem(0x9807), 0xc1);
        // CA 02B0
        gbc.setState(0xda69, 0x715a, 0x8c0, 0x495f, 0xb8b9, 0x9c92, 0x1, 0x1);
        gbc.writeMem(0xda69, { 0xca, 0x2, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x715a);
        EXPECT(gbc.pc(), 0x7102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda69), 0xca);
        EXPECT(gbc.readMem(0xda6a), 0x2);
        EXPECT(gbc.readMem(0xda6b), 0x71);
        // CA 02B1
        gbc.setState(0x11b1, 0xa7c8, 0x3990, 0x4956, 0xeedb, 0x7115, 0x0, 0x1);
        gbc.writeMem(0x11b1, { 0xca, 0xf6, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa7c8);
        EXPECT(gbc.pc(), 0x2df6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 02B2
        gbc.setState(0xabb2, 0x6580, 0x7b0, 0x60ae, 0xfada, 0x6b80, 0x1, 0x0);
        gbc.writeMem(0xabb2, { 0xca, 0xab, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6580);
        EXPECT(gbc.pc(), 0x8fab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabb2), 0xca);
        EXPECT(gbc.readMem(0xabb3), 0xab);
        EXPECT(gbc.readMem(0xabb4), 0x8f);
        // CA 02B3
        gbc.setState(0x2600, 0x89da, 0x1d50, 0xb20a, 0xd32b, 0x7a4b, 0x0, 0x1);
        gbc.writeMem(0x2600, { 0xca, 0x92, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x89da);
        EXPECT(gbc.pc(), 0x2603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 02B4
        gbc.setState(0x4c58, 0x655c, 0x5c30, 0xc6af, 0x3a08, 0x4d1, 0x1, 0x0);
        gbc.writeMem(0x4c58, { 0xca, 0xb9, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x655c);
        EXPECT(gbc.pc(), 0x4c5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02B5
        gbc.setState(0x7a8a, 0x44ba, 0xf260, 0xe1e8, 0xa9b8, 0x882b, 0x1, 0x0);
        gbc.writeMem(0x7a8a, { 0xca, 0xba, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x44ba);
        EXPECT(gbc.pc(), 0x7a8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 02B6
        gbc.setState(0x510, 0x3f6, 0x1d60, 0x81e8, 0x781, 0x2368, 0x1, 0x1);
        gbc.writeMem(0x510, { 0xca, 0xd6, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3f6);
        EXPECT(gbc.pc(), 0x513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 02B8
        gbc.setState(0x60ad, 0xa8f1, 0x8620, 0xb9ec, 0xb9fd, 0x90e3, 0x1, 0x0);
        gbc.writeMem(0x60ad, { 0xca, 0x96, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa8f1);
        EXPECT(gbc.pc(), 0x60b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 02B9
        gbc.setState(0xb396, 0x301a, 0xa810, 0x5eb9, 0x212f, 0x5a6e, 0x1, 0x1);
        gbc.writeMem(0xb396, { 0xca, 0xc3, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x301a);
        EXPECT(gbc.pc(), 0xb399);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb396), 0xca);
        EXPECT(gbc.readMem(0xb397), 0xc3);
        EXPECT(gbc.readMem(0xb398), 0xb5);
        // CA 02BA
        gbc.setState(0x6bc9, 0x89b8, 0x7640, 0xa986, 0xf841, 0xd6b0, 0x0, 0x0);
        gbc.writeMem(0x6bc9, { 0xca, 0x7d, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x89b8);
        EXPECT(gbc.pc(), 0x6bcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 02BB
        gbc.setState(0x98d1, 0x841f, 0x2ac0, 0x3037, 0x1008, 0x61d5, 0x1, 0x0);
        gbc.writeMem(0x98d1, { 0xca, 0x1f, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x841f);
        EXPECT(gbc.pc(), 0xf51f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d1), 0xca);
        EXPECT(gbc.readMem(0x98d2), 0x1f);
        EXPECT(gbc.readMem(0x98d3), 0xf5);
        // CA 02BC
        gbc.setState(0xd62a, 0x248c, 0x2b60, 0xdbbd, 0x1a9c, 0x9968, 0x0, 0x0);
        gbc.writeMem(0xd62a, { 0xca, 0xfa, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x248c);
        EXPECT(gbc.pc(), 0xd62d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd62a), 0xca);
        EXPECT(gbc.readMem(0xd62b), 0xfa);
        EXPECT(gbc.readMem(0xd62c), 0xb);
        // CA 02BD
        gbc.setState(0x96c9, 0xd1af, 0x4e00, 0x40a0, 0x701f, 0x27a1, 0x1, 0x1);
        gbc.writeMem(0x96c9, { 0xca, 0x96, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd1af);
        EXPECT(gbc.pc(), 0x96cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96c9), 0xca);
        EXPECT(gbc.readMem(0x96ca), 0x96);
        EXPECT(gbc.readMem(0x96cb), 0x5b);
        // CA 02BE
        gbc.setState(0x3c8b, 0x21f1, 0x3390, 0x2d57, 0x158b, 0xe609, 0x0, 0x1);
        gbc.writeMem(0x3c8b, { 0xca, 0x30, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x21f1);
        EXPECT(gbc.pc(), 0x7530);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 02BF
        gbc.setState(0xc54a, 0x2adc, 0x21a0, 0xa569, 0x191d, 0xedb9, 0x1, 0x0);
        gbc.writeMem(0xc54a, { 0xca, 0xda, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2adc);
        EXPECT(gbc.pc(), 0x39da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc54a), 0xca);
        EXPECT(gbc.readMem(0xc54b), 0xda);
        EXPECT(gbc.readMem(0xc54c), 0x39);
        // CA 02C0
        gbc.setState(0xe849, 0x74df, 0x2cc0, 0xe15f, 0xab4f, 0x57c1, 0x1, 0x0);
        gbc.writeMem(0xe849, { 0xca, 0x41, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x74df);
        EXPECT(gbc.pc(), 0xf241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe849), 0xca);
        EXPECT(gbc.readMem(0xe84a), 0x41);
        EXPECT(gbc.readMem(0xe84b), 0xf2);
        // CA 02C1
        gbc.setState(0x5af9, 0x6a19, 0x8ef0, 0x3c45, 0x2b99, 0x7cf7, 0x0, 0x0);
        gbc.writeMem(0x5af9, { 0xca, 0x7a, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6a19);
        EXPECT(gbc.pc(), 0x967a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02C2
        gbc.setState(0x6cf2, 0x7f3c, 0x6470, 0x2f57, 0x182a, 0xd6b6, 0x1, 0x0);
        gbc.writeMem(0x6cf2, { 0xca, 0x15, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7f3c);
        EXPECT(gbc.pc(), 0x6cf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02C3
        gbc.setState(0xf5a, 0xb79a, 0xbf70, 0xc297, 0xad79, 0xe530, 0x0, 0x1);
        gbc.writeMem(0xf5a, { 0xca, 0xb6, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb79a);
        EXPECT(gbc.pc(), 0xf5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02C4
        gbc.setState(0xa384, 0x9bfb, 0x84e0, 0x549a, 0xd136, 0x333f, 0x0, 0x0);
        gbc.writeMem(0xa384, { 0xca, 0x82, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9bfb);
        EXPECT(gbc.pc(), 0x8c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa384), 0xca);
        EXPECT(gbc.readMem(0xa385), 0x82);
        EXPECT(gbc.readMem(0xa386), 0x8c);
        // CA 02C5
        gbc.setState(0x5ab9, 0x79f4, 0xf140, 0x8cbf, 0x5839, 0x6462, 0x0, 0x0);
        gbc.writeMem(0x5ab9, { 0xca, 0xba, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x79f4);
        EXPECT(gbc.pc(), 0x5abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 02C6
        gbc.setState(0x1c25, 0xe0bc, 0xfde0, 0x84be, 0xd34, 0x6870, 0x0, 0x1);
        gbc.writeMem(0x1c25, { 0xca, 0x17, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe0bc);
        EXPECT(gbc.pc(), 0x8717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 02C7
        gbc.setState(0x90be, 0xf33a, 0x72a0, 0xc5d8, 0xa8c3, 0x8fa1, 0x0, 0x0);
        gbc.writeMem(0x90be, { 0xca, 0x65, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf33a);
        EXPECT(gbc.pc(), 0x865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90be), 0xca);
        EXPECT(gbc.readMem(0x90bf), 0x65);
        EXPECT(gbc.readMem(0x90c0), 0x8);
        // CA 02C8
        gbc.setState(0xd4b8, 0xef4f, 0x8090, 0x4a8, 0x3cac, 0x6c6c, 0x0, 0x0);
        gbc.writeMem(0xd4b8, { 0xca, 0x30, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xef4f);
        EXPECT(gbc.pc(), 0x7b30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4b8), 0xca);
        EXPECT(gbc.readMem(0xd4b9), 0x30);
        EXPECT(gbc.readMem(0xd4ba), 0x7b);
        // CA 02C9
        gbc.setState(0x3b33, 0xdf94, 0xf360, 0xa5e1, 0x847f, 0xe297, 0x0, 0x0);
        gbc.writeMem(0x3b33, { 0xca, 0x2d, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xdf94);
        EXPECT(gbc.pc(), 0x3b36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 02CA
        gbc.setState(0x48d5, 0xe1d8, 0x3660, 0xdad4, 0xce13, 0x6ef5, 0x0, 0x0);
        gbc.writeMem(0x48d5, { 0xca, 0x1e, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe1d8);
        EXPECT(gbc.pc(), 0x48d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 02CB
        gbc.setState(0xe701, 0xf184, 0x1ed0, 0x746c, 0x9c43, 0x8592, 0x1, 0x1);
        gbc.writeMem(0xe701, { 0xca, 0x49, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf184);
        EXPECT(gbc.pc(), 0xbd49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe701), 0xca);
        EXPECT(gbc.readMem(0xe702), 0x49);
        EXPECT(gbc.readMem(0xe703), 0xbd);
        // CA 02CC
        gbc.setState(0xd345, 0xb1e, 0xda50, 0xf4e8, 0x4297, 0x5668, 0x1, 0x0);
        gbc.writeMem(0xd345, { 0xca, 0x39, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb1e);
        EXPECT(gbc.pc(), 0xd348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd345), 0xca);
        EXPECT(gbc.readMem(0xd346), 0x39);
        EXPECT(gbc.readMem(0xd347), 0xf3);
        // CA 02CD
        gbc.setState(0xb3ba, 0xabfa, 0xb830, 0xdad1, 0xeb07, 0x36f0, 0x0, 0x1);
        gbc.writeMem(0xb3ba, { 0xca, 0x7c, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xabfa);
        EXPECT(gbc.pc(), 0xb3bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3ba), 0xca);
        EXPECT(gbc.readMem(0xb3bb), 0x7c);
        EXPECT(gbc.readMem(0xb3bc), 0xa8);
        // CA 02CE
        gbc.setState(0x2b94, 0x8317, 0x79d0, 0x8e9f, 0xc021, 0x2e3e, 0x0, 0x1);
        gbc.writeMem(0x2b94, { 0xca, 0x1d, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8317);
        EXPECT(gbc.pc(), 0xfe1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 02CF
        gbc.setState(0xe45c, 0x6d06, 0x28f0, 0xff06, 0xc8de, 0xfb16, 0x0, 0x0);
        gbc.writeMem(0xe45c, { 0xca, 0x29, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6d06);
        EXPECT(gbc.pc(), 0xd29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe45c), 0xca);
        EXPECT(gbc.readMem(0xe45d), 0x29);
        EXPECT(gbc.readMem(0xe45e), 0xd);
        // CA 02D1
        gbc.setState(0x4d54, 0x8540, 0xc910, 0x56d9, 0xc1c2, 0x3f6a, 0x0, 0x0);
        gbc.writeMem(0x4d54, { 0xca, 0x27, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8540);
        EXPECT(gbc.pc(), 0x4d57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 02D2
        gbc.setState(0x2f50, 0x8cc5, 0xf9b0, 0xbcc0, 0x36a3, 0x340, 0x1, 0x1);
        gbc.writeMem(0x2f50, { 0xca, 0x99, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8cc5);
        EXPECT(gbc.pc(), 0x1c99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02D3
        gbc.setState(0x8ef, 0x7dac, 0x6b10, 0x58a7, 0xd939, 0xea17, 0x0, 0x1);
        gbc.writeMem(0x8ef, { 0xca, 0xc, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7dac);
        EXPECT(gbc.pc(), 0x8f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 02D5
        gbc.setState(0x73f7, 0xd8e0, 0x8780, 0x2ba7, 0x99e9, 0xba0d, 0x1, 0x1);
        gbc.writeMem(0x73f7, { 0xca, 0x4c, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd8e0);
        EXPECT(gbc.pc(), 0xd54c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 02D7
        gbc.setState(0xeed1, 0x1dc8, 0x1a80, 0x9623, 0x3c36, 0x482d, 0x1, 0x0);
        gbc.writeMem(0xeed1, { 0xca, 0xe7, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1dc8);
        EXPECT(gbc.pc(), 0x30e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeed1), 0xca);
        EXPECT(gbc.readMem(0xeed2), 0xe7);
        EXPECT(gbc.readMem(0xeed3), 0x30);
        // CA 02D8
        gbc.setState(0x6f98, 0x9438, 0xdb50, 0x5b49, 0x6b61, 0x67b4, 0x0, 0x1);
        gbc.writeMem(0x6f98, { 0xca, 0x58, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9438);
        EXPECT(gbc.pc(), 0x6f9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 02D9
        gbc.setState(0x18f1, 0xbf45, 0x26c0, 0xaae8, 0xc707, 0x5467, 0x0, 0x1);
        gbc.writeMem(0x18f1, { 0xca, 0x6e, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbf45);
        EXPECT(gbc.pc(), 0x1b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 02DA
        gbc.setState(0xa832, 0xc455, 0x17e0, 0x7400, 0x8575, 0xba84, 0x0, 0x1);
        gbc.writeMem(0xa832, { 0xca, 0x38, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc455);
        EXPECT(gbc.pc(), 0x8838);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa832), 0xca);
        EXPECT(gbc.readMem(0xa833), 0x38);
        EXPECT(gbc.readMem(0xa834), 0x88);
        // CA 02DB
        gbc.setState(0xe885, 0xa7d1, 0xaeb0, 0x374a, 0xe858, 0xb6a2, 0x1, 0x1);
        gbc.writeMem(0xe885, { 0xca, 0x27, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa7d1);
        EXPECT(gbc.pc(), 0x2a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe885), 0xca);
        EXPECT(gbc.readMem(0xe886), 0x27);
        EXPECT(gbc.readMem(0xe887), 0x2a);
        // CA 02DC
        gbc.setState(0x7772, 0x801b, 0x5520, 0xdeb7, 0x934a, 0x7c22, 0x1, 0x0);
        gbc.writeMem(0x7772, { 0xca, 0x8, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x801b);
        EXPECT(gbc.pc(), 0x7775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 02DD
        gbc.setState(0xdf67, 0x51ea, 0x13a0, 0xac40, 0xd0c3, 0xbd7b, 0x1, 0x1);
        gbc.writeMem(0xdf67, { 0xca, 0xe6, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x51ea);
        EXPECT(gbc.pc(), 0x37e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf67), 0xca);
        EXPECT(gbc.readMem(0xdf68), 0xe6);
        EXPECT(gbc.readMem(0xdf69), 0x37);
        // CA 02DE
        gbc.setState(0x95d8, 0x6b9c, 0x70, 0x5b19, 0x2138, 0x7b87, 0x1, 0x0);
        gbc.writeMem(0x95d8, { 0xca, 0x14, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6b9c);
        EXPECT(gbc.pc(), 0x95db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d8), 0xca);
        EXPECT(gbc.readMem(0x95d9), 0x14);
        EXPECT(gbc.readMem(0x95da), 0xc3);
        // CA 02DF
        gbc.setState(0x3d5e, 0x86bc, 0xcb50, 0x8d1, 0x6231, 0xdcf, 0x0, 0x0);
        gbc.writeMem(0x3d5e, { 0xca, 0xc7, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x86bc);
        EXPECT(gbc.pc(), 0x3d61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 02E0
        gbc.setState(0x3d9a, 0xac08, 0x5800, 0x70fb, 0xd00f, 0x5ebb, 0x1, 0x1);
        gbc.writeMem(0x3d9a, { 0xca, 0xd, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xac08);
        EXPECT(gbc.pc(), 0x3d9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 02E1
        gbc.setState(0xde08, 0xb170, 0x86b0, 0x520d, 0xf033, 0x58e8, 0x1, 0x1);
        gbc.writeMem(0xde08, { 0xca, 0x71, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb170);
        EXPECT(gbc.pc(), 0xd571);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde08), 0xca);
        EXPECT(gbc.readMem(0xde09), 0x71);
        EXPECT(gbc.readMem(0xde0a), 0xd5);
        // CA 02E2
        gbc.setState(0xca2a, 0xec5f, 0x66d0, 0x14f3, 0xa882, 0x38f5, 0x0, 0x0);
        gbc.writeMem(0xca2a, { 0xca, 0xd6, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xec5f);
        EXPECT(gbc.pc(), 0x23d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca2a), 0xca);
        EXPECT(gbc.readMem(0xca2b), 0xd6);
        EXPECT(gbc.readMem(0xca2c), 0x23);
        // CA 02E3
        gbc.setState(0x4a96, 0x6067, 0xc3f0, 0xf1ca, 0xd931, 0x4760, 0x0, 0x1);
        gbc.writeMem(0x4a96, { 0xca, 0x55, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x6067);
        EXPECT(gbc.pc(), 0x2255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02E4
        gbc.setState(0x8661, 0x5160, 0x2540, 0x599e, 0x186c, 0x404b, 0x0, 0x1);
        gbc.writeMem(0x8661, { 0xca, 0x3b, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5160);
        EXPECT(gbc.pc(), 0x8664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8661), 0xca);
        EXPECT(gbc.readMem(0x8662), 0x3b);
        EXPECT(gbc.readMem(0x8663), 0x7d);
        // CA 02E5
        gbc.setState(0x2039, 0x6016, 0x7d70, 0xea45, 0xb3f4, 0x405d, 0x1, 0x0);
        gbc.writeMem(0x2039, { 0xca, 0x57, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6016);
        EXPECT(gbc.pc(), 0x203c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02E6
        gbc.setState(0x1ab4, 0x8abb, 0x28c0, 0xd7a6, 0xa6ad, 0xe42a, 0x0, 0x1);
        gbc.writeMem(0x1ab4, { 0xca, 0x4, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8abb);
        EXPECT(gbc.pc(), 0xe604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 02E7
        gbc.setState(0xb3cb, 0x71ad, 0xe8e0, 0x4b1a, 0x9d60, 0x69d4, 0x1, 0x0);
        gbc.writeMem(0xb3cb, { 0xca, 0x81, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x71ad);
        EXPECT(gbc.pc(), 0xd681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3cb), 0xca);
        EXPECT(gbc.readMem(0xb3cc), 0x81);
        EXPECT(gbc.readMem(0xb3cd), 0xd6);
        // CA 02E8
        gbc.setState(0x6b29, 0x46c, 0x1e80, 0x9b3e, 0x3f98, 0xacff, 0x1, 0x0);
        gbc.writeMem(0x6b29, { 0xca, 0x92, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x46c);
        EXPECT(gbc.pc(), 0xd292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 02E9
        gbc.setState(0x7e54, 0xb738, 0x1e30, 0xd3f4, 0x6542, 0xbfcb, 0x0, 0x0);
        gbc.writeMem(0x7e54, { 0xca, 0x2b, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb738);
        EXPECT(gbc.pc(), 0x7e57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02EA
        gbc.setState(0x9d52, 0xf4b8, 0x4410, 0x146f, 0xb217, 0x4298, 0x0, 0x1);
        gbc.writeMem(0x9d52, { 0xca, 0xee, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf4b8);
        EXPECT(gbc.pc(), 0x9d55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d52), 0xca);
        EXPECT(gbc.readMem(0x9d53), 0xee);
        EXPECT(gbc.readMem(0x9d54), 0xfa);
        // CA 02EB
        gbc.setState(0x906f, 0x47f5, 0x5850, 0xdf54, 0xd65d, 0x47e8, 0x1, 0x0);
        gbc.writeMem(0x906f, { 0xca, 0x69, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x47f5);
        EXPECT(gbc.pc(), 0x9072);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x906f), 0xca);
        EXPECT(gbc.readMem(0x9070), 0x69);
        EXPECT(gbc.readMem(0x9071), 0x6);
        // CA 02EC
        gbc.setState(0xbfdb, 0x334b, 0x17c0, 0xf7f8, 0xacd2, 0x1b55, 0x1, 0x1);
        gbc.writeMem(0xbfdb, { 0xca, 0xb9, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x334b);
        EXPECT(gbc.pc(), 0x91b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfdb), 0xca);
        EXPECT(gbc.readMem(0xbfdc), 0xb9);
        EXPECT(gbc.readMem(0xbfdd), 0x91);
        // CA 02ED
        gbc.setState(0x3ae1, 0xf2e2, 0x7300, 0x452e, 0xd1e3, 0xe2df, 0x0, 0x1);
        gbc.writeMem(0x3ae1, { 0xca, 0x7, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf2e2);
        EXPECT(gbc.pc(), 0x3ae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 02EE
        gbc.setState(0x1d4e, 0x4eac, 0xbe80, 0x91dc, 0xd5f1, 0xaf81, 0x1, 0x0);
        gbc.writeMem(0x1d4e, { 0xca, 0x3b, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4eac);
        EXPECT(gbc.pc(), 0x5e3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 02EF
        gbc.setState(0x6fb2, 0xf0d1, 0xe3f0, 0x226f, 0x279, 0xe6fb, 0x1, 0x0);
        gbc.writeMem(0x6fb2, { 0xca, 0xf0, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf0d1);
        EXPECT(gbc.pc(), 0x4cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02F1
        gbc.setState(0xdb4a, 0x9f2f, 0x70c0, 0xe568, 0xf2be, 0xe563, 0x0, 0x0);
        gbc.writeMem(0xdb4a, { 0xca, 0x80, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9f2f);
        EXPECT(gbc.pc(), 0xde80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb4a), 0xca);
        EXPECT(gbc.readMem(0xdb4b), 0x80);
        EXPECT(gbc.readMem(0xdb4c), 0xde);
        // CA 02F2
        gbc.setState(0x87da, 0x205b, 0xa060, 0xebe8, 0x528f, 0x672d, 0x0, 0x1);
        gbc.writeMem(0x87da, { 0xca, 0xd0, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x205b);
        EXPECT(gbc.pc(), 0x87dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87da), 0xca);
        EXPECT(gbc.readMem(0x87db), 0xd0);
        EXPECT(gbc.readMem(0x87dc), 0x45);
        // CA 02F3
        gbc.setState(0x62d8, 0xdd5b, 0x44f0, 0x4e86, 0xe1f1, 0xe6c3, 0x1, 0x1);
        gbc.writeMem(0x62d8, { 0xca, 0x9c, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xdd5b);
        EXPECT(gbc.pc(), 0x9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02F4
        gbc.setState(0x7853, 0xe692, 0xab50, 0x680f, 0x78eb, 0xf80d, 0x1, 0x1);
        gbc.writeMem(0x7853, { 0xca, 0xad, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe692);
        EXPECT(gbc.pc(), 0x7856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 02F5
        gbc.setState(0xe818, 0xd129, 0x3400, 0x8b71, 0x937f, 0x1e94, 0x1, 0x0);
        gbc.writeMem(0xe818, { 0xca, 0x33, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd129);
        EXPECT(gbc.pc(), 0xe81b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe818), 0xca);
        EXPECT(gbc.readMem(0xe819), 0x33);
        EXPECT(gbc.readMem(0xe81a), 0x97);
        // CA 02F6
        gbc.setState(0xd1eb, 0xd7d8, 0xedb0, 0xfc72, 0x3aeb, 0xe34b, 0x0, 0x0);
        gbc.writeMem(0xd1eb, { 0xca, 0x31, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd7d8);
        EXPECT(gbc.pc(), 0x7331);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1eb), 0xca);
        EXPECT(gbc.readMem(0xd1ec), 0x31);
        EXPECT(gbc.readMem(0xd1ed), 0x73);
        // CA 02F7
        gbc.setState(0x4aca, 0xd7f1, 0xe2d0, 0xfa48, 0x9693, 0x9a4c, 0x0, 0x0);
        gbc.writeMem(0x4aca, { 0xca, 0xa8, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd7f1);
        EXPECT(gbc.pc(), 0x56a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 02F8
        gbc.setState(0x1626, 0xd417, 0x4940, 0x7b6, 0x6821, 0x7543, 0x0, 0x0);
        gbc.writeMem(0x1626, { 0xca, 0x7d, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd417);
        EXPECT(gbc.pc(), 0x1629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 02F9
        gbc.setState(0x7257, 0xf1a1, 0xd3f0, 0x2831, 0x85a4, 0x23f3, 0x0, 0x1);
        gbc.writeMem(0x7257, { 0xca, 0x79, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf1a1);
        EXPECT(gbc.pc(), 0xd879);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02FA
        gbc.setState(0xe840, 0x99b7, 0xff90, 0x2e8b, 0x47f4, 0xeb6f, 0x0, 0x0);
        gbc.writeMem(0xe840, { 0xca, 0x93, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x99b7);
        EXPECT(gbc.pc(), 0xa093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe840), 0xca);
        EXPECT(gbc.readMem(0xe841), 0x93);
        EXPECT(gbc.readMem(0xe842), 0xa0);
        // CA 02FB
        gbc.setState(0xe22, 0x2298, 0xa40, 0xb5cc, 0xaa57, 0x1dd8, 0x1, 0x1);
        gbc.writeMem(0xe22, { 0xca, 0x12, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2298);
        EXPECT(gbc.pc(), 0xe25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 02FC
        gbc.setState(0xcc5e, 0x3f13, 0x8b90, 0x6a0f, 0xf78a, 0xf220, 0x0, 0x1);
        gbc.writeMem(0xcc5e, { 0xca, 0xc2, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3f13);
        EXPECT(gbc.pc(), 0xf9c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc5e), 0xca);
        EXPECT(gbc.readMem(0xcc5f), 0xc2);
        EXPECT(gbc.readMem(0xcc60), 0xf9);
        // CA 02FD
        gbc.setState(0x219d, 0xbe41, 0xa2b0, 0xd6b7, 0xbb2b, 0xe0c6, 0x0, 0x1);
        gbc.writeMem(0x219d, { 0xca, 0x5, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xbe41);
        EXPECT(gbc.pc(), 0xe05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02FE
        gbc.setState(0x3d0b, 0x9aac, 0xeeb0, 0x2478, 0x9920, 0xac57, 0x1, 0x0);
        gbc.writeMem(0x3d0b, { 0xca, 0x5a, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9aac);
        EXPECT(gbc.pc(), 0xaf5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 02FF
        gbc.setState(0xe8cd, 0x9125, 0xbd70, 0xbfbd, 0x499, 0x84e0, 0x0, 0x0);
        gbc.writeMem(0xe8cd, { 0xca, 0xa7, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9125);
        EXPECT(gbc.pc(), 0xe8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8cd), 0xca);
        EXPECT(gbc.readMem(0xe8ce), 0xa7);
        EXPECT(gbc.readMem(0xe8cf), 0xfc);
        // CA 0300
        gbc.setState(0x7a69, 0x89f6, 0x8270, 0x65e, 0xac91, 0x3cd4, 0x1, 0x0);
        gbc.writeMem(0x7a69, { 0xca, 0xb6, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x89f6);
        EXPECT(gbc.pc(), 0x7a6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0301
        gbc.setState(0x70bc, 0xdf76, 0x6ed0, 0xf0a9, 0xf5ba, 0x7c3c, 0x0, 0x0);
        gbc.writeMem(0x70bc, { 0xca, 0x24, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xdf76);
        EXPECT(gbc.pc(), 0x1024);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0303
        gbc.setState(0x6f53, 0xa618, 0x3c00, 0x1ee0, 0xbc5f, 0xb699, 0x0, 0x0);
        gbc.writeMem(0x6f53, { 0xca, 0x68, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa618);
        EXPECT(gbc.pc(), 0x6f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0304
        gbc.setState(0xc880, 0x2031, 0xd500, 0x36dd, 0x550c, 0x2a92, 0x1, 0x1);
        gbc.writeMem(0xc880, { 0xca, 0x1f, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2031);
        EXPECT(gbc.pc(), 0xc883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc880), 0xca);
        EXPECT(gbc.readMem(0xc881), 0x1f);
        EXPECT(gbc.readMem(0xc882), 0x98);
        // CA 0305
        gbc.setState(0x34f4, 0x2222, 0x1a50, 0xdd1, 0x1366, 0x32ae, 0x0, 0x1);
        gbc.writeMem(0x34f4, { 0xca, 0xc9, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2222);
        EXPECT(gbc.pc(), 0x34f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0306
        gbc.setState(0xc3f4, 0x8318, 0xf640, 0xb9ff, 0x2ed5, 0xbaf9, 0x1, 0x1);
        gbc.writeMem(0xc3f4, { 0xca, 0xd1, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8318);
        EXPECT(gbc.pc(), 0xc3f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3f4), 0xca);
        EXPECT(gbc.readMem(0xc3f5), 0xd1);
        EXPECT(gbc.readMem(0xc3f6), 0x56);
        // CA 0307
        gbc.setState(0xc8e, 0x18b2, 0x8a90, 0xfc2d, 0xf940, 0x7ab5, 0x1, 0x1);
        gbc.writeMem(0xc8e, { 0xca, 0xc3, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x18b2);
        EXPECT(gbc.pc(), 0x8bc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0308
        gbc.setState(0x251d, 0x12c5, 0xd910, 0x2c4e, 0x3345, 0xa64f, 0x1, 0x0);
        gbc.writeMem(0x251d, { 0xca, 0xf1, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x12c5);
        EXPECT(gbc.pc(), 0x2520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0309
        gbc.setState(0x8d98, 0xc912, 0x5c90, 0xc5e, 0x99ef, 0xd4cf, 0x1, 0x0);
        gbc.writeMem(0x8d98, { 0xca, 0x59, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc912);
        EXPECT(gbc.pc(), 0x7659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d98), 0xca);
        EXPECT(gbc.readMem(0x8d99), 0x59);
        EXPECT(gbc.readMem(0x8d9a), 0x76);
        // CA 030B
        gbc.setState(0xad4b, 0xb2aa, 0x5740, 0x7ddf, 0xb5bf, 0x72fd, 0x0, 0x0);
        gbc.writeMem(0xad4b, { 0xca, 0xad, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb2aa);
        EXPECT(gbc.pc(), 0xad4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad4b), 0xca);
        EXPECT(gbc.readMem(0xad4c), 0xad);
        EXPECT(gbc.readMem(0xad4d), 0x8f);
        // CA 030C
        gbc.setState(0xeeb0, 0x8718, 0x7b30, 0xfeff, 0xb4d6, 0x5e51, 0x1, 0x1);
        gbc.writeMem(0xeeb0, { 0xca, 0x43, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8718);
        EXPECT(gbc.pc(), 0xeeb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb0), 0xca);
        EXPECT(gbc.readMem(0xeeb1), 0x43);
        EXPECT(gbc.readMem(0xeeb2), 0x99);
        // CA 030D
        gbc.setState(0xc3b3, 0xd227, 0x1ea0, 0xc180, 0xd713, 0xc9fe, 0x1, 0x0);
        gbc.writeMem(0xc3b3, { 0xca, 0xe3, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd227);
        EXPECT(gbc.pc(), 0xe0e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b3), 0xca);
        EXPECT(gbc.readMem(0xc3b4), 0xe3);
        EXPECT(gbc.readMem(0xc3b5), 0xe0);
        // CA 030E
        gbc.setState(0xcddd, 0xcc99, 0x6300, 0xfd51, 0x5f8f, 0x5cad, 0x0, 0x0);
        gbc.writeMem(0xcddd, { 0xca, 0x5e, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xcc99);
        EXPECT(gbc.pc(), 0xcde0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcddd), 0xca);
        EXPECT(gbc.readMem(0xcdde), 0x5e);
        EXPECT(gbc.readMem(0xcddf), 0x9e);
        // CA 030F
        gbc.setState(0x8287, 0x2e09, 0xc840, 0x60e, 0x3f17, 0x549f, 0x0, 0x0);
        gbc.writeMem(0x8287, { 0xca, 0x7e, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2e09);
        EXPECT(gbc.pc(), 0x828a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8287), 0xca);
        EXPECT(gbc.readMem(0x8288), 0x7e);
        EXPECT(gbc.readMem(0x8289), 0xf7);
        // CA 0310
        gbc.setState(0x7bef, 0x802a, 0xd4a0, 0x24c7, 0x8, 0x1680, 0x0, 0x0);
        gbc.writeMem(0x7bef, { 0xca, 0x41, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x802a);
        EXPECT(gbc.pc(), 0x9c41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0311
        gbc.setState(0xce0c, 0xbd, 0x3000, 0x517c, 0x5df3, 0x772b, 0x1, 0x1);
        gbc.writeMem(0xce0c, { 0xca, 0x98, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbd);
        EXPECT(gbc.pc(), 0xce0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce0c), 0xca);
        EXPECT(gbc.readMem(0xce0d), 0x98);
        EXPECT(gbc.readMem(0xce0e), 0xaa);
        // CA 0312
        gbc.setState(0xb950, 0x720d, 0x3680, 0x5d56, 0xbd24, 0x9d74, 0x1, 0x1);
        gbc.writeMem(0xb950, { 0xca, 0x1d, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x720d);
        EXPECT(gbc.pc(), 0x6c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb950), 0xca);
        EXPECT(gbc.readMem(0xb951), 0x1d);
        EXPECT(gbc.readMem(0xb952), 0x6c);
        // CA 0313
        gbc.setState(0xf97, 0x15c0, 0x3930, 0xbb57, 0x4a32, 0x133a, 0x0, 0x1);
        gbc.writeMem(0xf97, { 0xca, 0x8a, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x15c0);
        EXPECT(gbc.pc(), 0xf9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0314
        gbc.setState(0xf80, 0x7e01, 0x6180, 0xb6cc, 0x2b90, 0x93ab, 0x0, 0x1);
        gbc.writeMem(0xf80, { 0xca, 0x95, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7e01);
        EXPECT(gbc.pc(), 0xf295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0316
        gbc.setState(0x626b, 0x859a, 0xb800, 0x4d48, 0x14ae, 0xbd75, 0x1, 0x1);
        gbc.writeMem(0x626b, { 0xca, 0x23, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x859a);
        EXPECT(gbc.pc(), 0x626e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0317
        gbc.setState(0x5064, 0xd4b4, 0xab80, 0x832, 0x7076, 0xae77, 0x0, 0x1);
        gbc.writeMem(0x5064, { 0xca, 0x26, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd4b4);
        EXPECT(gbc.pc(), 0x5426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0318
        gbc.setState(0x325d, 0x670, 0xa890, 0x858, 0x2282, 0xff88, 0x1, 0x0);
        gbc.writeMem(0x325d, { 0xca, 0x7c, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x670);
        EXPECT(gbc.pc(), 0xc7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0319
        gbc.setState(0x1a79, 0x7389, 0x53d0, 0x1ff8, 0x27f4, 0xe5cf, 0x0, 0x0);
        gbc.writeMem(0x1a79, { 0xca, 0x52, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7389);
        EXPECT(gbc.pc(), 0x5e52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 031A
        gbc.setState(0x16f4, 0x91d3, 0x9010, 0xed1e, 0x1360, 0x4bae, 0x1, 0x0);
        gbc.writeMem(0x16f4, { 0xca, 0x1e, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x91d3);
        EXPECT(gbc.pc(), 0x16f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 031B
        gbc.setState(0x9fe2, 0x434, 0x6ef0, 0x6111, 0x8290, 0xc8eb, 0x0, 0x1);
        gbc.writeMem(0x9fe2, { 0xca, 0xe6, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x434);
        EXPECT(gbc.pc(), 0xe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe2), 0xca);
        EXPECT(gbc.readMem(0x9fe3), 0xe6);
        EXPECT(gbc.readMem(0x9fe4), 0x0);
        // CA 031C
        gbc.setState(0x1603, 0xaf55, 0xb970, 0x561c, 0xcfe5, 0xfce9, 0x0, 0x1);
        gbc.writeMem(0x1603, { 0xca, 0xdc, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xaf55);
        EXPECT(gbc.pc(), 0x1606);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 031D
        gbc.setState(0xf3c, 0xcfb4, 0xac30, 0x5542, 0xf35a, 0xc396, 0x1, 0x1);
        gbc.writeMem(0xf3c, { 0xca, 0xfc, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xcfb4);
        EXPECT(gbc.pc(), 0xf3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 031E
        gbc.setState(0x5590, 0xbfb9, 0xc7d0, 0x69e2, 0x6201, 0xf156, 0x1, 0x1);
        gbc.writeMem(0x5590, { 0xca, 0xe, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xbfb9);
        EXPECT(gbc.pc(), 0xa20e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 031F
        gbc.setState(0x3e6f, 0xfc77, 0x1670, 0x4ad, 0x28db, 0x649f, 0x1, 0x0);
        gbc.writeMem(0x3e6f, { 0xca, 0x69, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xfc77);
        EXPECT(gbc.pc(), 0x3e72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0320
        gbc.setState(0x7947, 0xbc07, 0x3910, 0x1149, 0x4364, 0x111a, 0x1, 0x0);
        gbc.writeMem(0x7947, { 0xca, 0x67, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xbc07);
        EXPECT(gbc.pc(), 0x794a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0321
        gbc.setState(0x374a, 0x5be2, 0x6400, 0x974a, 0x156c, 0x9f30, 0x1, 0x0);
        gbc.writeMem(0x374a, { 0xca, 0xa3, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5be2);
        EXPECT(gbc.pc(), 0x374d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0322
        gbc.setState(0x951d, 0x82a1, 0x18d0, 0x3094, 0x91c, 0xc9a, 0x1, 0x0);
        gbc.writeMem(0x951d, { 0xca, 0x18, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x82a1);
        EXPECT(gbc.pc(), 0x5a18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x951d), 0xca);
        EXPECT(gbc.readMem(0x951e), 0x18);
        EXPECT(gbc.readMem(0x951f), 0x5a);
        // CA 0324
        gbc.setState(0x3f64, 0x245d, 0xacf0, 0x8a8d, 0x375d, 0xf51c, 0x0, 0x1);
        gbc.writeMem(0x3f64, { 0xca, 0x7e, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x245d);
        EXPECT(gbc.pc(), 0xf67e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0325
        gbc.setState(0x3a2, 0x4ecb, 0x49e0, 0xfb05, 0x8bea, 0xfb88, 0x0, 0x1);
        gbc.writeMem(0x3a2, { 0xca, 0x4b, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4ecb);
        EXPECT(gbc.pc(), 0x134b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0326
        gbc.setState(0x2ee2, 0xcc13, 0x4440, 0x9b2, 0xbbd7, 0x3aed, 0x1, 0x1);
        gbc.writeMem(0x2ee2, { 0xca, 0xd0, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xcc13);
        EXPECT(gbc.pc(), 0x2ee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0327
        gbc.setState(0x543a, 0x630c, 0x1430, 0xc89b, 0x75da, 0xa2e1, 0x0, 0x0);
        gbc.writeMem(0x543a, { 0xca, 0xbc, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x630c);
        EXPECT(gbc.pc(), 0x543d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0328
        gbc.setState(0x4e70, 0xb38f, 0x8650, 0x3f91, 0xb93d, 0x5c32, 0x1, 0x1);
        gbc.writeMem(0x4e70, { 0xca, 0xe, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb38f);
        EXPECT(gbc.pc(), 0x4e73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 032A
        gbc.setState(0xdec9, 0xcf52, 0xb270, 0xf2e, 0xa3, 0x390c, 0x0, 0x1);
        gbc.writeMem(0xdec9, { 0xca, 0x14, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xcf52);
        EXPECT(gbc.pc(), 0xdecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdec9), 0xca);
        EXPECT(gbc.readMem(0xdeca), 0x14);
        EXPECT(gbc.readMem(0xdecb), 0xda);
        // CA 032B
        gbc.setState(0x2acb, 0xe1e4, 0x9ed0, 0x6e94, 0xf171, 0xf836, 0x1, 0x1);
        gbc.writeMem(0x2acb, { 0xca, 0x73, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe1e4);
        EXPECT(gbc.pc(), 0x2073);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 032C
        gbc.setState(0x8186, 0xa9ef, 0x8740, 0xf881, 0x5d48, 0x39d2, 0x1, 0x1);
        gbc.writeMem(0x8186, { 0xca, 0x54, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa9ef);
        EXPECT(gbc.pc(), 0x8189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8186), 0xca);
        EXPECT(gbc.readMem(0x8187), 0x54);
        EXPECT(gbc.readMem(0x8188), 0xc5);
        // CA 032D
        gbc.setState(0x47e7, 0xac0a, 0x5b90, 0x6cf2, 0x42c1, 0xf98c, 0x0, 0x1);
        gbc.writeMem(0x47e7, { 0xca, 0x36, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xac0a);
        EXPECT(gbc.pc(), 0x8936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 032E
        gbc.setState(0x8101, 0xe84f, 0xdde0, 0xad96, 0xeffc, 0x3eb5, 0x1, 0x0);
        gbc.writeMem(0x8101, { 0xca, 0x49, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe84f);
        EXPECT(gbc.pc(), 0x6249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8101), 0xca);
        EXPECT(gbc.readMem(0x8102), 0x49);
        EXPECT(gbc.readMem(0x8103), 0x62);
        // CA 032F
        gbc.setState(0x2dea, 0xb3a0, 0xf150, 0x80c5, 0x960f, 0x9ed4, 0x1, 0x0);
        gbc.writeMem(0x2dea, { 0xca, 0x38, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb3a0);
        EXPECT(gbc.pc(), 0x2ded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0330
        gbc.setState(0x32de, 0x6fca, 0x3470, 0x5eab, 0x32db, 0x964e, 0x0, 0x1);
        gbc.writeMem(0x32de, { 0xca, 0xb2, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6fca);
        EXPECT(gbc.pc(), 0x32e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0331
        gbc.setState(0x5c65, 0x20a0, 0x95c0, 0x63c2, 0x2d8e, 0xa84b, 0x1, 0x1);
        gbc.writeMem(0x5c65, { 0xca, 0xe4, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x20a0);
        EXPECT(gbc.pc(), 0xcde4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0332
        gbc.setState(0x881c, 0xf297, 0x9a60, 0x81ac, 0xb6d4, 0xf06, 0x1, 0x0);
        gbc.writeMem(0x881c, { 0xca, 0x88, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf297);
        EXPECT(gbc.pc(), 0x881f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881c), 0xca);
        EXPECT(gbc.readMem(0x881d), 0x88);
        EXPECT(gbc.readMem(0x881e), 0x54);
        // CA 0333
        gbc.setState(0xd1e2, 0xdf13, 0xf940, 0xad69, 0xe5b7, 0x6b64, 0x0, 0x0);
        gbc.writeMem(0xd1e2, { 0xca, 0x34, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xdf13);
        EXPECT(gbc.pc(), 0xd1e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e2), 0xca);
        EXPECT(gbc.readMem(0xd1e3), 0x34);
        EXPECT(gbc.readMem(0xd1e4), 0xa6);
        // CA 0334
        gbc.setState(0x6b2, 0x7f38, 0x2f20, 0x8c95, 0x205f, 0xdbf0, 0x0, 0x0);
        gbc.writeMem(0x6b2, { 0xca, 0x19, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7f38);
        EXPECT(gbc.pc(), 0x6b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0335
        gbc.setState(0x8653, 0x621e, 0x6f90, 0x6950, 0xc5d1, 0xca50, 0x0, 0x0);
        gbc.writeMem(0x8653, { 0xca, 0xa9, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x621e);
        EXPECT(gbc.pc(), 0xf9a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8653), 0xca);
        EXPECT(gbc.readMem(0x8654), 0xa9);
        EXPECT(gbc.readMem(0x8655), 0xf9);
        // CA 0336
        gbc.setState(0x1278, 0x1e7e, 0x5d70, 0xdaad, 0x7e42, 0x3490, 0x0, 0x0);
        gbc.writeMem(0x1278, { 0xca, 0xc1, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1e7e);
        EXPECT(gbc.pc(), 0x127b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0337
        gbc.setState(0x3a65, 0x458c, 0xfcc0, 0x84f3, 0xf03c, 0xb96a, 0x1, 0x1);
        gbc.writeMem(0x3a65, { 0xca, 0xa3, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x458c);
        EXPECT(gbc.pc(), 0xd0a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0338
        gbc.setState(0x6f71, 0xd48, 0xabd0, 0x8365, 0x5f2d, 0xde0b, 0x0, 0x0);
        gbc.writeMem(0x6f71, { 0xca, 0x94, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd48);
        EXPECT(gbc.pc(), 0x7994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0339
        gbc.setState(0x44dd, 0x210e, 0x8340, 0x8d8c, 0xce53, 0x590, 0x0, 0x0);
        gbc.writeMem(0x44dd, { 0xca, 0x91, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x210e);
        EXPECT(gbc.pc(), 0x44e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 033A
        gbc.setState(0xe5f6, 0x962b, 0xda60, 0xc722, 0x2e57, 0xce89, 0x0, 0x0);
        gbc.writeMem(0xe5f6, { 0xca, 0x6d, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x962b);
        EXPECT(gbc.pc(), 0xe5f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5f6), 0xca);
        EXPECT(gbc.readMem(0xe5f7), 0x6d);
        EXPECT(gbc.readMem(0xe5f8), 0xbd);
        // CA 033B
        gbc.setState(0xb135, 0x6a85, 0xabf0, 0xb650, 0x73f4, 0x4d4e, 0x1, 0x0);
        gbc.writeMem(0xb135, { 0xca, 0x1b, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6a85);
        EXPECT(gbc.pc(), 0x451b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb135), 0xca);
        EXPECT(gbc.readMem(0xb136), 0x1b);
        EXPECT(gbc.readMem(0xb137), 0x45);
        // CA 033C
        gbc.setState(0x1f98, 0xa3e6, 0x93d0, 0x80a1, 0x2785, 0x83c9, 0x1, 0x1);
        gbc.writeMem(0x1f98, { 0xca, 0x8f, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa3e6);
        EXPECT(gbc.pc(), 0x478f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 033D
        gbc.setState(0x57ce, 0xe478, 0xa140, 0x1073, 0x2314, 0x757d, 0x0, 0x0);
        gbc.writeMem(0x57ce, { 0xca, 0xc9, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe478);
        EXPECT(gbc.pc(), 0x57d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 033E
        gbc.setState(0x7c6a, 0xd4ef, 0x3340, 0xe8e7, 0x5b1c, 0x58a1, 0x1, 0x1);
        gbc.writeMem(0x7c6a, { 0xca, 0x9e, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd4ef);
        EXPECT(gbc.pc(), 0x7c6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 033F
        gbc.setState(0x641d, 0x463b, 0x3380, 0x96c4, 0xb937, 0x376, 0x1, 0x0);
        gbc.writeMem(0x641d, { 0xca, 0x27, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x463b);
        EXPECT(gbc.pc(), 0x3827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0340
        gbc.setState(0xa4f0, 0xc297, 0x9700, 0xd2e, 0x9509, 0x551a, 0x1, 0x0);
        gbc.writeMem(0xa4f0, { 0xca, 0xc2, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc297);
        EXPECT(gbc.pc(), 0xa4f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4f0), 0xca);
        EXPECT(gbc.readMem(0xa4f1), 0xc2);
        EXPECT(gbc.readMem(0xa4f2), 0x23);
        // CA 0341
        gbc.setState(0x9193, 0x3032, 0x6d40, 0x3ea8, 0xc8f2, 0xa053, 0x0, 0x1);
        gbc.writeMem(0x9193, { 0xca, 0xbf, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3032);
        EXPECT(gbc.pc(), 0x9196);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9193), 0xca);
        EXPECT(gbc.readMem(0x9194), 0xbf);
        EXPECT(gbc.readMem(0x9195), 0x6d);
        // CA 0342
        gbc.setState(0xb5f6, 0x2702, 0x37f0, 0x500e, 0x21cd, 0x5147, 0x1, 0x0);
        gbc.writeMem(0xb5f6, { 0xca, 0xd2, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2702);
        EXPECT(gbc.pc(), 0xaed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f6), 0xca);
        EXPECT(gbc.readMem(0xb5f7), 0xd2);
        EXPECT(gbc.readMem(0xb5f8), 0xae);
        // CA 0343
        gbc.setState(0x8e30, 0x50e4, 0x8a90, 0x445b, 0xb68d, 0xf7fc, 0x0, 0x0);
        gbc.writeMem(0x8e30, { 0xca, 0x22, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x50e4);
        EXPECT(gbc.pc(), 0x7e22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e30), 0xca);
        EXPECT(gbc.readMem(0x8e31), 0x22);
        EXPECT(gbc.readMem(0x8e32), 0x7e);
        // CA 0344
        gbc.setState(0xbd5f, 0x53ab, 0x1a60, 0xee0f, 0x4f3b, 0xd64, 0x1, 0x0);
        gbc.writeMem(0xbd5f, { 0xca, 0xcd, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x53ab);
        EXPECT(gbc.pc(), 0xbd62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd5f), 0xca);
        EXPECT(gbc.readMem(0xbd60), 0xcd);
        EXPECT(gbc.readMem(0xbd61), 0xef);
        // CA 0345
        gbc.setState(0x9c32, 0x2c53, 0xac60, 0xc8ca, 0x2c26, 0x447, 0x0, 0x0);
        gbc.writeMem(0x9c32, { 0xca, 0x3b, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2c53);
        EXPECT(gbc.pc(), 0x9c35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c32), 0xca);
        EXPECT(gbc.readMem(0x9c33), 0x3b);
        EXPECT(gbc.readMem(0x9c34), 0xa2);
        // CA 0346
        gbc.setState(0xd259, 0x1cb7, 0xc00, 0x5476, 0xb1d1, 0xc26c, 0x0, 0x1);
        gbc.writeMem(0xd259, { 0xca, 0x99, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1cb7);
        EXPECT(gbc.pc(), 0xd25c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd259), 0xca);
        EXPECT(gbc.readMem(0xd25a), 0x99);
        EXPECT(gbc.readMem(0xd25b), 0xba);
        // CA 0347
        gbc.setState(0x2681, 0x3191, 0x82c0, 0xe37c, 0x169a, 0x91e3, 0x1, 0x0);
        gbc.writeMem(0x2681, { 0xca, 0x75, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3191);
        EXPECT(gbc.pc(), 0xd975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0348
        gbc.setState(0x4c80, 0xf1fa, 0x3370, 0xd231, 0x5f4e, 0x7ae2, 0x0, 0x0);
        gbc.writeMem(0x4c80, { 0xca, 0x41, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf1fa);
        EXPECT(gbc.pc(), 0x4c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0349
        gbc.setState(0x88c5, 0xf2a4, 0x6530, 0x8fae, 0x47a3, 0xe010, 0x1, 0x1);
        gbc.writeMem(0x88c5, { 0xca, 0xb, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf2a4);
        EXPECT(gbc.pc(), 0x88c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c5), 0xca);
        EXPECT(gbc.readMem(0x88c6), 0xb);
        EXPECT(gbc.readMem(0x88c7), 0x22);
        // CA 034A
        gbc.setState(0x8745, 0xc9ec, 0x6290, 0xcd99, 0xc46d, 0x3cb4, 0x1, 0x0);
        gbc.writeMem(0x8745, { 0xca, 0xe1, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc9ec);
        EXPECT(gbc.pc(), 0x72e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8745), 0xca);
        EXPECT(gbc.readMem(0x8746), 0xe1);
        EXPECT(gbc.readMem(0x8747), 0x72);
        // CA 034B
        gbc.setState(0x596a, 0x99ff, 0x9990, 0x3b2b, 0xa78c, 0x4b91, 0x1, 0x0);
        gbc.writeMem(0x596a, { 0xca, 0xac, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x99ff);
        EXPECT(gbc.pc(), 0x82ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 034C
        gbc.setState(0xc3f5, 0x2795, 0xfce0, 0xfab5, 0x46d4, 0xc64, 0x0, 0x1);
        gbc.writeMem(0xc3f5, { 0xca, 0x56, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2795);
        EXPECT(gbc.pc(), 0x1456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3f5), 0xca);
        EXPECT(gbc.readMem(0xc3f6), 0x56);
        EXPECT(gbc.readMem(0xc3f7), 0x14);
        // CA 034E
        gbc.setState(0x49cc, 0x6ee6, 0x9000, 0x3f20, 0xa9a1, 0xe91a, 0x1, 0x1);
        gbc.writeMem(0x49cc, { 0xca, 0xa, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6ee6);
        EXPECT(gbc.pc(), 0x49cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 034F
        gbc.setState(0xe983, 0xca6a, 0xe1e0, 0x9638, 0x8799, 0xdaf3, 0x1, 0x1);
        gbc.writeMem(0xe983, { 0xca, 0x9b, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xca6a);
        EXPECT(gbc.pc(), 0x379b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe983), 0xca);
        EXPECT(gbc.readMem(0xe984), 0x9b);
        EXPECT(gbc.readMem(0xe985), 0x37);
        // CA 0350
        gbc.setState(0x6ca3, 0x6f94, 0x4780, 0x960b, 0x6137, 0x124, 0x1, 0x0);
        gbc.writeMem(0x6ca3, { 0xca, 0x4a, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6f94);
        EXPECT(gbc.pc(), 0x7b4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0351
        gbc.setState(0x3297, 0x6a53, 0x2130, 0x3d8a, 0x7573, 0x28a8, 0x1, 0x0);
        gbc.writeMem(0x3297, { 0xca, 0x56, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6a53);
        EXPECT(gbc.pc(), 0x329a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0352
        gbc.setState(0x1222, 0x80b5, 0x6b40, 0x82d, 0xd11a, 0x3227, 0x1, 0x1);
        gbc.writeMem(0x1222, { 0xca, 0x46, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x80b5);
        EXPECT(gbc.pc(), 0x1225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0353
        gbc.setState(0x4780, 0x37c8, 0x5420, 0x5129, 0x4504, 0x55cb, 0x1, 0x1);
        gbc.writeMem(0x4780, { 0xca, 0xe2, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x37c8);
        EXPECT(gbc.pc(), 0x4783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0354
        gbc.setState(0xa1ec, 0xceb1, 0x5610, 0x8910, 0x7d25, 0x7be9, 0x1, 0x0);
        gbc.writeMem(0xa1ec, { 0xca, 0x88, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xceb1);
        EXPECT(gbc.pc(), 0xa1ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ec), 0xca);
        EXPECT(gbc.readMem(0xa1ed), 0x88);
        EXPECT(gbc.readMem(0xa1ee), 0x78);
        // CA 0355
        gbc.setState(0x1493, 0xd15f, 0x4f60, 0x165c, 0x37cd, 0x95c0, 0x1, 0x0);
        gbc.writeMem(0x1493, { 0xca, 0xd, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd15f);
        EXPECT(gbc.pc(), 0x1496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0356
        gbc.setState(0x7bec, 0xf58b, 0x73e0, 0xc496, 0x1eed, 0x4ea3, 0x1, 0x0);
        gbc.writeMem(0x7bec, { 0xca, 0xc5, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf58b);
        EXPECT(gbc.pc(), 0x70c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0357
        gbc.setState(0x4ea5, 0x6688, 0xa970, 0xbf2c, 0x61bd, 0x924a, 0x1, 0x0);
        gbc.writeMem(0x4ea5, { 0xca, 0xd2, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6688);
        EXPECT(gbc.pc(), 0x4ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0358
        gbc.setState(0xdaa7, 0x4def, 0xe30, 0xb04e, 0x7a93, 0x82cc, 0x0, 0x1);
        gbc.writeMem(0xdaa7, { 0xca, 0x1e, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4def);
        EXPECT(gbc.pc(), 0xdaaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaa7), 0xca);
        EXPECT(gbc.readMem(0xdaa8), 0x1e);
        EXPECT(gbc.readMem(0xdaa9), 0xb7);
        // CA 0359
        gbc.setState(0xabca, 0x1f6f, 0x5010, 0x5443, 0xfb13, 0xdf47, 0x1, 0x1);
        gbc.writeMem(0xabca, { 0xca, 0x1f, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1f6f);
        EXPECT(gbc.pc(), 0xabcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabca), 0xca);
        EXPECT(gbc.readMem(0xabcb), 0x1f);
        EXPECT(gbc.readMem(0xabcc), 0x12);
        // CA 035A
        gbc.setState(0x1cb0, 0xfd39, 0x38b0, 0xcef4, 0xd09e, 0x6a9, 0x0, 0x0);
        gbc.writeMem(0x1cb0, { 0xca, 0xa3, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xfd39);
        EXPECT(gbc.pc(), 0x74a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 035B
        gbc.setState(0x7345, 0xf4cb, 0x180, 0x478b, 0x9c48, 0xb468, 0x0, 0x0);
        gbc.writeMem(0x7345, { 0xca, 0x44, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf4cb);
        EXPECT(gbc.pc(), 0xbc44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 035C
        gbc.setState(0xa65, 0x7014, 0x1550, 0x4454, 0xda26, 0x7fff, 0x1, 0x1);
        gbc.writeMem(0xa65, { 0xca, 0x1, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7014);
        EXPECT(gbc.pc(), 0xa68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 035D
        gbc.setState(0x4b38, 0xbddc, 0x3370, 0x8266, 0x425e, 0x31fb, 0x0, 0x0);
        gbc.writeMem(0x4b38, { 0xca, 0x74, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbddc);
        EXPECT(gbc.pc(), 0x4b3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 035E
        gbc.setState(0x3982, 0x1ed8, 0x2630, 0xcb5b, 0x31b7, 0x8f66, 0x0, 0x0);
        gbc.writeMem(0x3982, { 0xca, 0x9b, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1ed8);
        EXPECT(gbc.pc(), 0x3985);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 035F
        gbc.setState(0x7bdb, 0xece9, 0xf9d0, 0xec8c, 0x3fa6, 0x12ce, 0x1, 0x0);
        gbc.writeMem(0x7bdb, { 0xca, 0x2d, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xece9);
        EXPECT(gbc.pc(), 0x882d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0360
        gbc.setState(0x80fc, 0x92ad, 0x3f40, 0x7cd3, 0x8d0a, 0x3461, 0x1, 0x0);
        gbc.writeMem(0x80fc, { 0xca, 0x7f, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x92ad);
        EXPECT(gbc.pc(), 0x80ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80fc), 0xca);
        EXPECT(gbc.readMem(0x80fd), 0x7f);
        EXPECT(gbc.readMem(0x80fe), 0xcf);
        // CA 0361
        gbc.setState(0xd25d, 0xcf45, 0xea30, 0x2409, 0x9394, 0xd610, 0x1, 0x0);
        gbc.writeMem(0xd25d, { 0xca, 0x5b, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcf45);
        EXPECT(gbc.pc(), 0xd260);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd25d), 0xca);
        EXPECT(gbc.readMem(0xd25e), 0x5b);
        EXPECT(gbc.readMem(0xd25f), 0x26);
        // CA 0362
        gbc.setState(0xb96b, 0x623c, 0xb1b0, 0xd938, 0xe800, 0x70e7, 0x1, 0x0);
        gbc.writeMem(0xb96b, { 0xca, 0xa5, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x623c);
        EXPECT(gbc.pc(), 0x8aa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb96b), 0xca);
        EXPECT(gbc.readMem(0xb96c), 0xa5);
        EXPECT(gbc.readMem(0xb96d), 0x8a);
        // CA 0363
        gbc.setState(0x5c63, 0x5efa, 0xdf80, 0x5b3e, 0x3c00, 0x9f64, 0x0, 0x0);
        gbc.writeMem(0x5c63, { 0xca, 0x9c, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5efa);
        EXPECT(gbc.pc(), 0xf19c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0364
        gbc.setState(0x5d08, 0x7534, 0xb950, 0x1055, 0xce9a, 0x8d9a, 0x1, 0x0);
        gbc.writeMem(0x5d08, { 0xca, 0x60, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7534);
        EXPECT(gbc.pc(), 0x5d0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0365
        gbc.setState(0x1ce0, 0x9e30, 0xa530, 0x46c0, 0x5a23, 0x6720, 0x1, 0x0);
        gbc.writeMem(0x1ce0, { 0xca, 0x31, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9e30);
        EXPECT(gbc.pc(), 0x1ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0366
        gbc.setState(0xda16, 0x806, 0xd590, 0xd22c, 0xb944, 0x6efb, 0x0, 0x0);
        gbc.writeMem(0xda16, { 0xca, 0xf2, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x806);
        EXPECT(gbc.pc(), 0x7ef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda16), 0xca);
        EXPECT(gbc.readMem(0xda17), 0xf2);
        EXPECT(gbc.readMem(0xda18), 0x7e);
        // CA 0367
        gbc.setState(0xb43c, 0xd3aa, 0xa530, 0xa251, 0xed9f, 0xacc6, 0x1, 0x0);
        gbc.writeMem(0xb43c, { 0xca, 0x0, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd3aa);
        EXPECT(gbc.pc(), 0xb43f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb43c), 0xca);
        EXPECT(gbc.readMem(0xb43d), 0x0);
        EXPECT(gbc.readMem(0xb43e), 0xd7);
        // CA 0368
        gbc.setState(0xe3ea, 0x865a, 0x5f60, 0x9c2f, 0x1c4d, 0x9db0, 0x0, 0x1);
        gbc.writeMem(0xe3ea, { 0xca, 0x2c, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x865a);
        EXPECT(gbc.pc(), 0xe3ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ea), 0xca);
        EXPECT(gbc.readMem(0xe3eb), 0x2c);
        EXPECT(gbc.readMem(0xe3ec), 0x10);
        // CA 0369
        gbc.setState(0xa551, 0x8e86, 0x3390, 0x9ed6, 0xa16a, 0xf127, 0x0, 0x0);
        gbc.writeMem(0xa551, { 0xca, 0xbb, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8e86);
        EXPECT(gbc.pc(), 0xcdbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa551), 0xca);
        EXPECT(gbc.readMem(0xa552), 0xbb);
        EXPECT(gbc.readMem(0xa553), 0xcd);
        // CA 036A
        gbc.setState(0xa35c, 0x9ca1, 0x2740, 0x927d, 0x4b7, 0xd0c2, 0x0, 0x1);
        gbc.writeMem(0xa35c, { 0xca, 0xb1, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9ca1);
        EXPECT(gbc.pc(), 0xa35f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa35c), 0xca);
        EXPECT(gbc.readMem(0xa35d), 0xb1);
        EXPECT(gbc.readMem(0xa35e), 0x33);
        // CA 036C
        gbc.setState(0xe5b4, 0x8dfd, 0x5ef0, 0xcaa9, 0x22a4, 0xab2c, 0x1, 0x0);
        gbc.writeMem(0xe5b4, { 0xca, 0x7a, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x8dfd);
        EXPECT(gbc.pc(), 0xac7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5b4), 0xca);
        EXPECT(gbc.readMem(0xe5b5), 0x7a);
        EXPECT(gbc.readMem(0xe5b6), 0xac);
        // CA 036D
        gbc.setState(0x3824, 0x35ad, 0x2080, 0xd72b, 0x5165, 0x5435, 0x1, 0x1);
        gbc.writeMem(0x3824, { 0xca, 0x83, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x35ad);
        EXPECT(gbc.pc(), 0xd83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 036E
        gbc.setState(0xd4de, 0xa5a6, 0x54f0, 0x23a1, 0x5e55, 0x81ea, 0x1, 0x1);
        gbc.writeMem(0xd4de, { 0xca, 0xdc, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa5a6);
        EXPECT(gbc.pc(), 0x6ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4de), 0xca);
        EXPECT(gbc.readMem(0xd4df), 0xdc);
        EXPECT(gbc.readMem(0xd4e0), 0x6d);
        // CA 036F
        gbc.setState(0x5bc5, 0x26b0, 0x2ea0, 0xe1a9, 0x49f4, 0x7dda, 0x0, 0x1);
        gbc.writeMem(0x5bc5, { 0xca, 0x5, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x26b0);
        EXPECT(gbc.pc(), 0xc805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0370
        gbc.setState(0xc07a, 0x9422, 0xb620, 0x7192, 0x64e2, 0xc5d5, 0x0, 0x0);
        gbc.writeMem(0xc07a, { 0xca, 0xda, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9422);
        EXPECT(gbc.pc(), 0xc07d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc07a), 0xca);
        EXPECT(gbc.readMem(0xc07b), 0xda);
        EXPECT(gbc.readMem(0xc07c), 0xb9);
        // CA 0371
        gbc.setState(0x9a35, 0xabd4, 0x6b40, 0x9359, 0x8cb5, 0xba99, 0x1, 0x0);
        gbc.writeMem(0x9a35, { 0xca, 0x48, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xabd4);
        EXPECT(gbc.pc(), 0x9a38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a35), 0xca);
        EXPECT(gbc.readMem(0x9a36), 0x48);
        EXPECT(gbc.readMem(0x9a37), 0xf4);
        // CA 0372
        gbc.setState(0x7cb2, 0x921f, 0x1d80, 0xe2ad, 0xd6d2, 0x68f, 0x0, 0x1);
        gbc.writeMem(0x7cb2, { 0xca, 0x38, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x921f);
        EXPECT(gbc.pc(), 0x38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0373
        gbc.setState(0x8c42, 0x4e81, 0x4220, 0x1707, 0xaa00, 0xe89b, 0x0, 0x0);
        gbc.writeMem(0x8c42, { 0xca, 0xfa, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4e81);
        EXPECT(gbc.pc(), 0x8c45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c42), 0xca);
        EXPECT(gbc.readMem(0x8c43), 0xfa);
        EXPECT(gbc.readMem(0x8c44), 0x4b);
        // CA 0374
        gbc.setState(0x7b69, 0xf8bd, 0xafb0, 0x293a, 0xfc69, 0xf706, 0x1, 0x1);
        gbc.writeMem(0x7b69, { 0xca, 0x4d, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf8bd);
        EXPECT(gbc.pc(), 0xfa4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0375
        gbc.setState(0x5a43, 0x739b, 0xa190, 0xf8aa, 0x28b7, 0x373d, 0x0, 0x1);
        gbc.writeMem(0x5a43, { 0xca, 0xd2, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x739b);
        EXPECT(gbc.pc(), 0x13d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0377
        gbc.setState(0x25b4, 0x4a94, 0xe830, 0x777c, 0x625f, 0xcdb1, 0x1, 0x0);
        gbc.writeMem(0x25b4, { 0xca, 0x61, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4a94);
        EXPECT(gbc.pc(), 0x25b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0378
        gbc.setState(0x7c8d, 0xa114, 0xdb60, 0x9690, 0x17ea, 0x3668, 0x0, 0x0);
        gbc.writeMem(0x7c8d, { 0xca, 0x14, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa114);
        EXPECT(gbc.pc(), 0x7c90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0379
        gbc.setState(0x75c2, 0x2ebb, 0xd3a0, 0xfafc, 0xbbe6, 0xddf5, 0x0, 0x1);
        gbc.writeMem(0x75c2, { 0xca, 0x22, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2ebb);
        EXPECT(gbc.pc(), 0x622);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 037A
        gbc.setState(0x91, 0x631e, 0xffb0, 0x8e96, 0x3002, 0xc48a, 0x1, 0x1);
        gbc.writeMem(0x91, { 0xca, 0xbb, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x631e);
        EXPECT(gbc.pc(), 0x81bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 037B
        gbc.setState(0xdc6c, 0x3c23, 0xa8a0, 0xa66b, 0xbbfe, 0xbf96, 0x1, 0x0);
        gbc.writeMem(0xdc6c, { 0xca, 0x57, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3c23);
        EXPECT(gbc.pc(), 0x6257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc6c), 0xca);
        EXPECT(gbc.readMem(0xdc6d), 0x57);
        EXPECT(gbc.readMem(0xdc6e), 0x62);
        // CA 037C
        gbc.setState(0xd964, 0x855f, 0xae20, 0xb8ab, 0xc164, 0x206c, 0x0, 0x0);
        gbc.writeMem(0xd964, { 0xca, 0xc7, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x855f);
        EXPECT(gbc.pc(), 0xd967);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd964), 0xca);
        EXPECT(gbc.readMem(0xd965), 0xc7);
        EXPECT(gbc.readMem(0xd966), 0x33);
        // CA 037D
        gbc.setState(0x7ce9, 0xd2f4, 0x8be0, 0xe79b, 0x94df, 0xdb20, 0x0, 0x1);
        gbc.writeMem(0x7ce9, { 0xca, 0x9b, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd2f4);
        EXPECT(gbc.pc(), 0x479b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 037E
        gbc.setState(0xe643, 0x1bfa, 0xff60, 0xcc44, 0x9317, 0xa33d, 0x1, 0x0);
        gbc.writeMem(0xe643, { 0xca, 0x1e, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1bfa);
        EXPECT(gbc.pc(), 0xe646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe643), 0xca);
        EXPECT(gbc.readMem(0xe644), 0x1e);
        EXPECT(gbc.readMem(0xe645), 0xa0);
        // CA 0380
        gbc.setState(0x1f8a, 0x51ba, 0xcd00, 0x823a, 0xcf83, 0x9f05, 0x1, 0x1);
        gbc.writeMem(0x1f8a, { 0xca, 0xa3, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x51ba);
        EXPECT(gbc.pc(), 0x1f8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0381
        gbc.setState(0xc0e1, 0xca46, 0xa70, 0x6dc7, 0x238, 0x1a47, 0x1, 0x1);
        gbc.writeMem(0xc0e1, { 0xca, 0x82, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xca46);
        EXPECT(gbc.pc(), 0xc0e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e1), 0xca);
        EXPECT(gbc.readMem(0xc0e2), 0x82);
        EXPECT(gbc.readMem(0xc0e3), 0x41);
        // CA 0382
        gbc.setState(0xd404, 0xc3b3, 0xa800, 0x4fcb, 0x358a, 0x3da0, 0x0, 0x0);
        gbc.writeMem(0xd404, { 0xca, 0x28, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc3b3);
        EXPECT(gbc.pc(), 0xd407);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd404), 0xca);
        EXPECT(gbc.readMem(0xd405), 0x28);
        EXPECT(gbc.readMem(0xd406), 0x20);
        // CA 0383
        gbc.setState(0x27ed, 0xa81a, 0x9550, 0x2ce9, 0xb074, 0x6c5c, 0x1, 0x0);
        gbc.writeMem(0x27ed, { 0xca, 0xcd, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa81a);
        EXPECT(gbc.pc(), 0x27f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0384
        gbc.setState(0x9c7a, 0xb354, 0xc0d0, 0x42e8, 0x83a6, 0x87ec, 0x1, 0x1);
        gbc.writeMem(0x9c7a, { 0xca, 0xe8, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb354);
        EXPECT(gbc.pc(), 0x33e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c7a), 0xca);
        EXPECT(gbc.readMem(0x9c7b), 0xe8);
        EXPECT(gbc.readMem(0x9c7c), 0x33);
        // CA 0385
        gbc.setState(0x72e9, 0xef89, 0x9480, 0x75e4, 0x8222, 0x2b95, 0x0, 0x0);
        gbc.writeMem(0x72e9, { 0xca, 0x3, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xef89);
        EXPECT(gbc.pc(), 0x8e03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0386
        gbc.setState(0xc6c, 0xcd4c, 0x6e60, 0xfcb2, 0x6523, 0xc7b7, 0x1, 0x0);
        gbc.writeMem(0xc6c, { 0xca, 0x9a, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xcd4c);
        EXPECT(gbc.pc(), 0xc6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0387
        gbc.setState(0x8880, 0xdcd6, 0xcc0, 0xb3da, 0xc027, 0x8dc, 0x1, 0x0);
        gbc.writeMem(0x8880, { 0xca, 0xd4, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xdcd6);
        EXPECT(gbc.pc(), 0x72d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8880), 0xca);
        EXPECT(gbc.readMem(0x8881), 0xd4);
        EXPECT(gbc.readMem(0x8882), 0x72);
        // CA 0388
        gbc.setState(0x34a7, 0xbeb1, 0xeaa0, 0x167c, 0x8d48, 0xccf5, 0x0, 0x0);
        gbc.writeMem(0x34a7, { 0xca, 0x93, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xbeb1);
        EXPECT(gbc.pc(), 0x5f93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0389
        gbc.setState(0x482e, 0xfdf6, 0x1990, 0x9470, 0x14fc, 0x7bca, 0x0, 0x0);
        gbc.writeMem(0x482e, { 0xca, 0x8d, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xfdf6);
        EXPECT(gbc.pc(), 0x838d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 038A
        gbc.setState(0x8132, 0xba3a, 0x5890, 0x39fa, 0xa321, 0x555a, 0x1, 0x0);
        gbc.writeMem(0x8132, { 0xca, 0x0, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xba3a);
        EXPECT(gbc.pc(), 0xa500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8132), 0xca);
        EXPECT(gbc.readMem(0x8133), 0x0);
        EXPECT(gbc.readMem(0x8134), 0xa5);
        // CA 038B
        gbc.setState(0x4c32, 0x39cb, 0x1f70, 0x26ac, 0x8748, 0x2eef, 0x0, 0x0);
        gbc.writeMem(0x4c32, { 0xca, 0x7a, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x39cb);
        EXPECT(gbc.pc(), 0x4c35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 038C
        gbc.setState(0xed74, 0xa919, 0xc550, 0x6946, 0x79e, 0xad03, 0x0, 0x0);
        gbc.writeMem(0xed74, { 0xca, 0xc1, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa919);
        EXPECT(gbc.pc(), 0xed77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed74), 0xca);
        EXPECT(gbc.readMem(0xed75), 0xc1);
        EXPECT(gbc.readMem(0xed76), 0x14);
        // CA 038D
        gbc.setState(0x13dd, 0x2e7, 0x6970, 0xcac8, 0x621c, 0xfdbd, 0x1, 0x0);
        gbc.writeMem(0x13dd, { 0xca, 0xfd, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x2e7);
        EXPECT(gbc.pc(), 0x13e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 038E
        gbc.setState(0x8b90, 0x6d9d, 0xe000, 0x1ec3, 0x17c5, 0xb779, 0x0, 0x0);
        gbc.writeMem(0x8b90, { 0xca, 0x46, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6d9d);
        EXPECT(gbc.pc(), 0x8b93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b90), 0xca);
        EXPECT(gbc.readMem(0x8b91), 0x46);
        EXPECT(gbc.readMem(0x8b92), 0x57);
        // CA 038F
        gbc.setState(0x6725, 0x180, 0x5b40, 0x4b48, 0xa30d, 0xb903, 0x1, 0x1);
        gbc.writeMem(0x6725, { 0xca, 0xf1, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x180);
        EXPECT(gbc.pc(), 0x6728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 0390
        gbc.setState(0x6ce3, 0x9396, 0x6350, 0x1148, 0x70cc, 0x487b, 0x1, 0x0);
        gbc.writeMem(0x6ce3, { 0xca, 0xd0, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9396);
        EXPECT(gbc.pc(), 0x6ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0391
        gbc.setState(0x83af, 0xe500, 0x30c0, 0xc946, 0x351d, 0xd946, 0x0, 0x0);
        gbc.writeMem(0x83af, { 0xca, 0x74, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe500);
        EXPECT(gbc.pc(), 0x7874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83af), 0xca);
        EXPECT(gbc.readMem(0x83b0), 0x74);
        EXPECT(gbc.readMem(0x83b1), 0x78);
        // CA 0392
        gbc.setState(0x716, 0xe5d4, 0xd970, 0x5fd2, 0xfe52, 0xff7a, 0x1, 0x0);
        gbc.writeMem(0x716, { 0xca, 0x6f, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe5d4);
        EXPECT(gbc.pc(), 0x719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0393
        gbc.setState(0x2844, 0x6b17, 0x3390, 0xdf20, 0x70a2, 0xca20, 0x1, 0x1);
        gbc.writeMem(0x2844, { 0xca, 0x9e, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6b17);
        EXPECT(gbc.pc(), 0x9b9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 0394
        gbc.setState(0xc58d, 0x754e, 0x25f0, 0xfd92, 0xbe87, 0xabde, 0x1, 0x0);
        gbc.writeMem(0xc58d, { 0xca, 0xf4, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x754e);
        EXPECT(gbc.pc(), 0x99f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc58d), 0xca);
        EXPECT(gbc.readMem(0xc58e), 0xf4);
        EXPECT(gbc.readMem(0xc58f), 0x99);
        // CA 0395
        gbc.setState(0x1429, 0x7a62, 0x93a0, 0x4ece, 0x4738, 0xd83e, 0x1, 0x0);
        gbc.writeMem(0x1429, { 0xca, 0x1a, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7a62);
        EXPECT(gbc.pc(), 0xe11a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 0396
        gbc.setState(0x75a1, 0x8dce, 0xd3b0, 0x2585, 0x7ef9, 0x5c0d, 0x0, 0x1);
        gbc.writeMem(0x75a1, { 0xca, 0x83, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8dce);
        EXPECT(gbc.pc(), 0x5383);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 0397
        gbc.setState(0xee36, 0x5ad, 0x84d0, 0xb49f, 0x8956, 0xe062, 0x1, 0x0);
        gbc.writeMem(0xee36, { 0xca, 0x60, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5ad);
        EXPECT(gbc.pc(), 0xc460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee36), 0xca);
        EXPECT(gbc.readMem(0xee37), 0x60);
        EXPECT(gbc.readMem(0xee38), 0xc4);
        // CA 0398
        gbc.setState(0xae5e, 0xcfc8, 0x670, 0xa4f2, 0x7697, 0xa727, 0x0, 0x0);
        gbc.writeMem(0xae5e, { 0xca, 0x7e, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xcfc8);
        EXPECT(gbc.pc(), 0xae61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae5e), 0xca);
        EXPECT(gbc.readMem(0xae5f), 0x7e);
        EXPECT(gbc.readMem(0xae60), 0x5d);
        // CA 0399
        gbc.setState(0xaff3, 0x4b14, 0x2ac0, 0x7820, 0x6311, 0xee2d, 0x1, 0x0);
        gbc.writeMem(0xaff3, { 0xca, 0x76, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4b14);
        EXPECT(gbc.pc(), 0x3476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaff3), 0xca);
        EXPECT(gbc.readMem(0xaff4), 0x76);
        EXPECT(gbc.readMem(0xaff5), 0x34);
        // CA 039A
        gbc.setState(0xe46f, 0xdbf, 0xcf50, 0xec30, 0xa9d5, 0x8b43, 0x1, 0x0);
        gbc.writeMem(0xe46f, { 0xca, 0xbe, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xdbf);
        EXPECT(gbc.pc(), 0xe472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe46f), 0xca);
        EXPECT(gbc.readMem(0xe470), 0xbe);
        EXPECT(gbc.readMem(0xe471), 0x97);
        // CA 039B
        gbc.setState(0x77e4, 0xc852, 0x44f0, 0xf3b2, 0xd3b8, 0x60d6, 0x0, 0x1);
        gbc.writeMem(0x77e4, { 0xca, 0xd8, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc852);
        EXPECT(gbc.pc(), 0xb2d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 039C
        gbc.setState(0xcd63, 0xf486, 0x3920, 0xf8fc, 0x44d3, 0x5f76, 0x1, 0x1);
        gbc.writeMem(0xcd63, { 0xca, 0x12, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf486);
        EXPECT(gbc.pc(), 0xcd66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd63), 0xca);
        EXPECT(gbc.readMem(0xcd64), 0x12);
        EXPECT(gbc.readMem(0xcd65), 0x54);
        // CA 039D
        gbc.setState(0x80c, 0x2e38, 0x68a0, 0xa421, 0xfbc2, 0x7d81, 0x0, 0x0);
        gbc.writeMem(0x80c, { 0xca, 0xf6, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2e38);
        EXPECT(gbc.pc(), 0x7af6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 039E
        gbc.setState(0x510b, 0xa2b4, 0x30b0, 0xde9c, 0xdc5d, 0x68e2, 0x0, 0x0);
        gbc.writeMem(0x510b, { 0xca, 0x17, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa2b4);
        EXPECT(gbc.pc(), 0x8c17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 039F
        gbc.setState(0xaaea, 0xc21b, 0xbe30, 0xd79f, 0xa669, 0x12a3, 0x0, 0x0);
        gbc.writeMem(0xaaea, { 0xca, 0x16, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc21b);
        EXPECT(gbc.pc(), 0xaaed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaea), 0xca);
        EXPECT(gbc.readMem(0xaaeb), 0x16);
        EXPECT(gbc.readMem(0xaaec), 0xac);
        // CA 03A0
        gbc.setState(0xcc66, 0x543f, 0x9b60, 0x3dee, 0xa253, 0xb78b, 0x0, 0x0);
        gbc.writeMem(0xcc66, { 0xca, 0x48, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x543f);
        EXPECT(gbc.pc(), 0xcc69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc66), 0xca);
        EXPECT(gbc.readMem(0xcc67), 0x48);
        EXPECT(gbc.readMem(0xcc68), 0x59);
        // CA 03A1
        gbc.setState(0x1d6c, 0x9677, 0x880, 0x8bf0, 0xc6c5, 0x1e77, 0x0, 0x0);
        gbc.writeMem(0x1d6c, { 0xca, 0x30, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9677);
        EXPECT(gbc.pc(), 0x8d30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 03A2
        gbc.setState(0xb633, 0x5803, 0xf20, 0x91c4, 0xc12b, 0x7003, 0x1, 0x0);
        gbc.writeMem(0xb633, { 0xca, 0x5d, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5803);
        EXPECT(gbc.pc(), 0xb636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb633), 0xca);
        EXPECT(gbc.readMem(0xb634), 0x5d);
        EXPECT(gbc.readMem(0xb635), 0x5b);
        // CA 03A3
        gbc.setState(0x2ed, 0x8c3f, 0x47f0, 0xdef5, 0x3568, 0x82dd, 0x1, 0x0);
        gbc.writeMem(0x2ed, { 0xca, 0xd9, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8c3f);
        EXPECT(gbc.pc(), 0x29d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 03A4
        gbc.setState(0x776d, 0x3860, 0xa0b0, 0x539e, 0x6143, 0xec86, 0x1, 0x0);
        gbc.writeMem(0x776d, { 0xca, 0x6c, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3860);
        EXPECT(gbc.pc(), 0x5c6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 03A5
        gbc.setState(0x4a76, 0xb8b7, 0xd160, 0x5593, 0x94fe, 0x64af, 0x0, 0x1);
        gbc.writeMem(0x4a76, { 0xca, 0x60, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb8b7);
        EXPECT(gbc.pc(), 0x4a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 03A6
        gbc.setState(0x5f70, 0x4bf7, 0x8e50, 0x1bc4, 0x77e0, 0xdea5, 0x1, 0x1);
        gbc.writeMem(0x5f70, { 0xca, 0x95, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4bf7);
        EXPECT(gbc.pc(), 0x5f73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 03A8
        gbc.setState(0xd7a6, 0x58f0, 0x1720, 0xb14a, 0xc810, 0x7a77, 0x0, 0x0);
        gbc.writeMem(0xd7a6, { 0xca, 0xfb, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x58f0);
        EXPECT(gbc.pc(), 0xd7a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a6), 0xca);
        EXPECT(gbc.readMem(0xd7a7), 0xfb);
        EXPECT(gbc.readMem(0xd7a8), 0xad);
        // CA 03A9
        gbc.setState(0xbadb, 0x18c9, 0xa960, 0x5494, 0x6a57, 0x7aa4, 0x1, 0x0);
        gbc.writeMem(0xbadb, { 0xca, 0xdb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x18c9);
        EXPECT(gbc.pc(), 0xbade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbadb), 0xca);
        EXPECT(gbc.readMem(0xbadc), 0xdb);
        EXPECT(gbc.readMem(0xbadd), 0x15);
        // CA 03AA
        gbc.setState(0x71e6, 0x3720, 0x3b0, 0xa517, 0xfb11, 0xa8ab, 0x1, 0x0);
        gbc.writeMem(0x71e6, { 0xca, 0x2e, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3720);
        EXPECT(gbc.pc(), 0x292e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 03AB
        gbc.setState(0x23f6, 0xaeb3, 0x37e0, 0xfff3, 0xb894, 0xd4e5, 0x0, 0x1);
        gbc.writeMem(0x23f6, { 0xca, 0x52, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xaeb3);
        EXPECT(gbc.pc(), 0xdc52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 03AC
        gbc.setState(0x3dbe, 0x7b18, 0x1200, 0xa5a8, 0xa954, 0x69a8, 0x1, 0x1);
        gbc.writeMem(0x3dbe, { 0xca, 0xa6, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7b18);
        EXPECT(gbc.pc(), 0x3dc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 03AD
        gbc.setState(0x8198, 0xd71d, 0x3d70, 0xc50f, 0x3bd4, 0x7fd1, 0x0, 0x0);
        gbc.writeMem(0x8198, { 0xca, 0xc8, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd71d);
        EXPECT(gbc.pc(), 0x819b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8198), 0xca);
        EXPECT(gbc.readMem(0x8199), 0xc8);
        EXPECT(gbc.readMem(0x819a), 0xb2);
        // CA 03AE
        gbc.setState(0xbb2, 0x6f38, 0xc40, 0x58a9, 0x202c, 0x52f9, 0x1, 0x0);
        gbc.writeMem(0xbb2, { 0xca, 0xc6, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6f38);
        EXPECT(gbc.pc(), 0xbb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 03AF
        gbc.setState(0x2177, 0xd6cc, 0x850, 0xb535, 0x2797, 0x15a0, 0x0, 0x0);
        gbc.writeMem(0x2177, { 0xca, 0x7d, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd6cc);
        EXPECT(gbc.pc(), 0x217a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 03B0
        gbc.setState(0x38d7, 0x3da2, 0xda40, 0x3ecd, 0x4c2c, 0xad30, 0x1, 0x1);
        gbc.writeMem(0x38d7, { 0xca, 0x35, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3da2);
        EXPECT(gbc.pc(), 0x38da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 03B1
        gbc.setState(0x18c1, 0x86de, 0x6e90, 0xd05b, 0x8bb, 0x27b7, 0x1, 0x1);
        gbc.writeMem(0x18c1, { 0xca, 0x86, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x86de);
        EXPECT(gbc.pc(), 0xd386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 03B2
        gbc.setState(0xceaa, 0x300c, 0xdfa0, 0xf70c, 0x77db, 0xe004, 0x0, 0x1);
        gbc.writeMem(0xceaa, { 0xca, 0xe7, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x300c);
        EXPECT(gbc.pc(), 0x50e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceaa), 0xca);
        EXPECT(gbc.readMem(0xceab), 0xe7);
        EXPECT(gbc.readMem(0xceac), 0x50);
        // CA 03B3
        gbc.setState(0x6b99, 0x88a9, 0x68a0, 0x7ad, 0xfefd, 0xafce, 0x1, 0x0);
        gbc.writeMem(0x6b99, { 0xca, 0x9e, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x88a9);
        EXPECT(gbc.pc(), 0x809e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 03B4
        gbc.setState(0x8728, 0xc170, 0x8370, 0x24b2, 0x2c84, 0x7b65, 0x0, 0x1);
        gbc.writeMem(0x8728, { 0xca, 0x45, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc170);
        EXPECT(gbc.pc(), 0x872b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8728), 0xca);
        EXPECT(gbc.readMem(0x8729), 0x45);
        EXPECT(gbc.readMem(0x872a), 0xb7);
        // CA 03B5
        gbc.setState(0x5268, 0xa937, 0x2c80, 0xf6ca, 0xf325, 0x9e1b, 0x0, 0x0);
        gbc.writeMem(0x5268, { 0xca, 0x4b, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa937);
        EXPECT(gbc.pc(), 0xd14b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 03B6
        gbc.setState(0xa393, 0x2479, 0xbd70, 0x443c, 0xcb79, 0x686c, 0x1, 0x0);
        gbc.writeMem(0xa393, { 0xca, 0x75, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2479);
        EXPECT(gbc.pc(), 0xa396);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa393), 0xca);
        EXPECT(gbc.readMem(0xa394), 0x75);
        EXPECT(gbc.readMem(0xa395), 0xad);
        // CA 03B7
        gbc.setState(0x4ddb, 0x70f0, 0xc040, 0xe2b3, 0x4eb7, 0x1861, 0x1, 0x0);
        gbc.writeMem(0x4ddb, { 0xca, 0xfb, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x70f0);
        EXPECT(gbc.pc(), 0x4dde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 03B8
        gbc.setState(0x41dc, 0xe92a, 0x1420, 0xbbb2, 0xc1b, 0xc853, 0x0, 0x1);
        gbc.writeMem(0x41dc, { 0xca, 0x24, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe92a);
        EXPECT(gbc.pc(), 0x41df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 03B9
        gbc.setState(0x4e6e, 0x646b, 0x7550, 0x768b, 0x834, 0x349d, 0x1, 0x1);
        gbc.writeMem(0x4e6e, { 0xca, 0xac, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x646b);
        EXPECT(gbc.pc(), 0x4e71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 03BA
        gbc.setState(0x67c2, 0xe7f8, 0x3960, 0x96c0, 0x6ba0, 0x8e84, 0x0, 0x1);
        gbc.writeMem(0x67c2, { 0xca, 0x98, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe7f8);
        EXPECT(gbc.pc(), 0x67c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 03BB
        gbc.setState(0xa584, 0x3ae4, 0x3e70, 0x511, 0xad69, 0x5a0f, 0x0, 0x0);
        gbc.writeMem(0xa584, { 0xca, 0xad, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3ae4);
        EXPECT(gbc.pc(), 0xa587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa584), 0xca);
        EXPECT(gbc.readMem(0xa585), 0xad);
        EXPECT(gbc.readMem(0xa586), 0xd3);
        // CA 03BC
        gbc.setState(0x7255, 0x2e91, 0xf9d0, 0x71a7, 0xc00e, 0xc8, 0x1, 0x1);
        gbc.writeMem(0x7255, { 0xca, 0x8a, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2e91);
        EXPECT(gbc.pc(), 0xff8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 03BD
        gbc.setState(0xd4bd, 0xc92b, 0x3aa0, 0xded2, 0xd4c0, 0xc19a, 0x1, 0x1);
        gbc.writeMem(0xd4bd, { 0xca, 0xd3, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc92b);
        EXPECT(gbc.pc(), 0xd1d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4bd), 0xca);
        EXPECT(gbc.readMem(0xd4be), 0xd3);
        EXPECT(gbc.readMem(0xd4bf), 0xd1);
        // CA 03BE
        gbc.setState(0x355e, 0xdf75, 0x6860, 0xa757, 0x2cfc, 0x59ab, 0x1, 0x1);
        gbc.writeMem(0x355e, { 0xca, 0xb0, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xdf75);
        EXPECT(gbc.pc(), 0x3561);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 03BF
        gbc.setState(0xec60, 0xfb54, 0x9140, 0xcd50, 0xd3d2, 0x720, 0x0, 0x0);
        gbc.writeMem(0xec60, { 0xca, 0xb3, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfb54);
        EXPECT(gbc.pc(), 0xec63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec60), 0xca);
        EXPECT(gbc.readMem(0xec61), 0xb3);
        EXPECT(gbc.readMem(0xec62), 0x2a);
        // CA 03C0
        gbc.setState(0x9c6d, 0x2c6b, 0xdbd0, 0x500b, 0xb82d, 0xc2ec, 0x1, 0x1);
        gbc.writeMem(0x9c6d, { 0xca, 0xd, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2c6b);
        EXPECT(gbc.pc(), 0x3d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c6d), 0xca);
        EXPECT(gbc.readMem(0x9c6e), 0xd);
        EXPECT(gbc.readMem(0x9c6f), 0x3d);
        // CA 03C1
        gbc.setState(0x11be, 0xa296, 0x7c70, 0xb237, 0xb63f, 0x6c47, 0x1, 0x1);
        gbc.writeMem(0x11be, { 0xca, 0x7a, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa296);
        EXPECT(gbc.pc(), 0x11c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 03C3
        gbc.setState(0xb8bb, 0x344, 0x8060, 0xe8eb, 0x1312, 0x1deb, 0x0, 0x0);
        gbc.writeMem(0xb8bb, { 0xca, 0xc5, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x344);
        EXPECT(gbc.pc(), 0xb8be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8bb), 0xca);
        EXPECT(gbc.readMem(0xb8bc), 0xc5);
        EXPECT(gbc.readMem(0xb8bd), 0x38);
        // CA 03C4
        gbc.setState(0x3e76, 0xa1b8, 0x7f0, 0xd20d, 0xaf02, 0xbbd5, 0x1, 0x1);
        gbc.writeMem(0x3e76, { 0xca, 0xca, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa1b8);
        EXPECT(gbc.pc(), 0x4bca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 03C5
        gbc.setState(0x6b44, 0xf18b, 0x9880, 0xd628, 0x33a8, 0xcde6, 0x0, 0x0);
        gbc.writeMem(0x6b44, { 0xca, 0xc3, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf18b);
        EXPECT(gbc.pc(), 0xd0c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 03C6
        gbc.setState(0x170e, 0xefa0, 0x9100, 0xe75a, 0xc3e9, 0x48cf, 0x0, 0x1);
        gbc.writeMem(0x170e, { 0xca, 0x0, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xefa0);
        EXPECT(gbc.pc(), 0x1711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 03C7
        gbc.setState(0x76f9, 0xa816, 0x17d0, 0x4e48, 0xd4a2, 0x4faf, 0x0, 0x1);
        gbc.writeMem(0x76f9, { 0xca, 0xe8, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa816);
        EXPECT(gbc.pc(), 0xfde8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 03C8
        gbc.setState(0x1211, 0x6b83, 0x4d80, 0xe0ea, 0xd5cd, 0x4ae9, 0x1, 0x1);
        gbc.writeMem(0x1211, { 0xca, 0xa3, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6b83);
        EXPECT(gbc.pc(), 0x86a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 03C9
        gbc.setState(0xa74e, 0x7735, 0x4bd0, 0x4f8f, 0xd3c8, 0xbc03, 0x1, 0x1);
        gbc.writeMem(0xa74e, { 0xca, 0x3b, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7735);
        EXPECT(gbc.pc(), 0x563b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa74e), 0xca);
        EXPECT(gbc.readMem(0xa74f), 0x3b);
        EXPECT(gbc.readMem(0xa750), 0x56);
        // CA 03CA
        gbc.setState(0x2a74, 0x5a6d, 0xafb0, 0xde91, 0x9008, 0xe0e1, 0x0, 0x0);
        gbc.writeMem(0x2a74, { 0xca, 0x4a, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5a6d);
        EXPECT(gbc.pc(), 0xd4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 03CC
        gbc.setState(0x6978, 0xa65b, 0x8dd0, 0x1b13, 0xc0b8, 0xce77, 0x1, 0x0);
        gbc.writeMem(0x6978, { 0xca, 0xaf, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa65b);
        EXPECT(gbc.pc(), 0xd6af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 03CD
        gbc.setState(0x30f3, 0x63a7, 0xd00, 0xc7a5, 0x980b, 0x55f2, 0x0, 0x0);
        gbc.writeMem(0x30f3, { 0xca, 0x36, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x63a7);
        EXPECT(gbc.pc(), 0x30f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 03CE
        gbc.setState(0xcb0d, 0x392c, 0x2400, 0x6a00, 0xead6, 0x431d, 0x0, 0x0);
        gbc.writeMem(0xcb0d, { 0xca, 0x74, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x392c);
        EXPECT(gbc.pc(), 0xcb10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb0d), 0xca);
        EXPECT(gbc.readMem(0xcb0e), 0x74);
        EXPECT(gbc.readMem(0xcb0f), 0xd);
        // CA 03CF
        gbc.setState(0xe219, 0xf145, 0x76c0, 0x907, 0x6c93, 0x28a7, 0x0, 0x0);
        gbc.writeMem(0xe219, { 0xca, 0x5, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf145);
        EXPECT(gbc.pc(), 0xa405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe219), 0xca);
        EXPECT(gbc.readMem(0xe21a), 0x5);
        EXPECT(gbc.readMem(0xe21b), 0xa4);
        // CA 03D2
        gbc.setState(0xb749, 0xd866, 0x94e0, 0xa914, 0x331, 0xf6ea, 0x1, 0x0);
        gbc.writeMem(0xb749, { 0xca, 0xc0, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd866);
        EXPECT(gbc.pc(), 0xecc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb749), 0xca);
        EXPECT(gbc.readMem(0xb74a), 0xc0);
        EXPECT(gbc.readMem(0xb74b), 0xec);
        // CA 03D3
        gbc.setState(0x14ce, 0xe0c7, 0x2eb0, 0xc7d8, 0x6e4e, 0x677f, 0x0, 0x1);
        gbc.writeMem(0x14ce, { 0xca, 0x6b, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe0c7);
        EXPECT(gbc.pc(), 0xf06b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 03D4
        gbc.setState(0xa38, 0x9be1, 0xee0, 0x88ac, 0xf66f, 0xe8bb, 0x1, 0x1);
        gbc.writeMem(0xa38, { 0xca, 0x60, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9be1);
        EXPECT(gbc.pc(), 0xbc60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 03D5
        gbc.setState(0x1d5e, 0x5f5d, 0xba0, 0xe101, 0x3541, 0x2434, 0x1, 0x1);
        gbc.writeMem(0x1d5e, { 0xca, 0x66, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5f5d);
        EXPECT(gbc.pc(), 0xed66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 03D6
        gbc.setState(0x4814, 0x131b, 0x35a0, 0x7a88, 0x73da, 0x3f57, 0x0, 0x1);
        gbc.writeMem(0x4814, { 0xca, 0x9, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x131b);
        EXPECT(gbc.pc(), 0xf509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 03D7
        gbc.setState(0xe1cc, 0xfd25, 0xe350, 0x3a1b, 0xa2bd, 0x7262, 0x0, 0x1);
        gbc.writeMem(0xe1cc, { 0xca, 0x39, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfd25);
        EXPECT(gbc.pc(), 0xe1cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1cc), 0xca);
        EXPECT(gbc.readMem(0xe1cd), 0x39);
        EXPECT(gbc.readMem(0xe1ce), 0x73);
        // CA 03D8
        gbc.setState(0x95f4, 0x7f39, 0x26a0, 0x2b6a, 0x9037, 0xfc9e, 0x0, 0x0);
        gbc.writeMem(0x95f4, { 0xca, 0x65, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7f39);
        EXPECT(gbc.pc(), 0x9265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95f4), 0xca);
        EXPECT(gbc.readMem(0x95f5), 0x65);
        EXPECT(gbc.readMem(0x95f6), 0x92);
        // CA 03D9
        gbc.setState(0x9fdb, 0x53ba, 0xdcd0, 0x1ad8, 0x7d99, 0xd896, 0x0, 0x0);
        gbc.writeMem(0x9fdb, { 0xca, 0x93, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x53ba);
        EXPECT(gbc.pc(), 0x493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fdb), 0xca);
        EXPECT(gbc.readMem(0x9fdc), 0x93);
        EXPECT(gbc.readMem(0x9fdd), 0x4);
        // CA 03DA
        gbc.setState(0x6b5d, 0xce21, 0xe150, 0xb0fa, 0x8e1b, 0x8744, 0x0, 0x1);
        gbc.writeMem(0x6b5d, { 0xca, 0xe3, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xce21);
        EXPECT(gbc.pc(), 0x6b60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 03DB
        gbc.setState(0xd52e, 0x7ce, 0xff30, 0x1a24, 0x7426, 0x1505, 0x1, 0x1);
        gbc.writeMem(0xd52e, { 0xca, 0xfe, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7ce);
        EXPECT(gbc.pc(), 0xd531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd52e), 0xca);
        EXPECT(gbc.readMem(0xd52f), 0xfe);
        EXPECT(gbc.readMem(0xd530), 0xe7);
        // CA 03DD
        gbc.setState(0x38b0, 0x50b5, 0xce50, 0x22cc, 0xacf6, 0xabf0, 0x0, 0x0);
        gbc.writeMem(0x38b0, { 0xca, 0xbd, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x50b5);
        EXPECT(gbc.pc(), 0x38b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 03DE
        gbc.setState(0xab1a, 0xf579, 0xc3d0, 0x10e5, 0x8ea7, 0x3be0, 0x0, 0x1);
        gbc.writeMem(0xab1a, { 0xca, 0xa8, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf579);
        EXPECT(gbc.pc(), 0xd0a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab1a), 0xca);
        EXPECT(gbc.readMem(0xab1b), 0xa8);
        EXPECT(gbc.readMem(0xab1c), 0xd0);
        // CA 03DF
        gbc.setState(0x5961, 0x75f7, 0x3750, 0xbb39, 0x30f0, 0xfa5c, 0x0, 0x1);
        gbc.writeMem(0x5961, { 0xca, 0x89, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x75f7);
        EXPECT(gbc.pc(), 0x5964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 03E0
        gbc.setState(0x6461, 0x623e, 0x26a0, 0x290a, 0xcbe7, 0xfbb2, 0x0, 0x1);
        gbc.writeMem(0x6461, { 0xca, 0xc7, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x623e);
        EXPECT(gbc.pc(), 0xf0c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 03E1
        gbc.setState(0xce03, 0xc086, 0x5b30, 0xc93d, 0xf118, 0xa1bc, 0x1, 0x1);
        gbc.writeMem(0xce03, { 0xca, 0xbb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc086);
        EXPECT(gbc.pc(), 0xce06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce03), 0xca);
        EXPECT(gbc.readMem(0xce04), 0xbb);
        EXPECT(gbc.readMem(0xce05), 0x41);
        // CA 03E2
        gbc.setState(0x7979, 0xce13, 0x26a0, 0xb96c, 0x5a82, 0x130f, 0x0, 0x1);
        gbc.writeMem(0x7979, { 0xca, 0x21, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xce13);
        EXPECT(gbc.pc(), 0x6521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CA 03E3
        gbc.setState(0x1571, 0x139c, 0x31f0, 0xf5ea, 0x5324, 0xca1, 0x0, 0x1);
        gbc.writeMem(0x1571, { 0xca, 0x19, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x139c);
        EXPECT(gbc.pc(), 0xe019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 03E4
        gbc.setState(0x6e9d, 0x8f9d, 0xac0, 0x162a, 0x8b22, 0x7761, 0x0, 0x1);
        gbc.writeMem(0x6e9d, { 0xca, 0xba, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8f9d);
        EXPECT(gbc.pc(), 0x87ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CA 03E5
        gbc.setState(0x632f, 0xec16, 0x31f0, 0x9f5c, 0x8119, 0x28f6, 0x1, 0x0);
        gbc.writeMem(0x632f, { 0xca, 0x35, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xec16);
        EXPECT(gbc.pc(), 0xb735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CA 03E6
        gbc.setState(0x66a3, 0xcb46, 0x6810, 0x186c, 0xe886, 0x930c, 0x0, 0x1);
        gbc.writeMem(0x66a3, { 0xca, 0xab, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xcb46);
        EXPECT(gbc.pc(), 0x66a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CA 03E7
        gbc.setState(0x8d8e, 0xd32c, 0xd880, 0xc834, 0x9d67, 0x1c0a, 0x1, 0x1);
        gbc.writeMem(0x8d8e, { 0xca, 0x7b, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd32c);
        EXPECT(gbc.pc(), 0xd77b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d8e), 0xca);
        EXPECT(gbc.readMem(0x8d8f), 0x7b);
        EXPECT(gbc.readMem(0x8d90), 0xd7);
    }
}
#endif
