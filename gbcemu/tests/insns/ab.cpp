#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_ab)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_ab) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // AB 0000
        gbc.setState(0x12fa, 0xaf71, 0xd940, 0x9de6, 0xd4fd, 0xef3, 0x1, 0x0);
        gbc.writeMem(0x12fa, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xaf71);
        EXPECT(gbc.pc(), 0x12fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0001
        gbc.setState(0x2168, 0xd65a, 0x79b0, 0x151c, 0xdee0, 0x3f1d, 0x1, 0x0);
        gbc.writeMem(0x2168, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd65a);
        EXPECT(gbc.pc(), 0x2169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0002
        gbc.setState(0xb6, 0x2586, 0x1230, 0x39e7, 0xe5e5, 0x6044, 0x0, 0x0);
        gbc.writeMem(0xb6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2586);
        EXPECT(gbc.pc(), 0xb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0003
        gbc.setState(0xb20f, 0xa13b, 0xfd30, 0xfc3f, 0x7a66, 0x8525, 0x1, 0x0);
        gbc.writeMem(0xb20f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa13b);
        EXPECT(gbc.pc(), 0xb210);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb20f), 0xab);
        // AB 0004
        gbc.setState(0xbc1, 0x13a8, 0x160, 0x8c4a, 0x52ab, 0x480b, 0x1, 0x1);
        gbc.writeMem(0xbc1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x13a8);
        EXPECT(gbc.pc(), 0xbc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0005
        gbc.setState(0x291c, 0x644, 0xd360, 0xafbc, 0xcaf8, 0xaac7, 0x0, 0x1);
        gbc.writeMem(0x291c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x644);
        EXPECT(gbc.pc(), 0x291d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0006
        gbc.setState(0x59b3, 0x25e8, 0x7760, 0xfda, 0xfad3, 0x5435, 0x1, 0x1);
        gbc.writeMem(0x59b3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x25e8);
        EXPECT(gbc.pc(), 0x59b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0007
        gbc.setState(0x34ab, 0x97ed, 0x9d10, 0x4f53, 0x821, 0x7272, 0x1, 0x1);
        gbc.writeMem(0x34ab, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x97ed);
        EXPECT(gbc.pc(), 0x34ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0008
        gbc.setState(0xef0e, 0x86ac, 0x1900, 0xcef1, 0xa0ba, 0x7e68, 0x0, 0x0);
        gbc.writeMem(0xef0e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x86ac);
        EXPECT(gbc.pc(), 0xef0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef0e), 0xab);
        // AB 0009
        gbc.setState(0x28d6, 0x6ae4, 0xfb20, 0x2a4c, 0x279d, 0xc600, 0x1, 0x0);
        gbc.writeMem(0x28d6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6ae4);
        EXPECT(gbc.pc(), 0x28d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 000A
        gbc.setState(0x1411, 0x961e, 0x3890, 0xdeec, 0x879e, 0xc74e, 0x0, 0x0);
        gbc.writeMem(0x1411, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x961e);
        EXPECT(gbc.pc(), 0x1412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 000B
        gbc.setState(0x4963, 0x9a93, 0x88d0, 0xb7e0, 0x3359, 0x23c0, 0x1, 0x1);
        gbc.writeMem(0x4963, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9a93);
        EXPECT(gbc.pc(), 0x4964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 000C
        gbc.setState(0x6c3c, 0x5df3, 0x81b0, 0x700a, 0xa892, 0xb16, 0x0, 0x1);
        gbc.writeMem(0x6c3c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5df3);
        EXPECT(gbc.pc(), 0x6c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 000D
        gbc.setState(0xc2f0, 0x4d1d, 0xb670, 0x1dc8, 0x9c25, 0x2a02, 0x1, 0x1);
        gbc.writeMem(0xc2f0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4d1d);
        EXPECT(gbc.pc(), 0xc2f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2f0), 0xab);
        // AB 000E
        gbc.setState(0x3e74, 0x343a, 0xddf0, 0xa1f7, 0xb272, 0x2063, 0x1, 0x1);
        gbc.writeMem(0x3e74, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x343a);
        EXPECT(gbc.pc(), 0x3e75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 000F
        gbc.setState(0xd4d9, 0xc81f, 0x6790, 0xd1ac, 0xf3f9, 0x57a7, 0x0, 0x1);
        gbc.writeMem(0xd4d9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc81f);
        EXPECT(gbc.pc(), 0xd4da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d9), 0xab);
        // AB 0010
        gbc.setState(0x840c, 0x2824, 0x8d50, 0x6afe, 0xf480, 0xed46, 0x1, 0x1);
        gbc.writeMem(0x840c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2824);
        EXPECT(gbc.pc(), 0x840d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x840c), 0xab);
        // AB 0011
        gbc.setState(0xb366, 0x4ecb, 0xe60, 0x1a40, 0xf1f1, 0x28ac, 0x1, 0x1);
        gbc.writeMem(0xb366, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4ecb);
        EXPECT(gbc.pc(), 0xb367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb366), 0xab);
        // AB 0012
        gbc.setState(0x9bf, 0x5ff9, 0x130, 0xa04f, 0x4448, 0xd7ec, 0x1, 0x0);
        gbc.writeMem(0x9bf, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5ff9);
        EXPECT(gbc.pc(), 0x9c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0013
        gbc.setState(0xa6d1, 0x19a9, 0x7680, 0xc0f5, 0xc0ec, 0x55ac, 0x1, 0x1);
        gbc.writeMem(0xa6d1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x19a9);
        EXPECT(gbc.pc(), 0xa6d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d1), 0xab);
        // AB 0014
        gbc.setState(0xe887, 0x973a, 0x2b40, 0x2b5b, 0x52c9, 0x75ca, 0x0, 0x1);
        gbc.writeMem(0xe887, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x973a);
        EXPECT(gbc.pc(), 0xe888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe887), 0xab);
        // AB 0015
        gbc.setState(0xcffa, 0x5c30, 0xe0b0, 0x96f1, 0x4a3d, 0x6071, 0x1, 0x1);
        gbc.writeMem(0xcffa, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5c30);
        EXPECT(gbc.pc(), 0xcffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcffa), 0xab);
        // AB 0016
        gbc.setState(0xb232, 0xd958, 0x3f40, 0x29a7, 0x2a87, 0x6a0a, 0x1, 0x1);
        gbc.writeMem(0xb232, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd958);
        EXPECT(gbc.pc(), 0xb233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb232), 0xab);
        // AB 0017
        gbc.setState(0xc57a, 0x7cfb, 0x97e0, 0xa60c, 0x2b57, 0x6a73, 0x0, 0x1);
        gbc.writeMem(0xc57a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7cfb);
        EXPECT(gbc.pc(), 0xc57b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc57a), 0xab);
        // AB 0018
        gbc.setState(0x73ed, 0x5d34, 0x6b10, 0xa2b8, 0x140c, 0x31f7, 0x1, 0x1);
        gbc.writeMem(0x73ed, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5d34);
        EXPECT(gbc.pc(), 0x73ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0019
        gbc.setState(0x151a, 0x72b5, 0x4ee0, 0x5496, 0x7775, 0x488, 0x1, 0x1);
        gbc.writeMem(0x151a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x72b5);
        EXPECT(gbc.pc(), 0x151b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 001A
        gbc.setState(0xcf2, 0x7f65, 0xae10, 0x8788, 0x8d6a, 0x119d, 0x0, 0x0);
        gbc.writeMem(0xcf2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7f65);
        EXPECT(gbc.pc(), 0xcf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 001B
        gbc.setState(0xd59, 0x698f, 0x57d0, 0x84cf, 0x18c, 0xd06, 0x1, 0x1);
        gbc.writeMem(0xd59, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x698f);
        EXPECT(gbc.pc(), 0xd5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 001C
        gbc.setState(0x5f99, 0x4791, 0xbb20, 0x1817, 0x8dd9, 0x51a, 0x0, 0x1);
        gbc.writeMem(0x5f99, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4791);
        EXPECT(gbc.pc(), 0x5f9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 001D
        gbc.setState(0xdbbe, 0x51ff, 0xe780, 0x581c, 0xdbbc, 0xf1b1, 0x0, 0x0);
        gbc.writeMem(0xdbbe, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x51ff);
        EXPECT(gbc.pc(), 0xdbbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbbe), 0xab);
        // AB 001E
        gbc.setState(0x3464, 0x34fe, 0x3e60, 0xca70, 0xcfb0, 0x1a4e, 0x0, 0x1);
        gbc.writeMem(0x3464, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x34fe);
        EXPECT(gbc.pc(), 0x3465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 001F
        gbc.setState(0x4751, 0x5c04, 0x65c0, 0x5b93, 0x203e, 0xa92d, 0x0, 0x1);
        gbc.writeMem(0x4751, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5c04);
        EXPECT(gbc.pc(), 0x4752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0020
        gbc.setState(0x2830, 0xe3b5, 0xfac0, 0x9112, 0x1200, 0xdc40, 0x1, 0x1);
        gbc.writeMem(0x2830, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe3b5);
        EXPECT(gbc.pc(), 0x2831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0021
        gbc.setState(0x97bc, 0xed56, 0x18a0, 0x3153, 0x18e2, 0xff2f, 0x0, 0x0);
        gbc.writeMem(0x97bc, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xed56);
        EXPECT(gbc.pc(), 0x97bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97bc), 0xab);
        // AB 0022
        gbc.setState(0xc0c1, 0x2536, 0x5d60, 0xa5eb, 0x67b9, 0x4832, 0x0, 0x1);
        gbc.writeMem(0xc0c1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2536);
        EXPECT(gbc.pc(), 0xc0c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c1), 0xab);
        // AB 0023
        gbc.setState(0x34ce, 0x62d3, 0x740, 0x5bd4, 0x14ea, 0x1f6d, 0x1, 0x1);
        gbc.writeMem(0x34ce, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x62d3);
        EXPECT(gbc.pc(), 0x34cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0024
        gbc.setState(0x38b6, 0xd113, 0x43b0, 0xdfa, 0x4bc4, 0xdcc0, 0x1, 0x0);
        gbc.writeMem(0x38b6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd113);
        EXPECT(gbc.pc(), 0x38b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0025
        gbc.setState(0x488e, 0xe59, 0xafa0, 0x25b4, 0x2466, 0xc116, 0x1, 0x0);
        gbc.writeMem(0x488e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe59);
        EXPECT(gbc.pc(), 0x488f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0026
        gbc.setState(0x5bbb, 0x541c, 0x35e0, 0xc8f7, 0x1729, 0x8144, 0x1, 0x1);
        gbc.writeMem(0x5bbb, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x541c);
        EXPECT(gbc.pc(), 0x5bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0027
        gbc.setState(0x2b38, 0xdbc2, 0x16f0, 0xa5c4, 0xcfbe, 0x7cb4, 0x0, 0x1);
        gbc.writeMem(0x2b38, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdbc2);
        EXPECT(gbc.pc(), 0x2b39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0028
        gbc.setState(0x92e6, 0xfbbe, 0xfe70, 0xdd6e, 0x9242, 0x12ce, 0x0, 0x0);
        gbc.writeMem(0x92e6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xfbbe);
        EXPECT(gbc.pc(), 0x92e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e6), 0xab);
        // AB 0029
        gbc.setState(0x1b71, 0x4297, 0xce80, 0x3fa7, 0x998, 0x71aa, 0x1, 0x0);
        gbc.writeMem(0x1b71, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4297);
        EXPECT(gbc.pc(), 0x1b72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 002A
        gbc.setState(0xaa88, 0x73d2, 0x6110, 0xddd5, 0x18e5, 0xdc01, 0x1, 0x0);
        gbc.writeMem(0xaa88, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x73d2);
        EXPECT(gbc.pc(), 0xaa89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa88), 0xab);
        // AB 002B
        gbc.setState(0x11e2, 0x45da, 0xf910, 0xb0b9, 0xd4fe, 0x40c2, 0x1, 0x0);
        gbc.writeMem(0x11e2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x45da);
        EXPECT(gbc.pc(), 0x11e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 002C
        gbc.setState(0xa3d3, 0xedf1, 0x44a0, 0x13c8, 0x8803, 0xe596, 0x0, 0x1);
        gbc.writeMem(0xa3d3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xedf1);
        EXPECT(gbc.pc(), 0xa3d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d3), 0xab);
        // AB 002D
        gbc.setState(0xbc61, 0x8215, 0x4af0, 0xd969, 0x6bae, 0xf59d, 0x0, 0x1);
        gbc.writeMem(0xbc61, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8215);
        EXPECT(gbc.pc(), 0xbc62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc61), 0xab);
        // AB 002E
        gbc.setState(0xb652, 0x1b42, 0x55d0, 0xb7de, 0x5876, 0x7254, 0x0, 0x0);
        gbc.writeMem(0xb652, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1b42);
        EXPECT(gbc.pc(), 0xb653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb652), 0xab);
        // AB 002F
        gbc.setState(0x50ff, 0x8dd1, 0x7f0, 0xdbcc, 0xb023, 0x1228, 0x0, 0x0);
        gbc.writeMem(0x50ff, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8dd1);
        EXPECT(gbc.pc(), 0x5100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0030
        gbc.setState(0xd66d, 0x4d5c, 0xf20, 0x4ff5, 0xfd25, 0xbb47, 0x0, 0x1);
        gbc.writeMem(0xd66d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4d5c);
        EXPECT(gbc.pc(), 0xd66e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd66d), 0xab);
        // AB 0031
        gbc.setState(0x684e, 0xf63b, 0xdf40, 0xb432, 0x94c3, 0x6883, 0x1, 0x1);
        gbc.writeMem(0x684e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf63b);
        EXPECT(gbc.pc(), 0x684f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0032
        gbc.setState(0x8577, 0x59dd, 0x62b0, 0xc985, 0xe6e2, 0x7d76, 0x0, 0x1);
        gbc.writeMem(0x8577, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x59dd);
        EXPECT(gbc.pc(), 0x8578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8577), 0xab);
        // AB 0033
        gbc.setState(0x831f, 0xf89a, 0x5d10, 0xbd93, 0x7eba, 0xc69f, 0x0, 0x1);
        gbc.writeMem(0x831f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf89a);
        EXPECT(gbc.pc(), 0x8320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x831f), 0xab);
        // AB 0034
        gbc.setState(0x5541, 0xe450, 0xb2e0, 0x209a, 0x1a3c, 0xa5, 0x1, 0x1);
        gbc.writeMem(0x5541, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe450);
        EXPECT(gbc.pc(), 0x5542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0035
        gbc.setState(0x7bde, 0x60a6, 0xb2a0, 0x3049, 0x9b7, 0x5f59, 0x0, 0x0);
        gbc.writeMem(0x7bde, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x60a6);
        EXPECT(gbc.pc(), 0x7bdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0036
        gbc.setState(0x1e8d, 0xb9ef, 0xbdf0, 0x2d54, 0xee37, 0x2504, 0x0, 0x1);
        gbc.writeMem(0x1e8d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb9ef);
        EXPECT(gbc.pc(), 0x1e8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0037
        gbc.setState(0x8e6f, 0x3f92, 0xda70, 0xae6b, 0x6b6b, 0x406b, 0x0, 0x0);
        gbc.writeMem(0x8e6f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3f92);
        EXPECT(gbc.pc(), 0x8e70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e6f), 0xab);
        // AB 0038
        gbc.setState(0xd5cb, 0x433e, 0x4ee0, 0x8dc5, 0x6c05, 0x63e0, 0x0, 0x0);
        gbc.writeMem(0xd5cb, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x433e);
        EXPECT(gbc.pc(), 0xd5cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5cb), 0xab);
        // AB 0039
        gbc.setState(0x9d8, 0x713d, 0x96a0, 0x8577, 0x80f7, 0xbaaf, 0x0, 0x0);
        gbc.writeMem(0x9d8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x713d);
        EXPECT(gbc.pc(), 0x9d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 003A
        gbc.setState(0x2a26, 0xc1e0, 0xf6e0, 0xc00, 0x806e, 0xebdc, 0x1, 0x1);
        gbc.writeMem(0x2a26, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc1e0);
        EXPECT(gbc.pc(), 0x2a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 003C
        gbc.setState(0x1f83, 0xcada, 0xaf90, 0x4f3, 0x539a, 0xecd2, 0x1, 0x1);
        gbc.writeMem(0x1f83, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xcada);
        EXPECT(gbc.pc(), 0x1f84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 003D
        gbc.setState(0x8b5f, 0xb8e, 0x3070, 0x650f, 0x64f4, 0x2c58, 0x0, 0x1);
        gbc.writeMem(0x8b5f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb8e);
        EXPECT(gbc.pc(), 0x8b60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b5f), 0xab);
        // AB 003F
        gbc.setState(0x79bb, 0xc87c, 0x5ab0, 0x7d94, 0x4b6, 0x6a7c, 0x0, 0x1);
        gbc.writeMem(0x79bb, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc87c);
        EXPECT(gbc.pc(), 0x79bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0040
        gbc.setState(0x6ff3, 0x88d, 0x5990, 0x25a8, 0x9cc6, 0xa199, 0x0, 0x1);
        gbc.writeMem(0x6ff3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x88d);
        EXPECT(gbc.pc(), 0x6ff4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0041
        gbc.setState(0x6a73, 0x20c5, 0xbd00, 0x990f, 0xf925, 0xe21c, 0x1, 0x0);
        gbc.writeMem(0x6a73, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x20c5);
        EXPECT(gbc.pc(), 0x6a74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0042
        gbc.setState(0x70a2, 0x10e9, 0x2e50, 0x5d5f, 0xa6b1, 0x894a, 0x1, 0x0);
        gbc.writeMem(0x70a2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x10e9);
        EXPECT(gbc.pc(), 0x70a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0043
        gbc.setState(0x1c82, 0x7cb4, 0xeff0, 0xb30d, 0x711b, 0xe711, 0x1, 0x0);
        gbc.writeMem(0x1c82, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7cb4);
        EXPECT(gbc.pc(), 0x1c83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0044
        gbc.setState(0xb62, 0x5e1e, 0x2780, 0x499a, 0xd73d, 0x1d5e, 0x1, 0x1);
        gbc.writeMem(0xb62, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5e1e);
        EXPECT(gbc.pc(), 0xb63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0045
        gbc.setState(0x8af7, 0xc2bd, 0xe1e0, 0xfeb5, 0xe243, 0xb22c, 0x1, 0x1);
        gbc.writeMem(0x8af7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc2bd);
        EXPECT(gbc.pc(), 0x8af8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af7), 0xab);
        // AB 0047
        gbc.setState(0x24f2, 0x4e24, 0xfe70, 0x4734, 0x2fe8, 0xb654, 0x1, 0x1);
        gbc.writeMem(0x24f2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4e24);
        EXPECT(gbc.pc(), 0x24f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0048
        gbc.setState(0x7355, 0xb625, 0x26a0, 0x7e26, 0x7f0e, 0x952e, 0x1, 0x1);
        gbc.writeMem(0x7355, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb625);
        EXPECT(gbc.pc(), 0x7356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0049
        gbc.setState(0xc424, 0xe718, 0x550, 0xf4a2, 0x16f0, 0x7474, 0x1, 0x1);
        gbc.writeMem(0xc424, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe718);
        EXPECT(gbc.pc(), 0xc425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc424), 0xab);
        // AB 004A
        gbc.setState(0x5b81, 0x2791, 0x88a0, 0xb40e, 0x1c0, 0xe594, 0x1, 0x0);
        gbc.writeMem(0x5b81, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2791);
        EXPECT(gbc.pc(), 0x5b82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 004B
        gbc.setState(0xc174, 0x4779, 0x9fe0, 0x9ca7, 0xc3ab, 0x56f6, 0x1, 0x1);
        gbc.writeMem(0xc174, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4779);
        EXPECT(gbc.pc(), 0xc175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc174), 0xab);
        // AB 004C
        gbc.setState(0xde14, 0x1309, 0x3ef0, 0x8869, 0x8a75, 0x4a10, 0x1, 0x0);
        gbc.writeMem(0xde14, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1309);
        EXPECT(gbc.pc(), 0xde15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde14), 0xab);
        // AB 004D
        gbc.setState(0x291, 0xf5aa, 0x92b0, 0x5b1f, 0xe5e8, 0x1e3d, 0x0, 0x1);
        gbc.writeMem(0x291, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf5aa);
        EXPECT(gbc.pc(), 0x292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 004E
        gbc.setState(0xa964, 0xb69b, 0x77b0, 0xb1de, 0xb749, 0x9cae, 0x0, 0x1);
        gbc.writeMem(0xa964, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb69b);
        EXPECT(gbc.pc(), 0xa965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa964), 0xab);
        // AB 004F
        gbc.setState(0xcc14, 0xea92, 0xd740, 0x5e36, 0x84da, 0xa09f, 0x1, 0x1);
        gbc.writeMem(0xcc14, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xea92);
        EXPECT(gbc.pc(), 0xcc15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc14), 0xab);
        // AB 0050
        gbc.setState(0x80c1, 0x7233, 0xdf70, 0x16f, 0x4a82, 0x1cf3, 0x1, 0x1);
        gbc.writeMem(0x80c1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7233);
        EXPECT(gbc.pc(), 0x80c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c1), 0xab);
        // AB 0051
        gbc.setState(0x738f, 0xc226, 0x4ed0, 0xea8a, 0x6404, 0xea34, 0x1, 0x1);
        gbc.writeMem(0x738f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc226);
        EXPECT(gbc.pc(), 0x7390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0052
        gbc.setState(0x12e0, 0xf3a8, 0xe620, 0xc086, 0x9913, 0xc496, 0x1, 0x0);
        gbc.writeMem(0x12e0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf3a8);
        EXPECT(gbc.pc(), 0x12e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0053
        gbc.setState(0xa009, 0x57f0, 0xee00, 0xd673, 0x1498, 0x108a, 0x1, 0x1);
        gbc.writeMem(0xa009, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x57f0);
        EXPECT(gbc.pc(), 0xa00a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa009), 0xab);
        // AB 0054
        gbc.setState(0xf6a, 0x1e01, 0x6750, 0x83ae, 0x7b9b, 0x25c8, 0x0, 0x0);
        gbc.writeMem(0xf6a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1e01);
        EXPECT(gbc.pc(), 0xf6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0055
        gbc.setState(0x48ff, 0x8fb3, 0xfe40, 0x65cc, 0xdde5, 0xef48, 0x0, 0x1);
        gbc.writeMem(0x48ff, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8fb3);
        EXPECT(gbc.pc(), 0x4900);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0056
        gbc.setState(0x59f9, 0x81a7, 0x1b70, 0x2ac9, 0x7c50, 0x2716, 0x0, 0x1);
        gbc.writeMem(0x59f9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x81a7);
        EXPECT(gbc.pc(), 0x59fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0057
        gbc.setState(0xbea9, 0x5f36, 0x3010, 0xc2ca, 0x5c52, 0x9801, 0x1, 0x1);
        gbc.writeMem(0xbea9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5f36);
        EXPECT(gbc.pc(), 0xbeaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbea9), 0xab);
        // AB 0058
        gbc.setState(0x327, 0x1fd6, 0xea60, 0xc422, 0x21b0, 0x58b5, 0x1, 0x1);
        gbc.writeMem(0x327, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1fd6);
        EXPECT(gbc.pc(), 0x328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0059
        gbc.setState(0x12f1, 0xd358, 0xb720, 0x3b62, 0xbec0, 0xb9ae, 0x1, 0x0);
        gbc.writeMem(0x12f1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd358);
        EXPECT(gbc.pc(), 0x12f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 005A
        gbc.setState(0xca1f, 0xa59e, 0x37e0, 0x94db, 0xbcd, 0x488f, 0x0, 0x1);
        gbc.writeMem(0xca1f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa59e);
        EXPECT(gbc.pc(), 0xca20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca1f), 0xab);
        // AB 005B
        gbc.setState(0x36ed, 0x1124, 0x2f0, 0x996c, 0xb4ea, 0x554c, 0x0, 0x1);
        gbc.writeMem(0x36ed, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1124);
        EXPECT(gbc.pc(), 0x36ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 005C
        gbc.setState(0x5ce7, 0xc17a, 0x1850, 0x6564, 0x387c, 0xf475, 0x0, 0x0);
        gbc.writeMem(0x5ce7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc17a);
        EXPECT(gbc.pc(), 0x5ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 005D
        gbc.setState(0xa0c2, 0x2751, 0x30b0, 0x5ae5, 0xd861, 0x13f6, 0x0, 0x1);
        gbc.writeMem(0xa0c2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2751);
        EXPECT(gbc.pc(), 0xa0c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c2), 0xab);
        // AB 005E
        gbc.setState(0x5a02, 0xcf95, 0x5f60, 0x95d4, 0xaad1, 0xb21f, 0x0, 0x0);
        gbc.writeMem(0x5a02, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcf95);
        EXPECT(gbc.pc(), 0x5a03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 005F
        gbc.setState(0x713f, 0xebeb, 0x8540, 0xb7ee, 0x44c3, 0xea98, 0x1, 0x0);
        gbc.writeMem(0x713f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xebeb);
        EXPECT(gbc.pc(), 0x7140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0060
        gbc.setState(0x1196, 0x2199, 0xa570, 0x4479, 0xe29, 0x1ba1, 0x1, 0x1);
        gbc.writeMem(0x1196, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2199);
        EXPECT(gbc.pc(), 0x1197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0061
        gbc.setState(0x162f, 0x11c8, 0xe910, 0x10ea, 0x87c7, 0xede0, 0x1, 0x0);
        gbc.writeMem(0x162f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x11c8);
        EXPECT(gbc.pc(), 0x1630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0062
        gbc.setState(0x38cf, 0xc599, 0xbac0, 0x1774, 0x51ce, 0x7f94, 0x1, 0x1);
        gbc.writeMem(0x38cf, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc599);
        EXPECT(gbc.pc(), 0x38d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0063
        gbc.setState(0x1bb6, 0xb042, 0xd7e0, 0xb9e8, 0x5967, 0x362f, 0x0, 0x1);
        gbc.writeMem(0x1bb6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb042);
        EXPECT(gbc.pc(), 0x1bb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0064
        gbc.setState(0x39a3, 0x35c3, 0xcdc0, 0x910c, 0xd0d1, 0xcbd5, 0x1, 0x0);
        gbc.writeMem(0x39a3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x35c3);
        EXPECT(gbc.pc(), 0x39a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0065
        gbc.setState(0x1e4f, 0x8787, 0xf320, 0xdd37, 0xf293, 0xd142, 0x0, 0x1);
        gbc.writeMem(0x1e4f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8787);
        EXPECT(gbc.pc(), 0x1e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0066
        gbc.setState(0x12c7, 0x5307, 0x46e0, 0x18ca, 0x47f1, 0x1c6a, 0x1, 0x0);
        gbc.writeMem(0x12c7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5307);
        EXPECT(gbc.pc(), 0x12c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0067
        gbc.setState(0x4a7d, 0x2fc6, 0x7e40, 0xaed6, 0xb296, 0x9dad, 0x0, 0x1);
        gbc.writeMem(0x4a7d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2fc6);
        EXPECT(gbc.pc(), 0x4a7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0068
        gbc.setState(0x947e, 0x116, 0x27c0, 0x7b43, 0xd35, 0x26bc, 0x0, 0x1);
        gbc.writeMem(0x947e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x116);
        EXPECT(gbc.pc(), 0x947f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x947e), 0xab);
        // AB 0069
        gbc.setState(0xb1d1, 0x77f2, 0x2890, 0x528a, 0xf1fb, 0x4c38, 0x0, 0x0);
        gbc.writeMem(0xb1d1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x77f2);
        EXPECT(gbc.pc(), 0xb1d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1d1), 0xab);
        // AB 006A
        gbc.setState(0x948f, 0x72aa, 0xaf80, 0x9187, 0xaf4f, 0xc2f1, 0x1, 0x1);
        gbc.writeMem(0x948f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x72aa);
        EXPECT(gbc.pc(), 0x9490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x948f), 0xab);
        // AB 006B
        gbc.setState(0x8982, 0xf8f1, 0xed70, 0x6685, 0x645, 0x42cd, 0x1, 0x0);
        gbc.writeMem(0x8982, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf8f1);
        EXPECT(gbc.pc(), 0x8983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8982), 0xab);
        // AB 006C
        gbc.setState(0x253d, 0xc40c, 0xd560, 0xcd75, 0xf015, 0x75a7, 0x1, 0x1);
        gbc.writeMem(0x253d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc40c);
        EXPECT(gbc.pc(), 0x253e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 006D
        gbc.setState(0xb25, 0x2672, 0xb5f0, 0x75, 0x5e54, 0x3505, 0x1, 0x1);
        gbc.writeMem(0xb25, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2672);
        EXPECT(gbc.pc(), 0xb26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 006E
        gbc.setState(0x1f83, 0xc7e3, 0xacf0, 0xeee6, 0x8e6e, 0x8a2, 0x0, 0x1);
        gbc.writeMem(0x1f83, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc7e3);
        EXPECT(gbc.pc(), 0x1f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 006F
        gbc.setState(0x1c47, 0x78ce, 0xefd0, 0xdb7c, 0xe1c8, 0xe85a, 0x0, 0x1);
        gbc.writeMem(0x1c47, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x78ce);
        EXPECT(gbc.pc(), 0x1c48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0070
        gbc.setState(0x5e2c, 0xbc5e, 0xa8d0, 0x5813, 0xd0e1, 0x9cd, 0x0, 0x1);
        gbc.writeMem(0x5e2c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xbc5e);
        EXPECT(gbc.pc(), 0x5e2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0072
        gbc.setState(0x8475, 0xeaf4, 0xa750, 0x4bf6, 0xf0d5, 0x8328, 0x1, 0x0);
        gbc.writeMem(0x8475, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xeaf4);
        EXPECT(gbc.pc(), 0x8476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8475), 0xab);
        // AB 0073
        gbc.setState(0xecaa, 0xb085, 0x86c0, 0xcf26, 0x8b1, 0x2abb, 0x0, 0x1);
        gbc.writeMem(0xecaa, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb085);
        EXPECT(gbc.pc(), 0xecab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecaa), 0xab);
        // AB 0075
        gbc.setState(0x7512, 0xd329, 0x41a0, 0x58e1, 0x7a9b, 0x7afb, 0x1, 0x0);
        gbc.writeMem(0x7512, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd329);
        EXPECT(gbc.pc(), 0x7513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0076
        gbc.setState(0x3da5, 0x9d94, 0xf320, 0xa688, 0x2d68, 0x4958, 0x0, 0x0);
        gbc.writeMem(0x3da5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9d94);
        EXPECT(gbc.pc(), 0x3da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0077
        gbc.setState(0x10d0, 0xa130, 0x7320, 0x958a, 0xb40a, 0xb543, 0x0, 0x1);
        gbc.writeMem(0x10d0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa130);
        EXPECT(gbc.pc(), 0x10d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0078
        gbc.setState(0x7395, 0xeea2, 0xad50, 0xedf4, 0x5ff, 0x3292, 0x0, 0x0);
        gbc.writeMem(0x7395, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xeea2);
        EXPECT(gbc.pc(), 0x7396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0079
        gbc.setState(0x6c53, 0x561e, 0x9030, 0x747d, 0x121d, 0x767b, 0x1, 0x1);
        gbc.writeMem(0x6c53, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x561e);
        EXPECT(gbc.pc(), 0x6c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 007A
        gbc.setState(0xe376, 0xba35, 0xce50, 0xfc6c, 0x44db, 0x4c58, 0x1, 0x1);
        gbc.writeMem(0xe376, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xba35);
        EXPECT(gbc.pc(), 0xe377);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe376), 0xab);
        // AB 007B
        gbc.setState(0xbe86, 0xc596, 0xce90, 0x3391, 0x320a, 0x1d4f, 0x0, 0x1);
        gbc.writeMem(0xbe86, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc596);
        EXPECT(gbc.pc(), 0xbe87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe86), 0xab);
        // AB 007C
        gbc.setState(0x31da, 0x63dd, 0xcfd0, 0xc941, 0xf319, 0xf16c, 0x0, 0x0);
        gbc.writeMem(0x31da, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x63dd);
        EXPECT(gbc.pc(), 0x31db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 007D
        gbc.setState(0xbd68, 0xd9b2, 0x3570, 0xd1fa, 0x3360, 0xb2e9, 0x1, 0x0);
        gbc.writeMem(0xbd68, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd9b2);
        EXPECT(gbc.pc(), 0xbd69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd68), 0xab);
        // AB 007E
        gbc.setState(0x7605, 0xe10b, 0xc870, 0xe8bf, 0x6296, 0xec80, 0x1, 0x1);
        gbc.writeMem(0x7605, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe10b);
        EXPECT(gbc.pc(), 0x7606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 007F
        gbc.setState(0x4162, 0xb072, 0xd910, 0x4524, 0xc3a3, 0xf094, 0x1, 0x0);
        gbc.writeMem(0x4162, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb072);
        EXPECT(gbc.pc(), 0x4163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0080
        gbc.setState(0x2b41, 0xfc55, 0x6260, 0xfe49, 0x92cf, 0x76f6, 0x0, 0x1);
        gbc.writeMem(0x2b41, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xfc55);
        EXPECT(gbc.pc(), 0x2b42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0081
        gbc.setState(0x4874, 0xce46, 0x6f00, 0xf952, 0x4c9, 0x667d, 0x1, 0x0);
        gbc.writeMem(0x4874, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xce46);
        EXPECT(gbc.pc(), 0x4875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0082
        gbc.setState(0x21da, 0x4b35, 0x2a40, 0x4957, 0x6418, 0x4467, 0x0, 0x0);
        gbc.writeMem(0x21da, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4b35);
        EXPECT(gbc.pc(), 0x21db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0083
        gbc.setState(0xe619, 0xf350, 0x6b70, 0x984a, 0xf854, 0xbea4, 0x1, 0x0);
        gbc.writeMem(0xe619, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf350);
        EXPECT(gbc.pc(), 0xe61a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe619), 0xab);
        // AB 0084
        gbc.setState(0x984a, 0x699c, 0x6560, 0xfab3, 0xe44c, 0x582e, 0x1, 0x1);
        gbc.writeMem(0x984a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x699c);
        EXPECT(gbc.pc(), 0x984b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x984a), 0xab);
        // AB 0085
        gbc.setState(0x84d9, 0x1d0d, 0x3df0, 0x4ab3, 0xbb75, 0xddf2, 0x1, 0x0);
        gbc.writeMem(0x84d9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1d0d);
        EXPECT(gbc.pc(), 0x84da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d9), 0xab);
        // AB 0086
        gbc.setState(0x854e, 0xd93b, 0xcd40, 0x9914, 0x71c4, 0x4e55, 0x0, 0x1);
        gbc.writeMem(0x854e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd93b);
        EXPECT(gbc.pc(), 0x854f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x854e), 0xab);
        // AB 0087
        gbc.setState(0xdde6, 0x77b7, 0x4d30, 0xb50b, 0xf292, 0x626e, 0x0, 0x1);
        gbc.writeMem(0xdde6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x77b7);
        EXPECT(gbc.pc(), 0xdde7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdde6), 0xab);
        // AB 0088
        gbc.setState(0x91bd, 0xf91, 0x3060, 0x6f00, 0x6d2c, 0x49f9, 0x0, 0x1);
        gbc.writeMem(0x91bd, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf91);
        EXPECT(gbc.pc(), 0x91be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91bd), 0xab);
        // AB 0089
        gbc.setState(0xa2, 0xf004, 0xcd50, 0xa271, 0x9c36, 0xb425, 0x1, 0x0);
        gbc.writeMem(0xa2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf004);
        EXPECT(gbc.pc(), 0xa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 008A
        gbc.setState(0xc3a6, 0x6284, 0xa650, 0x99cb, 0x6de9, 0x8b9d, 0x0, 0x1);
        gbc.writeMem(0xc3a6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6284);
        EXPECT(gbc.pc(), 0xc3a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a6), 0xab);
        // AB 008B
        gbc.setState(0x64d4, 0xc0b9, 0x7400, 0xde60, 0xd31f, 0x6785, 0x0, 0x0);
        gbc.writeMem(0x64d4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc0b9);
        EXPECT(gbc.pc(), 0x64d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 008C
        gbc.setState(0x5baa, 0x74c8, 0x7110, 0xb899, 0x38a9, 0x92d8, 0x0, 0x0);
        gbc.writeMem(0x5baa, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x74c8);
        EXPECT(gbc.pc(), 0x5bab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 008D
        gbc.setState(0x748, 0xaf35, 0x1f0, 0xfc0e, 0xcaac, 0x4078, 0x1, 0x1);
        gbc.writeMem(0x748, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xaf35);
        EXPECT(gbc.pc(), 0x749);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 008E
        gbc.setState(0x707b, 0x5418, 0x28f0, 0x4ba8, 0xa970, 0xcbb2, 0x0, 0x0);
        gbc.writeMem(0x707b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5418);
        EXPECT(gbc.pc(), 0x707c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 008F
        gbc.setState(0x105d, 0xd16d, 0x180, 0xeb1a, 0x2f47, 0x7e37, 0x0, 0x1);
        gbc.writeMem(0x105d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd16d);
        EXPECT(gbc.pc(), 0x105e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0090
        gbc.setState(0xcd0a, 0x1ab2, 0x6010, 0x2b5, 0x58eb, 0x638f, 0x1, 0x1);
        gbc.writeMem(0xcd0a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1ab2);
        EXPECT(gbc.pc(), 0xcd0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd0a), 0xab);
        // AB 0091
        gbc.setState(0x954d, 0x6624, 0xa130, 0x33e8, 0xd05e, 0x2031, 0x0, 0x0);
        gbc.writeMem(0x954d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6624);
        EXPECT(gbc.pc(), 0x954e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x954d), 0xab);
        // AB 0094
        gbc.setState(0x8acd, 0xc1fe, 0xcac0, 0xb53b, 0xdfe, 0x12f1, 0x1, 0x1);
        gbc.writeMem(0x8acd, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc1fe);
        EXPECT(gbc.pc(), 0x8ace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8acd), 0xab);
        // AB 0095
        gbc.setState(0x39ff, 0xbbfb, 0x54e0, 0x325f, 0x15cf, 0x9259, 0x0, 0x1);
        gbc.writeMem(0x39ff, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xbbfb);
        EXPECT(gbc.pc(), 0x3a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0096
        gbc.setState(0xc4c4, 0xde9, 0xf260, 0x5822, 0x3dce, 0x985b, 0x0, 0x0);
        gbc.writeMem(0xc4c4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xde9);
        EXPECT(gbc.pc(), 0xc4c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4c4), 0xab);
        // AB 0097
        gbc.setState(0x80d5, 0x1477, 0x5990, 0x8c21, 0x24c3, 0x662a, 0x0, 0x0);
        gbc.writeMem(0x80d5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1477);
        EXPECT(gbc.pc(), 0x80d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d5), 0xab);
        // AB 0098
        gbc.setState(0x26b1, 0x3ece, 0xc520, 0x4bd6, 0xf033, 0x173e, 0x1, 0x0);
        gbc.writeMem(0x26b1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3ece);
        EXPECT(gbc.pc(), 0x26b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0099
        gbc.setState(0xaf18, 0xccaf, 0x4c20, 0xd3a2, 0x5be4, 0x8559, 0x1, 0x0);
        gbc.writeMem(0xaf18, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xccaf);
        EXPECT(gbc.pc(), 0xaf19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf18), 0xab);
        // AB 009A
        gbc.setState(0xce4b, 0x585b, 0x5970, 0x6f5e, 0x1aef, 0xe8eb, 0x1, 0x0);
        gbc.writeMem(0xce4b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x585b);
        EXPECT(gbc.pc(), 0xce4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce4b), 0xab);
        // AB 009B
        gbc.setState(0x87dd, 0x67aa, 0x2160, 0x2bf5, 0x32ff, 0x7746, 0x0, 0x1);
        gbc.writeMem(0x87dd, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x67aa);
        EXPECT(gbc.pc(), 0x87de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87dd), 0xab);
        // AB 009C
        gbc.setState(0xdac5, 0x1b06, 0xbe0, 0x38a1, 0xc9bd, 0x2d1, 0x0, 0x0);
        gbc.writeMem(0xdac5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1b06);
        EXPECT(gbc.pc(), 0xdac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdac5), 0xab);
        // AB 009D
        gbc.setState(0x7277, 0xabb4, 0x5300, 0x4d47, 0x9c48, 0x9b2f, 0x1, 0x1);
        gbc.writeMem(0x7277, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xabb4);
        EXPECT(gbc.pc(), 0x7278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 009E
        gbc.setState(0x17e7, 0xae79, 0xb5d0, 0x7261, 0xfa30, 0xbb67, 0x0, 0x0);
        gbc.writeMem(0x17e7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xae79);
        EXPECT(gbc.pc(), 0x17e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 009F
        gbc.setState(0x825c, 0x2b18, 0x20b0, 0x8fdb, 0xaf3c, 0xc064, 0x0, 0x1);
        gbc.writeMem(0x825c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2b18);
        EXPECT(gbc.pc(), 0x825d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x825c), 0xab);
        // AB 00A0
        gbc.setState(0x645b, 0x885d, 0x1d30, 0xd041, 0x521, 0x9cd6, 0x0, 0x1);
        gbc.writeMem(0x645b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x885d);
        EXPECT(gbc.pc(), 0x645c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00A1
        gbc.setState(0x42a5, 0xab3e, 0x7320, 0xf165, 0xc56, 0x9ba5, 0x1, 0x0);
        gbc.writeMem(0x42a5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xab3e);
        EXPECT(gbc.pc(), 0x42a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00A2
        gbc.setState(0xb32c, 0xa375, 0x3940, 0x21a5, 0x545f, 0x9b94, 0x1, 0x1);
        gbc.writeMem(0xb32c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa375);
        EXPECT(gbc.pc(), 0xb32d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb32c), 0xab);
        // AB 00A3
        gbc.setState(0x2cf6, 0x3e8b, 0x99f0, 0xa7a8, 0xf515, 0xcd41, 0x1, 0x1);
        gbc.writeMem(0x2cf6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3e8b);
        EXPECT(gbc.pc(), 0x2cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00A5
        gbc.setState(0xe345, 0xaef5, 0x8a70, 0xea26, 0xe96d, 0x2f52, 0x0, 0x0);
        gbc.writeMem(0xe345, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xaef5);
        EXPECT(gbc.pc(), 0xe346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe345), 0xab);
        // AB 00A6
        gbc.setState(0x1c58, 0x895e, 0xb20, 0x433d, 0x8720, 0x20e6, 0x0, 0x0);
        gbc.writeMem(0x1c58, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x895e);
        EXPECT(gbc.pc(), 0x1c59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00A7
        gbc.setState(0x823d, 0x1328, 0xb510, 0x5e4f, 0x2ca7, 0x970e, 0x0, 0x0);
        gbc.writeMem(0x823d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1328);
        EXPECT(gbc.pc(), 0x823e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x823d), 0xab);
        // AB 00A8
        gbc.setState(0x587f, 0x60e7, 0x4df0, 0x341, 0xc357, 0x7e3d, 0x1, 0x0);
        gbc.writeMem(0x587f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x60e7);
        EXPECT(gbc.pc(), 0x5880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00AA
        gbc.setState(0xdc43, 0x4eda, 0x6320, 0xf363, 0xf7a1, 0x90b7, 0x0, 0x1);
        gbc.writeMem(0xdc43, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4eda);
        EXPECT(gbc.pc(), 0xdc44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc43), 0xab);
        // AB 00AB
        gbc.setState(0xb979, 0x2323, 0x9f00, 0x56ee, 0x4b0, 0xbf16, 0x0, 0x1);
        gbc.writeMem(0xb979, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2323);
        EXPECT(gbc.pc(), 0xb97a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb979), 0xab);
        // AB 00AC
        gbc.setState(0x5777, 0xb5e5, 0x80e0, 0xb75c, 0x80a4, 0xc076, 0x1, 0x0);
        gbc.writeMem(0x5777, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb5e5);
        EXPECT(gbc.pc(), 0x5778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00AD
        gbc.setState(0x252, 0x3503, 0x6e00, 0x78df, 0xa386, 0x9c61, 0x1, 0x1);
        gbc.writeMem(0x252, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3503);
        EXPECT(gbc.pc(), 0x253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00AE
        gbc.setState(0x4af4, 0xb55f, 0x4f20, 0x3d03, 0x233f, 0xa148, 0x0, 0x0);
        gbc.writeMem(0x4af4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb55f);
        EXPECT(gbc.pc(), 0x4af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00AF
        gbc.setState(0xa98a, 0x7129, 0xc950, 0xdda7, 0x1f8c, 0x13a9, 0x0, 0x0);
        gbc.writeMem(0xa98a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7129);
        EXPECT(gbc.pc(), 0xa98b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa98a), 0xab);
        // AB 00B0
        gbc.setState(0x1930, 0x927a, 0xaf50, 0x743a, 0xa011, 0xaab4, 0x0, 0x1);
        gbc.writeMem(0x1930, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x927a);
        EXPECT(gbc.pc(), 0x1931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00B1
        gbc.setState(0x5259, 0x4d4c, 0xbea0, 0x7b45, 0x6ace, 0x4cbe, 0x1, 0x1);
        gbc.writeMem(0x5259, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4d4c);
        EXPECT(gbc.pc(), 0x525a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00B2
        gbc.setState(0xce2, 0xc944, 0xec60, 0xd73d, 0x4529, 0xc645, 0x0, 0x0);
        gbc.writeMem(0xce2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc944);
        EXPECT(gbc.pc(), 0xce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00B3
        gbc.setState(0xb3ac, 0xe18b, 0x570, 0x20a5, 0x1bb6, 0x3341, 0x1, 0x0);
        gbc.writeMem(0xb3ac, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe18b);
        EXPECT(gbc.pc(), 0xb3ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3ac), 0xab);
        // AB 00B4
        gbc.setState(0xab5d, 0x9845, 0x9300, 0xb73a, 0xd04d, 0xc1e5, 0x1, 0x0);
        gbc.writeMem(0xab5d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9845);
        EXPECT(gbc.pc(), 0xab5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab5d), 0xab);
        // AB 00B5
        gbc.setState(0x2e17, 0x236a, 0x4dd0, 0xef5, 0x371, 0x8693, 0x0, 0x0);
        gbc.writeMem(0x2e17, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x236a);
        EXPECT(gbc.pc(), 0x2e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00B6
        gbc.setState(0xbbf7, 0xef3f, 0x4070, 0x2c16, 0x3f2f, 0x7e4a, 0x1, 0x0);
        gbc.writeMem(0xbbf7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xef3f);
        EXPECT(gbc.pc(), 0xbbf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf7), 0xab);
        // AB 00B7
        gbc.setState(0x81b6, 0xa846, 0xb040, 0x48fb, 0x1f78, 0xf249, 0x0, 0x0);
        gbc.writeMem(0x81b6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa846);
        EXPECT(gbc.pc(), 0x81b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81b6), 0xab);
        // AB 00B8
        gbc.setState(0x4f7f, 0xdf83, 0x6c10, 0x319b, 0x8bea, 0xefeb, 0x1, 0x0);
        gbc.writeMem(0x4f7f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xdf83);
        EXPECT(gbc.pc(), 0x4f80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00B9
        gbc.setState(0x8af4, 0xd222, 0xe6d0, 0x5caa, 0x119b, 0x718d, 0x1, 0x1);
        gbc.writeMem(0x8af4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd222);
        EXPECT(gbc.pc(), 0x8af5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af4), 0xab);
        // AB 00BA
        gbc.setState(0x6f73, 0x57d9, 0xf070, 0xdc66, 0xbd43, 0xaff8, 0x1, 0x0);
        gbc.writeMem(0x6f73, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x57d9);
        EXPECT(gbc.pc(), 0x6f74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00BB
        gbc.setState(0x5335, 0x7e04, 0x6490, 0x9156, 0xabc, 0xfff5, 0x0, 0x0);
        gbc.writeMem(0x5335, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7e04);
        EXPECT(gbc.pc(), 0x5336);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00BC
        gbc.setState(0x86ef, 0x53e, 0x7b30, 0xbff, 0x6bd9, 0xa022, 0x1, 0x1);
        gbc.writeMem(0x86ef, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x53e);
        EXPECT(gbc.pc(), 0x86f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ef), 0xab);
        // AB 00BD
        gbc.setState(0x5722, 0xc82f, 0xef20, 0xabec, 0x33ef, 0x3553, 0x0, 0x1);
        gbc.writeMem(0x5722, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc82f);
        EXPECT(gbc.pc(), 0x5723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00BE
        gbc.setState(0x1c2b, 0x7b70, 0xc240, 0x2cbc, 0x5642, 0x27c5, 0x0, 0x0);
        gbc.writeMem(0x1c2b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7b70);
        EXPECT(gbc.pc(), 0x1c2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00BF
        gbc.setState(0x6885, 0x2a9b, 0x8410, 0x2d48, 0xe277, 0xc63f, 0x0, 0x0);
        gbc.writeMem(0x6885, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2a9b);
        EXPECT(gbc.pc(), 0x6886);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00C0
        gbc.setState(0xdec5, 0x37ca, 0xb4e0, 0x62aa, 0x5ec9, 0x194b, 0x0, 0x0);
        gbc.writeMem(0xdec5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x37ca);
        EXPECT(gbc.pc(), 0xdec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdec5), 0xab);
        // AB 00C1
        gbc.setState(0x1c3e, 0x859a, 0x1c10, 0x2b68, 0x95d7, 0x838a, 0x0, 0x1);
        gbc.writeMem(0x1c3e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x859a);
        EXPECT(gbc.pc(), 0x1c3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00C2
        gbc.setState(0x7624, 0x8052, 0x7fb0, 0x464f, 0xd6e3, 0x8d6d, 0x0, 0x1);
        gbc.writeMem(0x7624, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8052);
        EXPECT(gbc.pc(), 0x7625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00C4
        gbc.setState(0x86d1, 0xbc73, 0xdde0, 0xef33, 0xb287, 0x7e8b, 0x1, 0x0);
        gbc.writeMem(0x86d1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbc73);
        EXPECT(gbc.pc(), 0x86d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d1), 0xab);
        // AB 00C5
        gbc.setState(0xeb84, 0x41ac, 0x4d00, 0xb900, 0x47c1, 0xc55f, 0x0, 0x1);
        gbc.writeMem(0xeb84, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x41ac);
        EXPECT(gbc.pc(), 0xeb85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb84), 0xab);
        // AB 00C6
        gbc.setState(0x3571, 0x8514, 0x5640, 0xaeeb, 0xdcc4, 0x8a33, 0x0, 0x1);
        gbc.writeMem(0x3571, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8514);
        EXPECT(gbc.pc(), 0x3572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00C8
        gbc.setState(0x4414, 0xba5d, 0x9130, 0x7c4e, 0x67d8, 0x6e36, 0x0, 0x0);
        gbc.writeMem(0x4414, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xba5d);
        EXPECT(gbc.pc(), 0x4415);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00C9
        gbc.setState(0x4c7c, 0x4f9c, 0x10, 0xca8c, 0x313e, 0xbe1b, 0x0, 0x1);
        gbc.writeMem(0x4c7c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4f9c);
        EXPECT(gbc.pc(), 0x4c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00CA
        gbc.setState(0x73f3, 0xacec, 0x57d0, 0xb54a, 0xce57, 0x7ddd, 0x1, 0x0);
        gbc.writeMem(0x73f3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xacec);
        EXPECT(gbc.pc(), 0x73f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00CB
        gbc.setState(0x3951, 0x9de5, 0xb2e0, 0x83c6, 0x3f68, 0x8b8c, 0x0, 0x1);
        gbc.writeMem(0x3951, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9de5);
        EXPECT(gbc.pc(), 0x3952);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00CD
        gbc.setState(0x437e, 0x21c1, 0x5e30, 0x7a44, 0xf090, 0x96d9, 0x1, 0x0);
        gbc.writeMem(0x437e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x21c1);
        EXPECT(gbc.pc(), 0x437f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00CE
        gbc.setState(0xd14d, 0xa088, 0xfbd0, 0x3a51, 0x287b, 0x2548, 0x0, 0x1);
        gbc.writeMem(0xd14d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa088);
        EXPECT(gbc.pc(), 0xd14e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd14d), 0xab);
        // AB 00CF
        gbc.setState(0xe974, 0x26b1, 0x1250, 0x9a3, 0xfd7d, 0xdc9b, 0x1, 0x1);
        gbc.writeMem(0xe974, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x26b1);
        EXPECT(gbc.pc(), 0xe975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe974), 0xab);
        // AB 00D0
        gbc.setState(0xbbd1, 0x1371, 0xe030, 0xd08d, 0x782c, 0x5b7b, 0x0, 0x0);
        gbc.writeMem(0xbbd1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1371);
        EXPECT(gbc.pc(), 0xbbd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbd1), 0xab);
        // AB 00D1
        gbc.setState(0x366b, 0x959f, 0x3ca0, 0xe1e3, 0xa426, 0xaab2, 0x1, 0x0);
        gbc.writeMem(0x366b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x959f);
        EXPECT(gbc.pc(), 0x366c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00D2
        gbc.setState(0xce32, 0x5edb, 0x8fd0, 0xb2b3, 0xd787, 0xd26e, 0x0, 0x0);
        gbc.writeMem(0xce32, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5edb);
        EXPECT(gbc.pc(), 0xce33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce32), 0xab);
        // AB 00D3
        gbc.setState(0xbc7c, 0x3e01, 0xaf20, 0x2b12, 0x2c89, 0x6a13, 0x1, 0x0);
        gbc.writeMem(0xbc7c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3e01);
        EXPECT(gbc.pc(), 0xbc7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7c), 0xab);
        // AB 00D4
        gbc.setState(0x5558, 0xf409, 0x4480, 0xbcfb, 0xae5, 0x334, 0x0, 0x1);
        gbc.writeMem(0x5558, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf409);
        EXPECT(gbc.pc(), 0x5559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00D5
        gbc.setState(0x3f4b, 0x46be, 0xe0e0, 0x21b1, 0x2782, 0xafea, 0x1, 0x1);
        gbc.writeMem(0x3f4b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x46be);
        EXPECT(gbc.pc(), 0x3f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00D6
        gbc.setState(0x5653, 0xda77, 0x78e0, 0x2025, 0xf765, 0x996a, 0x0, 0x0);
        gbc.writeMem(0x5653, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xda77);
        EXPECT(gbc.pc(), 0x5654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00D7
        gbc.setState(0xbda2, 0x7f3d, 0x75e0, 0xf525, 0xce8b, 0x6dc0, 0x1, 0x1);
        gbc.writeMem(0xbda2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x7f3d);
        EXPECT(gbc.pc(), 0xbda3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbda2), 0xab);
        // AB 00D8
        gbc.setState(0xc98, 0x6ec1, 0xd130, 0x6c9d, 0x9b03, 0xea89, 0x1, 0x1);
        gbc.writeMem(0xc98, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6ec1);
        EXPECT(gbc.pc(), 0xc99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00DA
        gbc.setState(0xb543, 0x733d, 0x2df0, 0x5eb6, 0x1fc8, 0xf42b, 0x0, 0x1);
        gbc.writeMem(0xb543, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x733d);
        EXPECT(gbc.pc(), 0xb544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb543), 0xab);
        // AB 00DB
        gbc.setState(0xcf4a, 0x1dc9, 0x29f0, 0x7ac9, 0x2db6, 0x35d2, 0x0, 0x0);
        gbc.writeMem(0xcf4a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1dc9);
        EXPECT(gbc.pc(), 0xcf4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf4a), 0xab);
        // AB 00DC
        gbc.setState(0x2949, 0xdbeb, 0x42d0, 0x257f, 0xf8a0, 0x799, 0x0, 0x0);
        gbc.writeMem(0x2949, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xdbeb);
        EXPECT(gbc.pc(), 0x294a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00DF
        gbc.setState(0x42c4, 0x2318, 0xfe00, 0x515d, 0xa95, 0x734, 0x0, 0x0);
        gbc.writeMem(0x42c4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2318);
        EXPECT(gbc.pc(), 0x42c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00E0
        gbc.setState(0xdbb, 0xee3, 0x1150, 0x9e66, 0x46f7, 0xdb23, 0x0, 0x1);
        gbc.writeMem(0xdbb, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xee3);
        EXPECT(gbc.pc(), 0xdbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00E1
        gbc.setState(0xabac, 0xbaef, 0x42c0, 0xe185, 0x9206, 0xa60c, 0x1, 0x1);
        gbc.writeMem(0xabac, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbaef);
        EXPECT(gbc.pc(), 0xabad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabac), 0xab);
        // AB 00E2
        gbc.setState(0x6e5e, 0x65d0, 0xff40, 0x873d, 0x86a4, 0x710e, 0x0, 0x1);
        gbc.writeMem(0x6e5e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x65d0);
        EXPECT(gbc.pc(), 0x6e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00E3
        gbc.setState(0xbdb, 0x11d7, 0xf880, 0x25c4, 0x5c8e, 0xa5cc, 0x1, 0x0);
        gbc.writeMem(0xbdb, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x11d7);
        EXPECT(gbc.pc(), 0xbdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00E4
        gbc.setState(0x7e9e, 0x59b5, 0x4010, 0x74e5, 0xb4b2, 0xf70c, 0x0, 0x1);
        gbc.writeMem(0x7e9e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x59b5);
        EXPECT(gbc.pc(), 0x7e9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00E5
        gbc.setState(0xa19, 0x554d, 0x4220, 0x7f11, 0x7494, 0xf608, 0x1, 0x0);
        gbc.writeMem(0xa19, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x554d);
        EXPECT(gbc.pc(), 0xa1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00E6
        gbc.setState(0x5d0, 0x45c, 0x3eb0, 0x50c5, 0x3cc0, 0x7301, 0x1, 0x0);
        gbc.writeMem(0x5d0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x45c);
        EXPECT(gbc.pc(), 0x5d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00E7
        gbc.setState(0xe1b9, 0xd952, 0x21f0, 0x9ecd, 0xaef6, 0x4d10, 0x0, 0x1);
        gbc.writeMem(0xe1b9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd952);
        EXPECT(gbc.pc(), 0xe1ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1b9), 0xab);
        // AB 00E8
        gbc.setState(0x375d, 0x818d, 0x42e0, 0xc84c, 0xd152, 0x7529, 0x0, 0x1);
        gbc.writeMem(0x375d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x818d);
        EXPECT(gbc.pc(), 0x375e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00E9
        gbc.setState(0x5c78, 0xe539, 0xe6e0, 0xae13, 0xed93, 0x3e62, 0x1, 0x1);
        gbc.writeMem(0x5c78, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe539);
        EXPECT(gbc.pc(), 0x5c79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00EA
        gbc.setState(0xee9f, 0xbf07, 0x420, 0x14fc, 0x44f0, 0xc26e, 0x0, 0x1);
        gbc.writeMem(0xee9f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbf07);
        EXPECT(gbc.pc(), 0xeea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee9f), 0xab);
        // AB 00EB
        gbc.setState(0x3dc1, 0x74be, 0x5ec0, 0xcff3, 0x1307, 0xfcfa, 0x1, 0x1);
        gbc.writeMem(0x3dc1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x74be);
        EXPECT(gbc.pc(), 0x3dc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00EC
        gbc.setState(0xab39, 0x3cdb, 0x7560, 0xe29c, 0xda62, 0x8bd9, 0x0, 0x1);
        gbc.writeMem(0xab39, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3cdb);
        EXPECT(gbc.pc(), 0xab3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab39), 0xab);
        // AB 00ED
        gbc.setState(0xe5f2, 0x2e24, 0xf980, 0x21da, 0x6b01, 0xce80, 0x1, 0x1);
        gbc.writeMem(0xe5f2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2e24);
        EXPECT(gbc.pc(), 0xe5f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5f2), 0xab);
        // AB 00EE
        gbc.setState(0x28aa, 0xd4f5, 0xb50, 0x6c4d, 0x3f8a, 0x7440, 0x0, 0x1);
        gbc.writeMem(0x28aa, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd4f5);
        EXPECT(gbc.pc(), 0x28ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00EF
        gbc.setState(0xa2a9, 0xeb54, 0x2060, 0x454e, 0x9379, 0x9e6e, 0x0, 0x0);
        gbc.writeMem(0xa2a9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xeb54);
        EXPECT(gbc.pc(), 0xa2aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2a9), 0xab);
        // AB 00F0
        gbc.setState(0x3c38, 0x19e7, 0x1a60, 0xdc86, 0x5a8b, 0x173c, 0x0, 0x1);
        gbc.writeMem(0x3c38, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x19e7);
        EXPECT(gbc.pc(), 0x3c39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00F1
        gbc.setState(0x890a, 0xc72d, 0x8e50, 0x4587, 0x5c69, 0xb1dd, 0x0, 0x0);
        gbc.writeMem(0x890a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc72d);
        EXPECT(gbc.pc(), 0x890b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890a), 0xab);
        // AB 00F2
        gbc.setState(0x1fd1, 0x8bbf, 0x4b10, 0x9742, 0x7fd, 0xc63d, 0x0, 0x1);
        gbc.writeMem(0x1fd1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8bbf);
        EXPECT(gbc.pc(), 0x1fd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00F5
        gbc.setState(0x49e9, 0x41a5, 0xb9a0, 0xc735, 0x6e00, 0x25fc, 0x1, 0x0);
        gbc.writeMem(0x49e9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x41a5);
        EXPECT(gbc.pc(), 0x49ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00F6
        gbc.setState(0xdfc8, 0x81c4, 0x820, 0xc459, 0x90ab, 0xa14a, 0x0, 0x0);
        gbc.writeMem(0xdfc8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x81c4);
        EXPECT(gbc.pc(), 0xdfc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc8), 0xab);
        // AB 00F7
        gbc.setState(0x3433, 0xda10, 0xae70, 0x18dc, 0x4c82, 0x7afa, 0x0, 0x1);
        gbc.writeMem(0x3433, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xda10);
        EXPECT(gbc.pc(), 0x3434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00F8
        gbc.setState(0x1cb4, 0xfd6f, 0x5fd0, 0x9c7d, 0xa1b6, 0x924a, 0x1, 0x1);
        gbc.writeMem(0x1cb4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xfd6f);
        EXPECT(gbc.pc(), 0x1cb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00F9
        gbc.setState(0x14f9, 0x30, 0xadc0, 0x1eed, 0x2c16, 0xfd7d, 0x1, 0x0);
        gbc.writeMem(0x14f9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x30);
        EXPECT(gbc.pc(), 0x14fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00FA
        gbc.setState(0x75ce, 0x7a71, 0xb3d0, 0x7ad6, 0x143d, 0xc642, 0x1, 0x0);
        gbc.writeMem(0x75ce, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7a71);
        EXPECT(gbc.pc(), 0x75cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00FB
        gbc.setState(0x69b9, 0xa64d, 0xdcb0, 0xa943, 0x6e84, 0x9d34, 0x1, 0x1);
        gbc.writeMem(0x69b9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa64d);
        EXPECT(gbc.pc(), 0x69ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00FC
        gbc.setState(0x49f6, 0x4b66, 0xc620, 0xf8cd, 0x988a, 0xa7b2, 0x0, 0x1);
        gbc.writeMem(0x49f6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4b66);
        EXPECT(gbc.pc(), 0x49f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 00FD
        gbc.setState(0xe837, 0xa27f, 0x3ad0, 0x4df3, 0x479f, 0x683f, 0x0, 0x0);
        gbc.writeMem(0xe837, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa27f);
        EXPECT(gbc.pc(), 0xe838);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe837), 0xab);
        // AB 00FE
        gbc.setState(0xcc95, 0x6407, 0xaeb0, 0x7f12, 0x5034, 0xb2c1, 0x0, 0x1);
        gbc.writeMem(0xcc95, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6407);
        EXPECT(gbc.pc(), 0xcc96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc95), 0xab);
        // AB 0100
        gbc.setState(0x8b65, 0xdf27, 0x57b0, 0xd21f, 0x8da8, 0x40b8, 0x0, 0x1);
        gbc.writeMem(0x8b65, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xdf27);
        EXPECT(gbc.pc(), 0x8b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b65), 0xab);
        // AB 0101
        gbc.setState(0xcf9e, 0xe2e0, 0xf690, 0x16a1, 0xf958, 0xf16a, 0x1, 0x0);
        gbc.writeMem(0xcf9e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe2e0);
        EXPECT(gbc.pc(), 0xcf9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf9e), 0xab);
        // AB 0102
        gbc.setState(0xa333, 0x5975, 0x92a0, 0xbed8, 0x86e5, 0x1ad2, 0x0, 0x1);
        gbc.writeMem(0xa333, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5975);
        EXPECT(gbc.pc(), 0xa334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa333), 0xab);
        // AB 0104
        gbc.setState(0x7df9, 0x1d29, 0x9ab0, 0xdc3, 0x915a, 0x2dec, 0x1, 0x1);
        gbc.writeMem(0x7df9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1d29);
        EXPECT(gbc.pc(), 0x7dfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0105
        gbc.setState(0xe3fc, 0xde12, 0xea20, 0x5e4d, 0xe49, 0x338, 0x0, 0x0);
        gbc.writeMem(0xe3fc, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xde12);
        EXPECT(gbc.pc(), 0xe3fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3fc), 0xab);
        // AB 0106
        gbc.setState(0xa96a, 0xabc, 0xd370, 0xe3f2, 0x1e96, 0xd03d, 0x1, 0x0);
        gbc.writeMem(0xa96a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xabc);
        EXPECT(gbc.pc(), 0xa96b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa96a), 0xab);
        // AB 0108
        gbc.setState(0x53f6, 0x75ea, 0x9af0, 0x3e41, 0x4107, 0x51b9, 0x1, 0x0);
        gbc.writeMem(0x53f6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x75ea);
        EXPECT(gbc.pc(), 0x53f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0109
        gbc.setState(0xbdd4, 0x3112, 0x5d70, 0xfd80, 0x29de, 0x8df3, 0x0, 0x0);
        gbc.writeMem(0xbdd4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3112);
        EXPECT(gbc.pc(), 0xbdd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdd4), 0xab);
        // AB 010A
        gbc.setState(0xa82, 0xe72d, 0xa20, 0xaec4, 0x1423, 0x25e0, 0x0, 0x1);
        gbc.writeMem(0xa82, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe72d);
        EXPECT(gbc.pc(), 0xa83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 010B
        gbc.setState(0x4fc2, 0xd038, 0x88d0, 0x4c77, 0xa1a8, 0x8aa8, 0x1, 0x0);
        gbc.writeMem(0x4fc2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd038);
        EXPECT(gbc.pc(), 0x4fc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 010C
        gbc.setState(0x8e78, 0x477b, 0xcb0, 0x9598, 0xceb2, 0x3a6, 0x0, 0x0);
        gbc.writeMem(0x8e78, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x477b);
        EXPECT(gbc.pc(), 0x8e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e78), 0xab);
        // AB 010D
        gbc.setState(0x3da2, 0xc1b3, 0x2d40, 0x2958, 0x3a42, 0xb44a, 0x1, 0x0);
        gbc.writeMem(0x3da2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc1b3);
        EXPECT(gbc.pc(), 0x3da3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 010E
        gbc.setState(0x14ef, 0x50bf, 0x76f0, 0x8f7d, 0x211b, 0xc1f8, 0x1, 0x0);
        gbc.writeMem(0x14ef, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x50bf);
        EXPECT(gbc.pc(), 0x14f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 010F
        gbc.setState(0xa51e, 0x88af, 0x70f0, 0xab2, 0x6f82, 0x52e8, 0x1, 0x0);
        gbc.writeMem(0xa51e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x88af);
        EXPECT(gbc.pc(), 0xa51f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa51e), 0xab);
        // AB 0110
        gbc.setState(0x2a9b, 0xd4e8, 0x1ee0, 0x4df6, 0xd806, 0xd027, 0x1, 0x1);
        gbc.writeMem(0x2a9b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd4e8);
        EXPECT(gbc.pc(), 0x2a9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0111
        gbc.setState(0x396f, 0x4c4b, 0xfff0, 0x8a74, 0x1ffb, 0x70bc, 0x1, 0x0);
        gbc.writeMem(0x396f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4c4b);
        EXPECT(gbc.pc(), 0x3970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0112
        gbc.setState(0xda39, 0xfff5, 0x5930, 0x3e8c, 0x2e3d, 0xa2f8, 0x0, 0x1);
        gbc.writeMem(0xda39, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfff5);
        EXPECT(gbc.pc(), 0xda3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda39), 0xab);
        // AB 0113
        gbc.setState(0x9f47, 0xc17f, 0x26e0, 0xd635, 0x2021, 0x743b, 0x1, 0x0);
        gbc.writeMem(0x9f47, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc17f);
        EXPECT(gbc.pc(), 0x9f48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f47), 0xab);
        // AB 0115
        gbc.setState(0x2370, 0x1bd5, 0xb220, 0xa90b, 0x6d02, 0xd920, 0x1, 0x1);
        gbc.writeMem(0x2370, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1bd5);
        EXPECT(gbc.pc(), 0x2371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0116
        gbc.setState(0x9aba, 0x8926, 0x79d0, 0xeb57, 0x58c1, 0x8187, 0x0, 0x1);
        gbc.writeMem(0x9aba, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8926);
        EXPECT(gbc.pc(), 0x9abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aba), 0xab);
        // AB 0117
        gbc.setState(0xec3c, 0x7c0f, 0xaef0, 0xae1e, 0xa4ee, 0x2a56, 0x0, 0x0);
        gbc.writeMem(0xec3c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7c0f);
        EXPECT(gbc.pc(), 0xec3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec3c), 0xab);
        // AB 0118
        gbc.setState(0xc3c1, 0x10ec, 0x7ea0, 0x7d01, 0x65c4, 0x2b63, 0x0, 0x1);
        gbc.writeMem(0xc3c1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x10ec);
        EXPECT(gbc.pc(), 0xc3c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3c1), 0xab);
        // AB 0119
        gbc.setState(0x5079, 0x387f, 0x3450, 0x6767, 0x2649, 0xfe72, 0x0, 0x0);
        gbc.writeMem(0x5079, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x387f);
        EXPECT(gbc.pc(), 0x507a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 011A
        gbc.setState(0x5a56, 0x3601, 0x2410, 0x6b46, 0x9e54, 0xea66, 0x0, 0x1);
        gbc.writeMem(0x5a56, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3601);
        EXPECT(gbc.pc(), 0x5a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 011B
        gbc.setState(0x6573, 0x864d, 0x540, 0x562a, 0xc8b8, 0xc95a, 0x0, 0x1);
        gbc.writeMem(0x6573, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x864d);
        EXPECT(gbc.pc(), 0x6574);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 011C
        gbc.setState(0x5ec4, 0xf407, 0xf5a0, 0xab19, 0xb35c, 0xd280, 0x0, 0x1);
        gbc.writeMem(0x5ec4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf407);
        EXPECT(gbc.pc(), 0x5ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 011D
        gbc.setState(0x1f6a, 0xaf5b, 0x78f0, 0x65de, 0xf892, 0x63b8, 0x0, 0x0);
        gbc.writeMem(0x1f6a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xaf5b);
        EXPECT(gbc.pc(), 0x1f6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 011E
        gbc.setState(0x3e36, 0x13ac, 0xede0, 0xa711, 0xaeed, 0x60ca, 0x1, 0x0);
        gbc.writeMem(0x3e36, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x13ac);
        EXPECT(gbc.pc(), 0x3e37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 011F
        gbc.setState(0x447c, 0x13f2, 0x8d70, 0x54a7, 0xbaa, 0x40bd, 0x0, 0x1);
        gbc.writeMem(0x447c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x13f2);
        EXPECT(gbc.pc(), 0x447d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0120
        gbc.setState(0x13a5, 0xa1b7, 0x5bd0, 0x3d7d, 0x274c, 0x448e, 0x1, 0x1);
        gbc.writeMem(0x13a5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa1b7);
        EXPECT(gbc.pc(), 0x13a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0121
        gbc.setState(0xbc4f, 0x7e2c, 0x57a0, 0x2d95, 0xf268, 0x73d5, 0x0, 0x0);
        gbc.writeMem(0xbc4f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7e2c);
        EXPECT(gbc.pc(), 0xbc50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc4f), 0xab);
        // AB 0123
        gbc.setState(0x232e, 0xa9c8, 0xdec0, 0xb2c1, 0xb2ad, 0xeb9f, 0x0, 0x1);
        gbc.writeMem(0x232e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa9c8);
        EXPECT(gbc.pc(), 0x232f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0124
        gbc.setState(0xa63f, 0xcc62, 0xf2f0, 0x8dda, 0xa9ee, 0x6e3f, 0x1, 0x0);
        gbc.writeMem(0xa63f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xcc62);
        EXPECT(gbc.pc(), 0xa640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa63f), 0xab);
        // AB 0125
        gbc.setState(0x6d6f, 0x90c9, 0x2570, 0xb66, 0xf667, 0x9372, 0x1, 0x1);
        gbc.writeMem(0x6d6f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x90c9);
        EXPECT(gbc.pc(), 0x6d70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0126
        gbc.setState(0x2c20, 0x958d, 0xd520, 0xcd01, 0xd0b8, 0x913c, 0x1, 0x1);
        gbc.writeMem(0x2c20, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x958d);
        EXPECT(gbc.pc(), 0x2c21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0127
        gbc.setState(0xd30, 0xca9a, 0x40e0, 0xcf60, 0x8648, 0xb8d6, 0x0, 0x1);
        gbc.writeMem(0xd30, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xca9a);
        EXPECT(gbc.pc(), 0xd31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0128
        gbc.setState(0x3c64, 0x29e7, 0x6850, 0x9d98, 0xf5a9, 0x981e, 0x1, 0x1);
        gbc.writeMem(0x3c64, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x29e7);
        EXPECT(gbc.pc(), 0x3c65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0129
        gbc.setState(0xa4f7, 0x514c, 0x3070, 0xd584, 0x3da6, 0xb5f9, 0x1, 0x1);
        gbc.writeMem(0xa4f7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x514c);
        EXPECT(gbc.pc(), 0xa4f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4f7), 0xab);
        // AB 012A
        gbc.setState(0x190a, 0xf0a6, 0x7170, 0x8ae, 0xa53d, 0xe439, 0x0, 0x1);
        gbc.writeMem(0x190a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf0a6);
        EXPECT(gbc.pc(), 0x190b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 012B
        gbc.setState(0x1fda, 0xb674, 0x9840, 0x209e, 0x83ab, 0x25c, 0x0, 0x0);
        gbc.writeMem(0x1fda, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb674);
        EXPECT(gbc.pc(), 0x1fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 012C
        gbc.setState(0x82e9, 0xe599, 0xc790, 0x8085, 0xe5f6, 0xf7ad, 0x0, 0x0);
        gbc.writeMem(0x82e9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe599);
        EXPECT(gbc.pc(), 0x82ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e9), 0xab);
        // AB 012D
        gbc.setState(0x10b6, 0xc2c1, 0x6960, 0xabbd, 0xbe6c, 0x1c1d, 0x1, 0x1);
        gbc.writeMem(0x10b6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc2c1);
        EXPECT(gbc.pc(), 0x10b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 012E
        gbc.setState(0xb09a, 0xa249, 0x5ba0, 0xcbc2, 0xc407, 0x954e, 0x1, 0x0);
        gbc.writeMem(0xb09a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa249);
        EXPECT(gbc.pc(), 0xb09b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb09a), 0xab);
        // AB 012F
        gbc.setState(0xd54d, 0xbf1a, 0xdd50, 0xcf43, 0x49cb, 0xc56b, 0x1, 0x0);
        gbc.writeMem(0xd54d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xbf1a);
        EXPECT(gbc.pc(), 0xd54e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd54d), 0xab);
        // AB 0130
        gbc.setState(0xa4fa, 0xb008, 0xfa50, 0x5c15, 0x77be, 0x3f56, 0x0, 0x1);
        gbc.writeMem(0xa4fa, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb008);
        EXPECT(gbc.pc(), 0xa4fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4fa), 0xab);
        // AB 0131
        gbc.setState(0x5651, 0x92b6, 0xcb10, 0xae1, 0x8556, 0x5a0a, 0x1, 0x1);
        gbc.writeMem(0x5651, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x92b6);
        EXPECT(gbc.pc(), 0x5652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0132
        gbc.setState(0xa092, 0x49c3, 0x89d0, 0xd596, 0xaa57, 0x253b, 0x0, 0x1);
        gbc.writeMem(0xa092, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x49c3);
        EXPECT(gbc.pc(), 0xa093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa092), 0xab);
        // AB 0133
        gbc.setState(0xae2c, 0x33e3, 0xc980, 0x357d, 0x7954, 0xd41d, 0x1, 0x1);
        gbc.writeMem(0xae2c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x33e3);
        EXPECT(gbc.pc(), 0xae2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae2c), 0xab);
        // AB 0134
        gbc.setState(0x3761, 0x780b, 0x5e10, 0x470b, 0xd0c0, 0xaa1f, 0x0, 0x1);
        gbc.writeMem(0x3761, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x780b);
        EXPECT(gbc.pc(), 0x3762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0135
        gbc.setState(0x80d6, 0x5327, 0x55e0, 0x8f74, 0x6d46, 0x4fd9, 0x1, 0x0);
        gbc.writeMem(0x80d6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5327);
        EXPECT(gbc.pc(), 0x80d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d6), 0xab);
        // AB 0136
        gbc.setState(0x88b, 0xef38, 0x910, 0x78cc, 0x6946, 0x7dd1, 0x1, 0x1);
        gbc.writeMem(0x88b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xef38);
        EXPECT(gbc.pc(), 0x88c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0137
        gbc.setState(0x2293, 0x7971, 0xdb70, 0x5ee, 0xfd1b, 0x7a15, 0x0, 0x1);
        gbc.writeMem(0x2293, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7971);
        EXPECT(gbc.pc(), 0x2294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0138
        gbc.setState(0xc012, 0xce17, 0x1c40, 0x77f3, 0xa4cf, 0x796e, 0x1, 0x1);
        gbc.writeMem(0xc012, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xce17);
        EXPECT(gbc.pc(), 0xc013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc012), 0xab);
        // AB 0139
        gbc.setState(0x298a, 0x7c96, 0x4df0, 0xe204, 0xcd44, 0x2104, 0x0, 0x1);
        gbc.writeMem(0x298a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7c96);
        EXPECT(gbc.pc(), 0x298b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 013A
        gbc.setState(0x4883, 0x8efe, 0x7190, 0x9cb6, 0xf0cf, 0xdf4d, 0x0, 0x0);
        gbc.writeMem(0x4883, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8efe);
        EXPECT(gbc.pc(), 0x4884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 013B
        gbc.setState(0xe48b, 0xfcd6, 0xfc50, 0x6820, 0x7c4f, 0x4b03, 0x1, 0x0);
        gbc.writeMem(0xe48b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfcd6);
        EXPECT(gbc.pc(), 0xe48c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe48b), 0xab);
        // AB 013C
        gbc.setState(0xe090, 0x3ad1, 0x74a0, 0x49fc, 0x8e0d, 0x13eb, 0x0, 0x1);
        gbc.writeMem(0xe090, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3ad1);
        EXPECT(gbc.pc(), 0xe091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe090), 0xab);
        // AB 013D
        gbc.setState(0x73bf, 0xce7f, 0x6c30, 0x8d43, 0xe9f5, 0x5624, 0x0, 0x1);
        gbc.writeMem(0x73bf, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xce7f);
        EXPECT(gbc.pc(), 0x73c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 013E
        gbc.setState(0xb13f, 0x326f, 0x4590, 0xc3f1, 0xb1ae, 0xfb53, 0x1, 0x0);
        gbc.writeMem(0xb13f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x326f);
        EXPECT(gbc.pc(), 0xb140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb13f), 0xab);
        // AB 013F
        gbc.setState(0xa3a6, 0xafff, 0xfe30, 0x6938, 0x4233, 0x772b, 0x0, 0x1);
        gbc.writeMem(0xa3a6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xafff);
        EXPECT(gbc.pc(), 0xa3a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3a6), 0xab);
        // AB 0140
        gbc.setState(0xb13f, 0xe98e, 0x89f0, 0x4ceb, 0xfbca, 0x556d, 0x1, 0x1);
        gbc.writeMem(0xb13f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe98e);
        EXPECT(gbc.pc(), 0xb140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb13f), 0xab);
        // AB 0141
        gbc.setState(0x5c0a, 0xca51, 0x9760, 0x5cf7, 0x74f4, 0x30e, 0x0, 0x1);
        gbc.writeMem(0x5c0a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xca51);
        EXPECT(gbc.pc(), 0x5c0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0142
        gbc.setState(0xc940, 0x41a3, 0x4460, 0x376d, 0x5e2a, 0xefda, 0x0, 0x1);
        gbc.writeMem(0xc940, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x41a3);
        EXPECT(gbc.pc(), 0xc941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc940), 0xab);
        // AB 0145
        gbc.setState(0x3031, 0xebeb, 0xffc0, 0x941f, 0xc440, 0xf3b3, 0x0, 0x0);
        gbc.writeMem(0x3031, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xebeb);
        EXPECT(gbc.pc(), 0x3032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0146
        gbc.setState(0xa33c, 0xda92, 0xec80, 0xc384, 0x9fe4, 0x1503, 0x1, 0x0);
        gbc.writeMem(0xa33c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xda92);
        EXPECT(gbc.pc(), 0xa33d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa33c), 0xab);
        // AB 0147
        gbc.setState(0xa702, 0xb3c4, 0xd90, 0xf94a, 0xcab3, 0x10c2, 0x0, 0x1);
        gbc.writeMem(0xa702, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb3c4);
        EXPECT(gbc.pc(), 0xa703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa702), 0xab);
        // AB 0148
        gbc.setState(0xa7d0, 0xcf72, 0x76a0, 0x60bc, 0x5028, 0x5167, 0x0, 0x1);
        gbc.writeMem(0xa7d0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xcf72);
        EXPECT(gbc.pc(), 0xa7d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d0), 0xab);
        // AB 0149
        gbc.setState(0xe001, 0x2b40, 0xaa20, 0xb1ae, 0x89db, 0x968b, 0x1, 0x0);
        gbc.writeMem(0xe001, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2b40);
        EXPECT(gbc.pc(), 0xe002);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe001), 0xab);
        // AB 014A
        gbc.setState(0x8243, 0xf265, 0xb100, 0x151, 0x1e88, 0xa57a, 0x1, 0x1);
        gbc.writeMem(0x8243, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf265);
        EXPECT(gbc.pc(), 0x8244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8243), 0xab);
        // AB 014B
        gbc.setState(0x476c, 0xda8f, 0x5360, 0x3d5a, 0xd083, 0x3488, 0x0, 0x1);
        gbc.writeMem(0x476c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xda8f);
        EXPECT(gbc.pc(), 0x476d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 014C
        gbc.setState(0x194c, 0xd47b, 0x6c0, 0xeeee, 0xea14, 0xf9ee, 0x0, 0x1);
        gbc.writeMem(0x194c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd47b);
        EXPECT(gbc.pc(), 0x194d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 014D
        gbc.setState(0xbf29, 0x9c4d, 0x3e30, 0x6f40, 0x7b97, 0x21b1, 0x1, 0x0);
        gbc.writeMem(0xbf29, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9c4d);
        EXPECT(gbc.pc(), 0xbf2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf29), 0xab);
        // AB 014E
        gbc.setState(0x19dc, 0xb88a, 0xfb50, 0xdae4, 0xbcc5, 0xb69e, 0x0, 0x0);
        gbc.writeMem(0x19dc, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb88a);
        EXPECT(gbc.pc(), 0x19dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 014F
        gbc.setState(0x159b, 0xe507, 0x96b0, 0xb4f9, 0x3331, 0xf556, 0x0, 0x1);
        gbc.writeMem(0x159b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe507);
        EXPECT(gbc.pc(), 0x159c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0150
        gbc.setState(0x5fda, 0xd030, 0xb480, 0xd823, 0x1ea7, 0xc0df, 0x1, 0x0);
        gbc.writeMem(0x5fda, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd030);
        EXPECT(gbc.pc(), 0x5fdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0151
        gbc.setState(0x54be, 0xa677, 0xcd70, 0xe732, 0xe81f, 0x57e2, 0x1, 0x0);
        gbc.writeMem(0x54be, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa677);
        EXPECT(gbc.pc(), 0x54bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0152
        gbc.setState(0xa31b, 0x72c7, 0x92f0, 0xe898, 0xf621, 0x7317, 0x0, 0x1);
        gbc.writeMem(0xa31b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x72c7);
        EXPECT(gbc.pc(), 0xa31c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31b), 0xab);
        // AB 0154
        gbc.setState(0xa000, 0xf4db, 0x6d20, 0xab68, 0x5bc2, 0x8532, 0x0, 0x1);
        gbc.writeMem(0xa000, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf4db);
        EXPECT(gbc.pc(), 0xa001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa000), 0xab);
        // AB 0155
        gbc.setState(0x3219, 0xe105, 0xa2b0, 0x6687, 0x5ef4, 0x767a, 0x1, 0x0);
        gbc.writeMem(0x3219, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe105);
        EXPECT(gbc.pc(), 0x321a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0156
        gbc.setState(0xb25e, 0xbdfb, 0x3310, 0xfb0e, 0x2556, 0x186, 0x1, 0x1);
        gbc.writeMem(0xb25e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xbdfb);
        EXPECT(gbc.pc(), 0xb25f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb25e), 0xab);
        // AB 0157
        gbc.setState(0x5b81, 0x6856, 0x3820, 0x8f63, 0x9d3d, 0x6f49, 0x0, 0x0);
        gbc.writeMem(0x5b81, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6856);
        EXPECT(gbc.pc(), 0x5b82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0158
        gbc.setState(0x8944, 0xb913, 0x2ad0, 0x4338, 0x1907, 0x79c0, 0x0, 0x0);
        gbc.writeMem(0x8944, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb913);
        EXPECT(gbc.pc(), 0x8945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8944), 0xab);
        // AB 0159
        gbc.setState(0x2998, 0xe761, 0x7f60, 0xd0c2, 0xc3ca, 0xaee3, 0x1, 0x0);
        gbc.writeMem(0x2998, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe761);
        EXPECT(gbc.pc(), 0x2999);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 015A
        gbc.setState(0x8a0a, 0x7df6, 0xe410, 0xeaf9, 0xe54f, 0x616d, 0x0, 0x1);
        gbc.writeMem(0x8a0a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7df6);
        EXPECT(gbc.pc(), 0x8a0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a0a), 0xab);
        // AB 015B
        gbc.setState(0x1cff, 0x80b8, 0xede0, 0x244a, 0x2b3a, 0xda6d, 0x1, 0x0);
        gbc.writeMem(0x1cff, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x80b8);
        EXPECT(gbc.pc(), 0x1d00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 015C
        gbc.setState(0xd554, 0x48d3, 0x3db0, 0x8430, 0xa8bc, 0xf54b, 0x1, 0x0);
        gbc.writeMem(0xd554, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x48d3);
        EXPECT(gbc.pc(), 0xd555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd554), 0xab);
        // AB 015D
        gbc.setState(0x284e, 0x7e2b, 0x73e0, 0x90f7, 0x84ef, 0x908d, 0x1, 0x0);
        gbc.writeMem(0x284e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7e2b);
        EXPECT(gbc.pc(), 0x284f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 015E
        gbc.setState(0x26ad, 0xcf40, 0xab70, 0x21da, 0x7fcd, 0x98bb, 0x0, 0x0);
        gbc.writeMem(0x26ad, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcf40);
        EXPECT(gbc.pc(), 0x26ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 015F
        gbc.setState(0xb87, 0xc8b9, 0x3ee0, 0x7d2a, 0xc376, 0x5cc4, 0x1, 0x0);
        gbc.writeMem(0xb87, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc8b9);
        EXPECT(gbc.pc(), 0xb88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0160
        gbc.setState(0xf77, 0x43c9, 0xf580, 0x4751, 0x8fce, 0x3911, 0x0, 0x1);
        gbc.writeMem(0xf77, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x43c9);
        EXPECT(gbc.pc(), 0xf78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0161
        gbc.setState(0x8feb, 0x4db7, 0xf4f0, 0xea40, 0x5d02, 0x4f32, 0x1, 0x0);
        gbc.writeMem(0x8feb, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4db7);
        EXPECT(gbc.pc(), 0x8fec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8feb), 0xab);
        // AB 0162
        gbc.setState(0x993b, 0xe469, 0xf020, 0x35e3, 0xf2ff, 0xd45f, 0x1, 0x1);
        gbc.writeMem(0x993b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe469);
        EXPECT(gbc.pc(), 0x993c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x993b), 0xab);
        // AB 0163
        gbc.setState(0xfbf, 0xaead, 0x3210, 0x8ff0, 0xf7c3, 0xde3f, 0x0, 0x0);
        gbc.writeMem(0xfbf, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xaead);
        EXPECT(gbc.pc(), 0xfc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0164
        gbc.setState(0x48f3, 0xa787, 0x1de0, 0xbb08, 0x9cda, 0x1002, 0x1, 0x1);
        gbc.writeMem(0x48f3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa787);
        EXPECT(gbc.pc(), 0x48f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0165
        gbc.setState(0xc884, 0xb7d3, 0x5650, 0xe0b8, 0x621b, 0xd5cf, 0x0, 0x0);
        gbc.writeMem(0xc884, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb7d3);
        EXPECT(gbc.pc(), 0xc885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc884), 0xab);
        // AB 0166
        gbc.setState(0xda17, 0x3ac7, 0xea30, 0x1fad, 0xbd88, 0xbda1, 0x0, 0x1);
        gbc.writeMem(0xda17, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3ac7);
        EXPECT(gbc.pc(), 0xda18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda17), 0xab);
        // AB 0167
        gbc.setState(0x568f, 0x2e41, 0x58e0, 0x98fc, 0x7767, 0xd067, 0x1, 0x1);
        gbc.writeMem(0x568f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2e41);
        EXPECT(gbc.pc(), 0x5690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0168
        gbc.setState(0x1d17, 0x6a7d, 0xc630, 0x9ac1, 0x5095, 0xacc4, 0x1, 0x0);
        gbc.writeMem(0x1d17, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6a7d);
        EXPECT(gbc.pc(), 0x1d18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0169
        gbc.setState(0xa1ba, 0x4051, 0x1360, 0xf9, 0x323f, 0x9a67, 0x0, 0x1);
        gbc.writeMem(0xa1ba, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4051);
        EXPECT(gbc.pc(), 0xa1bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ba), 0xab);
        // AB 016A
        gbc.setState(0xe336, 0xe239, 0xaf20, 0x7cd, 0x43b6, 0x1946, 0x0, 0x1);
        gbc.writeMem(0xe336, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe239);
        EXPECT(gbc.pc(), 0xe337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe336), 0xab);
        // AB 016C
        gbc.setState(0x6722, 0xad13, 0xe0c0, 0x7d4, 0x2cb1, 0xd183, 0x0, 0x0);
        gbc.writeMem(0x6722, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xad13);
        EXPECT(gbc.pc(), 0x6723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 016D
        gbc.setState(0x4314, 0xe411, 0x30b0, 0x7f78, 0x50b5, 0xeb22, 0x1, 0x0);
        gbc.writeMem(0x4314, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe411);
        EXPECT(gbc.pc(), 0x4315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 016E
        gbc.setState(0x57d0, 0xaa02, 0xe5c0, 0x8589, 0x99a5, 0x9f32, 0x0, 0x1);
        gbc.writeMem(0x57d0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xaa02);
        EXPECT(gbc.pc(), 0x57d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 016F
        gbc.setState(0x9eca, 0xbf5c, 0x400, 0x9ada, 0x7c15, 0xe7b1, 0x0, 0x0);
        gbc.writeMem(0x9eca, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbf5c);
        EXPECT(gbc.pc(), 0x9ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eca), 0xab);
        // AB 0170
        gbc.setState(0x6a76, 0x6157, 0xa830, 0xa523, 0x32b2, 0x9f41, 0x1, 0x1);
        gbc.writeMem(0x6a76, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6157);
        EXPECT(gbc.pc(), 0x6a77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0171
        gbc.setState(0x6408, 0x783a, 0x2890, 0xc879, 0x2c3a, 0xcbe4, 0x0, 0x0);
        gbc.writeMem(0x6408, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x783a);
        EXPECT(gbc.pc(), 0x6409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0172
        gbc.setState(0x8d33, 0x7e46, 0x4e0, 0x437e, 0x82f1, 0x76c3, 0x0, 0x0);
        gbc.writeMem(0x8d33, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7e46);
        EXPECT(gbc.pc(), 0x8d34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d33), 0xab);
        // AB 0173
        gbc.setState(0x5fd2, 0x5ca4, 0x4f10, 0xce64, 0xb790, 0x5b36, 0x0, 0x0);
        gbc.writeMem(0x5fd2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5ca4);
        EXPECT(gbc.pc(), 0x5fd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0174
        gbc.setState(0xc39a, 0xaad9, 0x7770, 0x8562, 0xc97c, 0xd0ee, 0x0, 0x0);
        gbc.writeMem(0xc39a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xaad9);
        EXPECT(gbc.pc(), 0xc39b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc39a), 0xab);
        // AB 0176
        gbc.setState(0x36ea, 0x378, 0x4050, 0x5c42, 0x7dad, 0x3901, 0x0, 0x1);
        gbc.writeMem(0x36ea, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x378);
        EXPECT(gbc.pc(), 0x36eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0177
        gbc.setState(0x878c, 0x36cf, 0x40, 0x3a62, 0x8c21, 0xad07, 0x0, 0x0);
        gbc.writeMem(0x878c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x36cf);
        EXPECT(gbc.pc(), 0x878d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x878c), 0xab);
        // AB 0178
        gbc.setState(0xa281, 0x9e50, 0x7c90, 0x4596, 0x3529, 0x1c5b, 0x0, 0x0);
        gbc.writeMem(0xa281, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9e50);
        EXPECT(gbc.pc(), 0xa282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa281), 0xab);
        // AB 0179
        gbc.setState(0x371a, 0xfdf8, 0x150, 0xeb75, 0xa5d7, 0x8ae1, 0x1, 0x1);
        gbc.writeMem(0x371a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfdf8);
        EXPECT(gbc.pc(), 0x371b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 017A
        gbc.setState(0x7120, 0xb8e0, 0x9710, 0x4ef9, 0xe8dd, 0x50f3, 0x0, 0x1);
        gbc.writeMem(0x7120, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb8e0);
        EXPECT(gbc.pc(), 0x7121);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 017B
        gbc.setState(0x6485, 0x6960, 0xfa30, 0xac0a, 0x7079, 0x4111, 0x1, 0x1);
        gbc.writeMem(0x6485, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6960);
        EXPECT(gbc.pc(), 0x6486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 017C
        gbc.setState(0xa7ef, 0x753, 0xb490, 0xe0f5, 0xb82d, 0x52cc, 0x0, 0x1);
        gbc.writeMem(0xa7ef, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x753);
        EXPECT(gbc.pc(), 0xa7f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ef), 0xab);
        // AB 017E
        gbc.setState(0x7003, 0xff74, 0xa240, 0xc9f0, 0xd370, 0xfc9b, 0x0, 0x0);
        gbc.writeMem(0x7003, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xff74);
        EXPECT(gbc.pc(), 0x7004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 017F
        gbc.setState(0xea5c, 0x6951, 0x82b0, 0x4bd2, 0x53c2, 0xae3b, 0x0, 0x1);
        gbc.writeMem(0xea5c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6951);
        EXPECT(gbc.pc(), 0xea5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea5c), 0xab);
        // AB 0180
        gbc.setState(0xd545, 0x2d83, 0x8c40, 0x8e95, 0x8917, 0x8364, 0x0, 0x1);
        gbc.writeMem(0xd545, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2d83);
        EXPECT(gbc.pc(), 0xd546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd545), 0xab);
        // AB 0181
        gbc.setState(0x3251, 0x38c4, 0xf960, 0x6f3d, 0x1470, 0x4e12, 0x1, 0x1);
        gbc.writeMem(0x3251, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x38c4);
        EXPECT(gbc.pc(), 0x3252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0182
        gbc.setState(0xa7fb, 0x6507, 0x2500, 0x234f, 0x2e97, 0x745b, 0x1, 0x1);
        gbc.writeMem(0xa7fb, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6507);
        EXPECT(gbc.pc(), 0xa7fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7fb), 0xab);
        // AB 0183
        gbc.setState(0xedc9, 0x3da9, 0x1ff0, 0x5869, 0x7bfd, 0x14b3, 0x1, 0x1);
        gbc.writeMem(0xedc9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3da9);
        EXPECT(gbc.pc(), 0xedca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedc9), 0xab);
        // AB 0184
        gbc.setState(0x7b3f, 0x8113, 0x39f0, 0xf26c, 0x4ab, 0xf9f4, 0x0, 0x1);
        gbc.writeMem(0x7b3f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8113);
        EXPECT(gbc.pc(), 0x7b40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0185
        gbc.setState(0x2634, 0xae86, 0x15d0, 0x8478, 0xd644, 0x1eff, 0x1, 0x1);
        gbc.writeMem(0x2634, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xae86);
        EXPECT(gbc.pc(), 0x2635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0186
        gbc.setState(0x63e0, 0x2950, 0x3a20, 0xc4ad, 0xa8d9, 0x5fca, 0x1, 0x0);
        gbc.writeMem(0x63e0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2950);
        EXPECT(gbc.pc(), 0x63e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0187
        gbc.setState(0x851c, 0x1c6d, 0xd680, 0xacd7, 0x4f48, 0xf9e1, 0x0, 0x1);
        gbc.writeMem(0x851c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1c6d);
        EXPECT(gbc.pc(), 0x851d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x851c), 0xab);
        // AB 0188
        gbc.setState(0x8841, 0xd125, 0x4480, 0x9988, 0x4365, 0xca1a, 0x0, 0x1);
        gbc.writeMem(0x8841, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd125);
        EXPECT(gbc.pc(), 0x8842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8841), 0xab);
        // AB 0189
        gbc.setState(0x23f, 0xfa24, 0x1160, 0x6211, 0x967, 0xc319, 0x1, 0x0);
        gbc.writeMem(0x23f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfa24);
        EXPECT(gbc.pc(), 0x240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 018A
        gbc.setState(0x87c7, 0x52bc, 0x1910, 0x3b33, 0x7ca9, 0xe041, 0x1, 0x1);
        gbc.writeMem(0x87c7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x52bc);
        EXPECT(gbc.pc(), 0x87c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c7), 0xab);
        // AB 018B
        gbc.setState(0x752b, 0xe067, 0xa5d0, 0x56a0, 0x590b, 0xec00, 0x1, 0x0);
        gbc.writeMem(0x752b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe067);
        EXPECT(gbc.pc(), 0x752c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 018C
        gbc.setState(0xa3a3, 0x38b, 0xd750, 0xf9f9, 0xbe71, 0xa56b, 0x1, 0x1);
        gbc.writeMem(0xa3a3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x38b);
        EXPECT(gbc.pc(), 0xa3a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3a3), 0xab);
        // AB 018D
        gbc.setState(0xe24, 0x129b, 0xa90, 0x78c, 0xcb70, 0x42d1, 0x0, 0x1);
        gbc.writeMem(0xe24, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x129b);
        EXPECT(gbc.pc(), 0xe25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 018E
        gbc.setState(0x283f, 0xa7, 0x120, 0x4c46, 0x2185, 0x448b, 0x1, 0x1);
        gbc.writeMem(0x283f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa7);
        EXPECT(gbc.pc(), 0x2840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 018F
        gbc.setState(0xa58a, 0x342a, 0x7800, 0x5d02, 0x12fe, 0x805e, 0x0, 0x0);
        gbc.writeMem(0xa58a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x342a);
        EXPECT(gbc.pc(), 0xa58b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa58a), 0xab);
        // AB 0190
        gbc.setState(0xb260, 0xe308, 0x4bd0, 0x2c48, 0x8eb5, 0xc773, 0x0, 0x1);
        gbc.writeMem(0xb260, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe308);
        EXPECT(gbc.pc(), 0xb261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb260), 0xab);
        // AB 0191
        gbc.setState(0x8f8, 0xc0cd, 0x3ac0, 0x17d8, 0x9e50, 0x7c4a, 0x0, 0x1);
        gbc.writeMem(0x8f8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc0cd);
        EXPECT(gbc.pc(), 0x8f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0192
        gbc.setState(0x9637, 0x37c5, 0x590, 0xe3d4, 0xfda3, 0xdbd7, 0x1, 0x1);
        gbc.writeMem(0x9637, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x37c5);
        EXPECT(gbc.pc(), 0x9638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9637), 0xab);
        // AB 0193
        gbc.setState(0xd259, 0x89e0, 0x60c0, 0x51a8, 0x8471, 0x68d8, 0x0, 0x1);
        gbc.writeMem(0xd259, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x89e0);
        EXPECT(gbc.pc(), 0xd25a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd259), 0xab);
        // AB 0196
        gbc.setState(0x4c56, 0x622c, 0x6830, 0xcc8b, 0xf708, 0x805, 0x0, 0x0);
        gbc.writeMem(0x4c56, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x622c);
        EXPECT(gbc.pc(), 0x4c57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0197
        gbc.setState(0x5162, 0x1ff0, 0xaf00, 0xb84d, 0xaa2e, 0xdf68, 0x0, 0x1);
        gbc.writeMem(0x5162, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1ff0);
        EXPECT(gbc.pc(), 0x5163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0198
        gbc.setState(0x7526, 0xdba5, 0xe580, 0x5f57, 0x6705, 0xc004, 0x0, 0x0);
        gbc.writeMem(0x7526, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xdba5);
        EXPECT(gbc.pc(), 0x7527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 019A
        gbc.setState(0xdf44, 0x8ff7, 0x4240, 0xc7ab, 0x7725, 0x3c2e, 0x1, 0x1);
        gbc.writeMem(0xdf44, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8ff7);
        EXPECT(gbc.pc(), 0xdf45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf44), 0xab);
        // AB 019B
        gbc.setState(0xa9da, 0xbf0, 0xf920, 0xef76, 0x94e4, 0xd7af, 0x0, 0x1);
        gbc.writeMem(0xa9da, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbf0);
        EXPECT(gbc.pc(), 0xa9db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9da), 0xab);
        // AB 019C
        gbc.setState(0x6f7a, 0x4a70, 0xe9d0, 0x70, 0x9a80, 0xfb13, 0x1, 0x0);
        gbc.writeMem(0x6f7a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4a70);
        EXPECT(gbc.pc(), 0x6f7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 019D
        gbc.setState(0x81b8, 0xe9f6, 0x1050, 0xf63, 0x1570, 0x440d, 0x0, 0x0);
        gbc.writeMem(0x81b8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe9f6);
        EXPECT(gbc.pc(), 0x81b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81b8), 0xab);
        // AB 019E
        gbc.setState(0xdf3e, 0xb02f, 0x2150, 0x3a3d, 0x1e8c, 0x9277, 0x1, 0x0);
        gbc.writeMem(0xdf3e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb02f);
        EXPECT(gbc.pc(), 0xdf3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf3e), 0xab);
        // AB 019F
        gbc.setState(0x2626, 0x2e54, 0x6ec0, 0x5f76, 0x3f2f, 0x6edb, 0x1, 0x1);
        gbc.writeMem(0x2626, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2e54);
        EXPECT(gbc.pc(), 0x2627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01A0
        gbc.setState(0x3d6f, 0xf19c, 0xf300, 0xd5bc, 0x7865, 0x9c10, 0x0, 0x1);
        gbc.writeMem(0x3d6f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf19c);
        EXPECT(gbc.pc(), 0x3d70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01A1
        gbc.setState(0xbfa5, 0x73b1, 0xc4f0, 0xbdf4, 0x8254, 0x9844, 0x0, 0x0);
        gbc.writeMem(0xbfa5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x73b1);
        EXPECT(gbc.pc(), 0xbfa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfa5), 0xab);
        // AB 01A2
        gbc.setState(0x8af1, 0xb858, 0x4230, 0xf983, 0xc499, 0xdf6e, 0x1, 0x1);
        gbc.writeMem(0x8af1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb858);
        EXPECT(gbc.pc(), 0x8af2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af1), 0xab);
        // AB 01A4
        gbc.setState(0xc3f5, 0x5929, 0xdf70, 0x31ec, 0xc912, 0xfc1e, 0x0, 0x0);
        gbc.writeMem(0xc3f5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5929);
        EXPECT(gbc.pc(), 0xc3f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3f5), 0xab);
        // AB 01A5
        gbc.setState(0xc2f4, 0x2ed2, 0x7b70, 0x706e, 0x68b0, 0x97d3, 0x0, 0x0);
        gbc.writeMem(0xc2f4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2ed2);
        EXPECT(gbc.pc(), 0xc2f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2f4), 0xab);
        // AB 01A6
        gbc.setState(0x7f13, 0x8430, 0x92f0, 0x29ae, 0x123b, 0x8a7b, 0x0, 0x0);
        gbc.writeMem(0x7f13, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8430);
        EXPECT(gbc.pc(), 0x7f14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01A7
        gbc.setState(0xcf54, 0xc692, 0x3360, 0xfc62, 0xf647, 0x8625, 0x0, 0x1);
        gbc.writeMem(0xcf54, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc692);
        EXPECT(gbc.pc(), 0xcf55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf54), 0xab);
        // AB 01A8
        gbc.setState(0x1e0d, 0x6f7e, 0xba70, 0x4d68, 0xe9f9, 0x1656, 0x0, 0x1);
        gbc.writeMem(0x1e0d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6f7e);
        EXPECT(gbc.pc(), 0x1e0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01A9
        gbc.setState(0xa5a1, 0x7cae, 0x4410, 0xd220, 0x5a70, 0x5152, 0x0, 0x1);
        gbc.writeMem(0xa5a1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7cae);
        EXPECT(gbc.pc(), 0xa5a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5a1), 0xab);
        // AB 01AA
        gbc.setState(0x760b, 0x73c1, 0xe6a0, 0x983f, 0xcd08, 0xe7f9, 0x0, 0x1);
        gbc.writeMem(0x760b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x73c1);
        EXPECT(gbc.pc(), 0x760c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01AB
        gbc.setState(0x4443, 0x47d7, 0x84e0, 0xeab9, 0x1354, 0x7ca2, 0x0, 0x1);
        gbc.writeMem(0x4443, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x47d7);
        EXPECT(gbc.pc(), 0x4444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01AC
        gbc.setState(0x3e8a, 0xdcf8, 0x7b60, 0xf31f, 0xa16b, 0x2dc9, 0x0, 0x0);
        gbc.writeMem(0x3e8a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xdcf8);
        EXPECT(gbc.pc(), 0x3e8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01AD
        gbc.setState(0x6d25, 0xaa97, 0x6d20, 0xf90f, 0xcb26, 0xc031, 0x1, 0x1);
        gbc.writeMem(0x6d25, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xaa97);
        EXPECT(gbc.pc(), 0x6d26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01AE
        gbc.setState(0x7a86, 0x4e27, 0x39d0, 0x9eea, 0x9c7f, 0x75b, 0x1, 0x0);
        gbc.writeMem(0x7a86, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4e27);
        EXPECT(gbc.pc(), 0x7a87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01AF
        gbc.setState(0xb511, 0xf50, 0xcaa0, 0x1b27, 0x43e5, 0xefe6, 0x1, 0x0);
        gbc.writeMem(0xb511, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf50);
        EXPECT(gbc.pc(), 0xb512);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb511), 0xab);
        // AB 01B0
        gbc.setState(0x89d7, 0x2680, 0xdda0, 0xf689, 0x9fcb, 0x7d65, 0x1, 0x0);
        gbc.writeMem(0x89d7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2680);
        EXPECT(gbc.pc(), 0x89d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d7), 0xab);
        // AB 01B1
        gbc.setState(0x96b, 0xc078, 0x7210, 0x5925, 0x72ce, 0x52b, 0x1, 0x1);
        gbc.writeMem(0x96b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc078);
        EXPECT(gbc.pc(), 0x96c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01B2
        gbc.setState(0x8203, 0x7343, 0x6550, 0x15b, 0x27fd, 0xd585, 0x0, 0x1);
        gbc.writeMem(0x8203, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7343);
        EXPECT(gbc.pc(), 0x8204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8203), 0xab);
        // AB 01B3
        gbc.setState(0x9221, 0x164e, 0x4050, 0x5aaa, 0x1a93, 0xd71b, 0x0, 0x0);
        gbc.writeMem(0x9221, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x164e);
        EXPECT(gbc.pc(), 0x9222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9221), 0xab);
        // AB 01B5
        gbc.setState(0x4095, 0x86f1, 0xdab0, 0x87b5, 0x5d85, 0x12a, 0x1, 0x0);
        gbc.writeMem(0x4095, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x86f1);
        EXPECT(gbc.pc(), 0x4096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01B6
        gbc.setState(0xdb4f, 0x7450, 0x9e40, 0x62a7, 0x9fa3, 0xa26e, 0x1, 0x0);
        gbc.writeMem(0xdb4f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7450);
        EXPECT(gbc.pc(), 0xdb50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb4f), 0xab);
        // AB 01B8
        gbc.setState(0x1c4d, 0x2a73, 0x6160, 0x5e51, 0xd61f, 0x1f20, 0x1, 0x0);
        gbc.writeMem(0x1c4d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2a73);
        EXPECT(gbc.pc(), 0x1c4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01B9
        gbc.setState(0xed8d, 0x22aa, 0x9600, 0x680, 0x926a, 0x690f, 0x0, 0x0);
        gbc.writeMem(0xed8d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x22aa);
        EXPECT(gbc.pc(), 0xed8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed8d), 0xab);
        // AB 01BA
        gbc.setState(0xb69d, 0x1d72, 0xd5a0, 0x5410, 0x682d, 0x677a, 0x0, 0x0);
        gbc.writeMem(0xb69d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1d72);
        EXPECT(gbc.pc(), 0xb69e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb69d), 0xab);
        // AB 01BB
        gbc.setState(0xb653, 0xc05f, 0xefa0, 0xe283, 0xb4fe, 0x9c65, 0x1, 0x1);
        gbc.writeMem(0xb653, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc05f);
        EXPECT(gbc.pc(), 0xb654);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb653), 0xab);
        // AB 01BC
        gbc.setState(0x50d, 0x5065, 0x80f0, 0x1cde, 0xd6ee, 0x896, 0x0, 0x0);
        gbc.writeMem(0x50d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5065);
        EXPECT(gbc.pc(), 0x50e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01BD
        gbc.setState(0xcab8, 0x6654, 0xc230, 0xf202, 0x3acd, 0x2404, 0x0, 0x0);
        gbc.writeMem(0xcab8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6654);
        EXPECT(gbc.pc(), 0xcab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcab8), 0xab);
        // AB 01BE
        gbc.setState(0xd4c5, 0xa961, 0xec00, 0xc7da, 0xfcfa, 0x1fd0, 0x0, 0x0);
        gbc.writeMem(0xd4c5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa961);
        EXPECT(gbc.pc(), 0xd4c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4c5), 0xab);
        // AB 01BF
        gbc.setState(0x5164, 0x2b02, 0x1e20, 0xf132, 0xeab1, 0xd7de, 0x0, 0x0);
        gbc.writeMem(0x5164, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2b02);
        EXPECT(gbc.pc(), 0x5165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01C0
        gbc.setState(0xa6b4, 0x2c23, 0x22c0, 0x6cb2, 0x73c, 0xba45, 0x0, 0x0);
        gbc.writeMem(0xa6b4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2c23);
        EXPECT(gbc.pc(), 0xa6b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6b4), 0xab);
        // AB 01C1
        gbc.setState(0xa19a, 0x72f6, 0x7b00, 0xdc8, 0xc68d, 0xc638, 0x0, 0x0);
        gbc.writeMem(0xa19a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x72f6);
        EXPECT(gbc.pc(), 0xa19b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa19a), 0xab);
        // AB 01C2
        gbc.setState(0x3ef8, 0x2b, 0xff80, 0x7e45, 0x10fd, 0x4ea7, 0x1, 0x1);
        gbc.writeMem(0x3ef8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2b);
        EXPECT(gbc.pc(), 0x3ef9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01C3
        gbc.setState(0xb969, 0xfd3c, 0xc7d0, 0x438d, 0xd388, 0xbcb7, 0x0, 0x1);
        gbc.writeMem(0xb969, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xfd3c);
        EXPECT(gbc.pc(), 0xb96a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb969), 0xab);
        // AB 01C4
        gbc.setState(0x3e97, 0xf0bc, 0xd320, 0x2b35, 0x2ec8, 0xdbce, 0x0, 0x0);
        gbc.writeMem(0x3e97, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf0bc);
        EXPECT(gbc.pc(), 0x3e98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01C5
        gbc.setState(0xc32, 0x1a05, 0xaa70, 0xc993, 0x3c6c, 0xe0cc, 0x0, 0x0);
        gbc.writeMem(0xc32, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1a05);
        EXPECT(gbc.pc(), 0xc33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01C6
        gbc.setState(0x19fd, 0x547b, 0x7440, 0x15d3, 0xfd3e, 0x5b38, 0x0, 0x1);
        gbc.writeMem(0x19fd, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x547b);
        EXPECT(gbc.pc(), 0x19fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01C7
        gbc.setState(0x97e3, 0xb1b5, 0x3a0, 0x1b54, 0x36ae, 0x9f86, 0x0, 0x1);
        gbc.writeMem(0x97e3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb1b5);
        EXPECT(gbc.pc(), 0x97e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e3), 0xab);
        // AB 01C8
        gbc.setState(0x4205, 0xa74b, 0x9a30, 0x5496, 0x828a, 0xb2a0, 0x1, 0x0);
        gbc.writeMem(0x4205, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa74b);
        EXPECT(gbc.pc(), 0x4206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01C9
        gbc.setState(0xa13c, 0xf876, 0xb670, 0x9db, 0xf727, 0xb0cd, 0x0, 0x0);
        gbc.writeMem(0xa13c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf876);
        EXPECT(gbc.pc(), 0xa13d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa13c), 0xab);
        // AB 01CA
        gbc.setState(0x9db4, 0x8d92, 0x9620, 0x3a4a, 0xf994, 0x3cc4, 0x0, 0x1);
        gbc.writeMem(0x9db4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8d92);
        EXPECT(gbc.pc(), 0x9db5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db4), 0xab);
        // AB 01CB
        gbc.setState(0x27e2, 0xc58e, 0xee40, 0xcbb9, 0x63bd, 0xf863, 0x0, 0x1);
        gbc.writeMem(0x27e2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc58e);
        EXPECT(gbc.pc(), 0x27e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01CC
        gbc.setState(0x1e8b, 0x7cb7, 0xe590, 0x89d7, 0x60cd, 0x410a, 0x0, 0x1);
        gbc.writeMem(0x1e8b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7cb7);
        EXPECT(gbc.pc(), 0x1e8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01CD
        gbc.setState(0x8b58, 0xdd0d, 0x1a70, 0xe1ba, 0x8945, 0x154a, 0x0, 0x1);
        gbc.writeMem(0x8b58, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xdd0d);
        EXPECT(gbc.pc(), 0x8b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b58), 0xab);
        // AB 01CE
        gbc.setState(0x2dcd, 0x6de9, 0xc920, 0x563e, 0x6b48, 0x446f, 0x1, 0x1);
        gbc.writeMem(0x2dcd, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6de9);
        EXPECT(gbc.pc(), 0x2dce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01CF
        gbc.setState(0x88b0, 0xa12f, 0x78d0, 0x121a, 0x7293, 0xe420, 0x1, 0x1);
        gbc.writeMem(0x88b0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa12f);
        EXPECT(gbc.pc(), 0x88b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b0), 0xab);
        // AB 01D0
        gbc.setState(0x5f5, 0x65c3, 0x9ef0, 0xebbc, 0x4a71, 0x3673, 0x0, 0x1);
        gbc.writeMem(0x5f5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x65c3);
        EXPECT(gbc.pc(), 0x5f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01D1
        gbc.setState(0x6e5c, 0x9d8f, 0x6c20, 0x7926, 0x17c2, 0x5610, 0x0, 0x0);
        gbc.writeMem(0x6e5c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9d8f);
        EXPECT(gbc.pc(), 0x6e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01D2
        gbc.setState(0x4e9a, 0xf4b5, 0x1ef0, 0x6dc7, 0xed4d, 0xcb41, 0x1, 0x0);
        gbc.writeMem(0x4e9a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf4b5);
        EXPECT(gbc.pc(), 0x4e9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01D3
        gbc.setState(0x714b, 0x789e, 0xc4d0, 0xbba5, 0x5208, 0x55ab, 0x0, 0x1);
        gbc.writeMem(0x714b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x789e);
        EXPECT(gbc.pc(), 0x714c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01D4
        gbc.setState(0x99d9, 0xd9de, 0x4310, 0xe3e1, 0x16f7, 0x50a7, 0x1, 0x0);
        gbc.writeMem(0x99d9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd9de);
        EXPECT(gbc.pc(), 0x99da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d9), 0xab);
        // AB 01D5
        gbc.setState(0x6204, 0x197d, 0xd910, 0x72b5, 0xfb38, 0x87b1, 0x1, 0x1);
        gbc.writeMem(0x6204, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x197d);
        EXPECT(gbc.pc(), 0x6205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01D6
        gbc.setState(0x68f8, 0x1066, 0x2c40, 0x43bb, 0x339a, 0xd340, 0x1, 0x1);
        gbc.writeMem(0x68f8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1066);
        EXPECT(gbc.pc(), 0x68f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01D9
        gbc.setState(0xdb8a, 0x34e0, 0xb630, 0x2160, 0x87c1, 0xbccd, 0x1, 0x1);
        gbc.writeMem(0xdb8a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x34e0);
        EXPECT(gbc.pc(), 0xdb8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb8a), 0xab);
        // AB 01DA
        gbc.setState(0x20ec, 0xf41c, 0x8560, 0x4add, 0x2156, 0x430f, 0x0, 0x0);
        gbc.writeMem(0x20ec, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf41c);
        EXPECT(gbc.pc(), 0x20ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01DB
        gbc.setState(0x7c60, 0x66fd, 0x8950, 0xa0f1, 0x184a, 0xc5bc, 0x1, 0x1);
        gbc.writeMem(0x7c60, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x66fd);
        EXPECT(gbc.pc(), 0x7c61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01DC
        gbc.setState(0xe76c, 0xe044, 0xd330, 0x5c0c, 0x6ebd, 0x729c, 0x1, 0x0);
        gbc.writeMem(0xe76c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe044);
        EXPECT(gbc.pc(), 0xe76d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe76c), 0xab);
        // AB 01DD
        gbc.setState(0xc569, 0xdd12, 0x3210, 0xf5db, 0x6b1d, 0xa352, 0x1, 0x1);
        gbc.writeMem(0xc569, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xdd12);
        EXPECT(gbc.pc(), 0xc56a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc569), 0xab);
        // AB 01DE
        gbc.setState(0x8004, 0x5e59, 0x6590, 0x2609, 0xbd2c, 0x5f80, 0x1, 0x1);
        gbc.writeMem(0x8004, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5e59);
        EXPECT(gbc.pc(), 0x8005);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8004), 0xab);
        // AB 01DF
        gbc.setState(0x76e1, 0xccba, 0x97c0, 0x90d1, 0x8fed, 0xa968, 0x1, 0x1);
        gbc.writeMem(0x76e1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xccba);
        EXPECT(gbc.pc(), 0x76e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01E0
        gbc.setState(0x457, 0xf8e1, 0x6220, 0x5507, 0xaa05, 0x10dc, 0x1, 0x1);
        gbc.writeMem(0x457, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf8e1);
        EXPECT(gbc.pc(), 0x458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01E1
        gbc.setState(0x2536, 0x4129, 0xfbf0, 0xbc0c, 0x1d13, 0x16f6, 0x0, 0x1);
        gbc.writeMem(0x2536, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4129);
        EXPECT(gbc.pc(), 0x2537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01E2
        gbc.setState(0xe38c, 0x3236, 0x8530, 0x4253, 0xc504, 0x2b14, 0x0, 0x1);
        gbc.writeMem(0xe38c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3236);
        EXPECT(gbc.pc(), 0xe38d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe38c), 0xab);
        // AB 01E4
        gbc.setState(0xa94c, 0x6891, 0x9af0, 0xf428, 0x748, 0xcdda, 0x1, 0x1);
        gbc.writeMem(0xa94c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6891);
        EXPECT(gbc.pc(), 0xa94d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa94c), 0xab);
        // AB 01E5
        gbc.setState(0x4913, 0x1ef0, 0x9f0, 0x90f1, 0x4b1c, 0x54d2, 0x0, 0x0);
        gbc.writeMem(0x4913, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1ef0);
        EXPECT(gbc.pc(), 0x4914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01E6
        gbc.setState(0x2622, 0xaec2, 0x5620, 0x7955, 0xca6a, 0xfe52, 0x0, 0x1);
        gbc.writeMem(0x2622, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xaec2);
        EXPECT(gbc.pc(), 0x2623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01E7
        gbc.setState(0x29fb, 0x5947, 0xdc0, 0xeb1e, 0x7e1e, 0x1f80, 0x0, 0x0);
        gbc.writeMem(0x29fb, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5947);
        EXPECT(gbc.pc(), 0x29fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01E8
        gbc.setState(0x827b, 0x2d9f, 0x3030, 0x150d, 0xe1e4, 0x912c, 0x0, 0x1);
        gbc.writeMem(0x827b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2d9f);
        EXPECT(gbc.pc(), 0x827c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x827b), 0xab);
        // AB 01E9
        gbc.setState(0x55fd, 0x6ef6, 0x8bf0, 0xff3e, 0x870b, 0x1aa8, 0x1, 0x1);
        gbc.writeMem(0x55fd, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6ef6);
        EXPECT(gbc.pc(), 0x55fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01EA
        gbc.setState(0xa077, 0xca8d, 0x9320, 0xf18a, 0xd22c, 0x269, 0x0, 0x1);
        gbc.writeMem(0xa077, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xca8d);
        EXPECT(gbc.pc(), 0xa078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa077), 0xab);
        // AB 01EB
        gbc.setState(0xcc0a, 0x8f21, 0xaab0, 0xe9b6, 0x33f9, 0xe69a, 0x1, 0x0);
        gbc.writeMem(0xcc0a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8f21);
        EXPECT(gbc.pc(), 0xcc0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc0a), 0xab);
        // AB 01EC
        gbc.setState(0xb5aa, 0x82da, 0x240, 0xe534, 0x3294, 0x795e, 0x0, 0x1);
        gbc.writeMem(0xb5aa, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x82da);
        EXPECT(gbc.pc(), 0xb5ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5aa), 0xab);
        // AB 01ED
        gbc.setState(0xd05c, 0x8257, 0x4430, 0xa1be, 0xd7bd, 0x89ec, 0x0, 0x1);
        gbc.writeMem(0xd05c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8257);
        EXPECT(gbc.pc(), 0xd05d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd05c), 0xab);
        // AB 01EE
        gbc.setState(0x5785, 0xf83a, 0xb170, 0xb05e, 0xb05e, 0x40e2, 0x0, 0x1);
        gbc.writeMem(0x5785, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf83a);
        EXPECT(gbc.pc(), 0x5786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01EF
        gbc.setState(0xdbc3, 0xaf5, 0x9780, 0xfbeb, 0x852d, 0x66f, 0x0, 0x1);
        gbc.writeMem(0xdbc3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xaf5);
        EXPECT(gbc.pc(), 0xdbc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbc3), 0xab);
        // AB 01F0
        gbc.setState(0x522f, 0x154d, 0xcf60, 0x5122, 0xf276, 0xf01b, 0x1, 0x1);
        gbc.writeMem(0x522f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x154d);
        EXPECT(gbc.pc(), 0x5230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01F1
        gbc.setState(0x37ea, 0x7c5a, 0xd350, 0xbe5a, 0x59c7, 0x614d, 0x1, 0x0);
        gbc.writeMem(0x37ea, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7c5a);
        EXPECT(gbc.pc(), 0x37eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01F2
        gbc.setState(0x59ec, 0x50d3, 0x9750, 0x3b2f, 0x3322, 0x45ea, 0x1, 0x1);
        gbc.writeMem(0x59ec, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x50d3);
        EXPECT(gbc.pc(), 0x59ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01F3
        gbc.setState(0xc480, 0x10bf, 0xf540, 0xb854, 0xb216, 0x935d, 0x1, 0x0);
        gbc.writeMem(0xc480, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x10bf);
        EXPECT(gbc.pc(), 0xc481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc480), 0xab);
        // AB 01F4
        gbc.setState(0x7bee, 0x2aba, 0xaad0, 0x9904, 0xee83, 0x34f0, 0x1, 0x1);
        gbc.writeMem(0x7bee, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2aba);
        EXPECT(gbc.pc(), 0x7bef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01F6
        gbc.setState(0x849e, 0x9d57, 0x8b0, 0x5ba9, 0xe424, 0xac90, 0x0, 0x1);
        gbc.writeMem(0x849e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9d57);
        EXPECT(gbc.pc(), 0x849f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x849e), 0xab);
        // AB 01F7
        gbc.setState(0x7c54, 0x95c9, 0x7b90, 0x181d, 0x7d32, 0x6ed6, 0x0, 0x1);
        gbc.writeMem(0x7c54, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x95c9);
        EXPECT(gbc.pc(), 0x7c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01F8
        gbc.setState(0x1ce1, 0x2280, 0xe230, 0x96c9, 0x6386, 0x76d4, 0x1, 0x1);
        gbc.writeMem(0x1ce1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2280);
        EXPECT(gbc.pc(), 0x1ce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01F9
        gbc.setState(0xdfde, 0x6b25, 0x4490, 0x798b, 0xcf50, 0x8bcc, 0x0, 0x0);
        gbc.writeMem(0xdfde, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6b25);
        EXPECT(gbc.pc(), 0xdfdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfde), 0xab);
        // AB 01FA
        gbc.setState(0x4439, 0xa8c3, 0xc4d0, 0x4efe, 0x2d87, 0x4269, 0x1, 0x0);
        gbc.writeMem(0x4439, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa8c3);
        EXPECT(gbc.pc(), 0x443a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01FB
        gbc.setState(0xd4fe, 0xa4a6, 0x560, 0xb1a7, 0xdab1, 0x2ddc, 0x0, 0x0);
        gbc.writeMem(0xd4fe, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa4a6);
        EXPECT(gbc.pc(), 0xd4ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4fe), 0xab);
        // AB 01FC
        gbc.setState(0x7de, 0x7705, 0xde80, 0x516b, 0xac8b, 0xc4e4, 0x1, 0x1);
        gbc.writeMem(0x7de, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7705);
        EXPECT(gbc.pc(), 0x7df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01FD
        gbc.setState(0x1d71, 0xa618, 0xb370, 0x28d6, 0x1339, 0x34e7, 0x1, 0x0);
        gbc.writeMem(0x1d71, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa618);
        EXPECT(gbc.pc(), 0x1d72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 01FE
        gbc.setState(0x9bff, 0x92fd, 0xc750, 0x6907, 0x1c70, 0xeb9e, 0x1, 0x1);
        gbc.writeMem(0x9bff, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x92fd);
        EXPECT(gbc.pc(), 0x9c00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bff), 0xab);
        // AB 01FF
        gbc.setState(0xe930, 0x6734, 0xaa40, 0xb2e0, 0x92d4, 0x9e84, 0x0, 0x0);
        gbc.writeMem(0xe930, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6734);
        EXPECT(gbc.pc(), 0xe931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe930), 0xab);
        // AB 0200
        gbc.setState(0x765a, 0x5d8a, 0xd060, 0xea63, 0x3af0, 0x9777, 0x0, 0x1);
        gbc.writeMem(0x765a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5d8a);
        EXPECT(gbc.pc(), 0x765b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0201
        gbc.setState(0x766d, 0x735c, 0xbc30, 0x77ae, 0x64ee, 0x974f, 0x0, 0x1);
        gbc.writeMem(0x766d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x735c);
        EXPECT(gbc.pc(), 0x766e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0202
        gbc.setState(0x9e9d, 0x42a4, 0x5cd0, 0x258b, 0xf71, 0xc3c8, 0x1, 0x0);
        gbc.writeMem(0x9e9d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x42a4);
        EXPECT(gbc.pc(), 0x9e9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e9d), 0xab);
        // AB 0203
        gbc.setState(0xb55c, 0xdaf0, 0x8890, 0xcb6a, 0xdf91, 0xd7ac, 0x1, 0x1);
        gbc.writeMem(0xb55c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdaf0);
        EXPECT(gbc.pc(), 0xb55d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb55c), 0xab);
        // AB 0204
        gbc.setState(0x1407, 0x6173, 0x2ec0, 0xb0c6, 0xa4c6, 0x7e4c, 0x0, 0x0);
        gbc.writeMem(0x1407, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6173);
        EXPECT(gbc.pc(), 0x1408);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0205
        gbc.setState(0x51a8, 0x5fbf, 0xa6b0, 0x20c4, 0xed61, 0x12ed, 0x1, 0x1);
        gbc.writeMem(0x51a8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5fbf);
        EXPECT(gbc.pc(), 0x51a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0207
        gbc.setState(0x8783, 0x4edc, 0x3ff0, 0xd83e, 0xfdf4, 0x6c7f, 0x1, 0x0);
        gbc.writeMem(0x8783, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4edc);
        EXPECT(gbc.pc(), 0x8784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8783), 0xab);
        // AB 0208
        gbc.setState(0xb115, 0x1034, 0xc860, 0x6bd1, 0xd9ea, 0xfb76, 0x1, 0x1);
        gbc.writeMem(0xb115, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1034);
        EXPECT(gbc.pc(), 0xb116);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb115), 0xab);
        // AB 0209
        gbc.setState(0x1906, 0x2173, 0x8450, 0x1528, 0x2213, 0xb001, 0x1, 0x0);
        gbc.writeMem(0x1906, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2173);
        EXPECT(gbc.pc(), 0x1907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 020A
        gbc.setState(0x2f00, 0xa3e4, 0xaec0, 0xf82d, 0x9d31, 0xb3b1, 0x1, 0x1);
        gbc.writeMem(0x2f00, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa3e4);
        EXPECT(gbc.pc(), 0x2f01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 020B
        gbc.setState(0x620f, 0x4824, 0x78d0, 0xc74b, 0x4101, 0xa04a, 0x0, 0x1);
        gbc.writeMem(0x620f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4824);
        EXPECT(gbc.pc(), 0x6210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 020C
        gbc.setState(0x599, 0x5d9, 0x4900, 0x84d5, 0x7cbe, 0x6c55, 0x0, 0x0);
        gbc.writeMem(0x599, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5d9);
        EXPECT(gbc.pc(), 0x59a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 020D
        gbc.setState(0x162e, 0xcedf, 0xb0e0, 0xc15e, 0x822f, 0xb469, 0x1, 0x1);
        gbc.writeMem(0x162e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcedf);
        EXPECT(gbc.pc(), 0x162f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 020E
        gbc.setState(0x8850, 0x130e, 0xda90, 0x9912, 0xe967, 0xf5c, 0x0, 0x1);
        gbc.writeMem(0x8850, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x130e);
        EXPECT(gbc.pc(), 0x8851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8850), 0xab);
        // AB 020F
        gbc.setState(0x2f55, 0xdd3c, 0x8df0, 0x4007, 0x744, 0xe814, 0x0, 0x1);
        gbc.writeMem(0x2f55, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xdd3c);
        EXPECT(gbc.pc(), 0x2f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0210
        gbc.setState(0x8250, 0xc05f, 0x5af0, 0xc401, 0x3fb8, 0xc8d4, 0x0, 0x1);
        gbc.writeMem(0x8250, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc05f);
        EXPECT(gbc.pc(), 0x8251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8250), 0xab);
        // AB 0211
        gbc.setState(0x7636, 0x7cb4, 0x7b00, 0x9698, 0x531f, 0xfbd8, 0x0, 0x1);
        gbc.writeMem(0x7636, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7cb4);
        EXPECT(gbc.pc(), 0x7637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0212
        gbc.setState(0xdb1f, 0x9f6e, 0x12a0, 0xfa82, 0x6725, 0x867a, 0x0, 0x0);
        gbc.writeMem(0xdb1f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9f6e);
        EXPECT(gbc.pc(), 0xdb20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb1f), 0xab);
        // AB 0213
        gbc.setState(0x5e35, 0xe452, 0x72e0, 0xb199, 0x3a5f, 0xd53c, 0x0, 0x1);
        gbc.writeMem(0x5e35, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe452);
        EXPECT(gbc.pc(), 0x5e36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0214
        gbc.setState(0xceaa, 0x5895, 0xdc80, 0x729b, 0x57f0, 0x3dbd, 0x0, 0x0);
        gbc.writeMem(0xceaa, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5895);
        EXPECT(gbc.pc(), 0xceab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceaa), 0xab);
        // AB 0215
        gbc.setState(0x72b3, 0x551b, 0x1ce0, 0x52b0, 0x13b9, 0x2b40, 0x1, 0x0);
        gbc.writeMem(0x72b3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x551b);
        EXPECT(gbc.pc(), 0x72b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0216
        gbc.setState(0x86f4, 0xf33e, 0xb5d0, 0x2251, 0xca96, 0xbadb, 0x1, 0x1);
        gbc.writeMem(0x86f4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf33e);
        EXPECT(gbc.pc(), 0x86f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f4), 0xab);
        // AB 0217
        gbc.setState(0x9fef, 0x4cef, 0xa010, 0x20fb, 0xcf7, 0xce08, 0x1, 0x1);
        gbc.writeMem(0x9fef, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4cef);
        EXPECT(gbc.pc(), 0x9ff0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fef), 0xab);
        // AB 0218
        gbc.setState(0x2678, 0x9db0, 0xfff0, 0x4199, 0xd934, 0xf05, 0x0, 0x0);
        gbc.writeMem(0x2678, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9db0);
        EXPECT(gbc.pc(), 0x2679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0219
        gbc.setState(0x9b37, 0xd8af, 0xdcc0, 0xf8f8, 0x94e8, 0x9c3c, 0x0, 0x0);
        gbc.writeMem(0x9b37, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd8af);
        EXPECT(gbc.pc(), 0x9b38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b37), 0xab);
        // AB 021A
        gbc.setState(0xb917, 0xa258, 0x61d0, 0xb918, 0x556e, 0x2245, 0x0, 0x1);
        gbc.writeMem(0xb917, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa258);
        EXPECT(gbc.pc(), 0xb918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb917), 0xab);
        // AB 021B
        gbc.setState(0x9e21, 0x895d, 0xde0, 0xc8d4, 0x6b5e, 0x78ed, 0x1, 0x1);
        gbc.writeMem(0x9e21, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x895d);
        EXPECT(gbc.pc(), 0x9e22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e21), 0xab);
        // AB 021D
        gbc.setState(0x1280, 0xf91e, 0x1ba0, 0x3a92, 0x547, 0x1f36, 0x1, 0x0);
        gbc.writeMem(0x1280, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf91e);
        EXPECT(gbc.pc(), 0x1281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 021E
        gbc.setState(0x4f7e, 0x93a9, 0x9540, 0x7270, 0x587, 0xdb5a, 0x1, 0x0);
        gbc.writeMem(0x4f7e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x93a9);
        EXPECT(gbc.pc(), 0x4f7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 021F
        gbc.setState(0x98f4, 0xd6e, 0x3f10, 0x8a36, 0x5d0, 0xcb6d, 0x0, 0x1);
        gbc.writeMem(0x98f4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd6e);
        EXPECT(gbc.pc(), 0x98f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98f4), 0xab);
        // AB 0220
        gbc.setState(0xad69, 0xe19, 0x73c0, 0x9ab0, 0xb9ec, 0x3ee, 0x0, 0x0);
        gbc.writeMem(0xad69, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe19);
        EXPECT(gbc.pc(), 0xad6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad69), 0xab);
        // AB 0221
        gbc.setState(0x19b8, 0xc2c3, 0xe320, 0xeefb, 0x8840, 0x64b1, 0x0, 0x1);
        gbc.writeMem(0x19b8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc2c3);
        EXPECT(gbc.pc(), 0x19b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0222
        gbc.setState(0x3fa9, 0x696d, 0x9350, 0xa370, 0xf3d6, 0x840a, 0x1, 0x0);
        gbc.writeMem(0x3fa9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x696d);
        EXPECT(gbc.pc(), 0x3faa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0223
        gbc.setState(0x5b12, 0xfbe6, 0xc0b0, 0xedbc, 0xa129, 0xceac, 0x0, 0x1);
        gbc.writeMem(0x5b12, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xfbe6);
        EXPECT(gbc.pc(), 0x5b13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0224
        gbc.setState(0x9869, 0xc494, 0x13f0, 0xbd1c, 0x714, 0x6913, 0x1, 0x0);
        gbc.writeMem(0x9869, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc494);
        EXPECT(gbc.pc(), 0x986a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9869), 0xab);
        // AB 0225
        gbc.setState(0x48e7, 0xa25c, 0x1b30, 0x6ba0, 0xf5c4, 0x51d0, 0x0, 0x1);
        gbc.writeMem(0x48e7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa25c);
        EXPECT(gbc.pc(), 0x48e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0226
        gbc.setState(0xb1af, 0x973e, 0x7640, 0x12f0, 0xcc61, 0x684d, 0x1, 0x0);
        gbc.writeMem(0xb1af, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x973e);
        EXPECT(gbc.pc(), 0xb1b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1af), 0xab);
        // AB 0227
        gbc.setState(0x5d7f, 0x9492, 0x5320, 0xf011, 0x2fd, 0x10b, 0x1, 0x0);
        gbc.writeMem(0x5d7f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9492);
        EXPECT(gbc.pc(), 0x5d80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0229
        gbc.setState(0xe9, 0x129f, 0xecc0, 0x101e, 0x7ea4, 0xdac9, 0x1, 0x0);
        gbc.writeMem(0xe9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x129f);
        EXPECT(gbc.pc(), 0xea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 022A
        gbc.setState(0x2446, 0xf2b6, 0x9820, 0x64ee, 0x5f5e, 0x5b9b, 0x1, 0x1);
        gbc.writeMem(0x2446, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf2b6);
        EXPECT(gbc.pc(), 0x2447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 022B
        gbc.setState(0xeaa3, 0x7bf2, 0x1090, 0x9481, 0x25c3, 0x37a6, 0x0, 0x0);
        gbc.writeMem(0xeaa3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7bf2);
        EXPECT(gbc.pc(), 0xeaa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaa3), 0xab);
        // AB 022C
        gbc.setState(0x514, 0xd6f7, 0xdb50, 0xaf48, 0xb8fa, 0x5c78, 0x1, 0x1);
        gbc.writeMem(0x514, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd6f7);
        EXPECT(gbc.pc(), 0x515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 022D
        gbc.setState(0xc22b, 0xf7aa, 0x29d0, 0x1ddc, 0x809d, 0x601a, 0x0, 0x0);
        gbc.writeMem(0xc22b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf7aa);
        EXPECT(gbc.pc(), 0xc22c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc22b), 0xab);
        // AB 022E
        gbc.setState(0x28be, 0xfca1, 0x3dc0, 0xe14a, 0x7867, 0x91b0, 0x0, 0x1);
        gbc.writeMem(0x28be, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfca1);
        EXPECT(gbc.pc(), 0x28bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 022F
        gbc.setState(0x93a1, 0x2681, 0x96a0, 0xdb3f, 0x6e2b, 0x5f01, 0x0, 0x0);
        gbc.writeMem(0x93a1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2681);
        EXPECT(gbc.pc(), 0x93a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93a1), 0xab);
        // AB 0230
        gbc.setState(0xe7b1, 0xc879, 0xed70, 0xd842, 0x4874, 0x85f7, 0x1, 0x1);
        gbc.writeMem(0xe7b1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc879);
        EXPECT(gbc.pc(), 0xe7b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7b1), 0xab);
        // AB 0231
        gbc.setState(0xd420, 0xbce0, 0x5f40, 0x3e83, 0xb5c9, 0xbf0, 0x1, 0x0);
        gbc.writeMem(0xd420, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbce0);
        EXPECT(gbc.pc(), 0xd421);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd420), 0xab);
        // AB 0232
        gbc.setState(0x19eb, 0xc40f, 0x72b0, 0x4b85, 0x8e91, 0xc595, 0x1, 0x0);
        gbc.writeMem(0x19eb, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc40f);
        EXPECT(gbc.pc(), 0x19ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0233
        gbc.setState(0xaa4d, 0x8bf6, 0x960, 0x981b, 0xcc4d, 0x3dd0, 0x1, 0x1);
        gbc.writeMem(0xaa4d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8bf6);
        EXPECT(gbc.pc(), 0xaa4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa4d), 0xab);
        // AB 0234
        gbc.setState(0x4800, 0x4672, 0xc700, 0xd4a4, 0xdde0, 0x978c, 0x1, 0x0);
        gbc.writeMem(0x4800, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4672);
        EXPECT(gbc.pc(), 0x4801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0235
        gbc.setState(0xa109, 0xe272, 0x80f0, 0x71ae, 0xa090, 0x2b9c, 0x1, 0x1);
        gbc.writeMem(0xa109, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe272);
        EXPECT(gbc.pc(), 0xa10a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa109), 0xab);
        // AB 0236
        gbc.setState(0x3a3f, 0xab61, 0x3930, 0xc1ff, 0x93ae, 0xd362, 0x1, 0x0);
        gbc.writeMem(0x3a3f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xab61);
        EXPECT(gbc.pc(), 0x3a40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0237
        gbc.setState(0x6cd3, 0xac8e, 0x3600, 0xbe4c, 0x72d4, 0x5ba0, 0x1, 0x0);
        gbc.writeMem(0x6cd3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xac8e);
        EXPECT(gbc.pc(), 0x6cd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0238
        gbc.setState(0x9522, 0x8a6f, 0x8db0, 0x4d9, 0xc78e, 0x9657, 0x0, 0x1);
        gbc.writeMem(0x9522, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8a6f);
        EXPECT(gbc.pc(), 0x9523);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9522), 0xab);
        // AB 0239
        gbc.setState(0xb786, 0xa7e4, 0xe460, 0x600b, 0x632d, 0xa886, 0x0, 0x0);
        gbc.writeMem(0xb786, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa7e4);
        EXPECT(gbc.pc(), 0xb787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb786), 0xab);
        // AB 023A
        gbc.setState(0xbd04, 0xfdc7, 0x3480, 0x3e63, 0xade2, 0xda3e, 0x0, 0x1);
        gbc.writeMem(0xbd04, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xfdc7);
        EXPECT(gbc.pc(), 0xbd05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd04), 0xab);
        // AB 023B
        gbc.setState(0x6eec, 0xa98e, 0x9c0, 0x853a, 0x9406, 0x3739, 0x0, 0x0);
        gbc.writeMem(0x6eec, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa98e);
        EXPECT(gbc.pc(), 0x6eed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 023C
        gbc.setState(0xc1e, 0xa83e, 0xeee0, 0xb1da, 0xfb17, 0x7932, 0x1, 0x1);
        gbc.writeMem(0xc1e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa83e);
        EXPECT(gbc.pc(), 0xc1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 023D
        gbc.setState(0x9d35, 0x51fe, 0xb990, 0x2e34, 0x3655, 0x4e5c, 0x0, 0x1);
        gbc.writeMem(0x9d35, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x51fe);
        EXPECT(gbc.pc(), 0x9d36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d35), 0xab);
        // AB 023E
        gbc.setState(0x6b7d, 0x2076, 0xb940, 0x80c0, 0x9ee, 0x499a, 0x1, 0x0);
        gbc.writeMem(0x6b7d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2076);
        EXPECT(gbc.pc(), 0x6b7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 023F
        gbc.setState(0xdbe9, 0xa16c, 0x4a00, 0xc950, 0xeb26, 0xb711, 0x1, 0x1);
        gbc.writeMem(0xdbe9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa16c);
        EXPECT(gbc.pc(), 0xdbea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbe9), 0xab);
        // AB 0240
        gbc.setState(0xd79c, 0x4cd0, 0xd210, 0xa1ef, 0x9272, 0x35d9, 0x0, 0x0);
        gbc.writeMem(0xd79c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4cd0);
        EXPECT(gbc.pc(), 0xd79d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd79c), 0xab);
        // AB 0242
        gbc.setState(0x58cf, 0xd02f, 0x3350, 0xc9bb, 0x49b9, 0x57f8, 0x1, 0x1);
        gbc.writeMem(0x58cf, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd02f);
        EXPECT(gbc.pc(), 0x58d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0243
        gbc.setState(0x62a9, 0xcf63, 0x38f0, 0xe0be, 0xfb91, 0x49e7, 0x0, 0x1);
        gbc.writeMem(0x62a9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcf63);
        EXPECT(gbc.pc(), 0x62aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0244
        gbc.setState(0xb8e6, 0x2aa1, 0xc420, 0x248, 0x8cc2, 0x2dd3, 0x0, 0x0);
        gbc.writeMem(0xb8e6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2aa1);
        EXPECT(gbc.pc(), 0xb8e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8e6), 0xab);
        // AB 0245
        gbc.setState(0x4d3e, 0xb6d2, 0x2c00, 0x77ed, 0x69d1, 0xe213, 0x1, 0x1);
        gbc.writeMem(0x4d3e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb6d2);
        EXPECT(gbc.pc(), 0x4d3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0248
        gbc.setState(0xcd26, 0x2532, 0x5e0, 0x43ae, 0x91ff, 0xdf2d, 0x0, 0x0);
        gbc.writeMem(0xcd26, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2532);
        EXPECT(gbc.pc(), 0xcd27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd26), 0xab);
        // AB 0249
        gbc.setState(0x676c, 0x4be9, 0xac60, 0xcc7f, 0xc180, 0x3c28, 0x1, 0x1);
        gbc.writeMem(0x676c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4be9);
        EXPECT(gbc.pc(), 0x676d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 024A
        gbc.setState(0x1f47, 0x12d, 0x5300, 0x2d15, 0x2d81, 0xf795, 0x0, 0x0);
        gbc.writeMem(0x1f47, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x12d);
        EXPECT(gbc.pc(), 0x1f48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 024B
        gbc.setState(0x84d0, 0x14b7, 0x4850, 0x6870, 0xc744, 0x2dcc, 0x1, 0x0);
        gbc.writeMem(0x84d0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x14b7);
        EXPECT(gbc.pc(), 0x84d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d0), 0xab);
        // AB 024C
        gbc.setState(0x266d, 0x3ba5, 0xcdd0, 0x6b4f, 0x19c4, 0x660b, 0x0, 0x1);
        gbc.writeMem(0x266d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3ba5);
        EXPECT(gbc.pc(), 0x266e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 024D
        gbc.setState(0x26f0, 0xac49, 0xdf60, 0xf162, 0xdc99, 0x2128, 0x0, 0x0);
        gbc.writeMem(0x26f0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xac49);
        EXPECT(gbc.pc(), 0x26f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 024E
        gbc.setState(0x2734, 0x54f3, 0xe7f0, 0xea08, 0xae1f, 0xd9a6, 0x0, 0x1);
        gbc.writeMem(0x2734, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x54f3);
        EXPECT(gbc.pc(), 0x2735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 024F
        gbc.setState(0xc3bd, 0x7296, 0xa9d0, 0x5660, 0xa40b, 0xf0d, 0x1, 0x1);
        gbc.writeMem(0xc3bd, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7296);
        EXPECT(gbc.pc(), 0xc3be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3bd), 0xab);
        // AB 0250
        gbc.setState(0xdce1, 0x3d84, 0x470, 0x5936, 0x1ebc, 0x3ce5, 0x0, 0x0);
        gbc.writeMem(0xdce1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3d84);
        EXPECT(gbc.pc(), 0xdce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce1), 0xab);
        // AB 0251
        gbc.setState(0x56eb, 0xf02a, 0xabd0, 0xe55e, 0xfba7, 0xa807, 0x0, 0x1);
        gbc.writeMem(0x56eb, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf02a);
        EXPECT(gbc.pc(), 0x56ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0252
        gbc.setState(0x74e4, 0xfe3f, 0xb440, 0x2165, 0x3aa4, 0x9ece, 0x0, 0x0);
        gbc.writeMem(0x74e4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xfe3f);
        EXPECT(gbc.pc(), 0x74e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0253
        gbc.setState(0x53ba, 0x9808, 0xc50, 0x84de, 0x5cb4, 0x6305, 0x0, 0x0);
        gbc.writeMem(0x53ba, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9808);
        EXPECT(gbc.pc(), 0x53bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0254
        gbc.setState(0x16fa, 0x5dfc, 0x2ed0, 0x9ed6, 0x92b5, 0x9b6, 0x1, 0x1);
        gbc.writeMem(0x16fa, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5dfc);
        EXPECT(gbc.pc(), 0x16fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0255
        gbc.setState(0x9fff, 0xb56d, 0x5240, 0xdce8, 0xab9a, 0x28f8, 0x1, 0x0);
        gbc.writeMem(0x9fff, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb56d);
        EXPECT(gbc.pc(), 0xa000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fff), 0xab);
        // AB 0256
        gbc.setState(0x2708, 0xe375, 0x9a90, 0x6565, 0xcc93, 0x6255, 0x0, 0x1);
        gbc.writeMem(0x2708, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe375);
        EXPECT(gbc.pc(), 0x2709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0257
        gbc.setState(0x3e52, 0xaf23, 0xc7c0, 0x1f93, 0x190, 0xfee, 0x1, 0x1);
        gbc.writeMem(0x3e52, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xaf23);
        EXPECT(gbc.pc(), 0x3e53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0258
        gbc.setState(0x8aa4, 0x83f7, 0xd7d0, 0x7494, 0xcafd, 0x6012, 0x0, 0x1);
        gbc.writeMem(0x8aa4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x83f7);
        EXPECT(gbc.pc(), 0x8aa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa4), 0xab);
        // AB 0259
        gbc.setState(0x5ca2, 0x131f, 0xa8c0, 0xf171, 0xcc99, 0x2c6f, 0x0, 0x0);
        gbc.writeMem(0x5ca2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x131f);
        EXPECT(gbc.pc(), 0x5ca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 025A
        gbc.setState(0xd0e2, 0x86a8, 0x38d0, 0xd398, 0xe0fe, 0x214, 0x0, 0x0);
        gbc.writeMem(0xd0e2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x86a8);
        EXPECT(gbc.pc(), 0xd0e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0e2), 0xab);
        // AB 025B
        gbc.setState(0x236e, 0x56da, 0xb770, 0xef01, 0xf633, 0xdadb, 0x1, 0x1);
        gbc.writeMem(0x236e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x56da);
        EXPECT(gbc.pc(), 0x236f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 025C
        gbc.setState(0x8796, 0x17ce, 0x6500, 0xdad2, 0x62ab, 0x44c5, 0x0, 0x0);
        gbc.writeMem(0x8796, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x17ce);
        EXPECT(gbc.pc(), 0x8797);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8796), 0xab);
        // AB 025D
        gbc.setState(0x38b0, 0x1bdc, 0x69b0, 0x41e, 0xe87f, 0xa202, 0x1, 0x0);
        gbc.writeMem(0x38b0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1bdc);
        EXPECT(gbc.pc(), 0x38b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 025E
        gbc.setState(0x2fb7, 0xd98c, 0x48e0, 0x2a8b, 0xbefc, 0xa5ed, 0x0, 0x1);
        gbc.writeMem(0x2fb7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd98c);
        EXPECT(gbc.pc(), 0x2fb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 025F
        gbc.setState(0x44d1, 0xaba6, 0xb3b0, 0x756c, 0xdd5b, 0xa921, 0x0, 0x0);
        gbc.writeMem(0x44d1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xaba6);
        EXPECT(gbc.pc(), 0x44d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0260
        gbc.setState(0x9c78, 0x1a2, 0xf1f0, 0x1102, 0xe2d, 0xcafd, 0x0, 0x0);
        gbc.writeMem(0x9c78, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1a2);
        EXPECT(gbc.pc(), 0x9c79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c78), 0xab);
        // AB 0261
        gbc.setState(0x1faa, 0x8abb, 0x4360, 0x3ee8, 0x67e3, 0x4d69, 0x1, 0x0);
        gbc.writeMem(0x1faa, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8abb);
        EXPECT(gbc.pc(), 0x1fab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0262
        gbc.setState(0x2bdf, 0xd005, 0xc20, 0x2eb, 0x7eeb, 0xd916, 0x0, 0x0);
        gbc.writeMem(0x2bdf, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd005);
        EXPECT(gbc.pc(), 0x2be0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0263
        gbc.setState(0x1240, 0x7e71, 0x5650, 0xb4da, 0x54d0, 0xa856, 0x0, 0x0);
        gbc.writeMem(0x1240, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7e71);
        EXPECT(gbc.pc(), 0x1241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0264
        gbc.setState(0x4742, 0xa314, 0xe660, 0xfb76, 0xf73c, 0x7bc3, 0x1, 0x0);
        gbc.writeMem(0x4742, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa314);
        EXPECT(gbc.pc(), 0x4743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0265
        gbc.setState(0x39f0, 0x5062, 0x2e50, 0xa41c, 0x23f4, 0x2051, 0x1, 0x0);
        gbc.writeMem(0x39f0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5062);
        EXPECT(gbc.pc(), 0x39f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0266
        gbc.setState(0x462e, 0xfaca, 0xe3e0, 0x1792, 0x2baa, 0x5d59, 0x0, 0x0);
        gbc.writeMem(0x462e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xfaca);
        EXPECT(gbc.pc(), 0x462f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0267
        gbc.setState(0xec84, 0xa722, 0x3840, 0x51d4, 0xb0f9, 0xd3ff, 0x1, 0x0);
        gbc.writeMem(0xec84, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa722);
        EXPECT(gbc.pc(), 0xec85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec84), 0xab);
        // AB 0268
        gbc.setState(0x3f59, 0xa678, 0x2100, 0xf7c6, 0x8eee, 0x697d, 0x0, 0x1);
        gbc.writeMem(0x3f59, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa678);
        EXPECT(gbc.pc(), 0x3f5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 026A
        gbc.setState(0x3219, 0xa260, 0x8c00, 0x2c23, 0x792b, 0x4dcf, 0x1, 0x1);
        gbc.writeMem(0x3219, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa260);
        EXPECT(gbc.pc(), 0x321a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 026B
        gbc.setState(0x9bfb, 0xc066, 0x9d0, 0xc1fd, 0xd4e, 0x3860, 0x1, 0x1);
        gbc.writeMem(0x9bfb, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc066);
        EXPECT(gbc.pc(), 0x9bfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bfb), 0xab);
        // AB 026C
        gbc.setState(0xc67, 0xd06a, 0xe680, 0x82bf, 0xe33d, 0x6333, 0x1, 0x1);
        gbc.writeMem(0xc67, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd06a);
        EXPECT(gbc.pc(), 0xc68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 026D
        gbc.setState(0xa2d6, 0x911a, 0x1600, 0x74df, 0xd73d, 0xf72f, 0x0, 0x0);
        gbc.writeMem(0xa2d6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x911a);
        EXPECT(gbc.pc(), 0xa2d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d6), 0xab);
        // AB 026F
        gbc.setState(0xc0e2, 0xee39, 0x8d80, 0xabf6, 0x6d9, 0xc0b3, 0x1, 0x1);
        gbc.writeMem(0xc0e2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xee39);
        EXPECT(gbc.pc(), 0xc0e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e2), 0xab);
        // AB 0270
        gbc.setState(0x7160, 0x6177, 0x9000, 0xebdd, 0xe031, 0xcc5c, 0x0, 0x0);
        gbc.writeMem(0x7160, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6177);
        EXPECT(gbc.pc(), 0x7161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0271
        gbc.setState(0x7645, 0x18b4, 0xc2c0, 0x7873, 0x8729, 0x8a94, 0x0, 0x0);
        gbc.writeMem(0x7645, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x18b4);
        EXPECT(gbc.pc(), 0x7646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0272
        gbc.setState(0x6eee, 0xb952, 0x1690, 0x304d, 0xc113, 0xcad7, 0x0, 0x1);
        gbc.writeMem(0x6eee, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb952);
        EXPECT(gbc.pc(), 0x6eef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0273
        gbc.setState(0x1aea, 0x8dd, 0x9b50, 0xc0e9, 0x9745, 0x6738, 0x1, 0x1);
        gbc.writeMem(0x1aea, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8dd);
        EXPECT(gbc.pc(), 0x1aeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0274
        gbc.setState(0xa087, 0x1498, 0x9b90, 0xf1e5, 0xaf41, 0x1e42, 0x0, 0x0);
        gbc.writeMem(0xa087, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1498);
        EXPECT(gbc.pc(), 0xa088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa087), 0xab);
        // AB 0275
        gbc.setState(0x14e5, 0x8ceb, 0xd7a0, 0x3604, 0x8242, 0xf94d, 0x0, 0x0);
        gbc.writeMem(0x14e5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8ceb);
        EXPECT(gbc.pc(), 0x14e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0276
        gbc.setState(0xbf01, 0x5782, 0x82c0, 0x7319, 0xc342, 0xcb9e, 0x0, 0x1);
        gbc.writeMem(0xbf01, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5782);
        EXPECT(gbc.pc(), 0xbf02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf01), 0xab);
        // AB 0278
        gbc.setState(0x3c7c, 0x2722, 0x3550, 0x4833, 0xaa1e, 0xe00a, 0x0, 0x0);
        gbc.writeMem(0x3c7c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2722);
        EXPECT(gbc.pc(), 0x3c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0279
        gbc.setState(0x5cec, 0x3606, 0xe090, 0xaeb5, 0xfb7a, 0xdd15, 0x1, 0x1);
        gbc.writeMem(0x5cec, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3606);
        EXPECT(gbc.pc(), 0x5ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 027A
        gbc.setState(0x3e51, 0x3079, 0x2120, 0xd355, 0xd5cc, 0xc7eb, 0x0, 0x0);
        gbc.writeMem(0x3e51, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3079);
        EXPECT(gbc.pc(), 0x3e52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 027B
        gbc.setState(0xb792, 0x8a8e, 0xa620, 0xaa72, 0x1ccd, 0xd211, 0x0, 0x0);
        gbc.writeMem(0xb792, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8a8e);
        EXPECT(gbc.pc(), 0xb793);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb792), 0xab);
        // AB 027C
        gbc.setState(0x8a34, 0xbf23, 0xce80, 0x5d7b, 0x9965, 0xc3d0, 0x1, 0x1);
        gbc.writeMem(0x8a34, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbf23);
        EXPECT(gbc.pc(), 0x8a35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a34), 0xab);
        // AB 027D
        gbc.setState(0x97dc, 0x70a4, 0x4640, 0x4729, 0x8def, 0x410, 0x0, 0x1);
        gbc.writeMem(0x97dc, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x70a4);
        EXPECT(gbc.pc(), 0x97dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97dc), 0xab);
        // AB 027E
        gbc.setState(0x6826, 0x860a, 0x11e0, 0x4dce, 0xd160, 0xa671, 0x1, 0x0);
        gbc.writeMem(0x6826, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x860a);
        EXPECT(gbc.pc(), 0x6827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 027F
        gbc.setState(0xa1ff, 0x4e12, 0x6200, 0x1dbd, 0xa8e, 0x6ade, 0x0, 0x0);
        gbc.writeMem(0xa1ff, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4e12);
        EXPECT(gbc.pc(), 0xa200);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ff), 0xab);
        // AB 0280
        gbc.setState(0x53b, 0x9a69, 0xb4d0, 0x73b3, 0x388, 0x6d1, 0x1, 0x1);
        gbc.writeMem(0x53b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9a69);
        EXPECT(gbc.pc(), 0x53c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0281
        gbc.setState(0x85d6, 0x11d3, 0x3d80, 0x6f2e, 0xb9c4, 0xed98, 0x1, 0x1);
        gbc.writeMem(0x85d6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x11d3);
        EXPECT(gbc.pc(), 0x85d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d6), 0xab);
        // AB 0282
        gbc.setState(0xe3e2, 0x9fd5, 0xa9f0, 0x9f00, 0xce3b, 0xce5f, 0x1, 0x1);
        gbc.writeMem(0xe3e2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9fd5);
        EXPECT(gbc.pc(), 0xe3e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3e2), 0xab);
        // AB 0283
        gbc.setState(0x51f, 0x6f3b, 0x2190, 0x6aaa, 0x7cdd, 0xa37c, 0x0, 0x1);
        gbc.writeMem(0x51f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6f3b);
        EXPECT(gbc.pc(), 0x520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0284
        gbc.setState(0x84b7, 0x5792, 0x7580, 0x3c68, 0xcc2b, 0x2e63, 0x0, 0x0);
        gbc.writeMem(0x84b7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5792);
        EXPECT(gbc.pc(), 0x84b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b7), 0xab);
        // AB 0285
        gbc.setState(0xa43c, 0x375e, 0x8d40, 0xcdf4, 0x3327, 0x8941, 0x1, 0x0);
        gbc.writeMem(0xa43c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x375e);
        EXPECT(gbc.pc(), 0xa43d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa43c), 0xab);
        // AB 0286
        gbc.setState(0xe304, 0x5f24, 0xddc0, 0xf35f, 0x7e57, 0x5cd1, 0x1, 0x1);
        gbc.writeMem(0xe304, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5f24);
        EXPECT(gbc.pc(), 0xe305);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe304), 0xab);
        // AB 0287
        gbc.setState(0x5ac, 0xfea6, 0x1760, 0x95fe, 0x83a8, 0xeb04, 0x1, 0x1);
        gbc.writeMem(0x5ac, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xfea6);
        EXPECT(gbc.pc(), 0x5ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0288
        gbc.setState(0xb281, 0x8b0, 0x5be0, 0x8ff4, 0x2a20, 0x9cff, 0x0, 0x1);
        gbc.writeMem(0xb281, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8b0);
        EXPECT(gbc.pc(), 0xb282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb281), 0xab);
        // AB 0289
        gbc.setState(0xde66, 0x3ba0, 0xd220, 0x792, 0xaafc, 0xc2db, 0x0, 0x1);
        gbc.writeMem(0xde66, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3ba0);
        EXPECT(gbc.pc(), 0xde67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde66), 0xab);
        // AB 028A
        gbc.setState(0x3e51, 0x3c95, 0x1e0, 0xa454, 0x99a5, 0x2cc7, 0x1, 0x0);
        gbc.writeMem(0x3e51, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3c95);
        EXPECT(gbc.pc(), 0x3e52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 028B
        gbc.setState(0xc6f5, 0x20e2, 0xab40, 0x9d7b, 0xb255, 0x9389, 0x0, 0x0);
        gbc.writeMem(0xc6f5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x20e2);
        EXPECT(gbc.pc(), 0xc6f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6f5), 0xab);
        // AB 028C
        gbc.setState(0xeab3, 0xa40a, 0x4c50, 0x7c4e, 0xa755, 0xb3f2, 0x0, 0x0);
        gbc.writeMem(0xeab3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa40a);
        EXPECT(gbc.pc(), 0xeab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeab3), 0xab);
        // AB 028D
        gbc.setState(0x5a70, 0x2e91, 0xdc00, 0xcca0, 0x8eb6, 0xad64, 0x1, 0x0);
        gbc.writeMem(0x5a70, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2e91);
        EXPECT(gbc.pc(), 0x5a71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 028E
        gbc.setState(0x1053, 0x8ad4, 0xa650, 0x890f, 0xe622, 0x71a1, 0x1, 0x1);
        gbc.writeMem(0x1053, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8ad4);
        EXPECT(gbc.pc(), 0x1054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 028F
        gbc.setState(0x49ec, 0x39ea, 0x6c80, 0x2084, 0x7e, 0x39c8, 0x1, 0x1);
        gbc.writeMem(0x49ec, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x39ea);
        EXPECT(gbc.pc(), 0x49ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0290
        gbc.setState(0x7eaa, 0x88f7, 0x7220, 0xd0a2, 0xce6e, 0xcae4, 0x1, 0x1);
        gbc.writeMem(0x7eaa, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x88f7);
        EXPECT(gbc.pc(), 0x7eab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0291
        gbc.setState(0x7c1b, 0x13dd, 0x35d0, 0x7b7a, 0x2673, 0x8839, 0x1, 0x0);
        gbc.writeMem(0x7c1b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x13dd);
        EXPECT(gbc.pc(), 0x7c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0293
        gbc.setState(0x9536, 0x3750, 0x3af0, 0xad4d, 0xecf9, 0x599, 0x0, 0x1);
        gbc.writeMem(0x9536, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3750);
        EXPECT(gbc.pc(), 0x9537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9536), 0xab);
        // AB 0294
        gbc.setState(0xd8f2, 0xc641, 0xc8c0, 0xb5d2, 0xce52, 0xe8e2, 0x1, 0x1);
        gbc.writeMem(0xd8f2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc641);
        EXPECT(gbc.pc(), 0xd8f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8f2), 0xab);
        // AB 0295
        gbc.setState(0x681a, 0x52c0, 0x9050, 0xbf0d, 0x6114, 0xd3e5, 0x0, 0x1);
        gbc.writeMem(0x681a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x52c0);
        EXPECT(gbc.pc(), 0x681b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0296
        gbc.setState(0x35ed, 0x38bb, 0xf550, 0xdad3, 0x5dcd, 0x3347, 0x1, 0x0);
        gbc.writeMem(0x35ed, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x38bb);
        EXPECT(gbc.pc(), 0x35ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0298
        gbc.setState(0x387f, 0xa70a, 0xbeb0, 0xb66c, 0x6df9, 0x702c, 0x1, 0x0);
        gbc.writeMem(0x387f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa70a);
        EXPECT(gbc.pc(), 0x3880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0299
        gbc.setState(0x3d63, 0x429a, 0xcbd0, 0x5a98, 0x9ea0, 0x61bd, 0x1, 0x0);
        gbc.writeMem(0x3d63, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x429a);
        EXPECT(gbc.pc(), 0x3d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 029A
        gbc.setState(0xddbe, 0xbcfa, 0x4f50, 0xd53, 0xdb5a, 0xedb6, 0x1, 0x1);
        gbc.writeMem(0xddbe, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xbcfa);
        EXPECT(gbc.pc(), 0xddbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddbe), 0xab);
        // AB 029B
        gbc.setState(0x9ba8, 0x83d9, 0x4040, 0x9aff, 0xb466, 0x62d0, 0x0, 0x0);
        gbc.writeMem(0x9ba8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x83d9);
        EXPECT(gbc.pc(), 0x9ba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ba8), 0xab);
        // AB 029C
        gbc.setState(0x42e7, 0xadac, 0xdfc0, 0xdb53, 0xcceb, 0x9d89, 0x1, 0x1);
        gbc.writeMem(0x42e7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xadac);
        EXPECT(gbc.pc(), 0x42e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 029D
        gbc.setState(0xd3eb, 0x96ff, 0x47f0, 0xab78, 0x54aa, 0x4ab3, 0x0, 0x0);
        gbc.writeMem(0xd3eb, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x96ff);
        EXPECT(gbc.pc(), 0xd3ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3eb), 0xab);
        // AB 029E
        gbc.setState(0x3b4e, 0x70f1, 0xdf20, 0x75ce, 0xb3ab, 0x97da, 0x0, 0x0);
        gbc.writeMem(0x3b4e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x70f1);
        EXPECT(gbc.pc(), 0x3b4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02A0
        gbc.setState(0xc85b, 0xfb3b, 0x57b0, 0x29ac, 0xf63e, 0x8948, 0x0, 0x0);
        gbc.writeMem(0xc85b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfb3b);
        EXPECT(gbc.pc(), 0xc85c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc85b), 0xab);
        // AB 02A1
        gbc.setState(0x1392, 0xc685, 0xa5b0, 0xda42, 0x8a77, 0x2ff9, 0x0, 0x0);
        gbc.writeMem(0x1392, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc685);
        EXPECT(gbc.pc(), 0x1393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02A2
        gbc.setState(0xeb61, 0xf7c8, 0xfda0, 0x9ef9, 0xc8c9, 0x9ce6, 0x0, 0x0);
        gbc.writeMem(0xeb61, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf7c8);
        EXPECT(gbc.pc(), 0xeb62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb61), 0xab);
        // AB 02A3
        gbc.setState(0xa230, 0x5f6a, 0xfa0, 0x8577, 0x9975, 0xadaf, 0x0, 0x0);
        gbc.writeMem(0xa230, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5f6a);
        EXPECT(gbc.pc(), 0xa231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa230), 0xab);
        // AB 02A4
        gbc.setState(0xcb51, 0x8e6, 0x9350, 0x6c5, 0xf4e3, 0x78c0, 0x0, 0x0);
        gbc.writeMem(0xcb51, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8e6);
        EXPECT(gbc.pc(), 0xcb52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb51), 0xab);
        // AB 02A5
        gbc.setState(0xdf73, 0x306a, 0x70b0, 0x8e9d, 0x2a8a, 0xb702, 0x0, 0x1);
        gbc.writeMem(0xdf73, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x306a);
        EXPECT(gbc.pc(), 0xdf74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf73), 0xab);
        // AB 02A7
        gbc.setState(0xe2b8, 0xa, 0xd1c0, 0x9b28, 0xa0ec, 0x954a, 0x1, 0x1);
        gbc.writeMem(0xe2b8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa);
        EXPECT(gbc.pc(), 0xe2b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2b8), 0xab);
        // AB 02A8
        gbc.setState(0x90da, 0xff2f, 0xf320, 0x8b98, 0xdfe5, 0xcc3f, 0x0, 0x1);
        gbc.writeMem(0x90da, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xff2f);
        EXPECT(gbc.pc(), 0x90db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90da), 0xab);
        // AB 02A9
        gbc.setState(0x71e3, 0x6682, 0xa550, 0xcb9f, 0x61f, 0x5a70, 0x1, 0x1);
        gbc.writeMem(0x71e3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6682);
        EXPECT(gbc.pc(), 0x71e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02AA
        gbc.setState(0xefc4, 0xdae, 0x6510, 0x32b, 0xbf01, 0x1c75, 0x0, 0x1);
        gbc.writeMem(0xefc4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xdae);
        EXPECT(gbc.pc(), 0xefc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc4), 0xab);
        // AB 02AB
        gbc.setState(0x3dcc, 0x29e8, 0xab10, 0x9829, 0xbc95, 0x3349, 0x1, 0x0);
        gbc.writeMem(0x3dcc, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x29e8);
        EXPECT(gbc.pc(), 0x3dcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02AD
        gbc.setState(0x203b, 0xa8e, 0x3330, 0x373e, 0xe177, 0xcd8d, 0x1, 0x0);
        gbc.writeMem(0x203b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa8e);
        EXPECT(gbc.pc(), 0x203c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02AE
        gbc.setState(0xa04e, 0xd8eb, 0x3280, 0xd678, 0xbcfc, 0x95d8, 0x0, 0x0);
        gbc.writeMem(0xa04e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd8eb);
        EXPECT(gbc.pc(), 0xa04f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa04e), 0xab);
        // AB 02AF
        gbc.setState(0xe2c8, 0x1059, 0x21b0, 0xc3a9, 0x7de7, 0x2cb9, 0x1, 0x1);
        gbc.writeMem(0xe2c8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1059);
        EXPECT(gbc.pc(), 0xe2c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c8), 0xab);
        // AB 02B0
        gbc.setState(0xd649, 0x1230, 0xd490, 0xe634, 0xc70b, 0xd365, 0x0, 0x0);
        gbc.writeMem(0xd649, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1230);
        EXPECT(gbc.pc(), 0xd64a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd649), 0xab);
        // AB 02B1
        gbc.setState(0x70c7, 0x5d5c, 0x18d0, 0x7c7e, 0x95bc, 0x6f60, 0x0, 0x0);
        gbc.writeMem(0x70c7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5d5c);
        EXPECT(gbc.pc(), 0x70c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02B2
        gbc.setState(0x9f00, 0x93c8, 0x3a10, 0x1053, 0x866, 0x7838, 0x1, 0x0);
        gbc.writeMem(0x9f00, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x93c8);
        EXPECT(gbc.pc(), 0x9f01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f00), 0xab);
        // AB 02B3
        gbc.setState(0xa276, 0x84cf, 0x1280, 0x782, 0xe19b, 0xea38, 0x1, 0x1);
        gbc.writeMem(0xa276, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x84cf);
        EXPECT(gbc.pc(), 0xa277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa276), 0xab);
        // AB 02B4
        gbc.setState(0x8313, 0x3d43, 0x3a30, 0x1749, 0x4875, 0xeb84, 0x1, 0x1);
        gbc.writeMem(0x8313, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3d43);
        EXPECT(gbc.pc(), 0x8314);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8313), 0xab);
        // AB 02B5
        gbc.setState(0x4a16, 0xe30f, 0xc6a0, 0x3db8, 0xfb25, 0x5d36, 0x1, 0x1);
        gbc.writeMem(0x4a16, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe30f);
        EXPECT(gbc.pc(), 0x4a17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02B7
        gbc.setState(0x3446, 0x5e0a, 0x90d0, 0x83ee, 0x9bf9, 0xd1df, 0x0, 0x0);
        gbc.writeMem(0x3446, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5e0a);
        EXPECT(gbc.pc(), 0x3447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02B8
        gbc.setState(0x2d52, 0xfe7e, 0xfd50, 0x357d, 0x94d3, 0xb405, 0x1, 0x1);
        gbc.writeMem(0x2d52, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xfe7e);
        EXPECT(gbc.pc(), 0x2d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02B9
        gbc.setState(0x5fca, 0xba45, 0x6fb0, 0xf7ed, 0xbb6e, 0xe3ee, 0x1, 0x0);
        gbc.writeMem(0x5fca, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xba45);
        EXPECT(gbc.pc(), 0x5fcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02BA
        gbc.setState(0xd83e, 0xc90a, 0x2190, 0xdb5f, 0x94b6, 0x5eed, 0x1, 0x1);
        gbc.writeMem(0xd83e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc90a);
        EXPECT(gbc.pc(), 0xd83f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd83e), 0xab);
        // AB 02BB
        gbc.setState(0x52e9, 0x8d3a, 0xa200, 0xd3b9, 0x88b8, 0x5bc9, 0x1, 0x1);
        gbc.writeMem(0x52e9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8d3a);
        EXPECT(gbc.pc(), 0x52ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02BC
        gbc.setState(0x5012, 0xae1c, 0xb940, 0x6635, 0xfabe, 0xad9, 0x0, 0x0);
        gbc.writeMem(0x5012, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xae1c);
        EXPECT(gbc.pc(), 0x5013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02BD
        gbc.setState(0xb9be, 0x96d, 0x45a0, 0xef0d, 0xb99f, 0x379d, 0x0, 0x0);
        gbc.writeMem(0xb9be, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x96d);
        EXPECT(gbc.pc(), 0xb9bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9be), 0xab);
        // AB 02BE
        gbc.setState(0x5078, 0x73cd, 0x2340, 0x8c9f, 0xc80d, 0x631c, 0x1, 0x0);
        gbc.writeMem(0x5078, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x73cd);
        EXPECT(gbc.pc(), 0x5079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02BF
        gbc.setState(0xbeec, 0x8a71, 0x4200, 0xbb0d, 0x2e89, 0x9c0, 0x0, 0x1);
        gbc.writeMem(0xbeec, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8a71);
        EXPECT(gbc.pc(), 0xbeed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeec), 0xab);
        // AB 02C0
        gbc.setState(0xdbb9, 0xf6ee, 0x5010, 0x63e1, 0x5b5e, 0x97d5, 0x1, 0x1);
        gbc.writeMem(0xdbb9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf6ee);
        EXPECT(gbc.pc(), 0xdbba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbb9), 0xab);
        // AB 02C1
        gbc.setState(0x1951, 0x8170, 0xfbe0, 0xbcde, 0xa68e, 0x54ef, 0x0, 0x1);
        gbc.writeMem(0x1951, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8170);
        EXPECT(gbc.pc(), 0x1952);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02C2
        gbc.setState(0x7a01, 0xf1db, 0xa5d0, 0xefb3, 0xdd77, 0xa7f0, 0x0, 0x0);
        gbc.writeMem(0x7a01, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf1db);
        EXPECT(gbc.pc(), 0x7a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02C3
        gbc.setState(0x10d2, 0xeaff, 0x1040, 0x5867, 0xd988, 0xd180, 0x1, 0x0);
        gbc.writeMem(0x10d2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xeaff);
        EXPECT(gbc.pc(), 0x10d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02C4
        gbc.setState(0x23e4, 0xa8be, 0xf110, 0x958d, 0x8df7, 0xe648, 0x1, 0x0);
        gbc.writeMem(0x23e4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa8be);
        EXPECT(gbc.pc(), 0x23e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02C5
        gbc.setState(0x2694, 0x7ffa, 0xc250, 0xb80b, 0x5762, 0xaca1, 0x1, 0x0);
        gbc.writeMem(0x2694, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7ffa);
        EXPECT(gbc.pc(), 0x2695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02C6
        gbc.setState(0x348e, 0xf160, 0x8090, 0x8d08, 0xf13d, 0x66e1, 0x0, 0x0);
        gbc.writeMem(0x348e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf160);
        EXPECT(gbc.pc(), 0x348f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02C7
        gbc.setState(0x3760, 0x5bad, 0x5610, 0xaf58, 0xa264, 0x9b28, 0x1, 0x0);
        gbc.writeMem(0x3760, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5bad);
        EXPECT(gbc.pc(), 0x3761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02C8
        gbc.setState(0xb0ee, 0xc400, 0xa30, 0x55b2, 0x82db, 0xb001, 0x0, 0x0);
        gbc.writeMem(0xb0ee, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc400);
        EXPECT(gbc.pc(), 0xb0ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ee), 0xab);
        // AB 02C9
        gbc.setState(0x7975, 0xeaa7, 0xa090, 0x81a4, 0x2f2b, 0x8004, 0x0, 0x1);
        gbc.writeMem(0x7975, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xeaa7);
        EXPECT(gbc.pc(), 0x7976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02CA
        gbc.setState(0x621e, 0x7d19, 0xe190, 0x7b51, 0xcbab, 0xe50a, 0x1, 0x0);
        gbc.writeMem(0x621e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7d19);
        EXPECT(gbc.pc(), 0x621f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02CB
        gbc.setState(0x2126, 0x8226, 0x5e60, 0xb0e9, 0x7a1e, 0x9fd5, 0x0, 0x1);
        gbc.writeMem(0x2126, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8226);
        EXPECT(gbc.pc(), 0x2127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02CD
        gbc.setState(0x5a8e, 0x3665, 0x58d0, 0x1ee9, 0x4341, 0x56be, 0x1, 0x1);
        gbc.writeMem(0x5a8e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3665);
        EXPECT(gbc.pc(), 0x5a8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02CE
        gbc.setState(0x2ee4, 0x7809, 0xe310, 0x4a35, 0x2c75, 0x22f4, 0x1, 0x1);
        gbc.writeMem(0x2ee4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7809);
        EXPECT(gbc.pc(), 0x2ee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02CF
        gbc.setState(0x34bb, 0xd277, 0xb2b0, 0x25f9, 0xd9ab, 0x4472, 0x1, 0x0);
        gbc.writeMem(0x34bb, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd277);
        EXPECT(gbc.pc(), 0x34bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02D0
        gbc.setState(0x709e, 0x5734, 0x2630, 0x1bd, 0xddde, 0x5e6e, 0x0, 0x0);
        gbc.writeMem(0x709e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5734);
        EXPECT(gbc.pc(), 0x709f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02D1
        gbc.setState(0x11a6, 0x1808, 0xaff0, 0xc6c6, 0x7fdf, 0x171e, 0x1, 0x0);
        gbc.writeMem(0x11a6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1808);
        EXPECT(gbc.pc(), 0x11a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02D2
        gbc.setState(0x138d, 0xf4eb, 0x3af0, 0x4dcb, 0x66f2, 0x26ac, 0x1, 0x1);
        gbc.writeMem(0x138d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf4eb);
        EXPECT(gbc.pc(), 0x138e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02D3
        gbc.setState(0x2f2f, 0x953f, 0xf0a0, 0x259c, 0xac1d, 0x569b, 0x0, 0x0);
        gbc.writeMem(0x2f2f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x953f);
        EXPECT(gbc.pc(), 0x2f30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02D4
        gbc.setState(0xc236, 0x1615, 0x7560, 0xcfe1, 0x65e4, 0xb448, 0x1, 0x1);
        gbc.writeMem(0xc236, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x1615);
        EXPECT(gbc.pc(), 0xc237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc236), 0xab);
        // AB 02D6
        gbc.setState(0x10ff, 0x29f5, 0xc820, 0x4593, 0xfb40, 0x3092, 0x1, 0x1);
        gbc.writeMem(0x10ff, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x29f5);
        EXPECT(gbc.pc(), 0x1100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02D7
        gbc.setState(0x5844, 0x5fd8, 0xb4f0, 0x8395, 0x6ab9, 0x7335, 0x0, 0x0);
        gbc.writeMem(0x5844, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5fd8);
        EXPECT(gbc.pc(), 0x5845);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02D8
        gbc.setState(0x763b, 0x75b0, 0x3510, 0x13f6, 0x9c69, 0xd970, 0x1, 0x1);
        gbc.writeMem(0x763b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x75b0);
        EXPECT(gbc.pc(), 0x763c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02DA
        gbc.setState(0xdd60, 0x600d, 0x1170, 0xd620, 0xdc0e, 0xe8b2, 0x0, 0x1);
        gbc.writeMem(0xdd60, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x600d);
        EXPECT(gbc.pc(), 0xdd61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd60), 0xab);
        // AB 02DB
        gbc.setState(0x919a, 0xaa28, 0x2e40, 0x8358, 0x4680, 0x1bbb, 0x0, 0x0);
        gbc.writeMem(0x919a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xaa28);
        EXPECT(gbc.pc(), 0x919b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x919a), 0xab);
        // AB 02DC
        gbc.setState(0x9251, 0xdc4, 0x5e00, 0xf173, 0x6145, 0x9062, 0x0, 0x0);
        gbc.writeMem(0x9251, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xdc4);
        EXPECT(gbc.pc(), 0x9252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9251), 0xab);
        // AB 02DD
        gbc.setState(0x2597, 0x2485, 0x3950, 0x9e49, 0x99bc, 0x1dd4, 0x0, 0x1);
        gbc.writeMem(0x2597, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2485);
        EXPECT(gbc.pc(), 0x2598);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02DE
        gbc.setState(0xcb1a, 0x870a, 0xef60, 0xf2f3, 0x1ee1, 0xdffc, 0x1, 0x0);
        gbc.writeMem(0xcb1a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x870a);
        EXPECT(gbc.pc(), 0xcb1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb1a), 0xab);
        // AB 02DF
        gbc.setState(0xa3b, 0xf552, 0xa410, 0x1def, 0x1281, 0x964a, 0x1, 0x0);
        gbc.writeMem(0xa3b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf552);
        EXPECT(gbc.pc(), 0xa3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02E0
        gbc.setState(0x9669, 0x8084, 0xeae0, 0xab72, 0xdbc2, 0xa5f2, 0x0, 0x0);
        gbc.writeMem(0x9669, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8084);
        EXPECT(gbc.pc(), 0x966a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9669), 0xab);
        // AB 02E1
        gbc.setState(0xdeee, 0x4e46, 0xd7e0, 0x795c, 0x4dd2, 0xa19, 0x1, 0x0);
        gbc.writeMem(0xdeee, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4e46);
        EXPECT(gbc.pc(), 0xdeef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeee), 0xab);
        // AB 02E2
        gbc.setState(0x4c58, 0x3f1e, 0x2e00, 0x38a7, 0x2693, 0xf68c, 0x1, 0x1);
        gbc.writeMem(0x4c58, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3f1e);
        EXPECT(gbc.pc(), 0x4c59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02E3
        gbc.setState(0x64e, 0xeab9, 0xc3a0, 0x7350, 0x9ef, 0xb9d6, 0x1, 0x1);
        gbc.writeMem(0x64e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xeab9);
        EXPECT(gbc.pc(), 0x64f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02E4
        gbc.setState(0xe96c, 0x4588, 0xf50, 0xbfd1, 0xa0ea, 0x6dca, 0x1, 0x1);
        gbc.writeMem(0xe96c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4588);
        EXPECT(gbc.pc(), 0xe96d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe96c), 0xab);
        // AB 02E5
        gbc.setState(0x4a14, 0x1e9, 0x2be0, 0x945c, 0x901e, 0x6126, 0x1, 0x1);
        gbc.writeMem(0x4a14, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1e9);
        EXPECT(gbc.pc(), 0x4a15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02E6
        gbc.setState(0x358d, 0x3284, 0xddb0, 0x1fd7, 0x2362, 0xb45b, 0x0, 0x0);
        gbc.writeMem(0x358d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3284);
        EXPECT(gbc.pc(), 0x358e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02E7
        gbc.setState(0x7ee8, 0x9480, 0xcfa0, 0xcef3, 0x31c, 0x6ce4, 0x1, 0x0);
        gbc.writeMem(0x7ee8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9480);
        EXPECT(gbc.pc(), 0x7ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02E8
        gbc.setState(0x33a, 0x3633, 0x1a60, 0x872, 0xb6c1, 0xe9e0, 0x0, 0x1);
        gbc.writeMem(0x33a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3633);
        EXPECT(gbc.pc(), 0x33b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02E9
        gbc.setState(0xd178, 0xbf13, 0xebe0, 0x39dc, 0x95fe, 0xac6a, 0x0, 0x1);
        gbc.writeMem(0xd178, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xbf13);
        EXPECT(gbc.pc(), 0xd179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd178), 0xab);
        // AB 02EA
        gbc.setState(0x9411, 0x94bc, 0x45e0, 0x63e6, 0x8f5f, 0xcb9f, 0x1, 0x0);
        gbc.writeMem(0x9411, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x94bc);
        EXPECT(gbc.pc(), 0x9412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9411), 0xab);
        // AB 02EB
        gbc.setState(0x2690, 0xfe76, 0xc3a0, 0xf407, 0x487a, 0xe49e, 0x0, 0x0);
        gbc.writeMem(0x2690, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfe76);
        EXPECT(gbc.pc(), 0x2691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02EC
        gbc.setState(0xeb1e, 0x4a5b, 0xb270, 0x63a1, 0xe037, 0x8858, 0x0, 0x0);
        gbc.writeMem(0xeb1e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4a5b);
        EXPECT(gbc.pc(), 0xeb1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb1e), 0xab);
        // AB 02ED
        gbc.setState(0x18a, 0x3607, 0x470, 0xb389, 0x70ba, 0xa785, 0x1, 0x1);
        gbc.writeMem(0x18a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3607);
        EXPECT(gbc.pc(), 0x18b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02EE
        gbc.setState(0x5c8a, 0x2ba6, 0x9a00, 0x396c, 0xdfd1, 0xd9d, 0x0, 0x1);
        gbc.writeMem(0x5c8a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2ba6);
        EXPECT(gbc.pc(), 0x5c8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02EF
        gbc.setState(0x8f74, 0xa00, 0x95d0, 0xf5ad, 0x5836, 0x4637, 0x0, 0x1);
        gbc.writeMem(0x8f74, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa00);
        EXPECT(gbc.pc(), 0x8f75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f74), 0xab);
        // AB 02F0
        gbc.setState(0x7fe9, 0xaf4b, 0x5e50, 0x97d4, 0xa0df, 0x238f, 0x1, 0x1);
        gbc.writeMem(0x7fe9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xaf4b);
        EXPECT(gbc.pc(), 0x7fea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02F1
        gbc.setState(0x7c77, 0x63d7, 0x5ad0, 0xcdf2, 0x3e38, 0xf380, 0x1, 0x1);
        gbc.writeMem(0x7c77, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x63d7);
        EXPECT(gbc.pc(), 0x7c78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02F2
        gbc.setState(0x66ae, 0x6ecc, 0x6f90, 0x1417, 0x62f, 0x6b9, 0x1, 0x0);
        gbc.writeMem(0x66ae, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6ecc);
        EXPECT(gbc.pc(), 0x66af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02F3
        gbc.setState(0xd11b, 0xcc8d, 0x2b60, 0x466d, 0x95a8, 0xd468, 0x0, 0x0);
        gbc.writeMem(0xd11b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xcc8d);
        EXPECT(gbc.pc(), 0xd11c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd11b), 0xab);
        // AB 02F4
        gbc.setState(0xba18, 0x687b, 0x3c70, 0x4515, 0xea8a, 0xdb42, 0x0, 0x0);
        gbc.writeMem(0xba18, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x687b);
        EXPECT(gbc.pc(), 0xba19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba18), 0xab);
        // AB 02F5
        gbc.setState(0x1f14, 0x9fec, 0xd100, 0xcaa2, 0x4b08, 0xb8c8, 0x1, 0x0);
        gbc.writeMem(0x1f14, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9fec);
        EXPECT(gbc.pc(), 0x1f15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02F6
        gbc.setState(0x3805, 0xd19, 0xeb00, 0x3df9, 0x9426, 0x3b72, 0x1, 0x0);
        gbc.writeMem(0x3805, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd19);
        EXPECT(gbc.pc(), 0x3806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02F7
        gbc.setState(0x87b7, 0x4778, 0x6970, 0xa770, 0x569b, 0x5513, 0x0, 0x0);
        gbc.writeMem(0x87b7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4778);
        EXPECT(gbc.pc(), 0x87b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87b7), 0xab);
        // AB 02F8
        gbc.setState(0xbc3a, 0xb07f, 0x10a0, 0x801b, 0xae34, 0xa1d6, 0x0, 0x1);
        gbc.writeMem(0xbc3a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb07f);
        EXPECT(gbc.pc(), 0xbc3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc3a), 0xab);
        // AB 02F9
        gbc.setState(0xb49d, 0x6d5a, 0xad00, 0xe971, 0x45df, 0x55ae, 0x0, 0x1);
        gbc.writeMem(0xb49d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6d5a);
        EXPECT(gbc.pc(), 0xb49e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb49d), 0xab);
        // AB 02FA
        gbc.setState(0x1332, 0xa254, 0xe290, 0xcf8e, 0x7d1e, 0xb830, 0x0, 0x0);
        gbc.writeMem(0x1332, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa254);
        EXPECT(gbc.pc(), 0x1333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02FC
        gbc.setState(0x1aa3, 0xa67b, 0xdf30, 0x90dc, 0xfc, 0x6c16, 0x1, 0x1);
        gbc.writeMem(0x1aa3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa67b);
        EXPECT(gbc.pc(), 0x1aa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 02FD
        gbc.setState(0xe9ab, 0xa1a5, 0x41f0, 0x63cc, 0xe883, 0xfa27, 0x1, 0x1);
        gbc.writeMem(0xe9ab, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa1a5);
        EXPECT(gbc.pc(), 0xe9ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ab), 0xab);
        // AB 02FE
        gbc.setState(0xd3f5, 0x7d78, 0xcfd0, 0x304a, 0x5326, 0xdc30, 0x1, 0x1);
        gbc.writeMem(0xd3f5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7d78);
        EXPECT(gbc.pc(), 0xd3f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3f5), 0xab);
        // AB 02FF
        gbc.setState(0xee73, 0x7a7b, 0xe360, 0x972a, 0xbb0b, 0x7648, 0x1, 0x1);
        gbc.writeMem(0xee73, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7a7b);
        EXPECT(gbc.pc(), 0xee74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee73), 0xab);
        // AB 0300
        gbc.setState(0x366d, 0x6f0a, 0xcda0, 0x8dcf, 0x62c4, 0x16d2, 0x0, 0x1);
        gbc.writeMem(0x366d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6f0a);
        EXPECT(gbc.pc(), 0x366e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0301
        gbc.setState(0x32bc, 0x47c4, 0x6230, 0xa69b, 0x11a3, 0x5c42, 0x1, 0x1);
        gbc.writeMem(0x32bc, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x47c4);
        EXPECT(gbc.pc(), 0x32bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0302
        gbc.setState(0x94d9, 0x131b, 0xebf0, 0xcd4, 0x9e42, 0xbc7a, 0x1, 0x0);
        gbc.writeMem(0x94d9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x131b);
        EXPECT(gbc.pc(), 0x94da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d9), 0xab);
        // AB 0303
        gbc.setState(0x52a, 0xf617, 0xd590, 0x757b, 0x3874, 0x7653, 0x0, 0x1);
        gbc.writeMem(0x52a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf617);
        EXPECT(gbc.pc(), 0x52b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0304
        gbc.setState(0x4790, 0x6d5a, 0x6a0, 0x1d77, 0x5f52, 0x930a, 0x1, 0x1);
        gbc.writeMem(0x4790, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6d5a);
        EXPECT(gbc.pc(), 0x4791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0305
        gbc.setState(0xb1ab, 0xc76a, 0x74d0, 0x1306, 0x3be7, 0x2416, 0x1, 0x1);
        gbc.writeMem(0xb1ab, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc76a);
        EXPECT(gbc.pc(), 0xb1ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ab), 0xab);
        // AB 0306
        gbc.setState(0xdc30, 0x8449, 0x68e0, 0xc732, 0x2c77, 0x424e, 0x1, 0x0);
        gbc.writeMem(0xdc30, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8449);
        EXPECT(gbc.pc(), 0xdc31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc30), 0xab);
        // AB 0307
        gbc.setState(0xb210, 0xaab2, 0x7e00, 0x45d, 0xdbf6, 0xd5b4, 0x0, 0x1);
        gbc.writeMem(0xb210, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xaab2);
        EXPECT(gbc.pc(), 0xb211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb210), 0xab);
        // AB 0309
        gbc.setState(0xc734, 0x101b, 0x54a0, 0xd024, 0x66f0, 0x3155, 0x0, 0x0);
        gbc.writeMem(0xc734, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x101b);
        EXPECT(gbc.pc(), 0xc735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc734), 0xab);
        // AB 030A
        gbc.setState(0x7f81, 0xbedb, 0xacd0, 0xada7, 0xda07, 0x9897, 0x0, 0x1);
        gbc.writeMem(0x7f81, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xbedb);
        EXPECT(gbc.pc(), 0x7f82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 030B
        gbc.setState(0x8f00, 0xcbde, 0x87f0, 0x909a, 0xf4c9, 0xd369, 0x1, 0x1);
        gbc.writeMem(0x8f00, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcbde);
        EXPECT(gbc.pc(), 0x8f01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f00), 0xab);
        // AB 030C
        gbc.setState(0x2364, 0xa843, 0x8c40, 0x53e9, 0xfdac, 0x757d, 0x1, 0x1);
        gbc.writeMem(0x2364, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa843);
        EXPECT(gbc.pc(), 0x2365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 030D
        gbc.setState(0x15c0, 0x8769, 0x9d0, 0xe916, 0xf287, 0x75fc, 0x0, 0x0);
        gbc.writeMem(0x15c0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8769);
        EXPECT(gbc.pc(), 0x15c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 030E
        gbc.setState(0x67fe, 0xf96b, 0x8dc0, 0x9e48, 0xdb35, 0x9bed, 0x1, 0x0);
        gbc.writeMem(0x67fe, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf96b);
        EXPECT(gbc.pc(), 0x67ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 030F
        gbc.setState(0xc511, 0xdd01, 0x8f10, 0x2d60, 0x6e97, 0x420d, 0x1, 0x1);
        gbc.writeMem(0xc511, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xdd01);
        EXPECT(gbc.pc(), 0xc512);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc511), 0xab);
        // AB 0310
        gbc.setState(0xd181, 0x337e, 0x42f0, 0x8712, 0xcf49, 0x7051, 0x1, 0x0);
        gbc.writeMem(0xd181, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x337e);
        EXPECT(gbc.pc(), 0xd182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd181), 0xab);
        // AB 0311
        gbc.setState(0xd085, 0xc94, 0xb1d0, 0x9b2e, 0x86c3, 0x15c9, 0x1, 0x1);
        gbc.writeMem(0xd085, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc94);
        EXPECT(gbc.pc(), 0xd086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd085), 0xab);
        // AB 0312
        gbc.setState(0x679b, 0x43aa, 0xb3e0, 0x1681, 0x5f9e, 0xba9d, 0x1, 0x0);
        gbc.writeMem(0x679b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x43aa);
        EXPECT(gbc.pc(), 0x679c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0313
        gbc.setState(0x3a80, 0x8f82, 0xc3a0, 0x9eed, 0x5b2d, 0x64f0, 0x0, 0x0);
        gbc.writeMem(0x3a80, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8f82);
        EXPECT(gbc.pc(), 0x3a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0314
        gbc.setState(0xd93a, 0x2408, 0x29d0, 0x319a, 0xdca6, 0x39a, 0x1, 0x1);
        gbc.writeMem(0xd93a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2408);
        EXPECT(gbc.pc(), 0xd93b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd93a), 0xab);
        // AB 0315
        gbc.setState(0xcf98, 0x5530, 0xf110, 0xa96e, 0x9763, 0xa0cf, 0x1, 0x0);
        gbc.writeMem(0xcf98, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5530);
        EXPECT(gbc.pc(), 0xcf99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf98), 0xab);
        // AB 0316
        gbc.setState(0x6e2a, 0x61fe, 0x5660, 0xf8fb, 0xee06, 0x58b3, 0x1, 0x0);
        gbc.writeMem(0x6e2a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x61fe);
        EXPECT(gbc.pc(), 0x6e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0317
        gbc.setState(0x6284, 0xc2cc, 0x8d0, 0x1386, 0xc180, 0x463d, 0x0, 0x1);
        gbc.writeMem(0x6284, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc2cc);
        EXPECT(gbc.pc(), 0x6285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0318
        gbc.setState(0xce0e, 0xa7ae, 0x7d70, 0x521a, 0xee9c, 0x6b8d, 0x1, 0x0);
        gbc.writeMem(0xce0e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa7ae);
        EXPECT(gbc.pc(), 0xce0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce0e), 0xab);
        // AB 0319
        gbc.setState(0x93d, 0x41ae, 0x6080, 0xc19b, 0xa628, 0x71b0, 0x0, 0x0);
        gbc.writeMem(0x93d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x41ae);
        EXPECT(gbc.pc(), 0x93e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 031A
        gbc.setState(0xc0f7, 0x1971, 0xc9d0, 0x759c, 0xbbc9, 0xf964, 0x0, 0x0);
        gbc.writeMem(0xc0f7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1971);
        EXPECT(gbc.pc(), 0xc0f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0f7), 0xab);
        // AB 031B
        gbc.setState(0x874e, 0x577, 0x2c00, 0x536a, 0xe741, 0x16ef, 0x1, 0x0);
        gbc.writeMem(0x874e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x577);
        EXPECT(gbc.pc(), 0x874f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x874e), 0xab);
        // AB 031D
        gbc.setState(0xbf5, 0xb21e, 0xe120, 0xfab9, 0x67b0, 0xe976, 0x0, 0x0);
        gbc.writeMem(0xbf5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb21e);
        EXPECT(gbc.pc(), 0xbf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 031E
        gbc.setState(0x8fb9, 0xbf26, 0x3940, 0x2b4, 0x6c9a, 0xa705, 0x0, 0x0);
        gbc.writeMem(0x8fb9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbf26);
        EXPECT(gbc.pc(), 0x8fba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb9), 0xab);
        // AB 031F
        gbc.setState(0xb101, 0x21f, 0x76b0, 0x129c, 0xfb41, 0x66c, 0x0, 0x1);
        gbc.writeMem(0xb101, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x21f);
        EXPECT(gbc.pc(), 0xb102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb101), 0xab);
        // AB 0320
        gbc.setState(0xc1a4, 0xeb24, 0xb270, 0x8838, 0x976a, 0x6540, 0x1, 0x1);
        gbc.writeMem(0xc1a4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xeb24);
        EXPECT(gbc.pc(), 0xc1a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1a4), 0xab);
        // AB 0321
        gbc.setState(0x29e2, 0x4f3a, 0x8d20, 0xf5d5, 0x3706, 0xe362, 0x0, 0x1);
        gbc.writeMem(0x29e2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4f3a);
        EXPECT(gbc.pc(), 0x29e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0322
        gbc.setState(0x3427, 0x472d, 0x15b0, 0xa099, 0xf0d7, 0x7111, 0x0, 0x0);
        gbc.writeMem(0x3427, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x472d);
        EXPECT(gbc.pc(), 0x3428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0323
        gbc.setState(0xe49a, 0xc940, 0xa7a0, 0x97b9, 0x6708, 0x85f8, 0x0, 0x0);
        gbc.writeMem(0xe49a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc940);
        EXPECT(gbc.pc(), 0xe49b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe49a), 0xab);
        // AB 0324
        gbc.setState(0x3f3d, 0xc748, 0x76e0, 0x19ed, 0x5be6, 0x1bdc, 0x0, 0x1);
        gbc.writeMem(0x3f3d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc748);
        EXPECT(gbc.pc(), 0x3f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0325
        gbc.setState(0x9dbe, 0x7565, 0xee70, 0x8c50, 0x4a56, 0x254b, 0x1, 0x1);
        gbc.writeMem(0x9dbe, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7565);
        EXPECT(gbc.pc(), 0x9dbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dbe), 0xab);
        // AB 0326
        gbc.setState(0xcc43, 0xe705, 0xa680, 0xef89, 0x6ee7, 0xda08, 0x0, 0x1);
        gbc.writeMem(0xcc43, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe705);
        EXPECT(gbc.pc(), 0xcc44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc43), 0xab);
        // AB 0327
        gbc.setState(0x8f0c, 0xdebc, 0x9cb0, 0xef5b, 0xb490, 0x1d65, 0x0, 0x1);
        gbc.writeMem(0x8f0c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xdebc);
        EXPECT(gbc.pc(), 0x8f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f0c), 0xab);
        // AB 0328
        gbc.setState(0x97b9, 0x7fd, 0x6c70, 0x570f, 0x5bf7, 0xb8c3, 0x1, 0x0);
        gbc.writeMem(0x97b9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7fd);
        EXPECT(gbc.pc(), 0x97ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b9), 0xab);
        // AB 0329
        gbc.setState(0xc94e, 0xa22, 0xeac0, 0x5ec1, 0x982d, 0xc416, 0x1, 0x0);
        gbc.writeMem(0xc94e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa22);
        EXPECT(gbc.pc(), 0xc94f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc94e), 0xab);
        // AB 032A
        gbc.setState(0x2800, 0x740c, 0xd590, 0xd99f, 0xc1bd, 0x3fbe, 0x1, 0x0);
        gbc.writeMem(0x2800, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x740c);
        EXPECT(gbc.pc(), 0x2801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 032B
        gbc.setState(0x7129, 0x869e, 0xf790, 0x367c, 0x7e4a, 0x90b9, 0x1, 0x0);
        gbc.writeMem(0x7129, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x869e);
        EXPECT(gbc.pc(), 0x712a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 032C
        gbc.setState(0x3008, 0xdb86, 0xac00, 0xeb8d, 0xf22, 0x5fc1, 0x0, 0x0);
        gbc.writeMem(0x3008, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xdb86);
        EXPECT(gbc.pc(), 0x3009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 032D
        gbc.setState(0xa5f1, 0x4771, 0xcf00, 0x6ea3, 0x8ec, 0x6e4a, 0x1, 0x1);
        gbc.writeMem(0xa5f1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4771);
        EXPECT(gbc.pc(), 0xa5f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f1), 0xab);
        // AB 032E
        gbc.setState(0xecbf, 0xf8b7, 0x23c0, 0xa04e, 0x97e4, 0x6320, 0x1, 0x0);
        gbc.writeMem(0xecbf, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf8b7);
        EXPECT(gbc.pc(), 0xecc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecbf), 0xab);
        // AB 032F
        gbc.setState(0x5213, 0x53a9, 0x55a0, 0x90bb, 0xb59f, 0x20f4, 0x1, 0x1);
        gbc.writeMem(0x5213, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x53a9);
        EXPECT(gbc.pc(), 0x5214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0331
        gbc.setState(0x6d21, 0x961c, 0xd680, 0xff06, 0xa0ec, 0x7227, 0x1, 0x0);
        gbc.writeMem(0x6d21, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x961c);
        EXPECT(gbc.pc(), 0x6d22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0332
        gbc.setState(0xc63a, 0xa48f, 0x91a0, 0x109f, 0x3e63, 0x1e0, 0x0, 0x1);
        gbc.writeMem(0xc63a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa48f);
        EXPECT(gbc.pc(), 0xc63b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc63a), 0xab);
        // AB 0333
        gbc.setState(0xe40b, 0x7381, 0x9530, 0x4e63, 0x169d, 0x5cb3, 0x0, 0x1);
        gbc.writeMem(0xe40b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7381);
        EXPECT(gbc.pc(), 0xe40c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe40b), 0xab);
        // AB 0334
        gbc.setState(0xc961, 0x7a6, 0x3300, 0x82c0, 0x3ad7, 0xd458, 0x0, 0x1);
        gbc.writeMem(0xc961, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7a6);
        EXPECT(gbc.pc(), 0xc962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc961), 0xab);
        // AB 0335
        gbc.setState(0xa809, 0x9182, 0xc490, 0x50de, 0x8c8c, 0xba31, 0x0, 0x0);
        gbc.writeMem(0xa809, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9182);
        EXPECT(gbc.pc(), 0xa80a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa809), 0xab);
        // AB 0336
        gbc.setState(0x2be5, 0x229b, 0x7770, 0x6123, 0xfad4, 0xb02a, 0x0, 0x0);
        gbc.writeMem(0x2be5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x229b);
        EXPECT(gbc.pc(), 0x2be6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0337
        gbc.setState(0x6e56, 0xedaf, 0xdfe0, 0xa45c, 0xa90c, 0x8719, 0x0, 0x0);
        gbc.writeMem(0x6e56, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xedaf);
        EXPECT(gbc.pc(), 0x6e57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0338
        gbc.setState(0x94d4, 0x27d7, 0xa00, 0xbe80, 0xdd5, 0x1ae8, 0x0, 0x1);
        gbc.writeMem(0x94d4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x27d7);
        EXPECT(gbc.pc(), 0x94d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d4), 0xab);
        // AB 0339
        gbc.setState(0xa120, 0x62cb, 0x5430, 0x3866, 0x2aa6, 0x6681, 0x1, 0x0);
        gbc.writeMem(0xa120, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x62cb);
        EXPECT(gbc.pc(), 0xa121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa120), 0xab);
        // AB 033A
        gbc.setState(0x11aa, 0x600f, 0x780, 0xe25e, 0x2f6e, 0x40ac, 0x1, 0x1);
        gbc.writeMem(0x11aa, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x600f);
        EXPECT(gbc.pc(), 0x11ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 033B
        gbc.setState(0xe15, 0x8f8c, 0x1d30, 0x5dbc, 0x3581, 0xeb4c, 0x0, 0x0);
        gbc.writeMem(0xe15, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8f8c);
        EXPECT(gbc.pc(), 0xe16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 033C
        gbc.setState(0xc8b8, 0x499b, 0x4270, 0x25ad, 0x5a50, 0x76b5, 0x1, 0x0);
        gbc.writeMem(0xc8b8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x499b);
        EXPECT(gbc.pc(), 0xc8b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b8), 0xab);
        // AB 033D
        gbc.setState(0xe0cb, 0xb724, 0x5200, 0x2fe6, 0xf048, 0xf692, 0x0, 0x0);
        gbc.writeMem(0xe0cb, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb724);
        EXPECT(gbc.pc(), 0xe0cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0cb), 0xab);
        // AB 033E
        gbc.setState(0x2306, 0x921d, 0xdbe0, 0x4ba0, 0x94ee, 0xc616, 0x1, 0x1);
        gbc.writeMem(0x2306, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x921d);
        EXPECT(gbc.pc(), 0x2307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 033F
        gbc.setState(0x5b42, 0xb79d, 0xf2f0, 0x4c7a, 0x383d, 0x2549, 0x1, 0x0);
        gbc.writeMem(0x5b42, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb79d);
        EXPECT(gbc.pc(), 0x5b43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0341
        gbc.setState(0x753d, 0xe616, 0xf220, 0x2f71, 0x291e, 0x96ee, 0x1, 0x0);
        gbc.writeMem(0x753d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe616);
        EXPECT(gbc.pc(), 0x753e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0342
        gbc.setState(0x2c7, 0xe857, 0xa6a0, 0x6a78, 0xfaeb, 0x4d80, 0x1, 0x1);
        gbc.writeMem(0x2c7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe857);
        EXPECT(gbc.pc(), 0x2c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0343
        gbc.setState(0x8465, 0x74a0, 0xac80, 0x1d93, 0xd509, 0x50df, 0x0, 0x0);
        gbc.writeMem(0x8465, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x74a0);
        EXPECT(gbc.pc(), 0x8466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8465), 0xab);
        // AB 0344
        gbc.setState(0x3621, 0x52fb, 0x5650, 0xbbed, 0x5dd4, 0x93f9, 0x1, 0x0);
        gbc.writeMem(0x3621, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x52fb);
        EXPECT(gbc.pc(), 0x3622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0345
        gbc.setState(0x7995, 0x5bed, 0x9500, 0xf5e9, 0x3a6, 0xfabe, 0x0, 0x1);
        gbc.writeMem(0x7995, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5bed);
        EXPECT(gbc.pc(), 0x7996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0346
        gbc.setState(0x65b1, 0x3b26, 0xe3c0, 0x9764, 0x81b0, 0xcf1f, 0x0, 0x0);
        gbc.writeMem(0x65b1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3b26);
        EXPECT(gbc.pc(), 0x65b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0347
        gbc.setState(0x3e78, 0x4e15, 0xaaa0, 0x95, 0x466e, 0xd6ed, 0x0, 0x0);
        gbc.writeMem(0x3e78, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4e15);
        EXPECT(gbc.pc(), 0x3e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0348
        gbc.setState(0x9a4a, 0x6894, 0x5910, 0xce0b, 0x3ca5, 0xf70, 0x0, 0x1);
        gbc.writeMem(0x9a4a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6894);
        EXPECT(gbc.pc(), 0x9a4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a4a), 0xab);
        // AB 0349
        gbc.setState(0x6dea, 0xdf8d, 0xcb90, 0x646, 0xcf4d, 0x387f, 0x0, 0x0);
        gbc.writeMem(0x6dea, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xdf8d);
        EXPECT(gbc.pc(), 0x6deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 034A
        gbc.setState(0xd9a1, 0xd936, 0x5060, 0xfdf7, 0x324f, 0x55a5, 0x1, 0x1);
        gbc.writeMem(0xd9a1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd936);
        EXPECT(gbc.pc(), 0xd9a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9a1), 0xab);
        // AB 034B
        gbc.setState(0x53f1, 0x2fad, 0x95d0, 0x4792, 0x23c9, 0x5b2e, 0x0, 0x1);
        gbc.writeMem(0x53f1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2fad);
        EXPECT(gbc.pc(), 0x53f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 034C
        gbc.setState(0x2206, 0x72ad, 0x1c10, 0x3c7c, 0x814, 0x3933, 0x1, 0x1);
        gbc.writeMem(0x2206, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x72ad);
        EXPECT(gbc.pc(), 0x2207);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 034D
        gbc.setState(0x970a, 0x657a, 0x4310, 0x5f7e, 0xc054, 0x7383, 0x1, 0x0);
        gbc.writeMem(0x970a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x657a);
        EXPECT(gbc.pc(), 0x970b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x970a), 0xab);
        // AB 034E
        gbc.setState(0xbed0, 0x398b, 0xd1e0, 0x314d, 0x8a7f, 0x1344, 0x0, 0x1);
        gbc.writeMem(0xbed0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x398b);
        EXPECT(gbc.pc(), 0xbed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed0), 0xab);
        // AB 034F
        gbc.setState(0x8b11, 0x10aa, 0xa010, 0x9083, 0xcce9, 0x353f, 0x1, 0x0);
        gbc.writeMem(0x8b11, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x10aa);
        EXPECT(gbc.pc(), 0x8b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b11), 0xab);
        // AB 0350
        gbc.setState(0x5827, 0x63ae, 0x3ca0, 0x595d, 0xbfce, 0xf39, 0x0, 0x1);
        gbc.writeMem(0x5827, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x63ae);
        EXPECT(gbc.pc(), 0x5828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0351
        gbc.setState(0x2ab6, 0xda80, 0x1170, 0x5902, 0x7edc, 0x2657, 0x1, 0x1);
        gbc.writeMem(0x2ab6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xda80);
        EXPECT(gbc.pc(), 0x2ab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0352
        gbc.setState(0x95f5, 0x2942, 0xee30, 0x74ca, 0x78c0, 0x8bbe, 0x0, 0x0);
        gbc.writeMem(0x95f5, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2942);
        EXPECT(gbc.pc(), 0x95f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95f5), 0xab);
        // AB 0353
        gbc.setState(0x4e68, 0x491c, 0xcfc0, 0xe95d, 0x3a16, 0x218c, 0x0, 0x1);
        gbc.writeMem(0x4e68, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x491c);
        EXPECT(gbc.pc(), 0x4e69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0354
        gbc.setState(0xcd3b, 0x38bd, 0x2200, 0x30a3, 0x2b50, 0xfde0, 0x1, 0x1);
        gbc.writeMem(0xcd3b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x38bd);
        EXPECT(gbc.pc(), 0xcd3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3b), 0xab);
        // AB 0355
        gbc.setState(0xcb82, 0x9de4, 0xa600, 0x6ea, 0x7416, 0xbe6f, 0x0, 0x1);
        gbc.writeMem(0xcb82, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9de4);
        EXPECT(gbc.pc(), 0xcb83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb82), 0xab);
        // AB 0356
        gbc.setState(0x4c6f, 0xf3d7, 0x62a0, 0x759b, 0x6354, 0x825c, 0x1, 0x1);
        gbc.writeMem(0x4c6f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf3d7);
        EXPECT(gbc.pc(), 0x4c70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0357
        gbc.setState(0xe55c, 0xfd6c, 0x2440, 0x20c7, 0xd697, 0x8e2f, 0x1, 0x1);
        gbc.writeMem(0xe55c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfd6c);
        EXPECT(gbc.pc(), 0xe55d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe55c), 0xab);
        // AB 0358
        gbc.setState(0x233, 0x35ba, 0x7dd0, 0x8b16, 0x14cd, 0x46fd, 0x0, 0x1);
        gbc.writeMem(0x233, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x35ba);
        EXPECT(gbc.pc(), 0x234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 035A
        gbc.setState(0x6e3d, 0xcf, 0x5690, 0xbc53, 0xd099, 0xc68a, 0x1, 0x1);
        gbc.writeMem(0x6e3d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xcf);
        EXPECT(gbc.pc(), 0x6e3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 035B
        gbc.setState(0x8f55, 0xaa0a, 0x8770, 0x201e, 0xf423, 0xd35b, 0x0, 0x0);
        gbc.writeMem(0x8f55, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xaa0a);
        EXPECT(gbc.pc(), 0x8f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f55), 0xab);
        // AB 035C
        gbc.setState(0xa761, 0x32bd, 0xca30, 0x3e93, 0xdb74, 0xabce, 0x0, 0x1);
        gbc.writeMem(0xa761, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x32bd);
        EXPECT(gbc.pc(), 0xa762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa761), 0xab);
        // AB 035D
        gbc.setState(0x8406, 0xf44b, 0xa680, 0x4ab4, 0x7e15, 0xbf6e, 0x1, 0x0);
        gbc.writeMem(0x8406, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf44b);
        EXPECT(gbc.pc(), 0x8407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8406), 0xab);
        // AB 035E
        gbc.setState(0x8beb, 0x5c53, 0x3ef0, 0x34cd, 0xe3d4, 0x9524, 0x0, 0x1);
        gbc.writeMem(0x8beb, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5c53);
        EXPECT(gbc.pc(), 0x8bec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8beb), 0xab);
        // AB 035F
        gbc.setState(0x58ba, 0x71a8, 0x8760, 0x2da6, 0x3b70, 0x7e6a, 0x1, 0x1);
        gbc.writeMem(0x58ba, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x71a8);
        EXPECT(gbc.pc(), 0x58bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0360
        gbc.setState(0x5fdf, 0xd21f, 0xcc00, 0x23a7, 0xf8f8, 0xbc03, 0x0, 0x1);
        gbc.writeMem(0x5fdf, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd21f);
        EXPECT(gbc.pc(), 0x5fe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0361
        gbc.setState(0x29c1, 0xf8e8, 0x9200, 0x118a, 0xebdd, 0x545e, 0x1, 0x0);
        gbc.writeMem(0x29c1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf8e8);
        EXPECT(gbc.pc(), 0x29c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0362
        gbc.setState(0x3201, 0xd5c6, 0x4140, 0x38b1, 0xc042, 0x869f, 0x0, 0x0);
        gbc.writeMem(0x3201, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd5c6);
        EXPECT(gbc.pc(), 0x3202);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0363
        gbc.setState(0x906e, 0x53b2, 0xbf0, 0x9265, 0xa364, 0x3c2e, 0x0, 0x1);
        gbc.writeMem(0x906e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x53b2);
        EXPECT(gbc.pc(), 0x906f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x906e), 0xab);
        // AB 0364
        gbc.setState(0x587, 0x3abe, 0xfe80, 0xd6e9, 0x81a4, 0x6133, 0x1, 0x1);
        gbc.writeMem(0x587, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3abe);
        EXPECT(gbc.pc(), 0x588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0365
        gbc.setState(0x3e33, 0x7f33, 0x2270, 0xd6b7, 0x7ae9, 0xc41b, 0x1, 0x1);
        gbc.writeMem(0x3e33, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7f33);
        EXPECT(gbc.pc(), 0x3e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0366
        gbc.setState(0x135f, 0x1e52, 0xdc70, 0x4a0, 0xe7ab, 0x1e63, 0x0, 0x0);
        gbc.writeMem(0x135f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1e52);
        EXPECT(gbc.pc(), 0x1360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0368
        gbc.setState(0xa47d, 0x8047, 0x5ae0, 0xa9ed, 0x84cc, 0x4d9c, 0x1, 0x0);
        gbc.writeMem(0xa47d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8047);
        EXPECT(gbc.pc(), 0xa47e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa47d), 0xab);
        // AB 0369
        gbc.setState(0x2f13, 0xa34f, 0xa770, 0x7fb6, 0xbdb5, 0x4d5c, 0x1, 0x1);
        gbc.writeMem(0x2f13, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa34f);
        EXPECT(gbc.pc(), 0x2f14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 036A
        gbc.setState(0x601e, 0x273f, 0xc660, 0xaf5, 0x9a09, 0x6f38, 0x1, 0x1);
        gbc.writeMem(0x601e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x273f);
        EXPECT(gbc.pc(), 0x601f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 036B
        gbc.setState(0xe0a, 0xbeb3, 0xfe10, 0x1b3e, 0x3ddd, 0x3ac9, 0x1, 0x0);
        gbc.writeMem(0xe0a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xbeb3);
        EXPECT(gbc.pc(), 0xe0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 036C
        gbc.setState(0x2d2, 0x5042, 0x39b0, 0x2dd2, 0x41d0, 0x2d81, 0x0, 0x0);
        gbc.writeMem(0x2d2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5042);
        EXPECT(gbc.pc(), 0x2d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 036D
        gbc.setState(0x59ed, 0x829e, 0x4000, 0x3178, 0x5046, 0xa51b, 0x1, 0x0);
        gbc.writeMem(0x59ed, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x829e);
        EXPECT(gbc.pc(), 0x59ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 036E
        gbc.setState(0x410e, 0x8d0, 0xc690, 0x97c9, 0x5d2e, 0x74f6, 0x0, 0x0);
        gbc.writeMem(0x410e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8d0);
        EXPECT(gbc.pc(), 0x410f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 036F
        gbc.setState(0x9b69, 0xc981, 0x4770, 0xde71, 0xb8c, 0x7cda, 0x1, 0x0);
        gbc.writeMem(0x9b69, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc981);
        EXPECT(gbc.pc(), 0x9b6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b69), 0xab);
        // AB 0370
        gbc.setState(0xaab9, 0x76c8, 0x4ee0, 0x8f8c, 0xcc92, 0xcfe4, 0x1, 0x0);
        gbc.writeMem(0xaab9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x76c8);
        EXPECT(gbc.pc(), 0xaaba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaab9), 0xab);
        // AB 0371
        gbc.setState(0x3ced, 0x48e0, 0x68d0, 0x5bfd, 0x970b, 0x4b15, 0x1, 0x0);
        gbc.writeMem(0x3ced, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x48e0);
        EXPECT(gbc.pc(), 0x3cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0372
        gbc.setState(0xe93b, 0xbf4f, 0x2770, 0xe0b, 0xc05e, 0x24d7, 0x1, 0x0);
        gbc.writeMem(0xe93b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xbf4f);
        EXPECT(gbc.pc(), 0xe93c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe93b), 0xab);
        // AB 0373
        gbc.setState(0xa75b, 0xf5cd, 0x4130, 0xf26c, 0x3ca4, 0x7afa, 0x1, 0x0);
        gbc.writeMem(0xa75b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf5cd);
        EXPECT(gbc.pc(), 0xa75c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa75b), 0xab);
        // AB 0374
        gbc.setState(0x1152, 0xeb1b, 0x5470, 0x9978, 0x6434, 0x1657, 0x1, 0x1);
        gbc.writeMem(0x1152, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xeb1b);
        EXPECT(gbc.pc(), 0x1153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0375
        gbc.setState(0x605f, 0x1a40, 0xa80, 0x2711, 0xbc22, 0xa91c, 0x1, 0x0);
        gbc.writeMem(0x605f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1a40);
        EXPECT(gbc.pc(), 0x6060);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0376
        gbc.setState(0x295a, 0x6f14, 0x8400, 0xa108, 0xc473, 0xf24d, 0x1, 0x1);
        gbc.writeMem(0x295a, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6f14);
        EXPECT(gbc.pc(), 0x295b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0377
        gbc.setState(0x3bee, 0xfd36, 0x4580, 0xd3e, 0xb9dc, 0xdb5d, 0x0, 0x1);
        gbc.writeMem(0x3bee, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfd36);
        EXPECT(gbc.pc(), 0x3bef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0378
        gbc.setState(0x2805, 0x5300, 0xa8c0, 0xa541, 0x7cca, 0x30c1, 0x1, 0x0);
        gbc.writeMem(0x2805, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5300);
        EXPECT(gbc.pc(), 0x2806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0379
        gbc.setState(0x7ee6, 0x8b42, 0x960, 0xa580, 0xf1f3, 0xa93, 0x0, 0x1);
        gbc.writeMem(0x7ee6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8b42);
        EXPECT(gbc.pc(), 0x7ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 037A
        gbc.setState(0x3b0, 0x3e66, 0xcff0, 0xbdae, 0x3f0d, 0xc4a5, 0x0, 0x0);
        gbc.writeMem(0x3b0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3e66);
        EXPECT(gbc.pc(), 0x3b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 037B
        gbc.setState(0x7e4d, 0x69e3, 0xa530, 0xb2b5, 0x6e29, 0x9477, 0x1, 0x1);
        gbc.writeMem(0x7e4d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x69e3);
        EXPECT(gbc.pc(), 0x7e4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 037C
        gbc.setState(0xf6e, 0xde31, 0xfa00, 0x4c9f, 0x61e0, 0x1d9, 0x1, 0x1);
        gbc.writeMem(0xf6e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xde31);
        EXPECT(gbc.pc(), 0xf6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 037D
        gbc.setState(0xcb51, 0x64c0, 0xddd0, 0x3882, 0xbb5f, 0xc73a, 0x1, 0x0);
        gbc.writeMem(0xcb51, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x64c0);
        EXPECT(gbc.pc(), 0xcb52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb51), 0xab);
        // AB 037E
        gbc.setState(0x1ffd, 0x364b, 0x2860, 0x9888, 0x350e, 0x6015, 0x1, 0x0);
        gbc.writeMem(0x1ffd, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x364b);
        EXPECT(gbc.pc(), 0x1ffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 037F
        gbc.setState(0x7326, 0x460e, 0x3100, 0xc8b9, 0x8273, 0x38d7, 0x0, 0x0);
        gbc.writeMem(0x7326, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x460e);
        EXPECT(gbc.pc(), 0x7327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0380
        gbc.setState(0xd8dc, 0x3cee, 0x1140, 0x21d7, 0xcd01, 0x63b7, 0x1, 0x0);
        gbc.writeMem(0xd8dc, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3cee);
        EXPECT(gbc.pc(), 0xd8dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8dc), 0xab);
        // AB 0381
        gbc.setState(0x9992, 0xe02c, 0x28f0, 0xd376, 0x7107, 0x4d1, 0x0, 0x1);
        gbc.writeMem(0x9992, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe02c);
        EXPECT(gbc.pc(), 0x9993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9992), 0xab);
        // AB 0382
        gbc.setState(0x5e56, 0x18df, 0x1840, 0x7d85, 0x5178, 0xaa33, 0x1, 0x1);
        gbc.writeMem(0x5e56, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x18df);
        EXPECT(gbc.pc(), 0x5e57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0383
        gbc.setState(0x7c0f, 0x23, 0xbcd0, 0x7f9f, 0xf5a4, 0x9975, 0x1, 0x1);
        gbc.writeMem(0x7c0f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x23);
        EXPECT(gbc.pc(), 0x7c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0384
        gbc.setState(0x923c, 0xe7d8, 0x9980, 0x8757, 0x66e8, 0x4a17, 0x1, 0x1);
        gbc.writeMem(0x923c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe7d8);
        EXPECT(gbc.pc(), 0x923d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x923c), 0xab);
        // AB 0385
        gbc.setState(0xd317, 0x24ec, 0x2020, 0x7f06, 0xa8b1, 0x6aa3, 0x0, 0x1);
        gbc.writeMem(0xd317, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x24ec);
        EXPECT(gbc.pc(), 0xd318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd317), 0xab);
        // AB 0386
        gbc.setState(0x3785, 0x765d, 0xe6d0, 0xbb1b, 0x70cc, 0x6db4, 0x1, 0x1);
        gbc.writeMem(0x3785, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x765d);
        EXPECT(gbc.pc(), 0x3786);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0387
        gbc.setState(0x1b8c, 0xbe02, 0xf8c0, 0x21b4, 0x60e4, 0x2e17, 0x0, 0x0);
        gbc.writeMem(0x1b8c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xbe02);
        EXPECT(gbc.pc(), 0x1b8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0388
        gbc.setState(0xc104, 0xf0c7, 0xcca0, 0xa776, 0xeb3e, 0x7e8d, 0x1, 0x0);
        gbc.writeMem(0xc104, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf0c7);
        EXPECT(gbc.pc(), 0xc105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc104), 0xab);
        // AB 0389
        gbc.setState(0xace4, 0xb539, 0x69d0, 0xd621, 0xa99c, 0xb272, 0x0, 0x0);
        gbc.writeMem(0xace4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb539);
        EXPECT(gbc.pc(), 0xace5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xace4), 0xab);
        // AB 038A
        gbc.setState(0x5b6d, 0x7036, 0x5fe0, 0xa09d, 0x1d7c, 0x396b, 0x1, 0x0);
        gbc.writeMem(0x5b6d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7036);
        EXPECT(gbc.pc(), 0x5b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 038B
        gbc.setState(0xaa95, 0x1ad9, 0xd390, 0xa027, 0x779, 0xb4fe, 0x0, 0x1);
        gbc.writeMem(0xaa95, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1ad9);
        EXPECT(gbc.pc(), 0xaa96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa95), 0xab);
        // AB 038C
        gbc.setState(0x9a78, 0x370, 0xb890, 0xa082, 0x3a5d, 0xc833, 0x0, 0x1);
        gbc.writeMem(0x9a78, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x370);
        EXPECT(gbc.pc(), 0x9a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a78), 0xab);
        // AB 038D
        gbc.setState(0x2fc0, 0x12a9, 0xdf60, 0x23f5, 0x7e94, 0x1819, 0x0, 0x0);
        gbc.writeMem(0x2fc0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x12a9);
        EXPECT(gbc.pc(), 0x2fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 038E
        gbc.setState(0x5cca, 0x17d8, 0x740, 0x81f8, 0x4ed7, 0xd6c5, 0x1, 0x0);
        gbc.writeMem(0x5cca, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x17d8);
        EXPECT(gbc.pc(), 0x5ccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 038F
        gbc.setState(0x4490, 0x5d45, 0xe60, 0x7038, 0x486d, 0x5951, 0x1, 0x0);
        gbc.writeMem(0x4490, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5d45);
        EXPECT(gbc.pc(), 0x4491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0390
        gbc.setState(0x9ab0, 0x1485, 0x6800, 0xbda0, 0xdb60, 0xf628, 0x1, 0x0);
        gbc.writeMem(0x9ab0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1485);
        EXPECT(gbc.pc(), 0x9ab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ab0), 0xab);
        // AB 0391
        gbc.setState(0x2533, 0xd561, 0xc270, 0x20b5, 0x5dfd, 0xe804, 0x1, 0x1);
        gbc.writeMem(0x2533, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd561);
        EXPECT(gbc.pc(), 0x2534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0392
        gbc.setState(0x3931, 0xb234, 0xa0b0, 0x92da, 0x91ee, 0x6fba, 0x1, 0x0);
        gbc.writeMem(0x3931, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb234);
        EXPECT(gbc.pc(), 0x3932);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0393
        gbc.setState(0xe1b7, 0x418c, 0x2f0, 0x6b97, 0x99e7, 0x94f7, 0x0, 0x0);
        gbc.writeMem(0xe1b7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x418c);
        EXPECT(gbc.pc(), 0xe1b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1b7), 0xab);
        // AB 0394
        gbc.setState(0x842c, 0x78c2, 0x6c90, 0xdaa8, 0x3ff9, 0xb969, 0x0, 0x1);
        gbc.writeMem(0x842c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x78c2);
        EXPECT(gbc.pc(), 0x842d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x842c), 0xab);
        // AB 0395
        gbc.setState(0x702c, 0x53e9, 0x69f0, 0xfa, 0xea90, 0xff9c, 0x0, 0x1);
        gbc.writeMem(0x702c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x53e9);
        EXPECT(gbc.pc(), 0x702d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0396
        gbc.setState(0xcee0, 0xb19b, 0x52b0, 0xce, 0xae06, 0x7768, 0x1, 0x1);
        gbc.writeMem(0xcee0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb19b);
        EXPECT(gbc.pc(), 0xcee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee0), 0xab);
        // AB 0397
        gbc.setState(0x55c4, 0x3e08, 0x40a0, 0x4e2b, 0x246e, 0xbb40, 0x1, 0x1);
        gbc.writeMem(0x55c4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3e08);
        EXPECT(gbc.pc(), 0x55c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 0398
        gbc.setState(0x8961, 0x88b1, 0x7dc0, 0x7d03, 0x5ba0, 0xf78f, 0x1, 0x1);
        gbc.writeMem(0x8961, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x88b1);
        EXPECT(gbc.pc(), 0x8962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8961), 0xab);
        // AB 0399
        gbc.setState(0xdb8e, 0xf257, 0x3f90, 0xa384, 0x73fd, 0xa6f7, 0x1, 0x1);
        gbc.writeMem(0xdb8e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf257);
        EXPECT(gbc.pc(), 0xdb8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb8e), 0xab);
        // AB 039A
        gbc.setState(0xd8a8, 0x2822, 0x4190, 0x4747, 0xddf3, 0xcd4a, 0x0, 0x0);
        gbc.writeMem(0xd8a8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2822);
        EXPECT(gbc.pc(), 0xd8a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8a8), 0xab);
        // AB 039B
        gbc.setState(0x8c21, 0x3500, 0x9830, 0x3083, 0x3a0, 0x40fb, 0x0, 0x0);
        gbc.writeMem(0x8c21, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3500);
        EXPECT(gbc.pc(), 0x8c22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c21), 0xab);
        // AB 039C
        gbc.setState(0x474c, 0xbbb8, 0xe730, 0x764c, 0xa07f, 0x6b19, 0x0, 0x1);
        gbc.writeMem(0x474c, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xbbb8);
        EXPECT(gbc.pc(), 0x474d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 039D
        gbc.setState(0xb240, 0xc910, 0x6270, 0x9b8a, 0xdf22, 0x8e32, 0x0, 0x0);
        gbc.writeMem(0xb240, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc910);
        EXPECT(gbc.pc(), 0xb241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb240), 0xab);
        // AB 039E
        gbc.setState(0xbe3d, 0x2a5c, 0x30f0, 0xe6c6, 0x5a03, 0x251e, 0x0, 0x0);
        gbc.writeMem(0xbe3d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2a5c);
        EXPECT(gbc.pc(), 0xbe3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe3d), 0xab);
        // AB 039F
        gbc.setState(0x902d, 0x523b, 0x1d20, 0xf304, 0x33f, 0x1fe2, 0x1, 0x1);
        gbc.writeMem(0x902d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x523b);
        EXPECT(gbc.pc(), 0x902e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x902d), 0xab);
        // AB 03A0
        gbc.setState(0xb1c4, 0x487f, 0x1d60, 0x378a, 0xec0c, 0x3829, 0x0, 0x1);
        gbc.writeMem(0xb1c4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x487f);
        EXPECT(gbc.pc(), 0xb1c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c4), 0xab);
        // AB 03A1
        gbc.setState(0x4b30, 0x868e, 0xa6d0, 0xc547, 0xd919, 0x91ce, 0x0, 0x0);
        gbc.writeMem(0x4b30, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x868e);
        EXPECT(gbc.pc(), 0x4b31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03A2
        gbc.setState(0x359b, 0xc827, 0x5780, 0xae00, 0xc2f8, 0xc067, 0x0, 0x1);
        gbc.writeMem(0x359b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc827);
        EXPECT(gbc.pc(), 0x359c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03A3
        gbc.setState(0xe0a8, 0x2ed9, 0x52d0, 0x41c9, 0x74e1, 0x67e, 0x0, 0x0);
        gbc.writeMem(0xe0a8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2ed9);
        EXPECT(gbc.pc(), 0xe0a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0a8), 0xab);
        // AB 03A4
        gbc.setState(0xb5b4, 0x84a5, 0x91f0, 0x9757, 0x78b5, 0xea0e, 0x0, 0x1);
        gbc.writeMem(0xb5b4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x84a5);
        EXPECT(gbc.pc(), 0xb5b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b4), 0xab);
        // AB 03A5
        gbc.setState(0x2611, 0x8573, 0x3610, 0x42d9, 0x789f, 0x71da, 0x1, 0x0);
        gbc.writeMem(0x2611, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8573);
        EXPECT(gbc.pc(), 0x2612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03A6
        gbc.setState(0x5a01, 0xeb1b, 0x6410, 0xfe07, 0xd289, 0x5305, 0x0, 0x1);
        gbc.writeMem(0x5a01, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xeb1b);
        EXPECT(gbc.pc(), 0x5a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03A7
        gbc.setState(0x552e, 0xa4ed, 0x4dd0, 0x9cfd, 0x2a68, 0x62f5, 0x0, 0x0);
        gbc.writeMem(0x552e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa4ed);
        EXPECT(gbc.pc(), 0x552f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03A8
        gbc.setState(0x5b88, 0xdb5d, 0xff40, 0xdbf5, 0x41af, 0x40af, 0x0, 0x1);
        gbc.writeMem(0x5b88, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xdb5d);
        EXPECT(gbc.pc(), 0x5b89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03AA
        gbc.setState(0x2518, 0x7911, 0x2c60, 0xa637, 0xf862, 0x2364, 0x1, 0x1);
        gbc.writeMem(0x2518, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7911);
        EXPECT(gbc.pc(), 0x2519);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03AB
        gbc.setState(0xdcfd, 0x6397, 0x6620, 0x8af8, 0x142a, 0x8741, 0x1, 0x1);
        gbc.writeMem(0xdcfd, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6397);
        EXPECT(gbc.pc(), 0xdcfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcfd), 0xab);
        // AB 03AC
        gbc.setState(0xbc61, 0x4e0b, 0xb900, 0x4558, 0x93ef, 0xe34, 0x1, 0x0);
        gbc.writeMem(0xbc61, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4e0b);
        EXPECT(gbc.pc(), 0xbc62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc61), 0xab);
        // AB 03AD
        gbc.setState(0xefd6, 0xa4f7, 0xa050, 0xdcdc, 0x646d, 0xb9c5, 0x1, 0x1);
        gbc.writeMem(0xefd6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa4f7);
        EXPECT(gbc.pc(), 0xefd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefd6), 0xab);
        // AB 03AE
        gbc.setState(0x6c19, 0xe8d5, 0xc1c0, 0x8145, 0x7117, 0x342f, 0x0, 0x0);
        gbc.writeMem(0x6c19, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe8d5);
        EXPECT(gbc.pc(), 0x6c1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03AF
        gbc.setState(0x12f3, 0xb846, 0xbaf0, 0x9dfb, 0xf56f, 0x65fb, 0x1, 0x0);
        gbc.writeMem(0x12f3, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb846);
        EXPECT(gbc.pc(), 0x12f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03B0
        gbc.setState(0x29d9, 0x5dc4, 0x9620, 0x578d, 0x8d7a, 0x30e, 0x0, 0x1);
        gbc.writeMem(0x29d9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5dc4);
        EXPECT(gbc.pc(), 0x29da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03B1
        gbc.setState(0xc34d, 0x284f, 0xf290, 0x1fa3, 0xd709, 0xe921, 0x1, 0x1);
        gbc.writeMem(0xc34d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x284f);
        EXPECT(gbc.pc(), 0xc34e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc34d), 0xab);
        // AB 03B2
        gbc.setState(0x180f, 0x2433, 0x1470, 0xbce8, 0x1be5, 0x8b60, 0x1, 0x1);
        gbc.writeMem(0x180f, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2433);
        EXPECT(gbc.pc(), 0x1810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03B3
        gbc.setState(0xbc15, 0x25ba, 0x5210, 0xeb24, 0xc992, 0x852d, 0x0, 0x1);
        gbc.writeMem(0xbc15, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x25ba);
        EXPECT(gbc.pc(), 0xbc16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc15), 0xab);
        // AB 03B4
        gbc.setState(0x5e0d, 0x5d22, 0x1720, 0x57a1, 0x83f6, 0xbdc0, 0x1, 0x1);
        gbc.writeMem(0x5e0d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5d22);
        EXPECT(gbc.pc(), 0x5e0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03B5
        gbc.setState(0xe515, 0xacf1, 0xef70, 0x3e1c, 0xe750, 0xfeb3, 0x1, 0x0);
        gbc.writeMem(0xe515, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xacf1);
        EXPECT(gbc.pc(), 0xe516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe515), 0xab);
        // AB 03B6
        gbc.setState(0x3c84, 0xf241, 0xec40, 0x6aa8, 0x7d0f, 0x171d, 0x0, 0x1);
        gbc.writeMem(0x3c84, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf241);
        EXPECT(gbc.pc(), 0x3c85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03B8
        gbc.setState(0x58e1, 0x32a4, 0xcc00, 0xaa24, 0x882, 0xa330, 0x1, 0x0);
        gbc.writeMem(0x58e1, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x32a4);
        EXPECT(gbc.pc(), 0x58e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03B9
        gbc.setState(0x374d, 0x9dae, 0xee60, 0x5741, 0xb2e4, 0xb1ce, 0x0, 0x0);
        gbc.writeMem(0x374d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9dae);
        EXPECT(gbc.pc(), 0x374e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03BA
        gbc.setState(0xb15e, 0xa34e, 0xa7d0, 0xd58a, 0x2ce, 0x3c79, 0x0, 0x0);
        gbc.writeMem(0xb15e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa34e);
        EXPECT(gbc.pc(), 0xb15f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb15e), 0xab);
        // AB 03BB
        gbc.setState(0x6074, 0xafca, 0x55b0, 0x2d2d, 0xc6c8, 0x116d, 0x1, 0x1);
        gbc.writeMem(0x6074, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xafca);
        EXPECT(gbc.pc(), 0x6075);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03BC
        gbc.setState(0xcb0d, 0x6069, 0x21b0, 0xa920, 0x33b9, 0xaa7e, 0x0, 0x1);
        gbc.writeMem(0xcb0d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6069);
        EXPECT(gbc.pc(), 0xcb0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb0d), 0xab);
        // AB 03BE
        gbc.setState(0xcbb8, 0x7a89, 0xdc30, 0x9798, 0x47f5, 0xf115, 0x0, 0x0);
        gbc.writeMem(0xcbb8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7a89);
        EXPECT(gbc.pc(), 0xcbb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb8), 0xab);
        // AB 03BF
        gbc.setState(0x707, 0x7850, 0x9ef0, 0x9d1b, 0x939f, 0x1f0b, 0x1, 0x0);
        gbc.writeMem(0x707, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7850);
        EXPECT(gbc.pc(), 0x708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03C0
        gbc.setState(0x6226, 0x57cf, 0x8a30, 0xe416, 0xbe99, 0xed3f, 0x1, 0x1);
        gbc.writeMem(0x6226, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x57cf);
        EXPECT(gbc.pc(), 0x6227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03C1
        gbc.setState(0x8d1b, 0x1c92, 0xdb60, 0xe042, 0x2a78, 0x1c4b, 0x1, 0x1);
        gbc.writeMem(0x8d1b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1c92);
        EXPECT(gbc.pc(), 0x8d1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d1b), 0xab);
        // AB 03C2
        gbc.setState(0x944b, 0x6933, 0xae40, 0x7549, 0x33ba, 0xe444, 0x1, 0x1);
        gbc.writeMem(0x944b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6933);
        EXPECT(gbc.pc(), 0x944c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x944b), 0xab);
        // AB 03C3
        gbc.setState(0xc724, 0x4d32, 0xc710, 0xf116, 0x62fa, 0xa7e8, 0x1, 0x0);
        gbc.writeMem(0xc724, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4d32);
        EXPECT(gbc.pc(), 0xc725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc724), 0xab);
        // AB 03C4
        gbc.setState(0x9ab9, 0xe8c2, 0x9430, 0xa00f, 0xd402, 0xc0ac, 0x1, 0x1);
        gbc.writeMem(0x9ab9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe8c2);
        EXPECT(gbc.pc(), 0x9aba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ab9), 0xab);
        // AB 03C5
        gbc.setState(0x22cc, 0xcc9f, 0x5f50, 0xfc73, 0x767a, 0x1f4a, 0x0, 0x1);
        gbc.writeMem(0x22cc, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xcc9f);
        EXPECT(gbc.pc(), 0x22cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03C6
        gbc.setState(0x4615, 0xf598, 0x6180, 0xc868, 0x1593, 0xcf1b, 0x1, 0x0);
        gbc.writeMem(0x4615, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf598);
        EXPECT(gbc.pc(), 0x4616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03C7
        gbc.setState(0x77b4, 0xbfc8, 0x8160, 0xecfb, 0x4e4e, 0xe644, 0x1, 0x0);
        gbc.writeMem(0x77b4, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbfc8);
        EXPECT(gbc.pc(), 0x77b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03C8
        gbc.setState(0x1982, 0xe5cf, 0x1c00, 0x9186, 0x7831, 0x157f, 0x0, 0x0);
        gbc.writeMem(0x1982, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe5cf);
        EXPECT(gbc.pc(), 0x1983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03CA
        gbc.setState(0x691e, 0xc0c6, 0xb290, 0x606, 0xa52b, 0xf40a, 0x1, 0x0);
        gbc.writeMem(0x691e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc0c6);
        EXPECT(gbc.pc(), 0x691f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03CC
        gbc.setState(0x6470, 0xb6d0, 0x5f90, 0xc7d9, 0xd87d, 0x5f05, 0x1, 0x0);
        gbc.writeMem(0x6470, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb6d0);
        EXPECT(gbc.pc(), 0x6471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03CD
        gbc.setState(0xa2e6, 0x9eff, 0x3350, 0xb502, 0x2566, 0x106, 0x1, 0x1);
        gbc.writeMem(0xa2e6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9eff);
        EXPECT(gbc.pc(), 0xa2e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2e6), 0xab);
        // AB 03CE
        gbc.setState(0x6dcc, 0x72f8, 0xb590, 0x63c8, 0x982d, 0x8c9c, 0x1, 0x1);
        gbc.writeMem(0x6dcc, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x72f8);
        EXPECT(gbc.pc(), 0x6dcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03CF
        gbc.setState(0x2576, 0xb0a6, 0x22c0, 0xcaab, 0x2347, 0xa185, 0x0, 0x0);
        gbc.writeMem(0x2576, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb0a6);
        EXPECT(gbc.pc(), 0x2577);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03D0
        gbc.setState(0x3fe6, 0x67f6, 0x6750, 0x6c15, 0xb472, 0xc3f5, 0x0, 0x1);
        gbc.writeMem(0x3fe6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x67f6);
        EXPECT(gbc.pc(), 0x3fe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03D2
        gbc.setState(0x2c8e, 0x24b0, 0x8d60, 0xb23f, 0xd345, 0xcd6c, 0x0, 0x1);
        gbc.writeMem(0x2c8e, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x24b0);
        EXPECT(gbc.pc(), 0x2c8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03D3
        gbc.setState(0x1ef7, 0xe444, 0x98d0, 0x2861, 0x6614, 0x8340, 0x0, 0x1);
        gbc.writeMem(0x1ef7, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe444);
        EXPECT(gbc.pc(), 0x1ef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03D4
        gbc.setState(0x9a06, 0x85c6, 0x6270, 0xc3f3, 0x847a, 0x17da, 0x1, 0x1);
        gbc.writeMem(0x9a06, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x85c6);
        EXPECT(gbc.pc(), 0x9a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a06), 0xab);
        // AB 03D6
        gbc.setState(0xcf06, 0xdd19, 0xc70, 0x51b4, 0xb68f, 0x941c, 0x1, 0x1);
        gbc.writeMem(0xcf06, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xdd19);
        EXPECT(gbc.pc(), 0xcf07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf06), 0xab);
        // AB 03D7
        gbc.setState(0x268, 0xb322, 0xdd60, 0x9735, 0xf084, 0xe9ac, 0x0, 0x1);
        gbc.writeMem(0x268, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb322);
        EXPECT(gbc.pc(), 0x269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03D8
        gbc.setState(0x576b, 0xe033, 0x5930, 0x3f54, 0x408e, 0x6ef7, 0x0, 0x0);
        gbc.writeMem(0x576b, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xe033);
        EXPECT(gbc.pc(), 0x576c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03D9
        gbc.setState(0xa449, 0x2050, 0x8380, 0x9f33, 0xbf6d, 0x37c4, 0x1, 0x1);
        gbc.writeMem(0xa449, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2050);
        EXPECT(gbc.pc(), 0xa44a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa449), 0xab);
        // AB 03DB
        gbc.setState(0xc355, 0x9069, 0xd690, 0x5fc6, 0x84c0, 0x119c, 0x0, 0x1);
        gbc.writeMem(0xc355, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9069);
        EXPECT(gbc.pc(), 0xc356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc355), 0xab);
        // AB 03DC
        gbc.setState(0x3bda, 0x8766, 0xa110, 0xb388, 0x5faf, 0x7cc1, 0x0, 0x1);
        gbc.writeMem(0x3bda, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8766);
        EXPECT(gbc.pc(), 0x3bdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03DD
        gbc.setState(0xa8ed, 0xaa00, 0x1c10, 0x42b9, 0x8280, 0xb06c, 0x0, 0x1);
        gbc.writeMem(0xa8ed, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xaa00);
        EXPECT(gbc.pc(), 0xa8ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8ed), 0xab);
        // AB 03DE
        gbc.setState(0xb915, 0x7e41, 0xf9a0, 0xbbb5, 0x2ebb, 0x30ff, 0x1, 0x0);
        gbc.writeMem(0xb915, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7e41);
        EXPECT(gbc.pc(), 0xb916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb915), 0xab);
        // AB 03DF
        gbc.setState(0xb45d, 0x285c, 0x9170, 0x6fc2, 0x6b94, 0xc48c, 0x0, 0x1);
        gbc.writeMem(0xb45d, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x285c);
        EXPECT(gbc.pc(), 0xb45e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb45d), 0xab);
        // AB 03E0
        gbc.setState(0x4266, 0xfb2d, 0x9420, 0x696a, 0x641c, 0x54c3, 0x1, 0x1);
        gbc.writeMem(0x4266, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfb2d);
        EXPECT(gbc.pc(), 0x4267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03E1
        gbc.setState(0x4ef8, 0xe33b, 0x1e40, 0x806, 0x4be0, 0xbb9e, 0x0, 0x1);
        gbc.writeMem(0x4ef8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe33b);
        EXPECT(gbc.pc(), 0x4ef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03E2
        gbc.setState(0x56ce, 0xb200, 0x8580, 0x894b, 0x880e, 0x2698, 0x0, 0x1);
        gbc.writeMem(0x56ce, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb200);
        EXPECT(gbc.pc(), 0x56cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // AB 03E3
        gbc.setState(0xa326, 0xad5d, 0xa470, 0xec77, 0xcb2b, 0xf289, 0x0, 0x0);
        gbc.writeMem(0xa326, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xad5d);
        EXPECT(gbc.pc(), 0xa327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa326), 0xab);
        // AB 03E4
        gbc.setState(0xa7e9, 0xd50e, 0xc2d0, 0x5b34, 0x7543, 0xcad7, 0x1, 0x0);
        gbc.writeMem(0xa7e9, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd50e);
        EXPECT(gbc.pc(), 0xa7ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7e9), 0xab);
        // AB 03E5
        gbc.setState(0xe1b2, 0x202d, 0x3400, 0xf46d, 0x1e76, 0x6d2, 0x0, 0x0);
        gbc.writeMem(0xe1b2, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x202d);
        EXPECT(gbc.pc(), 0xe1b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1b2), 0xab);
        // AB 03E6
        gbc.setState(0xb084, 0xee53, 0xb330, 0x311f, 0xad3e, 0x5724, 0x1, 0x0);
        gbc.writeMem(0xb084, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xee53);
        EXPECT(gbc.pc(), 0xb085);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb084), 0xab);
    }
}
#endif
