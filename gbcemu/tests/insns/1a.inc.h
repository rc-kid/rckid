    TEST(gbcemu, opcode_1a) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 1A 0000
        gbc.setState(0x7bfb, 0x59fc, 0xf890, 0x3179, 0x17b7, 0xe24f, 0x1, 0x0);
        gbc.writeMem(0x17b7, { 0xfc });
        gbc.writeMem(0x7bfb, { 0x1a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x59fc, gbc.sp());
        EXPECT(0x7bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0001
        gbc.setState(0xb065, 0x9e30, 0xabb0, 0xd15f, 0x330c, 0xe7ab, 0x0, 0x0);
        gbc.writeMem(0x330c, { 0x56 });
        gbc.writeMem(0xb065, { 0x1a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9e30, gbc.sp());
        EXPECT(0xb066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb065));
        // 1A 0002
        gbc.setState(0x51ca, 0x8ece, 0xa560, 0xef81, 0xd07d, 0x664e, 0x0, 0x0);
        gbc.writeMem(0x51ca, { 0x1a });
        gbc.writeMem(0xd07d, { 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8ece, gbc.sp());
        EXPECT(0x51cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xd07d));
        // 1A 0003
        gbc.setState(0x817a, 0xd7c7, 0x1640, 0x98f2, 0x4998, 0xf435, 0x0, 0x1);
        gbc.writeMem(0x4998, { 0xac });
        gbc.writeMem(0x817a, { 0x1a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd7c7, gbc.sp());
        EXPECT(0x817b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x817a));
        // 1A 0005
        gbc.setState(0x16f3, 0xd2e7, 0xa7e0, 0xe4f5, 0x6b1e, 0xf9ad, 0x0, 0x0);
        gbc.writeMem(0x16f3, { 0x1a });
        gbc.writeMem(0x6b1e, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd2e7, gbc.sp());
        EXPECT(0x16f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0006
        gbc.setState(0x3359, 0xefaa, 0xf030, 0x4b3b, 0xa961, 0xbc2b, 0x1, 0x1);
        gbc.writeMem(0x3359, { 0x1a });
        gbc.writeMem(0xa961, { 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xefaa, gbc.sp());
        EXPECT(0x335a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa961));
        // 1A 0007
        gbc.setState(0x6b6d, 0xbf19, 0x5f10, 0x5916, 0x60a5, 0xab1c, 0x0, 0x1);
        gbc.writeMem(0x60a5, { 0x4d });
        gbc.writeMem(0x6b6d, { 0x1a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xbf19, gbc.sp());
        EXPECT(0x6b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0008
        gbc.setState(0x2937, 0x6f87, 0xf6d0, 0x1b94, 0x196e, 0xd7a9, 0x0, 0x1);
        gbc.writeMem(0x196e, { 0xe6 });
        gbc.writeMem(0x2937, { 0x1a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6f87, gbc.sp());
        EXPECT(0x2938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0009
        gbc.setState(0x57b, 0x28dd, 0x1b70, 0x249c, 0xd0e2, 0xe044, 0x0, 0x0);
        gbc.writeMem(0x57b, { 0x1a });
        gbc.writeMem(0xd0e2, { 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x28dd, gbc.sp());
        EXPECT(0x57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xd0e2));
        // 1A 000A
        gbc.setState(0x55be, 0xc93f, 0xec0, 0x7fcc, 0x64bb, 0x14cb, 0x1, 0x0);
        gbc.writeMem(0x55be, { 0x1a });
        gbc.writeMem(0x64bb, { 0x6b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc93f, gbc.sp());
        EXPECT(0x55bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 000B
        gbc.setState(0xc1b9, 0x5d1e, 0x7510, 0x55c9, 0x80a3, 0xa63b, 0x1, 0x1);
        gbc.writeMem(0x80a3, { 0x7a });
        gbc.writeMem(0xc1b9, { 0x1a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5d1e, gbc.sp());
        EXPECT(0xc1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x80a3));
        EXPECT(0x1a, gbc.readMem(0xc1b9));
        // 1A 000C
        gbc.setState(0xb024, 0xfd7a, 0xceb0, 0xb20e, 0x3d91, 0xefe8, 0x0, 0x1);
        gbc.writeMem(0x3d91, { 0xb6 });
        gbc.writeMem(0xb024, { 0x1a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfd7a, gbc.sp());
        EXPECT(0xb025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb024));
        // 1A 000D
        gbc.setState(0x6211, 0xcc90, 0x6b40, 0xc572, 0x958d, 0xab9a, 0x0, 0x1);
        gbc.writeMem(0x6211, { 0x1a });
        gbc.writeMem(0x958d, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcc90, gbc.sp());
        EXPECT(0x6212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x958d));
        // 1A 000E
        gbc.setState(0x6c53, 0xfacf, 0xdcf0, 0xf9e2, 0xd9e, 0xaf93, 0x1, 0x0);
        gbc.writeMem(0xd9e, { 0x42 });
        gbc.writeMem(0x6c53, { 0x1a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfacf, gbc.sp());
        EXPECT(0x6c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 000F
        gbc.setState(0x9a2b, 0xd7e0, 0x32f0, 0xb3d2, 0xee10, 0x5fe0, 0x0, 0x0);
        gbc.writeMem(0x9a2b, { 0x1a });
        gbc.writeMem(0xee10, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd7e0, gbc.sp());
        EXPECT(0x9a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9a2b));
        EXPECT(0xe1, gbc.readMem(0xee10));
        // 1A 0010
        gbc.setState(0x3b1, 0xc8a5, 0x730, 0x6ab3, 0x16a3, 0xbac1, 0x0, 0x1);
        gbc.writeMem(0x3b1, { 0x1a });
        gbc.writeMem(0x16a3, { 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc8a5, gbc.sp());
        EXPECT(0x3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0011
        gbc.setState(0x5aa2, 0xf47b, 0x8b30, 0xdbfc, 0x475c, 0x8d72, 0x1, 0x0);
        gbc.writeMem(0x475c, { 0xaf });
        gbc.writeMem(0x5aa2, { 0x1a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf47b, gbc.sp());
        EXPECT(0x5aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0012
        gbc.setState(0x4d00, 0x79fd, 0x8250, 0xa967, 0x3802, 0xae7c, 0x1, 0x1);
        gbc.writeMem(0x3802, { 0x6d });
        gbc.writeMem(0x4d00, { 0x1a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x79fd, gbc.sp());
        EXPECT(0x4d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0013
        gbc.setState(0x1e62, 0x86ca, 0x2630, 0x4ace, 0x6e78, 0x8bc6, 0x1, 0x1);
        gbc.writeMem(0x1e62, { 0x1a });
        gbc.writeMem(0x6e78, { 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x86ca, gbc.sp());
        EXPECT(0x1e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0014
        gbc.setState(0xc87f, 0x3896, 0x3d0, 0x868b, 0x7666, 0xcddc, 0x0, 0x1);
        gbc.writeMem(0x7666, { 0x46 });
        gbc.writeMem(0xc87f, { 0x1a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3896, gbc.sp());
        EXPECT(0xc880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc87f));
        // 1A 0015
        gbc.setState(0xe3e8, 0x32da, 0xd90, 0x8c7, 0xff11, 0x3d8f, 0x1, 0x1);
        gbc.writeMem(0xe3e8, { 0x1a });
        gbc.writeMem(0xff11, { 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x32da, gbc.sp());
        EXPECT(0xe3e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe3e8));
        EXPECT(0x48, gbc.readMem(0xff11));
        // 1A 0016
        gbc.setState(0x5e9b, 0x8e59, 0x6bd0, 0x585a, 0x23e8, 0x8a48, 0x1, 0x1);
        gbc.writeMem(0x23e8, { 0xc2 });
        gbc.writeMem(0x5e9b, { 0x1a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8e59, gbc.sp());
        EXPECT(0x5e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0017
        gbc.setState(0x95fc, 0x8b88, 0xf140, 0x18e5, 0x4415, 0x259b, 0x1, 0x0);
        gbc.writeMem(0x4415, { 0xfb });
        gbc.writeMem(0x95fc, { 0x1a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8b88, gbc.sp());
        EXPECT(0x95fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x95fc));
        // 1A 0018
        gbc.setState(0x3fc5, 0xd7b8, 0xcb0, 0x9374, 0xaa8c, 0x9752, 0x0, 0x0);
        gbc.writeMem(0x3fc5, { 0x1a });
        gbc.writeMem(0xaa8c, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd7b8, gbc.sp());
        EXPECT(0x3fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xaa8c));
        // 1A 0019
        gbc.setState(0x4844, 0x8cc3, 0xb690, 0x39f2, 0xc1dd, 0x361d, 0x1, 0x0);
        gbc.writeMem(0x4844, { 0x1a });
        gbc.writeMem(0xc1dd, { 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8cc3, gbc.sp());
        EXPECT(0x4845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xc1dd));
        // 1A 001A
        gbc.setState(0xa683, 0x7d67, 0xe20, 0xd89e, 0xb42d, 0x4a9a, 0x0, 0x1);
        gbc.writeMem(0xa683, { 0x1a });
        gbc.writeMem(0xb42d, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7d67, gbc.sp());
        EXPECT(0xa684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa683));
        EXPECT(0x92, gbc.readMem(0xb42d));
        // 1A 001B
        gbc.setState(0xd598, 0xde01, 0x11c0, 0x1295, 0xa80a, 0x6eb1, 0x0, 0x0);
        gbc.writeMem(0xa80a, { 0x3b });
        gbc.writeMem(0xd598, { 0x1a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xde01, gbc.sp());
        EXPECT(0xd599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa80a));
        EXPECT(0x1a, gbc.readMem(0xd598));
        // 1A 001C
        gbc.setState(0x5ee, 0x8121, 0xf0b0, 0x3089, 0x8869, 0x782c, 0x0, 0x0);
        gbc.writeMem(0x5ee, { 0x1a });
        gbc.writeMem(0x8869, { 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8121, gbc.sp());
        EXPECT(0x5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8869));
        // 1A 001D
        gbc.setState(0x2509, 0x43c0, 0x670, 0x6c46, 0xd64, 0x1e0b, 0x0, 0x1);
        gbc.writeMem(0xd64, { 0xd7 });
        gbc.writeMem(0x2509, { 0x1a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x43c0, gbc.sp());
        EXPECT(0x250a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 001E
        gbc.setState(0x9565, 0xd5fd, 0x4680, 0xd965, 0x410d, 0xab76, 0x0, 0x1);
        gbc.writeMem(0x410d, { 0xf4 });
        gbc.writeMem(0x9565, { 0x1a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd5fd, gbc.sp());
        EXPECT(0x9566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9565));
        // 1A 001F
        gbc.setState(0xafc0, 0x8ba3, 0x4710, 0x16bd, 0x9a8, 0x89ee, 0x1, 0x0);
        gbc.writeMem(0x9a8, { 0xbe });
        gbc.writeMem(0xafc0, { 0x1a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8ba3, gbc.sp());
        EXPECT(0xafc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xafc0));
        // 1A 0020
        gbc.setState(0x2cbd, 0x7a69, 0xed30, 0x8507, 0x3836, 0xa947, 0x0, 0x0);
        gbc.writeMem(0x2cbd, { 0x1a });
        gbc.writeMem(0x3836, { 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7a69, gbc.sp());
        EXPECT(0x2cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0021
        gbc.setState(0x7848, 0x3fce, 0xb720, 0xbd86, 0xe880, 0x3eef, 0x1, 0x1);
        gbc.writeMem(0x7848, { 0x1a });
        gbc.writeMem(0xe880, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3fce, gbc.sp());
        EXPECT(0x7849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xe880));
        // 1A 0022
        gbc.setState(0xab43, 0x557b, 0x5060, 0x344b, 0x2824, 0x3c2b, 0x0, 0x0);
        gbc.writeMem(0x2824, { 0x67 });
        gbc.writeMem(0xab43, { 0x1a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x557b, gbc.sp());
        EXPECT(0xab44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xab43));
        // 1A 0023
        gbc.setState(0x98e6, 0xebf5, 0x9580, 0x58f3, 0x32b4, 0x80fe, 0x0, 0x0);
        gbc.writeMem(0x32b4, { 0x79 });
        gbc.writeMem(0x98e6, { 0x1a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xebf5, gbc.sp());
        EXPECT(0x98e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x98e6));
        // 1A 0024
        gbc.setState(0x9904, 0xeb9d, 0x1d30, 0xaa3d, 0x9879, 0x57ce, 0x1, 0x1);
        gbc.writeMem(0x9879, { 0x2e });
        gbc.writeMem(0x9904, { 0x1a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xeb9d, gbc.sp());
        EXPECT(0x9905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x9879));
        EXPECT(0x1a, gbc.readMem(0x9904));
        // 1A 0025
        gbc.setState(0xb6fe, 0xd5ea, 0xcca0, 0xc0dc, 0x6a7b, 0x2de3, 0x0, 0x1);
        gbc.writeMem(0x6a7b, { 0xf5 });
        gbc.writeMem(0xb6fe, { 0x1a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd5ea, gbc.sp());
        EXPECT(0xb6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb6fe));
        // 1A 0026
        gbc.setState(0x4737, 0xb12d, 0x1540, 0xc2b7, 0x1f10, 0x4266, 0x0, 0x0);
        gbc.writeMem(0x1f10, { 0x6c });
        gbc.writeMem(0x4737, { 0x1a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb12d, gbc.sp());
        EXPECT(0x4738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0027
        gbc.setState(0x4960, 0xa714, 0xe430, 0xeeee, 0xf3e8, 0xbef0, 0x1, 0x0);
        gbc.writeMem(0x4960, { 0x1a });
        gbc.writeMem(0xf3e8, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa714, gbc.sp());
        EXPECT(0x4961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xf3e8));
        // 1A 0028
        gbc.setState(0xe0a3, 0x4e97, 0x8000, 0xfc08, 0xd69e, 0xb017, 0x1, 0x0);
        gbc.writeMem(0xd69e, { 0x89 });
        gbc.writeMem(0xe0a3, { 0x1a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4e97, gbc.sp());
        EXPECT(0xe0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd69e));
        EXPECT(0x1a, gbc.readMem(0xe0a3));
        // 1A 0029
        gbc.setState(0xaed7, 0x8031, 0xa1d0, 0x1cb, 0x2dd8, 0xabd2, 0x1, 0x1);
        gbc.writeMem(0x2dd8, { 0x55 });
        gbc.writeMem(0xaed7, { 0x1a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8031, gbc.sp());
        EXPECT(0xaed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xaed7));
        // 1A 002A
        gbc.setState(0x47c6, 0x5eaf, 0x98d0, 0x793e, 0xb025, 0x7a42, 0x0, 0x0);
        gbc.writeMem(0x47c6, { 0x1a });
        gbc.writeMem(0xb025, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5eaf, gbc.sp());
        EXPECT(0x47c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb025));
        // 1A 002B
        gbc.setState(0x8897, 0x1ab1, 0xa4b0, 0xea56, 0x3ff5, 0xe1e6, 0x0, 0x1);
        gbc.writeMem(0x3ff5, { 0x70 });
        gbc.writeMem(0x8897, { 0x1a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1ab1, gbc.sp());
        EXPECT(0x8898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8897));
        // 1A 002C
        gbc.setState(0xee1c, 0x4855, 0x70d0, 0xd493, 0xa299, 0x621, 0x1, 0x0);
        gbc.writeMem(0xa299, { 0xa9 });
        gbc.writeMem(0xee1c, { 0x1a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4855, gbc.sp());
        EXPECT(0xee1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xa299));
        EXPECT(0x1a, gbc.readMem(0xee1c));
        // 1A 002D
        gbc.setState(0x23fb, 0x5899, 0xf6b0, 0xc54a, 0x9afb, 0x4fad, 0x1, 0x0);
        gbc.writeMem(0x23fb, { 0x1a });
        gbc.writeMem(0x9afb, { 0xe5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5899, gbc.sp());
        EXPECT(0x23fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9afb));
        // 1A 002E
        gbc.setState(0x6a12, 0x2b27, 0xa20, 0xb482, 0x14f9, 0xe871, 0x0, 0x0);
        gbc.writeMem(0x14f9, { 0xa0 });
        gbc.writeMem(0x6a12, { 0x1a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2b27, gbc.sp());
        EXPECT(0x6a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 002F
        gbc.setState(0xde5f, 0xb58a, 0xd610, 0x62f7, 0x2e15, 0x8f6, 0x1, 0x0);
        gbc.writeMem(0x2e15, { 0x48 });
        gbc.writeMem(0xde5f, { 0x1a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb58a, gbc.sp());
        EXPECT(0xde60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xde5f));
        // 1A 0030
        gbc.setState(0x6d19, 0xd4e5, 0xe820, 0x34a7, 0x9c86, 0x5142, 0x1, 0x1);
        gbc.writeMem(0x6d19, { 0x1a });
        gbc.writeMem(0x9c86, { 0xef });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd4e5, gbc.sp());
        EXPECT(0x6d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x9c86));
        // 1A 0032
        gbc.setState(0x577c, 0xd605, 0x9d60, 0xb854, 0x113b, 0x3502, 0x1, 0x0);
        gbc.writeMem(0x113b, { 0xf7 });
        gbc.writeMem(0x577c, { 0x1a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd605, gbc.sp());
        EXPECT(0x577d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0033
        gbc.setState(0xe1ac, 0xd3e5, 0x8700, 0x3b21, 0x8b74, 0xec46, 0x1, 0x1);
        gbc.writeMem(0x8b74, { 0xbf });
        gbc.writeMem(0xe1ac, { 0x1a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd3e5, gbc.sp());
        EXPECT(0xe1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8b74));
        EXPECT(0x1a, gbc.readMem(0xe1ac));
        // 1A 0034
        gbc.setState(0xd829, 0x1b8e, 0x1650, 0x916a, 0x8589, 0x64e8, 0x0, 0x1);
        gbc.writeMem(0x8589, { 0x87 });
        gbc.writeMem(0xd829, { 0x1a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1b8e, gbc.sp());
        EXPECT(0xd82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8589));
        EXPECT(0x1a, gbc.readMem(0xd829));
        // 1A 0035
        gbc.setState(0xc65b, 0x5f38, 0xba70, 0x8e98, 0x1547, 0x1016, 0x0, 0x1);
        gbc.writeMem(0x1547, { 0xa1 });
        gbc.writeMem(0xc65b, { 0x1a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5f38, gbc.sp());
        EXPECT(0xc65c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc65b));
        // 1A 0036
        gbc.setState(0x7ec9, 0x729e, 0xdec0, 0x68f6, 0xd8c8, 0xf595, 0x1, 0x1);
        gbc.writeMem(0x7ec9, { 0x1a });
        gbc.writeMem(0xd8c8, { 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x729e, gbc.sp());
        EXPECT(0x7eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xd8c8));
        // 1A 0037
        gbc.setState(0x480d, 0xb029, 0x42b0, 0x9017, 0x4386, 0xd931, 0x0, 0x1);
        gbc.writeMem(0x4386, { 0x28 });
        gbc.writeMem(0x480d, { 0x1a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb029, gbc.sp());
        EXPECT(0x480e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0038
        gbc.setState(0xc79, 0x2b17, 0xda50, 0xbcfb, 0x9eb1, 0xfdf8, 0x1, 0x1);
        gbc.writeMem(0xc79, { 0x1a });
        gbc.writeMem(0x9eb1, { 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2b17, gbc.sp());
        EXPECT(0xc7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x9eb1));
        // 1A 0039
        gbc.setState(0x5985, 0x90ab, 0x97f0, 0xce65, 0xa9ce, 0x2a0e, 0x0, 0x1);
        gbc.writeMem(0x5985, { 0x1a });
        gbc.writeMem(0xa9ce, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x90ab, gbc.sp());
        EXPECT(0x5986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa9ce));
        // 1A 003A
        gbc.setState(0x10b2, 0x2d10, 0xcf30, 0x886b, 0x67b3, 0xcdeb, 0x0, 0x0);
        gbc.writeMem(0x10b2, { 0x1a });
        gbc.writeMem(0x67b3, { 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2d10, gbc.sp());
        EXPECT(0x10b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 003B
        gbc.setState(0x3dd6, 0x34a3, 0x4800, 0x38f, 0xdad, 0xb449, 0x1, 0x0);
        gbc.writeMem(0xdad, { 0x2b });
        gbc.writeMem(0x3dd6, { 0x1a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x34a3, gbc.sp());
        EXPECT(0x3dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 003C
        gbc.setState(0x3ec3, 0xc890, 0xa430, 0x9472, 0xbbb0, 0xcfa1, 0x1, 0x1);
        gbc.writeMem(0x3ec3, { 0x1a });
        gbc.writeMem(0xbbb0, { 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc890, gbc.sp());
        EXPECT(0x3ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbbb0));
        // 1A 003D
        gbc.setState(0x5b45, 0xef30, 0xedc0, 0xa285, 0xcfd6, 0xb4f7, 0x1, 0x1);
        gbc.writeMem(0x5b45, { 0x1a });
        gbc.writeMem(0xcfd6, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xef30, gbc.sp());
        EXPECT(0x5b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xcfd6));
        // 1A 003E
        gbc.setState(0x9f28, 0x1d17, 0x4c20, 0x1541, 0x7b4d, 0xba96, 0x0, 0x0);
        gbc.writeMem(0x7b4d, { 0x58 });
        gbc.writeMem(0x9f28, { 0x1a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1d17, gbc.sp());
        EXPECT(0x9f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9f28));
        // 1A 003F
        gbc.setState(0xbe28, 0xef26, 0x2490, 0x52e1, 0x396, 0x350e, 0x1, 0x0);
        gbc.writeMem(0x396, { 0xa4 });
        gbc.writeMem(0xbe28, { 0x1a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xef26, gbc.sp());
        EXPECT(0xbe29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbe28));
        // 1A 0040
        gbc.setState(0xe431, 0x5a1c, 0x8040, 0x584c, 0xa19f, 0xd4b7, 0x0, 0x0);
        gbc.writeMem(0xa19f, { 0xa3 });
        gbc.writeMem(0xe431, { 0x1a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5a1c, gbc.sp());
        EXPECT(0xe432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa19f));
        EXPECT(0x1a, gbc.readMem(0xe431));
        // 1A 0041
        gbc.setState(0x82a2, 0xa07d, 0x14b0, 0xaf38, 0x63c9, 0x1ce4, 0x0, 0x1);
        gbc.writeMem(0x63c9, { 0x6e });
        gbc.writeMem(0x82a2, { 0x1a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa07d, gbc.sp());
        EXPECT(0x82a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x82a2));
        // 1A 0042
        gbc.setState(0xe773, 0x48eb, 0x6770, 0xe035, 0x45c3, 0x19b3, 0x0, 0x0);
        gbc.writeMem(0x45c3, { 0x19 });
        gbc.writeMem(0xe773, { 0x1a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x48eb, gbc.sp());
        EXPECT(0xe774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe773));
        // 1A 0043
        gbc.setState(0xe5a7, 0xa5d4, 0x8560, 0x6fb6, 0x5af1, 0x295a, 0x0, 0x1);
        gbc.writeMem(0x5af1, { 0xe5 });
        gbc.writeMem(0xe5a7, { 0x1a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa5d4, gbc.sp());
        EXPECT(0xe5a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe5a7));
        // 1A 0044
        gbc.setState(0x31f1, 0x12c0, 0x9760, 0x7746, 0x9b1b, 0xbf6a, 0x0, 0x0);
        gbc.writeMem(0x31f1, { 0x1a });
        gbc.writeMem(0x9b1b, { 0x12 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x12c0, gbc.sp());
        EXPECT(0x31f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9b1b));
        // 1A 0045
        gbc.setState(0xa83a, 0xdd39, 0x1c40, 0x6b2d, 0x5655, 0xb687, 0x1, 0x0);
        gbc.writeMem(0x5655, { 0xf9 });
        gbc.writeMem(0xa83a, { 0x1a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdd39, gbc.sp());
        EXPECT(0xa83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa83a));
        // 1A 0046
        gbc.setState(0x178c, 0xba8d, 0x56d0, 0x59e7, 0x16ff, 0xa7a9, 0x0, 0x1);
        gbc.writeMem(0x16ff, { 0x63 });
        gbc.writeMem(0x178c, { 0x1a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xba8d, gbc.sp());
        EXPECT(0x178d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0047
        gbc.setState(0x67b9, 0x15ae, 0xe9a0, 0x8b7, 0xaec0, 0x401a, 0x1, 0x1);
        gbc.writeMem(0x67b9, { 0x1a });
        gbc.writeMem(0xaec0, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x15ae, gbc.sp());
        EXPECT(0x67ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xaec0));
        // 1A 0048
        gbc.setState(0xe669, 0x7cf8, 0xd800, 0x3bb8, 0xa9a5, 0x525b, 0x1, 0x0);
        gbc.writeMem(0xa9a5, { 0xeb });
        gbc.writeMem(0xe669, { 0x1a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7cf8, gbc.sp());
        EXPECT(0xe66a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa9a5));
        EXPECT(0x1a, gbc.readMem(0xe669));
        // 1A 0049
        gbc.setState(0x80fd, 0x7051, 0xc4a0, 0xd56f, 0xc781, 0x2414, 0x0, 0x0);
        gbc.writeMem(0x80fd, { 0x1a });
        gbc.writeMem(0xc781, { 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7051, gbc.sp());
        EXPECT(0x80fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x80fd));
        EXPECT(0x26, gbc.readMem(0xc781));
        // 1A 004A
        gbc.setState(0x527d, 0x1e3a, 0xfbd0, 0x44f6, 0x1f9f, 0x669b, 0x0, 0x1);
        gbc.writeMem(0x1f9f, { 0xba });
        gbc.writeMem(0x527d, { 0x1a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1e3a, gbc.sp());
        EXPECT(0x527e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 004B
        gbc.setState(0x490d, 0x6298, 0xc310, 0xd156, 0x79ba, 0xc029, 0x0, 0x0);
        gbc.writeMem(0x490d, { 0x1a });
        gbc.writeMem(0x79ba, { 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6298, gbc.sp());
        EXPECT(0x490e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 004C
        gbc.setState(0x5555, 0x2e40, 0x4350, 0xef7a, 0x143a, 0x826a, 0x0, 0x0);
        gbc.writeMem(0x143a, { 0x46 });
        gbc.writeMem(0x5555, { 0x1a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2e40, gbc.sp());
        EXPECT(0x5556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 004D
        gbc.setState(0x7091, 0xaa62, 0x1820, 0x25f0, 0x26e8, 0xa08d, 0x0, 0x1);
        gbc.writeMem(0x26e8, { 0x94 });
        gbc.writeMem(0x7091, { 0x1a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xaa62, gbc.sp());
        EXPECT(0x7092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 004E
        gbc.setState(0xedf1, 0x738, 0x2300, 0xe56, 0xe6c2, 0xe744, 0x0, 0x1);
        gbc.writeMem(0xe6c2, { 0xbf });
        gbc.writeMem(0xedf1, { 0x1a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x738, gbc.sp());
        EXPECT(0xedf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe6c2));
        EXPECT(0x1a, gbc.readMem(0xedf1));
        // 1A 004F
        gbc.setState(0x88d2, 0x2966, 0x9060, 0x72b0, 0xfe6, 0x9caa, 0x1, 0x1);
        gbc.writeMem(0xfe6, { 0x1b });
        gbc.writeMem(0x88d2, { 0x1a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2966, gbc.sp());
        EXPECT(0x88d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x88d2));
        // 1A 0050
        gbc.setState(0xc916, 0xcfa6, 0x8530, 0xb92e, 0xd379, 0xcb85, 0x0, 0x1);
        gbc.writeMem(0xc916, { 0x1a });
        gbc.writeMem(0xd379, { 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcfa6, gbc.sp());
        EXPECT(0xc917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc916));
        EXPECT(0x20, gbc.readMem(0xd379));
        // 1A 0051
        gbc.setState(0x40d8, 0x881b, 0x9f90, 0x89f9, 0x610c, 0x916, 0x0, 0x1);
        gbc.writeMem(0x40d8, { 0x1a });
        gbc.writeMem(0x610c, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x881b, gbc.sp());
        EXPECT(0x40d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0052
        gbc.setState(0x1366, 0xcb90, 0x1940, 0x8ed2, 0x642, 0x23ef, 0x0, 0x0);
        gbc.writeMem(0x642, { 0xc2 });
        gbc.writeMem(0x1366, { 0x1a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcb90, gbc.sp());
        EXPECT(0x1367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0053
        gbc.setState(0x2eca, 0x15c, 0x6f80, 0xcd56, 0xcc23, 0xd19a, 0x0, 0x1);
        gbc.writeMem(0x2eca, { 0x1a });
        gbc.writeMem(0xcc23, { 0xca });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x15c, gbc.sp());
        EXPECT(0x2ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xcc23));
        // 1A 0054
        gbc.setState(0x84c3, 0xbbe2, 0x7800, 0x8937, 0x8f77, 0x5ccc, 0x0, 0x0);
        gbc.writeMem(0x84c3, { 0x1a });
        gbc.writeMem(0x8f77, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbbe2, gbc.sp());
        EXPECT(0x84c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x84c3));
        EXPECT(0x24, gbc.readMem(0x8f77));
        // 1A 0055
        gbc.setState(0x263b, 0x75cf, 0xcc10, 0xda88, 0x3aa0, 0x42ba, 0x0, 0x1);
        gbc.writeMem(0x263b, { 0x1a });
        gbc.writeMem(0x3aa0, { 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x75cf, gbc.sp());
        EXPECT(0x263c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0056
        gbc.setState(0xa9df, 0xa267, 0xc030, 0xcbd8, 0x4d26, 0x129e, 0x0, 0x1);
        gbc.writeMem(0x4d26, { 0x43 });
        gbc.writeMem(0xa9df, { 0x1a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa267, gbc.sp());
        EXPECT(0xa9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa9df));
        // 1A 0058
        gbc.setState(0xa216, 0xc699, 0x7080, 0x7c13, 0x164f, 0x3ea0, 0x1, 0x1);
        gbc.writeMem(0x164f, { 0x66 });
        gbc.writeMem(0xa216, { 0x1a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc699, gbc.sp());
        EXPECT(0xa217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa216));
        // 1A 0059
        gbc.setState(0xb6a, 0x4d9a, 0xd480, 0x71ad, 0x6bd7, 0x3fc7, 0x1, 0x0);
        gbc.writeMem(0xb6a, { 0x1a });
        gbc.writeMem(0x6bd7, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4d9a, gbc.sp());
        EXPECT(0xb6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 005B
        gbc.setState(0xea31, 0xd792, 0xea50, 0xfb07, 0xdb61, 0xa1d7, 0x1, 0x1);
        gbc.writeMem(0xdb61, { 0xff });
        gbc.writeMem(0xea31, { 0x1a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd792, gbc.sp());
        EXPECT(0xea32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xdb61));
        EXPECT(0x1a, gbc.readMem(0xea31));
        // 1A 005C
        gbc.setState(0x7529, 0xf2c8, 0xdde0, 0xc31c, 0x900f, 0xc347, 0x0, 0x0);
        gbc.writeMem(0x7529, { 0x1a });
        gbc.writeMem(0x900f, { 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf2c8, gbc.sp());
        EXPECT(0x752a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x900f));
        // 1A 005D
        gbc.setState(0xdacd, 0xd287, 0xe3f0, 0x5cab, 0xd06e, 0x9f75, 0x1, 0x0);
        gbc.writeMem(0xd06e, { 0x46 });
        gbc.writeMem(0xdacd, { 0x1a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd287, gbc.sp());
        EXPECT(0xdace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xd06e));
        EXPECT(0x1a, gbc.readMem(0xdacd));
        // 1A 005E
        gbc.setState(0x9627, 0x6300, 0xe710, 0xd651, 0x4bcb, 0xe589, 0x1, 0x1);
        gbc.writeMem(0x4bcb, { 0xff });
        gbc.writeMem(0x9627, { 0x1a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6300, gbc.sp());
        EXPECT(0x9628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9627));
        // 1A 005F
        gbc.setState(0x6711, 0x6153, 0x2550, 0xad76, 0x646e, 0xdbf7, 0x0, 0x1);
        gbc.writeMem(0x646e, { 0x3a });
        gbc.writeMem(0x6711, { 0x1a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6153, gbc.sp());
        EXPECT(0x6712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0060
        gbc.setState(0xbbdf, 0x8d48, 0x5680, 0x3e45, 0xb80, 0x1887, 0x1, 0x0);
        gbc.writeMem(0xb80, { 0xb1 });
        gbc.writeMem(0xbbdf, { 0x1a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8d48, gbc.sp());
        EXPECT(0xbbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbbdf));
        // 1A 0061
        gbc.setState(0x4111, 0x401c, 0x1040, 0xef83, 0xee2a, 0x9d65, 0x0, 0x0);
        gbc.writeMem(0x4111, { 0x1a });
        gbc.writeMem(0xee2a, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x401c, gbc.sp());
        EXPECT(0x4112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xee2a));
        // 1A 0062
        gbc.setState(0x8484, 0xb3e0, 0xa370, 0xa9c, 0xea14, 0xb070, 0x0, 0x1);
        gbc.writeMem(0x8484, { 0x1a });
        gbc.writeMem(0xea14, { 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb3e0, gbc.sp());
        EXPECT(0x8485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8484));
        EXPECT(0x43, gbc.readMem(0xea14));
        // 1A 0063
        gbc.setState(0x2610, 0xc720, 0x5d10, 0x1610, 0xbd86, 0x7450, 0x1, 0x0);
        gbc.writeMem(0x2610, { 0x1a });
        gbc.writeMem(0xbd86, { 0xd3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc720, gbc.sp());
        EXPECT(0x2611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xbd86));
        // 1A 0064
        gbc.setState(0x457c, 0xf4f7, 0xbd10, 0xc937, 0xdc67, 0x7cf1, 0x1, 0x1);
        gbc.writeMem(0x457c, { 0x1a });
        gbc.writeMem(0xdc67, { 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf4f7, gbc.sp());
        EXPECT(0x457d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xdc67));
        // 1A 0066
        gbc.setState(0x96e8, 0x21aa, 0xd9d0, 0x2663, 0xc9f6, 0xc20a, 0x0, 0x0);
        gbc.writeMem(0x96e8, { 0x1a });
        gbc.writeMem(0xc9f6, { 0xd3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x21aa, gbc.sp());
        EXPECT(0x96e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x96e8));
        EXPECT(0xd3, gbc.readMem(0xc9f6));
        // 1A 0067
        gbc.setState(0xd0c, 0x8640, 0x73c0, 0x2825, 0x7fe9, 0x9544, 0x0, 0x0);
        gbc.writeMem(0xd0c, { 0x1a });
        gbc.writeMem(0x7fe9, { 0xef });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8640, gbc.sp());
        EXPECT(0xd0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0068
        gbc.setState(0x3bdf, 0x1522, 0xaf0, 0x41a5, 0xe0a0, 0x387, 0x1, 0x1);
        gbc.writeMem(0x3bdf, { 0x1a });
        gbc.writeMem(0xe0a0, { 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1522, gbc.sp());
        EXPECT(0x3be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe0a0));
        // 1A 0069
        gbc.setState(0x83e8, 0x341d, 0xd9c0, 0x86ff, 0x5346, 0x271f, 0x1, 0x0);
        gbc.writeMem(0x5346, { 0xa3 });
        gbc.writeMem(0x83e8, { 0x1a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x341d, gbc.sp());
        EXPECT(0x83e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x83e8));
        // 1A 006A
        gbc.setState(0xaecb, 0x29d6, 0xbed0, 0xe064, 0x663c, 0x8187, 0x1, 0x1);
        gbc.writeMem(0x663c, { 0xb5 });
        gbc.writeMem(0xaecb, { 0x1a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x29d6, gbc.sp());
        EXPECT(0xaecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xaecb));
        // 1A 006B
        gbc.setState(0x91ca, 0xf946, 0x9a10, 0x2704, 0xb8fa, 0x9f43, 0x0, 0x0);
        gbc.writeMem(0x91ca, { 0x1a });
        gbc.writeMem(0xb8fa, { 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf946, gbc.sp());
        EXPECT(0x91cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x91ca));
        EXPECT(0x64, gbc.readMem(0xb8fa));
        // 1A 006C
        gbc.setState(0x78e3, 0x240f, 0xcb10, 0xc4d0, 0x571f, 0x6c11, 0x1, 0x1);
        gbc.writeMem(0x571f, { 0xb7 });
        gbc.writeMem(0x78e3, { 0x1a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x240f, gbc.sp());
        EXPECT(0x78e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 006D
        gbc.setState(0x6a6b, 0x6cc9, 0x3ca0, 0xf857, 0x280f, 0x8fb2, 0x0, 0x1);
        gbc.writeMem(0x280f, { 0xbf });
        gbc.writeMem(0x6a6b, { 0x1a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6cc9, gbc.sp());
        EXPECT(0x6a6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 006E
        gbc.setState(0x159c, 0x573, 0xe60, 0xca91, 0xd277, 0xcc5, 0x0, 0x1);
        gbc.writeMem(0x159c, { 0x1a });
        gbc.writeMem(0xd277, { 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x573, gbc.sp());
        EXPECT(0x159d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xd277));
        // 1A 006F
        gbc.setState(0x665d, 0xfc96, 0x7d60, 0x3b66, 0x4c9c, 0xd2b, 0x0, 0x1);
        gbc.writeMem(0x4c9c, { 0x89 });
        gbc.writeMem(0x665d, { 0x1a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfc96, gbc.sp());
        EXPECT(0x665e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0070
        gbc.setState(0x49ac, 0x73d9, 0x6ac0, 0x1c47, 0x87af, 0x4978, 0x0, 0x0);
        gbc.writeMem(0x49ac, { 0x1a });
        gbc.writeMem(0x87af, { 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x73d9, gbc.sp());
        EXPECT(0x49ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x87af));
        // 1A 0071
        gbc.setState(0x2108, 0x12b5, 0xcc50, 0x420d, 0x3267, 0xde0c, 0x0, 0x1);
        gbc.writeMem(0x2108, { 0x1a });
        gbc.writeMem(0x3267, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x12b5, gbc.sp());
        EXPECT(0x2109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0072
        gbc.setState(0xdac0, 0xd96, 0x4230, 0x2bf1, 0xad25, 0xd365, 0x0, 0x1);
        gbc.writeMem(0xad25, { 0x64 });
        gbc.writeMem(0xdac0, { 0x1a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd96, gbc.sp());
        EXPECT(0xdac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xad25));
        EXPECT(0x1a, gbc.readMem(0xdac0));
        // 1A 0073
        gbc.setState(0xa91e, 0xf54f, 0x8e10, 0xb829, 0x4558, 0xccd, 0x0, 0x1);
        gbc.writeMem(0x4558, { 0xa8 });
        gbc.writeMem(0xa91e, { 0x1a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf54f, gbc.sp());
        EXPECT(0xa91f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa91e));
        // 1A 0074
        gbc.setState(0x189, 0xa57f, 0x8bf0, 0x5c53, 0xb810, 0x43c6, 0x0, 0x1);
        gbc.writeMem(0x189, { 0x1a });
        gbc.writeMem(0xb810, { 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa57f, gbc.sp());
        EXPECT(0x18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb810));
        // 1A 0075
        gbc.setState(0x4dd5, 0x7584, 0xba0, 0xc64c, 0xd5b, 0x6bfb, 0x0, 0x1);
        gbc.writeMem(0xd5b, { 0x70 });
        gbc.writeMem(0x4dd5, { 0x1a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7584, gbc.sp());
        EXPECT(0x4dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0076
        gbc.setState(0x1ac5, 0x965e, 0xc5b0, 0x3c1b, 0xdbe4, 0x53b8, 0x1, 0x0);
        gbc.writeMem(0x1ac5, { 0x1a });
        gbc.writeMem(0xdbe4, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x965e, gbc.sp());
        EXPECT(0x1ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdbe4));
        // 1A 0077
        gbc.setState(0xe45, 0x39dd, 0x94d0, 0xf0d1, 0xd16c, 0x59ce, 0x0, 0x1);
        gbc.writeMem(0xe45, { 0x1a });
        gbc.writeMem(0xd16c, { 0x3f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x39dd, gbc.sp());
        EXPECT(0xe46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd16c));
        // 1A 0078
        gbc.setState(0x18f6, 0x71b0, 0xfab0, 0xc46e, 0xcaae, 0x1cf, 0x0, 0x1);
        gbc.writeMem(0x18f6, { 0x1a });
        gbc.writeMem(0xcaae, { 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x71b0, gbc.sp());
        EXPECT(0x18f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xcaae));
        // 1A 0079
        gbc.setState(0x9eda, 0x1f7f, 0x5640, 0x76b9, 0x93cf, 0xc5e8, 0x0, 0x1);
        gbc.writeMem(0x93cf, { 0x88 });
        gbc.writeMem(0x9eda, { 0x1a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1f7f, gbc.sp());
        EXPECT(0x9edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x93cf));
        EXPECT(0x1a, gbc.readMem(0x9eda));
        // 1A 007A
        gbc.setState(0x77b1, 0xe47, 0x450, 0xb568, 0xacfc, 0x2160, 0x1, 0x0);
        gbc.writeMem(0x77b1, { 0x1a });
        gbc.writeMem(0xacfc, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe47, gbc.sp());
        EXPECT(0x77b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xacfc));
        // 1A 007B
        gbc.setState(0x2839, 0x891b, 0xa7e0, 0xd6e0, 0x723b, 0xabf, 0x1, 0x0);
        gbc.writeMem(0x2839, { 0x1a });
        gbc.writeMem(0x723b, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x891b, gbc.sp());
        EXPECT(0x283a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 007C
        gbc.setState(0x8d34, 0x3b5e, 0xbd80, 0xf8d8, 0x5c69, 0x5649, 0x0, 0x0);
        gbc.writeMem(0x5c69, { 0x38 });
        gbc.writeMem(0x8d34, { 0x1a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3b5e, gbc.sp());
        EXPECT(0x8d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8d34));
        // 1A 007D
        gbc.setState(0x30f0, 0xf705, 0x8410, 0x824d, 0x65cf, 0x25f0, 0x0, 0x1);
        gbc.writeMem(0x30f0, { 0x1a });
        gbc.writeMem(0x65cf, { 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf705, gbc.sp());
        EXPECT(0x30f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 007E
        gbc.setState(0xa045, 0x257b, 0xe020, 0x2980, 0x304c, 0x2b82, 0x0, 0x0);
        gbc.writeMem(0x304c, { 0x77 });
        gbc.writeMem(0xa045, { 0x1a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x257b, gbc.sp());
        EXPECT(0xa046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa045));
        // 1A 007F
        gbc.setState(0x117, 0xa0e, 0xa500, 0xdeac, 0x5b7, 0xdb5d, 0x0, 0x1);
        gbc.writeMem(0x117, { 0x1a });
        gbc.writeMem(0x5b7, { 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa0e, gbc.sp());
        EXPECT(0x118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0080
        gbc.setState(0xcbda, 0xdc34, 0x3ce0, 0x253, 0x6d54, 0xf425, 0x1, 0x0);
        gbc.writeMem(0x6d54, { 0x89 });
        gbc.writeMem(0xcbda, { 0x1a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdc34, gbc.sp());
        EXPECT(0xcbdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xcbda));
        // 1A 0081
        gbc.setState(0xa481, 0xdba3, 0xacc0, 0xc2a5, 0x834d, 0x10ed, 0x1, 0x0);
        gbc.writeMem(0x834d, { 0x7c });
        gbc.writeMem(0xa481, { 0x1a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdba3, gbc.sp());
        EXPECT(0xa482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x834d));
        EXPECT(0x1a, gbc.readMem(0xa481));
        // 1A 0082
        gbc.setState(0x95a5, 0x25bc, 0x1e60, 0xabad, 0x9d76, 0xe49b, 0x1, 0x1);
        gbc.writeMem(0x95a5, { 0x1a });
        gbc.writeMem(0x9d76, { 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x25bc, gbc.sp());
        EXPECT(0x95a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x95a5));
        EXPECT(0x4a, gbc.readMem(0x9d76));
        // 1A 0084
        gbc.setState(0xaee2, 0xe1f0, 0x24d0, 0xed73, 0x4952, 0x5687, 0x1, 0x0);
        gbc.writeMem(0x4952, { 0x6b });
        gbc.writeMem(0xaee2, { 0x1a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe1f0, gbc.sp());
        EXPECT(0xaee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xaee2));
        // 1A 0085
        gbc.setState(0x2161, 0x384b, 0x5780, 0x8541, 0xa89, 0x4682, 0x0, 0x1);
        gbc.writeMem(0xa89, { 0x19 });
        gbc.writeMem(0x2161, { 0x1a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x384b, gbc.sp());
        EXPECT(0x2162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0087
        gbc.setState(0x2061, 0xcb3f, 0xc6f0, 0xb719, 0xdfda, 0x5871, 0x1, 0x1);
        gbc.writeMem(0x2061, { 0x1a });
        gbc.writeMem(0xdfda, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcb3f, gbc.sp());
        EXPECT(0x2062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdfda));
        // 1A 0088
        gbc.setState(0xbc55, 0xc815, 0x3ac0, 0x665b, 0x3896, 0x8803, 0x0, 0x1);
        gbc.writeMem(0x3896, { 0x95 });
        gbc.writeMem(0xbc55, { 0x1a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc815, gbc.sp());
        EXPECT(0xbc56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbc55));
        // 1A 0089
        gbc.setState(0x4ee0, 0x80bd, 0xa540, 0x65cd, 0xc8e0, 0x3cf3, 0x0, 0x1);
        gbc.writeMem(0x4ee0, { 0x1a });
        gbc.writeMem(0xc8e0, { 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x80bd, gbc.sp());
        EXPECT(0x4ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc8e0));
        // 1A 008A
        gbc.setState(0x308e, 0xf6f7, 0x9040, 0xe4fd, 0xed18, 0x1fb, 0x0, 0x1);
        gbc.writeMem(0x308e, { 0x1a });
        gbc.writeMem(0xed18, { 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf6f7, gbc.sp());
        EXPECT(0x308f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xed18));
        // 1A 008C
        gbc.setState(0x1507, 0x88b, 0x5480, 0x493d, 0xe42b, 0x1fd8, 0x0, 0x1);
        gbc.writeMem(0x1507, { 0x1a });
        gbc.writeMem(0xe42b, { 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x88b, gbc.sp());
        EXPECT(0x1508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xe42b));
        // 1A 008D
        gbc.setState(0x4e2a, 0x82b3, 0x85b0, 0x7444, 0x976f, 0x388f, 0x0, 0x1);
        gbc.writeMem(0x4e2a, { 0x1a });
        gbc.writeMem(0x976f, { 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x82b3, gbc.sp());
        EXPECT(0x4e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x976f));
        // 1A 008E
        gbc.setState(0xa0c0, 0x5ad3, 0x2870, 0xd8c6, 0x9b05, 0x41d9, 0x0, 0x1);
        gbc.writeMem(0x9b05, { 0x3 });
        gbc.writeMem(0xa0c0, { 0x1a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5ad3, gbc.sp());
        EXPECT(0xa0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9b05));
        EXPECT(0x1a, gbc.readMem(0xa0c0));
        // 1A 008F
        gbc.setState(0x8b6, 0xbb15, 0xc220, 0xac64, 0x8f31, 0x49e0, 0x0, 0x0);
        gbc.writeMem(0x8b6, { 0x1a });
        gbc.writeMem(0x8f31, { 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbb15, gbc.sp());
        EXPECT(0x8b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x8f31));
        // 1A 0090
        gbc.setState(0x7438, 0xa660, 0xd150, 0xf395, 0xd637, 0x2b04, 0x1, 0x1);
        gbc.writeMem(0x7438, { 0x1a });
        gbc.writeMem(0xd637, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa660, gbc.sp());
        EXPECT(0x7439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xd637));
        // 1A 0092
        gbc.setState(0xa740, 0x2636, 0xc520, 0x6019, 0x923d, 0x9930, 0x0, 0x1);
        gbc.writeMem(0x923d, { 0x74 });
        gbc.writeMem(0xa740, { 0x1a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2636, gbc.sp());
        EXPECT(0xa741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x923d));
        EXPECT(0x1a, gbc.readMem(0xa740));
        // 1A 0093
        gbc.setState(0xe0fc, 0xe935, 0xab40, 0xd528, 0xa53, 0x9892, 0x1, 0x1);
        gbc.writeMem(0xa53, { 0x82 });
        gbc.writeMem(0xe0fc, { 0x1a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe935, gbc.sp());
        EXPECT(0xe0fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe0fc));
        // 1A 0094
        gbc.setState(0x5954, 0x8879, 0x78f0, 0xe7c4, 0x5e17, 0x2dd0, 0x1, 0x1);
        gbc.writeMem(0x5954, { 0x1a });
        gbc.writeMem(0x5e17, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8879, gbc.sp());
        EXPECT(0x5955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0095
        gbc.setState(0x7f28, 0xd870, 0xc430, 0x3a50, 0xfde6, 0x616, 0x1, 0x0);
        gbc.writeMem(0x7f28, { 0x1a });
        gbc.writeMem(0xfde6, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd870, gbc.sp());
        EXPECT(0x7f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xfde6));
        // 1A 0096
        gbc.setState(0x12a1, 0x93d0, 0x5480, 0xfaa8, 0xf55e, 0x1a27, 0x0, 0x1);
        gbc.writeMem(0x12a1, { 0x1a });
        gbc.writeMem(0xf55e, { 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x93d0, gbc.sp());
        EXPECT(0x12a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xf55e));
        // 1A 0097
        gbc.setState(0xdf61, 0x1731, 0x13f0, 0x18c1, 0x578f, 0x1b58, 0x1, 0x0);
        gbc.writeMem(0x578f, { 0x35 });
        gbc.writeMem(0xdf61, { 0x1a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1731, gbc.sp());
        EXPECT(0xdf62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdf61));
        // 1A 0098
        gbc.setState(0xaeb7, 0x78c1, 0x3fd0, 0xed85, 0x8de8, 0xf844, 0x0, 0x1);
        gbc.writeMem(0x8de8, { 0x56 });
        gbc.writeMem(0xaeb7, { 0x1a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x78c1, gbc.sp());
        EXPECT(0xaeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8de8));
        EXPECT(0x1a, gbc.readMem(0xaeb7));
        // 1A 0099
        gbc.setState(0x9e5d, 0x42f9, 0x1970, 0xead, 0x38ac, 0x7828, 0x1, 0x1);
        gbc.writeMem(0x38ac, { 0x2b });
        gbc.writeMem(0x9e5d, { 0x1a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x42f9, gbc.sp());
        EXPECT(0x9e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9e5d));
        // 1A 009A
        gbc.setState(0x789a, 0x1536, 0x48f0, 0xa15f, 0xbd1c, 0x8be6, 0x0, 0x0);
        gbc.writeMem(0x789a, { 0x1a });
        gbc.writeMem(0xbd1c, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1536, gbc.sp());
        EXPECT(0x789b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xbd1c));
        // 1A 009B
        gbc.setState(0x57b9, 0x80ec, 0x63b0, 0x5511, 0x4538, 0x2e62, 0x1, 0x0);
        gbc.writeMem(0x4538, { 0x8b });
        gbc.writeMem(0x57b9, { 0x1a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x80ec, gbc.sp());
        EXPECT(0x57ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 009C
        gbc.setState(0x42d7, 0x5511, 0x3cc0, 0x7521, 0xa47a, 0xc31, 0x0, 0x1);
        gbc.writeMem(0x42d7, { 0x1a });
        gbc.writeMem(0xa47a, { 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5511, gbc.sp());
        EXPECT(0x42d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xa47a));
        // 1A 009D
        gbc.setState(0x359a, 0x9ca9, 0xb790, 0xd38, 0xbf6c, 0xb923, 0x1, 0x1);
        gbc.writeMem(0x359a, { 0x1a });
        gbc.writeMem(0xbf6c, { 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9ca9, gbc.sp());
        EXPECT(0x359b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbf6c));
        // 1A 009E
        gbc.setState(0x6b51, 0xf537, 0xbb30, 0xde81, 0xa6a, 0xc76, 0x0, 0x0);
        gbc.writeMem(0xa6a, { 0x9c });
        gbc.writeMem(0x6b51, { 0x1a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf537, gbc.sp());
        EXPECT(0x6b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 009F
        gbc.setState(0x8e77, 0x91bd, 0xa900, 0x19a0, 0x6f4e, 0x74a5, 0x0, 0x1);
        gbc.writeMem(0x6f4e, { 0x1 });
        gbc.writeMem(0x8e77, { 0x1a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x91bd, gbc.sp());
        EXPECT(0x8e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8e77));
        // 1A 00A0
        gbc.setState(0x53fc, 0xee6a, 0xf220, 0xeab3, 0xf42, 0x8c70, 0x1, 0x1);
        gbc.writeMem(0xf42, { 0x94 });
        gbc.writeMem(0x53fc, { 0x1a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xee6a, gbc.sp());
        EXPECT(0x53fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00A1
        gbc.setState(0xaa1e, 0xaf11, 0xfd30, 0xd6fe, 0x3c80, 0xc758, 0x0, 0x1);
        gbc.writeMem(0x3c80, { 0x7e });
        gbc.writeMem(0xaa1e, { 0x1a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xaf11, gbc.sp());
        EXPECT(0xaa1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xaa1e));
        // 1A 00A2
        gbc.setState(0x4e6d, 0x9b9e, 0x3290, 0xc6b8, 0xb066, 0xff41, 0x0, 0x0);
        gbc.writeMem(0x4e6d, { 0x1a });
        gbc.writeMem(0xb066, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9b9e, gbc.sp());
        EXPECT(0x4e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb066));
        // 1A 00A3
        gbc.setState(0xee24, 0x570f, 0xfc10, 0x88c5, 0x81a3, 0x1686, 0x0, 0x1);
        gbc.writeMem(0x81a3, { 0x27 });
        gbc.writeMem(0xee24, { 0x1a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x570f, gbc.sp());
        EXPECT(0xee25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x81a3));
        EXPECT(0x1a, gbc.readMem(0xee24));
        // 1A 00A4
        gbc.setState(0x23b9, 0x3544, 0xc570, 0x7985, 0xf67c, 0x71b6, 0x0, 0x1);
        gbc.writeMem(0x23b9, { 0x1a });
        gbc.writeMem(0xf67c, { 0x12 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3544, gbc.sp());
        EXPECT(0x23ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xf67c));
        // 1A 00A5
        gbc.setState(0x9fc4, 0x6cd9, 0x2b50, 0xcf1, 0x6a95, 0x7633, 0x0, 0x0);
        gbc.writeMem(0x6a95, { 0x4b });
        gbc.writeMem(0x9fc4, { 0x1a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6cd9, gbc.sp());
        EXPECT(0x9fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9fc4));
        // 1A 00A6
        gbc.setState(0xd944, 0xe010, 0xa700, 0x2909, 0x4ebe, 0xb686, 0x0, 0x0);
        gbc.writeMem(0x4ebe, { 0xf });
        gbc.writeMem(0xd944, { 0x1a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe010, gbc.sp());
        EXPECT(0xd945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd944));
        // 1A 00A7
        gbc.setState(0xe410, 0x4c84, 0x4ce0, 0x7ad9, 0x3b82, 0xc1eb, 0x0, 0x0);
        gbc.writeMem(0x3b82, { 0x5e });
        gbc.writeMem(0xe410, { 0x1a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4c84, gbc.sp());
        EXPECT(0xe411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe410));
        // 1A 00A9
        gbc.setState(0x50b5, 0x6e2d, 0x14a0, 0x4886, 0x2750, 0x6088, 0x0, 0x0);
        gbc.writeMem(0x2750, { 0x1b });
        gbc.writeMem(0x50b5, { 0x1a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6e2d, gbc.sp());
        EXPECT(0x50b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00AA
        gbc.setState(0x1aaa, 0xbfe6, 0x18a0, 0x95dc, 0x4cd8, 0xa3fe, 0x0, 0x1);
        gbc.writeMem(0x1aaa, { 0x1a });
        gbc.writeMem(0x4cd8, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xbfe6, gbc.sp());
        EXPECT(0x1aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00AB
        gbc.setState(0xb39d, 0x9d1d, 0x2670, 0xa53b, 0xc1d7, 0x995f, 0x1, 0x0);
        gbc.writeMem(0xb39d, { 0x1a });
        gbc.writeMem(0xc1d7, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9d1d, gbc.sp());
        EXPECT(0xb39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb39d));
        EXPECT(0xbf, gbc.readMem(0xc1d7));
        // 1A 00AC
        gbc.setState(0x8d87, 0x98b, 0x2f60, 0x46cd, 0x2293, 0x6eb6, 0x1, 0x1);
        gbc.writeMem(0x2293, { 0x74 });
        gbc.writeMem(0x8d87, { 0x1a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x98b, gbc.sp());
        EXPECT(0x8d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8d87));
        // 1A 00AD
        gbc.setState(0x650f, 0x63f, 0xc710, 0x4e89, 0x7e77, 0xee3b, 0x0, 0x0);
        gbc.writeMem(0x650f, { 0x1a });
        gbc.writeMem(0x7e77, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x63f, gbc.sp());
        EXPECT(0x6510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 00AE
        gbc.setState(0x64cc, 0x57ff, 0x6760, 0xacfa, 0x5998, 0xc317, 0x0, 0x0);
        gbc.writeMem(0x5998, { 0xb1 });
        gbc.writeMem(0x64cc, { 0x1a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x57ff, gbc.sp());
        EXPECT(0x64cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00AF
        gbc.setState(0xdb62, 0x314e, 0x72b0, 0x1c4c, 0x76c8, 0x8e85, 0x0, 0x1);
        gbc.writeMem(0x76c8, { 0xa6 });
        gbc.writeMem(0xdb62, { 0x1a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x314e, gbc.sp());
        EXPECT(0xdb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdb62));
        // 1A 00B0
        gbc.setState(0x3698, 0x79d0, 0x68c0, 0xc6fc, 0x912, 0x6f43, 0x1, 0x0);
        gbc.writeMem(0x912, { 0x46 });
        gbc.writeMem(0x3698, { 0x1a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x79d0, gbc.sp());
        EXPECT(0x3699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00B1
        gbc.setState(0x4866, 0x8249, 0x9c50, 0x2c38, 0x71be, 0xe2d9, 0x1, 0x1);
        gbc.writeMem(0x4866, { 0x1a });
        gbc.writeMem(0x71be, { 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8249, gbc.sp());
        EXPECT(0x4867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 00B2
        gbc.setState(0x4f4f, 0xd4a5, 0xca40, 0x9691, 0x4926, 0xa16e, 0x0, 0x1);
        gbc.writeMem(0x4926, { 0xf2 });
        gbc.writeMem(0x4f4f, { 0x1a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd4a5, gbc.sp());
        EXPECT(0x4f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00B3
        gbc.setState(0x7117, 0x3c9, 0xb380, 0xab00, 0x33c, 0xf7d1, 0x1, 0x0);
        gbc.writeMem(0x33c, { 0x97 });
        gbc.writeMem(0x7117, { 0x1a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3c9, gbc.sp());
        EXPECT(0x7118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00B4
        gbc.setState(0x8dfe, 0xfe65, 0xe070, 0xc7da, 0x3aae, 0x5a33, 0x1, 0x1);
        gbc.writeMem(0x3aae, { 0x9c });
        gbc.writeMem(0x8dfe, { 0x1a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfe65, gbc.sp());
        EXPECT(0x8dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8dfe));
        // 1A 00B5
        gbc.setState(0xe6c5, 0x9232, 0x2e30, 0x107c, 0x2a60, 0x5f7, 0x0, 0x1);
        gbc.writeMem(0x2a60, { 0x81 });
        gbc.writeMem(0xe6c5, { 0x1a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9232, gbc.sp());
        EXPECT(0xe6c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe6c5));
        // 1A 00B7
        gbc.setState(0x3689, 0x626a, 0x2830, 0x3194, 0xc399, 0xc72b, 0x0, 0x0);
        gbc.writeMem(0x3689, { 0x1a });
        gbc.writeMem(0xc399, { 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x626a, gbc.sp());
        EXPECT(0x368a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc399));
        // 1A 00B8
        gbc.setState(0x896, 0x49d4, 0x1830, 0x6c3b, 0xc459, 0x102b, 0x0, 0x0);
        gbc.writeMem(0x896, { 0x1a });
        gbc.writeMem(0xc459, { 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x49d4, gbc.sp());
        EXPECT(0x897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc459));
        // 1A 00B9
        gbc.setState(0xed40, 0x48bf, 0x7350, 0x4466, 0xbe3c, 0xe84, 0x0, 0x1);
        gbc.writeMem(0xbe3c, { 0xfe });
        gbc.writeMem(0xed40, { 0x1a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x48bf, gbc.sp());
        EXPECT(0xed41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbe3c));
        EXPECT(0x1a, gbc.readMem(0xed40));
        // 1A 00BA
        gbc.setState(0xb354, 0x3b04, 0x9cf0, 0x3e82, 0x47ee, 0x657d, 0x1, 0x0);
        gbc.writeMem(0x47ee, { 0xf6 });
        gbc.writeMem(0xb354, { 0x1a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3b04, gbc.sp());
        EXPECT(0xb355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb354));
        // 1A 00BB
        gbc.setState(0x69c7, 0xca0b, 0x940, 0x5a5c, 0x168e, 0xd3c3, 0x0, 0x0);
        gbc.writeMem(0x168e, { 0x0 });
        gbc.writeMem(0x69c7, { 0x1a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xca0b, gbc.sp());
        EXPECT(0x69c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00BC
        gbc.setState(0xbfe9, 0x9757, 0x10f0, 0x9114, 0xbf63, 0x23b6, 0x1, 0x1);
        gbc.writeMem(0xbf63, { 0x13 });
        gbc.writeMem(0xbfe9, { 0x1a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9757, gbc.sp());
        EXPECT(0xbfea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbf63));
        EXPECT(0x1a, gbc.readMem(0xbfe9));
        // 1A 00BD
        gbc.setState(0xe444, 0x7241, 0x3b90, 0xd8bc, 0x2a4f, 0x8439, 0x0, 0x1);
        gbc.writeMem(0x2a4f, { 0x38 });
        gbc.writeMem(0xe444, { 0x1a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7241, gbc.sp());
        EXPECT(0xe445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe444));
        // 1A 00BE
        gbc.setState(0x26cf, 0x8c5e, 0xd790, 0x45e8, 0xbdc6, 0x28c4, 0x1, 0x1);
        gbc.writeMem(0x26cf, { 0x1a });
        gbc.writeMem(0xbdc6, { 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8c5e, gbc.sp());
        EXPECT(0x26d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xbdc6));
        // 1A 00BF
        gbc.setState(0x13ea, 0xdac8, 0xe2f0, 0x9442, 0xd7c7, 0xb2e8, 0x0, 0x1);
        gbc.writeMem(0x13ea, { 0x1a });
        gbc.writeMem(0xd7c7, { 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdac8, gbc.sp());
        EXPECT(0x13eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xd7c7));
        // 1A 00C1
        gbc.setState(0x6ae6, 0xe31e, 0xf700, 0x4a90, 0x3a5f, 0x6170, 0x1, 0x0);
        gbc.writeMem(0x3a5f, { 0xa4 });
        gbc.writeMem(0x6ae6, { 0x1a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe31e, gbc.sp());
        EXPECT(0x6ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00C2
        gbc.setState(0x3c5a, 0x6a2f, 0xe4d0, 0x9d2d, 0xf873, 0x55f7, 0x1, 0x1);
        gbc.writeMem(0x3c5a, { 0x1a });
        gbc.writeMem(0xf873, { 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6a2f, gbc.sp());
        EXPECT(0x3c5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xf873));
        // 1A 00C3
        gbc.setState(0x8d5f, 0x11e3, 0xac80, 0x4fdd, 0x2eba, 0x797b, 0x0, 0x0);
        gbc.writeMem(0x2eba, { 0x24 });
        gbc.writeMem(0x8d5f, { 0x1a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x11e3, gbc.sp());
        EXPECT(0x8d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8d5f));
        // 1A 00C4
        gbc.setState(0x2029, 0x2ec4, 0x3df0, 0x4f0c, 0xf9a4, 0x344c, 0x0, 0x1);
        gbc.writeMem(0x2029, { 0x1a });
        gbc.writeMem(0xf9a4, { 0x87 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2ec4, gbc.sp());
        EXPECT(0x202a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xf9a4));
        // 1A 00C5
        gbc.setState(0xedc0, 0xe8f1, 0x8610, 0xef82, 0xcd0e, 0x421f, 0x0, 0x0);
        gbc.writeMem(0xcd0e, { 0x26 });
        gbc.writeMem(0xedc0, { 0x1a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe8f1, gbc.sp());
        EXPECT(0xedc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xcd0e));
        EXPECT(0x1a, gbc.readMem(0xedc0));
        // 1A 00C6
        gbc.setState(0x2ed1, 0x21f5, 0x6b50, 0xb376, 0x472, 0xe1e6, 0x0, 0x1);
        gbc.writeMem(0x472, { 0x3a });
        gbc.writeMem(0x2ed1, { 0x1a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x21f5, gbc.sp());
        EXPECT(0x2ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 00C7
        gbc.setState(0x514a, 0x973f, 0x51b0, 0xe86f, 0x187d, 0x2633, 0x1, 0x1);
        gbc.writeMem(0x187d, { 0xc9 });
        gbc.writeMem(0x514a, { 0x1a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x973f, gbc.sp());
        EXPECT(0x514b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 00C8
        gbc.setState(0xcd47, 0xa8b8, 0x83e0, 0x7517, 0x334c, 0xbec1, 0x1, 0x1);
        gbc.writeMem(0x334c, { 0x6a });
        gbc.writeMem(0xcd47, { 0x1a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa8b8, gbc.sp());
        EXPECT(0xcd48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xcd47));
        // 1A 00C9
        gbc.setState(0x3802, 0xb6de, 0x60d0, 0xb53c, 0x405c, 0x381b, 0x0, 0x0);
        gbc.writeMem(0x3802, { 0x1a });
        gbc.writeMem(0x405c, { 0xf6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb6de, gbc.sp());
        EXPECT(0x3803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 00CA
        gbc.setState(0x4884, 0x48a5, 0xe790, 0xf47a, 0x1168, 0x245f, 0x1, 0x1);
        gbc.writeMem(0x1168, { 0xab });
        gbc.writeMem(0x4884, { 0x1a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x48a5, gbc.sp());
        EXPECT(0x4885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 00CB
        gbc.setState(0x68b2, 0xff88, 0x5500, 0x92eb, 0xbbf8, 0x7987, 0x1, 0x1);
        gbc.writeMem(0x68b2, { 0x1a });
        gbc.writeMem(0xbbf8, { 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xff88, gbc.sp());
        EXPECT(0x68b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xbbf8));
        // 1A 00CC
        gbc.setState(0xc8e, 0x665a, 0x7b30, 0xd2d5, 0x9f62, 0x4c87, 0x0, 0x1);
        gbc.writeMem(0xc8e, { 0x1a });
        gbc.writeMem(0x9f62, { 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x665a, gbc.sp());
        EXPECT(0xc8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9f62));
        // 1A 00CD
        gbc.setState(0xbf95, 0x97ba, 0xb60, 0x9572, 0x6fef, 0xbee, 0x0, 0x0);
        gbc.writeMem(0x6fef, { 0xfe });
        gbc.writeMem(0xbf95, { 0x1a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x97ba, gbc.sp());
        EXPECT(0xbf96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbf95));
        // 1A 00CE
        gbc.setState(0xc1b4, 0x6398, 0xe7f0, 0x53a4, 0xdfa, 0x4ab6, 0x1, 0x1);
        gbc.writeMem(0xdfa, { 0xd2 });
        gbc.writeMem(0xc1b4, { 0x1a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6398, gbc.sp());
        EXPECT(0xc1b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc1b4));
        // 1A 00CF
        gbc.setState(0xaf82, 0x8fea, 0x8560, 0xd7cf, 0x13c4, 0x74ff, 0x0, 0x1);
        gbc.writeMem(0x13c4, { 0xdc });
        gbc.writeMem(0xaf82, { 0x1a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8fea, gbc.sp());
        EXPECT(0xaf83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xaf82));
        // 1A 00D0
        gbc.setState(0x6fee, 0x29e7, 0xdff0, 0x38cf, 0x13bf, 0xd46f, 0x0, 0x0);
        gbc.writeMem(0x13bf, { 0x2e });
        gbc.writeMem(0x6fee, { 0x1a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x29e7, gbc.sp());
        EXPECT(0x6fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 00D1
        gbc.setState(0xe1ce, 0xa05, 0x1880, 0xcdcb, 0xadca, 0xd433, 0x1, 0x0);
        gbc.writeMem(0xadca, { 0xb2 });
        gbc.writeMem(0xe1ce, { 0x1a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa05, gbc.sp());
        EXPECT(0xe1cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xadca));
        EXPECT(0x1a, gbc.readMem(0xe1ce));
        // 1A 00D2
        gbc.setState(0xdd0e, 0x8945, 0x62d0, 0xef1f, 0x7e45, 0xaea9, 0x0, 0x1);
        gbc.writeMem(0x7e45, { 0xe9 });
        gbc.writeMem(0xdd0e, { 0x1a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8945, gbc.sp());
        EXPECT(0xdd0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdd0e));
        // 1A 00D3
        gbc.setState(0x445a, 0xb80, 0xcdf0, 0x1c47, 0x5efe, 0xa93d, 0x1, 0x1);
        gbc.writeMem(0x445a, { 0x1a });
        gbc.writeMem(0x5efe, { 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb80, gbc.sp());
        EXPECT(0x445b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 00D4
        gbc.setState(0xacd9, 0xaee5, 0xfa60, 0x3538, 0xc01, 0xee88, 0x1, 0x0);
        gbc.writeMem(0xc01, { 0x8b });
        gbc.writeMem(0xacd9, { 0x1a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xaee5, gbc.sp());
        EXPECT(0xacda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xacd9));
        // 1A 00D5
        gbc.setState(0x4e1e, 0xb833, 0x7280, 0xde08, 0xc64e, 0xebe4, 0x0, 0x1);
        gbc.writeMem(0x4e1e, { 0x1a });
        gbc.writeMem(0xc64e, { 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb833, gbc.sp());
        EXPECT(0x4e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc64e));
        // 1A 00D6
        gbc.setState(0x725d, 0xe512, 0x5220, 0x30bc, 0xa059, 0x3673, 0x0, 0x1);
        gbc.writeMem(0x725d, { 0x1a });
        gbc.writeMem(0xa059, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe512, gbc.sp());
        EXPECT(0x725e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa059));
        // 1A 00D7
        gbc.setState(0x1bf9, 0x8f39, 0x1490, 0xad34, 0xb05a, 0x48ba, 0x0, 0x1);
        gbc.writeMem(0x1bf9, { 0x1a });
        gbc.writeMem(0xb05a, { 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8f39, gbc.sp());
        EXPECT(0x1bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb05a));
        // 1A 00D8
        gbc.setState(0x6a03, 0x6cda, 0x30, 0x8cf3, 0x2e9a, 0x64ee, 0x0, 0x0);
        gbc.writeMem(0x2e9a, { 0xc3 });
        gbc.writeMem(0x6a03, { 0x1a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6cda, gbc.sp());
        EXPECT(0x6a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 00D9
        gbc.setState(0x2e20, 0x485e, 0x2800, 0x6569, 0x1e2c, 0x3d41, 0x0, 0x0);
        gbc.writeMem(0x1e2c, { 0x33 });
        gbc.writeMem(0x2e20, { 0x1a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x485e, gbc.sp());
        EXPECT(0x2e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00DA
        gbc.setState(0xc4f8, 0xcd05, 0xa200, 0x3844, 0x51f5, 0x2e60, 0x0, 0x1);
        gbc.writeMem(0x51f5, { 0x15 });
        gbc.writeMem(0xc4f8, { 0x1a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcd05, gbc.sp());
        EXPECT(0xc4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc4f8));
        // 1A 00DB
        gbc.setState(0x6c0b, 0x289b, 0xcd20, 0x17d1, 0x1be3, 0x67fd, 0x1, 0x1);
        gbc.writeMem(0x1be3, { 0x22 });
        gbc.writeMem(0x6c0b, { 0x1a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x289b, gbc.sp());
        EXPECT(0x6c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00DC
        gbc.setState(0x6fbd, 0x6476, 0x1400, 0x570e, 0x4b25, 0x1e60, 0x0, 0x0);
        gbc.writeMem(0x4b25, { 0x9c });
        gbc.writeMem(0x6fbd, { 0x1a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6476, gbc.sp());
        EXPECT(0x6fbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00DD
        gbc.setState(0xd21a, 0x2cf1, 0xd400, 0x9119, 0x4d92, 0x45db, 0x0, 0x0);
        gbc.writeMem(0x4d92, { 0x7d });
        gbc.writeMem(0xd21a, { 0x1a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2cf1, gbc.sp());
        EXPECT(0xd21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd21a));
        // 1A 00DE
        gbc.setState(0xe23a, 0x3e81, 0x1720, 0xf516, 0x5970, 0x1628, 0x1, 0x1);
        gbc.writeMem(0x5970, { 0x5a });
        gbc.writeMem(0xe23a, { 0x1a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3e81, gbc.sp());
        EXPECT(0xe23b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe23a));
        // 1A 00DF
        gbc.setState(0x13d3, 0xb681, 0x8ca0, 0x3124, 0xed5b, 0x209c, 0x1, 0x1);
        gbc.writeMem(0x13d3, { 0x1a });
        gbc.writeMem(0xed5b, { 0xef });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb681, gbc.sp());
        EXPECT(0x13d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xed5b));
        // 1A 00E0
        gbc.setState(0x2457, 0xbf8b, 0xa810, 0x7b5b, 0x23d2, 0xc02e, 0x0, 0x0);
        gbc.writeMem(0x23d2, { 0xd7 });
        gbc.writeMem(0x2457, { 0x1a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbf8b, gbc.sp());
        EXPECT(0x2458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 00E1
        gbc.setState(0x7ceb, 0x4a50, 0x35e0, 0x3cb0, 0x274f, 0x192c, 0x0, 0x0);
        gbc.writeMem(0x274f, { 0x99 });
        gbc.writeMem(0x7ceb, { 0x1a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4a50, gbc.sp());
        EXPECT(0x7cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00E2
        gbc.setState(0x3641, 0xd516, 0x8be0, 0xad5e, 0x791a, 0x879e, 0x0, 0x1);
        gbc.writeMem(0x3641, { 0x1a });
        gbc.writeMem(0x791a, { 0xfd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd516, gbc.sp());
        EXPECT(0x3642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00E3
        gbc.setState(0xc071, 0x89e2, 0xd5e0, 0x62f7, 0x3ab8, 0x186c, 0x1, 0x0);
        gbc.writeMem(0x3ab8, { 0x9c });
        gbc.writeMem(0xc071, { 0x1a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x89e2, gbc.sp());
        EXPECT(0xc072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc071));
        // 1A 00E4
        gbc.setState(0xa08, 0x84bf, 0x360, 0xe139, 0x6138, 0x7a9c, 0x0, 0x0);
        gbc.writeMem(0xa08, { 0x1a });
        gbc.writeMem(0x6138, { 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x84bf, gbc.sp());
        EXPECT(0xa09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00E5
        gbc.setState(0x8c31, 0xc7c6, 0xa8e0, 0x13a3, 0x6931, 0x767d, 0x0, 0x1);
        gbc.writeMem(0x6931, { 0x40 });
        gbc.writeMem(0x8c31, { 0x1a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc7c6, gbc.sp());
        EXPECT(0x8c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8c31));
        // 1A 00E6
        gbc.setState(0xe7ce, 0xe5e5, 0xaaa0, 0x5ff5, 0x8e42, 0xab7d, 0x0, 0x1);
        gbc.writeMem(0x8e42, { 0x3b });
        gbc.writeMem(0xe7ce, { 0x1a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe5e5, gbc.sp());
        EXPECT(0xe7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8e42));
        EXPECT(0x1a, gbc.readMem(0xe7ce));
        // 1A 00E7
        gbc.setState(0xd0a0, 0xfaff, 0x2790, 0xe6ee, 0xb56b, 0x8a2f, 0x0, 0x1);
        gbc.writeMem(0xb56b, { 0x82 });
        gbc.writeMem(0xd0a0, { 0x1a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfaff, gbc.sp());
        EXPECT(0xd0a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb56b));
        EXPECT(0x1a, gbc.readMem(0xd0a0));
        // 1A 00E8
        gbc.setState(0x92e2, 0x1bf0, 0xcff0, 0x8472, 0x8faa, 0xd0ae, 0x0, 0x1);
        gbc.writeMem(0x8faa, { 0x22 });
        gbc.writeMem(0x92e2, { 0x1a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1bf0, gbc.sp());
        EXPECT(0x92e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x8faa));
        EXPECT(0x1a, gbc.readMem(0x92e2));
        // 1A 00E9
        gbc.setState(0x6d1a, 0xc121, 0x410, 0x4ede, 0xe9c4, 0x1ae9, 0x0, 0x1);
        gbc.writeMem(0x6d1a, { 0x1a });
        gbc.writeMem(0xe9c4, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc121, gbc.sp());
        EXPECT(0x6d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe9c4));
        // 1A 00EA
        gbc.setState(0x26af, 0x9c8b, 0x2590, 0x8657, 0xee7f, 0xacc6, 0x1, 0x1);
        gbc.writeMem(0x26af, { 0x1a });
        gbc.writeMem(0xee7f, { 0x15 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9c8b, gbc.sp());
        EXPECT(0x26b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xee7f));
        // 1A 00EB
        gbc.setState(0x60d1, 0x440c, 0x5910, 0xb70b, 0xe16e, 0x25ae, 0x0, 0x1);
        gbc.writeMem(0x60d1, { 0x1a });
        gbc.writeMem(0xe16e, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x440c, gbc.sp());
        EXPECT(0x60d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe16e));
        // 1A 00EC
        gbc.setState(0xdbb, 0xd2d1, 0x1540, 0xc961, 0x52ab, 0x554c, 0x0, 0x1);
        gbc.writeMem(0xdbb, { 0x1a });
        gbc.writeMem(0x52ab, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd2d1, gbc.sp());
        EXPECT(0xdbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00ED
        gbc.setState(0x4852, 0x3f41, 0x86e0, 0xbe91, 0xb817, 0x9506, 0x0, 0x0);
        gbc.writeMem(0x4852, { 0x1a });
        gbc.writeMem(0xb817, { 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3f41, gbc.sp());
        EXPECT(0x4853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb817));
        // 1A 00EE
        gbc.setState(0x3be6, 0x760d, 0x5380, 0x4ee3, 0x7ddb, 0x915e, 0x0, 0x1);
        gbc.writeMem(0x3be6, { 0x1a });
        gbc.writeMem(0x7ddb, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x760d, gbc.sp());
        EXPECT(0x3be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 00EF
        gbc.setState(0x9c15, 0xcc4b, 0x7b20, 0xa4d0, 0xca38, 0x57f1, 0x0, 0x0);
        gbc.writeMem(0x9c15, { 0x1a });
        gbc.writeMem(0xca38, { 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcc4b, gbc.sp());
        EXPECT(0x9c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9c15));
        EXPECT(0xce, gbc.readMem(0xca38));
        // 1A 00F0
        gbc.setState(0xb916, 0xcfb7, 0x1ad0, 0x1011, 0xeeb3, 0xa8f4, 0x0, 0x1);
        gbc.writeMem(0xb916, { 0x1a });
        gbc.writeMem(0xeeb3, { 0x74 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcfb7, gbc.sp());
        EXPECT(0xb917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb916));
        EXPECT(0x74, gbc.readMem(0xeeb3));
        // 1A 00F1
        gbc.setState(0x4f62, 0x62c, 0x9b0, 0xec15, 0xdf61, 0xfb10, 0x1, 0x0);
        gbc.writeMem(0x4f62, { 0x1a });
        gbc.writeMem(0xdf61, { 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x62c, gbc.sp());
        EXPECT(0x4f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdf61));
        // 1A 00F2
        gbc.setState(0x3cfe, 0xbac7, 0xe110, 0x90b7, 0xb339, 0x6c05, 0x0, 0x1);
        gbc.writeMem(0x3cfe, { 0x1a });
        gbc.writeMem(0xb339, { 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbac7, gbc.sp());
        EXPECT(0x3cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb339));
        // 1A 00F3
        gbc.setState(0x853f, 0xb691, 0xaea0, 0x45c3, 0xe613, 0x8e98, 0x1, 0x0);
        gbc.writeMem(0x853f, { 0x1a });
        gbc.writeMem(0xe613, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb691, gbc.sp());
        EXPECT(0x8540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x853f));
        EXPECT(0x76, gbc.readMem(0xe613));
        // 1A 00F4
        gbc.setState(0xe005, 0xfde4, 0x3c50, 0x4977, 0x3a19, 0x1deb, 0x1, 0x1);
        gbc.writeMem(0x3a19, { 0xa });
        gbc.writeMem(0xe005, { 0x1a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfde4, gbc.sp());
        EXPECT(0xe006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe005));
        // 1A 00F6
        gbc.setState(0x3c9f, 0x2400, 0x6fd0, 0x4e5b, 0x493b, 0xc4b8, 0x0, 0x1);
        gbc.writeMem(0x3c9f, { 0x1a });
        gbc.writeMem(0x493b, { 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2400, gbc.sp());
        EXPECT(0x3ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 00F7
        gbc.setState(0x5118, 0xbe45, 0xdfd0, 0x746c, 0xe2c0, 0x2ea0, 0x0, 0x1);
        gbc.writeMem(0x5118, { 0x1a });
        gbc.writeMem(0xe2c0, { 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbe45, gbc.sp());
        EXPECT(0x5119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xe2c0));
        // 1A 00F8
        gbc.setState(0xb2a5, 0xf233, 0x710, 0xe151, 0xeb8d, 0x533d, 0x0, 0x0);
        gbc.writeMem(0xb2a5, { 0x1a });
        gbc.writeMem(0xeb8d, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf233, gbc.sp());
        EXPECT(0xb2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb2a5));
        EXPECT(0x94, gbc.readMem(0xeb8d));
        // 1A 00F9
        gbc.setState(0xe468, 0xf8db, 0x45a0, 0x1b64, 0x63ff, 0xe769, 0x1, 0x0);
        gbc.writeMem(0x63ff, { 0x4f });
        gbc.writeMem(0xe468, { 0x1a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf8db, gbc.sp());
        EXPECT(0xe469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe468));
        // 1A 00FA
        gbc.setState(0x8d31, 0xbea6, 0xf6a0, 0x4f60, 0x68b8, 0x1e72, 0x0, 0x0);
        gbc.writeMem(0x68b8, { 0x88 });
        gbc.writeMem(0x8d31, { 0x1a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbea6, gbc.sp());
        EXPECT(0x8d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8d31));
        // 1A 00FB
        gbc.setState(0x85bf, 0x71c0, 0x2c80, 0x7977, 0xc0ac, 0x46b1, 0x1, 0x0);
        gbc.writeMem(0x85bf, { 0x1a });
        gbc.writeMem(0xc0ac, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x71c0, gbc.sp());
        EXPECT(0x85c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x85bf));
        EXPECT(0x8c, gbc.readMem(0xc0ac));
        // 1A 00FC
        gbc.setState(0xc526, 0x1d5a, 0x1ec0, 0xd55, 0xa251, 0xd4d4, 0x0, 0x1);
        gbc.writeMem(0xa251, { 0xf7 });
        gbc.writeMem(0xc526, { 0x1a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1d5a, gbc.sp());
        EXPECT(0xc527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa251));
        EXPECT(0x1a, gbc.readMem(0xc526));
        // 1A 00FD
        gbc.setState(0xef3a, 0xc8e3, 0x4d20, 0xa5ac, 0xc62, 0xbadd, 0x0, 0x0);
        gbc.writeMem(0xc62, { 0x82 });
        gbc.writeMem(0xef3a, { 0x1a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc8e3, gbc.sp());
        EXPECT(0xef3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xef3a));
        // 1A 00FE
        gbc.setState(0x6310, 0x4ed9, 0x21b0, 0xac8b, 0x7e28, 0x6600, 0x1, 0x1);
        gbc.writeMem(0x6310, { 0x1a });
        gbc.writeMem(0x7e28, { 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4ed9, gbc.sp());
        EXPECT(0x6311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 00FF
        gbc.setState(0x6665, 0x94ba, 0x3b40, 0xd8da, 0x540e, 0x427b, 0x1, 0x0);
        gbc.writeMem(0x540e, { 0x23 });
        gbc.writeMem(0x6665, { 0x1a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x94ba, gbc.sp());
        EXPECT(0x6666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0100
        gbc.setState(0xbeef, 0x9524, 0xc740, 0x8805, 0x5ce6, 0xd453, 0x1, 0x1);
        gbc.writeMem(0x5ce6, { 0x8a });
        gbc.writeMem(0xbeef, { 0x1a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9524, gbc.sp());
        EXPECT(0xbef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbeef));
        // 1A 0101
        gbc.setState(0x8bc6, 0x1573, 0x1500, 0xe429, 0x8676, 0xf318, 0x0, 0x0);
        gbc.writeMem(0x8676, { 0xf2 });
        gbc.writeMem(0x8bc6, { 0x1a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1573, gbc.sp());
        EXPECT(0x8bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x8676));
        EXPECT(0x1a, gbc.readMem(0x8bc6));
        // 1A 0102
        gbc.setState(0x6d1d, 0x7980, 0xe200, 0xf00b, 0xdfd0, 0xb2bb, 0x0, 0x0);
        gbc.writeMem(0x6d1d, { 0x1a });
        gbc.writeMem(0xdfd0, { 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7980, gbc.sp());
        EXPECT(0x6d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xdfd0));
        // 1A 0103
        gbc.setState(0x259a, 0x3fca, 0x820, 0x7170, 0xedb2, 0xc947, 0x1, 0x0);
        gbc.writeMem(0x259a, { 0x1a });
        gbc.writeMem(0xedb2, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3fca, gbc.sp());
        EXPECT(0x259b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xedb2));
        // 1A 0104
        gbc.setState(0xe4e5, 0xc0cc, 0x48a0, 0xdaeb, 0x5935, 0x2753, 0x1, 0x1);
        gbc.writeMem(0x5935, { 0x2f });
        gbc.writeMem(0xe4e5, { 0x1a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc0cc, gbc.sp());
        EXPECT(0xe4e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe4e5));
        // 1A 0105
        gbc.setState(0x6fb4, 0x9ce7, 0xe440, 0xf843, 0x6dff, 0x69a0, 0x1, 0x0);
        gbc.writeMem(0x6dff, { 0x45 });
        gbc.writeMem(0x6fb4, { 0x1a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9ce7, gbc.sp());
        EXPECT(0x6fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0106
        gbc.setState(0xd7a5, 0xe8cf, 0x66d0, 0x2990, 0x81b9, 0x452f, 0x0, 0x0);
        gbc.writeMem(0x81b9, { 0x1c });
        gbc.writeMem(0xd7a5, { 0x1a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe8cf, gbc.sp());
        EXPECT(0xd7a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x81b9));
        EXPECT(0x1a, gbc.readMem(0xd7a5));
        // 1A 0107
        gbc.setState(0x7cf5, 0x4766, 0xed50, 0x3235, 0xac4, 0x46f3, 0x1, 0x0);
        gbc.writeMem(0xac4, { 0x61 });
        gbc.writeMem(0x7cf5, { 0x1a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4766, gbc.sp());
        EXPECT(0x7cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0108
        gbc.setState(0x1e59, 0xf71a, 0xee20, 0x117c, 0x4d0a, 0xb09c, 0x1, 0x0);
        gbc.writeMem(0x1e59, { 0x1a });
        gbc.writeMem(0x4d0a, { 0x58 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf71a, gbc.sp());
        EXPECT(0x1e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0109
        gbc.setState(0x40e, 0xe4, 0x51f0, 0xe863, 0xfc, 0x9abc, 0x0, 0x0);
        gbc.writeMem(0xfc, { 0xa });
        gbc.writeMem(0x40e, { 0x1a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe4, gbc.sp());
        EXPECT(0x40f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 010A
        gbc.setState(0x3fef, 0x1fcc, 0x4400, 0x8fa, 0x8d27, 0xebf3, 0x0, 0x1);
        gbc.writeMem(0x3fef, { 0x1a });
        gbc.writeMem(0x8d27, { 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1fcc, gbc.sp());
        EXPECT(0x3ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8d27));
        // 1A 010B
        gbc.setState(0x418, 0x6c56, 0xd7d0, 0x9efc, 0x100e, 0x514, 0x1, 0x1);
        gbc.writeMem(0x418, { 0x1a });
        gbc.writeMem(0x100e, { 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6c56, gbc.sp());
        EXPECT(0x419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 010C
        gbc.setState(0x776b, 0x84ef, 0xd4d0, 0xaab0, 0xfd72, 0x9bf2, 0x1, 0x1);
        gbc.writeMem(0x776b, { 0x1a });
        gbc.writeMem(0xfd72, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x84ef, gbc.sp());
        EXPECT(0x776c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xfd72));
        // 1A 010D
        gbc.setState(0xd9f, 0xd64b, 0x4b80, 0x955c, 0x96b3, 0x1510, 0x1, 0x1);
        gbc.writeMem(0xd9f, { 0x1a });
        gbc.writeMem(0x96b3, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd64b, gbc.sp());
        EXPECT(0xda0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x96b3));
        // 1A 010E
        gbc.setState(0x2a64, 0x1f69, 0x4c80, 0x7ede, 0x139a, 0x8d8d, 0x1, 0x1);
        gbc.writeMem(0x139a, { 0x68 });
        gbc.writeMem(0x2a64, { 0x1a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1f69, gbc.sp());
        EXPECT(0x2a65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 010F
        gbc.setState(0x4579, 0x60e4, 0x260, 0x65df, 0xd7d1, 0x14cb, 0x0, 0x0);
        gbc.writeMem(0x4579, { 0x1a });
        gbc.writeMem(0xd7d1, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x60e4, gbc.sp());
        EXPECT(0x457a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xd7d1));
        // 1A 0110
        gbc.setState(0x131f, 0x6380, 0x92a0, 0x7187, 0x2d0f, 0xd0ec, 0x0, 0x0);
        gbc.writeMem(0x131f, { 0x1a });
        gbc.writeMem(0x2d0f, { 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6380, gbc.sp());
        EXPECT(0x1320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0111
        gbc.setState(0x47aa, 0xdd7c, 0x4590, 0x9666, 0x3211, 0x7ca9, 0x1, 0x0);
        gbc.writeMem(0x3211, { 0xbb });
        gbc.writeMem(0x47aa, { 0x1a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdd7c, gbc.sp());
        EXPECT(0x47ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0112
        gbc.setState(0x5e2c, 0x75c, 0xfdb0, 0xf45f, 0x9842, 0x8387, 0x0, 0x1);
        gbc.writeMem(0x5e2c, { 0x1a });
        gbc.writeMem(0x9842, { 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x75c, gbc.sp());
        EXPECT(0x5e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x9842));
        // 1A 0113
        gbc.setState(0x44ab, 0x35a0, 0xb5f0, 0xb8f8, 0x71db, 0xf398, 0x0, 0x1);
        gbc.writeMem(0x44ab, { 0x1a });
        gbc.writeMem(0x71db, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x35a0, gbc.sp());
        EXPECT(0x44ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0114
        gbc.setState(0x73c0, 0x488c, 0x26d0, 0x3a75, 0x542d, 0xeaab, 0x0, 0x1);
        gbc.writeMem(0x542d, { 0xda });
        gbc.writeMem(0x73c0, { 0x1a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x488c, gbc.sp());
        EXPECT(0x73c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0115
        gbc.setState(0xe5fa, 0x9961, 0x4120, 0xa4f1, 0xe96e, 0xa366, 0x0, 0x1);
        gbc.writeMem(0xe5fa, { 0x1a });
        gbc.writeMem(0xe96e, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9961, gbc.sp());
        EXPECT(0xe5fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe5fa));
        EXPECT(0x24, gbc.readMem(0xe96e));
        // 1A 0116
        gbc.setState(0x614b, 0xe305, 0x26a0, 0xc918, 0xe9de, 0x2b09, 0x1, 0x1);
        gbc.writeMem(0x614b, { 0x1a });
        gbc.writeMem(0xe9de, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe305, gbc.sp());
        EXPECT(0x614c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xe9de));
        // 1A 0118
        gbc.setState(0xcbd4, 0xc369, 0x2b80, 0xc1d6, 0x4a47, 0x7c2c, 0x0, 0x0);
        gbc.writeMem(0x4a47, { 0xa4 });
        gbc.writeMem(0xcbd4, { 0x1a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc369, gbc.sp());
        EXPECT(0xcbd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xcbd4));
        // 1A 0119
        gbc.setState(0xe208, 0x39d2, 0x6a0, 0x8dcc, 0x6000, 0xbdd5, 0x1, 0x1);
        gbc.writeMem(0x6000, { 0xea });
        gbc.writeMem(0xe208, { 0x1a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x39d2, gbc.sp());
        EXPECT(0xe209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe208));
        // 1A 011A
        gbc.setState(0xb84, 0xf540, 0x9600, 0xc4df, 0x3011, 0x3f4, 0x1, 0x0);
        gbc.writeMem(0xb84, { 0x1a });
        gbc.writeMem(0x3011, { 0xf6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf540, gbc.sp());
        EXPECT(0xb85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 011B
        gbc.setState(0xfc, 0x99db, 0xbc50, 0x7a18, 0xc82e, 0xa8eb, 0x0, 0x0);
        gbc.writeMem(0xfc, { 0x1a });
        gbc.writeMem(0xc82e, { 0xbe });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x99db, gbc.sp());
        EXPECT(0xfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xc82e));
        // 1A 011C
        gbc.setState(0x51e4, 0x94ea, 0xe9c0, 0x135f, 0xb04e, 0xdd8b, 0x1, 0x1);
        gbc.writeMem(0x51e4, { 0x1a });
        gbc.writeMem(0xb04e, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x94ea, gbc.sp());
        EXPECT(0x51e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb04e));
        // 1A 011E
        gbc.setState(0x6139, 0x3b4f, 0x12f0, 0xc6bd, 0xf6b3, 0x5704, 0x0, 0x0);
        gbc.writeMem(0x6139, { 0x1a });
        gbc.writeMem(0xf6b3, { 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3b4f, gbc.sp());
        EXPECT(0x613a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xf6b3));
        // 1A 011F
        gbc.setState(0xdbac, 0x296c, 0xfa90, 0x50c2, 0x468d, 0x75a6, 0x1, 0x1);
        gbc.writeMem(0x468d, { 0xf9 });
        gbc.writeMem(0xdbac, { 0x1a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x296c, gbc.sp());
        EXPECT(0xdbad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdbac));
        // 1A 0120
        gbc.setState(0x3db7, 0x1479, 0xe570, 0xb3b, 0xd3ec, 0x497e, 0x1, 0x1);
        gbc.writeMem(0x3db7, { 0x1a });
        gbc.writeMem(0xd3ec, { 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1479, gbc.sp());
        EXPECT(0x3db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xd3ec));
        // 1A 0121
        gbc.setState(0x3c00, 0x7217, 0x1620, 0x7bd6, 0x2614, 0x99a5, 0x0, 0x1);
        gbc.writeMem(0x2614, { 0xd });
        gbc.writeMem(0x3c00, { 0x1a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7217, gbc.sp());
        EXPECT(0x3c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0122
        gbc.setState(0x588e, 0xfb81, 0xddc0, 0x4af6, 0x1c04, 0x979c, 0x1, 0x0);
        gbc.writeMem(0x1c04, { 0x8 });
        gbc.writeMem(0x588e, { 0x1a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfb81, gbc.sp());
        EXPECT(0x588f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0123
        gbc.setState(0xa790, 0xd3dd, 0xfad0, 0x2aa7, 0x67c9, 0x60d8, 0x0, 0x0);
        gbc.writeMem(0x67c9, { 0x5c });
        gbc.writeMem(0xa790, { 0x1a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd3dd, gbc.sp());
        EXPECT(0xa791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa790));
        // 1A 0124
        gbc.setState(0x8cb9, 0x9a18, 0x4770, 0x6f6e, 0xfe76, 0x8778, 0x1, 0x0);
        gbc.writeMem(0x8cb9, { 0x1a });
        gbc.writeMem(0xfe76, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9a18, gbc.sp());
        EXPECT(0x8cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8cb9));
        EXPECT(0x9e, gbc.readMem(0xfe76));
        // 1A 0125
        gbc.setState(0x5ad6, 0x7b2b, 0xf7e0, 0x91a8, 0x1913, 0x580a, 0x0, 0x1);
        gbc.writeMem(0x1913, { 0x3a });
        gbc.writeMem(0x5ad6, { 0x1a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7b2b, gbc.sp());
        EXPECT(0x5ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0126
        gbc.setState(0x5961, 0xd96f, 0x7aa0, 0xfef1, 0xef52, 0x10ba, 0x1, 0x0);
        gbc.writeMem(0x5961, { 0x1a });
        gbc.writeMem(0xef52, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd96f, gbc.sp());
        EXPECT(0x5962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xef52));
        // 1A 0127
        gbc.setState(0x7ecb, 0xd70e, 0x2b0, 0xe568, 0x89d6, 0x3ae5, 0x0, 0x0);
        gbc.writeMem(0x7ecb, { 0x1a });
        gbc.writeMem(0x89d6, { 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd70e, gbc.sp());
        EXPECT(0x7ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x89d6));
        // 1A 0128
        gbc.setState(0x66d0, 0x1e5b, 0x5720, 0x1ad0, 0x8885, 0xd16d, 0x1, 0x1);
        gbc.writeMem(0x66d0, { 0x1a });
        gbc.writeMem(0x8885, { 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1e5b, gbc.sp());
        EXPECT(0x66d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8885));
        // 1A 0129
        gbc.setState(0x267e, 0x2951, 0x2780, 0xe322, 0xc49, 0x4f9d, 0x1, 0x1);
        gbc.writeMem(0xc49, { 0xe4 });
        gbc.writeMem(0x267e, { 0x1a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2951, gbc.sp());
        EXPECT(0x267f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 012A
        gbc.setState(0x4486, 0xe026, 0xf060, 0x1259, 0xb08, 0x87e5, 0x1, 0x0);
        gbc.writeMem(0xb08, { 0x3c });
        gbc.writeMem(0x4486, { 0x1a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe026, gbc.sp());
        EXPECT(0x4487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 012B
        gbc.setState(0x39c, 0x7bec, 0xf050, 0x895e, 0xcb46, 0xd89a, 0x0, 0x1);
        gbc.writeMem(0x39c, { 0x1a });
        gbc.writeMem(0xcb46, { 0x1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7bec, gbc.sp());
        EXPECT(0x39d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xcb46));
        // 1A 012C
        gbc.setState(0x5e46, 0xeb9, 0x440, 0xf6a6, 0x7a60, 0xcb77, 0x1, 0x0);
        gbc.writeMem(0x5e46, { 0x1a });
        gbc.writeMem(0x7a60, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xeb9, gbc.sp());
        EXPECT(0x5e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 012D
        gbc.setState(0x1376, 0xcf1, 0x630, 0xef82, 0x3e6c, 0x171, 0x0, 0x1);
        gbc.writeMem(0x1376, { 0x1a });
        gbc.writeMem(0x3e6c, { 0xf6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcf1, gbc.sp());
        EXPECT(0x1377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 012E
        gbc.setState(0x8a0a, 0xe086, 0xaf90, 0xee7, 0x5b33, 0x8c8f, 0x1, 0x0);
        gbc.writeMem(0x5b33, { 0xb2 });
        gbc.writeMem(0x8a0a, { 0x1a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe086, gbc.sp());
        EXPECT(0x8a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8a0a));
        // 1A 012F
        gbc.setState(0xd798, 0x7738, 0x33c0, 0x17b9, 0x6c50, 0x97bb, 0x0, 0x1);
        gbc.writeMem(0x6c50, { 0x28 });
        gbc.writeMem(0xd798, { 0x1a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7738, gbc.sp());
        EXPECT(0xd799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd798));
        // 1A 0130
        gbc.setState(0xc02c, 0x4356, 0x8ba0, 0xfed4, 0x7eb, 0xeff1, 0x0, 0x1);
        gbc.writeMem(0x7eb, { 0xd1 });
        gbc.writeMem(0xc02c, { 0x1a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4356, gbc.sp());
        EXPECT(0xc02d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc02c));
        // 1A 0131
        gbc.setState(0x4103, 0x542f, 0x7720, 0x6b29, 0xbcf0, 0xf13b, 0x0, 0x0);
        gbc.writeMem(0x4103, { 0x1a });
        gbc.writeMem(0xbcf0, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x542f, gbc.sp());
        EXPECT(0x4104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbcf0));
        // 1A 0132
        gbc.setState(0x71be, 0x929c, 0x9de0, 0xa6cd, 0xef9f, 0xf0c0, 0x0, 0x1);
        gbc.writeMem(0x71be, { 0x1a });
        gbc.writeMem(0xef9f, { 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x929c, gbc.sp());
        EXPECT(0x71bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xef9f));
        // 1A 0133
        gbc.setState(0xb245, 0x1e9b, 0x9360, 0x447f, 0x9407, 0xd389, 0x1, 0x1);
        gbc.writeMem(0x9407, { 0x2c });
        gbc.writeMem(0xb245, { 0x1a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1e9b, gbc.sp());
        EXPECT(0xb246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9407));
        EXPECT(0x1a, gbc.readMem(0xb245));
        // 1A 0134
        gbc.setState(0x289c, 0xbeb8, 0x5120, 0x173b, 0x3337, 0xb48, 0x0, 0x1);
        gbc.writeMem(0x289c, { 0x1a });
        gbc.writeMem(0x3337, { 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbeb8, gbc.sp());
        EXPECT(0x289d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0135
        gbc.setState(0x5c4c, 0xce85, 0xa80, 0x3510, 0x6c53, 0x6acc, 0x1, 0x0);
        gbc.writeMem(0x5c4c, { 0x1a });
        gbc.writeMem(0x6c53, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xce85, gbc.sp());
        EXPECT(0x5c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0136
        gbc.setState(0xccfa, 0xf54c, 0x8bb0, 0xa5ba, 0xf9e5, 0x27b9, 0x0, 0x1);
        gbc.writeMem(0xccfa, { 0x1a });
        gbc.writeMem(0xf9e5, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf54c, gbc.sp());
        EXPECT(0xccfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xccfa));
        EXPECT(0x33, gbc.readMem(0xf9e5));
        // 1A 0137
        gbc.setState(0x8e53, 0xa97e, 0x6a10, 0xdaf6, 0x1ff6, 0x2193, 0x0, 0x1);
        gbc.writeMem(0x1ff6, { 0x35 });
        gbc.writeMem(0x8e53, { 0x1a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa97e, gbc.sp());
        EXPECT(0x8e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8e53));
        // 1A 0138
        gbc.setState(0xa0b5, 0x2f2c, 0xfd20, 0xbaf1, 0x49ce, 0x8564, 0x0, 0x0);
        gbc.writeMem(0x49ce, { 0x99 });
        gbc.writeMem(0xa0b5, { 0x1a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2f2c, gbc.sp());
        EXPECT(0xa0b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa0b5));
        // 1A 0139
        gbc.setState(0xee7c, 0x6b2a, 0xb510, 0x6d33, 0x2c0e, 0x63d9, 0x1, 0x0);
        gbc.writeMem(0x2c0e, { 0x69 });
        gbc.writeMem(0xee7c, { 0x1a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6b2a, gbc.sp());
        EXPECT(0xee7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xee7c));
        // 1A 013A
        gbc.setState(0x28c4, 0x5714, 0x2a70, 0x7cc3, 0x59b6, 0x4afb, 0x0, 0x0);
        gbc.writeMem(0x28c4, { 0x1a });
        gbc.writeMem(0x59b6, { 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5714, gbc.sp());
        EXPECT(0x28c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 013B
        gbc.setState(0x82d1, 0x614a, 0xb1f0, 0x76f9, 0xd338, 0x1f3d, 0x1, 0x0);
        gbc.writeMem(0x82d1, { 0x1a });
        gbc.writeMem(0xd338, { 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x614a, gbc.sp());
        EXPECT(0x82d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x82d1));
        EXPECT(0x20, gbc.readMem(0xd338));
        // 1A 013C
        gbc.setState(0x96a7, 0xa08, 0xba30, 0xa64, 0x643, 0xae28, 0x1, 0x0);
        gbc.writeMem(0x643, { 0x23 });
        gbc.writeMem(0x96a7, { 0x1a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa08, gbc.sp());
        EXPECT(0x96a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x96a7));
        // 1A 013D
        gbc.setState(0x8a45, 0x1c71, 0xf680, 0x1edc, 0x3264, 0xfc55, 0x1, 0x1);
        gbc.writeMem(0x3264, { 0xa1 });
        gbc.writeMem(0x8a45, { 0x1a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1c71, gbc.sp());
        EXPECT(0x8a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8a45));
        // 1A 013E
        gbc.setState(0x8dc9, 0x89e7, 0x1660, 0x332a, 0x70e6, 0xc87b, 0x0, 0x0);
        gbc.writeMem(0x70e6, { 0xc5 });
        gbc.writeMem(0x8dc9, { 0x1a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x89e7, gbc.sp());
        EXPECT(0x8dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8dc9));
        // 1A 013F
        gbc.setState(0xe25, 0xc767, 0xa030, 0x8428, 0x235c, 0x240d, 0x0, 0x0);
        gbc.writeMem(0xe25, { 0x1a });
        gbc.writeMem(0x235c, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc767, gbc.sp());
        EXPECT(0xe26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0140
        gbc.setState(0x70d2, 0x9efa, 0xd090, 0x76eb, 0xd4f7, 0x109, 0x0, 0x0);
        gbc.writeMem(0x70d2, { 0x1a });
        gbc.writeMem(0xd4f7, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9efa, gbc.sp());
        EXPECT(0x70d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd4f7));
        // 1A 0141
        gbc.setState(0x8522, 0x1716, 0x8c60, 0x4cac, 0x4e4e, 0x3b4e, 0x1, 0x0);
        gbc.writeMem(0x4e4e, { 0xaa });
        gbc.writeMem(0x8522, { 0x1a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1716, gbc.sp());
        EXPECT(0x8523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8522));
        // 1A 0142
        gbc.setState(0xaf75, 0x64ca, 0x3ce0, 0x2919, 0xb0f2, 0xf810, 0x1, 0x0);
        gbc.writeMem(0xaf75, { 0x1a });
        gbc.writeMem(0xb0f2, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x64ca, gbc.sp());
        EXPECT(0xaf76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xaf75));
        EXPECT(0x55, gbc.readMem(0xb0f2));
        // 1A 0143
        gbc.setState(0x770b, 0xa8cf, 0xc060, 0x3038, 0xedf0, 0xa3e7, 0x1, 0x0);
        gbc.writeMem(0x770b, { 0x1a });
        gbc.writeMem(0xedf0, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa8cf, gbc.sp());
        EXPECT(0x770c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xedf0));
        // 1A 0144
        gbc.setState(0x3868, 0xc3c5, 0x55e0, 0x66ed, 0x7de5, 0xaaba, 0x1, 0x0);
        gbc.writeMem(0x3868, { 0x1a });
        gbc.writeMem(0x7de5, { 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc3c5, gbc.sp());
        EXPECT(0x3869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0145
        gbc.setState(0x2f0c, 0x5cb6, 0xd5c0, 0x20be, 0x2f96, 0x269f, 0x1, 0x0);
        gbc.writeMem(0x2f0c, { 0x1a });
        gbc.writeMem(0x2f96, { 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5cb6, gbc.sp());
        EXPECT(0x2f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0146
        gbc.setState(0x1ebf, 0xc34a, 0xa820, 0x3505, 0x8ec2, 0xe260, 0x0, 0x1);
        gbc.writeMem(0x1ebf, { 0x1a });
        gbc.writeMem(0x8ec2, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc34a, gbc.sp());
        EXPECT(0x1ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8ec2));
        // 1A 0147
        gbc.setState(0x4de5, 0x8975, 0x31d0, 0x666b, 0x99a8, 0x9480, 0x0, 0x1);
        gbc.writeMem(0x4de5, { 0x1a });
        gbc.writeMem(0x99a8, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8975, gbc.sp());
        EXPECT(0x4de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x99a8));
        // 1A 0148
        gbc.setState(0x6221, 0x9b71, 0x9aa0, 0xd3cc, 0x5828, 0xcb9e, 0x0, 0x0);
        gbc.writeMem(0x5828, { 0x85 });
        gbc.writeMem(0x6221, { 0x1a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9b71, gbc.sp());
        EXPECT(0x6222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0149
        gbc.setState(0x4bba, 0xacae, 0x5390, 0x74e9, 0xdc57, 0x5f08, 0x1, 0x1);
        gbc.writeMem(0x4bba, { 0x1a });
        gbc.writeMem(0xdc57, { 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xacae, gbc.sp());
        EXPECT(0x4bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xdc57));
        // 1A 014A
        gbc.setState(0x5b94, 0x6f6e, 0xf7f0, 0x3cc8, 0xb366, 0x5de6, 0x1, 0x0);
        gbc.writeMem(0x5b94, { 0x1a });
        gbc.writeMem(0xb366, { 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6f6e, gbc.sp());
        EXPECT(0x5b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xb366));
        // 1A 014B
        gbc.setState(0x497a, 0x8149, 0x22e0, 0xf1df, 0x8f70, 0x17d6, 0x1, 0x1);
        gbc.writeMem(0x497a, { 0x1a });
        gbc.writeMem(0x8f70, { 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8149, gbc.sp());
        EXPECT(0x497b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8f70));
        // 1A 014C
        gbc.setState(0xe3be, 0xccae, 0x7ab0, 0x99d2, 0xda35, 0xb3c1, 0x1, 0x0);
        gbc.writeMem(0xda35, { 0x57 });
        gbc.writeMem(0xe3be, { 0x1a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xccae, gbc.sp());
        EXPECT(0xe3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xda35));
        EXPECT(0x1a, gbc.readMem(0xe3be));
        // 1A 014D
        gbc.setState(0x915a, 0xf7fe, 0x8e10, 0x98b5, 0xfe7e, 0xb309, 0x0, 0x0);
        gbc.writeMem(0x915a, { 0x1a });
        gbc.writeMem(0xfe7e, { 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf7fe, gbc.sp());
        EXPECT(0x915b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x915a));
        EXPECT(0xe, gbc.readMem(0xfe7e));
        // 1A 014E
        gbc.setState(0x849b, 0x86db, 0x7840, 0x1a79, 0x9c64, 0xe657, 0x1, 0x1);
        gbc.writeMem(0x849b, { 0x1a });
        gbc.writeMem(0x9c64, { 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x86db, gbc.sp());
        EXPECT(0x849c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x849b));
        EXPECT(0x71, gbc.readMem(0x9c64));
        // 1A 014F
        gbc.setState(0x3585, 0xd1cc, 0x5790, 0x1c04, 0x8818, 0x1aab, 0x0, 0x1);
        gbc.writeMem(0x3585, { 0x1a });
        gbc.writeMem(0x8818, { 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd1cc, gbc.sp());
        EXPECT(0x3586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x8818));
        // 1A 0150
        gbc.setState(0x7e33, 0xdb7b, 0x2770, 0xe994, 0xf663, 0x6d77, 0x0, 0x1);
        gbc.writeMem(0x7e33, { 0x1a });
        gbc.writeMem(0xf663, { 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdb7b, gbc.sp());
        EXPECT(0x7e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xf663));
        // 1A 0151
        gbc.setState(0xe25a, 0x9281, 0xd050, 0xa555, 0x5a97, 0xdd11, 0x1, 0x0);
        gbc.writeMem(0x5a97, { 0xa });
        gbc.writeMem(0xe25a, { 0x1a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9281, gbc.sp());
        EXPECT(0xe25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe25a));
        // 1A 0152
        gbc.setState(0x305b, 0xa87c, 0x3490, 0xc3bc, 0x3808, 0xa3e8, 0x1, 0x0);
        gbc.writeMem(0x305b, { 0x1a });
        gbc.writeMem(0x3808, { 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa87c, gbc.sp());
        EXPECT(0x305c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0153
        gbc.setState(0x63bc, 0x3f7a, 0xb5c0, 0x17c5, 0xcbbc, 0x4955, 0x0, 0x0);
        gbc.writeMem(0x63bc, { 0x1a });
        gbc.writeMem(0xcbbc, { 0x9a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3f7a, gbc.sp());
        EXPECT(0x63bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xcbbc));
        // 1A 0154
        gbc.setState(0x5b14, 0x1466, 0x6c0, 0x682f, 0x6dbb, 0x413a, 0x0, 0x0);
        gbc.writeMem(0x5b14, { 0x1a });
        gbc.writeMem(0x6dbb, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1466, gbc.sp());
        EXPECT(0x5b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0155
        gbc.setState(0xd825, 0x5079, 0xe9f0, 0x4d62, 0x581, 0x2388, 0x0, 0x0);
        gbc.writeMem(0x581, { 0xf0 });
        gbc.writeMem(0xd825, { 0x1a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5079, gbc.sp());
        EXPECT(0xd826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd825));
        // 1A 0156
        gbc.setState(0x3e14, 0x703, 0xfa50, 0x6218, 0xe37a, 0xd05c, 0x1, 0x1);
        gbc.writeMem(0x3e14, { 0x1a });
        gbc.writeMem(0xe37a, { 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x703, gbc.sp());
        EXPECT(0x3e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe37a));
        // 1A 0157
        gbc.setState(0xd599, 0xbb1, 0x2270, 0x64db, 0x11c1, 0xd6b1, 0x1, 0x1);
        gbc.writeMem(0x11c1, { 0x9e });
        gbc.writeMem(0xd599, { 0x1a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbb1, gbc.sp());
        EXPECT(0xd59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd599));
        // 1A 0158
        gbc.setState(0x4263, 0xa58f, 0x2b10, 0x4bb5, 0xff0e, 0xdd0f, 0x1, 0x0);
        gbc.writeMem(0x4263, { 0x1a });
        gbc.writeMem(0xff0e, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa58f, gbc.sp());
        EXPECT(0x4264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xff0e));
        // 1A 0159
        gbc.setState(0x50c8, 0x392c, 0x8ef0, 0xc8c5, 0x6f6c, 0xc6cc, 0x0, 0x1);
        gbc.writeMem(0x50c8, { 0x1a });
        gbc.writeMem(0x6f6c, { 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x392c, gbc.sp());
        EXPECT(0x50c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 015A
        gbc.setState(0xdabd, 0x6948, 0x7610, 0xddbf, 0x857e, 0x583a, 0x0, 0x1);
        gbc.writeMem(0x857e, { 0x30 });
        gbc.writeMem(0xdabd, { 0x1a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6948, gbc.sp());
        EXPECT(0xdabe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x857e));
        EXPECT(0x1a, gbc.readMem(0xdabd));
        // 1A 015B
        gbc.setState(0xaaa1, 0x9d, 0x9340, 0x8ba1, 0xc08e, 0x3580, 0x1, 0x0);
        gbc.writeMem(0xaaa1, { 0x1a });
        gbc.writeMem(0xc08e, { 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9d, gbc.sp());
        EXPECT(0xaaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xaaa1));
        EXPECT(0xd2, gbc.readMem(0xc08e));
        // 1A 015C
        gbc.setState(0x6a5a, 0x57e4, 0x9200, 0x79a4, 0x8975, 0x2092, 0x0, 0x1);
        gbc.writeMem(0x6a5a, { 0x1a });
        gbc.writeMem(0x8975, { 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x57e4, gbc.sp());
        EXPECT(0x6a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8975));
        // 1A 015D
        gbc.setState(0x74b, 0xce7a, 0x4e90, 0xcd22, 0x7223, 0xd2a1, 0x1, 0x1);
        gbc.writeMem(0x74b, { 0x1a });
        gbc.writeMem(0x7223, { 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xce7a, gbc.sp());
        EXPECT(0x74c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 015F
        gbc.setState(0x2bb, 0x3814, 0x93a0, 0x3886, 0x2c10, 0xaa57, 0x1, 0x1);
        gbc.writeMem(0x2bb, { 0x1a });
        gbc.writeMem(0x2c10, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3814, gbc.sp());
        EXPECT(0x2bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0160
        gbc.setState(0x5ab0, 0xf90f, 0xbcc0, 0xf5f5, 0xe4b0, 0x78d8, 0x0, 0x1);
        gbc.writeMem(0x5ab0, { 0x1a });
        gbc.writeMem(0xe4b0, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf90f, gbc.sp());
        EXPECT(0x5ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xe4b0));
        // 1A 0161
        gbc.setState(0xb6b9, 0xa0db, 0xcfa0, 0x41ba, 0xa560, 0x162, 0x0, 0x1);
        gbc.writeMem(0xa560, { 0x14 });
        gbc.writeMem(0xb6b9, { 0x1a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa0db, gbc.sp());
        EXPECT(0xb6ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa560));
        EXPECT(0x1a, gbc.readMem(0xb6b9));
        // 1A 0162
        gbc.setState(0xd487, 0xb580, 0x6650, 0xeca7, 0xe4ca, 0x9856, 0x1, 0x0);
        gbc.writeMem(0xd487, { 0x1a });
        gbc.writeMem(0xe4ca, { 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb580, gbc.sp());
        EXPECT(0xd488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd487));
        EXPECT(0x32, gbc.readMem(0xe4ca));
        // 1A 0163
        gbc.setState(0x22f1, 0xaebe, 0xd310, 0x8b03, 0x7897, 0xcf3a, 0x0, 0x0);
        gbc.writeMem(0x22f1, { 0x1a });
        gbc.writeMem(0x7897, { 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xaebe, gbc.sp());
        EXPECT(0x22f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0164
        gbc.setState(0x69fb, 0x9ac4, 0x71c0, 0x3cd1, 0x1627, 0xf910, 0x0, 0x1);
        gbc.writeMem(0x1627, { 0x7d });
        gbc.writeMem(0x69fb, { 0x1a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9ac4, gbc.sp());
        EXPECT(0x69fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0165
        gbc.setState(0xabbe, 0xdfdf, 0xb5b0, 0x875d, 0x3d0d, 0xccaa, 0x0, 0x1);
        gbc.writeMem(0x3d0d, { 0xaf });
        gbc.writeMem(0xabbe, { 0x1a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdfdf, gbc.sp());
        EXPECT(0xabbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xabbe));
        // 1A 0166
        gbc.setState(0xc713, 0xffbd, 0x2e90, 0x4739, 0x58f9, 0x2c87, 0x0, 0x0);
        gbc.writeMem(0x58f9, { 0xf1 });
        gbc.writeMem(0xc713, { 0x1a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xffbd, gbc.sp());
        EXPECT(0xc714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc713));
        // 1A 0167
        gbc.setState(0x8825, 0xe7b1, 0xbb70, 0x50c6, 0x397b, 0x40ab, 0x0, 0x1);
        gbc.writeMem(0x397b, { 0x8a });
        gbc.writeMem(0x8825, { 0x1a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe7b1, gbc.sp());
        EXPECT(0x8826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8825));
        // 1A 016A
        gbc.setState(0xb5cb, 0xdec, 0x3350, 0x97e, 0x1592, 0x3158, 0x0, 0x1);
        gbc.writeMem(0x1592, { 0xa3 });
        gbc.writeMem(0xb5cb, { 0x1a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdec, gbc.sp());
        EXPECT(0xb5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb5cb));
        // 1A 016B
        gbc.setState(0x5306, 0x3fd5, 0xe1e0, 0x6cf4, 0x83d2, 0x4871, 0x1, 0x1);
        gbc.writeMem(0x5306, { 0x1a });
        gbc.writeMem(0x83d2, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3fd5, gbc.sp());
        EXPECT(0x5307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x83d2));
        // 1A 016C
        gbc.setState(0xce3, 0x1f67, 0xf5b0, 0xe135, 0xdb26, 0x946a, 0x1, 0x1);
        gbc.writeMem(0xce3, { 0x1a });
        gbc.writeMem(0xdb26, { 0x60 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1f67, gbc.sp());
        EXPECT(0xce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xdb26));
        // 1A 016E
        gbc.setState(0x3d0b, 0x8c5a, 0xe560, 0x4b31, 0xa489, 0xcd00, 0x0, 0x0);
        gbc.writeMem(0x3d0b, { 0x1a });
        gbc.writeMem(0xa489, { 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8c5a, gbc.sp());
        EXPECT(0x3d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa489));
        // 1A 0170
        gbc.setState(0xdfcb, 0x340d, 0x36a0, 0x4f17, 0xefc5, 0x1601, 0x0, 0x1);
        gbc.writeMem(0xdfcb, { 0x1a });
        gbc.writeMem(0xefc5, { 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x340d, gbc.sp());
        EXPECT(0xdfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdfcb));
        EXPECT(0x3a, gbc.readMem(0xefc5));
        // 1A 0171
        gbc.setState(0x249a, 0x137f, 0x5ee0, 0x6ffd, 0x527c, 0xb5b1, 0x0, 0x0);
        gbc.writeMem(0x249a, { 0x1a });
        gbc.writeMem(0x527c, { 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x137f, gbc.sp());
        EXPECT(0x249b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0172
        gbc.setState(0xc624, 0xf5d3, 0x74c0, 0x4e03, 0xabe9, 0x9b46, 0x0, 0x1);
        gbc.writeMem(0xabe9, { 0xab });
        gbc.writeMem(0xc624, { 0x1a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf5d3, gbc.sp());
        EXPECT(0xc625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xabe9));
        EXPECT(0x1a, gbc.readMem(0xc624));
        // 1A 0173
        gbc.setState(0x9765, 0x1642, 0x7ec0, 0x14e1, 0xd78d, 0x4490, 0x1, 0x0);
        gbc.writeMem(0x9765, { 0x1a });
        gbc.writeMem(0xd78d, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1642, gbc.sp());
        EXPECT(0x9766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9765));
        EXPECT(0x63, gbc.readMem(0xd78d));
        // 1A 0174
        gbc.setState(0xe09f, 0x96e3, 0x2ec0, 0x4263, 0x5b4d, 0x48b3, 0x1, 0x1);
        gbc.writeMem(0x5b4d, { 0x4f });
        gbc.writeMem(0xe09f, { 0x1a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x96e3, gbc.sp());
        EXPECT(0xe0a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe09f));
        // 1A 0175
        gbc.setState(0xd902, 0x1738, 0xf430, 0x7ef7, 0x34bc, 0x4c9a, 0x0, 0x1);
        gbc.writeMem(0x34bc, { 0x31 });
        gbc.writeMem(0xd902, { 0x1a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1738, gbc.sp());
        EXPECT(0xd903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd902));
        // 1A 0176
        gbc.setState(0x8cbf, 0x4870, 0xb2d0, 0x9cbf, 0xcb58, 0xe3ef, 0x1, 0x1);
        gbc.writeMem(0x8cbf, { 0x1a });
        gbc.writeMem(0xcb58, { 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4870, gbc.sp());
        EXPECT(0x8cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8cbf));
        EXPECT(0x4a, gbc.readMem(0xcb58));
        // 1A 0177
        gbc.setState(0x6af1, 0xc793, 0x90d0, 0xee8, 0x7713, 0xd218, 0x1, 0x1);
        gbc.writeMem(0x6af1, { 0x1a });
        gbc.writeMem(0x7713, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc793, gbc.sp());
        EXPECT(0x6af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0178
        gbc.setState(0x2934, 0x4265, 0xb4e0, 0x3452, 0x71fc, 0xc922, 0x1, 0x0);
        gbc.writeMem(0x2934, { 0x1a });
        gbc.writeMem(0x71fc, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4265, gbc.sp());
        EXPECT(0x2935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 017A
        gbc.setState(0x29bd, 0xb9f1, 0x6a80, 0x6387, 0xbf80, 0xbea0, 0x1, 0x0);
        gbc.writeMem(0x29bd, { 0x1a });
        gbc.writeMem(0xbf80, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb9f1, gbc.sp());
        EXPECT(0x29be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbf80));
        // 1A 017B
        gbc.setState(0xbe6e, 0x155b, 0xe850, 0xc940, 0xc30e, 0xb1d3, 0x1, 0x1);
        gbc.writeMem(0xbe6e, { 0x1a });
        gbc.writeMem(0xc30e, { 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x155b, gbc.sp());
        EXPECT(0xbe6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbe6e));
        EXPECT(0xfe, gbc.readMem(0xc30e));
        // 1A 017C
        gbc.setState(0xc30a, 0x9ba, 0x78a0, 0xacd6, 0x84ee, 0xe7bf, 0x1, 0x0);
        gbc.writeMem(0x84ee, { 0xd4 });
        gbc.writeMem(0xc30a, { 0x1a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9ba, gbc.sp());
        EXPECT(0xc30b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x84ee));
        EXPECT(0x1a, gbc.readMem(0xc30a));
        // 1A 017D
        gbc.setState(0x371f, 0xda0b, 0x9cd0, 0x996d, 0x243c, 0x9ee7, 0x0, 0x0);
        gbc.writeMem(0x243c, { 0x34 });
        gbc.writeMem(0x371f, { 0x1a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xda0b, gbc.sp());
        EXPECT(0x3720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 017E
        gbc.setState(0xa086, 0xcf12, 0x6ec0, 0xddb8, 0xdcab, 0x2034, 0x0, 0x0);
        gbc.writeMem(0xa086, { 0x1a });
        gbc.writeMem(0xdcab, { 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcf12, gbc.sp());
        EXPECT(0xa087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa086));
        EXPECT(0xee, gbc.readMem(0xdcab));
        // 1A 017F
        gbc.setState(0x800b, 0x3d20, 0xbd90, 0xba2, 0x28db, 0x6354, 0x0, 0x1);
        gbc.writeMem(0x28db, { 0xd7 });
        gbc.writeMem(0x800b, { 0x1a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3d20, gbc.sp());
        EXPECT(0x800c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x800b));
        // 1A 0180
        gbc.setState(0x5b7, 0x26c4, 0xd8e0, 0x6c99, 0x3273, 0x4f6a, 0x0, 0x0);
        gbc.writeMem(0x5b7, { 0x1a });
        gbc.writeMem(0x3273, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x26c4, gbc.sp());
        EXPECT(0x5b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0181
        gbc.setState(0xa5c6, 0x285, 0xc7e0, 0x8806, 0x1dba, 0x7ffa, 0x0, 0x0);
        gbc.writeMem(0x1dba, { 0xf3 });
        gbc.writeMem(0xa5c6, { 0x1a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x285, gbc.sp());
        EXPECT(0xa5c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa5c6));
        // 1A 0182
        gbc.setState(0xd93c, 0x4859, 0x9c0, 0xed22, 0x2a09, 0xc9ef, 0x1, 0x1);
        gbc.writeMem(0x2a09, { 0xc7 });
        gbc.writeMem(0xd93c, { 0x1a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4859, gbc.sp());
        EXPECT(0xd93d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd93c));
        // 1A 0183
        gbc.setState(0x6f6, 0xee54, 0xb7a0, 0x8e3f, 0x6f35, 0x2df9, 0x0, 0x1);
        gbc.writeMem(0x6f6, { 0x1a });
        gbc.writeMem(0x6f35, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xee54, gbc.sp());
        EXPECT(0x6f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0184
        gbc.setState(0xd7d3, 0xa9d7, 0xfd90, 0xe884, 0x1b0a, 0x8e51, 0x1, 0x0);
        gbc.writeMem(0x1b0a, { 0x85 });
        gbc.writeMem(0xd7d3, { 0x1a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa9d7, gbc.sp());
        EXPECT(0xd7d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd7d3));
        // 1A 0185
        gbc.setState(0xecfb, 0xdcc2, 0xe3b0, 0x3519, 0xf730, 0x20d9, 0x1, 0x0);
        gbc.writeMem(0xecfb, { 0x1a });
        gbc.writeMem(0xf730, { 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdcc2, gbc.sp());
        EXPECT(0xecfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xecfb));
        EXPECT(0x91, gbc.readMem(0xf730));
        // 1A 0186
        gbc.setState(0x4b6f, 0x22c7, 0xbbb0, 0xfd80, 0xb74f, 0xca3f, 0x0, 0x0);
        gbc.writeMem(0x4b6f, { 0x1a });
        gbc.writeMem(0xb74f, { 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x22c7, gbc.sp());
        EXPECT(0x4b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xb74f));
        // 1A 0187
        gbc.setState(0x40f2, 0xb50, 0x99a0, 0x22af, 0xafee, 0x35f5, 0x0, 0x0);
        gbc.writeMem(0x40f2, { 0x1a });
        gbc.writeMem(0xafee, { 0x81 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb50, gbc.sp());
        EXPECT(0x40f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xafee));
        // 1A 0188
        gbc.setState(0x5bf9, 0xebec, 0x88a0, 0xdc06, 0x1701, 0x4ad5, 0x0, 0x0);
        gbc.writeMem(0x1701, { 0x7 });
        gbc.writeMem(0x5bf9, { 0x1a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xebec, gbc.sp());
        EXPECT(0x5bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0189
        gbc.setState(0xc114, 0xe1bf, 0x9bf0, 0x113b, 0x77bb, 0xc3e1, 0x1, 0x0);
        gbc.writeMem(0x77bb, { 0x49 });
        gbc.writeMem(0xc114, { 0x1a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe1bf, gbc.sp());
        EXPECT(0xc115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc114));
        // 1A 018A
        gbc.setState(0x8215, 0xe7f1, 0xa970, 0xc5db, 0x119f, 0xec2c, 0x0, 0x1);
        gbc.writeMem(0x119f, { 0x64 });
        gbc.writeMem(0x8215, { 0x1a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe7f1, gbc.sp());
        EXPECT(0x8216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8215));
        // 1A 018B
        gbc.setState(0x422c, 0xbcc2, 0xdba0, 0xb11e, 0x5c7e, 0x75ba, 0x0, 0x0);
        gbc.writeMem(0x422c, { 0x1a });
        gbc.writeMem(0x5c7e, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbcc2, gbc.sp());
        EXPECT(0x422d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 018C
        gbc.setState(0xbfb4, 0x511e, 0xf0b0, 0xbaa6, 0x5e2e, 0xef4, 0x1, 0x1);
        gbc.writeMem(0x5e2e, { 0x8d });
        gbc.writeMem(0xbfb4, { 0x1a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x511e, gbc.sp());
        EXPECT(0xbfb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbfb4));
        // 1A 018D
        gbc.setState(0x3151, 0xdb1, 0x4fb0, 0x7dbc, 0x642b, 0xd476, 0x1, 0x1);
        gbc.writeMem(0x3151, { 0x1a });
        gbc.writeMem(0x642b, { 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdb1, gbc.sp());
        EXPECT(0x3152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 018E
        gbc.setState(0x1721, 0x1add, 0x67e0, 0x72cc, 0x439a, 0x59b0, 0x0, 0x1);
        gbc.writeMem(0x1721, { 0x1a });
        gbc.writeMem(0x439a, { 0x7e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1add, gbc.sp());
        EXPECT(0x1722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 018F
        gbc.setState(0xdcee, 0xec46, 0x310, 0xeb9c, 0x226b, 0x7d0b, 0x0, 0x0);
        gbc.writeMem(0x226b, { 0x1b });
        gbc.writeMem(0xdcee, { 0x1a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xec46, gbc.sp());
        EXPECT(0xdcef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdcee));
        // 1A 0190
        gbc.setState(0xc84a, 0x54e8, 0x8c90, 0x1068, 0xf2e1, 0x76ad, 0x0, 0x1);
        gbc.writeMem(0xc84a, { 0x1a });
        gbc.writeMem(0xf2e1, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x54e8, gbc.sp());
        EXPECT(0xc84b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc84a));
        EXPECT(0xe1, gbc.readMem(0xf2e1));
        // 1A 0191
        gbc.setState(0xa353, 0xbe4f, 0xaba0, 0x2a10, 0x384, 0x64f8, 0x1, 0x0);
        gbc.writeMem(0x384, { 0xe6 });
        gbc.writeMem(0xa353, { 0x1a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbe4f, gbc.sp());
        EXPECT(0xa354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa353));
        // 1A 0192
        gbc.setState(0x890a, 0xad64, 0x1c70, 0xe748, 0x7145, 0xac97, 0x1, 0x0);
        gbc.writeMem(0x7145, { 0xfb });
        gbc.writeMem(0x890a, { 0x1a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xad64, gbc.sp());
        EXPECT(0x890b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x890a));
        // 1A 0193
        gbc.setState(0x593b, 0x47ec, 0x5400, 0xf2bc, 0xba68, 0x3dc5, 0x0, 0x0);
        gbc.writeMem(0x593b, { 0x1a });
        gbc.writeMem(0xba68, { 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x47ec, gbc.sp());
        EXPECT(0x593c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xba68));
        // 1A 0194
        gbc.setState(0x2463, 0x2f82, 0x2ad0, 0xb64f, 0x536e, 0xc8a5, 0x1, 0x1);
        gbc.writeMem(0x2463, { 0x1a });
        gbc.writeMem(0x536e, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2f82, gbc.sp());
        EXPECT(0x2464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0195
        gbc.setState(0xdaf7, 0x552, 0xe480, 0xc2f3, 0x9b76, 0x2fd4, 0x0, 0x1);
        gbc.writeMem(0x9b76, { 0x54 });
        gbc.writeMem(0xdaf7, { 0x1a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x552, gbc.sp());
        EXPECT(0xdaf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x9b76));
        EXPECT(0x1a, gbc.readMem(0xdaf7));
        // 1A 0196
        gbc.setState(0x4288, 0x52c1, 0x6700, 0xf8a, 0x567a, 0xbb44, 0x0, 0x0);
        gbc.writeMem(0x4288, { 0x1a });
        gbc.writeMem(0x567a, { 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x52c1, gbc.sp());
        EXPECT(0x4289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0197
        gbc.setState(0xc7fe, 0xdda6, 0x7af0, 0x1b75, 0x1ed2, 0x11d0, 0x0, 0x1);
        gbc.writeMem(0x1ed2, { 0xbf });
        gbc.writeMem(0xc7fe, { 0x1a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdda6, gbc.sp());
        EXPECT(0xc7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc7fe));
        // 1A 0198
        gbc.setState(0x847e, 0x4298, 0x1aa0, 0x3b4e, 0xb389, 0x8727, 0x0, 0x0);
        gbc.writeMem(0x847e, { 0x1a });
        gbc.writeMem(0xb389, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4298, gbc.sp());
        EXPECT(0x847f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x847e));
        EXPECT(0x5f, gbc.readMem(0xb389));
        // 1A 0199
        gbc.setState(0x17d1, 0xdaae, 0x73e0, 0x4d7d, 0x5c04, 0x785b, 0x0, 0x1);
        gbc.writeMem(0x17d1, { 0x1a });
        gbc.writeMem(0x5c04, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xdaae, gbc.sp());
        EXPECT(0x17d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 019A
        gbc.setState(0x5588, 0x2940, 0x7690, 0x931c, 0x1c02, 0xf09d, 0x0, 0x0);
        gbc.writeMem(0x1c02, { 0xbc });
        gbc.writeMem(0x5588, { 0x1a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2940, gbc.sp());
        EXPECT(0x5589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 019B
        gbc.setState(0x7077, 0x1a09, 0x1920, 0x6df7, 0x559f, 0xceeb, 0x1, 0x1);
        gbc.writeMem(0x559f, { 0xd4 });
        gbc.writeMem(0x7077, { 0x1a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1a09, gbc.sp());
        EXPECT(0x7078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 019C
        gbc.setState(0x757, 0x9a54, 0xdc40, 0xec4, 0x4a7b, 0xa74e, 0x1, 0x0);
        gbc.writeMem(0x757, { 0x1a });
        gbc.writeMem(0x4a7b, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9a54, gbc.sp());
        EXPECT(0x758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 019D
        gbc.setState(0x5424, 0xc5da, 0x5050, 0xa931, 0x7c9a, 0x9d32, 0x1, 0x0);
        gbc.writeMem(0x5424, { 0x1a });
        gbc.writeMem(0x7c9a, { 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc5da, gbc.sp());
        EXPECT(0x5425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 019E
        gbc.setState(0xeb35, 0x7d01, 0x8890, 0x540b, 0x5eb8, 0x3b2f, 0x1, 0x0);
        gbc.writeMem(0x5eb8, { 0x8e });
        gbc.writeMem(0xeb35, { 0x1a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7d01, gbc.sp());
        EXPECT(0xeb36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xeb35));
        // 1A 019F
        gbc.setState(0x46cd, 0xc280, 0x5e80, 0x89be, 0xfd9b, 0x83cb, 0x0, 0x1);
        gbc.writeMem(0x46cd, { 0x1a });
        gbc.writeMem(0xfd9b, { 0xb4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc280, gbc.sp());
        EXPECT(0x46ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xfd9b));
        // 1A 01A0
        gbc.setState(0x5ee8, 0xd0f, 0x3e60, 0x5981, 0x881e, 0xeb16, 0x0, 0x1);
        gbc.writeMem(0x5ee8, { 0x1a });
        gbc.writeMem(0x881e, { 0x54 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd0f, gbc.sp());
        EXPECT(0x5ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x881e));
        // 1A 01A1
        gbc.setState(0x6487, 0xfb9c, 0xb100, 0xb302, 0x4621, 0x1ae3, 0x1, 0x0);
        gbc.writeMem(0x4621, { 0x83 });
        gbc.writeMem(0x6487, { 0x1a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfb9c, gbc.sp());
        EXPECT(0x6488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 01A2
        gbc.setState(0x9fd4, 0xb1b6, 0x9890, 0xb6ac, 0x7a0, 0x9b29, 0x0, 0x0);
        gbc.writeMem(0x7a0, { 0x95 });
        gbc.writeMem(0x9fd4, { 0x1a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb1b6, gbc.sp());
        EXPECT(0x9fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9fd4));
        // 1A 01A3
        gbc.setState(0xd4aa, 0x89a8, 0xb670, 0x1648, 0xe43, 0x6dc2, 0x1, 0x1);
        gbc.writeMem(0xe43, { 0xa5 });
        gbc.writeMem(0xd4aa, { 0x1a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x89a8, gbc.sp());
        EXPECT(0xd4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd4aa));
        // 1A 01A4
        gbc.setState(0x3735, 0xa9d8, 0x310, 0xeb1f, 0xbb59, 0xcbee, 0x0, 0x0);
        gbc.writeMem(0x3735, { 0x1a });
        gbc.writeMem(0xbb59, { 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa9d8, gbc.sp());
        EXPECT(0x3736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbb59));
        // 1A 01A5
        gbc.setState(0xdc00, 0x75d5, 0xdb90, 0xc6b4, 0xbbdb, 0x111a, 0x1, 0x0);
        gbc.writeMem(0xbbdb, { 0x20 });
        gbc.writeMem(0xdc00, { 0x1a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x75d5, gbc.sp());
        EXPECT(0xdc01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xbbdb));
        EXPECT(0x1a, gbc.readMem(0xdc00));
        // 1A 01A6
        gbc.setState(0x3508, 0x82f9, 0x3c00, 0xbe24, 0x5cc8, 0xb98c, 0x1, 0x1);
        gbc.writeMem(0x3508, { 0x1a });
        gbc.writeMem(0x5cc8, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x82f9, gbc.sp());
        EXPECT(0x3509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 01A7
        gbc.setState(0x9b21, 0x4450, 0xe860, 0xf760, 0x4058, 0x3fc9, 0x1, 0x1);
        gbc.writeMem(0x4058, { 0x6c });
        gbc.writeMem(0x9b21, { 0x1a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4450, gbc.sp());
        EXPECT(0x9b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9b21));
        // 1A 01A8
        gbc.setState(0xe3e9, 0xde5c, 0x5860, 0x5b84, 0x3697, 0xd51, 0x0, 0x1);
        gbc.writeMem(0x3697, { 0x57 });
        gbc.writeMem(0xe3e9, { 0x1a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xde5c, gbc.sp());
        EXPECT(0xe3ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe3e9));
        // 1A 01A9
        gbc.setState(0x2df, 0x9c2d, 0x34e0, 0x5696, 0xd2c7, 0x4f48, 0x1, 0x1);
        gbc.writeMem(0x2df, { 0x1a });
        gbc.writeMem(0xd2c7, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9c2d, gbc.sp());
        EXPECT(0x2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xd2c7));
        // 1A 01AA
        gbc.setState(0xd677, 0x2aaf, 0xe690, 0xf8a8, 0xa137, 0x681c, 0x1, 0x1);
        gbc.writeMem(0xa137, { 0x1e });
        gbc.writeMem(0xd677, { 0x1a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2aaf, gbc.sp());
        EXPECT(0xd678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xa137));
        EXPECT(0x1a, gbc.readMem(0xd677));
        // 1A 01AB
        gbc.setState(0x5dc2, 0xbc1, 0x1190, 0xaf6b, 0x4706, 0x64ec, 0x0, 0x1);
        gbc.writeMem(0x4706, { 0x6b });
        gbc.writeMem(0x5dc2, { 0x1a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbc1, gbc.sp());
        EXPECT(0x5dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 01AC
        gbc.setState(0x28fb, 0x532, 0x1df0, 0x58d9, 0x4146, 0xf096, 0x1, 0x1);
        gbc.writeMem(0x28fb, { 0x1a });
        gbc.writeMem(0x4146, { 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x532, gbc.sp());
        EXPECT(0x28fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 01AD
        gbc.setState(0x96c1, 0x8b79, 0xc910, 0x1043, 0x370, 0xa75b, 0x1, 0x1);
        gbc.writeMem(0x370, { 0xdf });
        gbc.writeMem(0x96c1, { 0x1a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8b79, gbc.sp());
        EXPECT(0x96c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x96c1));
        // 1A 01AE
        gbc.setState(0x6b5d, 0xad1a, 0x6eb0, 0xc96, 0xdca8, 0x6949, 0x1, 0x1);
        gbc.writeMem(0x6b5d, { 0x1a });
        gbc.writeMem(0xdca8, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xad1a, gbc.sp());
        EXPECT(0x6b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdca8));
        // 1A 01B0
        gbc.setState(0x8751, 0xfb68, 0x7770, 0x2cc2, 0x335e, 0xf258, 0x1, 0x1);
        gbc.writeMem(0x335e, { 0x3d });
        gbc.writeMem(0x8751, { 0x1a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfb68, gbc.sp());
        EXPECT(0x8752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8751));
        // 1A 01B1
        gbc.setState(0x7dee, 0x3b21, 0x5760, 0xd411, 0x612b, 0x133b, 0x0, 0x0);
        gbc.writeMem(0x612b, { 0x1b });
        gbc.writeMem(0x7dee, { 0x1a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3b21, gbc.sp());
        EXPECT(0x7def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 01B3
        gbc.setState(0x3d3e, 0x67a0, 0x67d0, 0x410a, 0xad46, 0xcc37, 0x0, 0x1);
        gbc.writeMem(0x3d3e, { 0x1a });
        gbc.writeMem(0xad46, { 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x67a0, gbc.sp());
        EXPECT(0x3d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xad46));
        // 1A 01B4
        gbc.setState(0xee05, 0xe4ff, 0x67c0, 0x4672, 0x36da, 0x8cf8, 0x0, 0x0);
        gbc.writeMem(0x36da, { 0xf3 });
        gbc.writeMem(0xee05, { 0x1a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe4ff, gbc.sp());
        EXPECT(0xee06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xee05));
        // 1A 01B5
        gbc.setState(0x8097, 0x595c, 0xdab0, 0x54c7, 0xb64e, 0x2343, 0x1, 0x0);
        gbc.writeMem(0x8097, { 0x1a });
        gbc.writeMem(0xb64e, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x595c, gbc.sp());
        EXPECT(0x8098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8097));
        EXPECT(0x76, gbc.readMem(0xb64e));
        // 1A 01B6
        gbc.setState(0xd354, 0x2676, 0x1b30, 0x7105, 0x4fb9, 0x7415, 0x1, 0x0);
        gbc.writeMem(0x4fb9, { 0x50 });
        gbc.writeMem(0xd354, { 0x1a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2676, gbc.sp());
        EXPECT(0xd355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd354));
        // 1A 01B7
        gbc.setState(0xc5b, 0xf019, 0x2c90, 0xfe3f, 0x2098, 0x1312, 0x0, 0x0);
        gbc.writeMem(0xc5b, { 0x1a });
        gbc.writeMem(0x2098, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf019, gbc.sp());
        EXPECT(0xc5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 01B8
        gbc.setState(0xd005, 0x1c7b, 0x4770, 0x4290, 0x1ada, 0x480e, 0x0, 0x1);
        gbc.writeMem(0x1ada, { 0xcd });
        gbc.writeMem(0xd005, { 0x1a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1c7b, gbc.sp());
        EXPECT(0xd006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd005));
        // 1A 01B9
        gbc.setState(0xa4dc, 0x3a96, 0xe880, 0xe31b, 0xcfc, 0x6caf, 0x1, 0x0);
        gbc.writeMem(0xcfc, { 0x3f });
        gbc.writeMem(0xa4dc, { 0x1a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3a96, gbc.sp());
        EXPECT(0xa4dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa4dc));
        // 1A 01BA
        gbc.setState(0xb6bd, 0x435a, 0xdc90, 0xe25, 0x699a, 0xdcb9, 0x0, 0x1);
        gbc.writeMem(0x699a, { 0xc1 });
        gbc.writeMem(0xb6bd, { 0x1a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x435a, gbc.sp());
        EXPECT(0xb6be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb6bd));
        // 1A 01BB
        gbc.setState(0xd4f5, 0x85e3, 0x2ec0, 0xb4c, 0x2d4d, 0x31c, 0x1, 0x0);
        gbc.writeMem(0x2d4d, { 0xa7 });
        gbc.writeMem(0xd4f5, { 0x1a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x85e3, gbc.sp());
        EXPECT(0xd4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd4f5));
        // 1A 01BC
        gbc.setState(0xdc38, 0x170d, 0x180, 0xc2e8, 0x6067, 0x34ba, 0x0, 0x0);
        gbc.writeMem(0x6067, { 0x64 });
        gbc.writeMem(0xdc38, { 0x1a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x170d, gbc.sp());
        EXPECT(0xdc39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdc38));
        // 1A 01BD
        gbc.setState(0x1190, 0xa33a, 0x93b0, 0x1e61, 0x827b, 0x4a95, 0x0, 0x1);
        gbc.writeMem(0x1190, { 0x1a });
        gbc.writeMem(0x827b, { 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa33a, gbc.sp());
        EXPECT(0x1191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x827b));
        // 1A 01BE
        gbc.setState(0x59e0, 0xcc36, 0xf4c0, 0x54e8, 0x3b93, 0xcaac, 0x1, 0x1);
        gbc.writeMem(0x3b93, { 0xed });
        gbc.writeMem(0x59e0, { 0x1a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcc36, gbc.sp());
        EXPECT(0x59e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 01BF
        gbc.setState(0xa4b5, 0x38fc, 0x2810, 0x29ad, 0x1635, 0x817d, 0x0, 0x0);
        gbc.writeMem(0x1635, { 0x17 });
        gbc.writeMem(0xa4b5, { 0x1a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x38fc, gbc.sp());
        EXPECT(0xa4b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa4b5));
        // 1A 01C0
        gbc.setState(0xd4ce, 0x7d3b, 0x2c00, 0xe2e0, 0xb1f4, 0x581b, 0x0, 0x0);
        gbc.writeMem(0xb1f4, { 0x8c });
        gbc.writeMem(0xd4ce, { 0x1a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7d3b, gbc.sp());
        EXPECT(0xd4cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb1f4));
        EXPECT(0x1a, gbc.readMem(0xd4ce));
        // 1A 01C1
        gbc.setState(0xf3b, 0xdc56, 0x9d30, 0x256b, 0x6193, 0xc928, 0x0, 0x0);
        gbc.writeMem(0xf3b, { 0x1a });
        gbc.writeMem(0x6193, { 0xca });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdc56, gbc.sp());
        EXPECT(0xf3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 01C2
        gbc.setState(0xb068, 0x2958, 0xf970, 0xd2f, 0x25c8, 0x7030, 0x1, 0x0);
        gbc.writeMem(0x25c8, { 0x9c });
        gbc.writeMem(0xb068, { 0x1a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2958, gbc.sp());
        EXPECT(0xb069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb068));
        // 1A 01C3
        gbc.setState(0x26a0, 0xc486, 0xb960, 0xc8bb, 0xd2ba, 0x2e24, 0x0, 0x0);
        gbc.writeMem(0x26a0, { 0x1a });
        gbc.writeMem(0xd2ba, { 0xd1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc486, gbc.sp());
        EXPECT(0x26a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xd2ba));
        // 1A 01C4
        gbc.setState(0x577c, 0x7917, 0xa050, 0x80f7, 0x4f56, 0x1594, 0x0, 0x0);
        gbc.writeMem(0x4f56, { 0xa2 });
        gbc.writeMem(0x577c, { 0x1a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7917, gbc.sp());
        EXPECT(0x577d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 01C5
        gbc.setState(0x95c2, 0x731e, 0x7210, 0x65aa, 0x4c8d, 0xae3e, 0x1, 0x0);
        gbc.writeMem(0x4c8d, { 0x1e });
        gbc.writeMem(0x95c2, { 0x1a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x731e, gbc.sp());
        EXPECT(0x95c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x95c2));
        // 1A 01C6
        gbc.setState(0x71f, 0xab99, 0x8460, 0x3c5c, 0xb4bc, 0x9d5b, 0x0, 0x0);
        gbc.writeMem(0x71f, { 0x1a });
        gbc.writeMem(0xb4bc, { 0x15 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xab99, gbc.sp());
        EXPECT(0x720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb4bc));
        // 1A 01C7
        gbc.setState(0x7b75, 0x15a, 0x5230, 0x2f14, 0xa3a4, 0xbb9d, 0x0, 0x1);
        gbc.writeMem(0x7b75, { 0x1a });
        gbc.writeMem(0xa3a4, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x15a, gbc.sp());
        EXPECT(0x7b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa3a4));
        // 1A 01C8
        gbc.setState(0x1b7d, 0xd966, 0x7450, 0xb887, 0xc428, 0x5109, 0x0, 0x1);
        gbc.writeMem(0x1b7d, { 0x1a });
        gbc.writeMem(0xc428, { 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd966, gbc.sp());
        EXPECT(0x1b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xc428));
        // 1A 01C9
        gbc.setState(0x7b4e, 0x8452, 0x3b40, 0x54f, 0x3905, 0x2ff5, 0x0, 0x0);
        gbc.writeMem(0x3905, { 0x27 });
        gbc.writeMem(0x7b4e, { 0x1a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8452, gbc.sp());
        EXPECT(0x7b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 01CA
        gbc.setState(0xae9, 0xd4de, 0x38d0, 0xe19, 0x7f36, 0x17b1, 0x0, 0x1);
        gbc.writeMem(0xae9, { 0x1a });
        gbc.writeMem(0x7f36, { 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd4de, gbc.sp());
        EXPECT(0xaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 01CB
        gbc.setState(0x898, 0xa122, 0x4f90, 0x70f8, 0x9279, 0x63b7, 0x0, 0x1);
        gbc.writeMem(0x898, { 0x1a });
        gbc.writeMem(0x9279, { 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa122, gbc.sp());
        EXPECT(0x899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9279));
        // 1A 01CC
        gbc.setState(0x8826, 0xa5df, 0x8640, 0x98c8, 0xd3c8, 0x507e, 0x1, 0x1);
        gbc.writeMem(0x8826, { 0x1a });
        gbc.writeMem(0xd3c8, { 0xe2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa5df, gbc.sp());
        EXPECT(0x8827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8826));
        EXPECT(0xe2, gbc.readMem(0xd3c8));
        // 1A 01CD
        gbc.setState(0xac50, 0x7a94, 0xfeb0, 0x3104, 0x38d9, 0x4a81, 0x0, 0x1);
        gbc.writeMem(0x38d9, { 0x3a });
        gbc.writeMem(0xac50, { 0x1a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7a94, gbc.sp());
        EXPECT(0xac51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xac50));
        // 1A 01CE
        gbc.setState(0x27ed, 0x1cc8, 0xfde0, 0x413e, 0x2f19, 0xd9cf, 0x1, 0x0);
        gbc.writeMem(0x27ed, { 0x1a });
        gbc.writeMem(0x2f19, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1cc8, gbc.sp());
        EXPECT(0x27ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 01CF
        gbc.setState(0x890f, 0xe399, 0x2b60, 0xe967, 0x9b3c, 0x11ca, 0x0, 0x0);
        gbc.writeMem(0x890f, { 0x1a });
        gbc.writeMem(0x9b3c, { 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe399, gbc.sp());
        EXPECT(0x8910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x890f));
        EXPECT(0x19, gbc.readMem(0x9b3c));
        // 1A 01D0
        gbc.setState(0x3f13, 0x1eee, 0xf3f0, 0xea2b, 0xa46c, 0x2367, 0x1, 0x1);
        gbc.writeMem(0x3f13, { 0x1a });
        gbc.writeMem(0xa46c, { 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1eee, gbc.sp());
        EXPECT(0x3f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xa46c));
        // 1A 01D1
        gbc.setState(0xe98e, 0xe4b6, 0x2160, 0xb043, 0xfc32, 0xa209, 0x0, 0x0);
        gbc.writeMem(0xe98e, { 0x1a });
        gbc.writeMem(0xfc32, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe4b6, gbc.sp());
        EXPECT(0xe98f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe98e));
        EXPECT(0x6c, gbc.readMem(0xfc32));
        // 1A 01D2
        gbc.setState(0x45a, 0x4d72, 0x9510, 0x319c, 0xd57, 0xed37, 0x0, 0x1);
        gbc.writeMem(0x45a, { 0x1a });
        gbc.writeMem(0xd57, { 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4d72, gbc.sp());
        EXPECT(0x45b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 01D3
        gbc.setState(0x8cf5, 0x61e4, 0x5fb0, 0xbf3, 0xefde, 0x343c, 0x0, 0x1);
        gbc.writeMem(0x8cf5, { 0x1a });
        gbc.writeMem(0xefde, { 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x61e4, gbc.sp());
        EXPECT(0x8cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8cf5));
        EXPECT(0x2f, gbc.readMem(0xefde));
        // 1A 01D4
        gbc.setState(0x1d8, 0x3147, 0x8f90, 0xff6c, 0x5925, 0xac47, 0x1, 0x1);
        gbc.writeMem(0x1d8, { 0x1a });
        gbc.writeMem(0x5925, { 0x20 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3147, gbc.sp());
        EXPECT(0x1d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 01D5
        gbc.setState(0x9df8, 0x78fe, 0xeef0, 0xd34b, 0x7168, 0xdfe2, 0x1, 0x0);
        gbc.writeMem(0x7168, { 0x8a });
        gbc.writeMem(0x9df8, { 0x1a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x78fe, gbc.sp());
        EXPECT(0x9df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9df8));
        // 1A 01D6
        gbc.setState(0x8607, 0xf8c3, 0x1940, 0x1077, 0x798c, 0x9efd, 0x1, 0x1);
        gbc.writeMem(0x798c, { 0x99 });
        gbc.writeMem(0x8607, { 0x1a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf8c3, gbc.sp());
        EXPECT(0x8608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8607));
        // 1A 01D7
        gbc.setState(0x6a98, 0xfacd, 0x5f70, 0x6b2c, 0x2886, 0x8d54, 0x0, 0x0);
        gbc.writeMem(0x2886, { 0x4c });
        gbc.writeMem(0x6a98, { 0x1a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfacd, gbc.sp());
        EXPECT(0x6a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 01D8
        gbc.setState(0x931a, 0xe490, 0x4660, 0xcfb0, 0x4b7f, 0x269, 0x0, 0x0);
        gbc.writeMem(0x4b7f, { 0xc });
        gbc.writeMem(0x931a, { 0x1a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe490, gbc.sp());
        EXPECT(0x931b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x931a));
        // 1A 01D9
        gbc.setState(0xd4f3, 0x781a, 0xfa10, 0xeab6, 0x8662, 0x43d3, 0x0, 0x0);
        gbc.writeMem(0x8662, { 0x3b });
        gbc.writeMem(0xd4f3, { 0x1a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x781a, gbc.sp());
        EXPECT(0xd4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8662));
        EXPECT(0x1a, gbc.readMem(0xd4f3));
        // 1A 01DA
        gbc.setState(0xd352, 0xc897, 0xc2a0, 0x3ed7, 0x8af0, 0xe5c5, 0x1, 0x1);
        gbc.writeMem(0x8af0, { 0x40 });
        gbc.writeMem(0xd352, { 0x1a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc897, gbc.sp());
        EXPECT(0xd353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8af0));
        EXPECT(0x1a, gbc.readMem(0xd352));
        // 1A 01DB
        gbc.setState(0x9669, 0x7464, 0x3540, 0x1a3e, 0x2645, 0x23bc, 0x1, 0x0);
        gbc.writeMem(0x2645, { 0x49 });
        gbc.writeMem(0x9669, { 0x1a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7464, gbc.sp());
        EXPECT(0x966a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9669));
        // 1A 01DC
        gbc.setState(0x2934, 0xf64c, 0x2650, 0x92ea, 0xcdfa, 0x1b72, 0x0, 0x0);
        gbc.writeMem(0x2934, { 0x1a });
        gbc.writeMem(0xcdfa, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf64c, gbc.sp());
        EXPECT(0x2935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcdfa));
        // 1A 01DD
        gbc.setState(0xccb4, 0xcf73, 0xbd90, 0x8f5e, 0xe688, 0x299f, 0x1, 0x1);
        gbc.writeMem(0xccb4, { 0x1a });
        gbc.writeMem(0xe688, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xcf73, gbc.sp());
        EXPECT(0xccb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xccb4));
        EXPECT(0x2, gbc.readMem(0xe688));
        // 1A 01DE
        gbc.setState(0xe299, 0xd51e, 0xd8d0, 0x3dd4, 0xa5f, 0x5187, 0x1, 0x0);
        gbc.writeMem(0xa5f, { 0x8e });
        gbc.writeMem(0xe299, { 0x1a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd51e, gbc.sp());
        EXPECT(0xe29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe299));
        // 1A 01DF
        gbc.setState(0x1e99, 0xa443, 0xc260, 0x59cb, 0xdf1f, 0xf4c3, 0x1, 0x1);
        gbc.writeMem(0x1e99, { 0x1a });
        gbc.writeMem(0xdf1f, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa443, gbc.sp());
        EXPECT(0x1e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xdf1f));
        // 1A 01E0
        gbc.setState(0x9e12, 0x6860, 0xdb70, 0x3b21, 0xbb2, 0xba94, 0x0, 0x0);
        gbc.writeMem(0xbb2, { 0xfa });
        gbc.writeMem(0x9e12, { 0x1a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6860, gbc.sp());
        EXPECT(0x9e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9e12));
        // 1A 01E1
        gbc.setState(0x369c, 0x98f4, 0x71c0, 0xc1a8, 0xf8aa, 0x9d3, 0x0, 0x0);
        gbc.writeMem(0x369c, { 0x1a });
        gbc.writeMem(0xf8aa, { 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x98f4, gbc.sp());
        EXPECT(0x369d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xf8aa));
        // 1A 01E2
        gbc.setState(0x102e, 0xc9b, 0xbfb0, 0x54a6, 0x130a, 0x89bb, 0x1, 0x0);
        gbc.writeMem(0x102e, { 0x1a });
        gbc.writeMem(0x130a, { 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc9b, gbc.sp());
        EXPECT(0x102f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 01E3
        gbc.setState(0xa9cd, 0x2c1a, 0x7160, 0x89fa, 0x13ed, 0xbb3d, 0x1, 0x0);
        gbc.writeMem(0x13ed, { 0xfb });
        gbc.writeMem(0xa9cd, { 0x1a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2c1a, gbc.sp());
        EXPECT(0xa9ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa9cd));
        // 1A 01E4
        gbc.setState(0xc12a, 0xa639, 0xbbc0, 0x32cf, 0x47c0, 0x12ee, 0x0, 0x0);
        gbc.writeMem(0x47c0, { 0xd8 });
        gbc.writeMem(0xc12a, { 0x1a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa639, gbc.sp());
        EXPECT(0xc12b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc12a));
        // 1A 01E5
        gbc.setState(0x9e61, 0x1c5, 0x7000, 0x1b3e, 0x6cad, 0xa2ae, 0x1, 0x1);
        gbc.writeMem(0x6cad, { 0x9a });
        gbc.writeMem(0x9e61, { 0x1a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1c5, gbc.sp());
        EXPECT(0x9e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9e61));
        // 1A 01E6
        gbc.setState(0x263, 0xc5d0, 0xb420, 0x1aa5, 0x20a0, 0x2b08, 0x1, 0x0);
        gbc.writeMem(0x263, { 0x1a });
        gbc.writeMem(0x20a0, { 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc5d0, gbc.sp());
        EXPECT(0x264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 01E7
        gbc.setState(0x4b1e, 0xc0e5, 0xb3f0, 0x6292, 0xd22d, 0x8bd5, 0x0, 0x0);
        gbc.writeMem(0x4b1e, { 0x1a });
        gbc.writeMem(0xd22d, { 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc0e5, gbc.sp());
        EXPECT(0x4b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xd22d));
        // 1A 01E8
        gbc.setState(0xd381, 0x50c6, 0x88f0, 0x7d6c, 0x47df, 0x303f, 0x1, 0x0);
        gbc.writeMem(0x47df, { 0xd4 });
        gbc.writeMem(0xd381, { 0x1a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x50c6, gbc.sp());
        EXPECT(0xd382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd381));
        // 1A 01E9
        gbc.setState(0xb670, 0xd5c8, 0xd150, 0xe60, 0xe88f, 0xd331, 0x1, 0x1);
        gbc.writeMem(0xb670, { 0x1a });
        gbc.writeMem(0xe88f, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd5c8, gbc.sp());
        EXPECT(0xb671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb670));
        EXPECT(0x8a, gbc.readMem(0xe88f));
        // 1A 01EA
        gbc.setState(0xccb, 0xca2d, 0xd8a0, 0x5018, 0xc88d, 0x3287, 0x0, 0x1);
        gbc.writeMem(0xccb, { 0x1a });
        gbc.writeMem(0xc88d, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xca2d, gbc.sp());
        EXPECT(0xccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xc88d));
        // 1A 01EB
        gbc.setState(0xeda4, 0x719f, 0x8fc0, 0x5556, 0x68e0, 0x5fd7, 0x1, 0x0);
        gbc.writeMem(0x68e0, { 0x10 });
        gbc.writeMem(0xeda4, { 0x1a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x719f, gbc.sp());
        EXPECT(0xeda5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xeda4));
        // 1A 01EC
        gbc.setState(0x3ede, 0xb62e, 0x6290, 0xca54, 0x4f2d, 0xb72c, 0x0, 0x1);
        gbc.writeMem(0x3ede, { 0x1a });
        gbc.writeMem(0x4f2d, { 0x7e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb62e, gbc.sp());
        EXPECT(0x3edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 01ED
        gbc.setState(0x8a5a, 0xc8ff, 0x8780, 0x1424, 0x8bd9, 0x3974, 0x1, 0x1);
        gbc.writeMem(0x8a5a, { 0x1a });
        gbc.writeMem(0x8bd9, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc8ff, gbc.sp());
        EXPECT(0x8a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8a5a));
        EXPECT(0xdf, gbc.readMem(0x8bd9));
        // 1A 01EE
        gbc.setState(0xa454, 0x288e, 0x2b00, 0x3d2e, 0x180b, 0x9dfa, 0x1, 0x1);
        gbc.writeMem(0x180b, { 0xe3 });
        gbc.writeMem(0xa454, { 0x1a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x288e, gbc.sp());
        EXPECT(0xa455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa454));
        // 1A 01EF
        gbc.setState(0x403f, 0xa4d4, 0xa660, 0x7005, 0x45ca, 0x136f, 0x1, 0x0);
        gbc.writeMem(0x403f, { 0x1a });
        gbc.writeMem(0x45ca, { 0xfd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa4d4, gbc.sp());
        EXPECT(0x4040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 01F0
        gbc.setState(0x5f02, 0x1bb0, 0xec30, 0xe1b7, 0xba65, 0x3e4f, 0x0, 0x1);
        gbc.writeMem(0x5f02, { 0x1a });
        gbc.writeMem(0xba65, { 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1bb0, gbc.sp());
        EXPECT(0x5f03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xba65));
        // 1A 01F1
        gbc.setState(0x86c1, 0x1f50, 0x9e90, 0xb403, 0xbe70, 0x224d, 0x1, 0x0);
        gbc.writeMem(0x86c1, { 0x1a });
        gbc.writeMem(0xbe70, { 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1f50, gbc.sp());
        EXPECT(0x86c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x86c1));
        EXPECT(0xf5, gbc.readMem(0xbe70));
        // 1A 01F2
        gbc.setState(0xda9e, 0xda95, 0x1d00, 0xbf8b, 0xa2b5, 0xa345, 0x0, 0x1);
        gbc.writeMem(0xa2b5, { 0x12 });
        gbc.writeMem(0xda9e, { 0x1a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xda95, gbc.sp());
        EXPECT(0xda9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa2b5));
        EXPECT(0x1a, gbc.readMem(0xda9e));
        // 1A 01F3
        gbc.setState(0x232f, 0x92b4, 0xe8e0, 0xe1c9, 0xf61, 0xab4b, 0x1, 0x0);
        gbc.writeMem(0xf61, { 0xe });
        gbc.writeMem(0x232f, { 0x1a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x92b4, gbc.sp());
        EXPECT(0x2330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 01F4
        gbc.setState(0xb9, 0xe9cb, 0xe8d0, 0xf1f9, 0xbe7d, 0x26f, 0x1, 0x0);
        gbc.writeMem(0xb9, { 0x1a });
        gbc.writeMem(0xbe7d, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe9cb, gbc.sp());
        EXPECT(0xba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xbe7d));
        // 1A 01F5
        gbc.setState(0xc280, 0xdf57, 0xb6f0, 0x9cf3, 0x5234, 0xb207, 0x1, 0x0);
        gbc.writeMem(0x5234, { 0xd2 });
        gbc.writeMem(0xc280, { 0x1a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdf57, gbc.sp());
        EXPECT(0xc281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc280));
        // 1A 01F6
        gbc.setState(0xaf20, 0x2edf, 0xbd0, 0x92f5, 0x7ec0, 0xe9be, 0x1, 0x0);
        gbc.writeMem(0x7ec0, { 0x55 });
        gbc.writeMem(0xaf20, { 0x1a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2edf, gbc.sp());
        EXPECT(0xaf21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xaf20));
        // 1A 01F7
        gbc.setState(0xe559, 0x7d6a, 0x3580, 0xc049, 0x6e3a, 0x2c2c, 0x0, 0x1);
        gbc.writeMem(0x6e3a, { 0xa0 });
        gbc.writeMem(0xe559, { 0x1a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7d6a, gbc.sp());
        EXPECT(0xe55a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe559));
        // 1A 01F8
        gbc.setState(0x46c2, 0x55b2, 0x17f0, 0x1f4, 0x4ecd, 0xbd4b, 0x1, 0x1);
        gbc.writeMem(0x46c2, { 0x1a });
        gbc.writeMem(0x4ecd, { 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x55b2, gbc.sp());
        EXPECT(0x46c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 01F9
        gbc.setState(0xefd3, 0xb0e2, 0xda50, 0x5025, 0xad9, 0x2bd5, 0x0, 0x1);
        gbc.writeMem(0xad9, { 0x3b });
        gbc.writeMem(0xefd3, { 0x1a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb0e2, gbc.sp());
        EXPECT(0xefd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xefd3));
        // 1A 01FA
        gbc.setState(0x10e5, 0x6d2e, 0xedd0, 0xc0c5, 0x3f29, 0xa18f, 0x1, 0x1);
        gbc.writeMem(0x10e5, { 0x1a });
        gbc.writeMem(0x3f29, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6d2e, gbc.sp());
        EXPECT(0x10e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 01FB
        gbc.setState(0x97bc, 0x8ed, 0x2d00, 0xcf49, 0xa66e, 0x4faa, 0x1, 0x1);
        gbc.writeMem(0x97bc, { 0x1a });
        gbc.writeMem(0xa66e, { 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8ed, gbc.sp());
        EXPECT(0x97bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x97bc));
        EXPECT(0x71, gbc.readMem(0xa66e));
        // 1A 01FC
        gbc.setState(0x562b, 0x759, 0x8760, 0xfc92, 0x445e, 0xe0e8, 0x1, 0x0);
        gbc.writeMem(0x445e, { 0x2 });
        gbc.writeMem(0x562b, { 0x1a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x759, gbc.sp());
        EXPECT(0x562c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 01FD
        gbc.setState(0x7138, 0x31d4, 0xeaa0, 0x42be, 0xd2db, 0x48e8, 0x0, 0x0);
        gbc.writeMem(0x7138, { 0x1a });
        gbc.writeMem(0xd2db, { 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x31d4, gbc.sp());
        EXPECT(0x7139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd2db));
        // 1A 01FE
        gbc.setState(0x28a0, 0x70f, 0x64d0, 0x48f1, 0xc7c, 0xd8bd, 0x1, 0x0);
        gbc.writeMem(0xc7c, { 0xa5 });
        gbc.writeMem(0x28a0, { 0x1a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x70f, gbc.sp());
        EXPECT(0x28a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 01FF
        gbc.setState(0x6ac2, 0xa0a1, 0xc960, 0x6142, 0x2c8, 0x536e, 0x1, 0x0);
        gbc.writeMem(0x2c8, { 0xcd });
        gbc.writeMem(0x6ac2, { 0x1a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa0a1, gbc.sp());
        EXPECT(0x6ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0200
        gbc.setState(0x4d0a, 0xc7e5, 0x82b0, 0x5f32, 0xf743, 0x13f2, 0x1, 0x1);
        gbc.writeMem(0x4d0a, { 0x1a });
        gbc.writeMem(0xf743, { 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc7e5, gbc.sp());
        EXPECT(0x4d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xf743));
        // 1A 0201
        gbc.setState(0xc1d9, 0x8019, 0x8680, 0xfa5f, 0xfbd1, 0xd9ac, 0x1, 0x1);
        gbc.writeMem(0xc1d9, { 0x1a });
        gbc.writeMem(0xfbd1, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8019, gbc.sp());
        EXPECT(0xc1da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc1d9));
        EXPECT(0x66, gbc.readMem(0xfbd1));
        // 1A 0202
        gbc.setState(0xa2fd, 0x69ee, 0x5590, 0x8095, 0xc597, 0x8e07, 0x1, 0x0);
        gbc.writeMem(0xa2fd, { 0x1a });
        gbc.writeMem(0xc597, { 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x69ee, gbc.sp());
        EXPECT(0xa2fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa2fd));
        EXPECT(0x47, gbc.readMem(0xc597));
        // 1A 0203
        gbc.setState(0xa0a, 0x5a8b, 0x63f0, 0x3e70, 0xc1d, 0xde78, 0x1, 0x0);
        gbc.writeMem(0xa0a, { 0x1a });
        gbc.writeMem(0xc1d, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5a8b, gbc.sp());
        EXPECT(0xa0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0204
        gbc.setState(0x54d3, 0x5ede, 0xc5c0, 0x94d6, 0xd6ad, 0x7930, 0x0, 0x1);
        gbc.writeMem(0x54d3, { 0x1a });
        gbc.writeMem(0xd6ad, { 0x97 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5ede, gbc.sp());
        EXPECT(0x54d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd6ad));
        // 1A 0205
        gbc.setState(0xdb52, 0xc329, 0xfd10, 0x762b, 0x8981, 0x796e, 0x1, 0x0);
        gbc.writeMem(0x8981, { 0x87 });
        gbc.writeMem(0xdb52, { 0x1a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc329, gbc.sp());
        EXPECT(0xdb53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8981));
        EXPECT(0x1a, gbc.readMem(0xdb52));
        // 1A 0206
        gbc.setState(0xc1e7, 0x64a5, 0x8c00, 0xebcb, 0x484f, 0xba0d, 0x0, 0x0);
        gbc.writeMem(0x484f, { 0xb7 });
        gbc.writeMem(0xc1e7, { 0x1a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x64a5, gbc.sp());
        EXPECT(0xc1e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc1e7));
        // 1A 0207
        gbc.setState(0xb795, 0xdf51, 0x2c90, 0x6114, 0xdf32, 0xf946, 0x0, 0x1);
        gbc.writeMem(0xb795, { 0x1a });
        gbc.writeMem(0xdf32, { 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdf51, gbc.sp());
        EXPECT(0xb796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb795));
        EXPECT(0x1c, gbc.readMem(0xdf32));
        // 1A 0208
        gbc.setState(0x3439, 0xd933, 0x820, 0x6b6f, 0x8c1b, 0xd129, 0x1, 0x0);
        gbc.writeMem(0x3439, { 0x1a });
        gbc.writeMem(0x8c1b, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd933, gbc.sp());
        EXPECT(0x343a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8c1b));
        // 1A 0209
        gbc.setState(0x2d2d, 0xc459, 0x5640, 0x9f1, 0x5785, 0x2b81, 0x1, 0x0);
        gbc.writeMem(0x2d2d, { 0x1a });
        gbc.writeMem(0x5785, { 0x5c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc459, gbc.sp());
        EXPECT(0x2d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 020A
        gbc.setState(0x8e91, 0x2e60, 0x12c0, 0x9567, 0x5d01, 0xb327, 0x1, 0x0);
        gbc.writeMem(0x5d01, { 0x71 });
        gbc.writeMem(0x8e91, { 0x1a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2e60, gbc.sp());
        EXPECT(0x8e92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8e91));
        // 1A 020B
        gbc.setState(0x2783, 0x63e6, 0x2ac0, 0x56b6, 0xfe84, 0x25a9, 0x1, 0x1);
        gbc.writeMem(0x2783, { 0x1a });
        gbc.writeMem(0xfe84, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x63e6, gbc.sp());
        EXPECT(0x2784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xfe84));
        // 1A 020C
        gbc.setState(0x5825, 0xab5d, 0x32e0, 0x1b60, 0x4fa4, 0xa7f5, 0x1, 0x1);
        gbc.writeMem(0x4fa4, { 0xa1 });
        gbc.writeMem(0x5825, { 0x1a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xab5d, gbc.sp());
        EXPECT(0x5826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 020D
        gbc.setState(0xa97f, 0xf5b5, 0x940, 0xf65a, 0xeef7, 0xa249, 0x0, 0x1);
        gbc.writeMem(0xa97f, { 0x1a });
        gbc.writeMem(0xeef7, { 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf5b5, gbc.sp());
        EXPECT(0xa980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa97f));
        EXPECT(0x5, gbc.readMem(0xeef7));
        // 1A 020E
        gbc.setState(0x703d, 0xc35, 0x7250, 0x71e6, 0xd823, 0xcc5f, 0x0, 0x1);
        gbc.writeMem(0x703d, { 0x1a });
        gbc.writeMem(0xd823, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc35, gbc.sp());
        EXPECT(0x703e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd823));
        // 1A 020F
        gbc.setState(0xbf7e, 0xc40e, 0x6920, 0x5ac6, 0x2a05, 0x6aaa, 0x0, 0x0);
        gbc.writeMem(0x2a05, { 0xc1 });
        gbc.writeMem(0xbf7e, { 0x1a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc40e, gbc.sp());
        EXPECT(0xbf7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbf7e));
        // 1A 0210
        gbc.setState(0x653f, 0x6ed9, 0xfe80, 0xac6d, 0xb1b, 0x79ca, 0x1, 0x1);
        gbc.writeMem(0xb1b, { 0x77 });
        gbc.writeMem(0x653f, { 0x1a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6ed9, gbc.sp());
        EXPECT(0x6540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0212
        gbc.setState(0x3e0, 0xce6c, 0x9830, 0x3d2c, 0x4e6, 0x1b9c, 0x0, 0x1);
        gbc.writeMem(0x3e0, { 0x1a });
        gbc.writeMem(0x4e6, { 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xce6c, gbc.sp());
        EXPECT(0x3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0213
        gbc.setState(0xc5a0, 0x28bc, 0xb7b0, 0x3138, 0x4956, 0x3144, 0x1, 0x1);
        gbc.writeMem(0x4956, { 0x34 });
        gbc.writeMem(0xc5a0, { 0x1a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x28bc, gbc.sp());
        EXPECT(0xc5a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc5a0));
        // 1A 0214
        gbc.setState(0x215f, 0x8440, 0xf320, 0xdcad, 0x1a86, 0xdbb1, 0x0, 0x0);
        gbc.writeMem(0x1a86, { 0xd9 });
        gbc.writeMem(0x215f, { 0x1a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8440, gbc.sp());
        EXPECT(0x2160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0215
        gbc.setState(0xd84f, 0xa81f, 0xdae0, 0xfe2a, 0x4dbc, 0x6de9, 0x0, 0x1);
        gbc.writeMem(0x4dbc, { 0xc8 });
        gbc.writeMem(0xd84f, { 0x1a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa81f, gbc.sp());
        EXPECT(0xd850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd84f));
        // 1A 0216
        gbc.setState(0x441, 0xa79d, 0x94b0, 0x4cd7, 0x8f67, 0xe834, 0x0, 0x0);
        gbc.writeMem(0x441, { 0x1a });
        gbc.writeMem(0x8f67, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa79d, gbc.sp());
        EXPECT(0x442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x8f67));
        // 1A 0217
        gbc.setState(0x27eb, 0x10fd, 0xb2b0, 0x505b, 0x4636, 0xc88a, 0x0, 0x1);
        gbc.writeMem(0x27eb, { 0x1a });
        gbc.writeMem(0x4636, { 0x7e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x10fd, gbc.sp());
        EXPECT(0x27ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0218
        gbc.setState(0x8602, 0x42d9, 0xcb00, 0x322b, 0xe792, 0xb118, 0x1, 0x1);
        gbc.writeMem(0x8602, { 0x1a });
        gbc.writeMem(0xe792, { 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x42d9, gbc.sp());
        EXPECT(0x8603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8602));
        EXPECT(0x73, gbc.readMem(0xe792));
        // 1A 0219
        gbc.setState(0xb8dd, 0x7f5f, 0x3760, 0x7bd4, 0x7f57, 0x9b5, 0x1, 0x1);
        gbc.writeMem(0x7f57, { 0x4b });
        gbc.writeMem(0xb8dd, { 0x1a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7f5f, gbc.sp());
        EXPECT(0xb8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb8dd));
        // 1A 021A
        gbc.setState(0x319b, 0xee02, 0x6d30, 0xd96e, 0x9b76, 0x5bd2, 0x0, 0x1);
        gbc.writeMem(0x319b, { 0x1a });
        gbc.writeMem(0x9b76, { 0x54 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xee02, gbc.sp());
        EXPECT(0x319c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x9b76));
        // 1A 021B
        gbc.setState(0x3ffc, 0xcb26, 0xd340, 0x90a2, 0xb5f8, 0x19c3, 0x1, 0x1);
        gbc.writeMem(0x3ffc, { 0x1a });
        gbc.writeMem(0xb5f8, { 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcb26, gbc.sp());
        EXPECT(0x3ffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xb5f8));
        // 1A 021C
        gbc.setState(0x671d, 0x224f, 0xcd90, 0xa830, 0x6a6e, 0x3e3a, 0x0, 0x1);
        gbc.writeMem(0x671d, { 0x1a });
        gbc.writeMem(0x6a6e, { 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x224f, gbc.sp());
        EXPECT(0x671e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 021D
        gbc.setState(0x6b95, 0x4771, 0xcc00, 0x12d5, 0xd498, 0x471c, 0x1, 0x0);
        gbc.writeMem(0x6b95, { 0x1a });
        gbc.writeMem(0xd498, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4771, gbc.sp());
        EXPECT(0x6b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xd498));
        // 1A 021E
        gbc.setState(0xda58, 0xc6, 0x2a90, 0x6a33, 0xd2e3, 0x625c, 0x0, 0x0);
        gbc.writeMem(0xd2e3, { 0x9b });
        gbc.writeMem(0xda58, { 0x1a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc6, gbc.sp());
        EXPECT(0xda59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd2e3));
        EXPECT(0x1a, gbc.readMem(0xda58));
        // 1A 021F
        gbc.setState(0xecfa, 0x1e43, 0x6040, 0xa3fc, 0x38bc, 0xb28, 0x0, 0x0);
        gbc.writeMem(0x38bc, { 0x62 });
        gbc.writeMem(0xecfa, { 0x1a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1e43, gbc.sp());
        EXPECT(0xecfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xecfa));
        // 1A 0220
        gbc.setState(0x8c14, 0x8dc4, 0x3860, 0x47ac, 0x4a5a, 0x3371, 0x1, 0x0);
        gbc.writeMem(0x4a5a, { 0xc9 });
        gbc.writeMem(0x8c14, { 0x1a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8dc4, gbc.sp());
        EXPECT(0x8c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8c14));
        // 1A 0221
        gbc.setState(0x78f7, 0xeaf8, 0x1d00, 0xd355, 0x7924, 0x43cb, 0x1, 0x1);
        gbc.writeMem(0x78f7, { 0x1a });
        gbc.writeMem(0x7924, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xeaf8, gbc.sp());
        EXPECT(0x78f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0222
        gbc.setState(0x2160, 0x9458, 0x19c0, 0x93fc, 0x43c5, 0x889c, 0x0, 0x0);
        gbc.writeMem(0x2160, { 0x1a });
        gbc.writeMem(0x43c5, { 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9458, gbc.sp());
        EXPECT(0x2161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0223
        gbc.setState(0x8f2a, 0x938, 0x2930, 0x5c7, 0x6bae, 0x8d17, 0x1, 0x0);
        gbc.writeMem(0x6bae, { 0x6a });
        gbc.writeMem(0x8f2a, { 0x1a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x938, gbc.sp());
        EXPECT(0x8f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8f2a));
        // 1A 0224
        gbc.setState(0x77fd, 0xbacb, 0xf450, 0x26f, 0xc2f7, 0xf5dc, 0x1, 0x1);
        gbc.writeMem(0x77fd, { 0x1a });
        gbc.writeMem(0xc2f7, { 0x83 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbacb, gbc.sp());
        EXPECT(0x77fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xc2f7));
        // 1A 0225
        gbc.setState(0x8a9f, 0xd40e, 0x6ae0, 0xaf30, 0x76b0, 0xd2a4, 0x0, 0x0);
        gbc.writeMem(0x76b0, { 0x45 });
        gbc.writeMem(0x8a9f, { 0x1a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd40e, gbc.sp());
        EXPECT(0x8aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8a9f));
        // 1A 0226
        gbc.setState(0xed46, 0x15cf, 0x52e0, 0x73ff, 0x8367, 0x2112, 0x1, 0x0);
        gbc.writeMem(0x8367, { 0xf0 });
        gbc.writeMem(0xed46, { 0x1a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x15cf, gbc.sp());
        EXPECT(0xed47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8367));
        EXPECT(0x1a, gbc.readMem(0xed46));
        // 1A 0227
        gbc.setState(0x136d, 0x649d, 0x9aa0, 0x4e9b, 0xd377, 0xbd49, 0x0, 0x1);
        gbc.writeMem(0x136d, { 0x1a });
        gbc.writeMem(0xd377, { 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x649d, gbc.sp());
        EXPECT(0x136e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd377));
        // 1A 0228
        gbc.setState(0x2ded, 0xfe56, 0xf1e0, 0x994b, 0x7142, 0x5a37, 0x0, 0x0);
        gbc.writeMem(0x2ded, { 0x1a });
        gbc.writeMem(0x7142, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfe56, gbc.sp());
        EXPECT(0x2dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 022A
        gbc.setState(0xd481, 0x2da3, 0x35f0, 0x459a, 0x2d1c, 0xbd8d, 0x0, 0x1);
        gbc.writeMem(0x2d1c, { 0xb6 });
        gbc.writeMem(0xd481, { 0x1a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2da3, gbc.sp());
        EXPECT(0xd482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd481));
        // 1A 022B
        gbc.setState(0x4012, 0x1856, 0x1d20, 0xe6b5, 0x1091, 0x79b2, 0x1, 0x1);
        gbc.writeMem(0x1091, { 0x6c });
        gbc.writeMem(0x4012, { 0x1a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1856, gbc.sp());
        EXPECT(0x4013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 022C
        gbc.setState(0x796, 0x6c41, 0xd9e0, 0xd62e, 0xa1f8, 0x1a52, 0x1, 0x1);
        gbc.writeMem(0x796, { 0x1a });
        gbc.writeMem(0xa1f8, { 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6c41, gbc.sp());
        EXPECT(0x797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa1f8));
        // 1A 022D
        gbc.setState(0xb460, 0x6f4c, 0xd740, 0xa4eb, 0x9107, 0x4450, 0x1, 0x0);
        gbc.writeMem(0x9107, { 0xcd });
        gbc.writeMem(0xb460, { 0x1a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6f4c, gbc.sp());
        EXPECT(0xb461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x9107));
        EXPECT(0x1a, gbc.readMem(0xb460));
        // 1A 022F
        gbc.setState(0x308e, 0x82f7, 0x4500, 0xb030, 0xbac2, 0x7dc9, 0x0, 0x1);
        gbc.writeMem(0x308e, { 0x1a });
        gbc.writeMem(0xbac2, { 0xc4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x82f7, gbc.sp());
        EXPECT(0x308f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xbac2));
        // 1A 0230
        gbc.setState(0x86e7, 0x2318, 0xecf0, 0x6e2f, 0xbd6f, 0x1b0c, 0x0, 0x0);
        gbc.writeMem(0x86e7, { 0x1a });
        gbc.writeMem(0xbd6f, { 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2318, gbc.sp());
        EXPECT(0x86e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x86e7));
        EXPECT(0xeb, gbc.readMem(0xbd6f));
        // 1A 0231
        gbc.setState(0x600f, 0xf92b, 0x4e50, 0xbd8a, 0xd70a, 0x65c4, 0x0, 0x1);
        gbc.writeMem(0x600f, { 0x1a });
        gbc.writeMem(0xd70a, { 0xfd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf92b, gbc.sp());
        EXPECT(0x6010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xd70a));
        // 1A 0233
        gbc.setState(0x672d, 0x2cee, 0xe0b0, 0xb80d, 0xfafa, 0x6b8e, 0x1, 0x0);
        gbc.writeMem(0x672d, { 0x1a });
        gbc.writeMem(0xfafa, { 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2cee, gbc.sp());
        EXPECT(0x672e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xfafa));
        // 1A 0234
        gbc.setState(0x373, 0xbce9, 0x56e0, 0xfb7c, 0x48d8, 0x7b2c, 0x1, 0x1);
        gbc.writeMem(0x373, { 0x1a });
        gbc.writeMem(0x48d8, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbce9, gbc.sp());
        EXPECT(0x374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0235
        gbc.setState(0x43dd, 0x9137, 0x2e10, 0xdbb, 0xe21c, 0xd5bd, 0x0, 0x0);
        gbc.writeMem(0x43dd, { 0x1a });
        gbc.writeMem(0xe21c, { 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9137, gbc.sp());
        EXPECT(0x43de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xe21c));
        // 1A 0236
        gbc.setState(0xcc8b, 0xafae, 0x85b0, 0xacd5, 0xf1b8, 0x995a, 0x0, 0x0);
        gbc.writeMem(0xcc8b, { 0x1a });
        gbc.writeMem(0xf1b8, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xafae, gbc.sp());
        EXPECT(0xcc8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xcc8b));
        EXPECT(0x4b, gbc.readMem(0xf1b8));
        // 1A 0237
        gbc.setState(0x5e49, 0xeb53, 0x3440, 0x31a1, 0x18c1, 0x37f5, 0x0, 0x1);
        gbc.writeMem(0x18c1, { 0x1e });
        gbc.writeMem(0x5e49, { 0x1a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xeb53, gbc.sp());
        EXPECT(0x5e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0238
        gbc.setState(0x83a7, 0x231f, 0x7830, 0x8a2a, 0x7ca9, 0x73c0, 0x0, 0x1);
        gbc.writeMem(0x7ca9, { 0x76 });
        gbc.writeMem(0x83a7, { 0x1a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x231f, gbc.sp());
        EXPECT(0x83a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x83a7));
        // 1A 0239
        gbc.setState(0x1e25, 0x651d, 0x8b10, 0x7e4e, 0x4bff, 0x1ae4, 0x0, 0x0);
        gbc.writeMem(0x1e25, { 0x1a });
        gbc.writeMem(0x4bff, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x651d, gbc.sp());
        EXPECT(0x1e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 023A
        gbc.setState(0x5a7d, 0xcf4f, 0x3bc0, 0xa653, 0x426e, 0x2d23, 0x1, 0x1);
        gbc.writeMem(0x426e, { 0x9d });
        gbc.writeMem(0x5a7d, { 0x1a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xcf4f, gbc.sp());
        EXPECT(0x5a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 023B
        gbc.setState(0x2a8a, 0x680a, 0x7df0, 0x9e6a, 0x3731, 0xee96, 0x0, 0x0);
        gbc.writeMem(0x2a8a, { 0x1a });
        gbc.writeMem(0x3731, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x680a, gbc.sp());
        EXPECT(0x2a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 023C
        gbc.setState(0xd17e, 0xa1ff, 0x7db0, 0x9199, 0x9116, 0x6766, 0x0, 0x0);
        gbc.writeMem(0x9116, { 0xc5 });
        gbc.writeMem(0xd17e, { 0x1a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa1ff, gbc.sp());
        EXPECT(0xd17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9116));
        EXPECT(0x1a, gbc.readMem(0xd17e));
        // 1A 023D
        gbc.setState(0xc038, 0xfef7, 0x3750, 0xb79, 0x66e3, 0xcd61, 0x1, 0x1);
        gbc.writeMem(0x66e3, { 0x25 });
        gbc.writeMem(0xc038, { 0x1a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfef7, gbc.sp());
        EXPECT(0xc039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc038));
        // 1A 023E
        gbc.setState(0xe8aa, 0x5d57, 0x53e0, 0xb579, 0x7794, 0x482a, 0x1, 0x0);
        gbc.writeMem(0x7794, { 0xbd });
        gbc.writeMem(0xe8aa, { 0x1a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5d57, gbc.sp());
        EXPECT(0xe8ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe8aa));
        // 1A 023F
        gbc.setState(0x4053, 0x67dd, 0x73a0, 0x1343, 0x646, 0x7d63, 0x1, 0x1);
        gbc.writeMem(0x646, { 0x4d });
        gbc.writeMem(0x4053, { 0x1a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x67dd, gbc.sp());
        EXPECT(0x4054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0240
        gbc.setState(0x4e76, 0x6d3c, 0x8d60, 0x6e0b, 0x51f, 0xa110, 0x0, 0x1);
        gbc.writeMem(0x51f, { 0xa2 });
        gbc.writeMem(0x4e76, { 0x1a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6d3c, gbc.sp());
        EXPECT(0x4e77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0241
        gbc.setState(0x88eb, 0x8366, 0x5f70, 0xf13b, 0x7552, 0x71f9, 0x1, 0x1);
        gbc.writeMem(0x7552, { 0x2f });
        gbc.writeMem(0x88eb, { 0x1a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8366, gbc.sp());
        EXPECT(0x88ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x88eb));
        // 1A 0242
        gbc.setState(0x8bc6, 0x97e6, 0xb440, 0x15b, 0xfd58, 0xc11, 0x0, 0x1);
        gbc.writeMem(0x8bc6, { 0x1a });
        gbc.writeMem(0xfd58, { 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x97e6, gbc.sp());
        EXPECT(0x8bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8bc6));
        EXPECT(0xb1, gbc.readMem(0xfd58));
        // 1A 0243
        gbc.setState(0x2d2f, 0x516c, 0x1880, 0x44bb, 0x6589, 0x192b, 0x0, 0x1);
        gbc.writeMem(0x2d2f, { 0x1a });
        gbc.writeMem(0x6589, { 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x516c, gbc.sp());
        EXPECT(0x2d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0244
        gbc.setState(0x64b, 0xde9c, 0x4a20, 0xc62b, 0xc489, 0x35e2, 0x0, 0x0);
        gbc.writeMem(0x64b, { 0x1a });
        gbc.writeMem(0xc489, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xde9c, gbc.sp());
        EXPECT(0x64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xc489));
        // 1A 0245
        gbc.setState(0xbeeb, 0x8a64, 0x93c0, 0x260b, 0x54b5, 0x793, 0x0, 0x0);
        gbc.writeMem(0x54b5, { 0x68 });
        gbc.writeMem(0xbeeb, { 0x1a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8a64, gbc.sp());
        EXPECT(0xbeec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbeeb));
        // 1A 0246
        gbc.setState(0xaec1, 0xbb05, 0xfba0, 0xba02, 0x2df5, 0xdef8, 0x0, 0x1);
        gbc.writeMem(0x2df5, { 0xba });
        gbc.writeMem(0xaec1, { 0x1a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbb05, gbc.sp());
        EXPECT(0xaec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xaec1));
        // 1A 0247
        gbc.setState(0x94f9, 0x8844, 0x39f0, 0x3857, 0xd9f5, 0x9f15, 0x1, 0x1);
        gbc.writeMem(0x94f9, { 0x1a });
        gbc.writeMem(0xd9f5, { 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8844, gbc.sp());
        EXPECT(0x94fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x94f9));
        EXPECT(0x65, gbc.readMem(0xd9f5));
        // 1A 0248
        gbc.setState(0x8ac3, 0xe6aa, 0xb9f0, 0x475, 0x4b4b, 0xbc9e, 0x0, 0x0);
        gbc.writeMem(0x4b4b, { 0x60 });
        gbc.writeMem(0x8ac3, { 0x1a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe6aa, gbc.sp());
        EXPECT(0x8ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8ac3));
        // 1A 0249
        gbc.setState(0x192, 0xde80, 0x1dd0, 0x2cc1, 0x8f8, 0x3b82, 0x0, 0x1);
        gbc.writeMem(0x192, { 0x1a });
        gbc.writeMem(0x8f8, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xde80, gbc.sp());
        EXPECT(0x193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 024A
        gbc.setState(0xdb39, 0x203e, 0x9290, 0x1eb5, 0xa6a8, 0xd07b, 0x0, 0x0);
        gbc.writeMem(0xa6a8, { 0xd });
        gbc.writeMem(0xdb39, { 0x1a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x203e, gbc.sp());
        EXPECT(0xdb3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xa6a8));
        EXPECT(0x1a, gbc.readMem(0xdb39));
        // 1A 024B
        gbc.setState(0x6907, 0x605e, 0xf7e0, 0xee1d, 0x3dd6, 0x323e, 0x0, 0x1);
        gbc.writeMem(0x3dd6, { 0x95 });
        gbc.writeMem(0x6907, { 0x1a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x605e, gbc.sp());
        EXPECT(0x6908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 024C
        gbc.setState(0x38c7, 0x4220, 0x1670, 0x351, 0x5f63, 0x1cc8, 0x0, 0x1);
        gbc.writeMem(0x38c7, { 0x1a });
        gbc.writeMem(0x5f63, { 0x45 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4220, gbc.sp());
        EXPECT(0x38c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 024D
        gbc.setState(0x56e3, 0x84fd, 0x1f20, 0xec5e, 0x98f8, 0xa752, 0x0, 0x1);
        gbc.writeMem(0x56e3, { 0x1a });
        gbc.writeMem(0x98f8, { 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x84fd, gbc.sp());
        EXPECT(0x56e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x98f8));
        // 1A 024E
        gbc.setState(0x12fd, 0x4cd5, 0xd9e0, 0xf83, 0x3859, 0xa947, 0x0, 0x1);
        gbc.writeMem(0x12fd, { 0x1a });
        gbc.writeMem(0x3859, { 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4cd5, gbc.sp());
        EXPECT(0x12fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 024F
        gbc.setState(0x12a9, 0x8ac2, 0x30a0, 0x2685, 0x1374, 0x64ce, 0x0, 0x0);
        gbc.writeMem(0x12a9, { 0x1a });
        gbc.writeMem(0x1374, { 0xfd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8ac2, gbc.sp());
        EXPECT(0x12aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0250
        gbc.setState(0x3809, 0xb37f, 0xb060, 0x466c, 0x73f, 0x65c8, 0x1, 0x0);
        gbc.writeMem(0x73f, { 0x58 });
        gbc.writeMem(0x3809, { 0x1a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb37f, gbc.sp());
        EXPECT(0x380a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0251
        gbc.setState(0x60aa, 0x9f62, 0x7f10, 0x3b89, 0x9217, 0x9793, 0x0, 0x1);
        gbc.writeMem(0x60aa, { 0x1a });
        gbc.writeMem(0x9217, { 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9f62, gbc.sp());
        EXPECT(0x60ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9217));
        // 1A 0252
        gbc.setState(0x7796, 0x8dbb, 0xbf50, 0x2068, 0x4d6c, 0x18d3, 0x1, 0x0);
        gbc.writeMem(0x4d6c, { 0x61 });
        gbc.writeMem(0x7796, { 0x1a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8dbb, gbc.sp());
        EXPECT(0x7797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0253
        gbc.setState(0xe7a4, 0xd90d, 0xccb0, 0xe82a, 0x2d71, 0x3481, 0x0, 0x1);
        gbc.writeMem(0x2d71, { 0x92 });
        gbc.writeMem(0xe7a4, { 0x1a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd90d, gbc.sp());
        EXPECT(0xe7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe7a4));
        // 1A 0254
        gbc.setState(0xab65, 0xe0a9, 0xa5d0, 0xbe4e, 0xd910, 0x3ac6, 0x1, 0x0);
        gbc.writeMem(0xab65, { 0x1a });
        gbc.writeMem(0xd910, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe0a9, gbc.sp());
        EXPECT(0xab66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xab65));
        EXPECT(0xbc, gbc.readMem(0xd910));
        // 1A 0255
        gbc.setState(0x2e9f, 0xd06a, 0xef30, 0x8162, 0xdab3, 0xb5af, 0x0, 0x1);
        gbc.writeMem(0x2e9f, { 0x1a });
        gbc.writeMem(0xdab3, { 0xe2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd06a, gbc.sp());
        EXPECT(0x2ea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdab3));
        // 1A 0256
        gbc.setState(0xea37, 0x9962, 0x7a80, 0x9c5e, 0x3d50, 0x99cb, 0x1, 0x0);
        gbc.writeMem(0x3d50, { 0x64 });
        gbc.writeMem(0xea37, { 0x1a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9962, gbc.sp());
        EXPECT(0xea38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xea37));
        // 1A 0257
        gbc.setState(0x8861, 0x5b4f, 0x9e30, 0xd66b, 0xdf91, 0x9322, 0x0, 0x1);
        gbc.writeMem(0x8861, { 0x1a });
        gbc.writeMem(0xdf91, { 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5b4f, gbc.sp());
        EXPECT(0x8862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8861));
        EXPECT(0xce, gbc.readMem(0xdf91));
        // 1A 0258
        gbc.setState(0x86fd, 0x4b43, 0x3d30, 0x4a50, 0xd186, 0x5143, 0x0, 0x0);
        gbc.writeMem(0x86fd, { 0x1a });
        gbc.writeMem(0xd186, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4b43, gbc.sp());
        EXPECT(0x86fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x86fd));
        EXPECT(0xa2, gbc.readMem(0xd186));
        // 1A 0259
        gbc.setState(0x4d2, 0x23e6, 0x8090, 0x5a87, 0x90d8, 0x4ecb, 0x1, 0x1);
        gbc.writeMem(0x4d2, { 0x1a });
        gbc.writeMem(0x90d8, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x23e6, gbc.sp());
        EXPECT(0x4d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x90d8));
        // 1A 025A
        gbc.setState(0xc561, 0x9422, 0x9d30, 0x3a6d, 0xb5b3, 0x85d5, 0x0, 0x0);
        gbc.writeMem(0xb5b3, { 0x3d });
        gbc.writeMem(0xc561, { 0x1a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9422, gbc.sp());
        EXPECT(0xc562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xb5b3));
        EXPECT(0x1a, gbc.readMem(0xc561));
        // 1A 025B
        gbc.setState(0xde1c, 0xc015, 0xb3c0, 0xa853, 0x41fe, 0x8478, 0x1, 0x1);
        gbc.writeMem(0x41fe, { 0x6d });
        gbc.writeMem(0xde1c, { 0x1a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc015, gbc.sp());
        EXPECT(0xde1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xde1c));
        // 1A 025C
        gbc.setState(0x89c0, 0x1e73, 0x2a00, 0xfdf8, 0xf44a, 0x3fa5, 0x0, 0x1);
        gbc.writeMem(0x89c0, { 0x1a });
        gbc.writeMem(0xf44a, { 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1e73, gbc.sp());
        EXPECT(0x89c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x89c0));
        EXPECT(0x4a, gbc.readMem(0xf44a));
        // 1A 025D
        gbc.setState(0x21bc, 0xc34c, 0xb4d0, 0xe9e, 0x583f, 0xe7a4, 0x0, 0x1);
        gbc.writeMem(0x21bc, { 0x1a });
        gbc.writeMem(0x583f, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc34c, gbc.sp());
        EXPECT(0x21bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 025E
        gbc.setState(0x5996, 0x460e, 0xb190, 0xcddd, 0x9bab, 0xaa95, 0x1, 0x1);
        gbc.writeMem(0x5996, { 0x1a });
        gbc.writeMem(0x9bab, { 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x460e, gbc.sp());
        EXPECT(0x5997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9bab));
        // 1A 025F
        gbc.setState(0x25ac, 0x3878, 0x3c40, 0x5f81, 0x1b5, 0xf439, 0x0, 0x1);
        gbc.writeMem(0x1b5, { 0xc4 });
        gbc.writeMem(0x25ac, { 0x1a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3878, gbc.sp());
        EXPECT(0x25ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0260
        gbc.setState(0x6ec, 0xdf7d, 0x6e20, 0x3389, 0x3afc, 0xd92c, 0x1, 0x1);
        gbc.writeMem(0x6ec, { 0x1a });
        gbc.writeMem(0x3afc, { 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdf7d, gbc.sp());
        EXPECT(0x6ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0261
        gbc.setState(0x3d82, 0x908b, 0x48c0, 0xfa82, 0xf587, 0xdf68, 0x0, 0x1);
        gbc.writeMem(0x3d82, { 0x1a });
        gbc.writeMem(0xf587, { 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x908b, gbc.sp());
        EXPECT(0x3d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xf587));
        // 1A 0262
        gbc.setState(0x2e8f, 0x30da, 0x7c10, 0xdc6, 0x9c9f, 0x3006, 0x0, 0x1);
        gbc.writeMem(0x2e8f, { 0x1a });
        gbc.writeMem(0x9c9f, { 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x30da, gbc.sp());
        EXPECT(0x2e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9c9f));
        // 1A 0263
        gbc.setState(0xb349, 0xe3e0, 0x1cc0, 0xd538, 0x811d, 0x78c1, 0x0, 0x1);
        gbc.writeMem(0x811d, { 0xce });
        gbc.writeMem(0xb349, { 0x1a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe3e0, gbc.sp());
        EXPECT(0xb34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x811d));
        EXPECT(0x1a, gbc.readMem(0xb349));
        // 1A 0264
        gbc.setState(0x584b, 0x2240, 0xcc40, 0xb86f, 0x6ed3, 0xedda, 0x0, 0x0);
        gbc.writeMem(0x584b, { 0x1a });
        gbc.writeMem(0x6ed3, { 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2240, gbc.sp());
        EXPECT(0x584c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0266
        gbc.setState(0x1862, 0x8b59, 0x8990, 0xd281, 0x1007, 0xf793, 0x0, 0x1);
        gbc.writeMem(0x1007, { 0x88 });
        gbc.writeMem(0x1862, { 0x1a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8b59, gbc.sp());
        EXPECT(0x1863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0267
        gbc.setState(0xd52e, 0xecff, 0x1730, 0xc0e8, 0x5204, 0xa592, 0x1, 0x0);
        gbc.writeMem(0x5204, { 0x4 });
        gbc.writeMem(0xd52e, { 0x1a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xecff, gbc.sp());
        EXPECT(0xd52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd52e));
        // 1A 0268
        gbc.setState(0x1db8, 0xc7eb, 0x35d0, 0xd401, 0xdad, 0x8068, 0x0, 0x1);
        gbc.writeMem(0xdad, { 0x2b });
        gbc.writeMem(0x1db8, { 0x1a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc7eb, gbc.sp());
        EXPECT(0x1db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0269
        gbc.setState(0x79e6, 0x390b, 0xb430, 0xe3c8, 0xdecd, 0xf502, 0x1, 0x1);
        gbc.writeMem(0x79e6, { 0x1a });
        gbc.writeMem(0xdecd, { 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x390b, gbc.sp());
        EXPECT(0x79e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdecd));
        // 1A 026A
        gbc.setState(0x4fab, 0x24d7, 0xd840, 0xaf20, 0x66df, 0x37b6, 0x0, 0x0);
        gbc.writeMem(0x4fab, { 0x1a });
        gbc.writeMem(0x66df, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x24d7, gbc.sp());
        EXPECT(0x4fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 026B
        gbc.setState(0x9dfe, 0xc70f, 0x7b10, 0xd998, 0x6e91, 0x40d1, 0x1, 0x0);
        gbc.writeMem(0x6e91, { 0x36 });
        gbc.writeMem(0x9dfe, { 0x1a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc70f, gbc.sp());
        EXPECT(0x9dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9dfe));
        // 1A 026C
        gbc.setState(0x78ba, 0x50ed, 0xdb40, 0x7546, 0x93df, 0xd305, 0x0, 0x0);
        gbc.writeMem(0x78ba, { 0x1a });
        gbc.writeMem(0x93df, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x50ed, gbc.sp());
        EXPECT(0x78bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x93df));
        // 1A 026D
        gbc.setState(0xe7eb, 0x4ee4, 0x7e20, 0x944e, 0xd628, 0xbae8, 0x1, 0x0);
        gbc.writeMem(0xd628, { 0x71 });
        gbc.writeMem(0xe7eb, { 0x1a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4ee4, gbc.sp());
        EXPECT(0xe7ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xd628));
        EXPECT(0x1a, gbc.readMem(0xe7eb));
        // 1A 026E
        gbc.setState(0xaae3, 0x366d, 0xf890, 0xd8be, 0xf58d, 0x1278, 0x0, 0x0);
        gbc.writeMem(0xaae3, { 0x1a });
        gbc.writeMem(0xf58d, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x366d, gbc.sp());
        EXPECT(0xaae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xaae3));
        EXPECT(0x76, gbc.readMem(0xf58d));
        // 1A 026F
        gbc.setState(0x3f4c, 0x4f65, 0x10, 0xe209, 0x4608, 0xead5, 0x0, 0x0);
        gbc.writeMem(0x3f4c, { 0x1a });
        gbc.writeMem(0x4608, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4f65, gbc.sp());
        EXPECT(0x3f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0270
        gbc.setState(0x8ab3, 0xf9, 0x72f0, 0x4b4b, 0xf1e3, 0xb25c, 0x1, 0x1);
        gbc.writeMem(0x8ab3, { 0x1a });
        gbc.writeMem(0xf1e3, { 0x48 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf9, gbc.sp());
        EXPECT(0x8ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8ab3));
        EXPECT(0x48, gbc.readMem(0xf1e3));
        // 1A 0271
        gbc.setState(0x34b6, 0x1dc2, 0xf9e0, 0x4f67, 0x221c, 0xbe3, 0x0, 0x1);
        gbc.writeMem(0x221c, { 0xab });
        gbc.writeMem(0x34b6, { 0x1a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1dc2, gbc.sp());
        EXPECT(0x34b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0272
        gbc.setState(0x50c5, 0xc425, 0x85e0, 0xda2, 0x269d, 0x8b50, 0x1, 0x0);
        gbc.writeMem(0x269d, { 0xff });
        gbc.writeMem(0x50c5, { 0x1a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc425, gbc.sp());
        EXPECT(0x50c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0273
        gbc.setState(0x7b58, 0x46cc, 0x92b0, 0x684a, 0xc423, 0x9a6c, 0x0, 0x1);
        gbc.writeMem(0x7b58, { 0x1a });
        gbc.writeMem(0xc423, { 0xef });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x46cc, gbc.sp());
        EXPECT(0x7b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xc423));
        // 1A 0274
        gbc.setState(0xb3c5, 0x98ca, 0x9f70, 0x129c, 0x4ed8, 0x412f, 0x0, 0x0);
        gbc.writeMem(0x4ed8, { 0x30 });
        gbc.writeMem(0xb3c5, { 0x1a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x98ca, gbc.sp());
        EXPECT(0xb3c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb3c5));
        // 1A 0275
        gbc.setState(0x507e, 0x8dbe, 0x93e0, 0xc64d, 0x4666, 0xd99d, 0x1, 0x1);
        gbc.writeMem(0x4666, { 0x1 });
        gbc.writeMem(0x507e, { 0x1a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8dbe, gbc.sp());
        EXPECT(0x507f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0276
        gbc.setState(0x360a, 0x43f2, 0x1b90, 0x9c69, 0xe68, 0x2070, 0x0, 0x1);
        gbc.writeMem(0xe68, { 0x5a });
        gbc.writeMem(0x360a, { 0x1a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x43f2, gbc.sp());
        EXPECT(0x360b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0278
        gbc.setState(0xe52d, 0x1068, 0xdf70, 0x5a4a, 0x8a8, 0xe50d, 0x1, 0x1);
        gbc.writeMem(0x8a8, { 0x46 });
        gbc.writeMem(0xe52d, { 0x1a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1068, gbc.sp());
        EXPECT(0xe52e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe52d));
        // 1A 0279
        gbc.setState(0xd187, 0xe716, 0x2b50, 0x81eb, 0x22b7, 0x5052, 0x1, 0x1);
        gbc.writeMem(0x22b7, { 0x31 });
        gbc.writeMem(0xd187, { 0x1a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe716, gbc.sp());
        EXPECT(0xd188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd187));
        // 1A 027A
        gbc.setState(0xe3d6, 0xf051, 0x10b0, 0xd7cb, 0xbf45, 0x530e, 0x0, 0x1);
        gbc.writeMem(0xbf45, { 0x77 });
        gbc.writeMem(0xe3d6, { 0x1a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf051, gbc.sp());
        EXPECT(0xe3d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbf45));
        EXPECT(0x1a, gbc.readMem(0xe3d6));
        // 1A 027B
        gbc.setState(0xba96, 0x515e, 0x9f50, 0x29b4, 0x3a9f, 0xc97, 0x0, 0x0);
        gbc.writeMem(0x3a9f, { 0x3f });
        gbc.writeMem(0xba96, { 0x1a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x515e, gbc.sp());
        EXPECT(0xba97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xba96));
        // 1A 027C
        gbc.setState(0xa1d5, 0x2325, 0x5200, 0xbe72, 0xe050, 0x416e, 0x0, 0x0);
        gbc.writeMem(0xa1d5, { 0x1a });
        gbc.writeMem(0xe050, { 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2325, gbc.sp());
        EXPECT(0xa1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa1d5));
        EXPECT(0x21, gbc.readMem(0xe050));
        // 1A 027D
        gbc.setState(0x6a10, 0x2905, 0x61d0, 0x470, 0x9b4f, 0x3d03, 0x1, 0x0);
        gbc.writeMem(0x6a10, { 0x1a });
        gbc.writeMem(0x9b4f, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2905, gbc.sp());
        EXPECT(0x6a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9b4f));
        // 1A 027E
        gbc.setState(0x9654, 0x2f8b, 0xbe90, 0x9270, 0xc8a7, 0x6f4b, 0x0, 0x1);
        gbc.writeMem(0x9654, { 0x1a });
        gbc.writeMem(0xc8a7, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2f8b, gbc.sp());
        EXPECT(0x9655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9654));
        EXPECT(0xa6, gbc.readMem(0xc8a7));
        // 1A 027F
        gbc.setState(0x6acd, 0xf20, 0x20e0, 0x2260, 0x2bd9, 0xfd94, 0x1, 0x0);
        gbc.writeMem(0x2bd9, { 0x16 });
        gbc.writeMem(0x6acd, { 0x1a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf20, gbc.sp());
        EXPECT(0x6ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0281
        gbc.setState(0xe030, 0xc41a, 0xf460, 0xbb40, 0x7f0e, 0xe088, 0x0, 0x1);
        gbc.writeMem(0x7f0e, { 0xcd });
        gbc.writeMem(0xe030, { 0x1a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc41a, gbc.sp());
        EXPECT(0xe031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe030));
        // 1A 0282
        gbc.setState(0x6e2a, 0x8796, 0x2530, 0x6ecb, 0x2c0b, 0x9c3, 0x0, 0x1);
        gbc.writeMem(0x2c0b, { 0x7f });
        gbc.writeMem(0x6e2a, { 0x1a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8796, gbc.sp());
        EXPECT(0x6e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0283
        gbc.setState(0x933e, 0x471a, 0x6c50, 0xaf0b, 0xf3f8, 0xdc92, 0x1, 0x0);
        gbc.writeMem(0x933e, { 0x1a });
        gbc.writeMem(0xf3f8, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x471a, gbc.sp());
        EXPECT(0x933f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x933e));
        EXPECT(0x98, gbc.readMem(0xf3f8));
        // 1A 0284
        gbc.setState(0x9b2b, 0xf03c, 0x4d0, 0x16ae, 0x2e6b, 0xc349, 0x1, 0x0);
        gbc.writeMem(0x2e6b, { 0xcd });
        gbc.writeMem(0x9b2b, { 0x1a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf03c, gbc.sp());
        EXPECT(0x9b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9b2b));
        // 1A 0285
        gbc.setState(0x2e61, 0x7999, 0xfe20, 0x347b, 0x6046, 0x3ae5, 0x1, 0x1);
        gbc.writeMem(0x2e61, { 0x1a });
        gbc.writeMem(0x6046, { 0xe5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7999, gbc.sp());
        EXPECT(0x2e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0286
        gbc.setState(0x37bf, 0xce2e, 0xa580, 0x6012, 0x6dbf, 0xecee, 0x1, 0x1);
        gbc.writeMem(0x37bf, { 0x1a });
        gbc.writeMem(0x6dbf, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xce2e, gbc.sp());
        EXPECT(0x37c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0287
        gbc.setState(0x154f, 0xe74b, 0x6a00, 0x98a, 0x307, 0x3d34, 0x0, 0x1);
        gbc.writeMem(0x307, { 0x40 });
        gbc.writeMem(0x154f, { 0x1a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe74b, gbc.sp());
        EXPECT(0x1550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0288
        gbc.setState(0xa640, 0x151e, 0x3330, 0x87cb, 0x2d5c, 0xc07d, 0x1, 0x1);
        gbc.writeMem(0x2d5c, { 0x5d });
        gbc.writeMem(0xa640, { 0x1a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x151e, gbc.sp());
        EXPECT(0xa641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa640));
        // 1A 0289
        gbc.setState(0x2e21, 0xec5f, 0xc4f0, 0xacc9, 0xd5fe, 0xfd83, 0x1, 0x1);
        gbc.writeMem(0x2e21, { 0x1a });
        gbc.writeMem(0xd5fe, { 0x39 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xec5f, gbc.sp());
        EXPECT(0x2e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xd5fe));
        // 1A 028A
        gbc.setState(0x80bb, 0x325b, 0x7920, 0xc21, 0xc710, 0xd3a6, 0x1, 0x1);
        gbc.writeMem(0x80bb, { 0x1a });
        gbc.writeMem(0xc710, { 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x325b, gbc.sp());
        EXPECT(0x80bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x80bb));
        EXPECT(0x23, gbc.readMem(0xc710));
        // 1A 028B
        gbc.setState(0x708, 0x9ebc, 0xd4c0, 0xb31e, 0xf07f, 0xb3ad, 0x0, 0x1);
        gbc.writeMem(0x708, { 0x1a });
        gbc.writeMem(0xf07f, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9ebc, gbc.sp());
        EXPECT(0x709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xf07f));
        // 1A 028C
        gbc.setState(0xb1c7, 0xca96, 0x54c0, 0x2add, 0xb161, 0x8ec2, 0x0, 0x1);
        gbc.writeMem(0xb161, { 0xef });
        gbc.writeMem(0xb1c7, { 0x1a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xca96, gbc.sp());
        EXPECT(0xb1c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xb161));
        EXPECT(0x1a, gbc.readMem(0xb1c7));
        // 1A 028D
        gbc.setState(0x1f5e, 0xb4ed, 0x75b0, 0xd9cd, 0x2e35, 0x5eac, 0x1, 0x1);
        gbc.writeMem(0x1f5e, { 0x1a });
        gbc.writeMem(0x2e35, { 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb4ed, gbc.sp());
        EXPECT(0x1f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 028E
        gbc.setState(0xb0e2, 0x292d, 0x7300, 0x420f, 0xf371, 0x905b, 0x0, 0x1);
        gbc.writeMem(0xb0e2, { 0x1a });
        gbc.writeMem(0xf371, { 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x292d, gbc.sp());
        EXPECT(0xb0e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb0e2));
        EXPECT(0xfb, gbc.readMem(0xf371));
        // 1A 028F
        gbc.setState(0x3fae, 0x48d2, 0xb780, 0xf670, 0x965b, 0xdc8, 0x0, 0x1);
        gbc.writeMem(0x3fae, { 0x1a });
        gbc.writeMem(0x965b, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x48d2, gbc.sp());
        EXPECT(0x3faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x965b));
        // 1A 0290
        gbc.setState(0x1c88, 0xc62a, 0x3fd0, 0xfb01, 0x6eeb, 0xf07f, 0x1, 0x1);
        gbc.writeMem(0x1c88, { 0x1a });
        gbc.writeMem(0x6eeb, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc62a, gbc.sp());
        EXPECT(0x1c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0291
        gbc.setState(0xb564, 0x2b0a, 0xd3b0, 0xd637, 0xb275, 0x4b7, 0x1, 0x0);
        gbc.writeMem(0xb275, { 0xb });
        gbc.writeMem(0xb564, { 0x1a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2b0a, gbc.sp());
        EXPECT(0xb565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb275));
        EXPECT(0x1a, gbc.readMem(0xb564));
        // 1A 0292
        gbc.setState(0xdc6d, 0x5949, 0x68b0, 0x1fa8, 0xff49, 0x6654, 0x1, 0x0);
        gbc.writeMem(0xdc6d, { 0x1a });
        gbc.writeMem(0xff49, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5949, gbc.sp());
        EXPECT(0xdc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdc6d));
        EXPECT(0xf0, gbc.readMem(0xff49));
        // 1A 0293
        gbc.setState(0x83e2, 0x3b63, 0x5510, 0x9fe6, 0x5433, 0x9868, 0x1, 0x0);
        gbc.writeMem(0x5433, { 0x75 });
        gbc.writeMem(0x83e2, { 0x1a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3b63, gbc.sp());
        EXPECT(0x83e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x83e2));
        // 1A 0294
        gbc.setState(0x8923, 0x6ff6, 0x2330, 0x6c71, 0x7f34, 0x814d, 0x0, 0x0);
        gbc.writeMem(0x7f34, { 0x24 });
        gbc.writeMem(0x8923, { 0x1a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6ff6, gbc.sp());
        EXPECT(0x8924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8923));
        // 1A 0296
        gbc.setState(0xd583, 0xa5a5, 0x8130, 0x3250, 0x941a, 0x23e9, 0x1, 0x1);
        gbc.writeMem(0x941a, { 0x92 });
        gbc.writeMem(0xd583, { 0x1a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa5a5, gbc.sp());
        EXPECT(0xd584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x941a));
        EXPECT(0x1a, gbc.readMem(0xd583));
        // 1A 0297
        gbc.setState(0xb537, 0x3f9c, 0x6a80, 0xb92, 0x8ade, 0xfb27, 0x1, 0x1);
        gbc.writeMem(0x8ade, { 0x46 });
        gbc.writeMem(0xb537, { 0x1a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3f9c, gbc.sp());
        EXPECT(0xb538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x8ade));
        EXPECT(0x1a, gbc.readMem(0xb537));
        // 1A 0298
        gbc.setState(0xa735, 0x2f61, 0xd650, 0x536c, 0xe09, 0xe1f8, 0x0, 0x1);
        gbc.writeMem(0xe09, { 0xb5 });
        gbc.writeMem(0xa735, { 0x1a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2f61, gbc.sp());
        EXPECT(0xa736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa735));
        // 1A 0299
        gbc.setState(0xe0e3, 0x2107, 0x7230, 0x9f28, 0x67ce, 0x3c92, 0x0, 0x0);
        gbc.writeMem(0x67ce, { 0xd3 });
        gbc.writeMem(0xe0e3, { 0x1a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2107, gbc.sp());
        EXPECT(0xe0e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe0e3));
        // 1A 029A
        gbc.setState(0x9628, 0xeb68, 0x8f90, 0x85f7, 0x9ee5, 0x76fe, 0x1, 0x1);
        gbc.writeMem(0x9628, { 0x1a });
        gbc.writeMem(0x9ee5, { 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xeb68, gbc.sp());
        EXPECT(0x9629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9628));
        EXPECT(0xb3, gbc.readMem(0x9ee5));
        // 1A 029B
        gbc.setState(0xebbb, 0xacda, 0xdbe0, 0xa5ad, 0xc41e, 0x73c, 0x1, 0x0);
        gbc.writeMem(0xc41e, { 0xf1 });
        gbc.writeMem(0xebbb, { 0x1a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xacda, gbc.sp());
        EXPECT(0xebbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc41e));
        EXPECT(0x1a, gbc.readMem(0xebbb));
        // 1A 029C
        gbc.setState(0xad0, 0x76fd, 0x8090, 0xbdb7, 0x9dba, 0xe907, 0x0, 0x1);
        gbc.writeMem(0xad0, { 0x1a });
        gbc.writeMem(0x9dba, { 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x76fd, gbc.sp());
        EXPECT(0xad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9dba));
        // 1A 029D
        gbc.setState(0xd274, 0xdfc0, 0x1b30, 0x53be, 0xe29a, 0x4312, 0x1, 0x0);
        gbc.writeMem(0xd274, { 0x1a });
        gbc.writeMem(0xe29a, { 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdfc0, gbc.sp());
        EXPECT(0xd275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd274));
        EXPECT(0xc6, gbc.readMem(0xe29a));
        // 1A 029E
        gbc.setState(0xccf9, 0x11f3, 0x9470, 0x7860, 0x24f6, 0x8df1, 0x1, 0x1);
        gbc.writeMem(0x24f6, { 0x49 });
        gbc.writeMem(0xccf9, { 0x1a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x11f3, gbc.sp());
        EXPECT(0xccfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xccf9));
        // 1A 029F
        gbc.setState(0x1bf9, 0x6fe0, 0x94a0, 0xf25f, 0xdbdd, 0x1f46, 0x0, 0x0);
        gbc.writeMem(0x1bf9, { 0x1a });
        gbc.writeMem(0xdbdd, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6fe0, gbc.sp());
        EXPECT(0x1bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdbdd));
        // 1A 02A0
        gbc.setState(0xfe2, 0x6cc, 0x74e0, 0x1a9c, 0x10de, 0x40a2, 0x0, 0x0);
        gbc.writeMem(0xfe2, { 0x1a });
        gbc.writeMem(0x10de, { 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6cc, gbc.sp());
        EXPECT(0xfe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02A1
        gbc.setState(0x7576, 0x985c, 0x5320, 0x5d8d, 0x666, 0xe2b7, 0x0, 0x1);
        gbc.writeMem(0x666, { 0x1a });
        gbc.writeMem(0x7576, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x985c, gbc.sp());
        EXPECT(0x7577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02A2
        gbc.setState(0x6939, 0x3b53, 0x2070, 0xbf6b, 0x27ee, 0x8da5, 0x1, 0x0);
        gbc.writeMem(0x27ee, { 0xcd });
        gbc.writeMem(0x6939, { 0x1a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3b53, gbc.sp());
        EXPECT(0x693a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02A3
        gbc.setState(0x5fdc, 0x9048, 0x6170, 0xed16, 0x12e9, 0xf2a3, 0x1, 0x0);
        gbc.writeMem(0x12e9, { 0x11 });
        gbc.writeMem(0x5fdc, { 0x1a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9048, gbc.sp());
        EXPECT(0x5fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02A4
        gbc.setState(0xab15, 0x4183, 0x24f0, 0xa6d2, 0xe88, 0xcfc8, 0x1, 0x0);
        gbc.writeMem(0xe88, { 0xc8 });
        gbc.writeMem(0xab15, { 0x1a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4183, gbc.sp());
        EXPECT(0xab16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xab15));
        // 1A 02A5
        gbc.setState(0xd5f2, 0x187b, 0xa790, 0x4562, 0xed9a, 0x8969, 0x1, 0x1);
        gbc.writeMem(0xd5f2, { 0x1a });
        gbc.writeMem(0xed9a, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x187b, gbc.sp());
        EXPECT(0xd5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd5f2));
        EXPECT(0x6c, gbc.readMem(0xed9a));
        // 1A 02A6
        gbc.setState(0x7ea9, 0x85bd, 0x7050, 0xfcb9, 0x63a2, 0xf816, 0x0, 0x1);
        gbc.writeMem(0x63a2, { 0xac });
        gbc.writeMem(0x7ea9, { 0x1a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x85bd, gbc.sp());
        EXPECT(0x7eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02A7
        gbc.setState(0x3f91, 0x77a5, 0xd920, 0x393f, 0x7af1, 0xc814, 0x1, 0x0);
        gbc.writeMem(0x3f91, { 0x1a });
        gbc.writeMem(0x7af1, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x77a5, gbc.sp());
        EXPECT(0x3f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02A8
        gbc.setState(0x2cbe, 0xc640, 0xe5d0, 0x2fb5, 0x3f13, 0xd7dd, 0x0, 0x0);
        gbc.writeMem(0x2cbe, { 0x1a });
        gbc.writeMem(0x3f13, { 0xe5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc640, gbc.sp());
        EXPECT(0x2cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02A9
        gbc.setState(0x3bd0, 0xb5ce, 0x7570, 0x3e46, 0xd918, 0x35fa, 0x1, 0x0);
        gbc.writeMem(0x3bd0, { 0x1a });
        gbc.writeMem(0xd918, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb5ce, gbc.sp());
        EXPECT(0x3bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd918));
        // 1A 02AA
        gbc.setState(0x73c3, 0x82ee, 0x4380, 0x3382, 0x76c7, 0xe669, 0x0, 0x0);
        gbc.writeMem(0x73c3, { 0x1a });
        gbc.writeMem(0x76c7, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x82ee, gbc.sp());
        EXPECT(0x73c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02AB
        gbc.setState(0x5aca, 0xd30e, 0xa670, 0x2b9e, 0x2d6c, 0xd744, 0x0, 0x0);
        gbc.writeMem(0x2d6c, { 0xb3 });
        gbc.writeMem(0x5aca, { 0x1a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd30e, gbc.sp());
        EXPECT(0x5acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02AC
        gbc.setState(0xdfb4, 0x6f27, 0x1e30, 0x7a11, 0xfdd8, 0x7602, 0x0, 0x1);
        gbc.writeMem(0xdfb4, { 0x1a });
        gbc.writeMem(0xfdd8, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6f27, gbc.sp());
        EXPECT(0xdfb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdfb4));
        EXPECT(0x5f, gbc.readMem(0xfdd8));
        // 1A 02AE
        gbc.setState(0x6e3a, 0xc818, 0xf990, 0x956e, 0x273d, 0x90d5, 0x1, 0x0);
        gbc.writeMem(0x273d, { 0xeb });
        gbc.writeMem(0x6e3a, { 0x1a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc818, gbc.sp());
        EXPECT(0x6e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02AF
        gbc.setState(0x44d4, 0x9e01, 0x5b40, 0xadd2, 0x150c, 0xb30, 0x1, 0x0);
        gbc.writeMem(0x150c, { 0x80 });
        gbc.writeMem(0x44d4, { 0x1a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9e01, gbc.sp());
        EXPECT(0x44d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02B0
        gbc.setState(0xd7c9, 0x9f1d, 0x28b0, 0x9a0c, 0x50d7, 0x88de, 0x1, 0x1);
        gbc.writeMem(0x50d7, { 0x6 });
        gbc.writeMem(0xd7c9, { 0x1a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9f1d, gbc.sp());
        EXPECT(0xd7ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd7c9));
        // 1A 02B1
        gbc.setState(0x9ca1, 0x7ce8, 0x1c30, 0x489f, 0xc8dd, 0xb388, 0x0, 0x1);
        gbc.writeMem(0x9ca1, { 0x1a });
        gbc.writeMem(0xc8dd, { 0xbe });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7ce8, gbc.sp());
        EXPECT(0x9ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9ca1));
        EXPECT(0xbe, gbc.readMem(0xc8dd));
        // 1A 02B2
        gbc.setState(0xbcdd, 0x101, 0xeab0, 0x9c84, 0x5483, 0xbcab, 0x0, 0x0);
        gbc.writeMem(0x5483, { 0xa0 });
        gbc.writeMem(0xbcdd, { 0x1a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x101, gbc.sp());
        EXPECT(0xbcde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbcdd));
        // 1A 02B3
        gbc.setState(0x35bf, 0xaa3f, 0xbeb0, 0x55d1, 0xf1b4, 0x3ae1, 0x0, 0x1);
        gbc.writeMem(0x35bf, { 0x1a });
        gbc.writeMem(0xf1b4, { 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xaa3f, gbc.sp());
        EXPECT(0x35c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xf1b4));
        // 1A 02B4
        gbc.setState(0x5250, 0xddb8, 0x75f0, 0xb5eb, 0x5ebb, 0xe08c, 0x0, 0x0);
        gbc.writeMem(0x5250, { 0x1a });
        gbc.writeMem(0x5ebb, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xddb8, gbc.sp());
        EXPECT(0x5251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02B5
        gbc.setState(0x8dc6, 0xd144, 0x40b0, 0x3ce3, 0xf732, 0xae92, 0x1, 0x1);
        gbc.writeMem(0x8dc6, { 0x1a });
        gbc.writeMem(0xf732, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd144, gbc.sp());
        EXPECT(0x8dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8dc6));
        EXPECT(0x1a, gbc.readMem(0xf732));
        // 1A 02B6
        gbc.setState(0x18e8, 0x7a59, 0x6090, 0x833c, 0x4d9c, 0xa0a1, 0x0, 0x1);
        gbc.writeMem(0x18e8, { 0x1a });
        gbc.writeMem(0x4d9c, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7a59, gbc.sp());
        EXPECT(0x18e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02B7
        gbc.setState(0x704c, 0x8759, 0x48f0, 0x7c1f, 0xd6cf, 0x4309, 0x1, 0x0);
        gbc.writeMem(0x704c, { 0x1a });
        gbc.writeMem(0xd6cf, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8759, gbc.sp());
        EXPECT(0x704d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xd6cf));
        // 1A 02B8
        gbc.setState(0xc91d, 0x4d8f, 0x5df0, 0x136b, 0xb2bd, 0x2df7, 0x1, 0x0);
        gbc.writeMem(0xb2bd, { 0xbc });
        gbc.writeMem(0xc91d, { 0x1a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4d8f, gbc.sp());
        EXPECT(0xc91e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xb2bd));
        EXPECT(0x1a, gbc.readMem(0xc91d));
        // 1A 02B9
        gbc.setState(0xdf29, 0x3d26, 0xd070, 0x6eae, 0x16e3, 0xf0ec, 0x1, 0x1);
        gbc.writeMem(0x16e3, { 0xc5 });
        gbc.writeMem(0xdf29, { 0x1a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3d26, gbc.sp());
        EXPECT(0xdf2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdf29));
        // 1A 02BA
        gbc.setState(0x2e7b, 0x1a81, 0x9d40, 0x1606, 0xc341, 0x4c09, 0x0, 0x1);
        gbc.writeMem(0x2e7b, { 0x1a });
        gbc.writeMem(0xc341, { 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1a81, gbc.sp());
        EXPECT(0x2e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc341));
        // 1A 02BB
        gbc.setState(0x856d, 0xa7c7, 0xb150, 0xf451, 0x2841, 0x15e7, 0x0, 0x0);
        gbc.writeMem(0x2841, { 0x49 });
        gbc.writeMem(0x856d, { 0x1a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa7c7, gbc.sp());
        EXPECT(0x856e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x856d));
        // 1A 02BC
        gbc.setState(0x9fdd, 0xf0ea, 0x3f00, 0xd124, 0x65a0, 0xf59a, 0x1, 0x1);
        gbc.writeMem(0x65a0, { 0xf3 });
        gbc.writeMem(0x9fdd, { 0x1a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf0ea, gbc.sp());
        EXPECT(0x9fde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9fdd));
        // 1A 02BD
        gbc.setState(0xcca2, 0x4eb5, 0x9950, 0xebf5, 0x24c5, 0x3662, 0x1, 0x1);
        gbc.writeMem(0x24c5, { 0xf4 });
        gbc.writeMem(0xcca2, { 0x1a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4eb5, gbc.sp());
        EXPECT(0xcca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xcca2));
        // 1A 02BE
        gbc.setState(0xee2e, 0xeee0, 0xef60, 0xad4f, 0x7de3, 0x9289, 0x0, 0x0);
        gbc.writeMem(0x7de3, { 0xcc });
        gbc.writeMem(0xee2e, { 0x1a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xeee0, gbc.sp());
        EXPECT(0xee2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xee2e));
        // 1A 02BF
        gbc.setState(0x9551, 0x6fa0, 0xa450, 0xebce, 0xe1f, 0xec28, 0x0, 0x0);
        gbc.writeMem(0xe1f, { 0x7b });
        gbc.writeMem(0x9551, { 0x1a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6fa0, gbc.sp());
        EXPECT(0x9552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9551));
        // 1A 02C0
        gbc.setState(0x5e9c, 0x3818, 0x50e0, 0x67f5, 0x5ad1, 0xca31, 0x1, 0x1);
        gbc.writeMem(0x5ad1, { 0x59 });
        gbc.writeMem(0x5e9c, { 0x1a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3818, gbc.sp());
        EXPECT(0x5e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02C1
        gbc.setState(0xdc80, 0x9f7b, 0x43d0, 0x5e3e, 0x23b5, 0x3d0f, 0x1, 0x1);
        gbc.writeMem(0x23b5, { 0xfd });
        gbc.writeMem(0xdc80, { 0x1a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9f7b, gbc.sp());
        EXPECT(0xdc81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdc80));
        // 1A 02C2
        gbc.setState(0xcd8a, 0x1fea, 0xb180, 0xf75d, 0xe31e, 0xb521, 0x0, 0x1);
        gbc.writeMem(0xcd8a, { 0x1a });
        gbc.writeMem(0xe31e, { 0xf4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1fea, gbc.sp());
        EXPECT(0xcd8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xcd8a));
        EXPECT(0xf4, gbc.readMem(0xe31e));
        // 1A 02C3
        gbc.setState(0x266, 0x7775, 0x7310, 0x58a9, 0x8748, 0x7e6d, 0x1, 0x1);
        gbc.writeMem(0x266, { 0x1a });
        gbc.writeMem(0x8748, { 0x74 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7775, gbc.sp());
        EXPECT(0x267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8748));
        // 1A 02C4
        gbc.setState(0xb8a0, 0x383c, 0xf130, 0xc7d1, 0x3154, 0x1355, 0x1, 0x1);
        gbc.writeMem(0x3154, { 0x7f });
        gbc.writeMem(0xb8a0, { 0x1a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x383c, gbc.sp());
        EXPECT(0xb8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb8a0));
        // 1A 02C5
        gbc.setState(0x2f5c, 0x87b6, 0xdb40, 0x8f8e, 0x1a57, 0x6e65, 0x1, 0x0);
        gbc.writeMem(0x1a57, { 0xf6 });
        gbc.writeMem(0x2f5c, { 0x1a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x87b6, gbc.sp());
        EXPECT(0x2f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02C6
        gbc.setState(0x7de8, 0xaf77, 0x1810, 0x196e, 0x8b3b, 0xb059, 0x0, 0x0);
        gbc.writeMem(0x7de8, { 0x1a });
        gbc.writeMem(0x8b3b, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xaf77, gbc.sp());
        EXPECT(0x7de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x8b3b));
        // 1A 02C7
        gbc.setState(0xa86, 0xb2f0, 0xa390, 0x2eb9, 0x61fa, 0x8d74, 0x1, 0x1);
        gbc.writeMem(0xa86, { 0x1a });
        gbc.writeMem(0x61fa, { 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb2f0, gbc.sp());
        EXPECT(0xa87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02C8
        gbc.setState(0x4e6c, 0x3688, 0x4970, 0x8005, 0x8815, 0xaa11, 0x0, 0x1);
        gbc.writeMem(0x4e6c, { 0x1a });
        gbc.writeMem(0x8815, { 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3688, gbc.sp());
        EXPECT(0x4e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x8815));
        // 1A 02C9
        gbc.setState(0xa982, 0xfc2b, 0xa130, 0x976c, 0x7a19, 0x380b, 0x0, 0x1);
        gbc.writeMem(0x7a19, { 0x41 });
        gbc.writeMem(0xa982, { 0x1a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfc2b, gbc.sp());
        EXPECT(0xa983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa982));
        // 1A 02CA
        gbc.setState(0x266b, 0x9094, 0x36a0, 0x36e5, 0x3324, 0xc4cb, 0x0, 0x0);
        gbc.writeMem(0x266b, { 0x1a });
        gbc.writeMem(0x3324, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9094, gbc.sp());
        EXPECT(0x266c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02CB
        gbc.setState(0xa5c2, 0x6954, 0xfc90, 0x915f, 0x822d, 0x4874, 0x0, 0x1);
        gbc.writeMem(0x822d, { 0x7f });
        gbc.writeMem(0xa5c2, { 0x1a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6954, gbc.sp());
        EXPECT(0xa5c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x822d));
        EXPECT(0x1a, gbc.readMem(0xa5c2));
        // 1A 02CC
        gbc.setState(0x39dd, 0x941a, 0xd090, 0xd945, 0x37de, 0x8b78, 0x1, 0x1);
        gbc.writeMem(0x37de, { 0x43 });
        gbc.writeMem(0x39dd, { 0x1a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x941a, gbc.sp());
        EXPECT(0x39de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02CD
        gbc.setState(0xa2d8, 0x474a, 0x2ad0, 0x8d67, 0xe6e3, 0xf6a, 0x0, 0x0);
        gbc.writeMem(0xa2d8, { 0x1a });
        gbc.writeMem(0xe6e3, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x474a, gbc.sp());
        EXPECT(0xa2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa2d8));
        EXPECT(0x49, gbc.readMem(0xe6e3));
        // 1A 02CE
        gbc.setState(0xbf90, 0xef18, 0xb1f0, 0x37e9, 0x3c1d, 0x97a7, 0x0, 0x1);
        gbc.writeMem(0x3c1d, { 0x62 });
        gbc.writeMem(0xbf90, { 0x1a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xef18, gbc.sp());
        EXPECT(0xbf91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbf90));
        // 1A 02CF
        gbc.setState(0xbee9, 0x289c, 0xa990, 0x9635, 0xa033, 0xc07a, 0x0, 0x0);
        gbc.writeMem(0xa033, { 0xaa });
        gbc.writeMem(0xbee9, { 0x1a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x289c, gbc.sp());
        EXPECT(0xbeea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa033));
        EXPECT(0x1a, gbc.readMem(0xbee9));
        // 1A 02D0
        gbc.setState(0x5eef, 0x6620, 0x1f30, 0x7600, 0x5e59, 0x1e7c, 0x1, 0x0);
        gbc.writeMem(0x5e59, { 0xe4 });
        gbc.writeMem(0x5eef, { 0x1a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6620, gbc.sp());
        EXPECT(0x5ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02D1
        gbc.setState(0x539, 0xbc15, 0xa650, 0x66a8, 0xed92, 0xa430, 0x1, 0x1);
        gbc.writeMem(0x539, { 0x1a });
        gbc.writeMem(0xed92, { 0xbe });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbc15, gbc.sp());
        EXPECT(0x53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xed92));
        // 1A 02D2
        gbc.setState(0x3ea3, 0xf25e, 0x1db0, 0xbdbe, 0x612d, 0x4be0, 0x1, 0x0);
        gbc.writeMem(0x3ea3, { 0x1a });
        gbc.writeMem(0x612d, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf25e, gbc.sp());
        EXPECT(0x3ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02D3
        gbc.setState(0xe4d8, 0xbf01, 0xc4d0, 0x1ae3, 0x25be, 0x7b41, 0x0, 0x1);
        gbc.writeMem(0x25be, { 0x38 });
        gbc.writeMem(0xe4d8, { 0x1a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbf01, gbc.sp());
        EXPECT(0xe4d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe4d8));
        // 1A 02D4
        gbc.setState(0x368a, 0xd8a, 0xea30, 0x9fce, 0x5324, 0xa638, 0x0, 0x0);
        gbc.writeMem(0x368a, { 0x1a });
        gbc.writeMem(0x5324, { 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd8a, gbc.sp());
        EXPECT(0x368b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02D5
        gbc.setState(0x502b, 0xf582, 0x1280, 0x4390, 0x6469, 0x809b, 0x1, 0x1);
        gbc.writeMem(0x502b, { 0x1a });
        gbc.writeMem(0x6469, { 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf582, gbc.sp());
        EXPECT(0x502c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02D6
        gbc.setState(0xc64b, 0x713d, 0xf4e0, 0x946e, 0x9212, 0x759, 0x0, 0x0);
        gbc.writeMem(0x9212, { 0xe2 });
        gbc.writeMem(0xc64b, { 0x1a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x713d, gbc.sp());
        EXPECT(0xc64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x9212));
        EXPECT(0x1a, gbc.readMem(0xc64b));
        // 1A 02D7
        gbc.setState(0x2b52, 0x3912, 0xa340, 0x2343, 0x399b, 0xfb81, 0x1, 0x1);
        gbc.writeMem(0x2b52, { 0x1a });
        gbc.writeMem(0x399b, { 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3912, gbc.sp());
        EXPECT(0x2b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02D8
        gbc.setState(0xd794, 0xc8d5, 0x48c0, 0xd3e3, 0xe885, 0x4652, 0x1, 0x0);
        gbc.writeMem(0xd794, { 0x1a });
        gbc.writeMem(0xe885, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc8d5, gbc.sp());
        EXPECT(0xd795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd794));
        EXPECT(0xa7, gbc.readMem(0xe885));
        // 1A 02D9
        gbc.setState(0xedb9, 0x3d16, 0xb310, 0xd24d, 0xa326, 0x95d3, 0x1, 0x0);
        gbc.writeMem(0xa326, { 0x4e });
        gbc.writeMem(0xedb9, { 0x1a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3d16, gbc.sp());
        EXPECT(0xedba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa326));
        EXPECT(0x1a, gbc.readMem(0xedb9));
        // 1A 02DA
        gbc.setState(0x7017, 0xea3, 0x9400, 0xf35a, 0xc30, 0xce78, 0x1, 0x0);
        gbc.writeMem(0xc30, { 0x3e });
        gbc.writeMem(0x7017, { 0x1a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xea3, gbc.sp());
        EXPECT(0x7018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02DB
        gbc.setState(0xb82, 0xabd8, 0xef00, 0x55b, 0x4adc, 0x8da9, 0x1, 0x0);
        gbc.writeMem(0xb82, { 0x1a });
        gbc.writeMem(0x4adc, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xabd8, gbc.sp());
        EXPECT(0xb83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02DD
        gbc.setState(0x2619, 0x1d7, 0x55d0, 0xad80, 0x32d4, 0xbdcf, 0x0, 0x1);
        gbc.writeMem(0x2619, { 0x1a });
        gbc.writeMem(0x32d4, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1d7, gbc.sp());
        EXPECT(0x261a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02DE
        gbc.setState(0xd3ea, 0x6269, 0x58c0, 0x86a6, 0x8ad4, 0x5a27, 0x1, 0x1);
        gbc.writeMem(0x8ad4, { 0x31 });
        gbc.writeMem(0xd3ea, { 0x1a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6269, gbc.sp());
        EXPECT(0xd3eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8ad4));
        EXPECT(0x1a, gbc.readMem(0xd3ea));
        // 1A 02DF
        gbc.setState(0x2578, 0xd7a5, 0x3670, 0x51f0, 0x51c8, 0x7238, 0x0, 0x0);
        gbc.writeMem(0x2578, { 0x1a });
        gbc.writeMem(0x51c8, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd7a5, gbc.sp());
        EXPECT(0x2579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02E0
        gbc.setState(0x6da4, 0x61a6, 0x3330, 0xcfa0, 0x800f, 0xf76f, 0x0, 0x0);
        gbc.writeMem(0x6da4, { 0x1a });
        gbc.writeMem(0x800f, { 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x61a6, gbc.sp());
        EXPECT(0x6da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x800f));
        // 1A 02E1
        gbc.setState(0x2222, 0x41cd, 0x1780, 0xf0e5, 0xdbac, 0x96a, 0x1, 0x0);
        gbc.writeMem(0x2222, { 0x1a });
        gbc.writeMem(0xdbac, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x41cd, gbc.sp());
        EXPECT(0x2223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdbac));
        // 1A 02E2
        gbc.setState(0xabd8, 0xf46e, 0xb2f0, 0x1e85, 0xfc1b, 0xfcbd, 0x0, 0x0);
        gbc.writeMem(0xabd8, { 0x1a });
        gbc.writeMem(0xfc1b, { 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf46e, gbc.sp());
        EXPECT(0xabd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xabd8));
        EXPECT(0x40, gbc.readMem(0xfc1b));
        // 1A 02E3
        gbc.setState(0x321c, 0x68d9, 0x9b00, 0x13f4, 0xf0d4, 0x12f5, 0x0, 0x1);
        gbc.writeMem(0x321c, { 0x1a });
        gbc.writeMem(0xf0d4, { 0x9a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x68d9, gbc.sp());
        EXPECT(0x321d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xf0d4));
        // 1A 02E4
        gbc.setState(0xa5c9, 0xe4d7, 0xf20, 0xc6, 0x9c92, 0x5acd, 0x0, 0x1);
        gbc.writeMem(0x9c92, { 0x60 });
        gbc.writeMem(0xa5c9, { 0x1a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe4d7, gbc.sp());
        EXPECT(0xa5ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x9c92));
        EXPECT(0x1a, gbc.readMem(0xa5c9));
        // 1A 02E5
        gbc.setState(0x41a4, 0x80d9, 0x5a30, 0xd5c, 0x1887, 0x5f37, 0x1, 0x1);
        gbc.writeMem(0x1887, { 0xa1 });
        gbc.writeMem(0x41a4, { 0x1a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x80d9, gbc.sp());
        EXPECT(0x41a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02E7
        gbc.setState(0x9acc, 0xfc81, 0x2b30, 0xa46b, 0x59e4, 0xd694, 0x0, 0x0);
        gbc.writeMem(0x59e4, { 0x53 });
        gbc.writeMem(0x9acc, { 0x1a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfc81, gbc.sp());
        EXPECT(0x9acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9acc));
        // 1A 02E8
        gbc.setState(0x2b8c, 0x1ee4, 0x5530, 0x19bf, 0x68d3, 0x7f29, 0x0, 0x0);
        gbc.writeMem(0x2b8c, { 0x1a });
        gbc.writeMem(0x68d3, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1ee4, gbc.sp());
        EXPECT(0x2b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02E9
        gbc.setState(0xc207, 0x85eb, 0xac10, 0x797c, 0x35a9, 0xb92, 0x0, 0x1);
        gbc.writeMem(0x35a9, { 0x64 });
        gbc.writeMem(0xc207, { 0x1a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x85eb, gbc.sp());
        EXPECT(0xc208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc207));
        // 1A 02EA
        gbc.setState(0xe89f, 0xf21f, 0x8580, 0x51af, 0x5569, 0xb599, 0x0, 0x0);
        gbc.writeMem(0x5569, { 0x97 });
        gbc.writeMem(0xe89f, { 0x1a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf21f, gbc.sp());
        EXPECT(0xe8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe89f));
        // 1A 02EB
        gbc.setState(0x5acf, 0xabfc, 0xfce0, 0x2d35, 0x611, 0x4d60, 0x0, 0x0);
        gbc.writeMem(0x611, { 0x19 });
        gbc.writeMem(0x5acf, { 0x1a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xabfc, gbc.sp());
        EXPECT(0x5ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02EC
        gbc.setState(0x4103, 0x7621, 0x3e50, 0x184f, 0xf4c, 0x46bf, 0x0, 0x1);
        gbc.writeMem(0xf4c, { 0xab });
        gbc.writeMem(0x4103, { 0x1a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7621, gbc.sp());
        EXPECT(0x4104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02ED
        gbc.setState(0xcefa, 0x665b, 0xec70, 0xe625, 0x3150, 0xc73e, 0x0, 0x1);
        gbc.writeMem(0x3150, { 0x75 });
        gbc.writeMem(0xcefa, { 0x1a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x665b, gbc.sp());
        EXPECT(0xcefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xcefa));
        // 1A 02EE
        gbc.setState(0x84fb, 0x7bfd, 0x33e0, 0xd94e, 0xdfa9, 0x154d, 0x0, 0x1);
        gbc.writeMem(0x84fb, { 0x1a });
        gbc.writeMem(0xdfa9, { 0xba });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7bfd, gbc.sp());
        EXPECT(0x84fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x84fb));
        EXPECT(0xba, gbc.readMem(0xdfa9));
        // 1A 02EF
        gbc.setState(0x2e58, 0x3fb3, 0xa220, 0x6d32, 0xa8c8, 0xcf71, 0x0, 0x1);
        gbc.writeMem(0x2e58, { 0x1a });
        gbc.writeMem(0xa8c8, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3fb3, gbc.sp());
        EXPECT(0x2e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xa8c8));
        // 1A 02F0
        gbc.setState(0x57f3, 0xcaa4, 0x8020, 0x14a7, 0x5af3, 0x2c71, 0x1, 0x0);
        gbc.writeMem(0x57f3, { 0x1a });
        gbc.writeMem(0x5af3, { 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcaa4, gbc.sp());
        EXPECT(0x57f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02F1
        gbc.setState(0x1541, 0x253e, 0x7080, 0xf3d, 0x1e50, 0x8a6b, 0x1, 0x0);
        gbc.writeMem(0x1541, { 0x1a });
        gbc.writeMem(0x1e50, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x253e, gbc.sp());
        EXPECT(0x1542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02F2
        gbc.setState(0xcc5f, 0x3072, 0xeb30, 0x275c, 0xb6ae, 0x4ed4, 0x1, 0x1);
        gbc.writeMem(0xb6ae, { 0x64 });
        gbc.writeMem(0xcc5f, { 0x1a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3072, gbc.sp());
        EXPECT(0xcc60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb6ae));
        EXPECT(0x1a, gbc.readMem(0xcc5f));
        // 1A 02F3
        gbc.setState(0x5208, 0x4d5b, 0x1970, 0x2418, 0x404a, 0xe8e6, 0x0, 0x1);
        gbc.writeMem(0x404a, { 0x1e });
        gbc.writeMem(0x5208, { 0x1a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4d5b, gbc.sp());
        EXPECT(0x5209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02F4
        gbc.setState(0xa344, 0xfd4, 0xacf0, 0x3429, 0x1675, 0x6553, 0x0, 0x0);
        gbc.writeMem(0x1675, { 0x75 });
        gbc.writeMem(0xa344, { 0x1a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfd4, gbc.sp());
        EXPECT(0xa345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa344));
        // 1A 02F5
        gbc.setState(0x3b74, 0xf962, 0x4c70, 0x834e, 0xfbd8, 0xe883, 0x1, 0x1);
        gbc.writeMem(0x3b74, { 0x1a });
        gbc.writeMem(0xfbd8, { 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf962, gbc.sp());
        EXPECT(0x3b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xfbd8));
        // 1A 02F6
        gbc.setState(0x84fe, 0xd016, 0x8f00, 0x6e81, 0xa61c, 0x6fdd, 0x1, 0x0);
        gbc.writeMem(0x84fe, { 0x1a });
        gbc.writeMem(0xa61c, { 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd016, gbc.sp());
        EXPECT(0x84ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x84fe));
        EXPECT(0x40, gbc.readMem(0xa61c));
        // 1A 02F7
        gbc.setState(0x1283, 0x28a9, 0xb230, 0xcc49, 0x84d4, 0xdada, 0x0, 0x1);
        gbc.writeMem(0x1283, { 0x1a });
        gbc.writeMem(0x84d4, { 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x28a9, gbc.sp());
        EXPECT(0x1284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x84d4));
        // 1A 02F8
        gbc.setState(0xb9fc, 0x7b2a, 0x2430, 0x7f48, 0x2898, 0x7c0d, 0x1, 0x1);
        gbc.writeMem(0x2898, { 0xbe });
        gbc.writeMem(0xb9fc, { 0x1a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7b2a, gbc.sp());
        EXPECT(0xb9fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb9fc));
        // 1A 02F9
        gbc.setState(0x7307, 0x51fc, 0x1390, 0x30d, 0x1066, 0x3e88, 0x1, 0x1);
        gbc.writeMem(0x1066, { 0x2 });
        gbc.writeMem(0x7307, { 0x1a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x51fc, gbc.sp());
        EXPECT(0x7308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02FA
        gbc.setState(0x6132, 0x6d17, 0x3750, 0x95f, 0x6174, 0x6f9d, 0x1, 0x0);
        gbc.writeMem(0x6132, { 0x1a });
        gbc.writeMem(0x6174, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6d17, gbc.sp());
        EXPECT(0x6133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 02FB
        gbc.setState(0x7d6b, 0x984, 0x4e20, 0x8e2a, 0xf33f, 0x47b3, 0x0, 0x0);
        gbc.writeMem(0x7d6b, { 0x1a });
        gbc.writeMem(0xf33f, { 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x984, gbc.sp());
        EXPECT(0x7d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xf33f));
        // 1A 02FC
        gbc.setState(0xc4c, 0xe3a, 0x7cc0, 0x1f70, 0x4246, 0x4a01, 0x1, 0x1);
        gbc.writeMem(0xc4c, { 0x1a });
        gbc.writeMem(0x4246, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe3a, gbc.sp());
        EXPECT(0xc4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 02FD
        gbc.setState(0xba0c, 0x784f, 0x3db0, 0xbe5b, 0x68cc, 0xd50d, 0x0, 0x0);
        gbc.writeMem(0x68cc, { 0x67 });
        gbc.writeMem(0xba0c, { 0x1a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x784f, gbc.sp());
        EXPECT(0xba0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xba0c));
        // 1A 02FE
        gbc.setState(0xa758, 0x16c3, 0x4b50, 0xfdd3, 0x883d, 0xe329, 0x1, 0x0);
        gbc.writeMem(0x883d, { 0x4 });
        gbc.writeMem(0xa758, { 0x1a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x16c3, gbc.sp());
        EXPECT(0xa759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x883d));
        EXPECT(0x1a, gbc.readMem(0xa758));
        // 1A 02FF
        gbc.setState(0x42dc, 0x41c0, 0x7cc0, 0x8add, 0x8e44, 0x63aa, 0x1, 0x0);
        gbc.writeMem(0x42dc, { 0x1a });
        gbc.writeMem(0x8e44, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x41c0, gbc.sp());
        EXPECT(0x42dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x8e44));
        // 1A 0300
        gbc.setState(0x8e4d, 0x31be, 0x8110, 0x295a, 0x824e, 0xc669, 0x1, 0x0);
        gbc.writeMem(0x824e, { 0x8 });
        gbc.writeMem(0x8e4d, { 0x1a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x31be, gbc.sp());
        EXPECT(0x8e4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x824e));
        EXPECT(0x1a, gbc.readMem(0x8e4d));
        // 1A 0302
        gbc.setState(0x82e5, 0x76ee, 0x9dd0, 0x7ecf, 0xf3e8, 0x2afa, 0x0, 0x0);
        gbc.writeMem(0x82e5, { 0x1a });
        gbc.writeMem(0xf3e8, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x76ee, gbc.sp());
        EXPECT(0x82e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x82e5));
        EXPECT(0xe1, gbc.readMem(0xf3e8));
        // 1A 0303
        gbc.setState(0xa526, 0x46f7, 0x6600, 0x70e0, 0xf185, 0xd983, 0x1, 0x1);
        gbc.writeMem(0xa526, { 0x1a });
        gbc.writeMem(0xf185, { 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x46f7, gbc.sp());
        EXPECT(0xa527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa526));
        EXPECT(0x43, gbc.readMem(0xf185));
        // 1A 0304
        gbc.setState(0xc19b, 0x6da8, 0x23d0, 0x41b9, 0x6512, 0xcb4, 0x1, 0x0);
        gbc.writeMem(0x6512, { 0x43 });
        gbc.writeMem(0xc19b, { 0x1a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6da8, gbc.sp());
        EXPECT(0xc19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc19b));
        // 1A 0305
        gbc.setState(0x70f, 0x1738, 0xe370, 0xe9a2, 0x40a9, 0x1b1e, 0x0, 0x0);
        gbc.writeMem(0x70f, { 0x1a });
        gbc.writeMem(0x40a9, { 0xd8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1738, gbc.sp());
        EXPECT(0x710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0306
        gbc.setState(0x523e, 0x4ab, 0x5630, 0xd05f, 0x7440, 0xc2d7, 0x0, 0x0);
        gbc.writeMem(0x523e, { 0x1a });
        gbc.writeMem(0x7440, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4ab, gbc.sp());
        EXPECT(0x523f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0307
        gbc.setState(0x9d4e, 0xdbfc, 0xe460, 0x791d, 0x3cde, 0x5302, 0x0, 0x1);
        gbc.writeMem(0x3cde, { 0xdc });
        gbc.writeMem(0x9d4e, { 0x1a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdbfc, gbc.sp());
        EXPECT(0x9d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9d4e));
        // 1A 0308
        gbc.setState(0xa63b, 0x9b50, 0x5290, 0x6ee8, 0xa470, 0xca81, 0x1, 0x1);
        gbc.writeMem(0xa470, { 0xdc });
        gbc.writeMem(0xa63b, { 0x1a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9b50, gbc.sp());
        EXPECT(0xa63c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xa470));
        EXPECT(0x1a, gbc.readMem(0xa63b));
        // 1A 0309
        gbc.setState(0x140a, 0xa4c2, 0x61d0, 0xb7e, 0x8f97, 0x80a9, 0x1, 0x1);
        gbc.writeMem(0x140a, { 0x1a });
        gbc.writeMem(0x8f97, { 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa4c2, gbc.sp());
        EXPECT(0x140b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8f97));
        // 1A 030A
        gbc.setState(0x64c9, 0x421b, 0xd300, 0xac3d, 0x3dc0, 0x3f38, 0x0, 0x0);
        gbc.writeMem(0x3dc0, { 0x2d });
        gbc.writeMem(0x64c9, { 0x1a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x421b, gbc.sp());
        EXPECT(0x64ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 030B
        gbc.setState(0x31e1, 0xe866, 0xb080, 0xdd29, 0xd41c, 0xbfb6, 0x0, 0x1);
        gbc.writeMem(0x31e1, { 0x1a });
        gbc.writeMem(0xd41c, { 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe866, gbc.sp());
        EXPECT(0x31e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xd41c));
        // 1A 030C
        gbc.setState(0xc70, 0xebdc, 0xead0, 0x2ea6, 0x9cda, 0xc5b0, 0x1, 0x1);
        gbc.writeMem(0xc70, { 0x1a });
        gbc.writeMem(0x9cda, { 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xebdc, gbc.sp());
        EXPECT(0xc71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9cda));
        // 1A 030E
        gbc.setState(0xbea8, 0xcd98, 0x2fa0, 0xf239, 0xa7c, 0xaa17, 0x0, 0x0);
        gbc.writeMem(0xa7c, { 0x58 });
        gbc.writeMem(0xbea8, { 0x1a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcd98, gbc.sp());
        EXPECT(0xbea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbea8));
        // 1A 030F
        gbc.setState(0xb8d, 0x64be, 0xe370, 0x59d5, 0xc8df, 0xe2e6, 0x0, 0x1);
        gbc.writeMem(0xb8d, { 0x1a });
        gbc.writeMem(0xc8df, { 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x64be, gbc.sp());
        EXPECT(0xb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xc8df));
        // 1A 0310
        gbc.setState(0x18b6, 0xf2f5, 0x2ee0, 0xf2ff, 0x5209, 0xd77d, 0x0, 0x1);
        gbc.writeMem(0x18b6, { 0x1a });
        gbc.writeMem(0x5209, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf2f5, gbc.sp());
        EXPECT(0x18b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0311
        gbc.setState(0x9c5d, 0x1662, 0x9da0, 0x4e6b, 0xcd4f, 0x9c7d, 0x0, 0x1);
        gbc.writeMem(0x9c5d, { 0x1a });
        gbc.writeMem(0xcd4f, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1662, gbc.sp());
        EXPECT(0x9c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9c5d));
        EXPECT(0xa9, gbc.readMem(0xcd4f));
        // 1A 0312
        gbc.setState(0x130d, 0xb0c2, 0x9850, 0x3569, 0xdf3a, 0x8a5c, 0x1, 0x0);
        gbc.writeMem(0x130d, { 0x1a });
        gbc.writeMem(0xdf3a, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb0c2, gbc.sp());
        EXPECT(0x130e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdf3a));
        // 1A 0313
        gbc.setState(0x42d, 0x930a, 0x8330, 0x761e, 0x721a, 0x9ba6, 0x1, 0x1);
        gbc.writeMem(0x42d, { 0x1a });
        gbc.writeMem(0x721a, { 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x930a, gbc.sp());
        EXPECT(0x42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0314
        gbc.setState(0x7a20, 0xef46, 0x4740, 0x6b98, 0xde20, 0x37c4, 0x1, 0x0);
        gbc.writeMem(0x7a20, { 0x1a });
        gbc.writeMem(0xde20, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xef46, gbc.sp());
        EXPECT(0x7a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xde20));
        // 1A 0315
        gbc.setState(0x9cd6, 0x6175, 0x3a40, 0x382d, 0x3874, 0x4bee, 0x0, 0x1);
        gbc.writeMem(0x3874, { 0x6a });
        gbc.writeMem(0x9cd6, { 0x1a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6175, gbc.sp());
        EXPECT(0x9cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9cd6));
        // 1A 0316
        gbc.setState(0x338d, 0xdf24, 0x46d0, 0xb0e7, 0xa724, 0xa03c, 0x0, 0x1);
        gbc.writeMem(0x338d, { 0x1a });
        gbc.writeMem(0xa724, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdf24, gbc.sp());
        EXPECT(0x338e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa724));
        // 1A 0317
        gbc.setState(0x840f, 0xa004, 0xdaf0, 0xacff, 0x9b2a, 0xfa1a, 0x1, 0x0);
        gbc.writeMem(0x840f, { 0x1a });
        gbc.writeMem(0x9b2a, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa004, gbc.sp());
        EXPECT(0x8410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x840f));
        EXPECT(0x2, gbc.readMem(0x9b2a));
        // 1A 0318
        gbc.setState(0x95bf, 0x8d74, 0x75a0, 0xfb39, 0x839b, 0x2f48, 0x1, 0x1);
        gbc.writeMem(0x839b, { 0xa2 });
        gbc.writeMem(0x95bf, { 0x1a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8d74, gbc.sp());
        EXPECT(0x95c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x839b));
        EXPECT(0x1a, gbc.readMem(0x95bf));
        // 1A 0319
        gbc.setState(0xe707, 0xf16c, 0xf0e0, 0xe65f, 0xb889, 0x9ccc, 0x0, 0x0);
        gbc.writeMem(0xb889, { 0x68 });
        gbc.writeMem(0xe707, { 0x1a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf16c, gbc.sp());
        EXPECT(0xe708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb889));
        EXPECT(0x1a, gbc.readMem(0xe707));
        // 1A 031A
        gbc.setState(0x8478, 0x466f, 0xd570, 0x4609, 0xb945, 0xa296, 0x1, 0x0);
        gbc.writeMem(0x8478, { 0x1a });
        gbc.writeMem(0xb945, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x466f, gbc.sp());
        EXPECT(0x8479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8478));
        EXPECT(0x93, gbc.readMem(0xb945));
        // 1A 031B
        gbc.setState(0xda0c, 0x3cc9, 0x5010, 0x7880, 0xb6fd, 0xc264, 0x0, 0x0);
        gbc.writeMem(0xb6fd, { 0x19 });
        gbc.writeMem(0xda0c, { 0x1a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3cc9, gbc.sp());
        EXPECT(0xda0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb6fd));
        EXPECT(0x1a, gbc.readMem(0xda0c));
        // 1A 031C
        gbc.setState(0x62fe, 0x76f1, 0xf130, 0x993a, 0xda93, 0xd70e, 0x1, 0x1);
        gbc.writeMem(0x62fe, { 0x1a });
        gbc.writeMem(0xda93, { 0x16 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x76f1, gbc.sp());
        EXPECT(0x62ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xda93));
        // 1A 031D
        gbc.setState(0x802c, 0xbbab, 0xe2a0, 0xe0e0, 0x3997, 0x12f6, 0x1, 0x1);
        gbc.writeMem(0x3997, { 0xe4 });
        gbc.writeMem(0x802c, { 0x1a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbbab, gbc.sp());
        EXPECT(0x802d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x802c));
        // 1A 031E
        gbc.setState(0x9591, 0xb255, 0x1f20, 0xd138, 0xce9e, 0xd268, 0x0, 0x1);
        gbc.writeMem(0x9591, { 0x1a });
        gbc.writeMem(0xce9e, { 0x36 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb255, gbc.sp());
        EXPECT(0x9592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9591));
        EXPECT(0x36, gbc.readMem(0xce9e));
        // 1A 031F
        gbc.setState(0x67ea, 0x9ef6, 0xad60, 0x1788, 0x2ed9, 0xb07f, 0x1, 0x0);
        gbc.writeMem(0x2ed9, { 0x61 });
        gbc.writeMem(0x67ea, { 0x1a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9ef6, gbc.sp());
        EXPECT(0x67eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0320
        gbc.setState(0xca80, 0xde97, 0x5dd0, 0xd846, 0x2174, 0x9a72, 0x1, 0x0);
        gbc.writeMem(0x2174, { 0x2b });
        gbc.writeMem(0xca80, { 0x1a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xde97, gbc.sp());
        EXPECT(0xca81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xca80));
        // 1A 0321
        gbc.setState(0xa695, 0xcb4d, 0xbfa0, 0xf5a7, 0xe789, 0x60a1, 0x0, 0x1);
        gbc.writeMem(0xa695, { 0x1a });
        gbc.writeMem(0xe789, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcb4d, gbc.sp());
        EXPECT(0xa696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa695));
        EXPECT(0xb7, gbc.readMem(0xe789));
        // 1A 0322
        gbc.setState(0x677e, 0x1662, 0x5d00, 0xa22d, 0x62d8, 0xe137, 0x0, 0x1);
        gbc.writeMem(0x62d8, { 0xff });
        gbc.writeMem(0x677e, { 0x1a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1662, gbc.sp());
        EXPECT(0x677f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0323
        gbc.setState(0xa193, 0xc1a3, 0x8b0, 0x75d2, 0x11c6, 0x1639, 0x1, 0x1);
        gbc.writeMem(0x11c6, { 0x1f });
        gbc.writeMem(0xa193, { 0x1a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc1a3, gbc.sp());
        EXPECT(0xa194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa193));
        // 1A 0324
        gbc.setState(0xc856, 0x3abc, 0x60f0, 0xcffb, 0x120d, 0xd99e, 0x1, 0x1);
        gbc.writeMem(0x120d, { 0xf7 });
        gbc.writeMem(0xc856, { 0x1a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3abc, gbc.sp());
        EXPECT(0xc857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc856));
        // 1A 0325
        gbc.setState(0xaa16, 0x13b6, 0x400, 0x267d, 0x27c9, 0xa23a, 0x0, 0x0);
        gbc.writeMem(0x27c9, { 0xd0 });
        gbc.writeMem(0xaa16, { 0x1a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x13b6, gbc.sp());
        EXPECT(0xaa17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xaa16));
        // 1A 0326
        gbc.setState(0x1b79, 0xdc1c, 0x2030, 0xd372, 0x7db5, 0xfc7b, 0x0, 0x0);
        gbc.writeMem(0x1b79, { 0x1a });
        gbc.writeMem(0x7db5, { 0x74 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdc1c, gbc.sp());
        EXPECT(0x1b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0327
        gbc.setState(0xee53, 0x2f4d, 0x76c0, 0xa52a, 0x9704, 0xd195, 0x1, 0x1);
        gbc.writeMem(0x9704, { 0x7c });
        gbc.writeMem(0xee53, { 0x1a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2f4d, gbc.sp());
        EXPECT(0xee54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x9704));
        EXPECT(0x1a, gbc.readMem(0xee53));
        // 1A 0328
        gbc.setState(0x1a73, 0xc706, 0xeaa0, 0xaa4c, 0xe5e1, 0xebf8, 0x0, 0x0);
        gbc.writeMem(0x1a73, { 0x1a });
        gbc.writeMem(0xe5e1, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc706, gbc.sp());
        EXPECT(0x1a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe5e1));
        // 1A 0329
        gbc.setState(0x54e6, 0x6476, 0xa430, 0xe701, 0x73d6, 0xc8bd, 0x0, 0x0);
        gbc.writeMem(0x54e6, { 0x1a });
        gbc.writeMem(0x73d6, { 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6476, gbc.sp());
        EXPECT(0x54e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 032A
        gbc.setState(0x4d67, 0xe1b9, 0xe900, 0xa42c, 0x6267, 0x24ac, 0x0, 0x1);
        gbc.writeMem(0x4d67, { 0x1a });
        gbc.writeMem(0x6267, { 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe1b9, gbc.sp());
        EXPECT(0x4d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 032B
        gbc.setState(0xbeec, 0x25e5, 0xf4e0, 0xd95a, 0xe4af, 0xf059, 0x0, 0x0);
        gbc.writeMem(0xbeec, { 0x1a });
        gbc.writeMem(0xe4af, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x25e5, gbc.sp());
        EXPECT(0xbeed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbeec));
        EXPECT(0x8f, gbc.readMem(0xe4af));
        // 1A 032C
        gbc.setState(0xce55, 0x1466, 0x4c00, 0xc17, 0xce65, 0x4658, 0x0, 0x1);
        gbc.writeMem(0xce55, { 0x1a });
        gbc.writeMem(0xce65, { 0x5c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1466, gbc.sp());
        EXPECT(0xce56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xce55));
        EXPECT(0x5c, gbc.readMem(0xce65));
        // 1A 032D
        gbc.setState(0x7665, 0x3f35, 0xe0d0, 0x86a2, 0x372a, 0x4073, 0x1, 0x0);
        gbc.writeMem(0x372a, { 0xc4 });
        gbc.writeMem(0x7665, { 0x1a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3f35, gbc.sp());
        EXPECT(0x7666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 032E
        gbc.setState(0x8519, 0x13d4, 0xe450, 0x4c2f, 0xfe13, 0x78e9, 0x0, 0x1);
        gbc.writeMem(0x8519, { 0x1a });
        gbc.writeMem(0xfe13, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x13d4, gbc.sp());
        EXPECT(0x851a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8519));
        EXPECT(0xf1, gbc.readMem(0xfe13));
        // 1A 032F
        gbc.setState(0x4e75, 0x835e, 0x85b0, 0x3919, 0x12f6, 0x8119, 0x0, 0x0);
        gbc.writeMem(0x12f6, { 0xf3 });
        gbc.writeMem(0x4e75, { 0x1a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x835e, gbc.sp());
        EXPECT(0x4e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0330
        gbc.setState(0x34bb, 0x9f9, 0x5a30, 0x3754, 0x739e, 0x53c7, 0x0, 0x0);
        gbc.writeMem(0x34bb, { 0x1a });
        gbc.writeMem(0x739e, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9f9, gbc.sp());
        EXPECT(0x34bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0331
        gbc.setState(0x3c45, 0x675a, 0xf8d0, 0xab83, 0x7782, 0x2140, 0x1, 0x1);
        gbc.writeMem(0x3c45, { 0x1a });
        gbc.writeMem(0x7782, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x675a, gbc.sp());
        EXPECT(0x3c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0332
        gbc.setState(0x4755, 0x7d5d, 0x3490, 0xe281, 0xb8cc, 0x8093, 0x1, 0x0);
        gbc.writeMem(0x4755, { 0x1a });
        gbc.writeMem(0xb8cc, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7d5d, gbc.sp());
        EXPECT(0x4756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xb8cc));
        // 1A 0334
        gbc.setState(0x27b7, 0xbe6c, 0xc700, 0x9424, 0x9cf0, 0xfa7e, 0x0, 0x0);
        gbc.writeMem(0x27b7, { 0x1a });
        gbc.writeMem(0x9cf0, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbe6c, gbc.sp());
        EXPECT(0x27b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9cf0));
        // 1A 0335
        gbc.setState(0x402d, 0x8114, 0x2880, 0x3c16, 0xdfb6, 0xa43b, 0x1, 0x0);
        gbc.writeMem(0x402d, { 0x1a });
        gbc.writeMem(0xdfb6, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8114, gbc.sp());
        EXPECT(0x402e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdfb6));
        // 1A 0336
        gbc.setState(0xaaa, 0x19fb, 0xf160, 0x5709, 0x7b03, 0x4e5, 0x1, 0x0);
        gbc.writeMem(0xaaa, { 0x1a });
        gbc.writeMem(0x7b03, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x19fb, gbc.sp());
        EXPECT(0xaab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0337
        gbc.setState(0x3267, 0x9890, 0xbc20, 0xddc4, 0xdcbe, 0x7862, 0x1, 0x0);
        gbc.writeMem(0x3267, { 0x1a });
        gbc.writeMem(0xdcbe, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9890, gbc.sp());
        EXPECT(0x3268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdcbe));
        // 1A 0338
        gbc.setState(0xe4b3, 0x3fb7, 0x1660, 0x4414, 0xed46, 0xf504, 0x0, 0x1);
        gbc.writeMem(0xe4b3, { 0x1a });
        gbc.writeMem(0xed46, { 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3fb7, gbc.sp());
        EXPECT(0xe4b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe4b3));
        EXPECT(0x91, gbc.readMem(0xed46));
        // 1A 0339
        gbc.setState(0x74a2, 0xa9b6, 0xdca0, 0xa6cd, 0x6b5d, 0x1524, 0x1, 0x0);
        gbc.writeMem(0x6b5d, { 0x8f });
        gbc.writeMem(0x74a2, { 0x1a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa9b6, gbc.sp());
        EXPECT(0x74a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 033A
        gbc.setState(0x6cf7, 0x319a, 0x4af0, 0x51ee, 0xecc6, 0x413b, 0x0, 0x0);
        gbc.writeMem(0x6cf7, { 0x1a });
        gbc.writeMem(0xecc6, { 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x319a, gbc.sp());
        EXPECT(0x6cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xecc6));
        // 1A 033C
        gbc.setState(0xfdd, 0xf494, 0x9b90, 0x55f9, 0x8af8, 0xd622, 0x0, 0x1);
        gbc.writeMem(0xfdd, { 0x1a });
        gbc.writeMem(0x8af8, { 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf494, gbc.sp());
        EXPECT(0xfde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8af8));
        // 1A 033D
        gbc.setState(0x275, 0x6af6, 0xccc0, 0x2ffd, 0x23d9, 0x7009, 0x0, 0x1);
        gbc.writeMem(0x275, { 0x1a });
        gbc.writeMem(0x23d9, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6af6, gbc.sp());
        EXPECT(0x276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 033E
        gbc.setState(0x1b9b, 0x8b20, 0xf950, 0x651, 0x459c, 0x8379, 0x1, 0x0);
        gbc.writeMem(0x1b9b, { 0x1a });
        gbc.writeMem(0x459c, { 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8b20, gbc.sp());
        EXPECT(0x1b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 033F
        gbc.setState(0xce5e, 0xe262, 0x36b0, 0x2e5d, 0x6503, 0xb910, 0x0, 0x0);
        gbc.writeMem(0x6503, { 0x47 });
        gbc.writeMem(0xce5e, { 0x1a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe262, gbc.sp());
        EXPECT(0xce5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xce5e));
        // 1A 0340
        gbc.setState(0x2344, 0x8ed5, 0x5370, 0xca16, 0x9aad, 0xb44a, 0x1, 0x0);
        gbc.writeMem(0x2344, { 0x1a });
        gbc.writeMem(0x9aad, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8ed5, gbc.sp());
        EXPECT(0x2345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9aad));
        // 1A 0341
        gbc.setState(0x2bb2, 0x8845, 0x27b0, 0xc1d8, 0x3aac, 0x78c9, 0x0, 0x0);
        gbc.writeMem(0x2bb2, { 0x1a });
        gbc.writeMem(0x3aac, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8845, gbc.sp());
        EXPECT(0x2bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0342
        gbc.setState(0xb5ed, 0x311c, 0x2a80, 0xbf9f, 0x750f, 0x1210, 0x0, 0x0);
        gbc.writeMem(0x750f, { 0xaf });
        gbc.writeMem(0xb5ed, { 0x1a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x311c, gbc.sp());
        EXPECT(0xb5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb5ed));
        // 1A 0343
        gbc.setState(0xba2, 0x2475, 0xaa60, 0x9ef6, 0xa27d, 0x7a45, 0x0, 0x1);
        gbc.writeMem(0xba2, { 0x1a });
        gbc.writeMem(0xa27d, { 0xaa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2475, gbc.sp());
        EXPECT(0xba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa27d));
        // 1A 0344
        gbc.setState(0x9b7b, 0x14c8, 0xff80, 0xd80a, 0x852d, 0x7cc7, 0x1, 0x1);
        gbc.writeMem(0x852d, { 0xec });
        gbc.writeMem(0x9b7b, { 0x1a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x14c8, gbc.sp());
        EXPECT(0x9b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x852d));
        EXPECT(0x1a, gbc.readMem(0x9b7b));
        // 1A 0345
        gbc.setState(0x7ede, 0x9c84, 0xc70, 0x418e, 0xbd38, 0x69fa, 0x1, 0x0);
        gbc.writeMem(0x7ede, { 0x1a });
        gbc.writeMem(0xbd38, { 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9c84, gbc.sp());
        EXPECT(0x7edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xbd38));
        // 1A 0347
        gbc.setState(0xb245, 0x7b6a, 0xa9b0, 0xcb34, 0x462e, 0x2b60, 0x1, 0x1);
        gbc.writeMem(0x462e, { 0xb });
        gbc.writeMem(0xb245, { 0x1a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7b6a, gbc.sp());
        EXPECT(0xb246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb245));
        // 1A 0348
        gbc.setState(0x6c6e, 0xd857, 0x2880, 0x69c6, 0xff88, 0xbedb, 0x0, 0x0);
        gbc.writeMem(0x6c6e, { 0x1a });
        gbc.writeMem(0xff88, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd857, gbc.sp());
        EXPECT(0x6c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xff88));
        // 1A 0349
        gbc.setState(0x30b4, 0x6065, 0x82e0, 0xfb33, 0x54cf, 0xb98a, 0x1, 0x0);
        gbc.writeMem(0x30b4, { 0x1a });
        gbc.writeMem(0x54cf, { 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6065, gbc.sp());
        EXPECT(0x30b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 034A
        gbc.setState(0xd645, 0x76e3, 0x93d0, 0x9200, 0xf101, 0xaf6a, 0x1, 0x1);
        gbc.writeMem(0xd645, { 0x1a });
        gbc.writeMem(0xf101, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x76e3, gbc.sp());
        EXPECT(0xd646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd645));
        EXPECT(0x7, gbc.readMem(0xf101));
        // 1A 034B
        gbc.setState(0xdd09, 0xe6a5, 0x58e0, 0x5d9, 0x8c1a, 0x4fec, 0x0, 0x0);
        gbc.writeMem(0x8c1a, { 0x52 });
        gbc.writeMem(0xdd09, { 0x1a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe6a5, gbc.sp());
        EXPECT(0xdd0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8c1a));
        EXPECT(0x1a, gbc.readMem(0xdd09));
        // 1A 034C
        gbc.setState(0x70d8, 0x35a8, 0x5d0, 0x945e, 0x3d0c, 0x5d17, 0x0, 0x1);
        gbc.writeMem(0x3d0c, { 0x5a });
        gbc.writeMem(0x70d8, { 0x1a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x35a8, gbc.sp());
        EXPECT(0x70d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 034D
        gbc.setState(0x87b4, 0x2b63, 0x3fb0, 0x880d, 0x6a3f, 0xc6e9, 0x0, 0x0);
        gbc.writeMem(0x6a3f, { 0xaa });
        gbc.writeMem(0x87b4, { 0x1a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2b63, gbc.sp());
        EXPECT(0x87b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x87b4));
        // 1A 0350
        gbc.setState(0x31f4, 0xfce7, 0x17f0, 0x6775, 0x9823, 0xccc2, 0x0, 0x1);
        gbc.writeMem(0x31f4, { 0x1a });
        gbc.writeMem(0x9823, { 0x99 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfce7, gbc.sp());
        EXPECT(0x31f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9823));
        // 1A 0351
        gbc.setState(0xcec, 0x7dd1, 0xfb40, 0x9587, 0xe813, 0x81ae, 0x0, 0x1);
        gbc.writeMem(0xcec, { 0x1a });
        gbc.writeMem(0xe813, { 0x70 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7dd1, gbc.sp());
        EXPECT(0xced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xe813));
        // 1A 0352
        gbc.setState(0x56ca, 0x662b, 0xcee0, 0x3071, 0x27d, 0xf0c4, 0x0, 0x1);
        gbc.writeMem(0x27d, { 0xf1 });
        gbc.writeMem(0x56ca, { 0x1a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x662b, gbc.sp());
        EXPECT(0x56cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0353
        gbc.setState(0x2033, 0xcd63, 0xe550, 0x6dbe, 0x2b01, 0x683c, 0x0, 0x1);
        gbc.writeMem(0x2033, { 0x1a });
        gbc.writeMem(0x2b01, { 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcd63, gbc.sp());
        EXPECT(0x2034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0354
        gbc.setState(0x8d3b, 0x6bd1, 0xcad0, 0xa80a, 0x9b56, 0xc1b4, 0x1, 0x1);
        gbc.writeMem(0x8d3b, { 0x1a });
        gbc.writeMem(0x9b56, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6bd1, gbc.sp());
        EXPECT(0x8d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8d3b));
        EXPECT(0x2c, gbc.readMem(0x9b56));
        // 1A 0355
        gbc.setState(0x4b5d, 0xc395, 0x5a0, 0x7201, 0xe272, 0xae2d, 0x0, 0x0);
        gbc.writeMem(0x4b5d, { 0x1a });
        gbc.writeMem(0xe272, { 0x99 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc395, gbc.sp());
        EXPECT(0x4b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe272));
        // 1A 0356
        gbc.setState(0xe7dd, 0x452c, 0xc510, 0x580d, 0x56da, 0x3956, 0x0, 0x1);
        gbc.writeMem(0x56da, { 0x76 });
        gbc.writeMem(0xe7dd, { 0x1a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x452c, gbc.sp());
        EXPECT(0xe7de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe7dd));
        // 1A 0357
        gbc.setState(0x9ab5, 0x8b2f, 0xb450, 0x6574, 0x5939, 0xc19, 0x1, 0x0);
        gbc.writeMem(0x5939, { 0xe9 });
        gbc.writeMem(0x9ab5, { 0x1a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8b2f, gbc.sp());
        EXPECT(0x9ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9ab5));
        // 1A 0358
        gbc.setState(0xab21, 0x7eb4, 0xc100, 0x36ab, 0xf118, 0x5942, 0x1, 0x1);
        gbc.writeMem(0xab21, { 0x1a });
        gbc.writeMem(0xf118, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7eb4, gbc.sp());
        EXPECT(0xab22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xab21));
        EXPECT(0xf3, gbc.readMem(0xf118));
        // 1A 0359
        gbc.setState(0xe1e2, 0x5949, 0x6c30, 0x9121, 0x2080, 0xe29b, 0x1, 0x1);
        gbc.writeMem(0x2080, { 0x34 });
        gbc.writeMem(0xe1e2, { 0x1a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5949, gbc.sp());
        EXPECT(0xe1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe1e2));
        // 1A 035A
        gbc.setState(0x1c28, 0x8d4c, 0x4710, 0x7403, 0x7929, 0xfea6, 0x1, 0x0);
        gbc.writeMem(0x1c28, { 0x1a });
        gbc.writeMem(0x7929, { 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8d4c, gbc.sp());
        EXPECT(0x1c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 035B
        gbc.setState(0xca11, 0x9ccf, 0x28c0, 0xe11f, 0xdaf4, 0xcb55, 0x1, 0x0);
        gbc.writeMem(0xca11, { 0x1a });
        gbc.writeMem(0xdaf4, { 0x3f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9ccf, gbc.sp());
        EXPECT(0xca12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xca11));
        EXPECT(0x3f, gbc.readMem(0xdaf4));
        // 1A 035C
        gbc.setState(0x72e9, 0x958a, 0xadd0, 0x277c, 0x2a6d, 0x609d, 0x0, 0x0);
        gbc.writeMem(0x2a6d, { 0xb4 });
        gbc.writeMem(0x72e9, { 0x1a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x958a, gbc.sp());
        EXPECT(0x72ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 035D
        gbc.setState(0xd833, 0xb31d, 0xe7c0, 0x49f, 0x3bc, 0xe8a4, 0x1, 0x0);
        gbc.writeMem(0x3bc, { 0xca });
        gbc.writeMem(0xd833, { 0x1a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb31d, gbc.sp());
        EXPECT(0xd834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd833));
        // 1A 035E
        gbc.setState(0xdb8d, 0x9050, 0x5f00, 0xd85e, 0x2bd9, 0x933f, 0x0, 0x0);
        gbc.writeMem(0x2bd9, { 0x16 });
        gbc.writeMem(0xdb8d, { 0x1a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9050, gbc.sp());
        EXPECT(0xdb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdb8d));
        // 1A 035F
        gbc.setState(0xd8a7, 0xc356, 0x9eb0, 0xb072, 0xae27, 0x2e6c, 0x0, 0x1);
        gbc.writeMem(0xae27, { 0x41 });
        gbc.writeMem(0xd8a7, { 0x1a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc356, gbc.sp());
        EXPECT(0xd8a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xae27));
        EXPECT(0x1a, gbc.readMem(0xd8a7));
        // 1A 0360
        gbc.setState(0x4a97, 0xe797, 0xbb20, 0x4443, 0xd9f7, 0x47fe, 0x1, 0x0);
        gbc.writeMem(0x4a97, { 0x1a });
        gbc.writeMem(0xd9f7, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe797, gbc.sp());
        EXPECT(0x4a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xd9f7));
        // 1A 0361
        gbc.setState(0x9e55, 0x2bdd, 0xb0, 0x179a, 0xba7e, 0xd636, 0x0, 0x1);
        gbc.writeMem(0x9e55, { 0x1a });
        gbc.writeMem(0xba7e, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2bdd, gbc.sp());
        EXPECT(0x9e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9e55));
        EXPECT(0x55, gbc.readMem(0xba7e));
        // 1A 0362
        gbc.setState(0x22e0, 0x6f47, 0x48c0, 0xe39d, 0x1013, 0x70a, 0x0, 0x0);
        gbc.writeMem(0x1013, { 0x90 });
        gbc.writeMem(0x22e0, { 0x1a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6f47, gbc.sp());
        EXPECT(0x22e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0363
        gbc.setState(0xafba, 0xac33, 0x6bc0, 0x55ce, 0x1390, 0xf6dd, 0x0, 0x0);
        gbc.writeMem(0x1390, { 0xe4 });
        gbc.writeMem(0xafba, { 0x1a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xac33, gbc.sp());
        EXPECT(0xafbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xafba));
        // 1A 0364
        gbc.setState(0x9c8c, 0xe10, 0xc8d0, 0x84e1, 0x24da, 0x3269, 0x0, 0x0);
        gbc.writeMem(0x24da, { 0x7 });
        gbc.writeMem(0x9c8c, { 0x1a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe10, gbc.sp());
        EXPECT(0x9c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9c8c));
        // 1A 0365
        gbc.setState(0x7b59, 0x5a53, 0x8910, 0xb9ef, 0x7978, 0xe517, 0x1, 0x0);
        gbc.writeMem(0x7978, { 0x79 });
        gbc.writeMem(0x7b59, { 0x1a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5a53, gbc.sp());
        EXPECT(0x7b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0366
        gbc.setState(0x1f3d, 0x6168, 0x5b40, 0x4dd6, 0xbdac, 0x20cc, 0x0, 0x1);
        gbc.writeMem(0x1f3d, { 0x1a });
        gbc.writeMem(0xbdac, { 0x70 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6168, gbc.sp());
        EXPECT(0x1f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xbdac));
        // 1A 0367
        gbc.setState(0x7ca6, 0x1eee, 0x7520, 0x2ca2, 0xa15e, 0x60a8, 0x1, 0x0);
        gbc.writeMem(0x7ca6, { 0x1a });
        gbc.writeMem(0xa15e, { 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1eee, gbc.sp());
        EXPECT(0x7ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xa15e));
        // 1A 0368
        gbc.setState(0x5b7a, 0x779, 0xdef0, 0x1d78, 0x3adb, 0x68a0, 0x1, 0x0);
        gbc.writeMem(0x3adb, { 0x21 });
        gbc.writeMem(0x5b7a, { 0x1a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x779, gbc.sp());
        EXPECT(0x5b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0369
        gbc.setState(0x2c62, 0x996d, 0x2ce0, 0x9b06, 0xc252, 0x7111, 0x0, 0x0);
        gbc.writeMem(0x2c62, { 0x1a });
        gbc.writeMem(0xc252, { 0xf4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x996d, gbc.sp());
        EXPECT(0x2c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xc252));
        // 1A 036A
        gbc.setState(0x270c, 0x940c, 0x5d10, 0xfc68, 0x46a9, 0x5fc, 0x0, 0x1);
        gbc.writeMem(0x270c, { 0x1a });
        gbc.writeMem(0x46a9, { 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x940c, gbc.sp());
        EXPECT(0x270d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 036B
        gbc.setState(0x1de5, 0x945d, 0xa100, 0xccc3, 0xec00, 0x5157, 0x0, 0x1);
        gbc.writeMem(0x1de5, { 0x1a });
        gbc.writeMem(0xec00, { 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x945d, gbc.sp());
        EXPECT(0x1de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xec00));
        // 1A 036C
        gbc.setState(0x97c2, 0x68a7, 0xde40, 0xdb66, 0x36c, 0xfa16, 0x1, 0x0);
        gbc.writeMem(0x36c, { 0xb3 });
        gbc.writeMem(0x97c2, { 0x1a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x68a7, gbc.sp());
        EXPECT(0x97c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x97c2));
        // 1A 036D
        gbc.setState(0xaf46, 0x9bb3, 0xa4f0, 0x8fbf, 0x8da5, 0xc26e, 0x1, 0x1);
        gbc.writeMem(0x8da5, { 0x4e });
        gbc.writeMem(0xaf46, { 0x1a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9bb3, gbc.sp());
        EXPECT(0xaf47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8da5));
        EXPECT(0x1a, gbc.readMem(0xaf46));
        // 1A 036E
        gbc.setState(0xca1c, 0x4c3d, 0x1470, 0x6cc5, 0x95c5, 0x2275, 0x0, 0x1);
        gbc.writeMem(0x95c5, { 0x96 });
        gbc.writeMem(0xca1c, { 0x1a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4c3d, gbc.sp());
        EXPECT(0xca1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x95c5));
        EXPECT(0x1a, gbc.readMem(0xca1c));
        // 1A 036F
        gbc.setState(0x13f0, 0x707a, 0x4b30, 0x554, 0x8597, 0x2a99, 0x1, 0x1);
        gbc.writeMem(0x13f0, { 0x1a });
        gbc.writeMem(0x8597, { 0x7b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x707a, gbc.sp());
        EXPECT(0x13f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8597));
        // 1A 0370
        gbc.setState(0x447d, 0x1a47, 0xc420, 0x3b4d, 0x448c, 0x3dd6, 0x0, 0x1);
        gbc.writeMem(0x447d, { 0x1a });
        gbc.writeMem(0x448c, { 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1a47, gbc.sp());
        EXPECT(0x447e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0371
        gbc.setState(0xa387, 0xa6a9, 0x5f30, 0xf0b1, 0x6352, 0x2ad5, 0x1, 0x1);
        gbc.writeMem(0x6352, { 0x8a });
        gbc.writeMem(0xa387, { 0x1a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa6a9, gbc.sp());
        EXPECT(0xa388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa387));
        // 1A 0372
        gbc.setState(0x391b, 0x91a0, 0xc820, 0x32e8, 0x918d, 0xb854, 0x1, 0x1);
        gbc.writeMem(0x391b, { 0x1a });
        gbc.writeMem(0x918d, { 0x7c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x91a0, gbc.sp());
        EXPECT(0x391c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x918d));
        // 1A 0373
        gbc.setState(0xa8fb, 0x9956, 0x66a0, 0x7581, 0xcd3, 0x3fed, 0x1, 0x0);
        gbc.writeMem(0xcd3, { 0x6c });
        gbc.writeMem(0xa8fb, { 0x1a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9956, gbc.sp());
        EXPECT(0xa8fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa8fb));
        // 1A 0374
        gbc.setState(0xe790, 0x206f, 0x55f0, 0x9a64, 0x69f7, 0xdb82, 0x0, 0x1);
        gbc.writeMem(0x69f7, { 0xa3 });
        gbc.writeMem(0xe790, { 0x1a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x206f, gbc.sp());
        EXPECT(0xe791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe790));
        // 1A 0375
        gbc.setState(0xd81a, 0xede8, 0x8130, 0xd312, 0xa1ac, 0x71c0, 0x0, 0x0);
        gbc.writeMem(0xa1ac, { 0x2f });
        gbc.writeMem(0xd81a, { 0x1a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xede8, gbc.sp());
        EXPECT(0xd81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa1ac));
        EXPECT(0x1a, gbc.readMem(0xd81a));
        // 1A 0376
        gbc.setState(0xc709, 0xb28e, 0x9cc0, 0xc3c7, 0xead9, 0x94b6, 0x0, 0x0);
        gbc.writeMem(0xc709, { 0x1a });
        gbc.writeMem(0xead9, { 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb28e, gbc.sp());
        EXPECT(0xc70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc709));
        EXPECT(0xb8, gbc.readMem(0xead9));
        // 1A 0377
        gbc.setState(0x9720, 0xceab, 0x9e10, 0x1ceb, 0x383c, 0x3305, 0x0, 0x0);
        gbc.writeMem(0x383c, { 0x4a });
        gbc.writeMem(0x9720, { 0x1a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xceab, gbc.sp());
        EXPECT(0x9721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9720));
        // 1A 0378
        gbc.setState(0xbb66, 0x321, 0x6250, 0xf1b3, 0xa760, 0xfe55, 0x1, 0x1);
        gbc.writeMem(0xa760, { 0x8 });
        gbc.writeMem(0xbb66, { 0x1a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x321, gbc.sp());
        EXPECT(0xbb67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xa760));
        EXPECT(0x1a, gbc.readMem(0xbb66));
        // 1A 0379
        gbc.setState(0x9cd2, 0x7ea0, 0xdf80, 0xd22d, 0x5103, 0xc72c, 0x0, 0x1);
        gbc.writeMem(0x5103, { 0xbf });
        gbc.writeMem(0x9cd2, { 0x1a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7ea0, gbc.sp());
        EXPECT(0x9cd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9cd2));
        // 1A 037A
        gbc.setState(0x9071, 0x86a3, 0x55c0, 0xbf10, 0x838b, 0xe196, 0x1, 0x1);
        gbc.writeMem(0x838b, { 0xf0 });
        gbc.writeMem(0x9071, { 0x1a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x86a3, gbc.sp());
        EXPECT(0x9072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x838b));
        EXPECT(0x1a, gbc.readMem(0x9071));
        // 1A 037B
        gbc.setState(0xbc35, 0x9547, 0xff20, 0x6391, 0xf9a7, 0x6f7d, 0x1, 0x1);
        gbc.writeMem(0xbc35, { 0x1a });
        gbc.writeMem(0xf9a7, { 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9547, gbc.sp());
        EXPECT(0xbc36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbc35));
        EXPECT(0xc9, gbc.readMem(0xf9a7));
        // 1A 037C
        gbc.setState(0xc55a, 0x6e1d, 0xd450, 0x4d76, 0xb15e, 0x3fa, 0x1, 0x1);
        gbc.writeMem(0xb15e, { 0xf6 });
        gbc.writeMem(0xc55a, { 0x1a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6e1d, gbc.sp());
        EXPECT(0xc55b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xb15e));
        EXPECT(0x1a, gbc.readMem(0xc55a));
        // 1A 037D
        gbc.setState(0x1dfb, 0xd386, 0xe500, 0x66e7, 0xd3c1, 0x899c, 0x0, 0x0);
        gbc.writeMem(0x1dfb, { 0x1a });
        gbc.writeMem(0xd3c1, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd386, gbc.sp());
        EXPECT(0x1dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd3c1));
        // 1A 037E
        gbc.setState(0xb573, 0x5840, 0xcb00, 0x53df, 0xfbdd, 0xdb71, 0x0, 0x1);
        gbc.writeMem(0xb573, { 0x1a });
        gbc.writeMem(0xfbdd, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5840, gbc.sp());
        EXPECT(0xb574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb573));
        EXPECT(0x9c, gbc.readMem(0xfbdd));
        // 1A 037F
        gbc.setState(0x9654, 0xa95, 0x6ca0, 0xcd3a, 0x876d, 0xc720, 0x1, 0x0);
        gbc.writeMem(0x876d, { 0x5 });
        gbc.writeMem(0x9654, { 0x1a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa95, gbc.sp());
        EXPECT(0x9655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x876d));
        EXPECT(0x1a, gbc.readMem(0x9654));
        // 1A 0380
        gbc.setState(0x8e32, 0x1ca6, 0xd60, 0xb13e, 0xfea2, 0x2016, 0x1, 0x1);
        gbc.writeMem(0x8e32, { 0x1a });
        gbc.writeMem(0xfea2, { 0x28 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1ca6, gbc.sp());
        EXPECT(0x8e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8e32));
        EXPECT(0x28, gbc.readMem(0xfea2));
        // 1A 0381
        gbc.setState(0xdba0, 0x873e, 0x5010, 0x6afc, 0xec8b, 0x4ca2, 0x1, 0x1);
        gbc.writeMem(0xdba0, { 0x1a });
        gbc.writeMem(0xec8b, { 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x873e, gbc.sp());
        EXPECT(0xdba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdba0));
        EXPECT(0xb9, gbc.readMem(0xec8b));
        // 1A 0382
        gbc.setState(0x7c87, 0xff4c, 0x610, 0x6cfc, 0x5e07, 0xfcc6, 0x1, 0x1);
        gbc.writeMem(0x5e07, { 0x23 });
        gbc.writeMem(0x7c87, { 0x1a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xff4c, gbc.sp());
        EXPECT(0x7c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0383
        gbc.setState(0xcf83, 0x4a6c, 0x540, 0xb6ba, 0xa76a, 0x134b, 0x1, 0x1);
        gbc.writeMem(0xa76a, { 0x5f });
        gbc.writeMem(0xcf83, { 0x1a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4a6c, gbc.sp());
        EXPECT(0xcf84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xa76a));
        EXPECT(0x1a, gbc.readMem(0xcf83));
        // 1A 0384
        gbc.setState(0x42fb, 0x6669, 0x7650, 0x29b4, 0x7bb9, 0x5785, 0x0, 0x0);
        gbc.writeMem(0x42fb, { 0x1a });
        gbc.writeMem(0x7bb9, { 0xa6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6669, gbc.sp());
        EXPECT(0x42fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0385
        gbc.setState(0xc570, 0x8f83, 0xcbe0, 0xd261, 0xcab6, 0xf093, 0x0, 0x0);
        gbc.writeMem(0xc570, { 0x1a });
        gbc.writeMem(0xcab6, { 0x42 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8f83, gbc.sp());
        EXPECT(0xc571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc570));
        EXPECT(0x42, gbc.readMem(0xcab6));
        // 1A 0386
        gbc.setState(0xc8c0, 0xd5cc, 0x5a30, 0xcfb3, 0x5782, 0xe8ed, 0x0, 0x0);
        gbc.writeMem(0x5782, { 0x3b });
        gbc.writeMem(0xc8c0, { 0x1a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd5cc, gbc.sp());
        EXPECT(0xc8c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc8c0));
        // 1A 0387
        gbc.setState(0xad33, 0xff8d, 0x7650, 0xb52a, 0x436c, 0x9647, 0x0, 0x1);
        gbc.writeMem(0x436c, { 0xd9 });
        gbc.writeMem(0xad33, { 0x1a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xff8d, gbc.sp());
        EXPECT(0xad34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xad33));
        // 1A 0388
        gbc.setState(0xd836, 0x6d40, 0x10, 0x3214, 0xc942, 0xeca, 0x0, 0x0);
        gbc.writeMem(0xc942, { 0x4a });
        gbc.writeMem(0xd836, { 0x1a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6d40, gbc.sp());
        EXPECT(0xd837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xc942));
        EXPECT(0x1a, gbc.readMem(0xd836));
        // 1A 0389
        gbc.setState(0x2a2a, 0x1e06, 0x6990, 0xc914, 0x8ff, 0x5811, 0x1, 0x1);
        gbc.writeMem(0x8ff, { 0x3f });
        gbc.writeMem(0x2a2a, { 0x1a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1e06, gbc.sp());
        EXPECT(0x2a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 038A
        gbc.setState(0x1e81, 0xa0b, 0x6240, 0xd969, 0x9d48, 0x1321, 0x0, 0x1);
        gbc.writeMem(0x1e81, { 0x1a });
        gbc.writeMem(0x9d48, { 0x45 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa0b, gbc.sp());
        EXPECT(0x1e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x9d48));
        // 1A 038B
        gbc.setState(0x1bd7, 0xf409, 0xfab0, 0x4eea, 0x3b36, 0x60c7, 0x1, 0x0);
        gbc.writeMem(0x1bd7, { 0x1a });
        gbc.writeMem(0x3b36, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf409, gbc.sp());
        EXPECT(0x1bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 038C
        gbc.setState(0xaa7c, 0x718d, 0x2b00, 0x3f75, 0x13cb, 0x2ed4, 0x1, 0x0);
        gbc.writeMem(0x13cb, { 0xc2 });
        gbc.writeMem(0xaa7c, { 0x1a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x718d, gbc.sp());
        EXPECT(0xaa7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xaa7c));
        // 1A 038D
        gbc.setState(0xd677, 0x676b, 0x5240, 0x85ef, 0xbf5e, 0x5568, 0x1, 0x1);
        gbc.writeMem(0xbf5e, { 0x8b });
        gbc.writeMem(0xd677, { 0x1a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x676b, gbc.sp());
        EXPECT(0xd678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xbf5e));
        EXPECT(0x1a, gbc.readMem(0xd677));
        // 1A 038E
        gbc.setState(0xbd90, 0x9dec, 0xf070, 0x47c1, 0xcd96, 0x58e0, 0x1, 0x0);
        gbc.writeMem(0xbd90, { 0x1a });
        gbc.writeMem(0xcd96, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9dec, gbc.sp());
        EXPECT(0xbd91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xbd90));
        EXPECT(0x63, gbc.readMem(0xcd96));
        // 1A 038F
        gbc.setState(0x3fca, 0x5dc9, 0x7500, 0x3e4a, 0x4f92, 0x5dd2, 0x1, 0x0);
        gbc.writeMem(0x3fca, { 0x1a });
        gbc.writeMem(0x4f92, { 0xb0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5dc9, gbc.sp());
        EXPECT(0x3fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 0390
        gbc.setState(0xd5d, 0xd87, 0xd70, 0xed36, 0x71dd, 0x9c94, 0x0, 0x0);
        gbc.writeMem(0xd5d, { 0x1a });
        gbc.writeMem(0x71dd, { 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd87, gbc.sp());
        EXPECT(0xd5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 0391
        gbc.setState(0x171a, 0x749b, 0xc130, 0xe76c, 0xa02a, 0xb26f, 0x1, 0x0);
        gbc.writeMem(0x171a, { 0x1a });
        gbc.writeMem(0xa02a, { 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x749b, gbc.sp());
        EXPECT(0x171b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa02a));
        // 1A 0392
        gbc.setState(0x7f8f, 0x6589, 0x48c0, 0xb5ad, 0xa6b8, 0x5af0, 0x1, 0x0);
        gbc.writeMem(0x7f8f, { 0x1a });
        gbc.writeMem(0xa6b8, { 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6589, gbc.sp());
        EXPECT(0x7f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xa6b8));
        // 1A 0393
        gbc.setState(0xaa94, 0xb850, 0xa970, 0xab4a, 0xcd17, 0x5ba7, 0x1, 0x0);
        gbc.writeMem(0xaa94, { 0x1a });
        gbc.writeMem(0xcd17, { 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb850, gbc.sp());
        EXPECT(0xaa95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xaa94));
        EXPECT(0x96, gbc.readMem(0xcd17));
        // 1A 0394
        gbc.setState(0x6841, 0x36f8, 0xa3a0, 0x1ef6, 0xd2f1, 0x1369, 0x1, 0x1);
        gbc.writeMem(0x6841, { 0x1a });
        gbc.writeMem(0xd2f1, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x36f8, gbc.sp());
        EXPECT(0x6842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xd2f1));
        // 1A 0395
        gbc.setState(0x2de3, 0x9164, 0x32d0, 0x1464, 0xcf94, 0xcbb8, 0x1, 0x0);
        gbc.writeMem(0x2de3, { 0x1a });
        gbc.writeMem(0xcf94, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9164, gbc.sp());
        EXPECT(0x2de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xcf94));
        // 1A 0396
        gbc.setState(0x2295, 0xcd53, 0xa650, 0xcfa2, 0xa88e, 0x192b, 0x1, 0x0);
        gbc.writeMem(0x2295, { 0x1a });
        gbc.writeMem(0xa88e, { 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcd53, gbc.sp());
        EXPECT(0x2296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xa88e));
        // 1A 0397
        gbc.setState(0x5f53, 0x2919, 0x7130, 0xcc01, 0xbe54, 0x192f, 0x1, 0x1);
        gbc.writeMem(0x5f53, { 0x1a });
        gbc.writeMem(0xbe54, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2919, gbc.sp());
        EXPECT(0x5f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbe54));
        // 1A 0398
        gbc.setState(0x4c42, 0xf247, 0x24c0, 0x239b, 0xd407, 0x2008, 0x1, 0x0);
        gbc.writeMem(0x4c42, { 0x1a });
        gbc.writeMem(0xd407, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf247, gbc.sp());
        EXPECT(0x4c43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd407));
        // 1A 0399
        gbc.setState(0xab3d, 0x6663, 0x4ee0, 0x2cb3, 0xff13, 0x7a67, 0x1, 0x0);
        gbc.writeMem(0xab3d, { 0x1a });
        gbc.writeMem(0xff13, { 0xc0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6663, gbc.sp());
        EXPECT(0xab3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xab3d));
        EXPECT(0xc0, gbc.readMem(0xff13));
        // 1A 039A
        gbc.setState(0xb4ea, 0x1e33, 0x9130, 0x88f5, 0xda5a, 0xc16, 0x1, 0x0);
        gbc.writeMem(0xb4ea, { 0x1a });
        gbc.writeMem(0xda5a, { 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1e33, gbc.sp());
        EXPECT(0xb4eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb4ea));
        EXPECT(0x5a, gbc.readMem(0xda5a));
        // 1A 039B
        gbc.setState(0x8ddf, 0x5824, 0xaaf0, 0x698d, 0x12a3, 0x6b32, 0x0, 0x1);
        gbc.writeMem(0x12a3, { 0x42 });
        gbc.writeMem(0x8ddf, { 0x1a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5824, gbc.sp());
        EXPECT(0x8de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8ddf));
        // 1A 039D
        gbc.setState(0xc8f1, 0x25f1, 0x6b60, 0x7116, 0xe1b2, 0x9905, 0x0, 0x1);
        gbc.writeMem(0xc8f1, { 0x1a });
        gbc.writeMem(0xe1b2, { 0xab });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x25f1, gbc.sp());
        EXPECT(0xc8f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc8f1));
        EXPECT(0xab, gbc.readMem(0xe1b2));
        // 1A 039E
        gbc.setState(0xb33d, 0xca4a, 0x2360, 0x8b2, 0xdf18, 0xd11a, 0x0, 0x1);
        gbc.writeMem(0xb33d, { 0x1a });
        gbc.writeMem(0xdf18, { 0x11 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xca4a, gbc.sp());
        EXPECT(0xb33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xb33d));
        EXPECT(0x11, gbc.readMem(0xdf18));
        // 1A 039F
        gbc.setState(0xe5f7, 0xf73f, 0x5210, 0xc018, 0x2072, 0x17a6, 0x1, 0x0);
        gbc.writeMem(0x2072, { 0x3d });
        gbc.writeMem(0xe5f7, { 0x1a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf73f, gbc.sp());
        EXPECT(0xe5f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe5f7));
        // 1A 03A0
        gbc.setState(0x3a3a, 0x58d5, 0x1f30, 0x1314, 0xb72b, 0x7885, 0x1, 0x0);
        gbc.writeMem(0x3a3a, { 0x1a });
        gbc.writeMem(0xb72b, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x58d5, gbc.sp());
        EXPECT(0x3a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb72b));
        // 1A 03A1
        gbc.setState(0x74b1, 0x6b93, 0x6460, 0xf1d8, 0x80fe, 0x1231, 0x1, 0x0);
        gbc.writeMem(0x74b1, { 0x1a });
        gbc.writeMem(0x80fe, { 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6b93, gbc.sp());
        EXPECT(0x74b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x80fe));
        // 1A 03A2
        gbc.setState(0x8214, 0x2f12, 0x3e90, 0x168a, 0xeb31, 0x2156, 0x1, 0x1);
        gbc.writeMem(0x8214, { 0x1a });
        gbc.writeMem(0xeb31, { 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2f12, gbc.sp());
        EXPECT(0x8215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8214));
        EXPECT(0x47, gbc.readMem(0xeb31));
        // 1A 03A3
        gbc.setState(0x78ae, 0xcdb5, 0x1ec0, 0x6b79, 0xc1c9, 0x1682, 0x0, 0x1);
        gbc.writeMem(0x78ae, { 0x1a });
        gbc.writeMem(0xc1c9, { 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcdb5, gbc.sp());
        EXPECT(0x78af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xc1c9));
        // 1A 03A4
        gbc.setState(0xe640, 0xf806, 0x2e20, 0x18cd, 0x2f96, 0x9ca0, 0x0, 0x1);
        gbc.writeMem(0x2f96, { 0x21 });
        gbc.writeMem(0xe640, { 0x1a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf806, gbc.sp());
        EXPECT(0xe641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe640));
        // 1A 03A5
        gbc.setState(0xcf1b, 0xd080, 0x3680, 0xc01e, 0x6dba, 0xba48, 0x1, 0x1);
        gbc.writeMem(0x6dba, { 0xb2 });
        gbc.writeMem(0xcf1b, { 0x1a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd080, gbc.sp());
        EXPECT(0xcf1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xcf1b));
        // 1A 03A6
        gbc.setState(0x4c49, 0x4b30, 0x3dd0, 0xbd7e, 0x8d57, 0x56c1, 0x0, 0x0);
        gbc.writeMem(0x4c49, { 0x1a });
        gbc.writeMem(0x8d57, { 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4b30, gbc.sp());
        EXPECT(0x4c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8d57));
        // 1A 03A7
        gbc.setState(0xc16, 0x505, 0xf310, 0xce52, 0x5d7c, 0x8464, 0x0, 0x0);
        gbc.writeMem(0xc16, { 0x1a });
        gbc.writeMem(0x5d7c, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x505, gbc.sp());
        EXPECT(0xc17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 03A8
        gbc.setState(0x4c8b, 0x2cc6, 0xc490, 0xe854, 0x86d8, 0xe9ee, 0x0, 0x1);
        gbc.writeMem(0x4c8b, { 0x1a });
        gbc.writeMem(0x86d8, { 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2cc6, gbc.sp());
        EXPECT(0x4c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x86d8));
        // 1A 03A9
        gbc.setState(0x9825, 0x5040, 0x4c0, 0xe305, 0x2122, 0x69df, 0x0, 0x1);
        gbc.writeMem(0x2122, { 0x62 });
        gbc.writeMem(0x9825, { 0x1a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5040, gbc.sp());
        EXPECT(0x9826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9825));
        // 1A 03AA
        gbc.setState(0x1713, 0x25f4, 0x8770, 0xe211, 0x4769, 0xe342, 0x1, 0x1);
        gbc.writeMem(0x1713, { 0x1a });
        gbc.writeMem(0x4769, { 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x25f4, gbc.sp());
        EXPECT(0x1714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 03AB
        gbc.setState(0x9c17, 0xd044, 0x4610, 0x2640, 0x461f, 0x6ee3, 0x1, 0x0);
        gbc.writeMem(0x461f, { 0xd7 });
        gbc.writeMem(0x9c17, { 0x1a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd044, gbc.sp());
        EXPECT(0x9c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9c17));
        // 1A 03AC
        gbc.setState(0x41cc, 0x14a8, 0x2170, 0xb62f, 0x7c2b, 0x2c51, 0x1, 0x1);
        gbc.writeMem(0x41cc, { 0x1a });
        gbc.writeMem(0x7c2b, { 0x9a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x14a8, gbc.sp());
        EXPECT(0x41cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 03AD
        gbc.setState(0x4d7e, 0x3cb, 0x8f0, 0x837c, 0x2bcc, 0xbe7f, 0x0, 0x1);
        gbc.writeMem(0x2bcc, { 0x90 });
        gbc.writeMem(0x4d7e, { 0x1a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3cb, gbc.sp());
        EXPECT(0x4d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 03AE
        gbc.setState(0xbd08, 0xef83, 0xa0, 0x75f7, 0x8272, 0xda94, 0x0, 0x1);
        gbc.writeMem(0x8272, { 0x20 });
        gbc.writeMem(0xbd08, { 0x1a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xef83, gbc.sp());
        EXPECT(0xbd09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8272));
        EXPECT(0x1a, gbc.readMem(0xbd08));
        // 1A 03AF
        gbc.setState(0x487, 0x1208, 0xf0e0, 0x7c7e, 0x78a, 0x29a5, 0x1, 0x0);
        gbc.writeMem(0x487, { 0x1a });
        gbc.writeMem(0x78a, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1208, gbc.sp());
        EXPECT(0x488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 03B0
        gbc.setState(0x87c7, 0xba63, 0x6e50, 0xef0b, 0x2654, 0x9a27, 0x0, 0x1);
        gbc.writeMem(0x2654, { 0x8e });
        gbc.writeMem(0x87c7, { 0x1a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xba63, gbc.sp());
        EXPECT(0x87c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x87c7));
        // 1A 03B1
        gbc.setState(0xeb24, 0x947a, 0x2c00, 0x330c, 0xe4ac, 0x4437, 0x1, 0x0);
        gbc.writeMem(0xe4ac, { 0xd1 });
        gbc.writeMem(0xeb24, { 0x1a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x947a, gbc.sp());
        EXPECT(0xeb25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xe4ac));
        EXPECT(0x1a, gbc.readMem(0xeb24));
        // 1A 03B2
        gbc.setState(0x2286, 0xca70, 0x1d30, 0xf9a5, 0xd679, 0x42ad, 0x0, 0x1);
        gbc.writeMem(0x2286, { 0x1a });
        gbc.writeMem(0xd679, { 0xfa });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xca70, gbc.sp());
        EXPECT(0x2287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd679));
        // 1A 03B3
        gbc.setState(0xc9d0, 0x3aad, 0x71d0, 0x1102, 0xb5cd, 0x227e, 0x1, 0x1);
        gbc.writeMem(0xb5cd, { 0xbb });
        gbc.writeMem(0xc9d0, { 0x1a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3aad, gbc.sp());
        EXPECT(0xc9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb5cd));
        EXPECT(0x1a, gbc.readMem(0xc9d0));
        // 1A 03B4
        gbc.setState(0x7f52, 0x2397, 0xd820, 0x571e, 0x634e, 0x9602, 0x1, 0x0);
        gbc.writeMem(0x634e, { 0x88 });
        gbc.writeMem(0x7f52, { 0x1a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2397, gbc.sp());
        EXPECT(0x7f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 03B5
        gbc.setState(0x384c, 0x5cef, 0xd260, 0xd1ac, 0xd771, 0x81e, 0x1, 0x0);
        gbc.writeMem(0x384c, { 0x1a });
        gbc.writeMem(0xd771, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5cef, gbc.sp());
        EXPECT(0x384d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd771));
        // 1A 03B6
        gbc.setState(0x8905, 0x439f, 0x76d0, 0x81ab, 0xa9b, 0xe8e, 0x1, 0x1);
        gbc.writeMem(0xa9b, { 0xaf });
        gbc.writeMem(0x8905, { 0x1a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x439f, gbc.sp());
        EXPECT(0x8906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8905));
        // 1A 03B7
        gbc.setState(0x4377, 0x1c2a, 0xb3c0, 0x80d1, 0x9a2b, 0x5cb6, 0x1, 0x0);
        gbc.writeMem(0x4377, { 0x1a });
        gbc.writeMem(0x9a2b, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1c2a, gbc.sp());
        EXPECT(0x4378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9a2b));
        // 1A 03B8
        gbc.setState(0x2f13, 0x7838, 0xe6a0, 0x76c4, 0xd911, 0x9859, 0x1, 0x1);
        gbc.writeMem(0x2f13, { 0x1a });
        gbc.writeMem(0xd911, { 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7838, gbc.sp());
        EXPECT(0x2f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xd911));
        // 1A 03B9
        gbc.setState(0x8aab, 0xc2a9, 0xd400, 0xcae2, 0x4e70, 0x77f3, 0x0, 0x0);
        gbc.writeMem(0x4e70, { 0x34 });
        gbc.writeMem(0x8aab, { 0x1a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc2a9, gbc.sp());
        EXPECT(0x8aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8aab));
        // 1A 03BA
        gbc.setState(0x4954, 0xdf1f, 0x8200, 0x123a, 0x8897, 0x6ae7, 0x1, 0x1);
        gbc.writeMem(0x4954, { 0x1a });
        gbc.writeMem(0x8897, { 0x60 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdf1f, gbc.sp());
        EXPECT(0x4955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x8897));
        // 1A 03BC
        gbc.setState(0x9956, 0xe978, 0xca70, 0x94a0, 0x29f3, 0xb520, 0x0, 0x1);
        gbc.writeMem(0x29f3, { 0x69 });
        gbc.writeMem(0x9956, { 0x1a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe978, gbc.sp());
        EXPECT(0x9957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9956));
        // 1A 03BD
        gbc.setState(0x945c, 0xc098, 0xaa40, 0xfff, 0x81d6, 0x768a, 0x0, 0x1);
        gbc.writeMem(0x81d6, { 0x83 });
        gbc.writeMem(0x945c, { 0x1a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc098, gbc.sp());
        EXPECT(0x945d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x81d6));
        EXPECT(0x1a, gbc.readMem(0x945c));
        // 1A 03BF
        gbc.setState(0xa727, 0x6bf7, 0x9e60, 0x6e90, 0xbb5, 0x9d18, 0x1, 0x1);
        gbc.writeMem(0xbb5, { 0x4 });
        gbc.writeMem(0xa727, { 0x1a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6bf7, gbc.sp());
        EXPECT(0xa728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa727));
        // 1A 03C0
        gbc.setState(0x506e, 0x308c, 0x8a00, 0x91f3, 0x4b04, 0xa465, 0x1, 0x0);
        gbc.writeMem(0x4b04, { 0xdf });
        gbc.writeMem(0x506e, { 0x1a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x308c, gbc.sp());
        EXPECT(0x506f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 03C1
        gbc.setState(0x1377, 0xeb2c, 0x4bf0, 0xfd08, 0x3ef9, 0x90ad, 0x1, 0x1);
        gbc.writeMem(0x1377, { 0x1a });
        gbc.writeMem(0x3ef9, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xeb2c, gbc.sp());
        EXPECT(0x1378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 03C3
        gbc.setState(0x5b27, 0xbc07, 0xde60, 0xfb4c, 0x3157, 0x827b, 0x1, 0x0);
        gbc.writeMem(0x3157, { 0xd5 });
        gbc.writeMem(0x5b27, { 0x1a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbc07, gbc.sp());
        EXPECT(0x5b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 03C4
        gbc.setState(0xab15, 0x7eae, 0x9510, 0xdf4b, 0xc078, 0x48f2, 0x0, 0x0);
        gbc.writeMem(0xab15, { 0x1a });
        gbc.writeMem(0xc078, { 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7eae, gbc.sp());
        EXPECT(0xab16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xab15));
        EXPECT(0x3, gbc.readMem(0xc078));
        // 1A 03C5
        gbc.setState(0xd3dc, 0x9eed, 0xf0c0, 0x1c88, 0xfcca, 0x9e2d, 0x1, 0x1);
        gbc.writeMem(0xd3dc, { 0x1a });
        gbc.writeMem(0xfcca, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9eed, gbc.sp());
        EXPECT(0xd3dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd3dc));
        EXPECT(0xa9, gbc.readMem(0xfcca));
        // 1A 03C6
        gbc.setState(0x7e38, 0xe0a4, 0xfe70, 0x795d, 0x1241, 0x281b, 0x1, 0x1);
        gbc.writeMem(0x1241, { 0x2d });
        gbc.writeMem(0x7e38, { 0x1a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe0a4, gbc.sp());
        EXPECT(0x7e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 03C7
        gbc.setState(0xd000, 0xc0db, 0x96a0, 0xd8cb, 0x8331, 0xaf10, 0x0, 0x1);
        gbc.writeMem(0x8331, { 0xbc });
        gbc.writeMem(0xd000, { 0x1a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc0db, gbc.sp());
        EXPECT(0xd001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8331));
        EXPECT(0x1a, gbc.readMem(0xd000));
        // 1A 03C8
        gbc.setState(0xb862, 0xbcf, 0x6e30, 0x703c, 0x8063, 0xa6bb, 0x1, 0x1);
        gbc.writeMem(0x8063, { 0x5a });
        gbc.writeMem(0xb862, { 0x1a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbcf, gbc.sp());
        EXPECT(0xb863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x8063));
        EXPECT(0x1a, gbc.readMem(0xb862));
        // 1A 03C9
        gbc.setState(0xae9, 0x3398, 0xdaf0, 0xe6d9, 0xbc54, 0xd645, 0x0, 0x0);
        gbc.writeMem(0xae9, { 0x1a });
        gbc.writeMem(0xbc54, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3398, gbc.sp());
        EXPECT(0xaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xbc54));
        // 1A 03CA
        gbc.setState(0x2c62, 0x6a95, 0x2270, 0x4fd4, 0x32be, 0x82d9, 0x1, 0x1);
        gbc.writeMem(0x2c62, { 0x1a });
        gbc.writeMem(0x32be, { 0xd1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6a95, gbc.sp());
        EXPECT(0x2c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 03CB
        gbc.setState(0x5699, 0x7aa8, 0x4990, 0x4c24, 0x5550, 0x2e4a, 0x1, 0x0);
        gbc.writeMem(0x5550, { 0xa5 });
        gbc.writeMem(0x5699, { 0x1a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7aa8, gbc.sp());
        EXPECT(0x569a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 03CC
        gbc.setState(0x48da, 0xc0e5, 0x7450, 0xe5e1, 0xaf62, 0xc5ac, 0x1, 0x0);
        gbc.writeMem(0x48da, { 0x1a });
        gbc.writeMem(0xaf62, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc0e5, gbc.sp());
        EXPECT(0x48db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xaf62));
        // 1A 03CD
        gbc.setState(0x54b3, 0xb5bb, 0x83e0, 0xeb4b, 0xd4a0, 0xe555, 0x1, 0x1);
        gbc.writeMem(0x54b3, { 0x1a });
        gbc.writeMem(0xd4a0, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb5bb, gbc.sp());
        EXPECT(0x54b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd4a0));
        // 1A 03CE
        gbc.setState(0xaab1, 0x959e, 0xf280, 0x581d, 0x65c5, 0xa77e, 0x1, 0x1);
        gbc.writeMem(0x65c5, { 0x4e });
        gbc.writeMem(0xaab1, { 0x1a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x959e, gbc.sp());
        EXPECT(0xaab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xaab1));
        // 1A 03CF
        gbc.setState(0xc4d2, 0x3019, 0x6310, 0x7097, 0xd113, 0xbede, 0x1, 0x0);
        gbc.writeMem(0xc4d2, { 0x1a });
        gbc.writeMem(0xd113, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3019, gbc.sp());
        EXPECT(0xc4d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc4d2));
        EXPECT(0x4e, gbc.readMem(0xd113));
        // 1A 03D0
        gbc.setState(0xae4c, 0x5726, 0xdc80, 0xcda, 0xad80, 0x9bce, 0x0, 0x1);
        gbc.writeMem(0xad80, { 0x1a });
        gbc.writeMem(0xae4c, { 0x1a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5726, gbc.sp());
        EXPECT(0xae4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xad80));
        EXPECT(0x1a, gbc.readMem(0xae4c));
        // 1A 03D1
        gbc.setState(0x6b5d, 0x7688, 0x2650, 0x98af, 0xfb5, 0x1e47, 0x0, 0x1);
        gbc.writeMem(0xfb5, { 0xe2 });
        gbc.writeMem(0x6b5d, { 0x1a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7688, gbc.sp());
        EXPECT(0x6b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 03D2
        gbc.setState(0x24cd, 0xefb4, 0x95d0, 0xcd2f, 0x4e32, 0xc64, 0x0, 0x0);
        gbc.writeMem(0x24cd, { 0x1a });
        gbc.writeMem(0x4e32, { 0xe4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xefb4, gbc.sp());
        EXPECT(0x24ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 03D3
        gbc.setState(0xce95, 0x2521, 0x9c10, 0x5149, 0xe1e9, 0xa5c6, 0x1, 0x0);
        gbc.writeMem(0xce95, { 0x1a });
        gbc.writeMem(0xe1e9, { 0xa5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2521, gbc.sp());
        EXPECT(0xce96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xce95));
        EXPECT(0xa5, gbc.readMem(0xe1e9));
        // 1A 03D4
        gbc.setState(0x3909, 0xa6ea, 0x1c60, 0x37a3, 0xe92a, 0xf32e, 0x1, 0x1);
        gbc.writeMem(0x3909, { 0x1a });
        gbc.writeMem(0xe92a, { 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa6ea, gbc.sp());
        EXPECT(0x390a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe92a));
        // 1A 03D5
        gbc.setState(0x96c2, 0xbbc7, 0xab10, 0x2c17, 0x7d9f, 0x8bc9, 0x1, 0x0);
        gbc.writeMem(0x7d9f, { 0x83 });
        gbc.writeMem(0x96c2, { 0x1a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbbc7, gbc.sp());
        EXPECT(0x96c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x96c2));
        // 1A 03D6
        gbc.setState(0x857f, 0x482c, 0xf2c0, 0xb47d, 0x54ac, 0x71ac, 0x1, 0x1);
        gbc.writeMem(0x54ac, { 0xbc });
        gbc.writeMem(0x857f, { 0x1a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x482c, gbc.sp());
        EXPECT(0x8580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x857f));
        // 1A 03D7
        gbc.setState(0x47d4, 0xe14, 0x2000, 0x12b2, 0x68e2, 0x1d81, 0x0, 0x1);
        gbc.writeMem(0x47d4, { 0x1a });
        gbc.writeMem(0x68e2, { 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe14, gbc.sp());
        EXPECT(0x47d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 03D9
        gbc.setState(0x9925, 0x38d5, 0xa600, 0x5db8, 0xd9aa, 0x5915, 0x1, 0x1);
        gbc.writeMem(0x9925, { 0x1a });
        gbc.writeMem(0xd9aa, { 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x38d5, gbc.sp());
        EXPECT(0x9926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9925));
        EXPECT(0x71, gbc.readMem(0xd9aa));
        // 1A 03DA
        gbc.setState(0xc571, 0x93ea, 0x2a10, 0xb554, 0xb80e, 0xd791, 0x0, 0x1);
        gbc.writeMem(0xb80e, { 0xa7 });
        gbc.writeMem(0xc571, { 0x1a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x93ea, gbc.sp());
        EXPECT(0xc572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb80e));
        EXPECT(0x1a, gbc.readMem(0xc571));
        // 1A 03DB
        gbc.setState(0x33c3, 0xf341, 0x6fb0, 0x9b43, 0x5ae8, 0x4e9b, 0x1, 0x1);
        gbc.writeMem(0x33c3, { 0x1a });
        gbc.writeMem(0x5ae8, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf341, gbc.sp());
        EXPECT(0x33c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 03DC
        gbc.setState(0x9327, 0x20c9, 0x4c10, 0x22c5, 0x61da, 0x7489, 0x1, 0x0);
        gbc.writeMem(0x61da, { 0x4e });
        gbc.writeMem(0x9327, { 0x1a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x20c9, gbc.sp());
        EXPECT(0x9328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9327));
        // 1A 03DD
        gbc.setState(0x135a, 0xd8ce, 0x2ac0, 0x1c2f, 0xd965, 0xac1c, 0x0, 0x0);
        gbc.writeMem(0x135a, { 0x1a });
        gbc.writeMem(0xd965, { 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd8ce, gbc.sp());
        EXPECT(0x135b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xd965));
        // 1A 03DE
        gbc.setState(0x4f88, 0x8337, 0xbd70, 0x67c0, 0x1eed, 0xd553, 0x1, 0x1);
        gbc.writeMem(0x1eed, { 0x20 });
        gbc.writeMem(0x4f88, { 0x1a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8337, gbc.sp());
        EXPECT(0x4f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 1A 03DF
        gbc.setState(0x982e, 0x8e1a, 0x7b40, 0xe25f, 0x5dc2, 0xc11c, 0x0, 0x1);
        gbc.writeMem(0x5dc2, { 0x5a });
        gbc.writeMem(0x982e, { 0x1a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8e1a, gbc.sp());
        EXPECT(0x982f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x982e));
        // 1A 03E0
        gbc.setState(0x104c, 0x4365, 0x340, 0x51dd, 0x3ef0, 0xf555, 0x0, 0x1);
        gbc.writeMem(0x104c, { 0x1a });
        gbc.writeMem(0x3ef0, { 0xaa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4365, gbc.sp());
        EXPECT(0x104d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 03E1
        gbc.setState(0x587c, 0x791a, 0xbc20, 0x33e2, 0x5502, 0x5e1d, 0x0, 0x0);
        gbc.writeMem(0x5502, { 0x6b });
        gbc.writeMem(0x587c, { 0x1a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x791a, gbc.sp());
        EXPECT(0x587d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 03E2
        gbc.setState(0xe137, 0x607e, 0x2200, 0xc6eb, 0x6b18, 0xc26d, 0x1, 0x1);
        gbc.writeMem(0x6b18, { 0x82 });
        gbc.writeMem(0xe137, { 0x1a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x607e, gbc.sp());
        EXPECT(0xe138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe137));
        // 1A 03E3
        gbc.setState(0x3c0b, 0x577f, 0x2d40, 0xae9, 0xbca6, 0xfa95, 0x0, 0x1);
        gbc.writeMem(0x3c0b, { 0x1a });
        gbc.writeMem(0xbca6, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x577f, gbc.sp());
        EXPECT(0x3c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xbca6));
        // 1A 03E4
        gbc.setState(0x72bb, 0x6065, 0x6f40, 0x70d1, 0x75fd, 0xb853, 0x1, 0x0);
        gbc.writeMem(0x72bb, { 0x1a });
        gbc.writeMem(0x75fd, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6065, gbc.sp());
        EXPECT(0x72bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 03E5
        gbc.setState(0x7a05, 0xdd94, 0x9160, 0x40d4, 0x53ba, 0xc3d4, 0x0, 0x1);
        gbc.writeMem(0x53ba, { 0x3d });
        gbc.writeMem(0x7a05, { 0x1a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdd94, gbc.sp());
        EXPECT(0x7a06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 1A 03E6
        gbc.setState(0x7465, 0x8e94, 0x63c0, 0xd421, 0xd55f, 0xc7d, 0x0, 0x0);
        gbc.writeMem(0x7465, { 0x1a });
        gbc.writeMem(0xd55f, { 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8e94, gbc.sp());
        EXPECT(0x7466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xd55f));
        // 1A 03E7
        gbc.setState(0xcc5f, 0xb605, 0x2f0, 0x3fe, 0x8642, 0x81d2, 0x0, 0x1);
        gbc.writeMem(0x8642, { 0xa2 });
        gbc.writeMem(0xcc5f, { 0x1a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb605, gbc.sp());
        EXPECT(0xcc60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8642));
        EXPECT(0x1a, gbc.readMem(0xcc5f));
    }
