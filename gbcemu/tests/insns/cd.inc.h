    TEST(gbcemu, opcode_cd) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CD 0001
        gbc.setState(0x56b0, 0x915c, 0xeae0, 0x53d3, 0x1399, 0xf59, 0x1, 0x1);
        gbc.writeMem(0x56b0, { 0xcd, 0x2, 0xa4 });
        gbc.writeMem(0x915a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x915a);
        EXPECT(gbc.pc(), 0xa402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x915a), 0xb3);
        EXPECT(gbc.readMem(0x915b), 0x56);
        // CD 0002
        gbc.setState(0xb0f8, 0x818e, 0x1a10, 0x396c, 0x4b56, 0xc284, 0x1, 0x0);
        gbc.writeMem(0x818c, { 0x0, 0x0 });
        gbc.writeMem(0xb0f8, { 0xcd, 0x21, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x818c);
        EXPECT(gbc.pc(), 0xdd21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x818c), 0xfb);
        EXPECT(gbc.readMem(0x818d), 0xb0);
        EXPECT(gbc.readMem(0xb0f8), 0xcd);
        EXPECT(gbc.readMem(0xb0f9), 0x21);
        EXPECT(gbc.readMem(0xb0fa), 0xdd);
        // CD 0003
        gbc.setState(0xd761, 0xfc09, 0x48e0, 0x6444, 0xac8e, 0xe9c4, 0x0, 0x0);
        gbc.writeMem(0xd761, { 0xcd, 0x1a, 0x30 });
        gbc.writeMem(0xfc07, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xfc07);
        EXPECT(gbc.pc(), 0x301a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd761), 0xcd);
        EXPECT(gbc.readMem(0xd762), 0x1a);
        EXPECT(gbc.readMem(0xd763), 0x30);
        EXPECT(gbc.readMem(0xfc07), 0x64);
        EXPECT(gbc.readMem(0xfc08), 0xd7);
        // CD 0006
        gbc.setState(0x1a0e, 0x857c, 0xe900, 0x18f3, 0x133a, 0x523c, 0x1, 0x1);
        gbc.writeMem(0x1a0e, { 0xcd, 0x39, 0x29 });
        gbc.writeMem(0x857a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x857a);
        EXPECT(gbc.pc(), 0x2939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x857a), 0x11);
        EXPECT(gbc.readMem(0x857b), 0x1a);
        // CD 0008
        gbc.setState(0xb079, 0xc4d9, 0xe670, 0x232f, 0xcd81, 0x9f75, 0x0, 0x1);
        gbc.writeMem(0xb079, { 0xcd, 0x28, 0x84 });
        gbc.writeMem(0xc4d7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc4d7);
        EXPECT(gbc.pc(), 0x8428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb079), 0xcd);
        EXPECT(gbc.readMem(0xb07a), 0x28);
        EXPECT(gbc.readMem(0xb07b), 0x84);
        EXPECT(gbc.readMem(0xc4d7), 0x7c);
        EXPECT(gbc.readMem(0xc4d8), 0xb0);
        // CD 0009
        gbc.setState(0x2674, 0xf403, 0xa590, 0xf4fa, 0x51d9, 0xfa09, 0x1, 0x1);
        gbc.writeMem(0x2674, { 0xcd, 0xfe, 0x47 });
        gbc.writeMem(0xf401, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf401);
        EXPECT(gbc.pc(), 0x47fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf401), 0x77);
        EXPECT(gbc.readMem(0xf402), 0x26);
        // CD 000A
        gbc.setState(0xa5c5, 0xec00, 0x6400, 0x3d2f, 0x2a4d, 0x3f93, 0x1, 0x1);
        gbc.writeMem(0xa5c5, { 0xcd, 0xd8, 0xda });
        gbc.writeMem(0xebfe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xebfe);
        EXPECT(gbc.pc(), 0xdad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c5), 0xcd);
        EXPECT(gbc.readMem(0xa5c6), 0xd8);
        EXPECT(gbc.readMem(0xa5c7), 0xda);
        EXPECT(gbc.readMem(0xebfe), 0xc8);
        EXPECT(gbc.readMem(0xebff), 0xa5);
        // CD 000B
        gbc.setState(0x3d10, 0xf292, 0x4b70, 0x33df, 0xfa5e, 0x16e3, 0x0, 0x1);
        gbc.writeMem(0x3d10, { 0xcd, 0xd, 0xc1 });
        gbc.writeMem(0xf290, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf290);
        EXPECT(gbc.pc(), 0xc10d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf290), 0x13);
        EXPECT(gbc.readMem(0xf291), 0x3d);
        // CD 000C
        gbc.setState(0x7f35, 0x8e38, 0xc710, 0x6a21, 0x81a1, 0x19ec, 0x0, 0x0);
        gbc.writeMem(0x7f35, { 0xcd, 0x1f, 0x68 });
        gbc.writeMem(0x8e36, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8e36);
        EXPECT(gbc.pc(), 0x681f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e36), 0x38);
        EXPECT(gbc.readMem(0x8e37), 0x7f);
        // CD 000D
        gbc.setState(0x8280, 0xdc4b, 0x6b40, 0x3744, 0xb59e, 0x31a5, 0x1, 0x0);
        gbc.writeMem(0x8280, { 0xcd, 0xb8, 0xa2 });
        gbc.writeMem(0xdc49, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xdc49);
        EXPECT(gbc.pc(), 0xa2b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8280), 0xcd);
        EXPECT(gbc.readMem(0x8281), 0xb8);
        EXPECT(gbc.readMem(0x8282), 0xa2);
        EXPECT(gbc.readMem(0xdc49), 0x83);
        EXPECT(gbc.readMem(0xdc4a), 0x82);
        // CD 0012
        gbc.setState(0x48e6, 0x88a0, 0x2ae0, 0x66d9, 0x1cae, 0x2f0a, 0x0, 0x1);
        gbc.writeMem(0x48e6, { 0xcd, 0xac, 0x76 });
        gbc.writeMem(0x889e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x889e);
        EXPECT(gbc.pc(), 0x76ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x889e), 0xe9);
        EXPECT(gbc.readMem(0x889f), 0x48);
        // CD 0013
        gbc.setState(0x8dc5, 0xe674, 0x2ed0, 0xa083, 0x53c8, 0x847e, 0x1, 0x1);
        gbc.writeMem(0x8dc5, { 0xcd, 0xa1, 0x75 });
        gbc.writeMem(0xe672, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe672);
        EXPECT(gbc.pc(), 0x75a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc5), 0xcd);
        EXPECT(gbc.readMem(0x8dc6), 0xa1);
        EXPECT(gbc.readMem(0x8dc7), 0x75);
        EXPECT(gbc.readMem(0xe672), 0xc8);
        EXPECT(gbc.readMem(0xe673), 0x8d);
        // CD 0015
        gbc.setState(0x5c72, 0xd280, 0x9dc0, 0x1930, 0x5cdd, 0xdac6, 0x0, 0x0);
        gbc.writeMem(0x5c72, { 0xcd, 0xd5, 0x92 });
        gbc.writeMem(0xd27e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd27e);
        EXPECT(gbc.pc(), 0x92d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27e), 0x75);
        EXPECT(gbc.readMem(0xd27f), 0x5c);
        // CD 0019
        gbc.setState(0x8ab1, 0xbcc6, 0xfe10, 0xf38, 0x601c, 0x60d7, 0x0, 0x1);
        gbc.writeMem(0x8ab1, { 0xcd, 0x9c, 0x28 });
        gbc.writeMem(0xbcc4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xbcc4);
        EXPECT(gbc.pc(), 0x289c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ab1), 0xcd);
        EXPECT(gbc.readMem(0x8ab2), 0x9c);
        EXPECT(gbc.readMem(0x8ab3), 0x28);
        EXPECT(gbc.readMem(0xbcc4), 0xb4);
        EXPECT(gbc.readMem(0xbcc5), 0x8a);
        // CD 001A
        gbc.setState(0xc120, 0x9d79, 0xfe40, 0x7eea, 0xf14a, 0x8f80, 0x1, 0x1);
        gbc.writeMem(0x9d77, { 0x0, 0x0 });
        gbc.writeMem(0xc120, { 0xcd, 0xb5, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9d77);
        EXPECT(gbc.pc(), 0xccb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d77), 0x23);
        EXPECT(gbc.readMem(0x9d78), 0xc1);
        EXPECT(gbc.readMem(0xc120), 0xcd);
        EXPECT(gbc.readMem(0xc121), 0xb5);
        EXPECT(gbc.readMem(0xc122), 0xcc);
        // CD 001C
        gbc.setState(0x425f, 0xbb22, 0x240, 0x939c, 0x7bc8, 0xe98, 0x1, 0x1);
        gbc.writeMem(0x425f, { 0xcd, 0xe, 0xe3 });
        gbc.writeMem(0xbb20, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xbb20);
        EXPECT(gbc.pc(), 0xe30e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb20), 0x62);
        EXPECT(gbc.readMem(0xbb21), 0x42);
        // CD 001D
        gbc.setState(0xc425, 0xc085, 0x4160, 0xb96f, 0xc5bc, 0x498c, 0x0, 0x0);
        gbc.writeMem(0xc083, { 0x0, 0x0 });
        gbc.writeMem(0xc425, { 0xcd, 0x3, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc083);
        EXPECT(gbc.pc(), 0xf103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc083), 0x28);
        EXPECT(gbc.readMem(0xc084), 0xc4);
        EXPECT(gbc.readMem(0xc425), 0xcd);
        EXPECT(gbc.readMem(0xc426), 0x3);
        EXPECT(gbc.readMem(0xc427), 0xf1);
        // CD 001E
        gbc.setState(0x4bfd, 0xbfb4, 0x1e60, 0xd94b, 0x666a, 0xbb84, 0x0, 0x0);
        gbc.writeMem(0x4bfd, { 0xcd, 0x28, 0xf0 });
        gbc.writeMem(0xbfb2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xbfb2);
        EXPECT(gbc.pc(), 0xf028);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb2), 0x0);
        EXPECT(gbc.readMem(0xbfb3), 0x4c);
        // CD 001F
        gbc.setState(0x61c, 0xe4c4, 0x5490, 0xb395, 0x3c21, 0xe4c, 0x1, 0x0);
        gbc.writeMem(0x61c, { 0xcd, 0xe1, 0xe9 });
        gbc.writeMem(0xe4c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe4c2);
        EXPECT(gbc.pc(), 0xe9e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c2), 0x1f);
        EXPECT(gbc.readMem(0xe4c3), 0x6);
        // CD 0022
        gbc.setState(0xc013, 0x8d19, 0x1100, 0xef09, 0xae6f, 0x4e06, 0x0, 0x1);
        gbc.writeMem(0x8d17, { 0x0, 0x0 });
        gbc.writeMem(0xc013, { 0xcd, 0xa0, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8d17);
        EXPECT(gbc.pc(), 0xc3a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d17), 0x16);
        EXPECT(gbc.readMem(0x8d18), 0xc0);
        EXPECT(gbc.readMem(0xc013), 0xcd);
        EXPECT(gbc.readMem(0xc014), 0xa0);
        EXPECT(gbc.readMem(0xc015), 0xc3);
        // CD 0024
        gbc.setState(0x541, 0xcb3c, 0x6210, 0x864d, 0x3f7d, 0xea5a, 0x0, 0x0);
        gbc.writeMem(0x541, { 0xcd, 0x40, 0x45 });
        gbc.writeMem(0xcb3a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xcb3a);
        EXPECT(gbc.pc(), 0x4540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb3a), 0x44);
        EXPECT(gbc.readMem(0xcb3b), 0x5);
        // CD 0026
        gbc.setState(0x3a6f, 0xb587, 0xaca0, 0xd73d, 0xc80e, 0x6025, 0x1, 0x0);
        gbc.writeMem(0x3a6f, { 0xcd, 0x8f, 0xb });
        gbc.writeMem(0xb585, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb585);
        EXPECT(gbc.pc(), 0xb8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb585), 0x72);
        EXPECT(gbc.readMem(0xb586), 0x3a);
        // CD 0028
        gbc.setState(0xddce, 0xc398, 0xe160, 0x3b60, 0x5ed6, 0x11d1, 0x0, 0x0);
        gbc.writeMem(0xc396, { 0x0, 0x0 });
        gbc.writeMem(0xddce, { 0xcd, 0x6c, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc396);
        EXPECT(gbc.pc(), 0xee6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc396), 0xd1);
        EXPECT(gbc.readMem(0xc397), 0xdd);
        EXPECT(gbc.readMem(0xddce), 0xcd);
        EXPECT(gbc.readMem(0xddcf), 0x6c);
        EXPECT(gbc.readMem(0xddd0), 0xee);
        // CD 002A
        gbc.setState(0xb2b0, 0x83a3, 0x3400, 0x7cf7, 0xfa1a, 0x17ac, 0x0, 0x1);
        gbc.writeMem(0x83a1, { 0x0, 0x0 });
        gbc.writeMem(0xb2b0, { 0xcd, 0xc7, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x83a1);
        EXPECT(gbc.pc(), 0x43c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a1), 0xb3);
        EXPECT(gbc.readMem(0x83a2), 0xb2);
        EXPECT(gbc.readMem(0xb2b0), 0xcd);
        EXPECT(gbc.readMem(0xb2b1), 0xc7);
        EXPECT(gbc.readMem(0xb2b2), 0x43);
        // CD 002B
        gbc.setState(0x802a, 0xc2b9, 0x8f00, 0x70fa, 0xc0b9, 0xbaa5, 0x1, 0x0);
        gbc.writeMem(0x802a, { 0xcd, 0xdd, 0xb3 });
        gbc.writeMem(0xc2b7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc2b7);
        EXPECT(gbc.pc(), 0xb3dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x802a), 0xcd);
        EXPECT(gbc.readMem(0x802b), 0xdd);
        EXPECT(gbc.readMem(0x802c), 0xb3);
        EXPECT(gbc.readMem(0xc2b7), 0x2d);
        EXPECT(gbc.readMem(0xc2b8), 0x80);
        // CD 002D
        gbc.setState(0x2fe5, 0xf024, 0xb150, 0xb080, 0x3815, 0xa33, 0x0, 0x1);
        gbc.writeMem(0x2fe5, { 0xcd, 0xf1, 0x85 });
        gbc.writeMem(0xf022, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf022);
        EXPECT(gbc.pc(), 0x85f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf022), 0xe8);
        EXPECT(gbc.readMem(0xf023), 0x2f);
        // CD 002E
        gbc.setState(0x7087, 0xc0e3, 0x6e20, 0x7f8, 0x65e2, 0x8c83, 0x1, 0x1);
        gbc.writeMem(0x7087, { 0xcd, 0x34, 0x5a });
        gbc.writeMem(0xc0e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc0e1);
        EXPECT(gbc.pc(), 0x5a34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e1), 0x8a);
        EXPECT(gbc.readMem(0xc0e2), 0x70);
        // CD 0030
        gbc.setState(0xde34, 0xcf21, 0xb170, 0x1e59, 0xcb15, 0x850e, 0x0, 0x0);
        gbc.writeMem(0xcf1f, { 0x0, 0x0 });
        gbc.writeMem(0xde34, { 0xcd, 0x83, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xcf1f);
        EXPECT(gbc.pc(), 0x2283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf1f), 0x37);
        EXPECT(gbc.readMem(0xcf20), 0xde);
        EXPECT(gbc.readMem(0xde34), 0xcd);
        EXPECT(gbc.readMem(0xde35), 0x83);
        EXPECT(gbc.readMem(0xde36), 0x22);
        // CD 0032
        gbc.setState(0x32af, 0xbce6, 0x96a0, 0x74b, 0xb376, 0x4496, 0x0, 0x1);
        gbc.writeMem(0x32af, { 0xcd, 0xf1, 0x3d });
        gbc.writeMem(0xbce4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbce4);
        EXPECT(gbc.pc(), 0x3df1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce4), 0xb2);
        EXPECT(gbc.readMem(0xbce5), 0x32);
        // CD 0033
        gbc.setState(0x664a, 0x9961, 0xe4a0, 0xb819, 0xe85, 0x44b6, 0x1, 0x1);
        gbc.writeMem(0x664a, { 0xcd, 0xc9, 0x8c });
        gbc.writeMem(0x995f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x995f);
        EXPECT(gbc.pc(), 0x8cc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x995f), 0x4d);
        EXPECT(gbc.readMem(0x9960), 0x66);
        // CD 0036
        gbc.setState(0x82e4, 0x9572, 0x9140, 0xb62b, 0x34ce, 0x5b8, 0x1, 0x1);
        gbc.writeMem(0x82e4, { 0xcd, 0x0, 0xdd });
        gbc.writeMem(0x9570, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9570);
        EXPECT(gbc.pc(), 0xdd00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e4), 0xcd);
        EXPECT(gbc.readMem(0x82e5), 0x0);
        EXPECT(gbc.readMem(0x82e6), 0xdd);
        EXPECT(gbc.readMem(0x9570), 0xe7);
        EXPECT(gbc.readMem(0x9571), 0x82);
        // CD 0038
        gbc.setState(0x1bd7, 0xff2b, 0xb8e0, 0xee5f, 0x1982, 0xc9ce, 0x1, 0x0);
        gbc.writeMem(0x1bd7, { 0xcd, 0x82, 0x7a });
        gbc.writeMem(0xff29, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xff29);
        EXPECT(gbc.pc(), 0x7a82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff29), 0xda);
        EXPECT(gbc.readMem(0xff2a), 0x1b);
        // CD 0039
        gbc.setState(0x7d2, 0x821c, 0x1210, 0xb4c3, 0xe022, 0x72da, 0x0, 0x0);
        gbc.writeMem(0x7d2, { 0xcd, 0x2f, 0x9e });
        gbc.writeMem(0x821a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x821a);
        EXPECT(gbc.pc(), 0x9e2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x821a), 0xd5);
        EXPECT(gbc.readMem(0x821b), 0x7);
        // CD 003A
        gbc.setState(0x47e9, 0x81af, 0xe00, 0x3d9, 0x7499, 0x1ff9, 0x1, 0x1);
        gbc.writeMem(0x47e9, { 0xcd, 0xf0, 0x71 });
        gbc.writeMem(0x81ad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x81ad);
        EXPECT(gbc.pc(), 0x71f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ad), 0xec);
        EXPECT(gbc.readMem(0x81ae), 0x47);
        // CD 003B
        gbc.setState(0x2c5e, 0xd368, 0xb180, 0xaf2b, 0x228c, 0xc7e0, 0x1, 0x1);
        gbc.writeMem(0x2c5e, { 0xcd, 0x15, 0x3e });
        gbc.writeMem(0xd366, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd366);
        EXPECT(gbc.pc(), 0x3e15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd366), 0x61);
        EXPECT(gbc.readMem(0xd367), 0x2c);
        // CD 003C
        gbc.setState(0x5f23, 0xa5a9, 0x8ea0, 0xe8eb, 0x9598, 0xa2c4, 0x0, 0x1);
        gbc.writeMem(0x5f23, { 0xcd, 0x19, 0x94 });
        gbc.writeMem(0xa5a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa5a7);
        EXPECT(gbc.pc(), 0x9419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5a7), 0x26);
        EXPECT(gbc.readMem(0xa5a8), 0x5f);
        // CD 0040
        gbc.setState(0x4d07, 0xaf1b, 0x4260, 0x510d, 0xda86, 0xd40b, 0x1, 0x0);
        gbc.writeMem(0x4d07, { 0xcd, 0x49, 0xe8 });
        gbc.writeMem(0xaf19, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xaf19);
        EXPECT(gbc.pc(), 0xe849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf19), 0xa);
        EXPECT(gbc.readMem(0xaf1a), 0x4d);
        // CD 0042
        gbc.setState(0x2a21, 0x9b22, 0x530, 0x8c70, 0x2e6b, 0x7bec, 0x0, 0x0);
        gbc.writeMem(0x2a21, { 0xcd, 0x5c, 0x11 });
        gbc.writeMem(0x9b20, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9b20);
        EXPECT(gbc.pc(), 0x115c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b20), 0x24);
        EXPECT(gbc.readMem(0x9b21), 0x2a);
        // CD 0044
        gbc.setState(0x93b4, 0xf7f9, 0xf7c0, 0x1740, 0xfa49, 0x1b31, 0x1, 0x1);
        gbc.writeMem(0x93b4, { 0xcd, 0x2f, 0xcd });
        gbc.writeMem(0xf7f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf7f7);
        EXPECT(gbc.pc(), 0xcd2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93b4), 0xcd);
        EXPECT(gbc.readMem(0x93b5), 0x2f);
        EXPECT(gbc.readMem(0x93b6), 0xcd);
        EXPECT(gbc.readMem(0xf7f7), 0xb7);
        EXPECT(gbc.readMem(0xf7f8), 0x93);
        // CD 0046
        gbc.setState(0xb13b, 0x8c40, 0x6ef0, 0xd3c5, 0xef27, 0xdd4a, 0x0, 0x1);
        gbc.writeMem(0x8c3e, { 0x0, 0x0 });
        gbc.writeMem(0xb13b, { 0xcd, 0x6a, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8c3e);
        EXPECT(gbc.pc(), 0x416a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c3e), 0x3e);
        EXPECT(gbc.readMem(0x8c3f), 0xb1);
        EXPECT(gbc.readMem(0xb13b), 0xcd);
        EXPECT(gbc.readMem(0xb13c), 0x6a);
        EXPECT(gbc.readMem(0xb13d), 0x41);
        // CD 0049
        gbc.setState(0x6c51, 0x81b2, 0xe0d0, 0xc08, 0x15bb, 0xfa56, 0x0, 0x1);
        gbc.writeMem(0x6c51, { 0xcd, 0x86, 0xb6 });
        gbc.writeMem(0x81b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x81b0);
        EXPECT(gbc.pc(), 0xb686);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81b0), 0x54);
        EXPECT(gbc.readMem(0x81b1), 0x6c);
        // CD 004C
        gbc.setState(0x26a2, 0xd6e3, 0x47b0, 0x7bff, 0xeaad, 0x15d4, 0x1, 0x0);
        gbc.writeMem(0x26a2, { 0xcd, 0xad, 0xd });
        gbc.writeMem(0xd6e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd6e1);
        EXPECT(gbc.pc(), 0xdad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6e1), 0xa5);
        EXPECT(gbc.readMem(0xd6e2), 0x26);
        // CD 004D
        gbc.setState(0x5dee, 0x82b9, 0x2670, 0xd419, 0x4f3c, 0x157a, 0x1, 0x0);
        gbc.writeMem(0x5dee, { 0xcd, 0x8, 0xd5 });
        gbc.writeMem(0x82b7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x82b7);
        EXPECT(gbc.pc(), 0xd508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82b7), 0xf1);
        EXPECT(gbc.readMem(0x82b8), 0x5d);
        // CD 004E
        gbc.setState(0xa5da, 0xbd13, 0xc450, 0xefe7, 0xc3cd, 0x3b72, 0x0, 0x1);
        gbc.writeMem(0xa5da, { 0xcd, 0x46, 0xe5 });
        gbc.writeMem(0xbd11, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xbd11);
        EXPECT(gbc.pc(), 0xe546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5da), 0xcd);
        EXPECT(gbc.readMem(0xa5db), 0x46);
        EXPECT(gbc.readMem(0xa5dc), 0xe5);
        EXPECT(gbc.readMem(0xbd11), 0xdd);
        EXPECT(gbc.readMem(0xbd12), 0xa5);
        // CD 004F
        gbc.setState(0x4ebb, 0xe60b, 0xc540, 0xf02f, 0x7e94, 0x93fd, 0x1, 0x1);
        gbc.writeMem(0x4ebb, { 0xcd, 0x7c, 0x74 });
        gbc.writeMem(0xe609, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe609);
        EXPECT(gbc.pc(), 0x747c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe609), 0xbe);
        EXPECT(gbc.readMem(0xe60a), 0x4e);
        // CD 0050
        gbc.setState(0xd0c6, 0xc45d, 0xd8c0, 0x4ebc, 0x5aa8, 0x8901, 0x1, 0x0);
        gbc.writeMem(0xc45b, { 0x0, 0x0 });
        gbc.writeMem(0xd0c6, { 0xcd, 0x58, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc45b);
        EXPECT(gbc.pc(), 0xfa58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc45b), 0xc9);
        EXPECT(gbc.readMem(0xc45c), 0xd0);
        EXPECT(gbc.readMem(0xd0c6), 0xcd);
        EXPECT(gbc.readMem(0xd0c7), 0x58);
        EXPECT(gbc.readMem(0xd0c8), 0xfa);
        // CD 0052
        gbc.setState(0x994d, 0xc205, 0x41d0, 0xa37e, 0x4bd3, 0xb84, 0x1, 0x0);
        gbc.writeMem(0x994d, { 0xcd, 0xb2, 0xb3 });
        gbc.writeMem(0xc203, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc203);
        EXPECT(gbc.pc(), 0xb3b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x994d), 0xcd);
        EXPECT(gbc.readMem(0x994e), 0xb2);
        EXPECT(gbc.readMem(0x994f), 0xb3);
        EXPECT(gbc.readMem(0xc203), 0x50);
        EXPECT(gbc.readMem(0xc204), 0x99);
        // CD 0053
        gbc.setState(0x1035, 0xb5a3, 0x9cc0, 0x2b39, 0xeabb, 0xe39f, 0x1, 0x0);
        gbc.writeMem(0x1035, { 0xcd, 0x28, 0xca });
        gbc.writeMem(0xb5a1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb5a1);
        EXPECT(gbc.pc(), 0xca28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a1), 0x38);
        EXPECT(gbc.readMem(0xb5a2), 0x10);
        // CD 0054
        gbc.setState(0x8d72, 0xa8a0, 0x5fe0, 0xbfbf, 0x44f6, 0xb436, 0x0, 0x1);
        gbc.writeMem(0x8d72, { 0xcd, 0x4, 0x67 });
        gbc.writeMem(0xa89e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa89e);
        EXPECT(gbc.pc(), 0x6704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d72), 0xcd);
        EXPECT(gbc.readMem(0x8d73), 0x4);
        EXPECT(gbc.readMem(0x8d74), 0x67);
        EXPECT(gbc.readMem(0xa89e), 0x75);
        EXPECT(gbc.readMem(0xa89f), 0x8d);
        // CD 0055
        gbc.setState(0x9a55, 0xd5f1, 0x39e0, 0xc4fe, 0x861a, 0x3920, 0x0, 0x0);
        gbc.writeMem(0x9a55, { 0xcd, 0xb5, 0x5 });
        gbc.writeMem(0xd5ef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd5ef);
        EXPECT(gbc.pc(), 0x5b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a55), 0xcd);
        EXPECT(gbc.readMem(0x9a56), 0xb5);
        EXPECT(gbc.readMem(0x9a57), 0x5);
        EXPECT(gbc.readMem(0xd5ef), 0x58);
        EXPECT(gbc.readMem(0xd5f0), 0x9a);
        // CD 0057
        gbc.setState(0xe8f3, 0x9898, 0x97a0, 0x584e, 0x64b9, 0x59d0, 0x1, 0x0);
        gbc.writeMem(0x9896, { 0x0, 0x0 });
        gbc.writeMem(0xe8f3, { 0xcd, 0xa, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9896);
        EXPECT(gbc.pc(), 0xa60a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9896), 0xf6);
        EXPECT(gbc.readMem(0x9897), 0xe8);
        EXPECT(gbc.readMem(0xe8f3), 0xcd);
        EXPECT(gbc.readMem(0xe8f4), 0xa);
        EXPECT(gbc.readMem(0xe8f5), 0xa6);
        // CD 005A
        gbc.setState(0x76ef, 0xf12d, 0xa90, 0xead5, 0x7bab, 0x31b3, 0x0, 0x0);
        gbc.writeMem(0x76ef, { 0xcd, 0x4b, 0x94 });
        gbc.writeMem(0xf12b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf12b);
        EXPECT(gbc.pc(), 0x944b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf12b), 0xf2);
        EXPECT(gbc.readMem(0xf12c), 0x76);
        // CD 005C
        gbc.setState(0xd383, 0x8629, 0x1ba0, 0x8544, 0xf49f, 0x4b88, 0x1, 0x1);
        gbc.writeMem(0x8627, { 0x0, 0x0 });
        gbc.writeMem(0xd383, { 0xcd, 0x29, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8627);
        EXPECT(gbc.pc(), 0xb329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8627), 0x86);
        EXPECT(gbc.readMem(0x8628), 0xd3);
        EXPECT(gbc.readMem(0xd383), 0xcd);
        EXPECT(gbc.readMem(0xd384), 0x29);
        EXPECT(gbc.readMem(0xd385), 0xb3);
        // CD 005D
        gbc.setState(0x4ace, 0x96ae, 0x3c50, 0xf6ce, 0xd94f, 0xf59d, 0x1, 0x0);
        gbc.writeMem(0x4ace, { 0xcd, 0x1, 0x6a });
        gbc.writeMem(0x96ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x96ac);
        EXPECT(gbc.pc(), 0x6a01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ac), 0xd1);
        EXPECT(gbc.readMem(0x96ad), 0x4a);
        // CD 005E
        gbc.setState(0xdde4, 0xfe01, 0x1d50, 0xe848, 0x8b95, 0xb9b9, 0x1, 0x0);
        gbc.writeMem(0xdde4, { 0xcd, 0x74, 0x2d });
        gbc.writeMem(0xfdff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xfdff);
        EXPECT(gbc.pc(), 0x2d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdde4), 0xcd);
        EXPECT(gbc.readMem(0xdde5), 0x74);
        EXPECT(gbc.readMem(0xdde6), 0x2d);
        EXPECT(gbc.readMem(0xfdff), 0xe7);
        EXPECT(gbc.readMem(0xfe00), 0xdd);
        // CD 0064
        gbc.setState(0xa5ec, 0xc234, 0xed10, 0xff4f, 0xa691, 0xc88e, 0x0, 0x1);
        gbc.writeMem(0xa5ec, { 0xcd, 0xce, 0x97 });
        gbc.writeMem(0xc232, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc232);
        EXPECT(gbc.pc(), 0x97ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ec), 0xcd);
        EXPECT(gbc.readMem(0xa5ed), 0xce);
        EXPECT(gbc.readMem(0xa5ee), 0x97);
        EXPECT(gbc.readMem(0xc232), 0xef);
        EXPECT(gbc.readMem(0xc233), 0xa5);
        // CD 0065
        gbc.setState(0x85c9, 0xb7e1, 0x8560, 0xa787, 0x265d, 0x68a2, 0x0, 0x1);
        gbc.writeMem(0x85c9, { 0xcd, 0x1c, 0xfb });
        gbc.writeMem(0xb7df, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb7df);
        EXPECT(gbc.pc(), 0xfb1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c9), 0xcd);
        EXPECT(gbc.readMem(0x85ca), 0x1c);
        EXPECT(gbc.readMem(0x85cb), 0xfb);
        EXPECT(gbc.readMem(0xb7df), 0xcc);
        EXPECT(gbc.readMem(0xb7e0), 0x85);
        // CD 0066
        gbc.setState(0xe45f, 0xa4ab, 0xedd0, 0x3fb2, 0x4d7b, 0xfb6f, 0x1, 0x1);
        gbc.writeMem(0xa4a9, { 0x0, 0x0 });
        gbc.writeMem(0xe45f, { 0xcd, 0x70, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa4a9);
        EXPECT(gbc.pc(), 0x6e70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a9), 0x62);
        EXPECT(gbc.readMem(0xa4aa), 0xe4);
        EXPECT(gbc.readMem(0xe45f), 0xcd);
        EXPECT(gbc.readMem(0xe460), 0x70);
        EXPECT(gbc.readMem(0xe461), 0x6e);
        // CD 0067
        gbc.setState(0x600, 0xedc1, 0xf0, 0x3702, 0xe5f1, 0xef0f, 0x0, 0x1);
        gbc.writeMem(0x600, { 0xcd, 0x1c, 0x0 });
        gbc.writeMem(0xedbf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xedbf);
        EXPECT(gbc.pc(), 0x1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedbf), 0x3);
        EXPECT(gbc.readMem(0xedc0), 0x6);
        // CD 006A
        gbc.setState(0xe219, 0xa94e, 0x6160, 0xaa66, 0x3dc1, 0xc345, 0x1, 0x1);
        gbc.writeMem(0xa94c, { 0x0, 0x0 });
        gbc.writeMem(0xe219, { 0xcd, 0x5, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa94c);
        EXPECT(gbc.pc(), 0xa405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa94c), 0x1c);
        EXPECT(gbc.readMem(0xa94d), 0xe2);
        EXPECT(gbc.readMem(0xe219), 0xcd);
        EXPECT(gbc.readMem(0xe21a), 0x5);
        EXPECT(gbc.readMem(0xe21b), 0xa4);
        // CD 006F
        gbc.setState(0x663a, 0xe544, 0x5920, 0x6c18, 0xbc27, 0x75c5, 0x1, 0x1);
        gbc.writeMem(0x663a, { 0xcd, 0xf4, 0xb5 });
        gbc.writeMem(0xe542, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe542);
        EXPECT(gbc.pc(), 0xb5f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe542), 0x3d);
        EXPECT(gbc.readMem(0xe543), 0x66);
        // CD 0072
        gbc.setState(0xbc6a, 0xcf05, 0x510, 0x5a85, 0x60ad, 0x848f, 0x1, 0x1);
        gbc.writeMem(0xbc6a, { 0xcd, 0xa4, 0x90 });
        gbc.writeMem(0xcf03, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xcf03);
        EXPECT(gbc.pc(), 0x90a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc6a), 0xcd);
        EXPECT(gbc.readMem(0xbc6b), 0xa4);
        EXPECT(gbc.readMem(0xbc6c), 0x90);
        EXPECT(gbc.readMem(0xcf03), 0x6d);
        EXPECT(gbc.readMem(0xcf04), 0xbc);
        // CD 0075
        gbc.setState(0xa7ea, 0xf3da, 0x9df0, 0xe056, 0xc356, 0xd129, 0x0, 0x1);
        gbc.writeMem(0xa7ea, { 0xcd, 0xa0, 0x91 });
        gbc.writeMem(0xf3d8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf3d8);
        EXPECT(gbc.pc(), 0x91a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ea), 0xcd);
        EXPECT(gbc.readMem(0xa7eb), 0xa0);
        EXPECT(gbc.readMem(0xa7ec), 0x91);
        EXPECT(gbc.readMem(0xf3d8), 0xed);
        EXPECT(gbc.readMem(0xf3d9), 0xa7);
        // CD 0076
        gbc.setState(0xd98d, 0x9796, 0x6540, 0x3fdc, 0xdf3f, 0x6eb3, 0x1, 0x1);
        gbc.writeMem(0x9794, { 0x0, 0x0 });
        gbc.writeMem(0xd98d, { 0xcd, 0xf4, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9794);
        EXPECT(gbc.pc(), 0xbbf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9794), 0x90);
        EXPECT(gbc.readMem(0x9795), 0xd9);
        EXPECT(gbc.readMem(0xd98d), 0xcd);
        EXPECT(gbc.readMem(0xd98e), 0xf4);
        EXPECT(gbc.readMem(0xd98f), 0xbb);
        // CD 007B
        gbc.setState(0x62c2, 0xdede, 0x8d90, 0xc11, 0x4f55, 0x5ce6, 0x1, 0x1);
        gbc.writeMem(0x62c2, { 0xcd, 0x63, 0x55 });
        gbc.writeMem(0xdedc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdedc);
        EXPECT(gbc.pc(), 0x5563);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdedc), 0xc5);
        EXPECT(gbc.readMem(0xdedd), 0x62);
        // CD 007D
        gbc.setState(0xacd4, 0x8ba0, 0xdaa0, 0xdc58, 0x6986, 0x164a, 0x0, 0x1);
        gbc.writeMem(0x8b9e, { 0x0, 0x0 });
        gbc.writeMem(0xacd4, { 0xcd, 0x4, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8b9e);
        EXPECT(gbc.pc(), 0xf04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b9e), 0xd7);
        EXPECT(gbc.readMem(0x8b9f), 0xac);
        EXPECT(gbc.readMem(0xacd4), 0xcd);
        EXPECT(gbc.readMem(0xacd5), 0x4);
        EXPECT(gbc.readMem(0xacd6), 0xf);
        // CD 007E
        gbc.setState(0xe076, 0xe279, 0xb4f0, 0x474d, 0x687e, 0x6a34, 0x1, 0x1);
        gbc.writeMem(0xe076, { 0xcd, 0x40, 0x3a });
        gbc.writeMem(0xe277, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe277);
        EXPECT(gbc.pc(), 0x3a40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe076), 0xcd);
        EXPECT(gbc.readMem(0xe077), 0x40);
        EXPECT(gbc.readMem(0xe078), 0x3a);
        EXPECT(gbc.readMem(0xe277), 0x79);
        EXPECT(gbc.readMem(0xe278), 0xe0);
        // CD 0080
        gbc.setState(0x6ea2, 0xd491, 0x8cb0, 0xaa21, 0x471b, 0x3bb, 0x0, 0x0);
        gbc.writeMem(0x6ea2, { 0xcd, 0xd1, 0x13 });
        gbc.writeMem(0xd48f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd48f);
        EXPECT(gbc.pc(), 0x13d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd48f), 0xa5);
        EXPECT(gbc.readMem(0xd490), 0x6e);
        // CD 0081
        gbc.setState(0xb65, 0xc05d, 0x74f0, 0xe8b, 0x169c, 0x1822, 0x0, 0x1);
        gbc.writeMem(0xb65, { 0xcd, 0x13, 0x2f });
        gbc.writeMem(0xc05b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc05b);
        EXPECT(gbc.pc(), 0x2f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc05b), 0x68);
        EXPECT(gbc.readMem(0xc05c), 0xb);
        // CD 0085
        gbc.setState(0x2fed, 0xe32b, 0xad20, 0x6a7d, 0x751c, 0xa620, 0x1, 0x1);
        gbc.writeMem(0x2fed, { 0xcd, 0xed, 0x3e });
        gbc.writeMem(0xe329, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe329);
        EXPECT(gbc.pc(), 0x3eed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe329), 0xf0);
        EXPECT(gbc.readMem(0xe32a), 0x2f);
        // CD 0087
        gbc.setState(0xeb83, 0xc34e, 0x38b0, 0x1b74, 0x5da3, 0x8f3b, 0x0, 0x0);
        gbc.writeMem(0xc34c, { 0x0, 0x0 });
        gbc.writeMem(0xeb83, { 0xcd, 0xab, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc34c);
        EXPECT(gbc.pc(), 0xeab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc34c), 0x86);
        EXPECT(gbc.readMem(0xc34d), 0xeb);
        EXPECT(gbc.readMem(0xeb83), 0xcd);
        EXPECT(gbc.readMem(0xeb84), 0xab);
        EXPECT(gbc.readMem(0xeb85), 0xe);
        // CD 0088
        gbc.setState(0xb466, 0x8380, 0xb850, 0xb967, 0x7687, 0x34f7, 0x1, 0x1);
        gbc.writeMem(0x837e, { 0x0, 0x0 });
        gbc.writeMem(0xb466, { 0xcd, 0x70, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x837e);
        EXPECT(gbc.pc(), 0x3770);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x837e), 0x69);
        EXPECT(gbc.readMem(0x837f), 0xb4);
        EXPECT(gbc.readMem(0xb466), 0xcd);
        EXPECT(gbc.readMem(0xb467), 0x70);
        EXPECT(gbc.readMem(0xb468), 0x37);
        // CD 0089
        gbc.setState(0x2179, 0xa06c, 0x4bc0, 0x84d7, 0x80d8, 0xfc89, 0x1, 0x1);
        gbc.writeMem(0x2179, { 0xcd, 0x65, 0xa7 });
        gbc.writeMem(0xa06a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa06a);
        EXPECT(gbc.pc(), 0xa765);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa06a), 0x7c);
        EXPECT(gbc.readMem(0xa06b), 0x21);
        // CD 008C
        gbc.setState(0x4163, 0xefe0, 0xa370, 0xe533, 0x1d5b, 0x11ea, 0x0, 0x1);
        gbc.writeMem(0x4163, { 0xcd, 0xef, 0x82 });
        gbc.writeMem(0xefde, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xefde);
        EXPECT(gbc.pc(), 0x82ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefde), 0x66);
        EXPECT(gbc.readMem(0xefdf), 0x41);
        // CD 0090
        gbc.setState(0x3a5a, 0xbe3f, 0x21e0, 0xa55c, 0xc788, 0x1a41, 0x0, 0x0);
        gbc.writeMem(0x3a5a, { 0xcd, 0x77, 0x25 });
        gbc.writeMem(0xbe3d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbe3d);
        EXPECT(gbc.pc(), 0x2577);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe3d), 0x5d);
        EXPECT(gbc.readMem(0xbe3e), 0x3a);
        // CD 0091
        gbc.setState(0xe6fc, 0x9824, 0xab70, 0x9979, 0xbc3b, 0x975f, 0x1, 0x1);
        gbc.writeMem(0x9822, { 0x0, 0x0 });
        gbc.writeMem(0xe6fc, { 0xcd, 0x9f, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9822);
        EXPECT(gbc.pc(), 0x9c9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9822), 0xff);
        EXPECT(gbc.readMem(0x9823), 0xe6);
        EXPECT(gbc.readMem(0xe6fc), 0xcd);
        EXPECT(gbc.readMem(0xe6fd), 0x9f);
        EXPECT(gbc.readMem(0xe6fe), 0x9c);
        // CD 0092
        gbc.setState(0xc791, 0xe32d, 0x69d0, 0x593e, 0xbfc4, 0xbbe, 0x1, 0x0);
        gbc.writeMem(0xc791, { 0xcd, 0x39, 0xc0 });
        gbc.writeMem(0xe32b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe32b);
        EXPECT(gbc.pc(), 0xc039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc791), 0xcd);
        EXPECT(gbc.readMem(0xc792), 0x39);
        EXPECT(gbc.readMem(0xc793), 0xc0);
        EXPECT(gbc.readMem(0xe32b), 0x94);
        EXPECT(gbc.readMem(0xe32c), 0xc7);
        // CD 009A
        gbc.setState(0x5e18, 0xf933, 0x3a20, 0x77ad, 0x19ac, 0xfcb0, 0x0, 0x1);
        gbc.writeMem(0x5e18, { 0xcd, 0xf6, 0x1c });
        gbc.writeMem(0xf931, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf931);
        EXPECT(gbc.pc(), 0x1cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf931), 0x1b);
        EXPECT(gbc.readMem(0xf932), 0x5e);
        // CD 009B
        gbc.setState(0x4c1, 0xf57a, 0xc080, 0x7892, 0x6b52, 0x45b6, 0x0, 0x0);
        gbc.writeMem(0x4c1, { 0xcd, 0x59, 0xbc });
        gbc.writeMem(0xf578, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf578);
        EXPECT(gbc.pc(), 0xbc59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf578), 0xc4);
        EXPECT(gbc.readMem(0xf579), 0x4);
        // CD 009C
        gbc.setState(0xabbe, 0xdfc0, 0xe570, 0x7dfc, 0x7f53, 0x4dec, 0x1, 0x1);
        gbc.writeMem(0xabbe, { 0xcd, 0x65, 0xbc });
        gbc.writeMem(0xdfbe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xdfbe);
        EXPECT(gbc.pc(), 0xbc65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabbe), 0xcd);
        EXPECT(gbc.readMem(0xabbf), 0x65);
        EXPECT(gbc.readMem(0xabc0), 0xbc);
        EXPECT(gbc.readMem(0xdfbe), 0xc1);
        EXPECT(gbc.readMem(0xdfbf), 0xab);
        // CD 009E
        gbc.setState(0x8355, 0xf268, 0xf5e0, 0x6e5c, 0xee28, 0xfe98, 0x0, 0x1);
        gbc.writeMem(0x8355, { 0xcd, 0x12, 0xab });
        gbc.writeMem(0xf266, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf266);
        EXPECT(gbc.pc(), 0xab12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8355), 0xcd);
        EXPECT(gbc.readMem(0x8356), 0x12);
        EXPECT(gbc.readMem(0x8357), 0xab);
        EXPECT(gbc.readMem(0xf266), 0x58);
        EXPECT(gbc.readMem(0xf267), 0x83);
        // CD 009F
        gbc.setState(0x9d08, 0xe87d, 0x1cd0, 0xc809, 0xb77a, 0xdbfc, 0x1, 0x1);
        gbc.writeMem(0x9d08, { 0xcd, 0x1c, 0x74 });
        gbc.writeMem(0xe87b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe87b);
        EXPECT(gbc.pc(), 0x741c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d08), 0xcd);
        EXPECT(gbc.readMem(0x9d09), 0x1c);
        EXPECT(gbc.readMem(0x9d0a), 0x74);
        EXPECT(gbc.readMem(0xe87b), 0xb);
        EXPECT(gbc.readMem(0xe87c), 0x9d);
        // CD 00A1
        gbc.setState(0xd73a, 0x8577, 0x7060, 0xa4ab, 0x8502, 0x7eb8, 0x1, 0x1);
        gbc.writeMem(0x8575, { 0x0, 0x0 });
        gbc.writeMem(0xd73a, { 0xcd, 0x9, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8575);
        EXPECT(gbc.pc(), 0xe209);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8575), 0x3d);
        EXPECT(gbc.readMem(0x8576), 0xd7);
        EXPECT(gbc.readMem(0xd73a), 0xcd);
        EXPECT(gbc.readMem(0xd73b), 0x9);
        EXPECT(gbc.readMem(0xd73c), 0xe2);
        // CD 00A2
        gbc.setState(0x1fa8, 0xd253, 0x8b60, 0x7c48, 0x3980, 0x887e, 0x1, 0x0);
        gbc.writeMem(0x1fa8, { 0xcd, 0x8d, 0x3c });
        gbc.writeMem(0xd251, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd251);
        EXPECT(gbc.pc(), 0x3c8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd251), 0xab);
        EXPECT(gbc.readMem(0xd252), 0x1f);
        // CD 00A4
        gbc.setState(0x7979, 0xab6a, 0xe890, 0x2ef, 0x2c1a, 0x6555, 0x0, 0x1);
        gbc.writeMem(0x7979, { 0xcd, 0x21, 0x65 });
        gbc.writeMem(0xab68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xab68);
        EXPECT(gbc.pc(), 0x6521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab68), 0x7c);
        EXPECT(gbc.readMem(0xab69), 0x79);
        // CD 00A8
        gbc.setState(0x10ac, 0xbb16, 0xdc30, 0x3611, 0xc35c, 0x1229, 0x0, 0x0);
        gbc.writeMem(0x10ac, { 0xcd, 0xa6, 0x58 });
        gbc.writeMem(0xbb14, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xbb14);
        EXPECT(gbc.pc(), 0x58a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb14), 0xaf);
        EXPECT(gbc.readMem(0xbb15), 0x10);
        // CD 00A9
        gbc.setState(0xbd58, 0xc769, 0xd3d0, 0x3bc0, 0x9227, 0xa08a, 0x0, 0x1);
        gbc.writeMem(0xbd58, { 0xcd, 0x56, 0x4c });
        gbc.writeMem(0xc767, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc767);
        EXPECT(gbc.pc(), 0x4c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd58), 0xcd);
        EXPECT(gbc.readMem(0xbd59), 0x56);
        EXPECT(gbc.readMem(0xbd5a), 0x4c);
        EXPECT(gbc.readMem(0xc767), 0x5b);
        EXPECT(gbc.readMem(0xc768), 0xbd);
        // CD 00AB
        gbc.setState(0x7356, 0xaed9, 0xbcf0, 0xd1e9, 0xbd4c, 0x944d, 0x1, 0x1);
        gbc.writeMem(0x7356, { 0xcd, 0x5f, 0x87 });
        gbc.writeMem(0xaed7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xaed7);
        EXPECT(gbc.pc(), 0x875f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed7), 0x59);
        EXPECT(gbc.readMem(0xaed8), 0x73);
        // CD 00AC
        gbc.setState(0xd718, 0xe69f, 0x8da0, 0xd459, 0x4cfb, 0x5e55, 0x1, 0x1);
        gbc.writeMem(0xd718, { 0xcd, 0x1b, 0xdd });
        gbc.writeMem(0xe69d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe69d);
        EXPECT(gbc.pc(), 0xdd1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd718), 0xcd);
        EXPECT(gbc.readMem(0xd719), 0x1b);
        EXPECT(gbc.readMem(0xd71a), 0xdd);
        EXPECT(gbc.readMem(0xe69d), 0x1b);
        EXPECT(gbc.readMem(0xe69e), 0xd7);
        // CD 00AF
        gbc.setState(0x5cfb, 0xddac, 0x1c60, 0x1041, 0xe9ff, 0x2234, 0x0, 0x1);
        gbc.writeMem(0x5cfb, { 0xcd, 0xa4, 0xc6 });
        gbc.writeMem(0xddaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xddaa);
        EXPECT(gbc.pc(), 0xc6a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddaa), 0xfe);
        EXPECT(gbc.readMem(0xddab), 0x5c);
        // CD 00B0
        gbc.setState(0x4fa2, 0xbed4, 0x8e90, 0x98e9, 0xad2b, 0x5aaf, 0x0, 0x0);
        gbc.writeMem(0x4fa2, { 0xcd, 0x63, 0xa1 });
        gbc.writeMem(0xbed2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbed2);
        EXPECT(gbc.pc(), 0xa163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbed2), 0xa5);
        EXPECT(gbc.readMem(0xbed3), 0x4f);
        // CD 00B2
        gbc.setState(0x8429, 0xb759, 0xff40, 0xc289, 0x984f, 0xdab3, 0x0, 0x1);
        gbc.writeMem(0x8429, { 0xcd, 0x54, 0x7d });
        gbc.writeMem(0xb757, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb757);
        EXPECT(gbc.pc(), 0x7d54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8429), 0xcd);
        EXPECT(gbc.readMem(0x842a), 0x54);
        EXPECT(gbc.readMem(0x842b), 0x7d);
        EXPECT(gbc.readMem(0xb757), 0x2c);
        EXPECT(gbc.readMem(0xb758), 0x84);
        // CD 00B3
        gbc.setState(0x1d10, 0xb6b2, 0xbdf0, 0x6fc4, 0xffef, 0x1d3b, 0x0, 0x0);
        gbc.writeMem(0x1d10, { 0xcd, 0xde, 0xbc });
        gbc.writeMem(0xb6b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb6b0);
        EXPECT(gbc.pc(), 0xbcde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6b0), 0x13);
        EXPECT(gbc.readMem(0xb6b1), 0x1d);
        // CD 00B9
        gbc.setState(0xfe8, 0x9b99, 0xecb0, 0xd211, 0xb314, 0x7f7, 0x0, 0x1);
        gbc.writeMem(0xfe8, { 0xcd, 0x3, 0x4e });
        gbc.writeMem(0x9b97, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9b97);
        EXPECT(gbc.pc(), 0x4e03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b97), 0xeb);
        EXPECT(gbc.readMem(0x9b98), 0xf);
        // CD 00BA
        gbc.setState(0x969c, 0xb537, 0xd9b0, 0x6fd, 0x2a79, 0xa36, 0x1, 0x1);
        gbc.writeMem(0x969c, { 0xcd, 0x3f, 0x6f });
        gbc.writeMem(0xb535, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb535);
        EXPECT(gbc.pc(), 0x6f3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x969c), 0xcd);
        EXPECT(gbc.readMem(0x969d), 0x3f);
        EXPECT(gbc.readMem(0x969e), 0x6f);
        EXPECT(gbc.readMem(0xb535), 0x9f);
        EXPECT(gbc.readMem(0xb536), 0x96);
        // CD 00C0
        gbc.setState(0x6fc, 0xa2b2, 0x4550, 0x6a2c, 0x1248, 0x3784, 0x0, 0x1);
        gbc.writeMem(0x6fc, { 0xcd, 0x14, 0x67 });
        gbc.writeMem(0xa2b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa2b0);
        EXPECT(gbc.pc(), 0x6714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2b0), 0xff);
        EXPECT(gbc.readMem(0xa2b1), 0x6);
        // CD 00C2
        gbc.setState(0x7a9f, 0xe788, 0x8730, 0x8559, 0x963, 0x9526, 0x1, 0x1);
        gbc.writeMem(0x7a9f, { 0xcd, 0x94, 0xa3 });
        gbc.writeMem(0xe786, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe786);
        EXPECT(gbc.pc(), 0xa394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe786), 0xa2);
        EXPECT(gbc.readMem(0xe787), 0x7a);
        // CD 00C3
        gbc.setState(0xc175, 0xfd7c, 0xfd0, 0x57c0, 0xf3a1, 0xf37c, 0x0, 0x1);
        gbc.writeMem(0xc175, { 0xcd, 0x21, 0x15 });
        gbc.writeMem(0xfd7a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xfd7a);
        EXPECT(gbc.pc(), 0x1521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc175), 0xcd);
        EXPECT(gbc.readMem(0xc176), 0x21);
        EXPECT(gbc.readMem(0xc177), 0x15);
        EXPECT(gbc.readMem(0xfd7a), 0x78);
        EXPECT(gbc.readMem(0xfd7b), 0xc1);
        // CD 00C9
        gbc.setState(0x6642, 0xb1f3, 0xf590, 0x3666, 0x4db9, 0xba79, 0x1, 0x0);
        gbc.writeMem(0x6642, { 0xcd, 0x4, 0x62 });
        gbc.writeMem(0xb1f1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb1f1);
        EXPECT(gbc.pc(), 0x6204);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1f1), 0x45);
        EXPECT(gbc.readMem(0xb1f2), 0x66);
        // CD 00CB
        gbc.setState(0xa1ba, 0xef08, 0x2ad0, 0x781e, 0x407f, 0xb904, 0x1, 0x1);
        gbc.writeMem(0xa1ba, { 0xcd, 0x9, 0xeb });
        gbc.writeMem(0xef06, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xef06);
        EXPECT(gbc.pc(), 0xeb09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ba), 0xcd);
        EXPECT(gbc.readMem(0xa1bb), 0x9);
        EXPECT(gbc.readMem(0xa1bc), 0xeb);
        EXPECT(gbc.readMem(0xef06), 0xbd);
        EXPECT(gbc.readMem(0xef07), 0xa1);
        // CD 00CD
        gbc.setState(0xa0d1, 0xeee8, 0x1010, 0x178, 0xc10a, 0xd11b, 0x1, 0x1);
        gbc.writeMem(0xa0d1, { 0xcd, 0x6f, 0x2e });
        gbc.writeMem(0xeee6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xeee6);
        EXPECT(gbc.pc(), 0x2e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d1), 0xcd);
        EXPECT(gbc.readMem(0xa0d2), 0x6f);
        EXPECT(gbc.readMem(0xa0d3), 0x2e);
        EXPECT(gbc.readMem(0xeee6), 0xd4);
        EXPECT(gbc.readMem(0xeee7), 0xa0);
        // CD 00CE
        gbc.setState(0x85b4, 0xa06a, 0xb5c0, 0x687, 0xaa00, 0xb3ea, 0x0, 0x0);
        gbc.writeMem(0x85b4, { 0xcd, 0x5, 0x64 });
        gbc.writeMem(0xa068, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa068);
        EXPECT(gbc.pc(), 0x6405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b4), 0xcd);
        EXPECT(gbc.readMem(0x85b5), 0x5);
        EXPECT(gbc.readMem(0x85b6), 0x64);
        EXPECT(gbc.readMem(0xa068), 0xb7);
        EXPECT(gbc.readMem(0xa069), 0x85);
        // CD 00DA
        gbc.setState(0xc4f2, 0xb1d1, 0xecc0, 0x8036, 0x1406, 0xedb9, 0x1, 0x1);
        gbc.writeMem(0xb1cf, { 0x0, 0x0 });
        gbc.writeMem(0xc4f2, { 0xcd, 0x8f, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb1cf);
        EXPECT(gbc.pc(), 0x568f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1cf), 0xf5);
        EXPECT(gbc.readMem(0xb1d0), 0xc4);
        EXPECT(gbc.readMem(0xc4f2), 0xcd);
        EXPECT(gbc.readMem(0xc4f3), 0x8f);
        EXPECT(gbc.readMem(0xc4f4), 0x56);
        // CD 00DC
        gbc.setState(0x6fc, 0xbf57, 0xc490, 0x671d, 0xae75, 0x9b30, 0x1, 0x1);
        gbc.writeMem(0x6fc, { 0xcd, 0x14, 0x67 });
        gbc.writeMem(0xbf55, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xbf55);
        EXPECT(gbc.pc(), 0x6714);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf55), 0xff);
        EXPECT(gbc.readMem(0xbf56), 0x6);
        // CD 00DE
        gbc.setState(0x1cea, 0xcf88, 0xaf90, 0x9873, 0x28a4, 0x1671, 0x0, 0x0);
        gbc.writeMem(0x1cea, { 0xcd, 0x5d, 0xe5 });
        gbc.writeMem(0xcf86, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xcf86);
        EXPECT(gbc.pc(), 0xe55d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf86), 0xed);
        EXPECT(gbc.readMem(0xcf87), 0x1c);
        // CD 00DF
        gbc.setState(0xa211, 0xaef1, 0x6430, 0x5e2a, 0x6f59, 0x4d03, 0x0, 0x0);
        gbc.writeMem(0xa211, { 0xcd, 0x9e, 0xca });
        gbc.writeMem(0xaeef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xaeef);
        EXPECT(gbc.pc(), 0xca9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa211), 0xcd);
        EXPECT(gbc.readMem(0xa212), 0x9e);
        EXPECT(gbc.readMem(0xa213), 0xca);
        EXPECT(gbc.readMem(0xaeef), 0x14);
        EXPECT(gbc.readMem(0xaef0), 0xa2);
        // CD 00E3
        gbc.setState(0xb54c, 0xff86, 0x1730, 0xf5fb, 0x2278, 0xf612, 0x1, 0x1);
        gbc.writeMem(0xb54c, { 0xcd, 0xeb, 0xc0 });
        gbc.writeMem(0xff84, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xff84);
        EXPECT(gbc.pc(), 0xc0eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb54c), 0xcd);
        EXPECT(gbc.readMem(0xb54d), 0xeb);
        EXPECT(gbc.readMem(0xb54e), 0xc0);
        EXPECT(gbc.readMem(0xff84), 0x4f);
        EXPECT(gbc.readMem(0xff85), 0xb5);
        // CD 00E4
        gbc.setState(0xdfd0, 0x9e94, 0x5e50, 0x948e, 0xe115, 0xcf28, 0x0, 0x1);
        gbc.writeMem(0x9e92, { 0x0, 0x0 });
        gbc.writeMem(0xdfd0, { 0xcd, 0x25, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9e92);
        EXPECT(gbc.pc(), 0x325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e92), 0xd3);
        EXPECT(gbc.readMem(0x9e93), 0xdf);
        EXPECT(gbc.readMem(0xdfd0), 0xcd);
        EXPECT(gbc.readMem(0xdfd1), 0x25);
        EXPECT(gbc.readMem(0xdfd2), 0x3);
        // CD 00E5
        gbc.setState(0x26ab, 0xed0b, 0xd680, 0xab82, 0x1e20, 0xf9f0, 0x0, 0x1);
        gbc.writeMem(0x26ab, { 0xcd, 0x20, 0x43 });
        gbc.writeMem(0xed09, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xed09);
        EXPECT(gbc.pc(), 0x4320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed09), 0xae);
        EXPECT(gbc.readMem(0xed0a), 0x26);
        // CD 00E7
        gbc.setState(0x54a7, 0xfee6, 0xcd30, 0x5a9e, 0x10b8, 0x4d44, 0x1, 0x0);
        gbc.writeMem(0x54a7, { 0xcd, 0xfa, 0x7f });
        gbc.writeMem(0xfee4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfee4);
        EXPECT(gbc.pc(), 0x7ffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfee4), 0xaa);
        EXPECT(gbc.readMem(0xfee5), 0x54);
        // CD 00EC
        gbc.setState(0xe289, 0x8a2c, 0x3800, 0x76a3, 0x6a2f, 0x3c99, 0x1, 0x1);
        gbc.writeMem(0x8a2a, { 0x0, 0x0 });
        gbc.writeMem(0xe289, { 0xcd, 0x3a, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8a2a);
        EXPECT(gbc.pc(), 0xee3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a2a), 0x8c);
        EXPECT(gbc.readMem(0x8a2b), 0xe2);
        EXPECT(gbc.readMem(0xe289), 0xcd);
        EXPECT(gbc.readMem(0xe28a), 0x3a);
        EXPECT(gbc.readMem(0xe28b), 0xee);
        // CD 00F3
        gbc.setState(0xe92, 0xfe38, 0x51d0, 0xd39d, 0xaf2f, 0x4a73, 0x1, 0x0);
        gbc.writeMem(0xe92, { 0xcd, 0xe4, 0x89 });
        gbc.writeMem(0xfe36, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xfe36);
        EXPECT(gbc.pc(), 0x89e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe36), 0x95);
        EXPECT(gbc.readMem(0xfe37), 0xe);
        // CD 00F4
        gbc.setState(0x441, 0xeeec, 0x1e30, 0x7826, 0xce53, 0x6d6f, 0x1, 0x1);
        gbc.writeMem(0x441, { 0xcd, 0x9f, 0x7a });
        gbc.writeMem(0xeeea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xeeea);
        EXPECT(gbc.pc(), 0x7a9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeea), 0x44);
        EXPECT(gbc.readMem(0xeeeb), 0x4);
        // CD 00F8
        gbc.setState(0xc6e2, 0xd6f7, 0x75a0, 0x80b4, 0x7458, 0xdfa5, 0x1, 0x0);
        gbc.writeMem(0xc6e2, { 0xcd, 0x7b, 0x3 });
        gbc.writeMem(0xd6f5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd6f5);
        EXPECT(gbc.pc(), 0x37b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e2), 0xcd);
        EXPECT(gbc.readMem(0xc6e3), 0x7b);
        EXPECT(gbc.readMem(0xc6e4), 0x3);
        EXPECT(gbc.readMem(0xd6f5), 0xe5);
        EXPECT(gbc.readMem(0xd6f6), 0xc6);
        // CD 00FB
        gbc.setState(0xece1, 0xb7e2, 0x7050, 0x484a, 0x2d9f, 0x4557, 0x0, 0x0);
        gbc.writeMem(0xb7e0, { 0x0, 0x0 });
        gbc.writeMem(0xece1, { 0xcd, 0xf1, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb7e0);
        EXPECT(gbc.pc(), 0x66f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e0), 0xe4);
        EXPECT(gbc.readMem(0xb7e1), 0xec);
        EXPECT(gbc.readMem(0xece1), 0xcd);
        EXPECT(gbc.readMem(0xece2), 0xf1);
        EXPECT(gbc.readMem(0xece3), 0x66);
        // CD 00FE
        gbc.setState(0x5012, 0x8531, 0x2640, 0x245e, 0xf6eb, 0x69d7, 0x1, 0x1);
        gbc.writeMem(0x5012, { 0xcd, 0xe8, 0x86 });
        gbc.writeMem(0x852f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x852f);
        EXPECT(gbc.pc(), 0x86e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x852f), 0x15);
        EXPECT(gbc.readMem(0x8530), 0x50);
        // CD 0100
        gbc.setState(0x3b5d, 0xe62a, 0x8600, 0x7d33, 0x6b46, 0x7e84, 0x1, 0x0);
        gbc.writeMem(0x3b5d, { 0xcd, 0x7, 0x6a });
        gbc.writeMem(0xe628, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe628);
        EXPECT(gbc.pc(), 0x6a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe628), 0x60);
        EXPECT(gbc.readMem(0xe629), 0x3b);
        // CD 0101
        gbc.setState(0xc646, 0xfe7f, 0x85a0, 0x6af1, 0x3f61, 0x7809, 0x1, 0x0);
        gbc.writeMem(0xc646, { 0xcd, 0xc3, 0x88 });
        gbc.writeMem(0xfe7d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xfe7d);
        EXPECT(gbc.pc(), 0x88c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc646), 0xcd);
        EXPECT(gbc.readMem(0xc647), 0xc3);
        EXPECT(gbc.readMem(0xc648), 0x88);
        EXPECT(gbc.readMem(0xfe7d), 0x49);
        EXPECT(gbc.readMem(0xfe7e), 0xc6);
        // CD 0102
        gbc.setState(0x90e6, 0x9be3, 0x5a10, 0x73eb, 0x8e78, 0x188e, 0x1, 0x1);
        gbc.writeMem(0x90e6, { 0xcd, 0xf0, 0x67 });
        gbc.writeMem(0x9be1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9be1);
        EXPECT(gbc.pc(), 0x67f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90e6), 0xcd);
        EXPECT(gbc.readMem(0x90e7), 0xf0);
        EXPECT(gbc.readMem(0x90e8), 0x67);
        EXPECT(gbc.readMem(0x9be1), 0xe9);
        EXPECT(gbc.readMem(0x9be2), 0x90);
        // CD 0104
        gbc.setState(0x3662, 0xf2f8, 0xee80, 0xac0b, 0x2048, 0x2821, 0x0, 0x0);
        gbc.writeMem(0x3662, { 0xcd, 0x32, 0x13 });
        gbc.writeMem(0xf2f6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf2f6);
        EXPECT(gbc.pc(), 0x1332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf2f6), 0x65);
        EXPECT(gbc.readMem(0xf2f7), 0x36);
        // CD 0105
        gbc.setState(0x8f82, 0xfde3, 0x21c0, 0xca64, 0x51fd, 0x9c76, 0x1, 0x0);
        gbc.writeMem(0x8f82, { 0xcd, 0xaf, 0x46 });
        gbc.writeMem(0xfde1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfde1);
        EXPECT(gbc.pc(), 0x46af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f82), 0xcd);
        EXPECT(gbc.readMem(0x8f83), 0xaf);
        EXPECT(gbc.readMem(0x8f84), 0x46);
        EXPECT(gbc.readMem(0xfde1), 0x85);
        EXPECT(gbc.readMem(0xfde2), 0x8f);
        // CD 0106
        gbc.setState(0x3783, 0xba43, 0xc50, 0x36a2, 0xae1e, 0xb658, 0x1, 0x0);
        gbc.writeMem(0x3783, { 0xcd, 0x33, 0x35 });
        gbc.writeMem(0xba41, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xba41);
        EXPECT(gbc.pc(), 0x3533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba41), 0x86);
        EXPECT(gbc.readMem(0xba42), 0x37);
        // CD 0108
        gbc.setState(0xb531, 0xc444, 0x5e50, 0x1b77, 0xfeaf, 0x5650, 0x0, 0x1);
        gbc.writeMem(0xb531, { 0xcd, 0xb, 0xe1 });
        gbc.writeMem(0xc442, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc442);
        EXPECT(gbc.pc(), 0xe10b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb531), 0xcd);
        EXPECT(gbc.readMem(0xb532), 0xb);
        EXPECT(gbc.readMem(0xb533), 0xe1);
        EXPECT(gbc.readMem(0xc442), 0x34);
        EXPECT(gbc.readMem(0xc443), 0xb5);
        // CD 0109
        gbc.setState(0xe587, 0xbc11, 0x8f90, 0x3464, 0x4324, 0xa197, 0x1, 0x0);
        gbc.writeMem(0xbc0f, { 0x0, 0x0 });
        gbc.writeMem(0xe587, { 0xcd, 0x71, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xbc0f);
        EXPECT(gbc.pc(), 0x6071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc0f), 0x8a);
        EXPECT(gbc.readMem(0xbc10), 0xe5);
        EXPECT(gbc.readMem(0xe587), 0xcd);
        EXPECT(gbc.readMem(0xe588), 0x71);
        EXPECT(gbc.readMem(0xe589), 0x60);
        // CD 010A
        gbc.setState(0xda9a, 0xf418, 0xb5e0, 0xc4c9, 0xa01e, 0x94bf, 0x0, 0x0);
        gbc.writeMem(0xda9a, { 0xcd, 0x43, 0x4b });
        gbc.writeMem(0xf416, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf416);
        EXPECT(gbc.pc(), 0x4b43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda9a), 0xcd);
        EXPECT(gbc.readMem(0xda9b), 0x43);
        EXPECT(gbc.readMem(0xda9c), 0x4b);
        EXPECT(gbc.readMem(0xf416), 0x9d);
        EXPECT(gbc.readMem(0xf417), 0xda);
        // CD 010E
        gbc.setState(0x3b2d, 0xfcd0, 0xb3f0, 0x2830, 0x8f9b, 0x5bf7, 0x1, 0x0);
        gbc.writeMem(0x3b2d, { 0xcd, 0xeb, 0xf5 });
        gbc.writeMem(0xfcce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfcce);
        EXPECT(gbc.pc(), 0xf5eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfcce), 0x30);
        EXPECT(gbc.readMem(0xfccf), 0x3b);
        // CD 0111
        gbc.setState(0x4ac8, 0xae1c, 0xd140, 0x5e2d, 0x69c4, 0xd7f1, 0x1, 0x1);
        gbc.writeMem(0x4ac8, { 0xcd, 0x3d, 0x46 });
        gbc.writeMem(0xae1a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xae1a);
        EXPECT(gbc.pc(), 0x463d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae1a), 0xcb);
        EXPECT(gbc.readMem(0xae1b), 0x4a);
        // CD 0114
        gbc.setState(0x3499, 0xde6f, 0x9970, 0xffa6, 0xa7df, 0xdfbe, 0x1, 0x0);
        gbc.writeMem(0x3499, { 0xcd, 0x55, 0x9d });
        gbc.writeMem(0xde6d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xde6d);
        EXPECT(gbc.pc(), 0x9d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde6d), 0x9c);
        EXPECT(gbc.readMem(0xde6e), 0x34);
        // CD 0116
        gbc.setState(0x2989, 0xf219, 0x36e0, 0x7307, 0xf1c2, 0x74ae, 0x1, 0x1);
        gbc.writeMem(0x2989, { 0xcd, 0x5c, 0x3c });
        gbc.writeMem(0xf217, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf217);
        EXPECT(gbc.pc(), 0x3c5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf217), 0x8c);
        EXPECT(gbc.readMem(0xf218), 0x29);
        // CD 0117
        gbc.setState(0x4801, 0xb7a9, 0xfd0, 0x2ab7, 0x4854, 0x6816, 0x1, 0x0);
        gbc.writeMem(0x4801, { 0xcd, 0xec, 0x5b });
        gbc.writeMem(0xb7a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb7a7);
        EXPECT(gbc.pc(), 0x5bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a7), 0x4);
        EXPECT(gbc.readMem(0xb7a8), 0x48);
        // CD 0119
        gbc.setState(0x6eca, 0xeb1d, 0xcd0, 0xcc58, 0x3f79, 0x2947, 0x1, 0x1);
        gbc.writeMem(0x6eca, { 0xcd, 0x41, 0x39 });
        gbc.writeMem(0xeb1b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xeb1b);
        EXPECT(gbc.pc(), 0x3941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb1b), 0xcd);
        EXPECT(gbc.readMem(0xeb1c), 0x6e);
        // CD 011A
        gbc.setState(0x8d77, 0xeba3, 0x3d0, 0x7cbf, 0x7eeb, 0x596, 0x1, 0x1);
        gbc.writeMem(0x8d77, { 0xcd, 0x68, 0x8 });
        gbc.writeMem(0xeba1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xeba1);
        EXPECT(gbc.pc(), 0x868);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d77), 0xcd);
        EXPECT(gbc.readMem(0x8d78), 0x68);
        EXPECT(gbc.readMem(0x8d79), 0x8);
        EXPECT(gbc.readMem(0xeba1), 0x7a);
        EXPECT(gbc.readMem(0xeba2), 0x8d);
        // CD 011C
        gbc.setState(0x6177, 0x97f8, 0xee30, 0xa588, 0xde18, 0xcf29, 0x1, 0x0);
        gbc.writeMem(0x6177, { 0xcd, 0x13, 0x23 });
        gbc.writeMem(0x97f6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x97f6);
        EXPECT(gbc.pc(), 0x2313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f6), 0x7a);
        EXPECT(gbc.readMem(0x97f7), 0x61);
        // CD 011D
        gbc.setState(0x7c3a, 0xdb75, 0x25c0, 0xf863, 0x8800, 0xd818, 0x0, 0x1);
        gbc.writeMem(0x7c3a, { 0xcd, 0x46, 0xd0 });
        gbc.writeMem(0xdb73, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xdb73);
        EXPECT(gbc.pc(), 0xd046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb73), 0x3d);
        EXPECT(gbc.readMem(0xdb74), 0x7c);
        // CD 011F
        gbc.setState(0xb0f1, 0xa254, 0x75e0, 0xb957, 0x9551, 0x4d14, 0x1, 0x1);
        gbc.writeMem(0xa252, { 0x0, 0x0 });
        gbc.writeMem(0xb0f1, { 0xcd, 0x55, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa252);
        EXPECT(gbc.pc(), 0x8e55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa252), 0xf4);
        EXPECT(gbc.readMem(0xa253), 0xb0);
        EXPECT(gbc.readMem(0xb0f1), 0xcd);
        EXPECT(gbc.readMem(0xb0f2), 0x55);
        EXPECT(gbc.readMem(0xb0f3), 0x8e);
        // CD 0120
        gbc.setState(0xaa92, 0xea27, 0x71c0, 0x854c, 0x252d, 0xdc75, 0x1, 0x0);
        gbc.writeMem(0xaa92, { 0xcd, 0xb2, 0xfa });
        gbc.writeMem(0xea25, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xea25);
        EXPECT(gbc.pc(), 0xfab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa92), 0xcd);
        EXPECT(gbc.readMem(0xaa93), 0xb2);
        EXPECT(gbc.readMem(0xaa94), 0xfa);
        EXPECT(gbc.readMem(0xea25), 0x95);
        EXPECT(gbc.readMem(0xea26), 0xaa);
        // CD 0122
        gbc.setState(0x39cc, 0xbedc, 0x8e60, 0x677b, 0x31e4, 0x2758, 0x0, 0x1);
        gbc.writeMem(0x39cc, { 0xcd, 0x30, 0xc5 });
        gbc.writeMem(0xbeda, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xbeda);
        EXPECT(gbc.pc(), 0xc530);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeda), 0xcf);
        EXPECT(gbc.readMem(0xbedb), 0x39);
        // CD 0123
        gbc.setState(0x7926, 0xcad4, 0x51d0, 0x89a6, 0xb19d, 0x333f, 0x0, 0x1);
        gbc.writeMem(0x7926, { 0xcd, 0xe8, 0x36 });
        gbc.writeMem(0xcad2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xcad2);
        EXPECT(gbc.pc(), 0x36e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcad2), 0x29);
        EXPECT(gbc.readMem(0xcad3), 0x79);
        // CD 0125
        gbc.setState(0x80d, 0xadad, 0xf360, 0x9395, 0xa97d, 0xea8f, 0x0, 0x1);
        gbc.writeMem(0x80d, { 0xcd, 0x7a, 0xd4 });
        gbc.writeMem(0xadab, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xadab);
        EXPECT(gbc.pc(), 0xd47a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadab), 0x10);
        EXPECT(gbc.readMem(0xadac), 0x8);
        // CD 0126
        gbc.setState(0x4aa6, 0xc953, 0x35b0, 0xd780, 0xf9c8, 0x25a2, 0x0, 0x1);
        gbc.writeMem(0x4aa6, { 0xcd, 0xf1, 0x9a });
        gbc.writeMem(0xc951, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc951);
        EXPECT(gbc.pc(), 0x9af1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc951), 0xa9);
        EXPECT(gbc.readMem(0xc952), 0x4a);
        // CD 0127
        gbc.setState(0x5f8d, 0x8086, 0xba60, 0xcd82, 0x11d5, 0x3c81, 0x0, 0x1);
        gbc.writeMem(0x5f8d, { 0xcd, 0xf8, 0xf9 });
        gbc.writeMem(0x8084, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8084);
        EXPECT(gbc.pc(), 0xf9f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8084), 0x90);
        EXPECT(gbc.readMem(0x8085), 0x5f);
        // CD 0133
        gbc.setState(0x5552, 0x8890, 0x16e0, 0x6cb1, 0x5ade, 0xf77f, 0x0, 0x1);
        gbc.writeMem(0x5552, { 0xcd, 0xf9, 0x5b });
        gbc.writeMem(0x888e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x888e);
        EXPECT(gbc.pc(), 0x5bf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x888e), 0x55);
        EXPECT(gbc.readMem(0x888f), 0x55);
        // CD 0135
        gbc.setState(0xcc22, 0xbec8, 0x8620, 0xaabd, 0x16b9, 0x58c9, 0x0, 0x0);
        gbc.writeMem(0xbec6, { 0x0, 0x0 });
        gbc.writeMem(0xcc22, { 0xcd, 0xca, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xbec6);
        EXPECT(gbc.pc(), 0x68ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec6), 0x25);
        EXPECT(gbc.readMem(0xbec7), 0xcc);
        EXPECT(gbc.readMem(0xcc22), 0xcd);
        EXPECT(gbc.readMem(0xcc23), 0xca);
        EXPECT(gbc.readMem(0xcc24), 0x68);
        // CD 0136
        gbc.setState(0x5b75, 0xc1a4, 0x24e0, 0x9a06, 0xdb90, 0xcb61, 0x0, 0x1);
        gbc.writeMem(0x5b75, { 0xcd, 0x96, 0x23 });
        gbc.writeMem(0xc1a2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc1a2);
        EXPECT(gbc.pc(), 0x2396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1a2), 0x78);
        EXPECT(gbc.readMem(0xc1a3), 0x5b);
        // CD 0139
        gbc.setState(0xcc1c, 0xa345, 0x3fe0, 0xd8f9, 0xbec9, 0x2aed, 0x0, 0x1);
        gbc.writeMem(0xa343, { 0x0, 0x0 });
        gbc.writeMem(0xcc1c, { 0xcd, 0x7a, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa343);
        EXPECT(gbc.pc(), 0x687a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa343), 0x1f);
        EXPECT(gbc.readMem(0xa344), 0xcc);
        EXPECT(gbc.readMem(0xcc1c), 0xcd);
        EXPECT(gbc.readMem(0xcc1d), 0x7a);
        EXPECT(gbc.readMem(0xcc1e), 0x68);
        // CD 013A
        gbc.setState(0x452d, 0x8a54, 0xf140, 0x5582, 0x4792, 0x2035, 0x1, 0x0);
        gbc.writeMem(0x452d, { 0xcd, 0xda, 0x2b });
        gbc.writeMem(0x8a52, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8a52);
        EXPECT(gbc.pc(), 0x2bda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a52), 0x30);
        EXPECT(gbc.readMem(0x8a53), 0x45);
        // CD 013B
        gbc.setState(0x5f8e, 0xbc5f, 0x4020, 0x3982, 0xd0b6, 0x39a8, 0x0, 0x0);
        gbc.writeMem(0x5f8e, { 0xcd, 0xf9, 0x17 });
        gbc.writeMem(0xbc5d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xbc5d);
        EXPECT(gbc.pc(), 0x17f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc5d), 0x91);
        EXPECT(gbc.readMem(0xbc5e), 0x5f);
        // CD 0143
        gbc.setState(0x495f, 0xc6af, 0x4140, 0x5000, 0x27f5, 0x9910, 0x0, 0x1);
        gbc.writeMem(0x495f, { 0xcd, 0xf8, 0x1a });
        gbc.writeMem(0xc6ad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc6ad);
        EXPECT(gbc.pc(), 0x1af8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ad), 0x62);
        EXPECT(gbc.readMem(0xc6ae), 0x49);
        // CD 0147
        gbc.setState(0x3da8, 0x9e37, 0x12e0, 0xed, 0xd53, 0x9d50, 0x1, 0x0);
        gbc.writeMem(0x3da8, { 0xcd, 0xbe, 0x7a });
        gbc.writeMem(0x9e35, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9e35);
        EXPECT(gbc.pc(), 0x7abe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e35), 0xab);
        EXPECT(gbc.readMem(0x9e36), 0x3d);
        // CD 0148
        gbc.setState(0x5241, 0xdeb2, 0xde0, 0xdbdd, 0x7401, 0x16ba, 0x0, 0x0);
        gbc.writeMem(0x5241, { 0xcd, 0x77, 0x7f });
        gbc.writeMem(0xdeb0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xdeb0);
        EXPECT(gbc.pc(), 0x7f77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeb0), 0x44);
        EXPECT(gbc.readMem(0xdeb1), 0x52);
        // CD 0149
        gbc.setState(0x505d, 0x8a5c, 0x40a0, 0xd030, 0x29cc, 0x8221, 0x0, 0x0);
        gbc.writeMem(0x505d, { 0xcd, 0x10, 0x2d });
        gbc.writeMem(0x8a5a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8a5a);
        EXPECT(gbc.pc(), 0x2d10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a5a), 0x60);
        EXPECT(gbc.readMem(0x8a5b), 0x50);
        // CD 014A
        gbc.setState(0x70e0, 0xfc4a, 0xe2d0, 0xf926, 0x1495, 0x3492, 0x1, 0x1);
        gbc.writeMem(0x70e0, { 0xcd, 0xfb, 0x3e });
        gbc.writeMem(0xfc48, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfc48);
        EXPECT(gbc.pc(), 0x3efb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc48), 0xe3);
        EXPECT(gbc.readMem(0xfc49), 0x70);
        // CD 014B
        gbc.setState(0x9ed2, 0xbc7b, 0x1c0, 0xea8a, 0x414d, 0x7887, 0x0, 0x0);
        gbc.writeMem(0x9ed2, { 0xcd, 0xf5, 0x36 });
        gbc.writeMem(0xbc79, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xbc79);
        EXPECT(gbc.pc(), 0x36f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ed2), 0xcd);
        EXPECT(gbc.readMem(0x9ed3), 0xf5);
        EXPECT(gbc.readMem(0x9ed4), 0x36);
        EXPECT(gbc.readMem(0xbc79), 0xd5);
        EXPECT(gbc.readMem(0xbc7a), 0x9e);
        // CD 014D
        gbc.setState(0xb141, 0xecaa, 0x1080, 0x5e92, 0xee75, 0xc9e5, 0x1, 0x1);
        gbc.writeMem(0xb141, { 0xcd, 0x14, 0xd7 });
        gbc.writeMem(0xeca8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xeca8);
        EXPECT(gbc.pc(), 0xd714);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb141), 0xcd);
        EXPECT(gbc.readMem(0xb142), 0x14);
        EXPECT(gbc.readMem(0xb143), 0xd7);
        EXPECT(gbc.readMem(0xeca8), 0x44);
        EXPECT(gbc.readMem(0xeca9), 0xb1);
        // CD 0150
        gbc.setState(0xad2, 0x9c86, 0x2940, 0xf785, 0x85f5, 0xfc6f, 0x0, 0x1);
        gbc.writeMem(0xad2, { 0xcd, 0xe5, 0x7c });
        gbc.writeMem(0x9c84, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9c84);
        EXPECT(gbc.pc(), 0x7ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c84), 0xd5);
        EXPECT(gbc.readMem(0x9c85), 0xa);
        // CD 0151
        gbc.setState(0xde78, 0xf73a, 0xa870, 0xaa81, 0x92c0, 0x4f23, 0x0, 0x1);
        gbc.writeMem(0xde78, { 0xcd, 0x8c, 0xbe });
        gbc.writeMem(0xf738, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf738);
        EXPECT(gbc.pc(), 0xbe8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde78), 0xcd);
        EXPECT(gbc.readMem(0xde79), 0x8c);
        EXPECT(gbc.readMem(0xde7a), 0xbe);
        EXPECT(gbc.readMem(0xf738), 0x7b);
        EXPECT(gbc.readMem(0xf739), 0xde);
        // CD 0154
        gbc.setState(0x692a, 0xad77, 0xf920, 0xd570, 0xbd8d, 0xfbfd, 0x0, 0x0);
        gbc.writeMem(0x692a, { 0xcd, 0xa3, 0xb1 });
        gbc.writeMem(0xad75, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xad75);
        EXPECT(gbc.pc(), 0xb1a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad75), 0x2d);
        EXPECT(gbc.readMem(0xad76), 0x69);
        // CD 0156
        gbc.setState(0x631a, 0xc426, 0xbde0, 0xba39, 0xdf6c, 0x7da8, 0x0, 0x1);
        gbc.writeMem(0x631a, { 0xcd, 0x48, 0x83 });
        gbc.writeMem(0xc424, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc424);
        EXPECT(gbc.pc(), 0x8348);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc424), 0x1d);
        EXPECT(gbc.readMem(0xc425), 0x63);
        // CD 0158
        gbc.setState(0x4ca7, 0xf104, 0x88a0, 0x90c3, 0xd3b7, 0xa137, 0x1, 0x1);
        gbc.writeMem(0x4ca7, { 0xcd, 0x82, 0xdf });
        gbc.writeMem(0xf102, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf102);
        EXPECT(gbc.pc(), 0xdf82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf102), 0xaa);
        EXPECT(gbc.readMem(0xf103), 0x4c);
        // CD 0159
        gbc.setState(0x8fa, 0xc608, 0xf540, 0xf4c9, 0x4e43, 0x6b38, 0x0, 0x0);
        gbc.writeMem(0x8fa, { 0xcd, 0xa1, 0x24 });
        gbc.writeMem(0xc606, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc606);
        EXPECT(gbc.pc(), 0x24a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc606), 0xfd);
        EXPECT(gbc.readMem(0xc607), 0x8);
        // CD 015A
        gbc.setState(0xcf65, 0xd0ad, 0x9780, 0x7662, 0xe2e5, 0x9075, 0x0, 0x0);
        gbc.writeMem(0xcf65, { 0xcd, 0xfe, 0x36 });
        gbc.writeMem(0xd0ab, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd0ab);
        EXPECT(gbc.pc(), 0x36fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf65), 0xcd);
        EXPECT(gbc.readMem(0xcf66), 0xfe);
        EXPECT(gbc.readMem(0xcf67), 0x36);
        EXPECT(gbc.readMem(0xd0ab), 0x68);
        EXPECT(gbc.readMem(0xd0ac), 0xcf);
        // CD 015C
        gbc.setState(0x770c, 0xb3a2, 0x83b0, 0x7803, 0xca6e, 0x6349, 0x1, 0x0);
        gbc.writeMem(0x770c, { 0xcd, 0x7c, 0x2a });
        gbc.writeMem(0xb3a0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb3a0);
        EXPECT(gbc.pc(), 0x2a7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3a0), 0xf);
        EXPECT(gbc.readMem(0xb3a1), 0x77);
        // CD 015E
        gbc.setState(0xab72, 0x838f, 0x1730, 0x1079, 0xf25a, 0x557, 0x0, 0x1);
        gbc.writeMem(0x838d, { 0x0, 0x0 });
        gbc.writeMem(0xab72, { 0xcd, 0x68, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x838d);
        EXPECT(gbc.pc(), 0x7968);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x838d), 0x75);
        EXPECT(gbc.readMem(0x838e), 0xab);
        EXPECT(gbc.readMem(0xab72), 0xcd);
        EXPECT(gbc.readMem(0xab73), 0x68);
        EXPECT(gbc.readMem(0xab74), 0x79);
        // CD 0160
        gbc.setState(0x7c02, 0x98fa, 0x8ab0, 0x154b, 0xd365, 0x2628, 0x0, 0x1);
        gbc.writeMem(0x7c02, { 0xcd, 0x25, 0x49 });
        gbc.writeMem(0x98f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x98f8);
        EXPECT(gbc.pc(), 0x4925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f8), 0x5);
        EXPECT(gbc.readMem(0x98f9), 0x7c);
        // CD 0162
        gbc.setState(0x8782, 0xb719, 0x3400, 0xb7c2, 0xd1d2, 0xa84a, 0x0, 0x0);
        gbc.writeMem(0x8782, { 0xcd, 0xf3, 0x5 });
        gbc.writeMem(0xb717, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb717);
        EXPECT(gbc.pc(), 0x5f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8782), 0xcd);
        EXPECT(gbc.readMem(0x8783), 0xf3);
        EXPECT(gbc.readMem(0x8784), 0x5);
        EXPECT(gbc.readMem(0xb717), 0x85);
        EXPECT(gbc.readMem(0xb718), 0x87);
        // CD 0163
        gbc.setState(0x27d8, 0xced2, 0x1260, 0x1590, 0x1fd9, 0xa467, 0x1, 0x1);
        gbc.writeMem(0x27d8, { 0xcd, 0xec, 0x30 });
        gbc.writeMem(0xced0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xced0);
        EXPECT(gbc.pc(), 0x30ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced0), 0xdb);
        EXPECT(gbc.readMem(0xced1), 0x27);
        // CD 0164
        gbc.setState(0x774d, 0xa2d2, 0x6a80, 0xc034, 0x4ed2, 0xbe26, 0x0, 0x0);
        gbc.writeMem(0x774d, { 0xcd, 0x72, 0xf1 });
        gbc.writeMem(0xa2d0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa2d0);
        EXPECT(gbc.pc(), 0xf172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d0), 0x50);
        EXPECT(gbc.readMem(0xa2d1), 0x77);
        // CD 0165
        gbc.setState(0x90cc, 0xfd18, 0x9f60, 0xd2e3, 0x2e22, 0xad5e, 0x0, 0x0);
        gbc.writeMem(0x90cc, { 0xcd, 0x59, 0xc });
        gbc.writeMem(0xfd16, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xfd16);
        EXPECT(gbc.pc(), 0xc59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90cc), 0xcd);
        EXPECT(gbc.readMem(0x90cd), 0x59);
        EXPECT(gbc.readMem(0x90ce), 0xc);
        EXPECT(gbc.readMem(0xfd16), 0xcf);
        EXPECT(gbc.readMem(0xfd17), 0x90);
        // CD 0167
        gbc.setState(0x1aea, 0xa6b0, 0x23f0, 0x3f26, 0xb52a, 0xd582, 0x1, 0x1);
        gbc.writeMem(0x1aea, { 0xcd, 0x4c, 0xb4 });
        gbc.writeMem(0xa6ae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa6ae);
        EXPECT(gbc.pc(), 0xb44c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ae), 0xed);
        EXPECT(gbc.readMem(0xa6af), 0x1a);
        // CD 0168
        gbc.setState(0x15e7, 0x8cc8, 0xc150, 0x99c7, 0x6ce1, 0xe40a, 0x1, 0x0);
        gbc.writeMem(0x15e7, { 0xcd, 0xed, 0x47 });
        gbc.writeMem(0x8cc6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8cc6);
        EXPECT(gbc.pc(), 0x47ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc6), 0xea);
        EXPECT(gbc.readMem(0x8cc7), 0x15);
        // CD 0169
        gbc.setState(0x5250, 0xe5c8, 0xa360, 0x447c, 0x60b8, 0xbdab, 0x1, 0x1);
        gbc.writeMem(0x5250, { 0xcd, 0xbc, 0x92 });
        gbc.writeMem(0xe5c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe5c6);
        EXPECT(gbc.pc(), 0x92bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5c6), 0x53);
        EXPECT(gbc.readMem(0xe5c7), 0x52);
        // CD 016A
        gbc.setState(0xd3b5, 0x8fed, 0x5cd0, 0x7c70, 0xc72e, 0x2699, 0x0, 0x1);
        gbc.writeMem(0x8feb, { 0x0, 0x0 });
        gbc.writeMem(0xd3b5, { 0xcd, 0xfa, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8feb);
        EXPECT(gbc.pc(), 0xe4fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8feb), 0xb8);
        EXPECT(gbc.readMem(0x8fec), 0xd3);
        EXPECT(gbc.readMem(0xd3b5), 0xcd);
        EXPECT(gbc.readMem(0xd3b6), 0xfa);
        EXPECT(gbc.readMem(0xd3b7), 0xe4);
        // CD 016B
        gbc.setState(0xcdbb, 0xa2a3, 0xe290, 0x3a76, 0x12ff, 0xd01c, 0x1, 0x1);
        gbc.writeMem(0xa2a1, { 0x0, 0x0 });
        gbc.writeMem(0xcdbb, { 0xcd, 0xa2, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa2a1);
        EXPECT(gbc.pc(), 0xafa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2a1), 0xbe);
        EXPECT(gbc.readMem(0xa2a2), 0xcd);
        EXPECT(gbc.readMem(0xcdbb), 0xcd);
        EXPECT(gbc.readMem(0xcdbc), 0xa2);
        EXPECT(gbc.readMem(0xcdbd), 0xaf);
        // CD 016C
        gbc.setState(0x6dc5, 0x9caa, 0x8870, 0x6c80, 0x60c8, 0x4444, 0x1, 0x1);
        gbc.writeMem(0x6dc5, { 0xcd, 0xc, 0xfa });
        gbc.writeMem(0x9ca8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9ca8);
        EXPECT(gbc.pc(), 0xfa0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca8), 0xc8);
        EXPECT(gbc.readMem(0x9ca9), 0x6d);
        // CD 016E
        gbc.setState(0xeb0e, 0xd9c2, 0x6fb0, 0x192b, 0xf144, 0x26b3, 0x0, 0x0);
        gbc.writeMem(0xd9c0, { 0x0, 0x0 });
        gbc.writeMem(0xeb0e, { 0xcd, 0xa1, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd9c0);
        EXPECT(gbc.pc(), 0x42a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9c0), 0x11);
        EXPECT(gbc.readMem(0xd9c1), 0xeb);
        EXPECT(gbc.readMem(0xeb0e), 0xcd);
        EXPECT(gbc.readMem(0xeb0f), 0xa1);
        EXPECT(gbc.readMem(0xeb10), 0x42);
        // CD 0171
        gbc.setState(0x5650, 0x85e9, 0x31d0, 0x9f, 0x5d30, 0x6df, 0x0, 0x0);
        gbc.writeMem(0x5650, { 0xcd, 0x58, 0xaf });
        gbc.writeMem(0x85e7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x85e7);
        EXPECT(gbc.pc(), 0xaf58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85e7), 0x53);
        EXPECT(gbc.readMem(0x85e8), 0x56);
        // CD 0173
        gbc.setState(0x4607, 0xd7be, 0xe8b0, 0xda56, 0xc2de, 0x1fa4, 0x1, 0x1);
        gbc.writeMem(0x4607, { 0xcd, 0x35, 0x7d });
        gbc.writeMem(0xd7bc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd7bc);
        EXPECT(gbc.pc(), 0x7d35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7bc), 0xa);
        EXPECT(gbc.readMem(0xd7bd), 0x46);
        // CD 0176
        gbc.setState(0x1119, 0x9356, 0x2ca0, 0x3fa3, 0x8e95, 0x654b, 0x1, 0x1);
        gbc.writeMem(0x1119, { 0xcd, 0x1b, 0x6e });
        gbc.writeMem(0x9354, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9354);
        EXPECT(gbc.pc(), 0x6e1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9354), 0x1c);
        EXPECT(gbc.readMem(0x9355), 0x11);
        // CD 0177
        gbc.setState(0x768e, 0x85e0, 0x60b0, 0xef9c, 0x2a02, 0xe669, 0x0, 0x0);
        gbc.writeMem(0x768e, { 0xcd, 0x7b, 0xdd });
        gbc.writeMem(0x85de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x85de);
        EXPECT(gbc.pc(), 0xdd7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85de), 0x91);
        EXPECT(gbc.readMem(0x85df), 0x76);
        // CD 0179
        gbc.setState(0xe315, 0xdad6, 0xfb70, 0xe15b, 0x184, 0xf631, 0x0, 0x1);
        gbc.writeMem(0xdad4, { 0x0, 0x0 });
        gbc.writeMem(0xe315, { 0xcd, 0x2f, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdad4);
        EXPECT(gbc.pc(), 0xcf2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdad4), 0x18);
        EXPECT(gbc.readMem(0xdad5), 0xe3);
        EXPECT(gbc.readMem(0xe315), 0xcd);
        EXPECT(gbc.readMem(0xe316), 0x2f);
        EXPECT(gbc.readMem(0xe317), 0xcf);
        // CD 017A
        gbc.setState(0xc857, 0xef36, 0x74a0, 0x74a9, 0xc69b, 0x8a5a, 0x0, 0x1);
        gbc.writeMem(0xc857, { 0xcd, 0x3, 0x7f });
        gbc.writeMem(0xef34, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xef34);
        EXPECT(gbc.pc(), 0x7f03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc857), 0xcd);
        EXPECT(gbc.readMem(0xc858), 0x3);
        EXPECT(gbc.readMem(0xc859), 0x7f);
        EXPECT(gbc.readMem(0xef34), 0x5a);
        EXPECT(gbc.readMem(0xef35), 0xc8);
        // CD 017E
        gbc.setState(0x68db, 0x8a5c, 0x9c30, 0x8200, 0x7b10, 0x2335, 0x0, 0x0);
        gbc.writeMem(0x68db, { 0xcd, 0x3c, 0x87 });
        gbc.writeMem(0x8a5a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8a5a);
        EXPECT(gbc.pc(), 0x873c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a5a), 0xde);
        EXPECT(gbc.readMem(0x8a5b), 0x68);
        // CD 0182
        gbc.setState(0xa052, 0xd75b, 0x95a0, 0xe7ed, 0xbb12, 0xa822, 0x0, 0x0);
        gbc.writeMem(0xa052, { 0xcd, 0x35, 0x67 });
        gbc.writeMem(0xd759, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd759);
        EXPECT(gbc.pc(), 0x6735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa052), 0xcd);
        EXPECT(gbc.readMem(0xa053), 0x35);
        EXPECT(gbc.readMem(0xa054), 0x67);
        EXPECT(gbc.readMem(0xd759), 0x55);
        EXPECT(gbc.readMem(0xd75a), 0xa0);
        // CD 0183
        gbc.setState(0x9ad6, 0xcd89, 0x6fe0, 0xfd84, 0xc1b7, 0xd575, 0x0, 0x1);
        gbc.writeMem(0x9ad6, { 0xcd, 0x13, 0x55 });
        gbc.writeMem(0xcd87, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xcd87);
        EXPECT(gbc.pc(), 0x5513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad6), 0xcd);
        EXPECT(gbc.readMem(0x9ad7), 0x13);
        EXPECT(gbc.readMem(0x9ad8), 0x55);
        EXPECT(gbc.readMem(0xcd87), 0xd9);
        EXPECT(gbc.readMem(0xcd88), 0x9a);
        // CD 0187
        gbc.setState(0x7cbd, 0x8687, 0x16b0, 0x4849, 0x7638, 0xe1dc, 0x0, 0x0);
        gbc.writeMem(0x7cbd, { 0xcd, 0x65, 0x1 });
        gbc.writeMem(0x8685, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8685);
        EXPECT(gbc.pc(), 0x165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8685), 0xc0);
        EXPECT(gbc.readMem(0x8686), 0x7c);
        // CD 018A
        gbc.setState(0x6754, 0xbe03, 0xbef0, 0xa182, 0xc8d, 0x67b1, 0x1, 0x1);
        gbc.writeMem(0x6754, { 0xcd, 0x7f, 0xf0 });
        gbc.writeMem(0xbe01, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbe01);
        EXPECT(gbc.pc(), 0xf07f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe01), 0x57);
        EXPECT(gbc.readMem(0xbe02), 0x67);
        // CD 018D
        gbc.setState(0x8449, 0xfcc0, 0xfef0, 0x76b0, 0x92e3, 0xdab6, 0x1, 0x1);
        gbc.writeMem(0x8449, { 0xcd, 0xc4, 0xbb });
        gbc.writeMem(0xfcbe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xfcbe);
        EXPECT(gbc.pc(), 0xbbc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8449), 0xcd);
        EXPECT(gbc.readMem(0x844a), 0xc4);
        EXPECT(gbc.readMem(0x844b), 0xbb);
        EXPECT(gbc.readMem(0xfcbe), 0x4c);
        EXPECT(gbc.readMem(0xfcbf), 0x84);
        // CD 018E
        gbc.setState(0x7da7, 0xb9b1, 0xcff0, 0x6fca, 0xf949, 0xdfd3, 0x0, 0x0);
        gbc.writeMem(0x7da7, { 0xcd, 0xf8, 0xdf });
        gbc.writeMem(0xb9af, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb9af);
        EXPECT(gbc.pc(), 0xdff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9af), 0xaa);
        EXPECT(gbc.readMem(0xb9b0), 0x7d);
        // CD 018F
        gbc.setState(0xad11, 0xa610, 0x5c30, 0x901b, 0x8fbb, 0x63ec, 0x1, 0x0);
        gbc.writeMem(0xa60e, { 0x0, 0x0 });
        gbc.writeMem(0xad11, { 0xcd, 0xee, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa60e);
        EXPECT(gbc.pc(), 0xb6ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa60e), 0x14);
        EXPECT(gbc.readMem(0xa60f), 0xad);
        EXPECT(gbc.readMem(0xad11), 0xcd);
        EXPECT(gbc.readMem(0xad12), 0xee);
        EXPECT(gbc.readMem(0xad13), 0xb6);
        // CD 0191
        gbc.setState(0xc94d, 0xe5d6, 0x6d20, 0xc97c, 0xb074, 0x50a4, 0x0, 0x1);
        gbc.writeMem(0xc94d, { 0xcd, 0x5b, 0xb });
        gbc.writeMem(0xe5d4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe5d4);
        EXPECT(gbc.pc(), 0xb5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc94d), 0xcd);
        EXPECT(gbc.readMem(0xc94e), 0x5b);
        EXPECT(gbc.readMem(0xc94f), 0xb);
        EXPECT(gbc.readMem(0xe5d4), 0x50);
        EXPECT(gbc.readMem(0xe5d5), 0xc9);
        // CD 0193
        gbc.setState(0xc9ee, 0xb753, 0x20f0, 0x8364, 0xbec9, 0x8e34, 0x0, 0x0);
        gbc.writeMem(0xb751, { 0x0, 0x0 });
        gbc.writeMem(0xc9ee, { 0xcd, 0x9a, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb751);
        EXPECT(gbc.pc(), 0x7b9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb751), 0xf1);
        EXPECT(gbc.readMem(0xb752), 0xc9);
        EXPECT(gbc.readMem(0xc9ee), 0xcd);
        EXPECT(gbc.readMem(0xc9ef), 0x9a);
        EXPECT(gbc.readMem(0xc9f0), 0x7b);
        // CD 019B
        gbc.setState(0x89, 0xaaee, 0x8390, 0xad89, 0xf4f8, 0xa664, 0x0, 0x0);
        gbc.writeMem(0x89, { 0xcd, 0xce, 0x6e });
        gbc.writeMem(0xaaec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xaaec);
        EXPECT(gbc.pc(), 0x6ece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaec), 0x8c);
        EXPECT(gbc.readMem(0xaaed), 0x0);
        // CD 019D
        gbc.setState(0x3807, 0xa3d7, 0xbdf0, 0x7079, 0x60e8, 0x708b, 0x1, 0x1);
        gbc.writeMem(0x3807, { 0xcd, 0xe, 0x93 });
        gbc.writeMem(0xa3d5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa3d5);
        EXPECT(gbc.pc(), 0x930e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3d5), 0xa);
        EXPECT(gbc.readMem(0xa3d6), 0x38);
        // CD 01A1
        gbc.setState(0x8d83, 0x8326, 0xb620, 0x2df7, 0xbbdd, 0x1686, 0x1, 0x0);
        gbc.writeMem(0x8324, { 0x0, 0x0 });
        gbc.writeMem(0x8d83, { 0xcd, 0xfb, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8324);
        EXPECT(gbc.pc(), 0x5dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8324), 0x86);
        EXPECT(gbc.readMem(0x8325), 0x8d);
        EXPECT(gbc.readMem(0x8d83), 0xcd);
        EXPECT(gbc.readMem(0x8d84), 0xfb);
        EXPECT(gbc.readMem(0x8d85), 0x5d);
        // CD 01A2
        gbc.setState(0x9c4f, 0x99ff, 0xeec0, 0x4fa7, 0x9d87, 0x995c, 0x1, 0x0);
        gbc.writeMem(0x99fd, { 0x0, 0x0 });
        gbc.writeMem(0x9c4f, { 0xcd, 0x46, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x99fd);
        EXPECT(gbc.pc(), 0x5146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99fd), 0x52);
        EXPECT(gbc.readMem(0x99fe), 0x9c);
        EXPECT(gbc.readMem(0x9c4f), 0xcd);
        EXPECT(gbc.readMem(0x9c50), 0x46);
        EXPECT(gbc.readMem(0x9c51), 0x51);
        // CD 01A8
        gbc.setState(0x7980, 0xd347, 0x5540, 0x223c, 0xf4de, 0x1fe, 0x1, 0x1);
        gbc.writeMem(0x7980, { 0xcd, 0xde, 0xfc });
        gbc.writeMem(0xd345, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd345);
        EXPECT(gbc.pc(), 0xfcde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd345), 0x83);
        EXPECT(gbc.readMem(0xd346), 0x79);
        // CD 01A9
        gbc.setState(0xa205, 0x9277, 0xdd80, 0x1c0e, 0xf987, 0x8458, 0x1, 0x0);
        gbc.writeMem(0x9275, { 0x0, 0x0 });
        gbc.writeMem(0xa205, { 0xcd, 0x11, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9275);
        EXPECT(gbc.pc(), 0x5a11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9275), 0x8);
        EXPECT(gbc.readMem(0x9276), 0xa2);
        EXPECT(gbc.readMem(0xa205), 0xcd);
        EXPECT(gbc.readMem(0xa206), 0x11);
        EXPECT(gbc.readMem(0xa207), 0x5a);
        // CD 01AA
        gbc.setState(0xee63, 0xf729, 0x53a0, 0x3089, 0xc08f, 0x19f6, 0x1, 0x0);
        gbc.writeMem(0xee63, { 0xcd, 0xd7, 0x68 });
        gbc.writeMem(0xf727, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf727);
        EXPECT(gbc.pc(), 0x68d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee63), 0xcd);
        EXPECT(gbc.readMem(0xee64), 0xd7);
        EXPECT(gbc.readMem(0xee65), 0x68);
        EXPECT(gbc.readMem(0xf727), 0x66);
        EXPECT(gbc.readMem(0xf728), 0xee);
        // CD 01AB
        gbc.setState(0x364, 0xe1da, 0x4f0, 0x4e68, 0x7080, 0x3060, 0x1, 0x1);
        gbc.writeMem(0x364, { 0xcd, 0xc, 0x77 });
        gbc.writeMem(0xe1d8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe1d8);
        EXPECT(gbc.pc(), 0x770c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1d8), 0x67);
        EXPECT(gbc.readMem(0xe1d9), 0x3);
        // CD 01AC
        gbc.setState(0xab6a, 0x882a, 0x58a0, 0xe70, 0x7376, 0x458c, 0x1, 0x1);
        gbc.writeMem(0x8828, { 0x0, 0x0 });
        gbc.writeMem(0xab6a, { 0xcd, 0x94, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8828);
        EXPECT(gbc.pc(), 0xf594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8828), 0x6d);
        EXPECT(gbc.readMem(0x8829), 0xab);
        EXPECT(gbc.readMem(0xab6a), 0xcd);
        EXPECT(gbc.readMem(0xab6b), 0x94);
        EXPECT(gbc.readMem(0xab6c), 0xf5);
        // CD 01AE
        gbc.setState(0x4d57, 0x953b, 0x6b10, 0xa2bc, 0xc6be, 0x394, 0x0, 0x0);
        gbc.writeMem(0x4d57, { 0xcd, 0x4a, 0x30 });
        gbc.writeMem(0x9539, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9539);
        EXPECT(gbc.pc(), 0x304a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9539), 0x5a);
        EXPECT(gbc.readMem(0x953a), 0x4d);
        // CD 01AF
        gbc.setState(0xba6f, 0x95f1, 0x6540, 0x4ce0, 0xc8a8, 0x6566, 0x1, 0x0);
        gbc.writeMem(0x95ef, { 0x0, 0x0 });
        gbc.writeMem(0xba6f, { 0xcd, 0xc4, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x95ef);
        EXPECT(gbc.pc(), 0xa9c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ef), 0x72);
        EXPECT(gbc.readMem(0x95f0), 0xba);
        EXPECT(gbc.readMem(0xba6f), 0xcd);
        EXPECT(gbc.readMem(0xba70), 0xc4);
        EXPECT(gbc.readMem(0xba71), 0xa9);
        // CD 01B1
        gbc.setState(0xd87f, 0xb965, 0xed70, 0x1bde, 0xe57e, 0x14a1, 0x1, 0x0);
        gbc.writeMem(0xb963, { 0x0, 0x0 });
        gbc.writeMem(0xd87f, { 0xcd, 0x3f, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb963);
        EXPECT(gbc.pc(), 0x2c3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb963), 0x82);
        EXPECT(gbc.readMem(0xb964), 0xd8);
        EXPECT(gbc.readMem(0xd87f), 0xcd);
        EXPECT(gbc.readMem(0xd880), 0x3f);
        EXPECT(gbc.readMem(0xd881), 0x2c);
        // CD 01B2
        gbc.setState(0x2d3, 0xf435, 0xff0, 0xcf9b, 0xc952, 0x8004, 0x0, 0x0);
        gbc.writeMem(0x2d3, { 0xcd, 0xdf, 0xa6 });
        gbc.writeMem(0xf433, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf433);
        EXPECT(gbc.pc(), 0xa6df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf433), 0xd6);
        EXPECT(gbc.readMem(0xf434), 0x2);
        // CD 01B3
        gbc.setState(0xa617, 0xbd12, 0xf660, 0x85b9, 0x56ce, 0x6412, 0x1, 0x1);
        gbc.writeMem(0xa617, { 0xcd, 0xfb, 0x66 });
        gbc.writeMem(0xbd10, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xbd10);
        EXPECT(gbc.pc(), 0x66fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa617), 0xcd);
        EXPECT(gbc.readMem(0xa618), 0xfb);
        EXPECT(gbc.readMem(0xa619), 0x66);
        EXPECT(gbc.readMem(0xbd10), 0x1a);
        EXPECT(gbc.readMem(0xbd11), 0xa6);
        // CD 01B4
        gbc.setState(0xda28, 0xbe96, 0xe060, 0x1424, 0x665d, 0x8ccf, 0x0, 0x1);
        gbc.writeMem(0xbe94, { 0x0, 0x0 });
        gbc.writeMem(0xda28, { 0xcd, 0x25, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbe94);
        EXPECT(gbc.pc(), 0x3725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe94), 0x2b);
        EXPECT(gbc.readMem(0xbe95), 0xda);
        EXPECT(gbc.readMem(0xda28), 0xcd);
        EXPECT(gbc.readMem(0xda29), 0x25);
        EXPECT(gbc.readMem(0xda2a), 0x37);
        // CD 01B7
        gbc.setState(0xbd8f, 0x8e8d, 0x1b40, 0xe69, 0xacb2, 0xf8c2, 0x0, 0x0);
        gbc.writeMem(0x8e8b, { 0x0, 0x0 });
        gbc.writeMem(0xbd8f, { 0xcd, 0x29, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8e8b);
        EXPECT(gbc.pc(), 0xb129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e8b), 0x92);
        EXPECT(gbc.readMem(0x8e8c), 0xbd);
        EXPECT(gbc.readMem(0xbd8f), 0xcd);
        EXPECT(gbc.readMem(0xbd90), 0x29);
        EXPECT(gbc.readMem(0xbd91), 0xb1);
        // CD 01B8
        gbc.setState(0xa106, 0xad8a, 0x34f0, 0x4d75, 0xb276, 0x4db2, 0x1, 0x1);
        gbc.writeMem(0xa106, { 0xcd, 0x1d, 0x2 });
        gbc.writeMem(0xad88, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xad88);
        EXPECT(gbc.pc(), 0x21d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa106), 0xcd);
        EXPECT(gbc.readMem(0xa107), 0x1d);
        EXPECT(gbc.readMem(0xa108), 0x2);
        EXPECT(gbc.readMem(0xad88), 0x9);
        EXPECT(gbc.readMem(0xad89), 0xa1);
        // CD 01B9
        gbc.setState(0x2405, 0xf452, 0xdb40, 0xd185, 0x18bf, 0x6099, 0x0, 0x0);
        gbc.writeMem(0x2405, { 0xcd, 0x70, 0xea });
        gbc.writeMem(0xf450, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf450);
        EXPECT(gbc.pc(), 0xea70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf450), 0x8);
        EXPECT(gbc.readMem(0xf451), 0x24);
        // CD 01BD
        gbc.setState(0x83b0, 0xe8ed, 0x1430, 0xb4bb, 0x4694, 0x2f02, 0x0, 0x1);
        gbc.writeMem(0x83b0, { 0xcd, 0x78, 0xf2 });
        gbc.writeMem(0xe8eb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe8eb);
        EXPECT(gbc.pc(), 0xf278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83b0), 0xcd);
        EXPECT(gbc.readMem(0x83b1), 0x78);
        EXPECT(gbc.readMem(0x83b2), 0xf2);
        EXPECT(gbc.readMem(0xe8eb), 0xb3);
        EXPECT(gbc.readMem(0xe8ec), 0x83);
        // CD 01BE
        gbc.setState(0x40c8, 0xa221, 0x7800, 0xfd56, 0xe6c9, 0x8cb5, 0x1, 0x0);
        gbc.writeMem(0x40c8, { 0xcd, 0x82, 0x4c });
        gbc.writeMem(0xa21f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa21f);
        EXPECT(gbc.pc(), 0x4c82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa21f), 0xcb);
        EXPECT(gbc.readMem(0xa220), 0x40);
        // CD 01BF
        gbc.setState(0x12d0, 0xedc5, 0x50a0, 0x8a14, 0x897d, 0xfa5e, 0x1, 0x0);
        gbc.writeMem(0x12d0, { 0xcd, 0xd7, 0x2e });
        gbc.writeMem(0xedc3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xedc3);
        EXPECT(gbc.pc(), 0x2ed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedc3), 0xd3);
        EXPECT(gbc.readMem(0xedc4), 0x12);
        // CD 01C3
        gbc.setState(0xc942, 0xf836, 0x2e30, 0x9a8c, 0x3d79, 0xc7cb, 0x1, 0x1);
        gbc.writeMem(0xc942, { 0xcd, 0xdc, 0x8 });
        gbc.writeMem(0xf834, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf834);
        EXPECT(gbc.pc(), 0x8dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc942), 0xcd);
        EXPECT(gbc.readMem(0xc943), 0xdc);
        EXPECT(gbc.readMem(0xc944), 0x8);
        EXPECT(gbc.readMem(0xf834), 0x45);
        EXPECT(gbc.readMem(0xf835), 0xc9);
        // CD 01C5
        gbc.setState(0x1e61, 0xdf5a, 0xbe10, 0x702b, 0xe317, 0xc5c, 0x0, 0x1);
        gbc.writeMem(0x1e61, { 0xcd, 0x89, 0x3f });
        gbc.writeMem(0xdf58, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xdf58);
        EXPECT(gbc.pc(), 0x3f89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf58), 0x64);
        EXPECT(gbc.readMem(0xdf59), 0x1e);
        // CD 01C8
        gbc.setState(0x2cee, 0xf80f, 0x9b70, 0x78c4, 0x78f9, 0x6a79, 0x1, 0x0);
        gbc.writeMem(0x2cee, { 0xcd, 0x19, 0x78 });
        gbc.writeMem(0xf80d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf80d);
        EXPECT(gbc.pc(), 0x7819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf80d), 0xf1);
        EXPECT(gbc.readMem(0xf80e), 0x2c);
        // CD 01C9
        gbc.setState(0x6daf, 0xc7fd, 0x3010, 0x36cd, 0x2353, 0x3158, 0x0, 0x1);
        gbc.writeMem(0x6daf, { 0xcd, 0x8d, 0x43 });
        gbc.writeMem(0xc7fb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc7fb);
        EXPECT(gbc.pc(), 0x438d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7fb), 0xb2);
        EXPECT(gbc.readMem(0xc7fc), 0x6d);
        // CD 01CA
        gbc.setState(0x6366, 0x879e, 0xd8c0, 0x4629, 0x70fa, 0xffe0, 0x1, 0x1);
        gbc.writeMem(0x6366, { 0xcd, 0x6c, 0x6f });
        gbc.writeMem(0x879c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x879c);
        EXPECT(gbc.pc(), 0x6f6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x879c), 0x69);
        EXPECT(gbc.readMem(0x879d), 0x63);
        // CD 01CB
        gbc.setState(0xc6a4, 0xc99b, 0xe840, 0x3823, 0x1a56, 0x2996, 0x1, 0x1);
        gbc.writeMem(0xc6a4, { 0xcd, 0x28, 0x1f });
        gbc.writeMem(0xc999, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc999);
        EXPECT(gbc.pc(), 0x1f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6a4), 0xcd);
        EXPECT(gbc.readMem(0xc6a5), 0x28);
        EXPECT(gbc.readMem(0xc6a6), 0x1f);
        EXPECT(gbc.readMem(0xc999), 0xa7);
        EXPECT(gbc.readMem(0xc99a), 0xc6);
        // CD 01CD
        gbc.setState(0xdd8f, 0x9dc0, 0x4940, 0xf2a4, 0x10a8, 0x994e, 0x1, 0x1);
        gbc.writeMem(0x9dbe, { 0x0, 0x0 });
        gbc.writeMem(0xdd8f, { 0xcd, 0xc9, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9dbe);
        EXPECT(gbc.pc(), 0x6fc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dbe), 0x92);
        EXPECT(gbc.readMem(0x9dbf), 0xdd);
        EXPECT(gbc.readMem(0xdd8f), 0xcd);
        EXPECT(gbc.readMem(0xdd90), 0xc9);
        EXPECT(gbc.readMem(0xdd91), 0x6f);
        // CD 01CE
        gbc.setState(0x6235, 0xc723, 0x10c0, 0xca12, 0x96e4, 0x219d, 0x1, 0x0);
        gbc.writeMem(0x6235, { 0xcd, 0x7e, 0x12 });
        gbc.writeMem(0xc721, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc721);
        EXPECT(gbc.pc(), 0x127e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc721), 0x38);
        EXPECT(gbc.readMem(0xc722), 0x62);
        // CD 01CF
        gbc.setState(0x6f6b, 0xd0f9, 0x2760, 0xe405, 0x588f, 0xed4c, 0x1, 0x1);
        gbc.writeMem(0x6f6b, { 0xcd, 0xf8, 0xf7 });
        gbc.writeMem(0xd0f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd0f7);
        EXPECT(gbc.pc(), 0xf7f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0f7), 0x6e);
        EXPECT(gbc.readMem(0xd0f8), 0x6f);
        // CD 01D0
        gbc.setState(0x3d01, 0xc82c, 0xd920, 0x8811, 0x1370, 0x1359, 0x1, 0x0);
        gbc.writeMem(0x3d01, { 0xcd, 0xa5, 0xe });
        gbc.writeMem(0xc82a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc82a);
        EXPECT(gbc.pc(), 0xea5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc82a), 0x4);
        EXPECT(gbc.readMem(0xc82b), 0x3d);
        // CD 01D4
        gbc.setState(0x14fa, 0x80c6, 0x2270, 0xe120, 0xffae, 0x2789, 0x1, 0x0);
        gbc.writeMem(0x14fa, { 0xcd, 0xde, 0x78 });
        gbc.writeMem(0x80c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x80c4);
        EXPECT(gbc.pc(), 0x78de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80c4), 0xfd);
        EXPECT(gbc.readMem(0x80c5), 0x14);
        // CD 01D5
        gbc.setState(0xa7d4, 0xee3c, 0x49b0, 0xcb60, 0xe3f, 0x6994, 0x1, 0x0);
        gbc.writeMem(0xa7d4, { 0xcd, 0x2b, 0x65 });
        gbc.writeMem(0xee3a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xee3a);
        EXPECT(gbc.pc(), 0x652b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d4), 0xcd);
        EXPECT(gbc.readMem(0xa7d5), 0x2b);
        EXPECT(gbc.readMem(0xa7d6), 0x65);
        EXPECT(gbc.readMem(0xee3a), 0xd7);
        EXPECT(gbc.readMem(0xee3b), 0xa7);
        // CD 01D9
        gbc.setState(0x2fbd, 0xfb4a, 0xe2a0, 0x1318, 0xe5d2, 0x3935, 0x0, 0x1);
        gbc.writeMem(0x2fbd, { 0xcd, 0x8d, 0x4c });
        gbc.writeMem(0xfb48, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xfb48);
        EXPECT(gbc.pc(), 0x4c8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb48), 0xc0);
        EXPECT(gbc.readMem(0xfb49), 0x2f);
        // CD 01DB
        gbc.setState(0x15d9, 0xd7ae, 0x8a40, 0x3cf7, 0x1540, 0x84a0, 0x1, 0x1);
        gbc.writeMem(0x15d9, { 0xcd, 0xf, 0xeb });
        gbc.writeMem(0xd7ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd7ac);
        EXPECT(gbc.pc(), 0xeb0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ac), 0xdc);
        EXPECT(gbc.readMem(0xd7ad), 0x15);
        // CD 01DF
        gbc.setState(0x63fb, 0xad5a, 0x2710, 0x5a55, 0x681a, 0xd596, 0x0, 0x1);
        gbc.writeMem(0x63fb, { 0xcd, 0x8c, 0x2a });
        gbc.writeMem(0xad58, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xad58);
        EXPECT(gbc.pc(), 0x2a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad58), 0xfe);
        EXPECT(gbc.readMem(0xad59), 0x63);
        // CD 01E6
        gbc.setState(0xded1, 0x835e, 0x9090, 0xef26, 0x189b, 0x77f, 0x0, 0x1);
        gbc.writeMem(0x835c, { 0x0, 0x0 });
        gbc.writeMem(0xded1, { 0xcd, 0xc, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x835c);
        EXPECT(gbc.pc(), 0x690c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x835c), 0xd4);
        EXPECT(gbc.readMem(0x835d), 0xde);
        EXPECT(gbc.readMem(0xded1), 0xcd);
        EXPECT(gbc.readMem(0xded2), 0xc);
        EXPECT(gbc.readMem(0xded3), 0x69);
        // CD 01E8
        gbc.setState(0xaa33, 0xd3ba, 0x3660, 0x387c, 0x9ba3, 0x21c5, 0x1, 0x1);
        gbc.writeMem(0xaa33, { 0xcd, 0x9d, 0x8f });
        gbc.writeMem(0xd3b8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd3b8);
        EXPECT(gbc.pc(), 0x8f9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa33), 0xcd);
        EXPECT(gbc.readMem(0xaa34), 0x9d);
        EXPECT(gbc.readMem(0xaa35), 0x8f);
        EXPECT(gbc.readMem(0xd3b8), 0x36);
        EXPECT(gbc.readMem(0xd3b9), 0xaa);
        // CD 01EA
        gbc.setState(0xe5c0, 0xd596, 0xb700, 0x1b48, 0x8d1c, 0x7b11, 0x0, 0x1);
        gbc.writeMem(0xd594, { 0x0, 0x0 });
        gbc.writeMem(0xe5c0, { 0xcd, 0x15, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd594);
        EXPECT(gbc.pc(), 0x7915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd594), 0xc3);
        EXPECT(gbc.readMem(0xd595), 0xe5);
        EXPECT(gbc.readMem(0xe5c0), 0xcd);
        EXPECT(gbc.readMem(0xe5c1), 0x15);
        EXPECT(gbc.readMem(0xe5c2), 0x79);
        // CD 01EB
        gbc.setState(0x8446, 0xf475, 0x9470, 0x30ce, 0x6e63, 0x141, 0x0, 0x1);
        gbc.writeMem(0x8446, { 0xcd, 0xb, 0x98 });
        gbc.writeMem(0xf473, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf473);
        EXPECT(gbc.pc(), 0x980b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8446), 0xcd);
        EXPECT(gbc.readMem(0x8447), 0xb);
        EXPECT(gbc.readMem(0x8448), 0x98);
        EXPECT(gbc.readMem(0xf473), 0x49);
        EXPECT(gbc.readMem(0xf474), 0x84);
        // CD 01EC
        gbc.setState(0xda0a, 0xf24e, 0xf1f0, 0x3de5, 0x127e, 0x528d, 0x1, 0x1);
        gbc.writeMem(0xda0a, { 0xcd, 0x38, 0x93 });
        gbc.writeMem(0xf24c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf24c);
        EXPECT(gbc.pc(), 0x9338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda0a), 0xcd);
        EXPECT(gbc.readMem(0xda0b), 0x38);
        EXPECT(gbc.readMem(0xda0c), 0x93);
        EXPECT(gbc.readMem(0xf24c), 0xd);
        EXPECT(gbc.readMem(0xf24d), 0xda);
        // CD 01EF
        gbc.setState(0x4b71, 0xf267, 0xf290, 0x4b87, 0x9842, 0x7c70, 0x0, 0x1);
        gbc.writeMem(0x4b71, { 0xcd, 0x18, 0x21 });
        gbc.writeMem(0xf265, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf265);
        EXPECT(gbc.pc(), 0x2118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf265), 0x74);
        EXPECT(gbc.readMem(0xf266), 0x4b);
        // CD 01F1
        gbc.setState(0x7d20, 0xde83, 0x4b30, 0x400c, 0x5130, 0x343a, 0x0, 0x0);
        gbc.writeMem(0x7d20, { 0xcd, 0xce, 0x3 });
        gbc.writeMem(0xde81, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xde81);
        EXPECT(gbc.pc(), 0x3ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde81), 0x23);
        EXPECT(gbc.readMem(0xde82), 0x7d);
        // CD 01F5
        gbc.setState(0xd1ee, 0xa3f1, 0x4d0, 0x5bef, 0xb0d4, 0x29c9, 0x0, 0x1);
        gbc.writeMem(0xa3ef, { 0x0, 0x0 });
        gbc.writeMem(0xd1ee, { 0xcd, 0x86, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa3ef);
        EXPECT(gbc.pc(), 0x2386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ef), 0xf1);
        EXPECT(gbc.readMem(0xa3f0), 0xd1);
        EXPECT(gbc.readMem(0xd1ee), 0xcd);
        EXPECT(gbc.readMem(0xd1ef), 0x86);
        EXPECT(gbc.readMem(0xd1f0), 0x23);
        // CD 01F6
        gbc.setState(0x3978, 0xb8a8, 0x1170, 0xe154, 0x8c19, 0xcc8f, 0x1, 0x0);
        gbc.writeMem(0x3978, { 0xcd, 0xe, 0x4a });
        gbc.writeMem(0xb8a6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb8a6);
        EXPECT(gbc.pc(), 0x4a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a6), 0x7b);
        EXPECT(gbc.readMem(0xb8a7), 0x39);
        // CD 0202
        gbc.setState(0x3180, 0xe0c8, 0x6790, 0x720a, 0x17e2, 0xe05b, 0x1, 0x1);
        gbc.writeMem(0x3180, { 0xcd, 0xa7, 0x3f });
        gbc.writeMem(0xe0c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe0c6);
        EXPECT(gbc.pc(), 0x3fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c6), 0x83);
        EXPECT(gbc.readMem(0xe0c7), 0x31);
        // CD 0205
        gbc.setState(0xb00c, 0xfac6, 0xf090, 0x888, 0xfd4b, 0x76f8, 0x0, 0x0);
        gbc.writeMem(0xb00c, { 0xcd, 0x47, 0x4 });
        gbc.writeMem(0xfac4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfac4);
        EXPECT(gbc.pc(), 0x447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb00c), 0xcd);
        EXPECT(gbc.readMem(0xb00d), 0x47);
        EXPECT(gbc.readMem(0xb00e), 0x4);
        EXPECT(gbc.readMem(0xfac4), 0xf);
        EXPECT(gbc.readMem(0xfac5), 0xb0);
        // CD 0208
        gbc.setState(0xee67, 0xd6f5, 0x9e80, 0x60de, 0x342b, 0x5274, 0x1, 0x1);
        gbc.writeMem(0xd6f3, { 0x0, 0x0 });
        gbc.writeMem(0xee67, { 0xcd, 0xa6, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd6f3);
        EXPECT(gbc.pc(), 0x4ea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f3), 0x6a);
        EXPECT(gbc.readMem(0xd6f4), 0xee);
        EXPECT(gbc.readMem(0xee67), 0xcd);
        EXPECT(gbc.readMem(0xee68), 0xa6);
        EXPECT(gbc.readMem(0xee69), 0x4e);
        // CD 020D
        gbc.setState(0xa5f4, 0x881e, 0xcd50, 0xd918, 0x581c, 0x6ad3, 0x1, 0x0);
        gbc.writeMem(0x881c, { 0x0, 0x0 });
        gbc.writeMem(0xa5f4, { 0xcd, 0xbe, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x881c);
        EXPECT(gbc.pc(), 0x9be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x881c), 0xf7);
        EXPECT(gbc.readMem(0x881d), 0xa5);
        EXPECT(gbc.readMem(0xa5f4), 0xcd);
        EXPECT(gbc.readMem(0xa5f5), 0xbe);
        EXPECT(gbc.readMem(0xa5f6), 0x9);
        // CD 020F
        gbc.setState(0x8771, 0xaa66, 0x7970, 0xd37a, 0x23c, 0xbfc8, 0x0, 0x1);
        gbc.writeMem(0x8771, { 0xcd, 0xb, 0x35 });
        gbc.writeMem(0xaa64, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xaa64);
        EXPECT(gbc.pc(), 0x350b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8771), 0xcd);
        EXPECT(gbc.readMem(0x8772), 0xb);
        EXPECT(gbc.readMem(0x8773), 0x35);
        EXPECT(gbc.readMem(0xaa64), 0x74);
        EXPECT(gbc.readMem(0xaa65), 0x87);
        // CD 0211
        gbc.setState(0xa5d2, 0xccfa, 0x6150, 0x910f, 0x1fff, 0x8c49, 0x0, 0x1);
        gbc.writeMem(0xa5d2, { 0xcd, 0xd8, 0x61 });
        gbc.writeMem(0xccf8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xccf8);
        EXPECT(gbc.pc(), 0x61d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d2), 0xcd);
        EXPECT(gbc.readMem(0xa5d3), 0xd8);
        EXPECT(gbc.readMem(0xa5d4), 0x61);
        EXPECT(gbc.readMem(0xccf8), 0xd5);
        EXPECT(gbc.readMem(0xccf9), 0xa5);
        // CD 0213
        gbc.setState(0x8ae1, 0xa8ab, 0x2cc0, 0x7b5d, 0x22ba, 0x14d4, 0x0, 0x1);
        gbc.writeMem(0x8ae1, { 0xcd, 0xe4, 0x8b });
        gbc.writeMem(0xa8a9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa8a9);
        EXPECT(gbc.pc(), 0x8be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ae1), 0xcd);
        EXPECT(gbc.readMem(0x8ae2), 0xe4);
        EXPECT(gbc.readMem(0x8ae3), 0x8b);
        EXPECT(gbc.readMem(0xa8a9), 0xe4);
        EXPECT(gbc.readMem(0xa8aa), 0x8a);
        // CD 0216
        gbc.setState(0xcfed, 0x86a0, 0xd2e0, 0xe6, 0x6cec, 0xc055, 0x1, 0x1);
        gbc.writeMem(0x869e, { 0x0, 0x0 });
        gbc.writeMem(0xcfed, { 0xcd, 0xa5, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x869e);
        EXPECT(gbc.pc(), 0x5ea5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x869e), 0xf0);
        EXPECT(gbc.readMem(0x869f), 0xcf);
        EXPECT(gbc.readMem(0xcfed), 0xcd);
        EXPECT(gbc.readMem(0xcfee), 0xa5);
        EXPECT(gbc.readMem(0xcfef), 0x5e);
        // CD 0217
        gbc.setState(0x8953, 0xb2ca, 0x68c0, 0x6aef, 0xa768, 0x2889, 0x0, 0x1);
        gbc.writeMem(0x8953, { 0xcd, 0xf9, 0x86 });
        gbc.writeMem(0xb2c8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb2c8);
        EXPECT(gbc.pc(), 0x86f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8953), 0xcd);
        EXPECT(gbc.readMem(0x8954), 0xf9);
        EXPECT(gbc.readMem(0x8955), 0x86);
        EXPECT(gbc.readMem(0xb2c8), 0x56);
        EXPECT(gbc.readMem(0xb2c9), 0x89);
        // CD 021A
        gbc.setState(0x55b5, 0xc39e, 0xb850, 0x32c4, 0xd2b2, 0xc743, 0x0, 0x0);
        gbc.writeMem(0x55b5, { 0xcd, 0x48, 0x6f });
        gbc.writeMem(0xc39c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc39c);
        EXPECT(gbc.pc(), 0x6f48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc39c), 0xb8);
        EXPECT(gbc.readMem(0xc39d), 0x55);
        // CD 021D
        gbc.setState(0x7460, 0xb67d, 0x6150, 0x3f67, 0x5d8e, 0x795c, 0x1, 0x0);
        gbc.writeMem(0x7460, { 0xcd, 0xf5, 0x38 });
        gbc.writeMem(0xb67b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb67b);
        EXPECT(gbc.pc(), 0x38f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb67b), 0x63);
        EXPECT(gbc.readMem(0xb67c), 0x74);
        // CD 021F
        gbc.setState(0xb9c5, 0x94b8, 0xac0, 0x8cdd, 0xda79, 0x76ba, 0x1, 0x0);
        gbc.writeMem(0x94b6, { 0x0, 0x0 });
        gbc.writeMem(0xb9c5, { 0xcd, 0xf3, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x94b6);
        EXPECT(gbc.pc(), 0x74f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94b6), 0xc8);
        EXPECT(gbc.readMem(0x94b7), 0xb9);
        EXPECT(gbc.readMem(0xb9c5), 0xcd);
        EXPECT(gbc.readMem(0xb9c6), 0xf3);
        EXPECT(gbc.readMem(0xb9c7), 0x74);
        // CD 0221
        gbc.setState(0x6c13, 0x8274, 0xc6e0, 0xeacc, 0xc785, 0x1b18, 0x0, 0x0);
        gbc.writeMem(0x6c13, { 0xcd, 0xd3, 0x46 });
        gbc.writeMem(0x8272, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8272);
        EXPECT(gbc.pc(), 0x46d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8272), 0x16);
        EXPECT(gbc.readMem(0x8273), 0x6c);
        // CD 0223
        gbc.setState(0x98d5, 0xdb6d, 0xf800, 0x310b, 0xf3db, 0xb059, 0x0, 0x1);
        gbc.writeMem(0x98d5, { 0xcd, 0xc7, 0x1a });
        gbc.writeMem(0xdb6b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xdb6b);
        EXPECT(gbc.pc(), 0x1ac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d5), 0xcd);
        EXPECT(gbc.readMem(0x98d6), 0xc7);
        EXPECT(gbc.readMem(0x98d7), 0x1a);
        EXPECT(gbc.readMem(0xdb6b), 0xd8);
        EXPECT(gbc.readMem(0xdb6c), 0x98);
        // CD 0224
        gbc.setState(0x86ef, 0xd641, 0x86d0, 0x21cb, 0x70c8, 0xc806, 0x1, 0x1);
        gbc.writeMem(0x86ef, { 0xcd, 0xfb, 0xb });
        gbc.writeMem(0xd63f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd63f);
        EXPECT(gbc.pc(), 0xbfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ef), 0xcd);
        EXPECT(gbc.readMem(0x86f0), 0xfb);
        EXPECT(gbc.readMem(0x86f1), 0xb);
        EXPECT(gbc.readMem(0xd63f), 0xf2);
        EXPECT(gbc.readMem(0xd640), 0x86);
        // CD 022B
        gbc.setState(0x7261, 0xfb30, 0xc2d0, 0xc644, 0xbbc6, 0x5810, 0x0, 0x1);
        gbc.writeMem(0x7261, { 0xcd, 0x46, 0xd0 });
        gbc.writeMem(0xfb2e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xfb2e);
        EXPECT(gbc.pc(), 0xd046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb2e), 0x64);
        EXPECT(gbc.readMem(0xfb2f), 0x72);
        // CD 022C
        gbc.setState(0x5853, 0xbe7d, 0xceb0, 0x5ca0, 0xdafb, 0xcb85, 0x0, 0x1);
        gbc.writeMem(0x5853, { 0xcd, 0xe6, 0xc });
        gbc.writeMem(0xbe7b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xbe7b);
        EXPECT(gbc.pc(), 0xce6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe7b), 0x56);
        EXPECT(gbc.readMem(0xbe7c), 0x58);
        // CD 022E
        gbc.setState(0x54d6, 0xf26a, 0x2360, 0xd6c4, 0x6e0e, 0xc665, 0x1, 0x1);
        gbc.writeMem(0x54d6, { 0xcd, 0x97, 0x2e });
        gbc.writeMem(0xf268, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf268);
        EXPECT(gbc.pc(), 0x2e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf268), 0xd9);
        EXPECT(gbc.readMem(0xf269), 0x54);
        // CD 022F
        gbc.setState(0x2cc2, 0xfad0, 0x7e90, 0xe3a, 0xeac3, 0x329b, 0x1, 0x1);
        gbc.writeMem(0x2cc2, { 0xcd, 0xe2, 0x13 });
        gbc.writeMem(0xface, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xface);
        EXPECT(gbc.pc(), 0x13e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xface), 0xc5);
        EXPECT(gbc.readMem(0xfacf), 0x2c);
        // CD 0230
        gbc.setState(0xcfb4, 0xfd18, 0xcb30, 0xc83c, 0xdb3c, 0x2ad9, 0x1, 0x0);
        gbc.writeMem(0xcfb4, { 0xcd, 0xa8, 0x92 });
        gbc.writeMem(0xfd16, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xfd16);
        EXPECT(gbc.pc(), 0x92a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb4), 0xcd);
        EXPECT(gbc.readMem(0xcfb5), 0xa8);
        EXPECT(gbc.readMem(0xcfb6), 0x92);
        EXPECT(gbc.readMem(0xfd16), 0xb7);
        EXPECT(gbc.readMem(0xfd17), 0xcf);
        // CD 0231
        gbc.setState(0x3a8b, 0x9ae6, 0x52c0, 0x461, 0xc5f8, 0x8ff3, 0x0, 0x1);
        gbc.writeMem(0x3a8b, { 0xcd, 0x7e, 0x3d });
        gbc.writeMem(0x9ae4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9ae4);
        EXPECT(gbc.pc(), 0x3d7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ae4), 0x8e);
        EXPECT(gbc.readMem(0x9ae5), 0x3a);
        // CD 0232
        gbc.setState(0x9296, 0xad2b, 0xf5c0, 0xdf85, 0x1506, 0x6116, 0x1, 0x1);
        gbc.writeMem(0x9296, { 0xcd, 0xf9, 0xa });
        gbc.writeMem(0xad29, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xad29);
        EXPECT(gbc.pc(), 0xaf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9296), 0xcd);
        EXPECT(gbc.readMem(0x9297), 0xf9);
        EXPECT(gbc.readMem(0x9298), 0xa);
        EXPECT(gbc.readMem(0xad29), 0x99);
        EXPECT(gbc.readMem(0xad2a), 0x92);
        // CD 0233
        gbc.setState(0x4060, 0xaa6a, 0xa400, 0x9740, 0xd596, 0xa678, 0x0, 0x1);
        gbc.writeMem(0x4060, { 0xcd, 0xb1, 0x67 });
        gbc.writeMem(0xaa68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xaa68);
        EXPECT(gbc.pc(), 0x67b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa68), 0x63);
        EXPECT(gbc.readMem(0xaa69), 0x40);
        // CD 0237
        gbc.setState(0xd77c, 0xed2f, 0x1140, 0xa0ea, 0x8ee6, 0x8e15, 0x0, 0x0);
        gbc.writeMem(0xd77c, { 0xcd, 0x5e, 0x3a });
        gbc.writeMem(0xed2d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xed2d);
        EXPECT(gbc.pc(), 0x3a5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77c), 0xcd);
        EXPECT(gbc.readMem(0xd77d), 0x5e);
        EXPECT(gbc.readMem(0xd77e), 0x3a);
        EXPECT(gbc.readMem(0xed2d), 0x7f);
        EXPECT(gbc.readMem(0xed2e), 0xd7);
        // CD 0241
        gbc.setState(0xc4af, 0xfa01, 0x9a0, 0x4075, 0x2c91, 0x927a, 0x1, 0x1);
        gbc.writeMem(0xc4af, { 0xcd, 0xa6, 0x8f });
        gbc.writeMem(0xf9ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf9ff);
        EXPECT(gbc.pc(), 0x8fa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4af), 0xcd);
        EXPECT(gbc.readMem(0xc4b0), 0xa6);
        EXPECT(gbc.readMem(0xc4b1), 0x8f);
        EXPECT(gbc.readMem(0xf9ff), 0xb2);
        EXPECT(gbc.readMem(0xfa00), 0xc4);
        // CD 0243
        gbc.setState(0x2c1c, 0xe655, 0x7920, 0xbb3f, 0xee3c, 0x3c0, 0x1, 0x0);
        gbc.writeMem(0x2c1c, { 0xcd, 0x11, 0x60 });
        gbc.writeMem(0xe653, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe653);
        EXPECT(gbc.pc(), 0x6011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe653), 0x1f);
        EXPECT(gbc.readMem(0xe654), 0x2c);
        // CD 0244
        gbc.setState(0x7675, 0xef33, 0xe4a0, 0x6627, 0xf363, 0xdf5, 0x1, 0x1);
        gbc.writeMem(0x7675, { 0xcd, 0xf0, 0xb0 });
        gbc.writeMem(0xef31, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xef31);
        EXPECT(gbc.pc(), 0xb0f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef31), 0x78);
        EXPECT(gbc.readMem(0xef32), 0x76);
        // CD 0248
        gbc.setState(0xa3d7, 0x82fc, 0x2c90, 0xa1ab, 0x3f2e, 0xa61, 0x0, 0x1);
        gbc.writeMem(0x82fa, { 0x0, 0x0 });
        gbc.writeMem(0xa3d7, { 0xcd, 0x18, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x82fa);
        EXPECT(gbc.pc(), 0xf918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82fa), 0xda);
        EXPECT(gbc.readMem(0x82fb), 0xa3);
        EXPECT(gbc.readMem(0xa3d7), 0xcd);
        EXPECT(gbc.readMem(0xa3d8), 0x18);
        EXPECT(gbc.readMem(0xa3d9), 0xf9);
        // CD 0249
        gbc.setState(0xa6f9, 0xe831, 0xec60, 0x291e, 0x42e6, 0xf364, 0x1, 0x0);
        gbc.writeMem(0xa6f9, { 0xcd, 0x53, 0x51 });
        gbc.writeMem(0xe82f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe82f);
        EXPECT(gbc.pc(), 0x5153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f9), 0xcd);
        EXPECT(gbc.readMem(0xa6fa), 0x53);
        EXPECT(gbc.readMem(0xa6fb), 0x51);
        EXPECT(gbc.readMem(0xe82f), 0xfc);
        EXPECT(gbc.readMem(0xe830), 0xa6);
        // CD 024D
        gbc.setState(0x620b, 0xeff6, 0x2840, 0x7729, 0xe3ec, 0x20eb, 0x0, 0x1);
        gbc.writeMem(0x620b, { 0xcd, 0x6, 0x85 });
        gbc.writeMem(0xeff4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xeff4);
        EXPECT(gbc.pc(), 0x8506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff4), 0xe);
        EXPECT(gbc.readMem(0xeff5), 0x62);
        // CD 024E
        gbc.setState(0x41cc, 0xc14b, 0xbf00, 0xaa8, 0x779f, 0x9956, 0x0, 0x1);
        gbc.writeMem(0x41cc, { 0xcd, 0x27, 0x5e });
        gbc.writeMem(0xc149, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc149);
        EXPECT(gbc.pc(), 0x5e27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc149), 0xcf);
        EXPECT(gbc.readMem(0xc14a), 0x41);
        // CD 024F
        gbc.setState(0xae14, 0xf89a, 0x4cc0, 0xe819, 0xb567, 0x290b, 0x0, 0x0);
        gbc.writeMem(0xae14, { 0xcd, 0x9b, 0xe2 });
        gbc.writeMem(0xf898, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf898);
        EXPECT(gbc.pc(), 0xe29b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae14), 0xcd);
        EXPECT(gbc.readMem(0xae15), 0x9b);
        EXPECT(gbc.readMem(0xae16), 0xe2);
        EXPECT(gbc.readMem(0xf898), 0x17);
        EXPECT(gbc.readMem(0xf899), 0xae);
        // CD 0250
        gbc.setState(0x8fd5, 0xaac6, 0xea80, 0x2ddd, 0x2d94, 0x9e69, 0x1, 0x1);
        gbc.writeMem(0x8fd5, { 0xcd, 0x70, 0x41 });
        gbc.writeMem(0xaac4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xaac4);
        EXPECT(gbc.pc(), 0x4170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd5), 0xcd);
        EXPECT(gbc.readMem(0x8fd6), 0x70);
        EXPECT(gbc.readMem(0x8fd7), 0x41);
        EXPECT(gbc.readMem(0xaac4), 0xd8);
        EXPECT(gbc.readMem(0xaac5), 0x8f);
        // CD 0251
        gbc.setState(0x85b5, 0xc5f0, 0xd200, 0xc0f0, 0xae69, 0x2345, 0x0, 0x1);
        gbc.writeMem(0x85b5, { 0xcd, 0x64, 0x7e });
        gbc.writeMem(0xc5ee, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc5ee);
        EXPECT(gbc.pc(), 0x7e64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b5), 0xcd);
        EXPECT(gbc.readMem(0x85b6), 0x64);
        EXPECT(gbc.readMem(0x85b7), 0x7e);
        EXPECT(gbc.readMem(0xc5ee), 0xb8);
        EXPECT(gbc.readMem(0xc5ef), 0x85);
        // CD 0253
        gbc.setState(0x76c5, 0xa3f3, 0x94d0, 0x74ee, 0x5222, 0x8e3, 0x1, 0x1);
        gbc.writeMem(0x76c5, { 0xcd, 0x25, 0x29 });
        gbc.writeMem(0xa3f1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa3f1);
        EXPECT(gbc.pc(), 0x2925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f1), 0xc8);
        EXPECT(gbc.readMem(0xa3f2), 0x76);
        // CD 0254
        gbc.setState(0x269a, 0x8896, 0x6c90, 0x470, 0x817c, 0xb39c, 0x0, 0x1);
        gbc.writeMem(0x269a, { 0xcd, 0x2b, 0x8d });
        gbc.writeMem(0x8894, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8894);
        EXPECT(gbc.pc(), 0x8d2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8894), 0x9d);
        EXPECT(gbc.readMem(0x8895), 0x26);
        // CD 0255
        gbc.setState(0x7a33, 0xefc3, 0x3130, 0x5ac4, 0x6666, 0xba98, 0x1, 0x0);
        gbc.writeMem(0x7a33, { 0xcd, 0xc6, 0xde });
        gbc.writeMem(0xefc1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xefc1);
        EXPECT(gbc.pc(), 0xdec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefc1), 0x36);
        EXPECT(gbc.readMem(0xefc2), 0x7a);
        // CD 0256
        gbc.setState(0x8fa4, 0xa945, 0xf360, 0x7f54, 0x8da8, 0xe02d, 0x1, 0x0);
        gbc.writeMem(0x8fa4, { 0xcd, 0x97, 0x82 });
        gbc.writeMem(0xa943, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa943);
        EXPECT(gbc.pc(), 0x8297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fa4), 0xcd);
        EXPECT(gbc.readMem(0x8fa5), 0x97);
        EXPECT(gbc.readMem(0x8fa6), 0x82);
        EXPECT(gbc.readMem(0xa943), 0xa7);
        EXPECT(gbc.readMem(0xa944), 0x8f);
        // CD 0257
        gbc.setState(0xcbf, 0xec01, 0x2ad0, 0x269f, 0x8be0, 0xef13, 0x0, 0x0);
        gbc.writeMem(0xcbf, { 0xcd, 0x40, 0xf });
        gbc.writeMem(0xebff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xebff);
        EXPECT(gbc.pc(), 0xf40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebff), 0xc2);
        EXPECT(gbc.readMem(0xec00), 0xc);
        // CD 0258
        gbc.setState(0xede3, 0xfc35, 0xb0, 0xcd73, 0x5299, 0x1c6f, 0x1, 0x0);
        gbc.writeMem(0xede3, { 0xcd, 0xa1, 0x4d });
        gbc.writeMem(0xfc33, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xfc33);
        EXPECT(gbc.pc(), 0x4da1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xede3), 0xcd);
        EXPECT(gbc.readMem(0xede4), 0xa1);
        EXPECT(gbc.readMem(0xede5), 0x4d);
        EXPECT(gbc.readMem(0xfc33), 0xe6);
        EXPECT(gbc.readMem(0xfc34), 0xed);
        // CD 025C
        gbc.setState(0x6225, 0xf700, 0x67a0, 0xc274, 0xe2e3, 0x3f54, 0x0, 0x0);
        gbc.writeMem(0x6225, { 0xcd, 0x20, 0xf3 });
        gbc.writeMem(0xf6fe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf6fe);
        EXPECT(gbc.pc(), 0xf320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf6fe), 0x28);
        EXPECT(gbc.readMem(0xf6ff), 0x62);
        // CD 0260
        gbc.setState(0x95b4, 0xb0ac, 0x6660, 0xd575, 0x2ec3, 0x3106, 0x0, 0x0);
        gbc.writeMem(0x95b4, { 0xcd, 0xce, 0x4c });
        gbc.writeMem(0xb0aa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb0aa);
        EXPECT(gbc.pc(), 0x4cce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b4), 0xcd);
        EXPECT(gbc.readMem(0x95b5), 0xce);
        EXPECT(gbc.readMem(0x95b6), 0x4c);
        EXPECT(gbc.readMem(0xb0aa), 0xb7);
        EXPECT(gbc.readMem(0xb0ab), 0x95);
        // CD 0261
        gbc.setState(0xab3f, 0xb3e0, 0x8fb0, 0xff54, 0x9580, 0xaac8, 0x0, 0x1);
        gbc.writeMem(0xab3f, { 0xcd, 0x35, 0x23 });
        gbc.writeMem(0xb3de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb3de);
        EXPECT(gbc.pc(), 0x2335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab3f), 0xcd);
        EXPECT(gbc.readMem(0xab40), 0x35);
        EXPECT(gbc.readMem(0xab41), 0x23);
        EXPECT(gbc.readMem(0xb3de), 0x42);
        EXPECT(gbc.readMem(0xb3df), 0xab);
        // CD 0262
        gbc.setState(0xa714, 0x9e1a, 0xa6c0, 0x812f, 0x2c67, 0xd80, 0x0, 0x0);
        gbc.writeMem(0x9e18, { 0x0, 0x0 });
        gbc.writeMem(0xa714, { 0xcd, 0x1a, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9e18);
        EXPECT(gbc.pc(), 0x2f1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e18), 0x17);
        EXPECT(gbc.readMem(0x9e19), 0xa7);
        EXPECT(gbc.readMem(0xa714), 0xcd);
        EXPECT(gbc.readMem(0xa715), 0x1a);
        EXPECT(gbc.readMem(0xa716), 0x2f);
        // CD 0264
        gbc.setState(0x28d0, 0x9a1e, 0xb940, 0x9564, 0x211d, 0x866, 0x0, 0x1);
        gbc.writeMem(0x28d0, { 0xcd, 0x95, 0x95 });
        gbc.writeMem(0x9a1c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9a1c);
        EXPECT(gbc.pc(), 0x9595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1c), 0xd3);
        EXPECT(gbc.readMem(0x9a1d), 0x28);
        // CD 0265
        gbc.setState(0xe98c, 0xc922, 0x7470, 0x23b7, 0x81cf, 0x58b6, 0x1, 0x1);
        gbc.writeMem(0xc920, { 0x0, 0x0 });
        gbc.writeMem(0xe98c, { 0xcd, 0x1b, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc920);
        EXPECT(gbc.pc(), 0xec1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc920), 0x8f);
        EXPECT(gbc.readMem(0xc921), 0xe9);
        EXPECT(gbc.readMem(0xe98c), 0xcd);
        EXPECT(gbc.readMem(0xe98d), 0x1b);
        EXPECT(gbc.readMem(0xe98e), 0xec);
        // CD 0266
        gbc.setState(0xde50, 0xeaae, 0x80e0, 0xe578, 0x5c87, 0x99d1, 0x0, 0x1);
        gbc.writeMem(0xde50, { 0xcd, 0x9, 0xac });
        gbc.writeMem(0xeaac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xeaac);
        EXPECT(gbc.pc(), 0xac09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde50), 0xcd);
        EXPECT(gbc.readMem(0xde51), 0x9);
        EXPECT(gbc.readMem(0xde52), 0xac);
        EXPECT(gbc.readMem(0xeaac), 0x53);
        EXPECT(gbc.readMem(0xeaad), 0xde);
        // CD 0269
        gbc.setState(0xac84, 0xbdde, 0x32d0, 0x1865, 0xced2, 0xfe7f, 0x0, 0x0);
        gbc.writeMem(0xac84, { 0xcd, 0xe, 0x28 });
        gbc.writeMem(0xbddc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbddc);
        EXPECT(gbc.pc(), 0x280e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac84), 0xcd);
        EXPECT(gbc.readMem(0xac85), 0xe);
        EXPECT(gbc.readMem(0xac86), 0x28);
        EXPECT(gbc.readMem(0xbddc), 0x87);
        EXPECT(gbc.readMem(0xbddd), 0xac);
        // CD 026A
        gbc.setState(0xe759, 0xfd66, 0xdeb0, 0xe197, 0xcbe3, 0x4a54, 0x0, 0x1);
        gbc.writeMem(0xe759, { 0xcd, 0x43, 0xcc });
        gbc.writeMem(0xfd64, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xfd64);
        EXPECT(gbc.pc(), 0xcc43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe759), 0xcd);
        EXPECT(gbc.readMem(0xe75a), 0x43);
        EXPECT(gbc.readMem(0xe75b), 0xcc);
        EXPECT(gbc.readMem(0xfd64), 0x5c);
        EXPECT(gbc.readMem(0xfd65), 0xe7);
        // CD 026B
        gbc.setState(0x92b2, 0x8771, 0xd8d0, 0x8f09, 0x9804, 0xe304, 0x1, 0x1);
        gbc.writeMem(0x876f, { 0x0, 0x0 });
        gbc.writeMem(0x92b2, { 0xcd, 0xd1, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x876f);
        EXPECT(gbc.pc(), 0x85d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x876f), 0xb5);
        EXPECT(gbc.readMem(0x8770), 0x92);
        EXPECT(gbc.readMem(0x92b2), 0xcd);
        EXPECT(gbc.readMem(0x92b3), 0xd1);
        EXPECT(gbc.readMem(0x92b4), 0x85);
        // CD 026C
        gbc.setState(0xbbcb, 0xaba7, 0xc4c0, 0x218a, 0x1cee, 0x257e, 0x1, 0x0);
        gbc.writeMem(0xaba5, { 0x0, 0x0 });
        gbc.writeMem(0xbbcb, { 0xcd, 0x2, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xaba5);
        EXPECT(gbc.pc(), 0xcd02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba5), 0xce);
        EXPECT(gbc.readMem(0xaba6), 0xbb);
        EXPECT(gbc.readMem(0xbbcb), 0xcd);
        EXPECT(gbc.readMem(0xbbcc), 0x2);
        EXPECT(gbc.readMem(0xbbcd), 0xcd);
        // CD 026D
        gbc.setState(0x4ef, 0xd5a5, 0x1650, 0xadcd, 0xd688, 0x3a9a, 0x1, 0x1);
        gbc.writeMem(0x4ef, { 0xcd, 0xae, 0x1a });
        gbc.writeMem(0xd5a3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd5a3);
        EXPECT(gbc.pc(), 0x1aae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a3), 0xf2);
        EXPECT(gbc.readMem(0xd5a4), 0x4);
        // CD 0274
        gbc.setState(0xc60, 0xcc3f, 0x73a0, 0xab29, 0x2cf9, 0x9d6b, 0x0, 0x0);
        gbc.writeMem(0xc60, { 0xcd, 0x2c, 0x82 });
        gbc.writeMem(0xcc3d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xcc3d);
        EXPECT(gbc.pc(), 0x822c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc3d), 0x63);
        EXPECT(gbc.readMem(0xcc3e), 0xc);
        // CD 0279
        gbc.setState(0xd181, 0xc787, 0x3b00, 0x8ca3, 0x3189, 0xb69f, 0x1, 0x1);
        gbc.writeMem(0xc785, { 0x0, 0x0 });
        gbc.writeMem(0xd181, { 0xcd, 0x52, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc785);
        EXPECT(gbc.pc(), 0x9652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc785), 0x84);
        EXPECT(gbc.readMem(0xc786), 0xd1);
        EXPECT(gbc.readMem(0xd181), 0xcd);
        EXPECT(gbc.readMem(0xd182), 0x52);
        EXPECT(gbc.readMem(0xd183), 0x96);
        // CD 027A
        gbc.setState(0x6760, 0xe388, 0x4d80, 0xaae3, 0x39ca, 0x669f, 0x0, 0x1);
        gbc.writeMem(0x6760, { 0xcd, 0xb5, 0x93 });
        gbc.writeMem(0xe386, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe386);
        EXPECT(gbc.pc(), 0x93b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe386), 0x63);
        EXPECT(gbc.readMem(0xe387), 0x67);
        // CD 027B
        gbc.setState(0xc37d, 0xd900, 0xf880, 0xe384, 0x3bd5, 0xb59d, 0x0, 0x1);
        gbc.writeMem(0xc37d, { 0xcd, 0x34, 0x49 });
        gbc.writeMem(0xd8fe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd8fe);
        EXPECT(gbc.pc(), 0x4934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc37d), 0xcd);
        EXPECT(gbc.readMem(0xc37e), 0x34);
        EXPECT(gbc.readMem(0xc37f), 0x49);
        EXPECT(gbc.readMem(0xd8fe), 0x80);
        EXPECT(gbc.readMem(0xd8ff), 0xc3);
        // CD 027D
        gbc.setState(0x1095, 0x8893, 0xcce0, 0xe89b, 0xa421, 0x116c, 0x0, 0x0);
        gbc.writeMem(0x1095, { 0xcd, 0x5b, 0x45 });
        gbc.writeMem(0x8891, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8891);
        EXPECT(gbc.pc(), 0x455b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8891), 0x98);
        EXPECT(gbc.readMem(0x8892), 0x10);
        // CD 027F
        gbc.setState(0xe651, 0xfb3f, 0x6d40, 0x10f7, 0x3e35, 0x2c3d, 0x0, 0x1);
        gbc.writeMem(0xe651, { 0xcd, 0x48, 0x36 });
        gbc.writeMem(0xfb3d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xfb3d);
        EXPECT(gbc.pc(), 0x3648);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe651), 0xcd);
        EXPECT(gbc.readMem(0xe652), 0x48);
        EXPECT(gbc.readMem(0xe653), 0x36);
        EXPECT(gbc.readMem(0xfb3d), 0x54);
        EXPECT(gbc.readMem(0xfb3e), 0xe6);
        // CD 0280
        gbc.setState(0xb22b, 0xafea, 0xf630, 0xed0c, 0xd646, 0x3bb, 0x1, 0x0);
        gbc.writeMem(0xafe8, { 0x0, 0x0 });
        gbc.writeMem(0xb22b, { 0xcd, 0xf1, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xafe8);
        EXPECT(gbc.pc(), 0xb2f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe8), 0x2e);
        EXPECT(gbc.readMem(0xafe9), 0xb2);
        EXPECT(gbc.readMem(0xb22b), 0xcd);
        EXPECT(gbc.readMem(0xb22c), 0xf1);
        EXPECT(gbc.readMem(0xb22d), 0xb2);
        // CD 0282
        gbc.setState(0xa1ee, 0xdb02, 0x70d0, 0x5312, 0x85aa, 0x4fda, 0x1, 0x1);
        gbc.writeMem(0xa1ee, { 0xcd, 0xce, 0x14 });
        gbc.writeMem(0xdb00, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xdb00);
        EXPECT(gbc.pc(), 0x14ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ee), 0xcd);
        EXPECT(gbc.readMem(0xa1ef), 0xce);
        EXPECT(gbc.readMem(0xa1f0), 0x14);
        EXPECT(gbc.readMem(0xdb00), 0xf1);
        EXPECT(gbc.readMem(0xdb01), 0xa1);
        // CD 0283
        gbc.setState(0x4a4a, 0xd8cf, 0x37e0, 0xb70b, 0xfcb0, 0x6dd6, 0x1, 0x1);
        gbc.writeMem(0x4a4a, { 0xcd, 0x2, 0x7d });
        gbc.writeMem(0xd8cd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd8cd);
        EXPECT(gbc.pc(), 0x7d02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8cd), 0x4d);
        EXPECT(gbc.readMem(0xd8ce), 0x4a);
        // CD 0284
        gbc.setState(0x8afe, 0xdf29, 0xd00, 0xc849, 0xdf35, 0x3e78, 0x0, 0x1);
        gbc.writeMem(0x8afe, { 0xcd, 0x57, 0x42 });
        gbc.writeMem(0xdf27, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xdf27);
        EXPECT(gbc.pc(), 0x4257);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8afe), 0xcd);
        EXPECT(gbc.readMem(0x8aff), 0x57);
        EXPECT(gbc.readMem(0x8b00), 0x42);
        EXPECT(gbc.readMem(0xdf27), 0x1);
        EXPECT(gbc.readMem(0xdf28), 0x8b);
        // CD 0286
        gbc.setState(0x8e41, 0xe450, 0x7c50, 0xe01f, 0x17e7, 0x230f, 0x1, 0x1);
        gbc.writeMem(0x8e41, { 0xcd, 0x3b, 0xf6 });
        gbc.writeMem(0xe44e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe44e);
        EXPECT(gbc.pc(), 0xf63b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e41), 0xcd);
        EXPECT(gbc.readMem(0x8e42), 0x3b);
        EXPECT(gbc.readMem(0x8e43), 0xf6);
        EXPECT(gbc.readMem(0xe44e), 0x44);
        EXPECT(gbc.readMem(0xe44f), 0x8e);
        // CD 0287
        gbc.setState(0x1675, 0xee16, 0x1ff0, 0x3d70, 0x6dc6, 0xc270, 0x0, 0x1);
        gbc.writeMem(0x1675, { 0xcd, 0x10, 0xf9 });
        gbc.writeMem(0xee14, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xee14);
        EXPECT(gbc.pc(), 0xf910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee14), 0x78);
        EXPECT(gbc.readMem(0xee15), 0x16);
        // CD 0288
        gbc.setState(0x2eee, 0xaedb, 0xd9b0, 0x602e, 0x3017, 0x55a, 0x0, 0x0);
        gbc.writeMem(0x2eee, { 0xcd, 0x6c, 0x53 });
        gbc.writeMem(0xaed9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xaed9);
        EXPECT(gbc.pc(), 0x536c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed9), 0xf1);
        EXPECT(gbc.readMem(0xaeda), 0x2e);
        // CD 0289
        gbc.setState(0x207, 0xfebb, 0xa000, 0xb2d7, 0x444c, 0x6085, 0x0, 0x1);
        gbc.writeMem(0x207, { 0xcd, 0xef, 0xdc });
        gbc.writeMem(0xfeb9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xfeb9);
        EXPECT(gbc.pc(), 0xdcef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfeb9), 0xa);
        EXPECT(gbc.readMem(0xfeba), 0x2);
        // CD 028B
        gbc.setState(0xe52f, 0x8c08, 0x4a0, 0xcfab, 0x3f87, 0xb63b, 0x1, 0x0);
        gbc.writeMem(0x8c06, { 0x0, 0x0 });
        gbc.writeMem(0xe52f, { 0xcd, 0x16, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8c06);
        EXPECT(gbc.pc(), 0xcc16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c06), 0x32);
        EXPECT(gbc.readMem(0x8c07), 0xe5);
        EXPECT(gbc.readMem(0xe52f), 0xcd);
        EXPECT(gbc.readMem(0xe530), 0x16);
        EXPECT(gbc.readMem(0xe531), 0xcc);
        // CD 028C
        gbc.setState(0x9959, 0xfb57, 0x3480, 0x4198, 0x8d6c, 0x662c, 0x1, 0x0);
        gbc.writeMem(0x9959, { 0xcd, 0xbe, 0x40 });
        gbc.writeMem(0xfb55, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfb55);
        EXPECT(gbc.pc(), 0x40be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9959), 0xcd);
        EXPECT(gbc.readMem(0x995a), 0xbe);
        EXPECT(gbc.readMem(0x995b), 0x40);
        EXPECT(gbc.readMem(0xfb55), 0x5c);
        EXPECT(gbc.readMem(0xfb56), 0x99);
        // CD 028D
        gbc.setState(0x4076, 0xee4f, 0x23c0, 0x7e4, 0x8212, 0xfc22, 0x0, 0x1);
        gbc.writeMem(0x4076, { 0xcd, 0xaf, 0xf });
        gbc.writeMem(0xee4d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xee4d);
        EXPECT(gbc.pc(), 0xfaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee4d), 0x79);
        EXPECT(gbc.readMem(0xee4e), 0x40);
        // CD 0290
        gbc.setState(0xc15f, 0x913d, 0x3370, 0xa24c, 0x2970, 0x44f9, 0x1, 0x1);
        gbc.writeMem(0x913b, { 0x0, 0x0 });
        gbc.writeMem(0xc15f, { 0xcd, 0xd0, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x913b);
        EXPECT(gbc.pc(), 0x8bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x913b), 0x62);
        EXPECT(gbc.readMem(0x913c), 0xc1);
        EXPECT(gbc.readMem(0xc15f), 0xcd);
        EXPECT(gbc.readMem(0xc160), 0xd0);
        EXPECT(gbc.readMem(0xc161), 0x8b);
        // CD 0293
        gbc.setState(0xb8c3, 0xa2a2, 0x57d0, 0xa0a2, 0x9d66, 0xbb6a, 0x0, 0x1);
        gbc.writeMem(0xa2a0, { 0x0, 0x0 });
        gbc.writeMem(0xb8c3, { 0xcd, 0xa2, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa2a0);
        EXPECT(gbc.pc(), 0x7da2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2a0), 0xc6);
        EXPECT(gbc.readMem(0xa2a1), 0xb8);
        EXPECT(gbc.readMem(0xb8c3), 0xcd);
        EXPECT(gbc.readMem(0xb8c4), 0xa2);
        EXPECT(gbc.readMem(0xb8c5), 0x7d);
        // CD 0295
        gbc.setState(0x3466, 0xdcda, 0x50a0, 0xfd7c, 0x1362, 0xde49, 0x1, 0x0);
        gbc.writeMem(0x3466, { 0xcd, 0x29, 0x5a });
        gbc.writeMem(0xdcd8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdcd8);
        EXPECT(gbc.pc(), 0x5a29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcd8), 0x69);
        EXPECT(gbc.readMem(0xdcd9), 0x34);
        // CD 0296
        gbc.setState(0x6200, 0xb865, 0xe100, 0xa6d1, 0xea60, 0x4343, 0x1, 0x1);
        gbc.writeMem(0x6200, { 0xcd, 0xa4, 0x25 });
        gbc.writeMem(0xb863, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb863);
        EXPECT(gbc.pc(), 0x25a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb863), 0x3);
        EXPECT(gbc.readMem(0xb864), 0x62);
        // CD 0298
        gbc.setState(0xe284, 0xfee3, 0x4df0, 0x9e87, 0x2bac, 0x8b2f, 0x1, 0x0);
        gbc.writeMem(0xe284, { 0xcd, 0x8b, 0xad });
        gbc.writeMem(0xfee1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfee1);
        EXPECT(gbc.pc(), 0xad8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe284), 0xcd);
        EXPECT(gbc.readMem(0xe285), 0x8b);
        EXPECT(gbc.readMem(0xe286), 0xad);
        EXPECT(gbc.readMem(0xfee1), 0x87);
        EXPECT(gbc.readMem(0xfee2), 0xe2);
        // CD 0299
        gbc.setState(0x9eb1, 0xa9df, 0xbdb0, 0x4798, 0xa9c4, 0xdea2, 0x0, 0x0);
        gbc.writeMem(0x9eb1, { 0xcd, 0xd2, 0xcd });
        gbc.writeMem(0xa9dd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa9dd);
        EXPECT(gbc.pc(), 0xcdd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eb1), 0xcd);
        EXPECT(gbc.readMem(0x9eb2), 0xd2);
        EXPECT(gbc.readMem(0x9eb3), 0xcd);
        EXPECT(gbc.readMem(0xa9dd), 0xb4);
        EXPECT(gbc.readMem(0xa9de), 0x9e);
        // CD 029B
        gbc.setState(0xc800, 0x84f9, 0xe530, 0x6cd2, 0xdfbc, 0xd320, 0x1, 0x0);
        gbc.writeMem(0x84f7, { 0x0, 0x0 });
        gbc.writeMem(0xc800, { 0xcd, 0xe9, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x84f7);
        EXPECT(gbc.pc(), 0xa2e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84f7), 0x3);
        EXPECT(gbc.readMem(0x84f8), 0xc8);
        EXPECT(gbc.readMem(0xc800), 0xcd);
        EXPECT(gbc.readMem(0xc801), 0xe9);
        EXPECT(gbc.readMem(0xc802), 0xa2);
        // CD 029E
        gbc.setState(0x3375, 0xd563, 0xa980, 0x6554, 0x4467, 0xe280, 0x0, 0x0);
        gbc.writeMem(0x3375, { 0xcd, 0xd, 0x72 });
        gbc.writeMem(0xd561, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd561);
        EXPECT(gbc.pc(), 0x720d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd561), 0x78);
        EXPECT(gbc.readMem(0xd562), 0x33);
        // CD 02A4
        gbc.setState(0x6f04, 0xaf76, 0x8be0, 0x2267, 0x3faf, 0xb903, 0x0, 0x1);
        gbc.writeMem(0x6f04, { 0xcd, 0x1d, 0xbd });
        gbc.writeMem(0xaf74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xaf74);
        EXPECT(gbc.pc(), 0xbd1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf74), 0x7);
        EXPECT(gbc.readMem(0xaf75), 0x6f);
        // CD 02A6
        gbc.setState(0x8038, 0xd2a5, 0xc6f0, 0x8b46, 0xb64, 0xe1c5, 0x0, 0x1);
        gbc.writeMem(0x8038, { 0xcd, 0xec, 0x9c });
        gbc.writeMem(0xd2a3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd2a3);
        EXPECT(gbc.pc(), 0x9cec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8038), 0xcd);
        EXPECT(gbc.readMem(0x8039), 0xec);
        EXPECT(gbc.readMem(0x803a), 0x9c);
        EXPECT(gbc.readMem(0xd2a3), 0x3b);
        EXPECT(gbc.readMem(0xd2a4), 0x80);
        // CD 02A7
        gbc.setState(0xb7dc, 0xdee8, 0x8420, 0xc277, 0xa28f, 0x13f0, 0x0, 0x1);
        gbc.writeMem(0xb7dc, { 0xcd, 0x28, 0xdf });
        gbc.writeMem(0xdee6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xdee6);
        EXPECT(gbc.pc(), 0xdf28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7dc), 0xcd);
        EXPECT(gbc.readMem(0xb7dd), 0x28);
        EXPECT(gbc.readMem(0xb7de), 0xdf);
        EXPECT(gbc.readMem(0xdee6), 0xdf);
        EXPECT(gbc.readMem(0xdee7), 0xb7);
        // CD 02A8
        gbc.setState(0xa46a, 0x88f9, 0x35a0, 0xfefb, 0x5bbf, 0x14f8, 0x0, 0x1);
        gbc.writeMem(0x88f7, { 0x0, 0x0 });
        gbc.writeMem(0xa46a, { 0xcd, 0x59, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x88f7);
        EXPECT(gbc.pc(), 0x8e59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f7), 0x6d);
        EXPECT(gbc.readMem(0x88f8), 0xa4);
        EXPECT(gbc.readMem(0xa46a), 0xcd);
        EXPECT(gbc.readMem(0xa46b), 0x59);
        EXPECT(gbc.readMem(0xa46c), 0x8e);
        // CD 02AB
        gbc.setState(0xd3f3, 0xb7c2, 0x1fa0, 0xc20f, 0x4fc, 0x14f6, 0x1, 0x1);
        gbc.writeMem(0xb7c0, { 0x0, 0x0 });
        gbc.writeMem(0xd3f3, { 0xcd, 0x18, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb7c0);
        EXPECT(gbc.pc(), 0x418);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c0), 0xf6);
        EXPECT(gbc.readMem(0xb7c1), 0xd3);
        EXPECT(gbc.readMem(0xd3f3), 0xcd);
        EXPECT(gbc.readMem(0xd3f4), 0x18);
        EXPECT(gbc.readMem(0xd3f5), 0x4);
        // CD 02AC
        gbc.setState(0x87e3, 0xee6a, 0x8040, 0xd011, 0x6876, 0x9e6b, 0x0, 0x1);
        gbc.writeMem(0x87e3, { 0xcd, 0x6f, 0x8a });
        gbc.writeMem(0xee68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xee68);
        EXPECT(gbc.pc(), 0x8a6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e3), 0xcd);
        EXPECT(gbc.readMem(0x87e4), 0x6f);
        EXPECT(gbc.readMem(0x87e5), 0x8a);
        EXPECT(gbc.readMem(0xee68), 0xe6);
        EXPECT(gbc.readMem(0xee69), 0x87);
        // CD 02AD
        gbc.setState(0xa73d, 0xa74a, 0x8cc0, 0x6509, 0x8621, 0x9b29, 0x0, 0x1);
        gbc.writeMem(0xa73d, { 0xcd, 0xe1, 0x64 });
        gbc.writeMem(0xa748, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa748);
        EXPECT(gbc.pc(), 0x64e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa73d), 0xcd);
        EXPECT(gbc.readMem(0xa73e), 0xe1);
        EXPECT(gbc.readMem(0xa73f), 0x64);
        EXPECT(gbc.readMem(0xa748), 0x40);
        EXPECT(gbc.readMem(0xa749), 0xa7);
        // CD 02AE
        gbc.setState(0xef63, 0x9b3c, 0xf940, 0xbc7, 0xac71, 0xc058, 0x0, 0x1);
        gbc.writeMem(0x9b3a, { 0x0, 0x0 });
        gbc.writeMem(0xef63, { 0xcd, 0x6f, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9b3a);
        EXPECT(gbc.pc(), 0xa66f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b3a), 0x66);
        EXPECT(gbc.readMem(0x9b3b), 0xef);
        EXPECT(gbc.readMem(0xef63), 0xcd);
        EXPECT(gbc.readMem(0xef64), 0x6f);
        EXPECT(gbc.readMem(0xef65), 0xa6);
        // CD 02B0
        gbc.setState(0x3cc4, 0xfd1d, 0x9e60, 0x82fc, 0x81e1, 0xeac9, 0x0, 0x1);
        gbc.writeMem(0x3cc4, { 0xcd, 0x93, 0x67 });
        gbc.writeMem(0xfd1b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfd1b);
        EXPECT(gbc.pc(), 0x6793);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfd1b), 0xc7);
        EXPECT(gbc.readMem(0xfd1c), 0x3c);
        // CD 02B2
        gbc.setState(0x2fd2, 0xfc3e, 0x1f70, 0xdf4a, 0x5f31, 0x9a19, 0x0, 0x0);
        gbc.writeMem(0x2fd2, { 0xcd, 0x5a, 0xde });
        gbc.writeMem(0xfc3c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfc3c);
        EXPECT(gbc.pc(), 0xde5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc3c), 0xd5);
        EXPECT(gbc.readMem(0xfc3d), 0x2f);
        // CD 02B3
        gbc.setState(0x235c, 0x8de7, 0x4dd0, 0x2196, 0x394e, 0x2add, 0x1, 0x0);
        gbc.writeMem(0x235c, { 0xcd, 0x71, 0x8d });
        gbc.writeMem(0x8de5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8de5);
        EXPECT(gbc.pc(), 0x8d71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de5), 0x5f);
        EXPECT(gbc.readMem(0x8de6), 0x23);
        // CD 02B6
        gbc.setState(0x3d49, 0xef8a, 0x4410, 0xc018, 0xffd6, 0x1874, 0x0, 0x0);
        gbc.writeMem(0x3d49, { 0xcd, 0xc8, 0x95 });
        gbc.writeMem(0xef88, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xef88);
        EXPECT(gbc.pc(), 0x95c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef88), 0x4c);
        EXPECT(gbc.readMem(0xef89), 0x3d);
        // CD 02B7
        gbc.setState(0x48ac, 0x9705, 0x1d10, 0x9154, 0xca89, 0x634b, 0x1, 0x1);
        gbc.writeMem(0x48ac, { 0xcd, 0xa, 0x36 });
        gbc.writeMem(0x9703, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9703);
        EXPECT(gbc.pc(), 0x360a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9703), 0xaf);
        EXPECT(gbc.readMem(0x9704), 0x48);
        // CD 02B8
        gbc.setState(0x57cc, 0x80ea, 0xcd80, 0x3152, 0x23d2, 0x9e26, 0x0, 0x0);
        gbc.writeMem(0x57cc, { 0xcd, 0xa8, 0xcf });
        gbc.writeMem(0x80e8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x80e8);
        EXPECT(gbc.pc(), 0xcfa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e8), 0xcf);
        EXPECT(gbc.readMem(0x80e9), 0x57);
        // CD 02BA
        gbc.setState(0x3d3e, 0xbb51, 0x860, 0x4e63, 0xd6aa, 0x6dd0, 0x1, 0x1);
        gbc.writeMem(0x3d3e, { 0xcd, 0xc3, 0xc7 });
        gbc.writeMem(0xbb4f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbb4f);
        EXPECT(gbc.pc(), 0xc7c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb4f), 0x41);
        EXPECT(gbc.readMem(0xbb50), 0x3d);
        // CD 02BC
        gbc.setState(0x2858, 0x8318, 0xc0, 0x7542, 0x3a9, 0xdd36, 0x1, 0x0);
        gbc.writeMem(0x2858, { 0xcd, 0x4c, 0x6d });
        gbc.writeMem(0x8316, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8316);
        EXPECT(gbc.pc(), 0x6d4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8316), 0x5b);
        EXPECT(gbc.readMem(0x8317), 0x28);
        // CD 02BD
        gbc.setState(0x35d9, 0xd965, 0x2630, 0x6884, 0xe19b, 0x1daf, 0x0, 0x0);
        gbc.writeMem(0x35d9, { 0xcd, 0x7a, 0x58 });
        gbc.writeMem(0xd963, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd963);
        EXPECT(gbc.pc(), 0x587a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd963), 0xdc);
        EXPECT(gbc.readMem(0xd964), 0x35);
        // CD 02C1
        gbc.setState(0x1fab, 0x838f, 0x71b0, 0x8fe7, 0xdd17, 0xae04, 0x1, 0x0);
        gbc.writeMem(0x1fab, { 0xcd, 0xb5, 0x64 });
        gbc.writeMem(0x838d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x838d);
        EXPECT(gbc.pc(), 0x64b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x838d), 0xae);
        EXPECT(gbc.readMem(0x838e), 0x1f);
        // CD 02C3
        gbc.setState(0x561f, 0x89ce, 0xfdf0, 0xd79a, 0x4596, 0x28f, 0x0, 0x1);
        gbc.writeMem(0x561f, { 0xcd, 0x6b, 0xe3 });
        gbc.writeMem(0x89cc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x89cc);
        EXPECT(gbc.pc(), 0xe36b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89cc), 0x22);
        EXPECT(gbc.readMem(0x89cd), 0x56);
        // CD 02C6
        gbc.setState(0x78c, 0xc1e2, 0x29f0, 0x9c83, 0x8d95, 0xcc10, 0x0, 0x1);
        gbc.writeMem(0x78c, { 0xcd, 0x9e, 0xba });
        gbc.writeMem(0xc1e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc1e0);
        EXPECT(gbc.pc(), 0xba9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e0), 0x8f);
        EXPECT(gbc.readMem(0xc1e1), 0x7);
        // CD 02CA
        gbc.setState(0x2a44, 0xcaf0, 0x2a70, 0x8ce9, 0xc1e8, 0xfe20, 0x0, 0x1);
        gbc.writeMem(0x2a44, { 0xcd, 0x29, 0x1a });
        gbc.writeMem(0xcaee, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xcaee);
        EXPECT(gbc.pc(), 0x1a29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaee), 0x47);
        EXPECT(gbc.readMem(0xcaef), 0x2a);
        // CD 02CB
        gbc.setState(0xcd51, 0x8826, 0x8030, 0x1a89, 0xde38, 0x2afa, 0x0, 0x1);
        gbc.writeMem(0x8824, { 0x0, 0x0 });
        gbc.writeMem(0xcd51, { 0xcd, 0x36, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8824);
        EXPECT(gbc.pc(), 0x8b36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8824), 0x54);
        EXPECT(gbc.readMem(0x8825), 0xcd);
        EXPECT(gbc.readMem(0xcd51), 0xcd);
        EXPECT(gbc.readMem(0xcd52), 0x36);
        EXPECT(gbc.readMem(0xcd53), 0x8b);
        // CD 02CC
        gbc.setState(0x161d, 0x9fc8, 0xbef0, 0xe7ac, 0xcb0, 0x6e75, 0x1, 0x1);
        gbc.writeMem(0x161d, { 0xcd, 0xf8, 0xc3 });
        gbc.writeMem(0x9fc6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9fc6);
        EXPECT(gbc.pc(), 0xc3f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc6), 0x20);
        EXPECT(gbc.readMem(0x9fc7), 0x16);
        // CD 02CD
        gbc.setState(0x536b, 0xc857, 0xbe90, 0xa4cf, 0x1a8a, 0x459f, 0x0, 0x1);
        gbc.writeMem(0x536b, { 0xcd, 0x36, 0xdd });
        gbc.writeMem(0xc855, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc855);
        EXPECT(gbc.pc(), 0xdd36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc855), 0x6e);
        EXPECT(gbc.readMem(0xc856), 0x53);
        // CD 02CF
        gbc.setState(0x6b18, 0xb4af, 0xedb0, 0x6592, 0x1661, 0xfb38, 0x0, 0x1);
        gbc.writeMem(0x6b18, { 0xcd, 0xe4, 0x2f });
        gbc.writeMem(0xb4ad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb4ad);
        EXPECT(gbc.pc(), 0x2fe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ad), 0x1b);
        EXPECT(gbc.readMem(0xb4ae), 0x6b);
        // CD 02D2
        gbc.setState(0x6ed7, 0xc210, 0x1440, 0x4331, 0x4e25, 0x8de1, 0x1, 0x1);
        gbc.writeMem(0x6ed7, { 0xcd, 0x35, 0xd3 });
        gbc.writeMem(0xc20e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc20e);
        EXPECT(gbc.pc(), 0xd335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc20e), 0xda);
        EXPECT(gbc.readMem(0xc20f), 0x6e);
        // CD 02D4
        gbc.setState(0x8d2c, 0xfb3b, 0xe690, 0xf2b9, 0xb166, 0x2781, 0x0, 0x0);
        gbc.writeMem(0x8d2c, { 0xcd, 0xf0, 0xc5 });
        gbc.writeMem(0xfb39, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfb39);
        EXPECT(gbc.pc(), 0xc5f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d2c), 0xcd);
        EXPECT(gbc.readMem(0x8d2d), 0xf0);
        EXPECT(gbc.readMem(0x8d2e), 0xc5);
        EXPECT(gbc.readMem(0xfb39), 0x2f);
        EXPECT(gbc.readMem(0xfb3a), 0x8d);
        // CD 02D8
        gbc.setState(0xdf37, 0x86b8, 0xee70, 0xc3ce, 0x6ef2, 0xbe62, 0x0, 0x1);
        gbc.writeMem(0x86b6, { 0x0, 0x0 });
        gbc.writeMem(0xdf37, { 0xcd, 0x5d, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x86b6);
        EXPECT(gbc.pc(), 0x345d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86b6), 0x3a);
        EXPECT(gbc.readMem(0x86b7), 0xdf);
        EXPECT(gbc.readMem(0xdf37), 0xcd);
        EXPECT(gbc.readMem(0xdf38), 0x5d);
        EXPECT(gbc.readMem(0xdf39), 0x34);
        // CD 02D9
        gbc.setState(0x8f68, 0xd1de, 0x63d0, 0xb3d0, 0x974a, 0x4a60, 0x0, 0x1);
        gbc.writeMem(0x8f68, { 0xcd, 0x9e, 0x63 });
        gbc.writeMem(0xd1dc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd1dc);
        EXPECT(gbc.pc(), 0x639e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f68), 0xcd);
        EXPECT(gbc.readMem(0x8f69), 0x9e);
        EXPECT(gbc.readMem(0x8f6a), 0x63);
        EXPECT(gbc.readMem(0xd1dc), 0x6b);
        EXPECT(gbc.readMem(0xd1dd), 0x8f);
        // CD 02DB
        gbc.setState(0xb88c, 0xa0c5, 0x9b80, 0xe0e2, 0xbc0c, 0x838, 0x0, 0x0);
        gbc.writeMem(0xa0c3, { 0x0, 0x0 });
        gbc.writeMem(0xb88c, { 0xcd, 0x37, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa0c3);
        EXPECT(gbc.pc(), 0xf737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c3), 0x8f);
        EXPECT(gbc.readMem(0xa0c4), 0xb8);
        EXPECT(gbc.readMem(0xb88c), 0xcd);
        EXPECT(gbc.readMem(0xb88d), 0x37);
        EXPECT(gbc.readMem(0xb88e), 0xf7);
        // CD 02DF
        gbc.setState(0x9c25, 0xfc96, 0xc020, 0xfc8e, 0x3051, 0xc04d, 0x0, 0x1);
        gbc.writeMem(0x9c25, { 0xcd, 0x5d, 0xfd });
        gbc.writeMem(0xfc94, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xfc94);
        EXPECT(gbc.pc(), 0xfd5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c25), 0xcd);
        EXPECT(gbc.readMem(0x9c26), 0x5d);
        EXPECT(gbc.readMem(0x9c27), 0xfd);
        EXPECT(gbc.readMem(0xfc94), 0x28);
        EXPECT(gbc.readMem(0xfc95), 0x9c);
        // CD 02E2
        gbc.setState(0x86ea, 0x981a, 0xed90, 0x96ba, 0xa376, 0x57d6, 0x1, 0x1);
        gbc.writeMem(0x86ea, { 0xcd, 0xd5, 0x94 });
        gbc.writeMem(0x9818, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9818);
        EXPECT(gbc.pc(), 0x94d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ea), 0xcd);
        EXPECT(gbc.readMem(0x86eb), 0xd5);
        EXPECT(gbc.readMem(0x86ec), 0x94);
        EXPECT(gbc.readMem(0x9818), 0xed);
        EXPECT(gbc.readMem(0x9819), 0x86);
        // CD 02E3
        gbc.setState(0xc2fc, 0xf27b, 0x9c30, 0x5a81, 0x4cf4, 0x65e6, 0x1, 0x0);
        gbc.writeMem(0xc2fc, { 0xcd, 0xdb, 0xfd });
        gbc.writeMem(0xf279, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf279);
        EXPECT(gbc.pc(), 0xfddb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2fc), 0xcd);
        EXPECT(gbc.readMem(0xc2fd), 0xdb);
        EXPECT(gbc.readMem(0xc2fe), 0xfd);
        EXPECT(gbc.readMem(0xf279), 0xff);
        EXPECT(gbc.readMem(0xf27a), 0xc2);
        // CD 02E4
        gbc.setState(0x6b7c, 0xca76, 0x8140, 0xcd03, 0xcb06, 0x5c84, 0x0, 0x1);
        gbc.writeMem(0x6b7c, { 0xcd, 0xf, 0xc7 });
        gbc.writeMem(0xca74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xca74);
        EXPECT(gbc.pc(), 0xc70f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca74), 0x7f);
        EXPECT(gbc.readMem(0xca75), 0x6b);
        // CD 02E5
        gbc.setState(0x33cb, 0xcce9, 0x1930, 0xb557, 0x8c25, 0xd315, 0x0, 0x1);
        gbc.writeMem(0x33cb, { 0xcd, 0x5c, 0xcc });
        gbc.writeMem(0xcce7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xcce7);
        EXPECT(gbc.pc(), 0xcc5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcce7), 0xce);
        EXPECT(gbc.readMem(0xcce8), 0x33);
        // CD 02ED
        gbc.setState(0x8c3, 0x8d48, 0x750, 0xa141, 0x6863, 0xd060, 0x1, 0x1);
        gbc.writeMem(0x8c3, { 0xcd, 0x38, 0xb3 });
        gbc.writeMem(0x8d46, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8d46);
        EXPECT(gbc.pc(), 0xb338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d46), 0xc6);
        EXPECT(gbc.readMem(0x8d47), 0x8);
        // CD 02EE
        gbc.setState(0x6b3f, 0xf275, 0xd460, 0xf2fc, 0x60ec, 0x2524, 0x1, 0x0);
        gbc.writeMem(0x6b3f, { 0xcd, 0x77, 0xf2 });
        gbc.writeMem(0xf273, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf273);
        EXPECT(gbc.pc(), 0xf277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf273), 0x42);
        EXPECT(gbc.readMem(0xf274), 0x6b);
        // CD 02F0
        gbc.setState(0x83d5, 0x83f9, 0x91d0, 0x6b13, 0x1938, 0x6b08, 0x1, 0x0);
        gbc.writeMem(0x83d5, { 0xcd, 0x79, 0xa3 });
        gbc.writeMem(0x83f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x83f7);
        EXPECT(gbc.pc(), 0xa379);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83d5), 0xcd);
        EXPECT(gbc.readMem(0x83d6), 0x79);
        EXPECT(gbc.readMem(0x83d7), 0xa3);
        EXPECT(gbc.readMem(0x83f7), 0xd8);
        EXPECT(gbc.readMem(0x83f8), 0x83);
        // CD 02F2
        gbc.setState(0x23f9, 0xe69b, 0xf0d0, 0x90b2, 0xce06, 0xcecc, 0x1, 0x0);
        gbc.writeMem(0x23f9, { 0xcd, 0x6e, 0x5c });
        gbc.writeMem(0xe699, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe699);
        EXPECT(gbc.pc(), 0x5c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe699), 0xfc);
        EXPECT(gbc.readMem(0xe69a), 0x23);
        // CD 02F3
        gbc.setState(0x6d0f, 0xcca0, 0x8e90, 0x1141, 0x9e9f, 0xc718, 0x1, 0x0);
        gbc.writeMem(0x6d0f, { 0xcd, 0xdc, 0x2e });
        gbc.writeMem(0xcc9e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xcc9e);
        EXPECT(gbc.pc(), 0x2edc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc9e), 0x12);
        EXPECT(gbc.readMem(0xcc9f), 0x6d);
        // CD 02F9
        gbc.setState(0x1f3e, 0x8d45, 0xbd00, 0x52be, 0x258a, 0x89f, 0x1, 0x1);
        gbc.writeMem(0x1f3e, { 0xcd, 0xbf, 0xd8 });
        gbc.writeMem(0x8d43, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8d43);
        EXPECT(gbc.pc(), 0xd8bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d43), 0x41);
        EXPECT(gbc.readMem(0x8d44), 0x1f);
        // CD 02FC
        gbc.setState(0x6e9e, 0xce72, 0xb7f0, 0x806f, 0xecdf, 0xcadb, 0x0, 0x0);
        gbc.writeMem(0x6e9e, { 0xcd, 0x87, 0x47 });
        gbc.writeMem(0xce70, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xce70);
        EXPECT(gbc.pc(), 0x4787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce70), 0xa1);
        EXPECT(gbc.readMem(0xce71), 0x6e);
        // CD 0300
        gbc.setState(0x499f, 0x9844, 0xe910, 0xd030, 0x80e2, 0x7e4f, 0x1, 0x0);
        gbc.writeMem(0x499f, { 0xcd, 0x6e, 0x2f });
        gbc.writeMem(0x9842, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9842);
        EXPECT(gbc.pc(), 0x2f6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9842), 0xa2);
        EXPECT(gbc.readMem(0x9843), 0x49);
        // CD 0303
        gbc.setState(0xae25, 0xbf0e, 0x7120, 0x618e, 0x5647, 0x415, 0x1, 0x1);
        gbc.writeMem(0xae25, { 0xcd, 0x13, 0x41 });
        gbc.writeMem(0xbf0c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbf0c);
        EXPECT(gbc.pc(), 0x4113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae25), 0xcd);
        EXPECT(gbc.readMem(0xae26), 0x13);
        EXPECT(gbc.readMem(0xae27), 0x41);
        EXPECT(gbc.readMem(0xbf0c), 0x28);
        EXPECT(gbc.readMem(0xbf0d), 0xae);
        // CD 0304
        gbc.setState(0xaa3, 0xf87b, 0x2ac0, 0x48d9, 0x3959, 0xa3fc, 0x0, 0x1);
        gbc.writeMem(0xaa3, { 0xcd, 0x9e, 0x1a });
        gbc.writeMem(0xf879, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf879);
        EXPECT(gbc.pc(), 0x1a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf879), 0xa6);
        EXPECT(gbc.readMem(0xf87a), 0xa);
        // CD 0305
        gbc.setState(0x39d, 0xb598, 0x7130, 0x2363, 0x4af0, 0xf71b, 0x1, 0x1);
        gbc.writeMem(0x39d, { 0xcd, 0x9, 0x85 });
        gbc.writeMem(0xb596, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb596);
        EXPECT(gbc.pc(), 0x8509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb596), 0xa0);
        EXPECT(gbc.readMem(0xb597), 0x3);
        // CD 0306
        gbc.setState(0x3080, 0xe635, 0x50c0, 0xaefa, 0xcab8, 0xa904, 0x0, 0x1);
        gbc.writeMem(0x3080, { 0xcd, 0xdc, 0x60 });
        gbc.writeMem(0xe633, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe633);
        EXPECT(gbc.pc(), 0x60dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe633), 0x83);
        EXPECT(gbc.readMem(0xe634), 0x30);
        // CD 0307
        gbc.setState(0x1c56, 0x84e0, 0x2fb0, 0x9b6e, 0x1238, 0x71e8, 0x1, 0x1);
        gbc.writeMem(0x1c56, { 0xcd, 0x45, 0x78 });
        gbc.writeMem(0x84de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x84de);
        EXPECT(gbc.pc(), 0x7845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84de), 0x59);
        EXPECT(gbc.readMem(0x84df), 0x1c);
        // CD 0308
        gbc.setState(0xf6c, 0x8cfb, 0xc50, 0xc55d, 0x45a9, 0x8fcc, 0x0, 0x1);
        gbc.writeMem(0xf6c, { 0xcd, 0xbe, 0xa9 });
        gbc.writeMem(0x8cf9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8cf9);
        EXPECT(gbc.pc(), 0xa9be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cf9), 0x6f);
        EXPECT(gbc.readMem(0x8cfa), 0xf);
        // CD 030B
        gbc.setState(0x4ddb, 0xc5b0, 0x6140, 0xd8cb, 0x84f7, 0xfe6c, 0x1, 0x1);
        gbc.writeMem(0x4ddb, { 0xcd, 0xfb, 0xa9 });
        gbc.writeMem(0xc5ae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc5ae);
        EXPECT(gbc.pc(), 0xa9fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ae), 0xde);
        EXPECT(gbc.readMem(0xc5af), 0x4d);
        // CD 030C
        gbc.setState(0x445c, 0xaf3f, 0x3d90, 0xe242, 0x3ddd, 0x507b, 0x0, 0x1);
        gbc.writeMem(0x445c, { 0xcd, 0xc9, 0x2 });
        gbc.writeMem(0xaf3d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xaf3d);
        EXPECT(gbc.pc(), 0x2c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf3d), 0x5f);
        EXPECT(gbc.readMem(0xaf3e), 0x44);
        // CD 0311
        gbc.setState(0xc9fc, 0xc30d, 0x2f90, 0xe68c, 0x4386, 0xb3c4, 0x0, 0x0);
        gbc.writeMem(0xc30b, { 0x0, 0x0 });
        gbc.writeMem(0xc9fc, { 0xcd, 0x5e, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc30b);
        EXPECT(gbc.pc(), 0x4d5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc30b), 0xff);
        EXPECT(gbc.readMem(0xc30c), 0xc9);
        EXPECT(gbc.readMem(0xc9fc), 0xcd);
        EXPECT(gbc.readMem(0xc9fd), 0x5e);
        EXPECT(gbc.readMem(0xc9fe), 0x4d);
        // CD 0315
        gbc.setState(0xefb2, 0xf17b, 0x710, 0xb018, 0x8b15, 0x727d, 0x0, 0x1);
        gbc.writeMem(0xefb2, { 0xcd, 0x83, 0xaa });
        gbc.writeMem(0xf179, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf179);
        EXPECT(gbc.pc(), 0xaa83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb2), 0xcd);
        EXPECT(gbc.readMem(0xefb3), 0x83);
        EXPECT(gbc.readMem(0xefb4), 0xaa);
        EXPECT(gbc.readMem(0xf179), 0xb5);
        EXPECT(gbc.readMem(0xf17a), 0xef);
        // CD 0316
        gbc.setState(0x589f, 0xda1b, 0x3900, 0xb6f0, 0x5802, 0x2014, 0x0, 0x0);
        gbc.writeMem(0x589f, { 0xcd, 0x70, 0x2b });
        gbc.writeMem(0xda19, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xda19);
        EXPECT(gbc.pc(), 0x2b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda19), 0xa2);
        EXPECT(gbc.readMem(0xda1a), 0x58);
        // CD 0318
        gbc.setState(0x717b, 0x93df, 0x840, 0x5d5b, 0xac08, 0x5d66, 0x1, 0x0);
        gbc.writeMem(0x717b, { 0xcd, 0xa8, 0x14 });
        gbc.writeMem(0x93dd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x93dd);
        EXPECT(gbc.pc(), 0x14a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93dd), 0x7e);
        EXPECT(gbc.readMem(0x93de), 0x71);
        // CD 0319
        gbc.setState(0x439a, 0xd529, 0x6030, 0xacc3, 0x1864, 0x4b6d, 0x0, 0x0);
        gbc.writeMem(0x439a, { 0xcd, 0x28, 0x62 });
        gbc.writeMem(0xd527, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd527);
        EXPECT(gbc.pc(), 0x6228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd527), 0x9d);
        EXPECT(gbc.readMem(0xd528), 0x43);
        // CD 031A
        gbc.setState(0x928a, 0x8ab5, 0x6930, 0x22d6, 0x7009, 0x33e2, 0x0, 0x1);
        gbc.writeMem(0x8ab3, { 0x0, 0x0 });
        gbc.writeMem(0x928a, { 0xcd, 0xeb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8ab3);
        EXPECT(gbc.pc(), 0x58eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ab3), 0x8d);
        EXPECT(gbc.readMem(0x8ab4), 0x92);
        EXPECT(gbc.readMem(0x928a), 0xcd);
        EXPECT(gbc.readMem(0x928b), 0xeb);
        EXPECT(gbc.readMem(0x928c), 0x58);
        // CD 031B
        gbc.setState(0xb0b9, 0xfaab, 0x9c70, 0xa04d, 0xf2f3, 0x9072, 0x0, 0x1);
        gbc.writeMem(0xb0b9, { 0xcd, 0xe, 0xd3 });
        gbc.writeMem(0xfaa9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xfaa9);
        EXPECT(gbc.pc(), 0xd30e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b9), 0xcd);
        EXPECT(gbc.readMem(0xb0ba), 0xe);
        EXPECT(gbc.readMem(0xb0bb), 0xd3);
        EXPECT(gbc.readMem(0xfaa9), 0xbc);
        EXPECT(gbc.readMem(0xfaaa), 0xb0);
        // CD 0321
        gbc.setState(0x98bc, 0xc9f0, 0xf4d0, 0xf6af, 0xfcb6, 0xc1df, 0x1, 0x1);
        gbc.writeMem(0x98bc, { 0xcd, 0x21, 0xf4 });
        gbc.writeMem(0xc9ee, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc9ee);
        EXPECT(gbc.pc(), 0xf421);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98bc), 0xcd);
        EXPECT(gbc.readMem(0x98bd), 0x21);
        EXPECT(gbc.readMem(0x98be), 0xf4);
        EXPECT(gbc.readMem(0xc9ee), 0xbf);
        EXPECT(gbc.readMem(0xc9ef), 0x98);
        // CD 0325
        gbc.setState(0x9c9f, 0xd7e4, 0x150, 0x490c, 0x26a7, 0x9694, 0x1, 0x1);
        gbc.writeMem(0x9c9f, { 0xcd, 0x3b, 0x5a });
        gbc.writeMem(0xd7e2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd7e2);
        EXPECT(gbc.pc(), 0x5a3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9f), 0xcd);
        EXPECT(gbc.readMem(0x9ca0), 0x3b);
        EXPECT(gbc.readMem(0x9ca1), 0x5a);
        EXPECT(gbc.readMem(0xd7e2), 0xa2);
        EXPECT(gbc.readMem(0xd7e3), 0x9c);
        // CD 0327
        gbc.setState(0x3b7d, 0xfcda, 0xb4f0, 0xbcd2, 0xe035, 0x8b1a, 0x0, 0x1);
        gbc.writeMem(0x3b7d, { 0xcd, 0x9f, 0xf2 });
        gbc.writeMem(0xfcd8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xfcd8);
        EXPECT(gbc.pc(), 0xf29f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfcd8), 0x80);
        EXPECT(gbc.readMem(0xfcd9), 0x3b);
        // CD 032C
        gbc.setState(0x3590, 0xa39e, 0x41c0, 0xc868, 0xe78d, 0xc7f8, 0x0, 0x0);
        gbc.writeMem(0x3590, { 0xcd, 0x95, 0x19 });
        gbc.writeMem(0xa39c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa39c);
        EXPECT(gbc.pc(), 0x1995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa39c), 0x93);
        EXPECT(gbc.readMem(0xa39d), 0x35);
        // CD 032E
        gbc.setState(0x5bbb, 0xf703, 0x60d0, 0x7db9, 0x58ad, 0xece4, 0x0, 0x1);
        gbc.writeMem(0x5bbb, { 0xcd, 0x9d, 0xcc });
        gbc.writeMem(0xf701, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf701);
        EXPECT(gbc.pc(), 0xcc9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf701), 0xbe);
        EXPECT(gbc.readMem(0xf702), 0x5b);
        // CD 0330
        gbc.setState(0xc06, 0xae44, 0x190, 0xdb3, 0xa6ef, 0x7145, 0x1, 0x0);
        gbc.writeMem(0xc06, { 0xcd, 0x31, 0x43 });
        gbc.writeMem(0xae42, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xae42);
        EXPECT(gbc.pc(), 0x4331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae42), 0x9);
        EXPECT(gbc.readMem(0xae43), 0xc);
        // CD 0331
        gbc.setState(0xa4e0, 0xbfda, 0x98c0, 0x12a6, 0x6670, 0xbeb2, 0x0, 0x0);
        gbc.writeMem(0xa4e0, { 0xcd, 0x16, 0xaf });
        gbc.writeMem(0xbfd8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xbfd8);
        EXPECT(gbc.pc(), 0xaf16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e0), 0xcd);
        EXPECT(gbc.readMem(0xa4e1), 0x16);
        EXPECT(gbc.readMem(0xa4e2), 0xaf);
        EXPECT(gbc.readMem(0xbfd8), 0xe3);
        EXPECT(gbc.readMem(0xbfd9), 0xa4);
        // CD 0334
        gbc.setState(0xb934, 0xd164, 0x95d0, 0x20fd, 0x6bdd, 0x6584, 0x0, 0x1);
        gbc.writeMem(0xb934, { 0xcd, 0x39, 0x3c });
        gbc.writeMem(0xd162, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd162);
        EXPECT(gbc.pc(), 0x3c39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb934), 0xcd);
        EXPECT(gbc.readMem(0xb935), 0x39);
        EXPECT(gbc.readMem(0xb936), 0x3c);
        EXPECT(gbc.readMem(0xd162), 0x37);
        EXPECT(gbc.readMem(0xd163), 0xb9);
        // CD 0335
        gbc.setState(0x44f9, 0xbbaf, 0xa0f0, 0x2c19, 0x195d, 0xe69d, 0x0, 0x1);
        gbc.writeMem(0x44f9, { 0xcd, 0x70, 0xe4 });
        gbc.writeMem(0xbbad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xbbad);
        EXPECT(gbc.pc(), 0xe470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbad), 0xfc);
        EXPECT(gbc.readMem(0xbbae), 0x44);
        // CD 0337
        gbc.setState(0xebd5, 0xc09e, 0xa60, 0x1280, 0xb714, 0xb418, 0x0, 0x1);
        gbc.writeMem(0xc09c, { 0x0, 0x0 });
        gbc.writeMem(0xebd5, { 0xcd, 0x1a, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc09c);
        EXPECT(gbc.pc(), 0xb51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc09c), 0xd8);
        EXPECT(gbc.readMem(0xc09d), 0xeb);
        EXPECT(gbc.readMem(0xebd5), 0xcd);
        EXPECT(gbc.readMem(0xebd6), 0x1a);
        EXPECT(gbc.readMem(0xebd7), 0xb5);
        // CD 0339
        gbc.setState(0x169, 0xad5f, 0xe370, 0x3c9, 0x8e5e, 0x87f5, 0x1, 0x1);
        gbc.writeMem(0x169, { 0xcd, 0xe6, 0xe3 });
        gbc.writeMem(0xad5d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xad5d);
        EXPECT(gbc.pc(), 0xe3e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad5d), 0x6c);
        EXPECT(gbc.readMem(0xad5e), 0x1);
        // CD 033A
        gbc.setState(0x1487, 0xc545, 0xcff0, 0x9e7a, 0x3cd3, 0xb418, 0x1, 0x1);
        gbc.writeMem(0x1487, { 0xcd, 0xbf, 0x46 });
        gbc.writeMem(0xc543, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc543);
        EXPECT(gbc.pc(), 0x46bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc543), 0x8a);
        EXPECT(gbc.readMem(0xc544), 0x14);
        // CD 033B
        gbc.setState(0x7d42, 0xb1b5, 0xad50, 0xc058, 0x745, 0xbdf5, 0x0, 0x0);
        gbc.writeMem(0x7d42, { 0xcd, 0xf3, 0x27 });
        gbc.writeMem(0xb1b3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb1b3);
        EXPECT(gbc.pc(), 0x27f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1b3), 0x45);
        EXPECT(gbc.readMem(0xb1b4), 0x7d);
        // CD 033F
        gbc.setState(0x1127, 0xf649, 0x1270, 0x13d, 0xeb, 0xd142, 0x0, 0x0);
        gbc.writeMem(0x1127, { 0xcd, 0xcd, 0xc6 });
        gbc.writeMem(0xf647, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf647);
        EXPECT(gbc.pc(), 0xc6cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf647), 0x2a);
        EXPECT(gbc.readMem(0xf648), 0x11);
        // CD 0340
        gbc.setState(0x67f5, 0xd665, 0x7dd0, 0x3354, 0xb432, 0xbf8, 0x0, 0x0);
        gbc.writeMem(0x67f5, { 0xcd, 0x70, 0xb4 });
        gbc.writeMem(0xd663, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd663);
        EXPECT(gbc.pc(), 0xb470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd663), 0xf8);
        EXPECT(gbc.readMem(0xd664), 0x67);
        // CD 0342
        gbc.setState(0xbe0b, 0xdcf8, 0x3d90, 0xa2b6, 0xf5b1, 0x8554, 0x1, 0x1);
        gbc.writeMem(0xbe0b, { 0xcd, 0x97, 0x8d });
        gbc.writeMem(0xdcf6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xdcf6);
        EXPECT(gbc.pc(), 0x8d97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe0b), 0xcd);
        EXPECT(gbc.readMem(0xbe0c), 0x97);
        EXPECT(gbc.readMem(0xbe0d), 0x8d);
        EXPECT(gbc.readMem(0xdcf6), 0xe);
        EXPECT(gbc.readMem(0xdcf7), 0xbe);
        // CD 0348
        gbc.setState(0xe9dd, 0xd87e, 0x9830, 0x15dc, 0xcb49, 0xb12f, 0x1, 0x1);
        gbc.writeMem(0xd87c, { 0x0, 0x0 });
        gbc.writeMem(0xe9dd, { 0xcd, 0x63, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd87c);
        EXPECT(gbc.pc(), 0x4d63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd87c), 0xe0);
        EXPECT(gbc.readMem(0xd87d), 0xe9);
        EXPECT(gbc.readMem(0xe9dd), 0xcd);
        EXPECT(gbc.readMem(0xe9de), 0x63);
        EXPECT(gbc.readMem(0xe9df), 0x4d);
        // CD 034A
        gbc.setState(0x7b4, 0xfd34, 0x2e90, 0x9974, 0x5733, 0xd049, 0x0, 0x1);
        gbc.writeMem(0x7b4, { 0xcd, 0x1c, 0xec });
        gbc.writeMem(0xfd32, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xfd32);
        EXPECT(gbc.pc(), 0xec1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd32), 0xb7);
        EXPECT(gbc.readMem(0xfd33), 0x7);
        // CD 034B
        gbc.setState(0x83f3, 0xf911, 0xb470, 0xbc6e, 0x2726, 0x40b9, 0x0, 0x1);
        gbc.writeMem(0x83f3, { 0xcd, 0x60, 0x34 });
        gbc.writeMem(0xf90f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf90f);
        EXPECT(gbc.pc(), 0x3460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83f3), 0xcd);
        EXPECT(gbc.readMem(0x83f4), 0x60);
        EXPECT(gbc.readMem(0x83f5), 0x34);
        EXPECT(gbc.readMem(0xf90f), 0xf6);
        EXPECT(gbc.readMem(0xf910), 0x83);
        // CD 034C
        gbc.setState(0x1211, 0x8d83, 0x9fb0, 0x9bb2, 0xf487, 0xadc1, 0x0, 0x0);
        gbc.writeMem(0x1211, { 0xcd, 0xa3, 0x86 });
        gbc.writeMem(0x8d81, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8d81);
        EXPECT(gbc.pc(), 0x86a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d81), 0x14);
        EXPECT(gbc.readMem(0x8d82), 0x12);
        // CD 034F
        gbc.setState(0x43aa, 0x9bce, 0x440, 0x929f, 0x85b2, 0x8a1, 0x1, 0x1);
        gbc.writeMem(0x43aa, { 0xcd, 0xdb, 0x76 });
        gbc.writeMem(0x9bcc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9bcc);
        EXPECT(gbc.pc(), 0x76db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bcc), 0xad);
        EXPECT(gbc.readMem(0x9bcd), 0x43);
        // CD 0352
        gbc.setState(0x3312, 0xb10c, 0xc0a0, 0xdf38, 0x7aac, 0x502b, 0x1, 0x1);
        gbc.writeMem(0x3312, { 0xcd, 0x4c, 0x77 });
        gbc.writeMem(0xb10a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb10a);
        EXPECT(gbc.pc(), 0x774c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb10a), 0x15);
        EXPECT(gbc.readMem(0xb10b), 0x33);
        // CD 0353
        gbc.setState(0x4937, 0xc337, 0x9d50, 0xc551, 0x519c, 0xaed7, 0x1, 0x0);
        gbc.writeMem(0x4937, { 0xcd, 0x75, 0x9c });
        gbc.writeMem(0xc335, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc335);
        EXPECT(gbc.pc(), 0x9c75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc335), 0x3a);
        EXPECT(gbc.readMem(0xc336), 0x49);
        // CD 0354
        gbc.setState(0xc209, 0xa2ff, 0xe3d0, 0xa6bc, 0x4fd0, 0xe2fd, 0x1, 0x0);
        gbc.writeMem(0xa2fd, { 0x0, 0x0 });
        gbc.writeMem(0xc209, { 0xcd, 0x80, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa2fd);
        EXPECT(gbc.pc(), 0xea80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2fd), 0xc);
        EXPECT(gbc.readMem(0xa2fe), 0xc2);
        EXPECT(gbc.readMem(0xc209), 0xcd);
        EXPECT(gbc.readMem(0xc20a), 0x80);
        EXPECT(gbc.readMem(0xc20b), 0xea);
        // CD 035D
        gbc.setState(0xd89d, 0xc4bc, 0xeae0, 0x3382, 0xdea1, 0xf26, 0x0, 0x0);
        gbc.writeMem(0xc4ba, { 0x0, 0x0 });
        gbc.writeMem(0xd89d, { 0xcd, 0x8d, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc4ba);
        EXPECT(gbc.pc(), 0x708d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ba), 0xa0);
        EXPECT(gbc.readMem(0xc4bb), 0xd8);
        EXPECT(gbc.readMem(0xd89d), 0xcd);
        EXPECT(gbc.readMem(0xd89e), 0x8d);
        EXPECT(gbc.readMem(0xd89f), 0x70);
        // CD 035E
        gbc.setState(0x948, 0xcfb3, 0xc840, 0x718b, 0x98d0, 0x1315, 0x1, 0x1);
        gbc.writeMem(0x948, { 0xcd, 0xd9, 0xb1 });
        gbc.writeMem(0xcfb1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xcfb1);
        EXPECT(gbc.pc(), 0xb1d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb1), 0x4b);
        EXPECT(gbc.readMem(0xcfb2), 0x9);
        // CD 035F
        gbc.setState(0x65b9, 0x8b87, 0xc8b0, 0x7170, 0x65ab, 0x41f4, 0x1, 0x1);
        gbc.writeMem(0x65b9, { 0xcd, 0x66, 0xe5 });
        gbc.writeMem(0x8b85, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8b85);
        EXPECT(gbc.pc(), 0xe566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b85), 0xbc);
        EXPECT(gbc.readMem(0x8b86), 0x65);
        // CD 0367
        gbc.setState(0xaebf, 0xf48a, 0x3be0, 0x5498, 0x4aa8, 0x938, 0x0, 0x1);
        gbc.writeMem(0xaebf, { 0xcd, 0xa6, 0x8b });
        gbc.writeMem(0xf488, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf488);
        EXPECT(gbc.pc(), 0x8ba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaebf), 0xcd);
        EXPECT(gbc.readMem(0xaec0), 0xa6);
        EXPECT(gbc.readMem(0xaec1), 0x8b);
        EXPECT(gbc.readMem(0xf488), 0xc2);
        EXPECT(gbc.readMem(0xf489), 0xae);
        // CD 0368
        gbc.setState(0x4c96, 0xc538, 0xd430, 0xbd8e, 0x7580, 0x32e9, 0x1, 0x0);
        gbc.writeMem(0x4c96, { 0xcd, 0x59, 0xf1 });
        gbc.writeMem(0xc536, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc536);
        EXPECT(gbc.pc(), 0xf159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc536), 0x99);
        EXPECT(gbc.readMem(0xc537), 0x4c);
        // CD 0369
        gbc.setState(0xa82b, 0xc2cc, 0x1a60, 0x6491, 0x1b70, 0x8042, 0x1, 0x1);
        gbc.writeMem(0xa82b, { 0xcd, 0xc4, 0xda });
        gbc.writeMem(0xc2ca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc2ca);
        EXPECT(gbc.pc(), 0xdac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82b), 0xcd);
        EXPECT(gbc.readMem(0xa82c), 0xc4);
        EXPECT(gbc.readMem(0xa82d), 0xda);
        EXPECT(gbc.readMem(0xc2ca), 0x2e);
        EXPECT(gbc.readMem(0xc2cb), 0xa8);
        // CD 0370
        gbc.setState(0x8c96, 0xafdb, 0xd540, 0x1d32, 0xd495, 0xceb1, 0x0, 0x1);
        gbc.writeMem(0x8c96, { 0xcd, 0xb, 0xa0 });
        gbc.writeMem(0xafd9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xafd9);
        EXPECT(gbc.pc(), 0xa00b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c96), 0xcd);
        EXPECT(gbc.readMem(0x8c97), 0xb);
        EXPECT(gbc.readMem(0x8c98), 0xa0);
        EXPECT(gbc.readMem(0xafd9), 0x99);
        EXPECT(gbc.readMem(0xafda), 0x8c);
        // CD 0371
        gbc.setState(0xadd0, 0xb9da, 0xdef0, 0x5151, 0x71f4, 0xc177, 0x0, 0x1);
        gbc.writeMem(0xadd0, { 0xcd, 0xca, 0x75 });
        gbc.writeMem(0xb9d8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb9d8);
        EXPECT(gbc.pc(), 0x75ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadd0), 0xcd);
        EXPECT(gbc.readMem(0xadd1), 0xca);
        EXPECT(gbc.readMem(0xadd2), 0x75);
        EXPECT(gbc.readMem(0xb9d8), 0xd3);
        EXPECT(gbc.readMem(0xb9d9), 0xad);
        // CD 0376
        gbc.setState(0x1951, 0x8db0, 0xaef0, 0xf06e, 0xb348, 0xe49c, 0x1, 0x1);
        gbc.writeMem(0x1951, { 0xcd, 0x5f, 0xe6 });
        gbc.writeMem(0x8dae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8dae);
        EXPECT(gbc.pc(), 0xe65f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dae), 0x54);
        EXPECT(gbc.readMem(0x8daf), 0x19);
        // CD 0379
        gbc.setState(0xcae, 0xfda8, 0x4c50, 0xd6db, 0x8c21, 0xed45, 0x1, 0x0);
        gbc.writeMem(0xcae, { 0xcd, 0x1c, 0x72 });
        gbc.writeMem(0xfda6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfda6);
        EXPECT(gbc.pc(), 0x721c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfda6), 0xb1);
        EXPECT(gbc.readMem(0xfda7), 0xc);
        // CD 037C
        gbc.setState(0xad33, 0xc804, 0x3630, 0x9a2b, 0xef69, 0xbbad, 0x1, 0x1);
        gbc.writeMem(0xad33, { 0xcd, 0xb3, 0x4b });
        gbc.writeMem(0xc802, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc802);
        EXPECT(gbc.pc(), 0x4bb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad33), 0xcd);
        EXPECT(gbc.readMem(0xad34), 0xb3);
        EXPECT(gbc.readMem(0xad35), 0x4b);
        EXPECT(gbc.readMem(0xc802), 0x36);
        EXPECT(gbc.readMem(0xc803), 0xad);
        // CD 037F
        gbc.setState(0x9b5d, 0x9229, 0x7a80, 0xfc43, 0xf9a7, 0xfb83, 0x1, 0x0);
        gbc.writeMem(0x9227, { 0x0, 0x0 });
        gbc.writeMem(0x9b5d, { 0xcd, 0xbb, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9227);
        EXPECT(gbc.pc(), 0x9abb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9227), 0x60);
        EXPECT(gbc.readMem(0x9228), 0x9b);
        EXPECT(gbc.readMem(0x9b5d), 0xcd);
        EXPECT(gbc.readMem(0x9b5e), 0xbb);
        EXPECT(gbc.readMem(0x9b5f), 0x9a);
        // CD 0380
        gbc.setState(0x9db2, 0xe544, 0xf640, 0x6240, 0x6b7c, 0xb39a, 0x1, 0x0);
        gbc.writeMem(0x9db2, { 0xcd, 0x1d, 0x87 });
        gbc.writeMem(0xe542, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe542);
        EXPECT(gbc.pc(), 0x871d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db2), 0xcd);
        EXPECT(gbc.readMem(0x9db3), 0x1d);
        EXPECT(gbc.readMem(0x9db4), 0x87);
        EXPECT(gbc.readMem(0xe542), 0xb5);
        EXPECT(gbc.readMem(0xe543), 0x9d);
        // CD 0385
        gbc.setState(0xc65e, 0xe89f, 0xc1a0, 0x9cf0, 0xe058, 0x780, 0x1, 0x0);
        gbc.writeMem(0xc65e, { 0xcd, 0xcd, 0x1c });
        gbc.writeMem(0xe89d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe89d);
        EXPECT(gbc.pc(), 0x1ccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc65e), 0xcd);
        EXPECT(gbc.readMem(0xc65f), 0xcd);
        EXPECT(gbc.readMem(0xc660), 0x1c);
        EXPECT(gbc.readMem(0xe89d), 0x61);
        EXPECT(gbc.readMem(0xe89e), 0xc6);
        // CD 0386
        gbc.setState(0xdcf8, 0xe1a0, 0xa630, 0x23a6, 0x472a, 0xe4b, 0x0, 0x1);
        gbc.writeMem(0xdcf8, { 0xcd, 0xe3, 0xf2 });
        gbc.writeMem(0xe19e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe19e);
        EXPECT(gbc.pc(), 0xf2e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf8), 0xcd);
        EXPECT(gbc.readMem(0xdcf9), 0xe3);
        EXPECT(gbc.readMem(0xdcfa), 0xf2);
        EXPECT(gbc.readMem(0xe19e), 0xfb);
        EXPECT(gbc.readMem(0xe19f), 0xdc);
        // CD 0387
        gbc.setState(0x71b, 0x8427, 0x5f80, 0xfe3a, 0x41a2, 0x5ea4, 0x1, 0x0);
        gbc.writeMem(0x71b, { 0xcd, 0xf5, 0x75 });
        gbc.writeMem(0x8425, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8425);
        EXPECT(gbc.pc(), 0x75f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8425), 0x1e);
        EXPECT(gbc.readMem(0x8426), 0x7);
        // CD 0388
        gbc.setState(0x170d, 0x9cb5, 0xb490, 0xda85, 0x35d5, 0x7556, 0x0, 0x0);
        gbc.writeMem(0x170d, { 0xcd, 0x82, 0x0 });
        gbc.writeMem(0x9cb3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9cb3);
        EXPECT(gbc.pc(), 0x82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb3), 0x10);
        EXPECT(gbc.readMem(0x9cb4), 0x17);
        // CD 038B
        gbc.setState(0xd876, 0x9ec4, 0x8d10, 0x49a0, 0xc6ea, 0xc2a6, 0x1, 0x1);
        gbc.writeMem(0x9ec2, { 0x0, 0x0 });
        gbc.writeMem(0xd876, { 0xcd, 0xf8, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9ec2);
        EXPECT(gbc.pc(), 0xfcf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec2), 0x79);
        EXPECT(gbc.readMem(0x9ec3), 0xd8);
        EXPECT(gbc.readMem(0xd876), 0xcd);
        EXPECT(gbc.readMem(0xd877), 0xf8);
        EXPECT(gbc.readMem(0xd878), 0xfc);
        // CD 038D
        gbc.setState(0x1719, 0xee20, 0x7ec0, 0xd6a0, 0x774f, 0xde2e, 0x1, 0x1);
        gbc.writeMem(0x1719, { 0xcd, 0x51, 0xcc });
        gbc.writeMem(0xee1e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xee1e);
        EXPECT(gbc.pc(), 0xcc51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee1e), 0x1c);
        EXPECT(gbc.readMem(0xee1f), 0x17);
        // CD 0392
        gbc.setState(0x579d, 0xd9de, 0x20, 0x4a1, 0xffc6, 0x238b, 0x1, 0x1);
        gbc.writeMem(0x579d, { 0xcd, 0xf4, 0xb9 });
        gbc.writeMem(0xd9dc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd9dc);
        EXPECT(gbc.pc(), 0xb9f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9dc), 0xa0);
        EXPECT(gbc.readMem(0xd9dd), 0x57);
        // CD 0393
        gbc.setState(0xcb7a, 0x9471, 0xd910, 0xc18a, 0xb181, 0x8886, 0x0, 0x0);
        gbc.writeMem(0x946f, { 0x0, 0x0 });
        gbc.writeMem(0xcb7a, { 0xcd, 0x49, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x946f);
        EXPECT(gbc.pc(), 0x3749);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x946f), 0x7d);
        EXPECT(gbc.readMem(0x9470), 0xcb);
        EXPECT(gbc.readMem(0xcb7a), 0xcd);
        EXPECT(gbc.readMem(0xcb7b), 0x49);
        EXPECT(gbc.readMem(0xcb7c), 0x37);
        // CD 0394
        gbc.setState(0x1ceb, 0xd6cb, 0x54c0, 0x7fc9, 0x5ca6, 0x589, 0x1, 0x1);
        gbc.writeMem(0x1ceb, { 0xcd, 0xe5, 0xbe });
        gbc.writeMem(0xd6c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd6c9);
        EXPECT(gbc.pc(), 0xbee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c9), 0xee);
        EXPECT(gbc.readMem(0xd6ca), 0x1c);
        // CD 0397
        gbc.setState(0x7a51, 0x8cfc, 0x330, 0x368d, 0x8597, 0x8a5f, 0x1, 0x1);
        gbc.writeMem(0x7a51, { 0xcd, 0x7c, 0x45 });
        gbc.writeMem(0x8cfa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8cfa);
        EXPECT(gbc.pc(), 0x457c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cfa), 0x54);
        EXPECT(gbc.readMem(0x8cfb), 0x7a);
        // CD 0398
        gbc.setState(0x7fb5, 0xffe9, 0xa9a0, 0x1e01, 0x1b7a, 0x252a, 0x1, 0x0);
        gbc.writeMem(0x7fb5, { 0xcd, 0xa3, 0x51 });
        gbc.writeMem(0xffe7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xffe7);
        EXPECT(gbc.pc(), 0x51a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffe7), 0xb8);
        EXPECT(gbc.readMem(0xffe8), 0x7f);
        // CD 0399
        gbc.setState(0xdd29, 0xc227, 0x9c20, 0xd077, 0x8b40, 0xa615, 0x1, 0x1);
        gbc.writeMem(0xc225, { 0x0, 0x0 });
        gbc.writeMem(0xdd29, { 0xcd, 0xbe, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc225);
        EXPECT(gbc.pc(), 0x82be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc225), 0x2c);
        EXPECT(gbc.readMem(0xc226), 0xdd);
        EXPECT(gbc.readMem(0xdd29), 0xcd);
        EXPECT(gbc.readMem(0xdd2a), 0xbe);
        EXPECT(gbc.readMem(0xdd2b), 0x82);
        // CD 039B
        gbc.setState(0xef35, 0x8206, 0xb7b0, 0xf81a, 0x30b3, 0x22d1, 0x0, 0x0);
        gbc.writeMem(0x8204, { 0x0, 0x0 });
        gbc.writeMem(0xef35, { 0xcd, 0x49, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8204);
        EXPECT(gbc.pc(), 0xb649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8204), 0x38);
        EXPECT(gbc.readMem(0x8205), 0xef);
        EXPECT(gbc.readMem(0xef35), 0xcd);
        EXPECT(gbc.readMem(0xef36), 0x49);
        EXPECT(gbc.readMem(0xef37), 0xb6);
        // CD 039E
        gbc.setState(0x647d, 0xb816, 0x9770, 0x229f, 0x9c65, 0x1787, 0x1, 0x1);
        gbc.writeMem(0x647d, { 0xcd, 0x96, 0x1c });
        gbc.writeMem(0xb814, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb814);
        EXPECT(gbc.pc(), 0x1c96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb814), 0x80);
        EXPECT(gbc.readMem(0xb815), 0x64);
        // CD 03A1
        gbc.setState(0xa1a8, 0x93ec, 0x7950, 0x912b, 0xc0ad, 0x24be, 0x1, 0x0);
        gbc.writeMem(0x93ea, { 0x0, 0x0 });
        gbc.writeMem(0xa1a8, { 0xcd, 0x61, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x93ea);
        EXPECT(gbc.pc(), 0xaa61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ea), 0xab);
        EXPECT(gbc.readMem(0x93eb), 0xa1);
        EXPECT(gbc.readMem(0xa1a8), 0xcd);
        EXPECT(gbc.readMem(0xa1a9), 0x61);
        EXPECT(gbc.readMem(0xa1aa), 0xaa);
        // CD 03A7
        gbc.setState(0x879, 0xdf7f, 0xcce0, 0xa827, 0x156a, 0x30eb, 0x1, 0x0);
        gbc.writeMem(0x879, { 0xcd, 0x1a, 0xe6 });
        gbc.writeMem(0xdf7d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xdf7d);
        EXPECT(gbc.pc(), 0xe61a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf7d), 0x7c);
        EXPECT(gbc.readMem(0xdf7e), 0x8);
        // CD 03A8
        gbc.setState(0xcf51, 0xc2f9, 0xc4d0, 0xa6f2, 0xde64, 0x45f9, 0x1, 0x1);
        gbc.writeMem(0xc2f7, { 0x0, 0x0 });
        gbc.writeMem(0xcf51, { 0xcd, 0x52, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc2f7);
        EXPECT(gbc.pc(), 0xe452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2f7), 0x54);
        EXPECT(gbc.readMem(0xc2f8), 0xcf);
        EXPECT(gbc.readMem(0xcf51), 0xcd);
        EXPECT(gbc.readMem(0xcf52), 0x52);
        EXPECT(gbc.readMem(0xcf53), 0xe4);
        // CD 03AA
        gbc.setState(0x1de2, 0xa55f, 0x810, 0xbe33, 0xa980, 0x66d5, 0x1, 0x0);
        gbc.writeMem(0x1de2, { 0xcd, 0x9b, 0x97 });
        gbc.writeMem(0xa55d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa55d);
        EXPECT(gbc.pc(), 0x979b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa55d), 0xe5);
        EXPECT(gbc.readMem(0xa55e), 0x1d);
        // CD 03AC
        gbc.setState(0xcf5c, 0xc662, 0x7330, 0x32e1, 0x4c98, 0x802d, 0x1, 0x1);
        gbc.writeMem(0xc660, { 0x0, 0x0 });
        gbc.writeMem(0xcf5c, { 0xcd, 0xa0, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc660);
        EXPECT(gbc.pc(), 0xf0a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc660), 0x5f);
        EXPECT(gbc.readMem(0xc661), 0xcf);
        EXPECT(gbc.readMem(0xcf5c), 0xcd);
        EXPECT(gbc.readMem(0xcf5d), 0xa0);
        EXPECT(gbc.readMem(0xcf5e), 0xf0);
        // CD 03AD
        gbc.setState(0x3a18, 0x9e44, 0x6790, 0x80f3, 0x28a9, 0x165c, 0x0, 0x0);
        gbc.writeMem(0x3a18, { 0xcd, 0xa, 0xd0 });
        gbc.writeMem(0x9e42, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9e42);
        EXPECT(gbc.pc(), 0xd00a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e42), 0x1b);
        EXPECT(gbc.readMem(0x9e43), 0x3a);
        // CD 03AF
        gbc.setState(0xb8ac, 0xdcfd, 0x8320, 0xf0e5, 0x74e4, 0x7913, 0x1, 0x1);
        gbc.writeMem(0xb8ac, { 0xcd, 0xdb, 0x2 });
        gbc.writeMem(0xdcfb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdcfb);
        EXPECT(gbc.pc(), 0x2db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ac), 0xcd);
        EXPECT(gbc.readMem(0xb8ad), 0xdb);
        EXPECT(gbc.readMem(0xb8ae), 0x2);
        EXPECT(gbc.readMem(0xdcfb), 0xaf);
        EXPECT(gbc.readMem(0xdcfc), 0xb8);
        // CD 03B1
        gbc.setState(0xabfa, 0x8857, 0xa8d0, 0x4b53, 0xa146, 0x4fc0, 0x1, 0x1);
        gbc.writeMem(0x8855, { 0x0, 0x0 });
        gbc.writeMem(0xabfa, { 0xcd, 0x22, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8855);
        EXPECT(gbc.pc(), 0xe622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8855), 0xfd);
        EXPECT(gbc.readMem(0x8856), 0xab);
        EXPECT(gbc.readMem(0xabfa), 0xcd);
        EXPECT(gbc.readMem(0xabfb), 0x22);
        EXPECT(gbc.readMem(0xabfc), 0xe6);
        // CD 03B2
        gbc.setState(0x47a3, 0xd7ca, 0xdea0, 0x6d5, 0x1b8e, 0xe06d, 0x1, 0x1);
        gbc.writeMem(0x47a3, { 0xcd, 0x0, 0xce });
        gbc.writeMem(0xd7c8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd7c8);
        EXPECT(gbc.pc(), 0xce00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c8), 0xa6);
        EXPECT(gbc.readMem(0xd7c9), 0x47);
        // CD 03B3
        gbc.setState(0xab14, 0xd0e2, 0x6590, 0xe99, 0xf16c, 0x8918, 0x0, 0x1);
        gbc.writeMem(0xab14, { 0xcd, 0xa8, 0xaa });
        gbc.writeMem(0xd0e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd0e0);
        EXPECT(gbc.pc(), 0xaaa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab14), 0xcd);
        EXPECT(gbc.readMem(0xab15), 0xa8);
        EXPECT(gbc.readMem(0xab16), 0xaa);
        EXPECT(gbc.readMem(0xd0e0), 0x17);
        EXPECT(gbc.readMem(0xd0e1), 0xab);
        // CD 03B6
        gbc.setState(0x8164, 0x8e40, 0x92f0, 0xf00d, 0xcd0f, 0xe498, 0x0, 0x0);
        gbc.writeMem(0x8164, { 0xcd, 0x24, 0xb5 });
        gbc.writeMem(0x8e3e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8e3e);
        EXPECT(gbc.pc(), 0xb524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8164), 0xcd);
        EXPECT(gbc.readMem(0x8165), 0x24);
        EXPECT(gbc.readMem(0x8166), 0xb5);
        EXPECT(gbc.readMem(0x8e3e), 0x67);
        EXPECT(gbc.readMem(0x8e3f), 0x81);
        // CD 03B7
        gbc.setState(0xb7e9, 0xd40a, 0xa6d0, 0x3c81, 0x6b3b, 0x6bb9, 0x1, 0x0);
        gbc.writeMem(0xb7e9, { 0xcd, 0x8f, 0x8c });
        gbc.writeMem(0xd408, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd408);
        EXPECT(gbc.pc(), 0x8c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e9), 0xcd);
        EXPECT(gbc.readMem(0xb7ea), 0x8f);
        EXPECT(gbc.readMem(0xb7eb), 0x8c);
        EXPECT(gbc.readMem(0xd408), 0xec);
        EXPECT(gbc.readMem(0xd409), 0xb7);
        // CD 03B8
        gbc.setState(0x5579, 0xce9b, 0xb00, 0xc1e5, 0x152b, 0xde29, 0x1, 0x0);
        gbc.writeMem(0x5579, { 0xcd, 0xb8, 0xbf });
        gbc.writeMem(0xce99, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xce99);
        EXPECT(gbc.pc(), 0xbfb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce99), 0x7c);
        EXPECT(gbc.readMem(0xce9a), 0x55);
        // CD 03BA
        gbc.setState(0x75c7, 0x9306, 0xaa30, 0x2150, 0xd976, 0xb44e, 0x0, 0x1);
        gbc.writeMem(0x75c7, { 0xcd, 0xc3, 0xa2 });
        gbc.writeMem(0x9304, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9304);
        EXPECT(gbc.pc(), 0xa2c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9304), 0xca);
        EXPECT(gbc.readMem(0x9305), 0x75);
        // CD 03BB
        gbc.setState(0xa1e9, 0x98ee, 0x9bf0, 0x55eb, 0x64f3, 0x21eb, 0x1, 0x0);
        gbc.writeMem(0x98ec, { 0x0, 0x0 });
        gbc.writeMem(0xa1e9, { 0xcd, 0xf6, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x98ec);
        EXPECT(gbc.pc(), 0xd2f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ec), 0xec);
        EXPECT(gbc.readMem(0x98ed), 0xa1);
        EXPECT(gbc.readMem(0xa1e9), 0xcd);
        EXPECT(gbc.readMem(0xa1ea), 0xf6);
        EXPECT(gbc.readMem(0xa1eb), 0xd2);
        // CD 03BC
        gbc.setState(0xcd27, 0xedf1, 0x6bb0, 0xe531, 0x7bcc, 0xb675, 0x1, 0x1);
        gbc.writeMem(0xcd27, { 0xcd, 0x4, 0xe7 });
        gbc.writeMem(0xedef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xedef);
        EXPECT(gbc.pc(), 0xe704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd27), 0xcd);
        EXPECT(gbc.readMem(0xcd28), 0x4);
        EXPECT(gbc.readMem(0xcd29), 0xe7);
        EXPECT(gbc.readMem(0xedef), 0x2a);
        EXPECT(gbc.readMem(0xedf0), 0xcd);
        // CD 03BE
        gbc.setState(0x9788, 0xcdd1, 0xf80, 0xb731, 0x5649, 0x98a7, 0x1, 0x0);
        gbc.writeMem(0x9788, { 0xcd, 0x8e, 0x66 });
        gbc.writeMem(0xcdcf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcdcf);
        EXPECT(gbc.pc(), 0x668e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9788), 0xcd);
        EXPECT(gbc.readMem(0x9789), 0x8e);
        EXPECT(gbc.readMem(0x978a), 0x66);
        EXPECT(gbc.readMem(0xcdcf), 0x8b);
        EXPECT(gbc.readMem(0xcdd0), 0x97);
        // CD 03BF
        gbc.setState(0xee3b, 0xdacc, 0xc660, 0x5783, 0x227b, 0xe86c, 0x1, 0x1);
        gbc.writeMem(0xdaca, { 0x0, 0x0 });
        gbc.writeMem(0xee3b, { 0xcd, 0x7b, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdaca);
        EXPECT(gbc.pc(), 0x417b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaca), 0x3e);
        EXPECT(gbc.readMem(0xdacb), 0xee);
        EXPECT(gbc.readMem(0xee3b), 0xcd);
        EXPECT(gbc.readMem(0xee3c), 0x7b);
        EXPECT(gbc.readMem(0xee3d), 0x41);
        // CD 03C1
        gbc.setState(0xa499, 0xef95, 0x1a90, 0xe345, 0x447, 0xc5f, 0x1, 0x1);
        gbc.writeMem(0xa499, { 0xcd, 0x64, 0x88 });
        gbc.writeMem(0xef93, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xef93);
        EXPECT(gbc.pc(), 0x8864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa499), 0xcd);
        EXPECT(gbc.readMem(0xa49a), 0x64);
        EXPECT(gbc.readMem(0xa49b), 0x88);
        EXPECT(gbc.readMem(0xef93), 0x9c);
        EXPECT(gbc.readMem(0xef94), 0xa4);
        // CD 03C2
        gbc.setState(0x3dd9, 0xac8a, 0xefe0, 0x9da1, 0x530b, 0x1d07, 0x0, 0x1);
        gbc.writeMem(0x3dd9, { 0xcd, 0x47, 0x72 });
        gbc.writeMem(0xac88, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xac88);
        EXPECT(gbc.pc(), 0x7247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac88), 0xdc);
        EXPECT(gbc.readMem(0xac89), 0x3d);
        // CD 03C8
        gbc.setState(0x4885, 0xa38c, 0x7150, 0xab16, 0x3aeb, 0x7f58, 0x0, 0x1);
        gbc.writeMem(0x4885, { 0xcd, 0xb7, 0x9f });
        gbc.writeMem(0xa38a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa38a);
        EXPECT(gbc.pc(), 0x9fb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa38a), 0x88);
        EXPECT(gbc.readMem(0xa38b), 0x48);
        // CD 03C9
        gbc.setState(0xbf5b, 0xcd50, 0xa0b0, 0xe0d2, 0xdd83, 0xf22f, 0x0, 0x0);
        gbc.writeMem(0xbf5b, { 0xcd, 0x77, 0x87 });
        gbc.writeMem(0xcd4e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xcd4e);
        EXPECT(gbc.pc(), 0x8777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf5b), 0xcd);
        EXPECT(gbc.readMem(0xbf5c), 0x77);
        EXPECT(gbc.readMem(0xbf5d), 0x87);
        EXPECT(gbc.readMem(0xcd4e), 0x5e);
        EXPECT(gbc.readMem(0xcd4f), 0xbf);
        // CD 03CB
        gbc.setState(0x1c22, 0x85a5, 0x2f50, 0xb2ef, 0xe17c, 0xe333, 0x1, 0x1);
        gbc.writeMem(0x1c22, { 0xcd, 0xb6, 0x1a });
        gbc.writeMem(0x85a3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x85a3);
        EXPECT(gbc.pc(), 0x1ab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85a3), 0x25);
        EXPECT(gbc.readMem(0x85a4), 0x1c);
        // CD 03CC
        gbc.setState(0x335c, 0xdbf2, 0x4610, 0x7146, 0xfe73, 0x774b, 0x1, 0x0);
        gbc.writeMem(0x335c, { 0xcd, 0x79, 0x3d });
        gbc.writeMem(0xdbf0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xdbf0);
        EXPECT(gbc.pc(), 0x3d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf0), 0x5f);
        EXPECT(gbc.readMem(0xdbf1), 0x33);
        // CD 03CD
        gbc.setState(0xeeb7, 0xe49e, 0xeb90, 0xc194, 0x2737, 0x70c1, 0x1, 0x1);
        gbc.writeMem(0xe49c, { 0x0, 0x0 });
        gbc.writeMem(0xeeb7, { 0xcd, 0xa0, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe49c);
        EXPECT(gbc.pc(), 0x60a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe49c), 0xba);
        EXPECT(gbc.readMem(0xe49d), 0xee);
        EXPECT(gbc.readMem(0xeeb7), 0xcd);
        EXPECT(gbc.readMem(0xeeb8), 0xa0);
        EXPECT(gbc.readMem(0xeeb9), 0x60);
        // CD 03D0
        gbc.setState(0xd030, 0xf496, 0x2fa0, 0x850d, 0xdd95, 0x181e, 0x1, 0x1);
        gbc.writeMem(0xd030, { 0xcd, 0x8e, 0x7e });
        gbc.writeMem(0xf494, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf494);
        EXPECT(gbc.pc(), 0x7e8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd030), 0xcd);
        EXPECT(gbc.readMem(0xd031), 0x8e);
        EXPECT(gbc.readMem(0xd032), 0x7e);
        EXPECT(gbc.readMem(0xf494), 0x33);
        EXPECT(gbc.readMem(0xf495), 0xd0);
        // CD 03D1
        gbc.setState(0x7c11, 0xe173, 0xe4f0, 0x76c6, 0xade4, 0x43b6, 0x1, 0x1);
        gbc.writeMem(0x7c11, { 0xcd, 0xbb, 0xca });
        gbc.writeMem(0xe171, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe171);
        EXPECT(gbc.pc(), 0xcabb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe171), 0x14);
        EXPECT(gbc.readMem(0xe172), 0x7c);
        // CD 03D3
        gbc.setState(0x755, 0x8870, 0x63b0, 0x457d, 0x699c, 0xfa8c, 0x1, 0x0);
        gbc.writeMem(0x755, { 0xcd, 0x5, 0x71 });
        gbc.writeMem(0x886e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x886e);
        EXPECT(gbc.pc(), 0x7105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x886e), 0x58);
        EXPECT(gbc.readMem(0x886f), 0x7);
        // CD 03D7
        gbc.setState(0x5044, 0xe20e, 0xe10, 0xb7c3, 0xb404, 0x126, 0x0, 0x0);
        gbc.writeMem(0x5044, { 0xcd, 0x2c, 0x2f });
        gbc.writeMem(0xe20c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe20c);
        EXPECT(gbc.pc(), 0x2f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe20c), 0x47);
        EXPECT(gbc.readMem(0xe20d), 0x50);
        // CD 03D9
        gbc.setState(0x144, 0x9937, 0x39c0, 0x25a7, 0xf7b6, 0xa8f9, 0x1, 0x0);
        gbc.writeMem(0x144, { 0xcd, 0x1e, 0x4 });
        gbc.writeMem(0x9935, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9935);
        EXPECT(gbc.pc(), 0x41e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9935), 0x47);
        EXPECT(gbc.readMem(0x9936), 0x1);
        // CD 03DA
        gbc.setState(0xa60e, 0xd2ef, 0x2960, 0xaa09, 0x9c29, 0x9f94, 0x1, 0x0);
        gbc.writeMem(0xa60e, { 0xcd, 0xf8, 0x9e });
        gbc.writeMem(0xd2ed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd2ed);
        EXPECT(gbc.pc(), 0x9ef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa60e), 0xcd);
        EXPECT(gbc.readMem(0xa60f), 0xf8);
        EXPECT(gbc.readMem(0xa610), 0x9e);
        EXPECT(gbc.readMem(0xd2ed), 0x11);
        EXPECT(gbc.readMem(0xd2ee), 0xa6);
        // CD 03DB
        gbc.setState(0xb077, 0xc8b9, 0x9e90, 0x85db, 0x857e, 0xc5a2, 0x0, 0x0);
        gbc.writeMem(0xb077, { 0xcd, 0x55, 0x99 });
        gbc.writeMem(0xc8b7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc8b7);
        EXPECT(gbc.pc(), 0x9955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb077), 0xcd);
        EXPECT(gbc.readMem(0xb078), 0x55);
        EXPECT(gbc.readMem(0xb079), 0x99);
        EXPECT(gbc.readMem(0xc8b7), 0x7a);
        EXPECT(gbc.readMem(0xc8b8), 0xb0);
        // CD 03E4
        gbc.setState(0x927d, 0xcc7c, 0x4810, 0xa0dc, 0x74a3, 0xda43, 0x1, 0x1);
        gbc.writeMem(0x927d, { 0xcd, 0x94, 0xf6 });
        gbc.writeMem(0xcc7a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xcc7a);
        EXPECT(gbc.pc(), 0xf694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x927d), 0xcd);
        EXPECT(gbc.readMem(0x927e), 0x94);
        EXPECT(gbc.readMem(0x927f), 0xf6);
        EXPECT(gbc.readMem(0xcc7a), 0x80);
        EXPECT(gbc.readMem(0xcc7b), 0x92);
    }
