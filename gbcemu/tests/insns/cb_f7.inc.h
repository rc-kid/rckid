    TEST(gbcemu, opcode_cb_f7) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB F7 0000
        gbc.setState(0xe6ef, 0x3e28, 0x46c0, 0x95a8, 0xd044, 0xf009, 0x0, 0x0);
        gbc.writeMem(0xe6ef, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3e28, gbc.sp());
        EXPECT(0xe6f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ef));
        EXPECT(0xf7, gbc.readMem(0xe6f0));
        // CB F7 0001
        gbc.setState(0x3710, 0xabcf, 0xcc60, 0x7816, 0x524e, 0xb515, 0x1, 0x1);
        gbc.writeMem(0x3710, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xabcf, gbc.sp());
        EXPECT(0x3712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0002
        gbc.setState(0x867, 0x8eed, 0xd070, 0xc90e, 0x1036, 0x3ce3, 0x0, 0x0);
        gbc.writeMem(0x867, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8eed, gbc.sp());
        EXPECT(0x869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0003
        gbc.setState(0x90c8, 0x3b70, 0x1db0, 0x80d3, 0xed32, 0xeb87, 0x0, 0x1);
        gbc.writeMem(0x90c8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3b70, gbc.sp());
        EXPECT(0x90ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c8));
        EXPECT(0xf7, gbc.readMem(0x90c9));
        // CB F7 0006
        gbc.setState(0xc959, 0x8e, 0x77b0, 0xe73b, 0x91d8, 0x2f45, 0x1, 0x1);
        gbc.writeMem(0xc959, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8e, gbc.sp());
        EXPECT(0xc95b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc959));
        EXPECT(0xf7, gbc.readMem(0xc95a));
        // CB F7 0007
        gbc.setState(0x3d37, 0xfef2, 0x2d50, 0x3871, 0x8923, 0x1451, 0x0, 0x1);
        gbc.writeMem(0x3d37, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfef2, gbc.sp());
        EXPECT(0x3d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0008
        gbc.setState(0xa268, 0x173, 0xd8f0, 0x1257, 0x79c6, 0x5da8, 0x1, 0x1);
        gbc.writeMem(0xa268, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x173, gbc.sp());
        EXPECT(0xa26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa268));
        EXPECT(0xf7, gbc.readMem(0xa269));
        // CB F7 0009
        gbc.setState(0x28e3, 0x1ca9, 0x76e0, 0x5e6, 0x1202, 0x7095, 0x0, 0x1);
        gbc.writeMem(0x28e3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1ca9, gbc.sp());
        EXPECT(0x28e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 000A
        gbc.setState(0xbf04, 0x58c1, 0xcdd0, 0xd029, 0xf4b9, 0xb7a, 0x0, 0x0);
        gbc.writeMem(0xbf04, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x58c1, gbc.sp());
        EXPECT(0xbf06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf04));
        EXPECT(0xf7, gbc.readMem(0xbf05));
        // CB F7 000B
        gbc.setState(0xc1ce, 0x68cb, 0xaee0, 0x34aa, 0x278a, 0xa9c0, 0x1, 0x1);
        gbc.writeMem(0xc1ce, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x68cb, gbc.sp());
        EXPECT(0xc1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ce));
        EXPECT(0xf7, gbc.readMem(0xc1cf));
        // CB F7 000C
        gbc.setState(0xe73a, 0xe6e7, 0xa6f0, 0x58c9, 0x12f3, 0xdb0e, 0x0, 0x1);
        gbc.writeMem(0xe73a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe6e7, gbc.sp());
        EXPECT(0xe73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73a));
        EXPECT(0xf7, gbc.readMem(0xe73b));
        // CB F7 000D
        gbc.setState(0xe38, 0xa199, 0x4cc0, 0x6139, 0x9bd8, 0xed60, 0x0, 0x0);
        gbc.writeMem(0xe38, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa199, gbc.sp());
        EXPECT(0xe3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 000E
        gbc.setState(0xa76f, 0xcc3, 0x8c10, 0x9cb0, 0xad01, 0x1554, 0x0, 0x1);
        gbc.writeMem(0xa76f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xcc3, gbc.sp());
        EXPECT(0xa771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa76f));
        EXPECT(0xf7, gbc.readMem(0xa770));
        // CB F7 000F
        gbc.setState(0x520f, 0x56f4, 0x38d0, 0xa934, 0xf8b1, 0x5b9b, 0x0, 0x1);
        gbc.writeMem(0x520f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x56f4, gbc.sp());
        EXPECT(0x5211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0010
        gbc.setState(0x6a2c, 0x5bac, 0xc7f0, 0xcb90, 0x7a4c, 0x90f6, 0x0, 0x1);
        gbc.writeMem(0x6a2c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5bac, gbc.sp());
        EXPECT(0x6a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0011
        gbc.setState(0x78f1, 0x85e4, 0xca30, 0xd278, 0x19b, 0x81ad, 0x1, 0x1);
        gbc.writeMem(0x78f1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x85e4, gbc.sp());
        EXPECT(0x78f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0012
        gbc.setState(0xe413, 0xb9d9, 0xf520, 0x11da, 0xb026, 0x2a6f, 0x0, 0x0);
        gbc.writeMem(0xe413, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb9d9, gbc.sp());
        EXPECT(0xe415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe413));
        EXPECT(0xf7, gbc.readMem(0xe414));
        // CB F7 0013
        gbc.setState(0x5d5a, 0x8688, 0x9060, 0x6a8b, 0x93c3, 0x24f8, 0x1, 0x0);
        gbc.writeMem(0x5d5a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8688, gbc.sp());
        EXPECT(0x5d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0014
        gbc.setState(0xdd15, 0x25b9, 0x9f50, 0x2a7f, 0x8ae7, 0x84a7, 0x0, 0x0);
        gbc.writeMem(0xdd15, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x25b9, gbc.sp());
        EXPECT(0xdd17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd15));
        EXPECT(0xf7, gbc.readMem(0xdd16));
        // CB F7 0015
        gbc.setState(0xa045, 0x3f52, 0x4040, 0xb3, 0x85c3, 0xb424, 0x1, 0x1);
        gbc.writeMem(0xa045, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3f52, gbc.sp());
        EXPECT(0xa047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa045));
        EXPECT(0xf7, gbc.readMem(0xa046));
        // CB F7 0016
        gbc.setState(0xa5, 0xc43a, 0x2680, 0x717c, 0x248d, 0x7510, 0x1, 0x1);
        gbc.writeMem(0xa5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc43a, gbc.sp());
        EXPECT(0xa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0017
        gbc.setState(0x9662, 0x28f5, 0xd260, 0xf108, 0x5b8c, 0x2847, 0x1, 0x1);
        gbc.writeMem(0x9662, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x28f5, gbc.sp());
        EXPECT(0x9664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9662));
        EXPECT(0xf7, gbc.readMem(0x9663));
        // CB F7 0018
        gbc.setState(0xa46a, 0x21e, 0x44b0, 0xce85, 0x8f58, 0x158, 0x1, 0x1);
        gbc.writeMem(0xa46a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x21e, gbc.sp());
        EXPECT(0xa46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46a));
        EXPECT(0xf7, gbc.readMem(0xa46b));
        // CB F7 0019
        gbc.setState(0x3381, 0x51d7, 0x3cf0, 0xe10c, 0xbb81, 0xb3a7, 0x1, 0x1);
        gbc.writeMem(0x3381, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x51d7, gbc.sp());
        EXPECT(0x3383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 001A
        gbc.setState(0x1db1, 0xb88, 0xba40, 0xdd4b, 0xc15b, 0x5462, 0x0, 0x0);
        gbc.writeMem(0x1db1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb88, gbc.sp());
        EXPECT(0x1db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 001B
        gbc.setState(0xb6c8, 0x18a0, 0x5900, 0x99d8, 0x817e, 0xf163, 0x1, 0x1);
        gbc.writeMem(0xb6c8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x18a0, gbc.sp());
        EXPECT(0xb6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c8));
        EXPECT(0xf7, gbc.readMem(0xb6c9));
        // CB F7 001C
        gbc.setState(0xe276, 0x9b3b, 0xfb90, 0x5c52, 0x427a, 0x6d0e, 0x0, 0x0);
        gbc.writeMem(0xe276, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9b3b, gbc.sp());
        EXPECT(0xe278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe276));
        EXPECT(0xf7, gbc.readMem(0xe277));
        // CB F7 001D
        gbc.setState(0x950d, 0xed9f, 0x6b80, 0x89bb, 0xb00, 0x2adc, 0x0, 0x0);
        gbc.writeMem(0x950d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xed9f, gbc.sp());
        EXPECT(0x950f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950d));
        EXPECT(0xf7, gbc.readMem(0x950e));
        // CB F7 001E
        gbc.setState(0xb69a, 0x3e8, 0xa7a0, 0x1951, 0x93b5, 0x7f1e, 0x1, 0x1);
        gbc.writeMem(0xb69a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3e8, gbc.sp());
        EXPECT(0xb69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb69a));
        EXPECT(0xf7, gbc.readMem(0xb69b));
        // CB F7 001F
        gbc.setState(0x3ea2, 0x1f95, 0xaf0, 0xbd79, 0x9e97, 0x2504, 0x1, 0x1);
        gbc.writeMem(0x3ea2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1f95, gbc.sp());
        EXPECT(0x3ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0020
        gbc.setState(0x33d0, 0xb4bf, 0x4410, 0x70f7, 0x26fe, 0xe40c, 0x1, 0x1);
        gbc.writeMem(0x33d0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb4bf, gbc.sp());
        EXPECT(0x33d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0021
        gbc.setState(0x1cc8, 0xb9be, 0x9630, 0x649b, 0x320e, 0x8ef9, 0x0, 0x1);
        gbc.writeMem(0x1cc8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb9be, gbc.sp());
        EXPECT(0x1cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0022
        gbc.setState(0x6327, 0x9e70, 0x5bf0, 0x9b95, 0xa092, 0x4c33, 0x1, 0x1);
        gbc.writeMem(0x6327, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9e70, gbc.sp());
        EXPECT(0x6329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0023
        gbc.setState(0x4fe, 0x2d0f, 0x8950, 0x4017, 0x3f50, 0xdf15, 0x1, 0x1);
        gbc.writeMem(0x4fe, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2d0f, gbc.sp());
        EXPECT(0x500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0024
        gbc.setState(0x106a, 0x3052, 0x5850, 0x2658, 0xf25e, 0x99af, 0x1, 0x0);
        gbc.writeMem(0x106a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3052, gbc.sp());
        EXPECT(0x106c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0025
        gbc.setState(0x6a29, 0x558c, 0x14a0, 0x3ac5, 0x81f0, 0xfd82, 0x1, 0x1);
        gbc.writeMem(0x6a29, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x558c, gbc.sp());
        EXPECT(0x6a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0026
        gbc.setState(0xb7dc, 0x885b, 0x52e0, 0xf41c, 0x29b4, 0xf896, 0x0, 0x0);
        gbc.writeMem(0xb7dc, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x885b, gbc.sp());
        EXPECT(0xb7de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7dc));
        EXPECT(0xf7, gbc.readMem(0xb7dd));
        // CB F7 0028
        gbc.setState(0xb3a7, 0xb723, 0x6460, 0x900a, 0x92e9, 0x3c1e, 0x1, 0x0);
        gbc.writeMem(0xb3a7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb723, gbc.sp());
        EXPECT(0xb3a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a7));
        EXPECT(0xf7, gbc.readMem(0xb3a8));
        // CB F7 0029
        gbc.setState(0x9dec, 0x4464, 0x51a0, 0x840b, 0x2188, 0x6b01, 0x0, 0x1);
        gbc.writeMem(0x9dec, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4464, gbc.sp());
        EXPECT(0x9dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dec));
        EXPECT(0xf7, gbc.readMem(0x9ded));
        // CB F7 002A
        gbc.setState(0x284, 0x28bf, 0x6f50, 0xb697, 0x47c9, 0x81f5, 0x1, 0x1);
        gbc.writeMem(0x284, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x28bf, gbc.sp());
        EXPECT(0x286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 002C
        gbc.setState(0x2880, 0x13bd, 0x3bc0, 0x938b, 0x820a, 0x4c83, 0x1, 0x1);
        gbc.writeMem(0x2880, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x13bd, gbc.sp());
        EXPECT(0x2882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 002D
        gbc.setState(0xbea6, 0x6863, 0xd330, 0xe4ad, 0x58f0, 0x8d74, 0x0, 0x1);
        gbc.writeMem(0xbea6, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6863, gbc.sp());
        EXPECT(0xbea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea6));
        EXPECT(0xf7, gbc.readMem(0xbea7));
        // CB F7 002E
        gbc.setState(0x51f9, 0x13a3, 0xe440, 0x34e9, 0x6c2a, 0xf17, 0x0, 0x0);
        gbc.writeMem(0x51f9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x13a3, gbc.sp());
        EXPECT(0x51fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 002F
        gbc.setState(0xe707, 0xd19c, 0xd2c0, 0x522, 0xea61, 0xe809, 0x0, 0x1);
        gbc.writeMem(0xe707, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd19c, gbc.sp());
        EXPECT(0xe709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe707));
        EXPECT(0xf7, gbc.readMem(0xe708));
        // CB F7 0030
        gbc.setState(0xbfe0, 0xb696, 0x72e0, 0x30c5, 0x358d, 0xb9ac, 0x0, 0x0);
        gbc.writeMem(0xbfe0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb696, gbc.sp());
        EXPECT(0xbfe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe0));
        EXPECT(0xf7, gbc.readMem(0xbfe1));
        // CB F7 0031
        gbc.setState(0x4d43, 0x946d, 0xcb40, 0x8120, 0x2f58, 0xf1b8, 0x1, 0x1);
        gbc.writeMem(0x4d43, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x946d, gbc.sp());
        EXPECT(0x4d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0032
        gbc.setState(0x3f40, 0xce9e, 0x28e0, 0x80c4, 0x8ffa, 0x6de, 0x0, 0x0);
        gbc.writeMem(0x3f40, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xce9e, gbc.sp());
        EXPECT(0x3f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0033
        gbc.setState(0xe0f7, 0xdf89, 0xc930, 0x9b2a, 0x433d, 0x282a, 0x1, 0x1);
        gbc.writeMem(0xe0f7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdf89, gbc.sp());
        EXPECT(0xe0f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f7));
        EXPECT(0xf7, gbc.readMem(0xe0f8));
        // CB F7 0034
        gbc.setState(0xa6d5, 0xadc2, 0xe300, 0x917e, 0x34f5, 0xec3a, 0x1, 0x0);
        gbc.writeMem(0xa6d5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xadc2, gbc.sp());
        EXPECT(0xa6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d5));
        EXPECT(0xf7, gbc.readMem(0xa6d6));
        // CB F7 0035
        gbc.setState(0x4430, 0xf0df, 0xb2e0, 0xa430, 0xfef1, 0x81c4, 0x0, 0x0);
        gbc.writeMem(0x4430, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf0df, gbc.sp());
        EXPECT(0x4432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0036
        gbc.setState(0x6473, 0x5d2f, 0x73c0, 0xa1da, 0xe0b8, 0xa012, 0x0, 0x1);
        gbc.writeMem(0x6473, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5d2f, gbc.sp());
        EXPECT(0x6475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0037
        gbc.setState(0x5a2a, 0xd089, 0x4d10, 0x54bc, 0xd38, 0x4297, 0x1, 0x0);
        gbc.writeMem(0x5a2a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd089, gbc.sp());
        EXPECT(0x5a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0038
        gbc.setState(0xa96d, 0xfcf4, 0x88c0, 0x7dcc, 0x3f35, 0xd0f, 0x1, 0x1);
        gbc.writeMem(0xa96d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfcf4, gbc.sp());
        EXPECT(0xa96f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96d));
        EXPECT(0xf7, gbc.readMem(0xa96e));
        // CB F7 0039
        gbc.setState(0x8791, 0xea63, 0xa040, 0x5bf8, 0x60d1, 0x3d3e, 0x1, 0x0);
        gbc.writeMem(0x8791, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xea63, gbc.sp());
        EXPECT(0x8793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8791));
        EXPECT(0xf7, gbc.readMem(0x8792));
        // CB F7 003A
        gbc.setState(0x418e, 0x8b80, 0xf4c0, 0x4640, 0x5e79, 0xa94e, 0x0, 0x1);
        gbc.writeMem(0x418e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8b80, gbc.sp());
        EXPECT(0x4190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 003B
        gbc.setState(0x2ec3, 0xd71, 0xd700, 0xb779, 0xd3bf, 0x438b, 0x1, 0x1);
        gbc.writeMem(0x2ec3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd71, gbc.sp());
        EXPECT(0x2ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 003C
        gbc.setState(0x47bf, 0x1cd7, 0x10b0, 0xde08, 0x87, 0xbfbb, 0x1, 0x0);
        gbc.writeMem(0x47bf, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1cd7, gbc.sp());
        EXPECT(0x47c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 003D
        gbc.setState(0xc6b0, 0x12be, 0x56c0, 0x8761, 0xbb9d, 0x1062, 0x1, 0x1);
        gbc.writeMem(0xc6b0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x12be, gbc.sp());
        EXPECT(0xc6b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b0));
        EXPECT(0xf7, gbc.readMem(0xc6b1));
        // CB F7 003E
        gbc.setState(0xc43f, 0xc44, 0x5e0, 0x5aec, 0x6f1d, 0xa32c, 0x1, 0x1);
        gbc.writeMem(0xc43f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc44, gbc.sp());
        EXPECT(0xc441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43f));
        EXPECT(0xf7, gbc.readMem(0xc440));
        // CB F7 003F
        gbc.setState(0x5a22, 0xd867, 0x89e0, 0x77ea, 0x1218, 0xddeb, 0x1, 0x0);
        gbc.writeMem(0x5a22, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd867, gbc.sp());
        EXPECT(0x5a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0040
        gbc.setState(0x2e8e, 0xde77, 0xab00, 0x3e9c, 0x7455, 0xc33, 0x0, 0x1);
        gbc.writeMem(0x2e8e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xde77, gbc.sp());
        EXPECT(0x2e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0041
        gbc.setState(0x68db, 0xf044, 0x2780, 0x961b, 0x90b8, 0xb9ee, 0x0, 0x1);
        gbc.writeMem(0x68db, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf044, gbc.sp());
        EXPECT(0x68dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0042
        gbc.setState(0xd4b, 0x4f, 0xe20, 0x3ea2, 0x141e, 0xc82, 0x1, 0x0);
        gbc.writeMem(0xd4b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4f, gbc.sp());
        EXPECT(0xd4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0043
        gbc.setState(0xa16f, 0xf550, 0x880, 0x33a2, 0xd9fc, 0x9078, 0x1, 0x1);
        gbc.writeMem(0xa16f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf550, gbc.sp());
        EXPECT(0xa171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16f));
        EXPECT(0xf7, gbc.readMem(0xa170));
        // CB F7 0044
        gbc.setState(0xcd67, 0xcd51, 0x6800, 0x6eca, 0x2fef, 0x620a, 0x1, 0x1);
        gbc.writeMem(0xcd67, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcd51, gbc.sp());
        EXPECT(0xcd69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd67));
        EXPECT(0xf7, gbc.readMem(0xcd68));
        // CB F7 0045
        gbc.setState(0x35de, 0x82d2, 0x1cd0, 0x798b, 0xe777, 0x5e2f, 0x0, 0x0);
        gbc.writeMem(0x35de, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x82d2, gbc.sp());
        EXPECT(0x35e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0046
        gbc.setState(0x7bee, 0x83f9, 0x7890, 0xc741, 0xa5a3, 0x2a51, 0x0, 0x1);
        gbc.writeMem(0x7bee, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x83f9, gbc.sp());
        EXPECT(0x7bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0047
        gbc.setState(0x8cd0, 0xe7a3, 0x8720, 0x759c, 0x5e84, 0x39dd, 0x1, 0x0);
        gbc.writeMem(0x8cd0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe7a3, gbc.sp());
        EXPECT(0x8cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd0));
        EXPECT(0xf7, gbc.readMem(0x8cd1));
        // CB F7 0048
        gbc.setState(0x652d, 0xf826, 0xd330, 0xfda6, 0x206, 0xa9dd, 0x0, 0x1);
        gbc.writeMem(0x652d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf826, gbc.sp());
        EXPECT(0x652f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 004A
        gbc.setState(0xed90, 0x16, 0x1ad0, 0xd605, 0xbb30, 0xcd59, 0x1, 0x0);
        gbc.writeMem(0xed90, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x16, gbc.sp());
        EXPECT(0xed92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed90));
        EXPECT(0xf7, gbc.readMem(0xed91));
        // CB F7 004B
        gbc.setState(0x75c4, 0xe985, 0x5190, 0xdbe8, 0xeb78, 0xf4f3, 0x0, 0x1);
        gbc.writeMem(0x75c4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe985, gbc.sp());
        EXPECT(0x75c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 004C
        gbc.setState(0x5455, 0x8ce1, 0x34f0, 0xafa7, 0xd489, 0x6a1b, 0x1, 0x1);
        gbc.writeMem(0x5455, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8ce1, gbc.sp());
        EXPECT(0x5457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 004D
        gbc.setState(0x9c24, 0x28b0, 0xcfd0, 0x1fb7, 0xc6af, 0xe8ca, 0x1, 0x1);
        gbc.writeMem(0x9c24, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x28b0, gbc.sp());
        EXPECT(0x9c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c24));
        EXPECT(0xf7, gbc.readMem(0x9c25));
        // CB F7 004E
        gbc.setState(0xef6e, 0x5aaa, 0x37f0, 0x3ec8, 0xc5, 0xa209, 0x0, 0x1);
        gbc.writeMem(0xef6e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5aaa, gbc.sp());
        EXPECT(0xef70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6e));
        EXPECT(0xf7, gbc.readMem(0xef6f));
        // CB F7 004F
        gbc.setState(0xcd6f, 0x4137, 0x5bf0, 0x6e8c, 0x3021, 0xa6b7, 0x0, 0x0);
        gbc.writeMem(0xcd6f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4137, gbc.sp());
        EXPECT(0xcd71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd6f));
        EXPECT(0xf7, gbc.readMem(0xcd70));
        // CB F7 0050
        gbc.setState(0xdc07, 0xe610, 0x3b10, 0xacac, 0xd13f, 0x2526, 0x0, 0x0);
        gbc.writeMem(0xdc07, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe610, gbc.sp());
        EXPECT(0xdc09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc07));
        EXPECT(0xf7, gbc.readMem(0xdc08));
        // CB F7 0051
        gbc.setState(0x9876, 0xd81, 0xe080, 0x674e, 0x1162, 0xc935, 0x1, 0x1);
        gbc.writeMem(0x9876, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd81, gbc.sp());
        EXPECT(0x9878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9876));
        EXPECT(0xf7, gbc.readMem(0x9877));
        // CB F7 0052
        gbc.setState(0x836e, 0x77b8, 0x43d0, 0x1949, 0x997e, 0x252d, 0x1, 0x0);
        gbc.writeMem(0x836e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x77b8, gbc.sp());
        EXPECT(0x8370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836e));
        EXPECT(0xf7, gbc.readMem(0x836f));
        // CB F7 0053
        gbc.setState(0x58a9, 0xdc02, 0x9a20, 0xd315, 0x2b76, 0xc000, 0x1, 0x1);
        gbc.writeMem(0x58a9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdc02, gbc.sp());
        EXPECT(0x58ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0054
        gbc.setState(0xd709, 0x79c5, 0x8e0, 0xaeb1, 0xb15c, 0xad79, 0x1, 0x0);
        gbc.writeMem(0xd709, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x79c5, gbc.sp());
        EXPECT(0xd70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd709));
        EXPECT(0xf7, gbc.readMem(0xd70a));
        // CB F7 0055
        gbc.setState(0x9b62, 0x9ebd, 0x72b0, 0x5e3b, 0x9df8, 0xa0a2, 0x1, 0x1);
        gbc.writeMem(0x9b62, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9ebd, gbc.sp());
        EXPECT(0x9b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b62));
        EXPECT(0xf7, gbc.readMem(0x9b63));
        // CB F7 0056
        gbc.setState(0xef6b, 0xdb64, 0x2fc0, 0x4add, 0x6b9b, 0x95b9, 0x0, 0x0);
        gbc.writeMem(0xef6b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdb64, gbc.sp());
        EXPECT(0xef6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6b));
        EXPECT(0xf7, gbc.readMem(0xef6c));
        // CB F7 0057
        gbc.setState(0x1240, 0x7b4b, 0x650, 0x7550, 0x3764, 0xa9bd, 0x1, 0x1);
        gbc.writeMem(0x1240, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7b4b, gbc.sp());
        EXPECT(0x1242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0059
        gbc.setState(0xf0d, 0x2edb, 0x3e80, 0xc7dd, 0x4ff8, 0x6c6e, 0x1, 0x1);
        gbc.writeMem(0xf0d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2edb, gbc.sp());
        EXPECT(0xf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 005A
        gbc.setState(0x5a3, 0x2a24, 0x1930, 0x1caa, 0x7e78, 0x58e8, 0x1, 0x1);
        gbc.writeMem(0x5a3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2a24, gbc.sp());
        EXPECT(0x5a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 005B
        gbc.setState(0x8edc, 0xd76e, 0x9c50, 0x282b, 0xe7ff, 0xe58d, 0x1, 0x1);
        gbc.writeMem(0x8edc, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd76e, gbc.sp());
        EXPECT(0x8ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8edc));
        EXPECT(0xf7, gbc.readMem(0x8edd));
        // CB F7 005C
        gbc.setState(0x99e0, 0xfa72, 0x66a0, 0xc75, 0x1723, 0xc99c, 0x0, 0x0);
        gbc.writeMem(0x99e0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfa72, gbc.sp());
        EXPECT(0x99e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e0));
        EXPECT(0xf7, gbc.readMem(0x99e1));
        // CB F7 005D
        gbc.setState(0xa219, 0xacca, 0x27b0, 0x6e96, 0x8491, 0x2945, 0x1, 0x1);
        gbc.writeMem(0xa219, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xacca, gbc.sp());
        EXPECT(0xa21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa219));
        EXPECT(0xf7, gbc.readMem(0xa21a));
        // CB F7 005E
        gbc.setState(0x628a, 0x9c58, 0x4670, 0x2017, 0xc8ba, 0xdf4f, 0x0, 0x0);
        gbc.writeMem(0x628a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9c58, gbc.sp());
        EXPECT(0x628c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 005F
        gbc.setState(0xb76c, 0x55f1, 0x6490, 0xb765, 0x4aa7, 0xf43b, 0x0, 0x1);
        gbc.writeMem(0xb76c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x55f1, gbc.sp());
        EXPECT(0xb76e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76c));
        EXPECT(0xf7, gbc.readMem(0xb76d));
        // CB F7 0060
        gbc.setState(0x109b, 0xcd91, 0x9e80, 0x2245, 0x7fcf, 0x3c2d, 0x0, 0x1);
        gbc.writeMem(0x109b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xcd91, gbc.sp());
        EXPECT(0x109d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0061
        gbc.setState(0x4099, 0xe4f1, 0xea90, 0x1d56, 0x9e54, 0xfea1, 0x0, 0x1);
        gbc.writeMem(0x4099, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe4f1, gbc.sp());
        EXPECT(0x409b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0062
        gbc.setState(0x3cf7, 0xc046, 0xbd30, 0xb343, 0x1a4, 0x9ad0, 0x0, 0x0);
        gbc.writeMem(0x3cf7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc046, gbc.sp());
        EXPECT(0x3cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0063
        gbc.setState(0x48ee, 0xc461, 0x9b70, 0x2e0, 0xdd7, 0xe67d, 0x0, 0x1);
        gbc.writeMem(0x48ee, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc461, gbc.sp());
        EXPECT(0x48f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0064
        gbc.setState(0xd3e9, 0xc833, 0x7f30, 0xf3f4, 0x6899, 0xc04a, 0x0, 0x1);
        gbc.writeMem(0xd3e9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc833, gbc.sp());
        EXPECT(0xd3eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e9));
        EXPECT(0xf7, gbc.readMem(0xd3ea));
        // CB F7 0065
        gbc.setState(0x12b0, 0xcc78, 0xe6c0, 0x5dd9, 0x56c6, 0xf102, 0x1, 0x1);
        gbc.writeMem(0x12b0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcc78, gbc.sp());
        EXPECT(0x12b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0066
        gbc.setState(0x5153, 0x13ee, 0xee00, 0x8f8, 0x9a8b, 0xbfe5, 0x1, 0x1);
        gbc.writeMem(0x5153, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x13ee, gbc.sp());
        EXPECT(0x5155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0068
        gbc.setState(0x2dca, 0x2014, 0x7340, 0x18c3, 0x3968, 0xca0b, 0x0, 0x0);
        gbc.writeMem(0x2dca, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2014, gbc.sp());
        EXPECT(0x2dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0069
        gbc.setState(0x6353, 0xcf2c, 0x6f0, 0xa7a1, 0x5427, 0xa56f, 0x1, 0x1);
        gbc.writeMem(0x6353, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcf2c, gbc.sp());
        EXPECT(0x6355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 006A
        gbc.setState(0x11e7, 0xc7ab, 0xc5c0, 0xc5f6, 0xfa04, 0xd59, 0x0, 0x1);
        gbc.writeMem(0x11e7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc7ab, gbc.sp());
        EXPECT(0x11e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 006B
        gbc.setState(0x1647, 0xb660, 0xc980, 0x8af1, 0xebca, 0xd6c9, 0x1, 0x1);
        gbc.writeMem(0x1647, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb660, gbc.sp());
        EXPECT(0x1649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 006C
        gbc.setState(0xb70c, 0xb054, 0x2860, 0x35aa, 0x4d63, 0x787d, 0x1, 0x1);
        gbc.writeMem(0xb70c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb054, gbc.sp());
        EXPECT(0xb70e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70c));
        EXPECT(0xf7, gbc.readMem(0xb70d));
        // CB F7 006D
        gbc.setState(0x9dcf, 0x75a0, 0x2c30, 0x29c9, 0x97, 0xf392, 0x0, 0x1);
        gbc.writeMem(0x9dcf, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x75a0, gbc.sp());
        EXPECT(0x9dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dcf));
        EXPECT(0xf7, gbc.readMem(0x9dd0));
        // CB F7 006E
        gbc.setState(0x8ac9, 0xbd55, 0x3e30, 0x21ff, 0xd921, 0x4951, 0x0, 0x1);
        gbc.writeMem(0x8ac9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbd55, gbc.sp());
        EXPECT(0x8acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac9));
        EXPECT(0xf7, gbc.readMem(0x8aca));
        // CB F7 006F
        gbc.setState(0x1842, 0xc6aa, 0xf240, 0x2ed, 0x6928, 0x16b2, 0x0, 0x1);
        gbc.writeMem(0x1842, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc6aa, gbc.sp());
        EXPECT(0x1844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0070
        gbc.setState(0xddc9, 0xe0d3, 0xa0a0, 0xf5d3, 0x2c43, 0x2ca1, 0x1, 0x0);
        gbc.writeMem(0xddc9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe0d3, gbc.sp());
        EXPECT(0xddcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc9));
        EXPECT(0xf7, gbc.readMem(0xddca));
        // CB F7 0071
        gbc.setState(0x1336, 0x55f2, 0x9e00, 0x6c60, 0x3a2, 0xbd86, 0x1, 0x0);
        gbc.writeMem(0x1336, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x55f2, gbc.sp());
        EXPECT(0x1338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0072
        gbc.setState(0x9e09, 0x580f, 0x1de0, 0x6b38, 0x1e96, 0x1e88, 0x0, 0x1);
        gbc.writeMem(0x9e09, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x580f, gbc.sp());
        EXPECT(0x9e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e09));
        EXPECT(0xf7, gbc.readMem(0x9e0a));
        // CB F7 0073
        gbc.setState(0xc056, 0xee2b, 0xd470, 0xc0dd, 0xf1f8, 0x2410, 0x0, 0x1);
        gbc.writeMem(0xc056, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xee2b, gbc.sp());
        EXPECT(0xc058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc056));
        EXPECT(0xf7, gbc.readMem(0xc057));
        // CB F7 0074
        gbc.setState(0x7299, 0x641a, 0x60d0, 0xaf8b, 0x9d47, 0xe2eb, 0x0, 0x0);
        gbc.writeMem(0x7299, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x641a, gbc.sp());
        EXPECT(0x729b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0076
        gbc.setState(0xaf9b, 0x6dea, 0x4d40, 0xe0b4, 0xd2c7, 0x5a95, 0x1, 0x0);
        gbc.writeMem(0xaf9b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6dea, gbc.sp());
        EXPECT(0xaf9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf9b));
        EXPECT(0xf7, gbc.readMem(0xaf9c));
        // CB F7 0077
        gbc.setState(0x42b5, 0xdc2f, 0x9c90, 0xd560, 0xded5, 0x5d0c, 0x0, 0x1);
        gbc.writeMem(0x42b5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdc2f, gbc.sp());
        EXPECT(0x42b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0078
        gbc.setState(0xebb5, 0xe32b, 0x150, 0x7803, 0x9df, 0x17e, 0x0, 0x1);
        gbc.writeMem(0xebb5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe32b, gbc.sp());
        EXPECT(0xebb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb5));
        EXPECT(0xf7, gbc.readMem(0xebb6));
        // CB F7 0079
        gbc.setState(0x637e, 0x23c4, 0x2f50, 0xe222, 0x409b, 0x248d, 0x1, 0x0);
        gbc.writeMem(0x637e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x23c4, gbc.sp());
        EXPECT(0x6380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 007A
        gbc.setState(0xb4e7, 0xf83e, 0xbfd0, 0x63c2, 0x15fb, 0x37af, 0x0, 0x0);
        gbc.writeMem(0xb4e7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf83e, gbc.sp());
        EXPECT(0xb4e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e7));
        EXPECT(0xf7, gbc.readMem(0xb4e8));
        // CB F7 007B
        gbc.setState(0xa046, 0x8031, 0x4df0, 0x6348, 0xf98c, 0x507b, 0x1, 0x1);
        gbc.writeMem(0xa046, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8031, gbc.sp());
        EXPECT(0xa048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa046));
        EXPECT(0xf7, gbc.readMem(0xa047));
        // CB F7 007C
        gbc.setState(0x7ea9, 0x8626, 0x71a0, 0xc2fa, 0x6b7e, 0xf95a, 0x0, 0x1);
        gbc.writeMem(0x7ea9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8626, gbc.sp());
        EXPECT(0x7eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 007D
        gbc.setState(0xdb36, 0x78eb, 0x9ed0, 0x494a, 0x1e1b, 0x2866, 0x0, 0x0);
        gbc.writeMem(0xdb36, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x78eb, gbc.sp());
        EXPECT(0xdb38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb36));
        EXPECT(0xf7, gbc.readMem(0xdb37));
        // CB F7 007E
        gbc.setState(0xe1c5, 0x8d7, 0xac70, 0xe01e, 0x36ac, 0xce31, 0x0, 0x0);
        gbc.writeMem(0xe1c5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8d7, gbc.sp());
        EXPECT(0xe1c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c5));
        EXPECT(0xf7, gbc.readMem(0xe1c6));
        // CB F7 007F
        gbc.setState(0x92ba, 0x4c27, 0x83f0, 0xa147, 0xa3cd, 0x8fa, 0x0, 0x1);
        gbc.writeMem(0x92ba, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4c27, gbc.sp());
        EXPECT(0x92bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ba));
        EXPECT(0xf7, gbc.readMem(0x92bb));
        // CB F7 0080
        gbc.setState(0xdf30, 0x6462, 0x3c0, 0x5b2b, 0x836f, 0xbc2b, 0x0, 0x1);
        gbc.writeMem(0xdf30, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6462, gbc.sp());
        EXPECT(0xdf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf30));
        EXPECT(0xf7, gbc.readMem(0xdf31));
        // CB F7 0081
        gbc.setState(0x572e, 0x4d20, 0x3210, 0xdd7d, 0xa311, 0xc1e, 0x0, 0x0);
        gbc.writeMem(0x572e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4d20, gbc.sp());
        EXPECT(0x5730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0082
        gbc.setState(0xeeb0, 0xf6d5, 0x2e30, 0x2f64, 0x2f40, 0xc250, 0x1, 0x0);
        gbc.writeMem(0xeeb0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf6d5, gbc.sp());
        EXPECT(0xeeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb0));
        EXPECT(0xf7, gbc.readMem(0xeeb1));
        // CB F7 0083
        gbc.setState(0x8d96, 0xbb46, 0x1420, 0x9fb0, 0xca54, 0xc3da, 0x0, 0x0);
        gbc.writeMem(0x8d96, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbb46, gbc.sp());
        EXPECT(0x8d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d96));
        EXPECT(0xf7, gbc.readMem(0x8d97));
        // CB F7 0084
        gbc.setState(0xb40f, 0x125d, 0xf640, 0x531d, 0x6446, 0x7df7, 0x1, 0x1);
        gbc.writeMem(0xb40f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x125d, gbc.sp());
        EXPECT(0xb411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb40f));
        EXPECT(0xf7, gbc.readMem(0xb410));
        // CB F7 0085
        gbc.setState(0xb823, 0xc061, 0xda30, 0x9530, 0x30a9, 0x4f35, 0x0, 0x1);
        gbc.writeMem(0xb823, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc061, gbc.sp());
        EXPECT(0xb825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb823));
        EXPECT(0xf7, gbc.readMem(0xb824));
        // CB F7 0086
        gbc.setState(0x5258, 0x9376, 0x7df0, 0x3f6a, 0xb21a, 0xef2d, 0x0, 0x0);
        gbc.writeMem(0x5258, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9376, gbc.sp());
        EXPECT(0x525a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0087
        gbc.setState(0xa6b0, 0xbf28, 0x4890, 0xce17, 0x3efd, 0x20b3, 0x1, 0x0);
        gbc.writeMem(0xa6b0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbf28, gbc.sp());
        EXPECT(0xa6b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b0));
        EXPECT(0xf7, gbc.readMem(0xa6b1));
        // CB F7 0088
        gbc.setState(0x6414, 0x373, 0x4060, 0x4f1b, 0xe4df, 0x1ef9, 0x1, 0x0);
        gbc.writeMem(0x6414, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x373, gbc.sp());
        EXPECT(0x6416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0089
        gbc.setState(0xe2b3, 0x152a, 0xb610, 0xa94, 0x9a2c, 0xe884, 0x1, 0x0);
        gbc.writeMem(0xe2b3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x152a, gbc.sp());
        EXPECT(0xe2b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b3));
        EXPECT(0xf7, gbc.readMem(0xe2b4));
        // CB F7 008A
        gbc.setState(0x332e, 0xa691, 0x77f0, 0x5f83, 0x419b, 0x6013, 0x1, 0x0);
        gbc.writeMem(0x332e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa691, gbc.sp());
        EXPECT(0x3330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 008B
        gbc.setState(0x2848, 0xde24, 0x3d50, 0x5bf8, 0xec26, 0x4185, 0x1, 0x1);
        gbc.writeMem(0x2848, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xde24, gbc.sp());
        EXPECT(0x284a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 008C
        gbc.setState(0xdc3f, 0xbb90, 0x4430, 0x6c48, 0x418d, 0x17f4, 0x0, 0x0);
        gbc.writeMem(0xdc3f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbb90, gbc.sp());
        EXPECT(0xdc41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc3f));
        EXPECT(0xf7, gbc.readMem(0xdc40));
        // CB F7 008D
        gbc.setState(0x788a, 0xead2, 0xd9f0, 0xcedd, 0x6f75, 0x3c74, 0x1, 0x1);
        gbc.writeMem(0x788a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xead2, gbc.sp());
        EXPECT(0x788c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 008E
        gbc.setState(0x2396, 0x4d6a, 0x30a0, 0x8861, 0x4888, 0xa8b2, 0x1, 0x1);
        gbc.writeMem(0x2396, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4d6a, gbc.sp());
        EXPECT(0x2398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 008F
        gbc.setState(0x3251, 0xef8f, 0x1720, 0x6482, 0xa449, 0x4529, 0x0, 0x1);
        gbc.writeMem(0x3251, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xef8f, gbc.sp());
        EXPECT(0x3253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0090
        gbc.setState(0x7c0e, 0xffae, 0xf030, 0x1562, 0xe515, 0x1553, 0x0, 0x0);
        gbc.writeMem(0x7c0e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xffae, gbc.sp());
        EXPECT(0x7c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0091
        gbc.setState(0xae06, 0x46dc, 0x3d70, 0x77a1, 0x5983, 0x5fc9, 0x0, 0x0);
        gbc.writeMem(0xae06, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x46dc, gbc.sp());
        EXPECT(0xae08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae06));
        EXPECT(0xf7, gbc.readMem(0xae07));
        // CB F7 0092
        gbc.setState(0xa5ca, 0xd334, 0xff70, 0xa658, 0x148, 0x5c39, 0x0, 0x1);
        gbc.writeMem(0xa5ca, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd334, gbc.sp());
        EXPECT(0xa5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ca));
        EXPECT(0xf7, gbc.readMem(0xa5cb));
        // CB F7 0093
        gbc.setState(0x9baf, 0x6dcb, 0xeb40, 0x3621, 0x5b55, 0x59ff, 0x1, 0x1);
        gbc.writeMem(0x9baf, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6dcb, gbc.sp());
        EXPECT(0x9bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9baf));
        EXPECT(0xf7, gbc.readMem(0x9bb0));
        // CB F7 0094
        gbc.setState(0x3bc0, 0x608, 0x7af0, 0xada8, 0x7c48, 0x6de6, 0x1, 0x0);
        gbc.writeMem(0x3bc0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x608, gbc.sp());
        EXPECT(0x3bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0095
        gbc.setState(0x99ee, 0x1119, 0x9150, 0x1db1, 0x2342, 0x796e, 0x0, 0x1);
        gbc.writeMem(0x99ee, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1119, gbc.sp());
        EXPECT(0x99f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ee));
        EXPECT(0xf7, gbc.readMem(0x99ef));
        // CB F7 0096
        gbc.setState(0x4456, 0x7827, 0x72d0, 0x2cf1, 0xfc2, 0xded, 0x1, 0x0);
        gbc.writeMem(0x4456, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7827, gbc.sp());
        EXPECT(0x4458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0097
        gbc.setState(0x84c9, 0xe243, 0x6a60, 0x4ae5, 0xbd76, 0xa3b0, 0x0, 0x1);
        gbc.writeMem(0x84c9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe243, gbc.sp());
        EXPECT(0x84cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c9));
        EXPECT(0xf7, gbc.readMem(0x84ca));
        // CB F7 0098
        gbc.setState(0x95b4, 0x5f64, 0x2660, 0x258f, 0x99fb, 0x67ae, 0x0, 0x1);
        gbc.writeMem(0x95b4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5f64, gbc.sp());
        EXPECT(0x95b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b4));
        EXPECT(0xf7, gbc.readMem(0x95b5));
        // CB F7 0099
        gbc.setState(0xd979, 0xa1d6, 0x8d10, 0xdac0, 0xe1b5, 0xba19, 0x0, 0x0);
        gbc.writeMem(0xd979, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa1d6, gbc.sp());
        EXPECT(0xd97b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd979));
        EXPECT(0xf7, gbc.readMem(0xd97a));
        // CB F7 009A
        gbc.setState(0x2df1, 0xf674, 0x6d00, 0xb1df, 0x4dbc, 0xb60b, 0x1, 0x0);
        gbc.writeMem(0x2df1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf674, gbc.sp());
        EXPECT(0x2df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 009B
        gbc.setState(0x289a, 0x6937, 0x100, 0x454f, 0xe087, 0xe7c, 0x0, 0x0);
        gbc.writeMem(0x289a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6937, gbc.sp());
        EXPECT(0x289c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 009C
        gbc.setState(0x157c, 0x49cb, 0xa9a0, 0xb1de, 0x83fb, 0x6cd, 0x0, 0x1);
        gbc.writeMem(0x157c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x49cb, gbc.sp());
        EXPECT(0x157e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 009D
        gbc.setState(0xa4b2, 0xa132, 0x6500, 0x786d, 0x67fb, 0xdecb, 0x1, 0x0);
        gbc.writeMem(0xa4b2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa132, gbc.sp());
        EXPECT(0xa4b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b2));
        EXPECT(0xf7, gbc.readMem(0xa4b3));
        // CB F7 009E
        gbc.setState(0x97ff, 0x90ab, 0xa4d0, 0x8c97, 0x81af, 0xf5ff, 0x1, 0x0);
        gbc.writeMem(0x97ff, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x90ab, gbc.sp());
        EXPECT(0x9801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ff));
        EXPECT(0xf7, gbc.readMem(0x9800));
        // CB F7 009F
        gbc.setState(0x6f1a, 0x1ec9, 0x5520, 0x28, 0x6ae1, 0xe746, 0x0, 0x0);
        gbc.writeMem(0x6f1a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1ec9, gbc.sp());
        EXPECT(0x6f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00A0
        gbc.setState(0x2fd7, 0xff73, 0x22c0, 0x5786, 0x3605, 0x7cd4, 0x0, 0x1);
        gbc.writeMem(0x2fd7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xff73, gbc.sp());
        EXPECT(0x2fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00A1
        gbc.setState(0xb302, 0x3979, 0x3650, 0xc7b2, 0xa6c2, 0xaff, 0x0, 0x1);
        gbc.writeMem(0xb302, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3979, gbc.sp());
        EXPECT(0xb304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb302));
        EXPECT(0xf7, gbc.readMem(0xb303));
        // CB F7 00A2
        gbc.setState(0x919a, 0x9e6e, 0xf150, 0x6efb, 0x3a0f, 0xd48c, 0x1, 0x1);
        gbc.writeMem(0x919a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9e6e, gbc.sp());
        EXPECT(0x919c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x919a));
        EXPECT(0xf7, gbc.readMem(0x919b));
        // CB F7 00A3
        gbc.setState(0x3e25, 0xe5c2, 0x9960, 0x4b69, 0x3f5f, 0x7cb7, 0x0, 0x1);
        gbc.writeMem(0x3e25, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe5c2, gbc.sp());
        EXPECT(0x3e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00A4
        gbc.setState(0x3916, 0x96ee, 0xcb60, 0xd44c, 0x96ba, 0x6b8a, 0x0, 0x0);
        gbc.writeMem(0x3916, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x96ee, gbc.sp());
        EXPECT(0x3918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00A5
        gbc.setState(0x741c, 0xc301, 0xa4a0, 0xae71, 0x9c6c, 0x86d1, 0x1, 0x0);
        gbc.writeMem(0x741c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc301, gbc.sp());
        EXPECT(0x741e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00A6
        gbc.setState(0x6aa1, 0x340c, 0x2d90, 0xdcdb, 0x2f9e, 0x7c39, 0x0, 0x0);
        gbc.writeMem(0x6aa1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x340c, gbc.sp());
        EXPECT(0x6aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00A7
        gbc.setState(0x2e97, 0x8919, 0x9a60, 0xbed3, 0xea3b, 0x1e31, 0x1, 0x0);
        gbc.writeMem(0x2e97, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8919, gbc.sp());
        EXPECT(0x2e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00A8
        gbc.setState(0xdb89, 0xbf98, 0x1570, 0xab6, 0xff98, 0xc0f4, 0x0, 0x1);
        gbc.writeMem(0xdb89, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbf98, gbc.sp());
        EXPECT(0xdb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb89));
        EXPECT(0xf7, gbc.readMem(0xdb8a));
        // CB F7 00A9
        gbc.setState(0x2d0a, 0x980a, 0x75c0, 0x1f89, 0x6cbc, 0x6597, 0x0, 0x0);
        gbc.writeMem(0x2d0a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x980a, gbc.sp());
        EXPECT(0x2d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00AB
        gbc.setState(0x7bf1, 0x943, 0x6890, 0xee4b, 0x7932, 0xd0ba, 0x1, 0x1);
        gbc.writeMem(0x7bf1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x943, gbc.sp());
        EXPECT(0x7bf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00AC
        gbc.setState(0x9650, 0xd153, 0x3300, 0xd4ea, 0xe022, 0x8f27, 0x1, 0x1);
        gbc.writeMem(0x9650, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd153, gbc.sp());
        EXPECT(0x9652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9650));
        EXPECT(0xf7, gbc.readMem(0x9651));
        // CB F7 00AD
        gbc.setState(0xe8f5, 0xf673, 0xdbb0, 0x38a0, 0x212f, 0xb341, 0x1, 0x1);
        gbc.writeMem(0xe8f5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf673, gbc.sp());
        EXPECT(0xe8f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f5));
        EXPECT(0xf7, gbc.readMem(0xe8f6));
        // CB F7 00AE
        gbc.setState(0xee63, 0xe420, 0x1e10, 0x8011, 0xbb02, 0x27ae, 0x1, 0x0);
        gbc.writeMem(0xee63, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe420, gbc.sp());
        EXPECT(0xee65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee63));
        EXPECT(0xf7, gbc.readMem(0xee64));
        // CB F7 00AF
        gbc.setState(0x3ffc, 0xe06a, 0x39d0, 0xc74e, 0xacf4, 0xf0ac, 0x1, 0x0);
        gbc.writeMem(0x3ffc, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe06a, gbc.sp());
        EXPECT(0x3ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00B0
        gbc.setState(0x4c45, 0x9722, 0x52d0, 0x2d3b, 0x2282, 0xf687, 0x0, 0x0);
        gbc.writeMem(0x4c45, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9722, gbc.sp());
        EXPECT(0x4c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00B2
        gbc.setState(0xb364, 0x6558, 0x94b0, 0xf711, 0x850e, 0xcc95, 0x0, 0x0);
        gbc.writeMem(0xb364, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6558, gbc.sp());
        EXPECT(0xb366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb364));
        EXPECT(0xf7, gbc.readMem(0xb365));
        // CB F7 00B3
        gbc.setState(0x703d, 0x271c, 0x2410, 0x6f5e, 0x495b, 0x5db0, 0x1, 0x0);
        gbc.writeMem(0x703d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x271c, gbc.sp());
        EXPECT(0x703f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00B4
        gbc.setState(0xce79, 0x77e8, 0xcf90, 0x84f3, 0x2c20, 0xd089, 0x0, 0x0);
        gbc.writeMem(0xce79, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x77e8, gbc.sp());
        EXPECT(0xce7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce79));
        EXPECT(0xf7, gbc.readMem(0xce7a));
        // CB F7 00B5
        gbc.setState(0xb8f4, 0xdba5, 0xbdd0, 0x6741, 0x4e37, 0x882a, 0x1, 0x1);
        gbc.writeMem(0xb8f4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdba5, gbc.sp());
        EXPECT(0xb8f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f4));
        EXPECT(0xf7, gbc.readMem(0xb8f5));
        // CB F7 00B6
        gbc.setState(0x8d4d, 0x660b, 0x5d60, 0x1e82, 0xdd03, 0x96de, 0x1, 0x0);
        gbc.writeMem(0x8d4d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x660b, gbc.sp());
        EXPECT(0x8d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4d));
        EXPECT(0xf7, gbc.readMem(0x8d4e));
        // CB F7 00B7
        gbc.setState(0x5d7, 0x56e, 0x90a0, 0x7e6c, 0xafcf, 0x7cd7, 0x0, 0x1);
        gbc.writeMem(0x5d7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x56e, gbc.sp());
        EXPECT(0x5d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00B8
        gbc.setState(0xe7bb, 0x8e15, 0x320, 0xcb20, 0x1780, 0xe612, 0x0, 0x1);
        gbc.writeMem(0xe7bb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8e15, gbc.sp());
        EXPECT(0xe7bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7bb));
        EXPECT(0xf7, gbc.readMem(0xe7bc));
        // CB F7 00B9
        gbc.setState(0xea73, 0xc9dc, 0x7f20, 0x72d2, 0x2799, 0x591d, 0x1, 0x1);
        gbc.writeMem(0xea73, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc9dc, gbc.sp());
        EXPECT(0xea75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea73));
        EXPECT(0xf7, gbc.readMem(0xea74));
        // CB F7 00BA
        gbc.setState(0x5897, 0x68e1, 0xf0e0, 0x6860, 0x9967, 0xf7fa, 0x1, 0x0);
        gbc.writeMem(0x5897, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x68e1, gbc.sp());
        EXPECT(0x5899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00BB
        gbc.setState(0x1c86, 0xe341, 0x3020, 0x6135, 0x7695, 0xa6a8, 0x1, 0x0);
        gbc.writeMem(0x1c86, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe341, gbc.sp());
        EXPECT(0x1c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00BC
        gbc.setState(0xeada, 0xe7e1, 0x250, 0xd3a3, 0x3897, 0xea32, 0x0, 0x1);
        gbc.writeMem(0xeada, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe7e1, gbc.sp());
        EXPECT(0xeadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeada));
        EXPECT(0xf7, gbc.readMem(0xeadb));
        // CB F7 00BD
        gbc.setState(0xdac4, 0x7e29, 0xc40, 0x7f6, 0x412a, 0x1f9b, 0x0, 0x1);
        gbc.writeMem(0xdac4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7e29, gbc.sp());
        EXPECT(0xdac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac4));
        EXPECT(0xf7, gbc.readMem(0xdac5));
        // CB F7 00BE
        gbc.setState(0xe694, 0x7581, 0x24e0, 0x5b, 0xffd8, 0x4c95, 0x0, 0x1);
        gbc.writeMem(0xe694, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7581, gbc.sp());
        EXPECT(0xe696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe694));
        EXPECT(0xf7, gbc.readMem(0xe695));
        // CB F7 00BF
        gbc.setState(0x9a52, 0x6d1c, 0xbac0, 0x9c76, 0x8ad5, 0x1275, 0x1, 0x1);
        gbc.writeMem(0x9a52, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6d1c, gbc.sp());
        EXPECT(0x9a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a52));
        EXPECT(0xf7, gbc.readMem(0x9a53));
        // CB F7 00C0
        gbc.setState(0x3634, 0x6fe0, 0x3f90, 0x4411, 0xe072, 0x6464, 0x0, 0x1);
        gbc.writeMem(0x3634, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6fe0, gbc.sp());
        EXPECT(0x3636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00C1
        gbc.setState(0xb963, 0x4a03, 0x5e50, 0x1b6, 0xc49e, 0x6658, 0x1, 0x1);
        gbc.writeMem(0xb963, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4a03, gbc.sp());
        EXPECT(0xb965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb963));
        EXPECT(0xf7, gbc.readMem(0xb964));
        // CB F7 00C2
        gbc.setState(0x73ef, 0x64f6, 0xd9a0, 0x4b0d, 0x1ba6, 0xdde1, 0x1, 0x1);
        gbc.writeMem(0x73ef, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x64f6, gbc.sp());
        EXPECT(0x73f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00C3
        gbc.setState(0xa2af, 0xa1ea, 0xe670, 0x139c, 0x7825, 0xbba4, 0x1, 0x0);
        gbc.writeMem(0xa2af, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa1ea, gbc.sp());
        EXPECT(0xa2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2af));
        EXPECT(0xf7, gbc.readMem(0xa2b0));
        // CB F7 00C4
        gbc.setState(0x4a31, 0x153, 0x9f20, 0x4768, 0x6b83, 0x6947, 0x0, 0x1);
        gbc.writeMem(0x4a31, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x153, gbc.sp());
        EXPECT(0x4a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00C5
        gbc.setState(0x7f2e, 0xf85c, 0x4530, 0x8786, 0x86c6, 0x7923, 0x0, 0x0);
        gbc.writeMem(0x7f2e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf85c, gbc.sp());
        EXPECT(0x7f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00C6
        gbc.setState(0xb5a0, 0xdbdf, 0xb940, 0x8ac0, 0x81f8, 0x5eb1, 0x0, 0x1);
        gbc.writeMem(0xb5a0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdbdf, gbc.sp());
        EXPECT(0xb5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a0));
        EXPECT(0xf7, gbc.readMem(0xb5a1));
        // CB F7 00C7
        gbc.setState(0x88d7, 0x52c0, 0x6490, 0x3056, 0xa1dc, 0x2b1f, 0x0, 0x0);
        gbc.writeMem(0x88d7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x52c0, gbc.sp());
        EXPECT(0x88d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d7));
        EXPECT(0xf7, gbc.readMem(0x88d8));
        // CB F7 00C8
        gbc.setState(0xe1b7, 0x8309, 0xe300, 0xc56d, 0x3694, 0x95a4, 0x1, 0x1);
        gbc.writeMem(0xe1b7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8309, gbc.sp());
        EXPECT(0xe1b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b7));
        EXPECT(0xf7, gbc.readMem(0xe1b8));
        // CB F7 00C9
        gbc.setState(0x1db3, 0x83ce, 0x76a0, 0x5a2c, 0x94c2, 0xf2e5, 0x0, 0x1);
        gbc.writeMem(0x1db3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x83ce, gbc.sp());
        EXPECT(0x1db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00CA
        gbc.setState(0xa9dd, 0x943d, 0xa940, 0xf1a9, 0x885a, 0x619f, 0x0, 0x1);
        gbc.writeMem(0xa9dd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x943d, gbc.sp());
        EXPECT(0xa9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9dd));
        EXPECT(0xf7, gbc.readMem(0xa9de));
        // CB F7 00CB
        gbc.setState(0x98d8, 0x6778, 0x1000, 0xc87d, 0x5df3, 0x8fa1, 0x1, 0x0);
        gbc.writeMem(0x98d8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6778, gbc.sp());
        EXPECT(0x98da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d8));
        EXPECT(0xf7, gbc.readMem(0x98d9));
        // CB F7 00CC
        gbc.setState(0xdaeb, 0xb50, 0x1710, 0x2a5e, 0xa923, 0x8562, 0x0, 0x0);
        gbc.writeMem(0xdaeb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb50, gbc.sp());
        EXPECT(0xdaed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaeb));
        EXPECT(0xf7, gbc.readMem(0xdaec));
        // CB F7 00CD
        gbc.setState(0xe788, 0xd5a1, 0xfd30, 0x83f, 0xb759, 0xbf31, 0x0, 0x1);
        gbc.writeMem(0xe788, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd5a1, gbc.sp());
        EXPECT(0xe78a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe788));
        EXPECT(0xf7, gbc.readMem(0xe789));
        // CB F7 00CE
        gbc.setState(0x8b5e, 0xcbcc, 0x90f0, 0xb241, 0x9c8f, 0x578f, 0x0, 0x1);
        gbc.writeMem(0x8b5e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcbcc, gbc.sp());
        EXPECT(0x8b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b5e));
        EXPECT(0xf7, gbc.readMem(0x8b5f));
        // CB F7 00CF
        gbc.setState(0x73ca, 0x182e, 0x4ab0, 0x7a2e, 0xe0da, 0x80e3, 0x1, 0x0);
        gbc.writeMem(0x73ca, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x182e, gbc.sp());
        EXPECT(0x73cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00D0
        gbc.setState(0xb42, 0xd876, 0xf070, 0x70ee, 0x8d91, 0x46a3, 0x1, 0x0);
        gbc.writeMem(0xb42, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd876, gbc.sp());
        EXPECT(0xb44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00D1
        gbc.setState(0x4b3f, 0x559e, 0x390, 0x8edc, 0x377, 0xa41d, 0x0, 0x1);
        gbc.writeMem(0x4b3f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x559e, gbc.sp());
        EXPECT(0x4b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00D2
        gbc.setState(0x31a7, 0x6a38, 0x9030, 0xbab0, 0x3268, 0x457f, 0x0, 0x1);
        gbc.writeMem(0x31a7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6a38, gbc.sp());
        EXPECT(0x31a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00D3
        gbc.setState(0xc4b6, 0xca42, 0x2300, 0xcaca, 0x2961, 0xf265, 0x1, 0x0);
        gbc.writeMem(0xc4b6, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xca42, gbc.sp());
        EXPECT(0xc4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b6));
        EXPECT(0xf7, gbc.readMem(0xc4b7));
        // CB F7 00D4
        gbc.setState(0x3014, 0x5455, 0xda80, 0x88f5, 0x1b54, 0x1ebf, 0x0, 0x1);
        gbc.writeMem(0x3014, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5455, gbc.sp());
        EXPECT(0x3016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00D5
        gbc.setState(0xaac9, 0x183d, 0xbeb0, 0x8f6a, 0xed30, 0x3682, 0x0, 0x0);
        gbc.writeMem(0xaac9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x183d, gbc.sp());
        EXPECT(0xaacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac9));
        EXPECT(0xf7, gbc.readMem(0xaaca));
        // CB F7 00D6
        gbc.setState(0x7832, 0x7a97, 0xe350, 0x160c, 0x1006, 0xb556, 0x0, 0x1);
        gbc.writeMem(0x7832, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7a97, gbc.sp());
        EXPECT(0x7834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00D7
        gbc.setState(0x480, 0x98e1, 0xa7f0, 0xfad, 0x1e1d, 0x19d8, 0x0, 0x0);
        gbc.writeMem(0x480, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x98e1, gbc.sp());
        EXPECT(0x482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00D8
        gbc.setState(0xb679, 0x949c, 0x8e70, 0x7c87, 0x6736, 0xe81d, 0x1, 0x1);
        gbc.writeMem(0xb679, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x949c, gbc.sp());
        EXPECT(0xb67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb679));
        EXPECT(0xf7, gbc.readMem(0xb67a));
        // CB F7 00D9
        gbc.setState(0x2b6a, 0x5523, 0x29f0, 0xd21d, 0xf1cd, 0xf4e8, 0x1, 0x1);
        gbc.writeMem(0x2b6a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5523, gbc.sp());
        EXPECT(0x2b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00DA
        gbc.setState(0xdac8, 0x4718, 0xf850, 0x1dce, 0x696, 0xca36, 0x0, 0x1);
        gbc.writeMem(0xdac8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4718, gbc.sp());
        EXPECT(0xdaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac8));
        EXPECT(0xf7, gbc.readMem(0xdac9));
        // CB F7 00DB
        gbc.setState(0x2d79, 0x57f3, 0xd3c0, 0xb44c, 0x8922, 0x8d35, 0x0, 0x0);
        gbc.writeMem(0x2d79, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x57f3, gbc.sp());
        EXPECT(0x2d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00DC
        gbc.setState(0x2c09, 0x13d0, 0x79f0, 0x7bac, 0x4af7, 0xb75b, 0x0, 0x1);
        gbc.writeMem(0x2c09, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x13d0, gbc.sp());
        EXPECT(0x2c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00DD
        gbc.setState(0x44ca, 0xb695, 0x4270, 0x1171, 0x6855, 0x211b, 0x0, 0x0);
        gbc.writeMem(0x44ca, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb695, gbc.sp());
        EXPECT(0x44cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00DE
        gbc.setState(0x6622, 0xba35, 0x7090, 0x2aea, 0xa16b, 0x74fe, 0x0, 0x1);
        gbc.writeMem(0x6622, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xba35, gbc.sp());
        EXPECT(0x6624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00DF
        gbc.setState(0xec20, 0x3ae7, 0xf840, 0xd32e, 0x93f6, 0x941d, 0x1, 0x0);
        gbc.writeMem(0xec20, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3ae7, gbc.sp());
        EXPECT(0xec22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec20));
        EXPECT(0xf7, gbc.readMem(0xec21));
        // CB F7 00E0
        gbc.setState(0x138c, 0x79db, 0x6bd0, 0x8dfe, 0x77c, 0x62e6, 0x0, 0x1);
        gbc.writeMem(0x138c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x79db, gbc.sp());
        EXPECT(0x138e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00E1
        gbc.setState(0x790c, 0x4b57, 0x4350, 0xe50e, 0xc91, 0xdfde, 0x0, 0x1);
        gbc.writeMem(0x790c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4b57, gbc.sp());
        EXPECT(0x790e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00E3
        gbc.setState(0x736e, 0x182c, 0x9b70, 0xaf90, 0xfe92, 0x3863, 0x0, 0x1);
        gbc.writeMem(0x736e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x182c, gbc.sp());
        EXPECT(0x7370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00E4
        gbc.setState(0xcc56, 0xe4d4, 0x3840, 0x8324, 0x1652, 0x4d02, 0x1, 0x1);
        gbc.writeMem(0xcc56, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe4d4, gbc.sp());
        EXPECT(0xcc58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc56));
        EXPECT(0xf7, gbc.readMem(0xcc57));
        // CB F7 00E5
        gbc.setState(0xc2f2, 0xb4ba, 0x63c0, 0x319, 0xcabd, 0x7375, 0x0, 0x1);
        gbc.writeMem(0xc2f2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb4ba, gbc.sp());
        EXPECT(0xc2f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f2));
        EXPECT(0xf7, gbc.readMem(0xc2f3));
        // CB F7 00E6
        gbc.setState(0x9b5, 0xe1c8, 0xe610, 0x22c2, 0xce11, 0xcbe8, 0x1, 0x0);
        gbc.writeMem(0x9b5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe1c8, gbc.sp());
        EXPECT(0x9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00E7
        gbc.setState(0xdf7d, 0xf888, 0x74a0, 0xba6, 0x413f, 0x8449, 0x1, 0x1);
        gbc.writeMem(0xdf7d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf888, gbc.sp());
        EXPECT(0xdf7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf7d));
        EXPECT(0xf7, gbc.readMem(0xdf7e));
        // CB F7 00E8
        gbc.setState(0x4edd, 0xa9b6, 0x75e0, 0xa70, 0xbf1c, 0xfda1, 0x1, 0x0);
        gbc.writeMem(0x4edd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa9b6, gbc.sp());
        EXPECT(0x4edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00E9
        gbc.setState(0x321, 0x719c, 0x1350, 0x50f8, 0xf83f, 0x358b, 0x1, 0x0);
        gbc.writeMem(0x321, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x719c, gbc.sp());
        EXPECT(0x323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00EB
        gbc.setState(0xa544, 0x7d86, 0x3b20, 0x8553, 0x4119, 0xa9a6, 0x1, 0x1);
        gbc.writeMem(0xa544, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7d86, gbc.sp());
        EXPECT(0xa546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa544));
        EXPECT(0xf7, gbc.readMem(0xa545));
        // CB F7 00EC
        gbc.setState(0x3ee6, 0x3105, 0x9680, 0xa836, 0xc004, 0x4082, 0x0, 0x1);
        gbc.writeMem(0x3ee6, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3105, gbc.sp());
        EXPECT(0x3ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00ED
        gbc.setState(0x286, 0xdecd, 0xa500, 0x9aa1, 0x908e, 0xfdd1, 0x1, 0x1);
        gbc.writeMem(0x286, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdecd, gbc.sp());
        EXPECT(0x288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00EE
        gbc.setState(0x8bf9, 0x44f1, 0x1560, 0xe2c4, 0xeef2, 0xbd6a, 0x1, 0x1);
        gbc.writeMem(0x8bf9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x44f1, gbc.sp());
        EXPECT(0x8bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf9));
        EXPECT(0xf7, gbc.readMem(0x8bfa));
        // CB F7 00F0
        gbc.setState(0x4eb0, 0x132c, 0x5e70, 0x2b32, 0x4d70, 0x56b1, 0x1, 0x0);
        gbc.writeMem(0x4eb0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x132c, gbc.sp());
        EXPECT(0x4eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00F2
        gbc.setState(0x102a, 0xb600, 0x49e0, 0xf07a, 0xd638, 0x8f99, 0x0, 0x0);
        gbc.writeMem(0x102a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb600, gbc.sp());
        EXPECT(0x102c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00F3
        gbc.setState(0x28d8, 0xa597, 0xa530, 0x80fb, 0x4b9c, 0x1213, 0x0, 0x0);
        gbc.writeMem(0x28d8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa597, gbc.sp());
        EXPECT(0x28da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00F4
        gbc.setState(0xbf37, 0x85e4, 0xe90, 0x90bc, 0x9239, 0x91aa, 0x0, 0x1);
        gbc.writeMem(0xbf37, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x85e4, gbc.sp());
        EXPECT(0xbf39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf37));
        EXPECT(0xf7, gbc.readMem(0xbf38));
        // CB F7 00F5
        gbc.setState(0x18a0, 0xb746, 0x9c0, 0xfa72, 0xf081, 0xd54e, 0x1, 0x0);
        gbc.writeMem(0x18a0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb746, gbc.sp());
        EXPECT(0x18a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00F6
        gbc.setState(0xa2c1, 0xece7, 0x52d0, 0x4bf5, 0x6dc2, 0xa28a, 0x1, 0x1);
        gbc.writeMem(0xa2c1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xece7, gbc.sp());
        EXPECT(0xa2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c1));
        EXPECT(0xf7, gbc.readMem(0xa2c2));
        // CB F7 00F7
        gbc.setState(0x18c4, 0x299f, 0x3eb0, 0x7964, 0xd50a, 0x9257, 0x0, 0x1);
        gbc.writeMem(0x18c4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x299f, gbc.sp());
        EXPECT(0x18c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00F8
        gbc.setState(0x57b8, 0xb4a3, 0xdec0, 0xa97a, 0x9a11, 0x3a90, 0x1, 0x1);
        gbc.writeMem(0x57b8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb4a3, gbc.sp());
        EXPECT(0x57ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00F9
        gbc.setState(0x6300, 0x6235, 0x7e90, 0xe08a, 0xe6e4, 0xedb8, 0x0, 0x1);
        gbc.writeMem(0x6300, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6235, gbc.sp());
        EXPECT(0x6302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00FA
        gbc.setState(0xc26, 0xd2a8, 0x66b0, 0x74e8, 0x5201, 0x1c24, 0x0, 0x0);
        gbc.writeMem(0xc26, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd2a8, gbc.sp());
        EXPECT(0xc28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00FB
        gbc.setState(0x616, 0xc1e2, 0x3700, 0x1ce9, 0x57d2, 0x3986, 0x0, 0x1);
        gbc.writeMem(0x616, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc1e2, gbc.sp());
        EXPECT(0x618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 00FC
        gbc.setState(0xdee4, 0xcd47, 0x800, 0xffd7, 0xeda5, 0x3945, 0x0, 0x1);
        gbc.writeMem(0xdee4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcd47, gbc.sp());
        EXPECT(0xdee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee4));
        EXPECT(0xf7, gbc.readMem(0xdee5));
        // CB F7 00FD
        gbc.setState(0x78ff, 0x9779, 0xfd0, 0xe072, 0x6d06, 0xc0eb, 0x1, 0x1);
        gbc.writeMem(0x78ff, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9779, gbc.sp());
        EXPECT(0x7901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 00FE
        gbc.setState(0xd1c8, 0xd53e, 0x30a0, 0xd3b6, 0xa924, 0xd063, 0x1, 0x0);
        gbc.writeMem(0xd1c8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd53e, gbc.sp());
        EXPECT(0xd1ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c8));
        EXPECT(0xf7, gbc.readMem(0xd1c9));
        // CB F7 00FF
        gbc.setState(0xd4d7, 0x770d, 0x40b0, 0x5682, 0xdb1e, 0xcf78, 0x1, 0x0);
        gbc.writeMem(0xd4d7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x770d, gbc.sp());
        EXPECT(0xd4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d7));
        EXPECT(0xf7, gbc.readMem(0xd4d8));
        // CB F7 0100
        gbc.setState(0x49ae, 0x44cb, 0xce70, 0x6aa7, 0x5ac0, 0xd28e, 0x0, 0x0);
        gbc.writeMem(0x49ae, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x44cb, gbc.sp());
        EXPECT(0x49b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0101
        gbc.setState(0x1f38, 0xe20b, 0xfbb0, 0x6b94, 0xb823, 0x978, 0x1, 0x0);
        gbc.writeMem(0x1f38, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe20b, gbc.sp());
        EXPECT(0x1f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0102
        gbc.setState(0x2c8f, 0x45cb, 0x8d70, 0x5959, 0xa7c, 0x785f, 0x1, 0x1);
        gbc.writeMem(0x2c8f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x45cb, gbc.sp());
        EXPECT(0x2c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0103
        gbc.setState(0x2a87, 0xec44, 0xa740, 0x3e31, 0x5f66, 0x9560, 0x1, 0x0);
        gbc.writeMem(0x2a87, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xec44, gbc.sp());
        EXPECT(0x2a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0104
        gbc.setState(0x4d60, 0xc149, 0x5fc0, 0xbba6, 0x2723, 0xce4, 0x0, 0x1);
        gbc.writeMem(0x4d60, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc149, gbc.sp());
        EXPECT(0x4d62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0105
        gbc.setState(0x6a34, 0x1c5a, 0xacb0, 0xc267, 0xe875, 0x307e, 0x0, 0x1);
        gbc.writeMem(0x6a34, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1c5a, gbc.sp());
        EXPECT(0x6a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0106
        gbc.setState(0xb93b, 0x4083, 0xc740, 0x9a56, 0x9a77, 0x1826, 0x1, 0x1);
        gbc.writeMem(0xb93b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4083, gbc.sp());
        EXPECT(0xb93d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93b));
        EXPECT(0xf7, gbc.readMem(0xb93c));
        // CB F7 0107
        gbc.setState(0xd80b, 0x4761, 0x8dd0, 0x84d3, 0xad24, 0x45b6, 0x0, 0x1);
        gbc.writeMem(0xd80b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4761, gbc.sp());
        EXPECT(0xd80d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80b));
        EXPECT(0xf7, gbc.readMem(0xd80c));
        // CB F7 0108
        gbc.setState(0x4fdc, 0x3771, 0x9100, 0x29ee, 0xc7d, 0x7557, 0x0, 0x1);
        gbc.writeMem(0x4fdc, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3771, gbc.sp());
        EXPECT(0x4fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0109
        gbc.setState(0x63e0, 0xa658, 0xf1d0, 0x38d9, 0xf63, 0x432d, 0x0, 0x1);
        gbc.writeMem(0x63e0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa658, gbc.sp());
        EXPECT(0x63e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 010A
        gbc.setState(0x2bd0, 0x4d6e, 0x5da0, 0xab0a, 0x9620, 0x2af5, 0x1, 0x1);
        gbc.writeMem(0x2bd0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4d6e, gbc.sp());
        EXPECT(0x2bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 010B
        gbc.setState(0x182b, 0xac18, 0xdd60, 0x5a8f, 0xf867, 0x240f, 0x0, 0x0);
        gbc.writeMem(0x182b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xac18, gbc.sp());
        EXPECT(0x182d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 010C
        gbc.setState(0xddbe, 0xe591, 0x1bc0, 0xef12, 0x6cdd, 0x30e8, 0x1, 0x1);
        gbc.writeMem(0xddbe, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe591, gbc.sp());
        EXPECT(0xddc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddbe));
        EXPECT(0xf7, gbc.readMem(0xddbf));
        // CB F7 010D
        gbc.setState(0xe34e, 0x3147, 0x1d0, 0x1a9f, 0x1909, 0xd2b6, 0x1, 0x1);
        gbc.writeMem(0xe34e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3147, gbc.sp());
        EXPECT(0xe350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe34e));
        EXPECT(0xf7, gbc.readMem(0xe34f));
        // CB F7 010E
        gbc.setState(0xf9f, 0xedf3, 0xbd20, 0x72e1, 0xaabf, 0x87eb, 0x0, 0x0);
        gbc.writeMem(0xf9f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xedf3, gbc.sp());
        EXPECT(0xfa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 010F
        gbc.setState(0xb88, 0xb9a4, 0x2600, 0x2ef6, 0x6cd8, 0xb028, 0x0, 0x1);
        gbc.writeMem(0xb88, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb9a4, gbc.sp());
        EXPECT(0xb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0110
        gbc.setState(0x9524, 0x4d90, 0xda0, 0x6584, 0x9147, 0x34b1, 0x0, 0x0);
        gbc.writeMem(0x9524, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4d90, gbc.sp());
        EXPECT(0x9526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9524));
        EXPECT(0xf7, gbc.readMem(0x9525));
        // CB F7 0111
        gbc.setState(0x15e5, 0xdffd, 0x3ce0, 0x316c, 0xc83d, 0xc1e1, 0x1, 0x1);
        gbc.writeMem(0x15e5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdffd, gbc.sp());
        EXPECT(0x15e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0112
        gbc.setState(0x79b1, 0xa89e, 0xf8b0, 0xa6ce, 0x33f1, 0x1e05, 0x1, 0x0);
        gbc.writeMem(0x79b1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa89e, gbc.sp());
        EXPECT(0x79b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0113
        gbc.setState(0xc83e, 0x7351, 0x72f0, 0x3e46, 0xa667, 0xedfd, 0x0, 0x0);
        gbc.writeMem(0xc83e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7351, gbc.sp());
        EXPECT(0xc840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc83e));
        EXPECT(0xf7, gbc.readMem(0xc83f));
        // CB F7 0114
        gbc.setState(0x4631, 0xfd1f, 0x2180, 0xb93a, 0x7472, 0x16d8, 0x1, 0x1);
        gbc.writeMem(0x4631, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfd1f, gbc.sp());
        EXPECT(0x4633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0115
        gbc.setState(0x7150, 0x4bfa, 0x7b90, 0xb417, 0x940a, 0xb19d, 0x0, 0x1);
        gbc.writeMem(0x7150, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4bfa, gbc.sp());
        EXPECT(0x7152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0116
        gbc.setState(0xedf9, 0xc976, 0x13a0, 0x5a2d, 0x264e, 0xf0a8, 0x0, 0x0);
        gbc.writeMem(0xedf9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc976, gbc.sp());
        EXPECT(0xedfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf9));
        EXPECT(0xf7, gbc.readMem(0xedfa));
        // CB F7 0117
        gbc.setState(0x179a, 0xd5a5, 0x63b0, 0x363c, 0xc521, 0xd1b7, 0x0, 0x0);
        gbc.writeMem(0x179a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd5a5, gbc.sp());
        EXPECT(0x179c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0118
        gbc.setState(0x8b9e, 0xb4b9, 0xe670, 0xd89, 0x2702, 0xe150, 0x1, 0x1);
        gbc.writeMem(0x8b9e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb4b9, gbc.sp());
        EXPECT(0x8ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b9e));
        EXPECT(0xf7, gbc.readMem(0x8b9f));
        // CB F7 0119
        gbc.setState(0xae82, 0x69f4, 0x63b0, 0x6393, 0x11a2, 0x3ce4, 0x1, 0x1);
        gbc.writeMem(0xae82, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x69f4, gbc.sp());
        EXPECT(0xae84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae82));
        EXPECT(0xf7, gbc.readMem(0xae83));
        // CB F7 011A
        gbc.setState(0x4a83, 0x14ea, 0x2580, 0x15ba, 0xe71e, 0x92a9, 0x1, 0x0);
        gbc.writeMem(0x4a83, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x14ea, gbc.sp());
        EXPECT(0x4a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 011B
        gbc.setState(0x1333, 0x62e6, 0xf40, 0x2e00, 0x8bbe, 0xbf6e, 0x0, 0x0);
        gbc.writeMem(0x1333, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x62e6, gbc.sp());
        EXPECT(0x1335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 011C
        gbc.setState(0xd60d, 0x19b, 0x500, 0x8cb3, 0x568d, 0xf54a, 0x0, 0x1);
        gbc.writeMem(0xd60d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x19b, gbc.sp());
        EXPECT(0xd60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60d));
        EXPECT(0xf7, gbc.readMem(0xd60e));
        // CB F7 011D
        gbc.setState(0x196, 0xbb1f, 0x8bb0, 0x3984, 0xac76, 0x67ca, 0x1, 0x1);
        gbc.writeMem(0x196, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbb1f, gbc.sp());
        EXPECT(0x198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 011E
        gbc.setState(0x1b68, 0x6d4e, 0xbf70, 0x34a7, 0x710f, 0x352a, 0x0, 0x0);
        gbc.writeMem(0x1b68, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6d4e, gbc.sp());
        EXPECT(0x1b6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 011F
        gbc.setState(0xbed9, 0x40f7, 0x6050, 0x15be, 0xa8c2, 0xfa6, 0x1, 0x1);
        gbc.writeMem(0xbed9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x40f7, gbc.sp());
        EXPECT(0xbedb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed9));
        EXPECT(0xf7, gbc.readMem(0xbeda));
        // CB F7 0120
        gbc.setState(0xbb6b, 0xba98, 0x6660, 0xe8a0, 0x7e2d, 0x8315, 0x0, 0x1);
        gbc.writeMem(0xbb6b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xba98, gbc.sp());
        EXPECT(0xbb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb6b));
        EXPECT(0xf7, gbc.readMem(0xbb6c));
        // CB F7 0121
        gbc.setState(0x52d0, 0x552b, 0x8210, 0x5aed, 0x2076, 0x6271, 0x1, 0x1);
        gbc.writeMem(0x52d0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x552b, gbc.sp());
        EXPECT(0x52d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0122
        gbc.setState(0x739e, 0xc042, 0x13d0, 0x3dc0, 0xf876, 0x2b9f, 0x0, 0x1);
        gbc.writeMem(0x739e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc042, gbc.sp());
        EXPECT(0x73a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0123
        gbc.setState(0x5a22, 0xf3d2, 0x4be0, 0xe830, 0xb5a9, 0xf6a0, 0x1, 0x0);
        gbc.writeMem(0x5a22, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf3d2, gbc.sp());
        EXPECT(0x5a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0124
        gbc.setState(0x2095, 0xe40c, 0xc10, 0xd474, 0x50db, 0xd339, 0x0, 0x0);
        gbc.writeMem(0x2095, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe40c, gbc.sp());
        EXPECT(0x2097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0125
        gbc.setState(0x3bb3, 0x5948, 0x83e0, 0x5489, 0xaa1, 0x8f3b, 0x1, 0x1);
        gbc.writeMem(0x3bb3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5948, gbc.sp());
        EXPECT(0x3bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0126
        gbc.setState(0x1e05, 0xca2a, 0x11f0, 0x8268, 0x382c, 0x9b4, 0x0, 0x0);
        gbc.writeMem(0x1e05, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xca2a, gbc.sp());
        EXPECT(0x1e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0127
        gbc.setState(0x6a48, 0xc2ec, 0xb790, 0x178, 0x2877, 0x57a4, 0x1, 0x1);
        gbc.writeMem(0x6a48, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc2ec, gbc.sp());
        EXPECT(0x6a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0128
        gbc.setState(0x6f5a, 0xe89d, 0x19c0, 0x8fe0, 0x61d2, 0x179d, 0x0, 0x0);
        gbc.writeMem(0x6f5a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe89d, gbc.sp());
        EXPECT(0x6f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0129
        gbc.setState(0x2cbf, 0x29ed, 0x84e0, 0x8da2, 0x8d3a, 0x71a2, 0x0, 0x0);
        gbc.writeMem(0x2cbf, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x29ed, gbc.sp());
        EXPECT(0x2cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 012A
        gbc.setState(0x6ce3, 0x297d, 0x37a0, 0xa85d, 0xb1b5, 0xf0b2, 0x1, 0x0);
        gbc.writeMem(0x6ce3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x297d, gbc.sp());
        EXPECT(0x6ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 012B
        gbc.setState(0xb092, 0xb012, 0xcd10, 0x65ec, 0xadc, 0xaaa3, 0x1, 0x0);
        gbc.writeMem(0xb092, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb012, gbc.sp());
        EXPECT(0xb094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb092));
        EXPECT(0xf7, gbc.readMem(0xb093));
        // CB F7 012C
        gbc.setState(0xb469, 0x7c9, 0x81b0, 0x4e02, 0xb3b5, 0xd3f3, 0x1, 0x0);
        gbc.writeMem(0xb469, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7c9, gbc.sp());
        EXPECT(0xb46b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb469));
        EXPECT(0xf7, gbc.readMem(0xb46a));
        // CB F7 012D
        gbc.setState(0x873c, 0x7135, 0xb2e0, 0x91c9, 0xbd32, 0xa927, 0x1, 0x0);
        gbc.writeMem(0x873c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7135, gbc.sp());
        EXPECT(0x873e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x873c));
        EXPECT(0xf7, gbc.readMem(0x873d));
        // CB F7 012E
        gbc.setState(0x3fe, 0x5d1b, 0x3640, 0x506e, 0x42, 0xda85, 0x0, 0x1);
        gbc.writeMem(0x3fe, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5d1b, gbc.sp());
        EXPECT(0x400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 012F
        gbc.setState(0xadee, 0x5984, 0x85c0, 0xf7e6, 0xabf0, 0x934b, 0x0, 0x0);
        gbc.writeMem(0xadee, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5984, gbc.sp());
        EXPECT(0xadf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadee));
        EXPECT(0xf7, gbc.readMem(0xadef));
        // CB F7 0130
        gbc.setState(0x9f03, 0x8207, 0xcb00, 0x6af0, 0x7676, 0x76a6, 0x0, 0x1);
        gbc.writeMem(0x9f03, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8207, gbc.sp());
        EXPECT(0x9f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f03));
        EXPECT(0xf7, gbc.readMem(0x9f04));
        // CB F7 0131
        gbc.setState(0x4573, 0x47e4, 0xf5f0, 0x9a33, 0xf7ce, 0x5f87, 0x0, 0x1);
        gbc.writeMem(0x4573, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x47e4, gbc.sp());
        EXPECT(0x4575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0132
        gbc.setState(0x1fea, 0xa3c5, 0xf100, 0x1a0, 0x8427, 0x778d, 0x1, 0x0);
        gbc.writeMem(0x1fea, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa3c5, gbc.sp());
        EXPECT(0x1fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0133
        gbc.setState(0xd94b, 0x5da3, 0xd60, 0x9104, 0x60ac, 0xde03, 0x0, 0x1);
        gbc.writeMem(0xd94b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5da3, gbc.sp());
        EXPECT(0xd94d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94b));
        EXPECT(0xf7, gbc.readMem(0xd94c));
        // CB F7 0134
        gbc.setState(0x6b2d, 0x267a, 0xb2d0, 0x752b, 0x82e3, 0xcb96, 0x1, 0x0);
        gbc.writeMem(0x6b2d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x267a, gbc.sp());
        EXPECT(0x6b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0135
        gbc.setState(0x6c26, 0x48a6, 0xb720, 0x2217, 0x20ff, 0xaff3, 0x0, 0x1);
        gbc.writeMem(0x6c26, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x48a6, gbc.sp());
        EXPECT(0x6c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0136
        gbc.setState(0x61ea, 0x4583, 0x6ad0, 0xdbc0, 0x8744, 0xe786, 0x0, 0x1);
        gbc.writeMem(0x61ea, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4583, gbc.sp());
        EXPECT(0x61ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0137
        gbc.setState(0xdc1a, 0x2de6, 0x2700, 0x7f7b, 0xdf09, 0xa9ae, 0x0, 0x1);
        gbc.writeMem(0xdc1a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2de6, gbc.sp());
        EXPECT(0xdc1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1a));
        EXPECT(0xf7, gbc.readMem(0xdc1b));
        // CB F7 0138
        gbc.setState(0x973e, 0x349, 0xdc00, 0x4b66, 0xea32, 0x4a9e, 0x1, 0x1);
        gbc.writeMem(0x973e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x349, gbc.sp());
        EXPECT(0x9740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973e));
        EXPECT(0xf7, gbc.readMem(0x973f));
        // CB F7 0139
        gbc.setState(0x6492, 0xa00d, 0x7990, 0x65f4, 0x6a44, 0xe1a4, 0x0, 0x1);
        gbc.writeMem(0x6492, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa00d, gbc.sp());
        EXPECT(0x6494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 013A
        gbc.setState(0x5ed, 0x54b, 0xaa20, 0xa36d, 0xdd82, 0xebae, 0x1, 0x1);
        gbc.writeMem(0x5ed, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x54b, gbc.sp());
        EXPECT(0x5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 013B
        gbc.setState(0x15ba, 0xb675, 0xc150, 0x9a53, 0xa08b, 0xe089, 0x1, 0x0);
        gbc.writeMem(0x15ba, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb675, gbc.sp());
        EXPECT(0x15bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 013C
        gbc.setState(0x64b4, 0x4a4a, 0x77c0, 0x4cbb, 0x19fa, 0xb216, 0x1, 0x1);
        gbc.writeMem(0x64b4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4a4a, gbc.sp());
        EXPECT(0x64b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 013D
        gbc.setState(0xc857, 0xbd7c, 0x4350, 0x7949, 0x4dd1, 0xe097, 0x1, 0x1);
        gbc.writeMem(0xc857, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbd7c, gbc.sp());
        EXPECT(0xc859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc857));
        EXPECT(0xf7, gbc.readMem(0xc858));
        // CB F7 013E
        gbc.setState(0xc78e, 0x9500, 0xa9b0, 0x6275, 0xcd99, 0x983b, 0x1, 0x0);
        gbc.writeMem(0xc78e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9500, gbc.sp());
        EXPECT(0xc790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78e));
        EXPECT(0xf7, gbc.readMem(0xc78f));
        // CB F7 013F
        gbc.setState(0x5746, 0xfd3e, 0xb3f0, 0x542e, 0xd9cf, 0x5710, 0x0, 0x1);
        gbc.writeMem(0x5746, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfd3e, gbc.sp());
        EXPECT(0x5748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0140
        gbc.setState(0x8e67, 0xd9da, 0x7bf0, 0x4e60, 0x4255, 0x775f, 0x1, 0x0);
        gbc.writeMem(0x8e67, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd9da, gbc.sp());
        EXPECT(0x8e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e67));
        EXPECT(0xf7, gbc.readMem(0x8e68));
        // CB F7 0141
        gbc.setState(0x58bb, 0xaa83, 0xe650, 0xa109, 0xaa04, 0x4fc0, 0x1, 0x0);
        gbc.writeMem(0x58bb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xaa83, gbc.sp());
        EXPECT(0x58bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0142
        gbc.setState(0x530d, 0x68c6, 0xa970, 0x7b76, 0x5b33, 0xc2a9, 0x0, 0x0);
        gbc.writeMem(0x530d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x68c6, gbc.sp());
        EXPECT(0x530f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0143
        gbc.setState(0xf92, 0x4b04, 0xd250, 0x7a12, 0xd5f, 0x25c6, 0x0, 0x0);
        gbc.writeMem(0xf92, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4b04, gbc.sp());
        EXPECT(0xf94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0144
        gbc.setState(0x7bdd, 0xca0a, 0xe600, 0xf1d0, 0x3432, 0x6c4c, 0x1, 0x1);
        gbc.writeMem(0x7bdd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xca0a, gbc.sp());
        EXPECT(0x7bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0145
        gbc.setState(0x5f8, 0x5e1f, 0x24d0, 0x654c, 0x192d, 0x91a4, 0x0, 0x1);
        gbc.writeMem(0x5f8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5e1f, gbc.sp());
        EXPECT(0x5fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0146
        gbc.setState(0xbdf1, 0xa4c0, 0xeab0, 0x30f7, 0x754, 0x9ea4, 0x0, 0x1);
        gbc.writeMem(0xbdf1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa4c0, gbc.sp());
        EXPECT(0xbdf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf1));
        EXPECT(0xf7, gbc.readMem(0xbdf2));
        // CB F7 0147
        gbc.setState(0x64bd, 0xc6f3, 0x6040, 0x7f85, 0xd3f6, 0x65a0, 0x0, 0x0);
        gbc.writeMem(0x64bd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc6f3, gbc.sp());
        EXPECT(0x64bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0148
        gbc.setState(0xdc68, 0xe644, 0xffd0, 0xb215, 0x1fe1, 0xbd84, 0x1, 0x0);
        gbc.writeMem(0xdc68, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe644, gbc.sp());
        EXPECT(0xdc6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc68));
        EXPECT(0xf7, gbc.readMem(0xdc69));
        // CB F7 0149
        gbc.setState(0x35f3, 0x34bb, 0x4bc0, 0xaf0a, 0xa41c, 0x5e68, 0x1, 0x1);
        gbc.writeMem(0x35f3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x34bb, gbc.sp());
        EXPECT(0x35f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 014A
        gbc.setState(0xe142, 0x7d0, 0x6e0, 0x935b, 0xfc70, 0x4aa0, 0x0, 0x0);
        gbc.writeMem(0xe142, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7d0, gbc.sp());
        EXPECT(0xe144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe142));
        EXPECT(0xf7, gbc.readMem(0xe143));
        // CB F7 014C
        gbc.setState(0x98f9, 0xfad2, 0x84c0, 0xed99, 0xc297, 0xa4b9, 0x0, 0x1);
        gbc.writeMem(0x98f9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfad2, gbc.sp());
        EXPECT(0x98fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f9));
        EXPECT(0xf7, gbc.readMem(0x98fa));
        // CB F7 014D
        gbc.setState(0x2db, 0x9ef4, 0xfed0, 0x93db, 0xe818, 0xd4d3, 0x1, 0x0);
        gbc.writeMem(0x2db, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9ef4, gbc.sp());
        EXPECT(0x2dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 014E
        gbc.setState(0x1e4a, 0xe778, 0xb8e0, 0xdff0, 0x2314, 0x41c8, 0x0, 0x1);
        gbc.writeMem(0x1e4a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe778, gbc.sp());
        EXPECT(0x1e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 014F
        gbc.setState(0x6be9, 0xf498, 0xafc0, 0x7ec7, 0x30f7, 0x5cab, 0x1, 0x0);
        gbc.writeMem(0x6be9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf498, gbc.sp());
        EXPECT(0x6beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0150
        gbc.setState(0x71d2, 0x49ec, 0xe4e0, 0x4bb6, 0x6745, 0x7511, 0x1, 0x0);
        gbc.writeMem(0x71d2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x49ec, gbc.sp());
        EXPECT(0x71d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0151
        gbc.setState(0x306f, 0xa9d1, 0x68f0, 0xb71d, 0x5a66, 0x7f45, 0x0, 0x0);
        gbc.writeMem(0x306f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa9d1, gbc.sp());
        EXPECT(0x3071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0152
        gbc.setState(0x29ca, 0x731e, 0x80e0, 0x57ff, 0x3b2e, 0x24e6, 0x1, 0x0);
        gbc.writeMem(0x29ca, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x731e, gbc.sp());
        EXPECT(0x29cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0154
        gbc.setState(0x1585, 0xa538, 0x29e0, 0x7c30, 0x2fdf, 0xe560, 0x0, 0x1);
        gbc.writeMem(0x1585, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa538, gbc.sp());
        EXPECT(0x1587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0155
        gbc.setState(0xe7d3, 0x3d4c, 0xd640, 0xf736, 0xa0e0, 0x296b, 0x0, 0x0);
        gbc.writeMem(0xe7d3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3d4c, gbc.sp());
        EXPECT(0xe7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d3));
        EXPECT(0xf7, gbc.readMem(0xe7d4));
        // CB F7 0156
        gbc.setState(0x5a53, 0x9e83, 0x7520, 0x40aa, 0xccf4, 0xf1ae, 0x0, 0x1);
        gbc.writeMem(0x5a53, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9e83, gbc.sp());
        EXPECT(0x5a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0157
        gbc.setState(0x52db, 0xb268, 0x17c0, 0x873e, 0x9d52, 0xfba0, 0x0, 0x0);
        gbc.writeMem(0x52db, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb268, gbc.sp());
        EXPECT(0x52dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0158
        gbc.setState(0x7547, 0x19be, 0xa3c0, 0xe03e, 0x4de7, 0xea8e, 0x0, 0x0);
        gbc.writeMem(0x7547, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x19be, gbc.sp());
        EXPECT(0x7549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0159
        gbc.setState(0x4be5, 0xd763, 0xbb90, 0xe5ae, 0xd99b, 0x1557, 0x0, 0x0);
        gbc.writeMem(0x4be5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd763, gbc.sp());
        EXPECT(0x4be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 015A
        gbc.setState(0x865f, 0xda56, 0x9d60, 0x9a5b, 0x363, 0x92a7, 0x1, 0x1);
        gbc.writeMem(0x865f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xda56, gbc.sp());
        EXPECT(0x8661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865f));
        EXPECT(0xf7, gbc.readMem(0x8660));
        // CB F7 015B
        gbc.setState(0x740f, 0x24a5, 0x1650, 0xc5c2, 0x4b67, 0x505f, 0x1, 0x1);
        gbc.writeMem(0x740f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x24a5, gbc.sp());
        EXPECT(0x7411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 015C
        gbc.setState(0x75bb, 0xafdf, 0xced0, 0xd50c, 0x9a16, 0x7156, 0x1, 0x0);
        gbc.writeMem(0x75bb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xafdf, gbc.sp());
        EXPECT(0x75bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 015D
        gbc.setState(0xd441, 0x5f3a, 0x5840, 0x9a86, 0x90c5, 0xb085, 0x1, 0x0);
        gbc.writeMem(0xd441, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5f3a, gbc.sp());
        EXPECT(0xd443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd441));
        EXPECT(0xf7, gbc.readMem(0xd442));
        // CB F7 015E
        gbc.setState(0xaa1c, 0x7e5e, 0x32c0, 0x89e7, 0xcca0, 0x53dd, 0x1, 0x0);
        gbc.writeMem(0xaa1c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7e5e, gbc.sp());
        EXPECT(0xaa1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa1c));
        EXPECT(0xf7, gbc.readMem(0xaa1d));
        // CB F7 015F
        gbc.setState(0x65d4, 0x5733, 0x2e50, 0x3d71, 0xe277, 0xbd6d, 0x0, 0x1);
        gbc.writeMem(0x65d4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5733, gbc.sp());
        EXPECT(0x65d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0160
        gbc.setState(0x48a7, 0xa74b, 0xd0, 0x4df2, 0x624b, 0xb440, 0x0, 0x0);
        gbc.writeMem(0x48a7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa74b, gbc.sp());
        EXPECT(0x48a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0161
        gbc.setState(0x8834, 0x6d64, 0xd560, 0x5f7e, 0x3fca, 0xd684, 0x0, 0x1);
        gbc.writeMem(0x8834, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6d64, gbc.sp());
        EXPECT(0x8836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8834));
        EXPECT(0xf7, gbc.readMem(0x8835));
        // CB F7 0162
        gbc.setState(0xe310, 0x6d66, 0xdfd0, 0xbd38, 0x43a4, 0xea, 0x1, 0x1);
        gbc.writeMem(0xe310, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6d66, gbc.sp());
        EXPECT(0xe312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe310));
        EXPECT(0xf7, gbc.readMem(0xe311));
        // CB F7 0163
        gbc.setState(0x1a03, 0xa39c, 0xd690, 0xd32, 0x60d7, 0x782c, 0x0, 0x0);
        gbc.writeMem(0x1a03, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa39c, gbc.sp());
        EXPECT(0x1a05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0164
        gbc.setState(0x5ad6, 0xdf5a, 0x9410, 0x4c1e, 0xd181, 0x391c, 0x0, 0x1);
        gbc.writeMem(0x5ad6, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdf5a, gbc.sp());
        EXPECT(0x5ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0165
        gbc.setState(0x7e74, 0xf87d, 0x4d10, 0x3d06, 0x77d5, 0x69dd, 0x1, 0x1);
        gbc.writeMem(0x7e74, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf87d, gbc.sp());
        EXPECT(0x7e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0167
        gbc.setState(0x6824, 0x5b6, 0x5570, 0xd563, 0x8cfb, 0xc7ad, 0x0, 0x0);
        gbc.writeMem(0x6824, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5b6, gbc.sp());
        EXPECT(0x6826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0168
        gbc.setState(0x9a51, 0x94b0, 0x9860, 0x606b, 0x9d03, 0x2443, 0x1, 0x1);
        gbc.writeMem(0x9a51, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x94b0, gbc.sp());
        EXPECT(0x9a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a51));
        EXPECT(0xf7, gbc.readMem(0x9a52));
        // CB F7 0169
        gbc.setState(0x31c5, 0x7d90, 0x6f50, 0xb601, 0x147f, 0x2da0, 0x1, 0x0);
        gbc.writeMem(0x31c5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7d90, gbc.sp());
        EXPECT(0x31c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 016A
        gbc.setState(0x4152, 0x4878, 0x2f40, 0x7a39, 0x1c82, 0x6168, 0x1, 0x0);
        gbc.writeMem(0x4152, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4878, gbc.sp());
        EXPECT(0x4154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 016B
        gbc.setState(0x591d, 0x623f, 0xd50, 0x7cda, 0xea84, 0xe025, 0x1, 0x1);
        gbc.writeMem(0x591d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x623f, gbc.sp());
        EXPECT(0x591f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 016C
        gbc.setState(0xa57a, 0xa16a, 0xd180, 0x2b37, 0x8dff, 0x119b, 0x0, 0x1);
        gbc.writeMem(0xa57a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa16a, gbc.sp());
        EXPECT(0xa57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57a));
        EXPECT(0xf7, gbc.readMem(0xa57b));
        // CB F7 016D
        gbc.setState(0x92aa, 0xd96c, 0x8c10, 0x2408, 0xf140, 0x4935, 0x0, 0x1);
        gbc.writeMem(0x92aa, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd96c, gbc.sp());
        EXPECT(0x92ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92aa));
        EXPECT(0xf7, gbc.readMem(0x92ab));
        // CB F7 016E
        gbc.setState(0xae88, 0xea64, 0x8520, 0x9e97, 0x60c6, 0x8ce0, 0x0, 0x1);
        gbc.writeMem(0xae88, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xea64, gbc.sp());
        EXPECT(0xae8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae88));
        EXPECT(0xf7, gbc.readMem(0xae89));
        // CB F7 016F
        gbc.setState(0xd01d, 0xe572, 0xdaf0, 0xcc1a, 0xdaad, 0x9314, 0x1, 0x1);
        gbc.writeMem(0xd01d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe572, gbc.sp());
        EXPECT(0xd01f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01d));
        EXPECT(0xf7, gbc.readMem(0xd01e));
        // CB F7 0170
        gbc.setState(0x388c, 0xfb8f, 0x43a0, 0x62fa, 0xea9a, 0x6f2d, 0x1, 0x0);
        gbc.writeMem(0x388c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfb8f, gbc.sp());
        EXPECT(0x388e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0172
        gbc.setState(0x6113, 0xf0ad, 0xa230, 0x732e, 0xb25b, 0xfe37, 0x1, 0x1);
        gbc.writeMem(0x6113, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf0ad, gbc.sp());
        EXPECT(0x6115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0173
        gbc.setState(0x282, 0x3e73, 0x9a60, 0x9d4e, 0x79f6, 0x8a10, 0x1, 0x1);
        gbc.writeMem(0x282, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3e73, gbc.sp());
        EXPECT(0x284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0174
        gbc.setState(0x9617, 0xb828, 0xe830, 0x22f1, 0x64bd, 0xb5a, 0x1, 0x0);
        gbc.writeMem(0x9617, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb828, gbc.sp());
        EXPECT(0x9619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9617));
        EXPECT(0xf7, gbc.readMem(0x9618));
        // CB F7 0175
        gbc.setState(0xe4bd, 0xa1d7, 0x6bb0, 0x6e60, 0x7d45, 0x5b45, 0x1, 0x1);
        gbc.writeMem(0xe4bd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa1d7, gbc.sp());
        EXPECT(0xe4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4bd));
        EXPECT(0xf7, gbc.readMem(0xe4be));
        // CB F7 0176
        gbc.setState(0x3235, 0x382e, 0xabe0, 0xe2d8, 0x80cd, 0x378f, 0x1, 0x1);
        gbc.writeMem(0x3235, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x382e, gbc.sp());
        EXPECT(0x3237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0177
        gbc.setState(0xb7b9, 0x8a1e, 0x4430, 0xc972, 0x9423, 0xd869, 0x0, 0x1);
        gbc.writeMem(0xb7b9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8a1e, gbc.sp());
        EXPECT(0xb7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b9));
        EXPECT(0xf7, gbc.readMem(0xb7ba));
        // CB F7 0178
        gbc.setState(0xa885, 0x6aa9, 0x2740, 0x56a1, 0x89c2, 0xd8ec, 0x0, 0x1);
        gbc.writeMem(0xa885, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6aa9, gbc.sp());
        EXPECT(0xa887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa885));
        EXPECT(0xf7, gbc.readMem(0xa886));
        // CB F7 0179
        gbc.setState(0x2c6b, 0xf5c2, 0xe50, 0xe68a, 0x1702, 0xc20d, 0x0, 0x0);
        gbc.writeMem(0x2c6b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf5c2, gbc.sp());
        EXPECT(0x2c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 017A
        gbc.setState(0xcc3a, 0xda81, 0xedd0, 0x1063, 0xb7aa, 0xcd6a, 0x1, 0x1);
        gbc.writeMem(0xcc3a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xda81, gbc.sp());
        EXPECT(0xcc3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3a));
        EXPECT(0xf7, gbc.readMem(0xcc3b));
        // CB F7 017B
        gbc.setState(0x687a, 0x2b3, 0x6e80, 0xc77e, 0x9d22, 0xe13d, 0x0, 0x1);
        gbc.writeMem(0x687a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2b3, gbc.sp());
        EXPECT(0x687c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 017C
        gbc.setState(0x6c6, 0x87fc, 0x88f0, 0x19f2, 0x1e42, 0xfabe, 0x1, 0x0);
        gbc.writeMem(0x6c6, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x87fc, gbc.sp());
        EXPECT(0x6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 017D
        gbc.setState(0x41c6, 0xb579, 0xd920, 0xfd67, 0x3f42, 0xbc8a, 0x0, 0x1);
        gbc.writeMem(0x41c6, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb579, gbc.sp());
        EXPECT(0x41c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 017E
        gbc.setState(0x8115, 0x3af9, 0x3f0, 0x5717, 0xf851, 0xcab1, 0x0, 0x0);
        gbc.writeMem(0x8115, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3af9, gbc.sp());
        EXPECT(0x8117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8115));
        EXPECT(0xf7, gbc.readMem(0x8116));
        // CB F7 017F
        gbc.setState(0xb297, 0x9f6e, 0x5480, 0xf263, 0x1741, 0x91e1, 0x1, 0x1);
        gbc.writeMem(0xb297, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9f6e, gbc.sp());
        EXPECT(0xb299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb297));
        EXPECT(0xf7, gbc.readMem(0xb298));
        // CB F7 0180
        gbc.setState(0x5a08, 0xaf04, 0x2f30, 0xa36d, 0xdb55, 0x9347, 0x0, 0x1);
        gbc.writeMem(0x5a08, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xaf04, gbc.sp());
        EXPECT(0x5a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0181
        gbc.setState(0x371a, 0xdf1e, 0xe250, 0x6828, 0x251f, 0x45a3, 0x1, 0x0);
        gbc.writeMem(0x371a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdf1e, gbc.sp());
        EXPECT(0x371c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0182
        gbc.setState(0xc291, 0xfba9, 0xb080, 0x135a, 0xcfff, 0x92fd, 0x1, 0x1);
        gbc.writeMem(0xc291, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfba9, gbc.sp());
        EXPECT(0xc293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc291));
        EXPECT(0xf7, gbc.readMem(0xc292));
        // CB F7 0183
        gbc.setState(0x7ab0, 0x6198, 0x16a0, 0x23a, 0x3564, 0x228b, 0x1, 0x1);
        gbc.writeMem(0x7ab0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6198, gbc.sp());
        EXPECT(0x7ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0184
        gbc.setState(0xadb, 0x5460, 0x2c50, 0xbfad, 0x5271, 0x6e55, 0x0, 0x0);
        gbc.writeMem(0xadb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5460, gbc.sp());
        EXPECT(0xadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0185
        gbc.setState(0xa570, 0x96e5, 0x46b0, 0x1286, 0x17d9, 0xa2fb, 0x1, 0x1);
        gbc.writeMem(0xa570, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x96e5, gbc.sp());
        EXPECT(0xa572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa570));
        EXPECT(0xf7, gbc.readMem(0xa571));
        // CB F7 0186
        gbc.setState(0xd7c1, 0x2f0a, 0x2be0, 0xe6c4, 0xfa24, 0x32d, 0x0, 0x0);
        gbc.writeMem(0xd7c1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2f0a, gbc.sp());
        EXPECT(0xd7c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c1));
        EXPECT(0xf7, gbc.readMem(0xd7c2));
        // CB F7 0187
        gbc.setState(0xb7cb, 0x1051, 0x2700, 0xb1a8, 0x40e2, 0xa141, 0x0, 0x1);
        gbc.writeMem(0xb7cb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1051, gbc.sp());
        EXPECT(0xb7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7cb));
        EXPECT(0xf7, gbc.readMem(0xb7cc));
        // CB F7 0188
        gbc.setState(0x7bde, 0x6e44, 0x9200, 0x3f3d, 0xbbdc, 0xab13, 0x1, 0x1);
        gbc.writeMem(0x7bde, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6e44, gbc.sp());
        EXPECT(0x7be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0189
        gbc.setState(0xb384, 0x241f, 0xae20, 0x51f6, 0xd142, 0x74c5, 0x1, 0x0);
        gbc.writeMem(0xb384, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x241f, gbc.sp());
        EXPECT(0xb386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb384));
        EXPECT(0xf7, gbc.readMem(0xb385));
        // CB F7 018A
        gbc.setState(0x8293, 0x755a, 0x4640, 0xba1e, 0xe790, 0xc8cc, 0x0, 0x1);
        gbc.writeMem(0x8293, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x755a, gbc.sp());
        EXPECT(0x8295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8293));
        EXPECT(0xf7, gbc.readMem(0x8294));
        // CB F7 018B
        gbc.setState(0xb6f8, 0xf8b4, 0xedf0, 0x98ee, 0x921a, 0x50ad, 0x1, 0x0);
        gbc.writeMem(0xb6f8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf8b4, gbc.sp());
        EXPECT(0xb6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f8));
        EXPECT(0xf7, gbc.readMem(0xb6f9));
        // CB F7 018C
        gbc.setState(0x1230, 0x8c78, 0x53a0, 0x6589, 0x31c6, 0x86a0, 0x0, 0x1);
        gbc.writeMem(0x1230, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8c78, gbc.sp());
        EXPECT(0x1232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 018D
        gbc.setState(0xa05c, 0xddb0, 0xb60, 0x3a27, 0x7fb0, 0xdf35, 0x1, 0x0);
        gbc.writeMem(0xa05c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xddb0, gbc.sp());
        EXPECT(0xa05e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa05c));
        EXPECT(0xf7, gbc.readMem(0xa05d));
        // CB F7 018E
        gbc.setState(0x2ce0, 0xe937, 0x8300, 0xf603, 0xcfdc, 0x5858, 0x0, 0x1);
        gbc.writeMem(0x2ce0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe937, gbc.sp());
        EXPECT(0x2ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 018F
        gbc.setState(0x8e22, 0x1ca3, 0x1940, 0x3c3e, 0xb367, 0x61ba, 0x0, 0x0);
        gbc.writeMem(0x8e22, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1ca3, gbc.sp());
        EXPECT(0x8e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e22));
        EXPECT(0xf7, gbc.readMem(0x8e23));
        // CB F7 0190
        gbc.setState(0x3b3c, 0xaf99, 0xccb0, 0x2851, 0x57fb, 0xad52, 0x1, 0x0);
        gbc.writeMem(0x3b3c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xaf99, gbc.sp());
        EXPECT(0x3b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0191
        gbc.setState(0x243e, 0xede4, 0x140, 0x29fe, 0xb0f, 0x35dd, 0x1, 0x0);
        gbc.writeMem(0x243e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xede4, gbc.sp());
        EXPECT(0x2440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0192
        gbc.setState(0x58, 0x8e8, 0x6b60, 0x817f, 0xd86b, 0x5a15, 0x1, 0x1);
        gbc.writeMem(0x58, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8e8, gbc.sp());
        EXPECT(0x5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0193
        gbc.setState(0x5087, 0x602d, 0x8620, 0x3511, 0x93f4, 0xa22c, 0x1, 0x1);
        gbc.writeMem(0x5087, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x602d, gbc.sp());
        EXPECT(0x5089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0194
        gbc.setState(0x259f, 0x3724, 0xef30, 0x4614, 0xa0a9, 0x7b6e, 0x1, 0x1);
        gbc.writeMem(0x259f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3724, gbc.sp());
        EXPECT(0x25a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0195
        gbc.setState(0x2185, 0x3f71, 0x42e0, 0xe1b, 0x3a40, 0xf1c6, 0x0, 0x0);
        gbc.writeMem(0x2185, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3f71, gbc.sp());
        EXPECT(0x2187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0196
        gbc.setState(0xef15, 0x9b05, 0x96c0, 0x549d, 0x9cef, 0xea04, 0x0, 0x1);
        gbc.writeMem(0xef15, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9b05, gbc.sp());
        EXPECT(0xef17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef15));
        EXPECT(0xf7, gbc.readMem(0xef16));
        // CB F7 0197
        gbc.setState(0xe8a3, 0x2fc9, 0x88c0, 0xc543, 0x34bb, 0xed23, 0x1, 0x0);
        gbc.writeMem(0xe8a3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2fc9, gbc.sp());
        EXPECT(0xe8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a3));
        EXPECT(0xf7, gbc.readMem(0xe8a4));
        // CB F7 0198
        gbc.setState(0x60b4, 0x2242, 0xacb0, 0xa70e, 0x6036, 0x6810, 0x1, 0x0);
        gbc.writeMem(0x60b4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2242, gbc.sp());
        EXPECT(0x60b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0199
        gbc.setState(0x7417, 0xd62c, 0x4400, 0x2400, 0xbb3a, 0xee43, 0x0, 0x0);
        gbc.writeMem(0x7417, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd62c, gbc.sp());
        EXPECT(0x7419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 019A
        gbc.setState(0x5f00, 0x142f, 0x62c0, 0x361, 0xfff8, 0x2d21, 0x1, 0x0);
        gbc.writeMem(0x5f00, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x142f, gbc.sp());
        EXPECT(0x5f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 019B
        gbc.setState(0x7891, 0x25d3, 0xc20, 0x793a, 0x3231, 0x5b89, 0x1, 0x0);
        gbc.writeMem(0x7891, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x25d3, gbc.sp());
        EXPECT(0x7893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 019C
        gbc.setState(0x5f9f, 0x5761, 0x1a70, 0xbe86, 0x140e, 0x20c, 0x1, 0x0);
        gbc.writeMem(0x5f9f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5761, gbc.sp());
        EXPECT(0x5fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 019D
        gbc.setState(0xcbdd, 0xdf7b, 0x9600, 0xf09f, 0x1009, 0xf4a0, 0x0, 0x0);
        gbc.writeMem(0xcbdd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdf7b, gbc.sp());
        EXPECT(0xcbdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbdd));
        EXPECT(0xf7, gbc.readMem(0xcbde));
        // CB F7 019E
        gbc.setState(0xef45, 0xab36, 0x5950, 0x938, 0x369, 0x1a43, 0x0, 0x0);
        gbc.writeMem(0xef45, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xab36, gbc.sp());
        EXPECT(0xef47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef45));
        EXPECT(0xf7, gbc.readMem(0xef46));
        // CB F7 019F
        gbc.setState(0x95af, 0x260f, 0x1580, 0x81cd, 0xd896, 0x9eca, 0x1, 0x1);
        gbc.writeMem(0x95af, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x260f, gbc.sp());
        EXPECT(0x95b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95af));
        EXPECT(0xf7, gbc.readMem(0x95b0));
        // CB F7 01A0
        gbc.setState(0xebf7, 0xaa2c, 0x6ad0, 0xcf4b, 0xa9c, 0x7439, 0x1, 0x1);
        gbc.writeMem(0xebf7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xaa2c, gbc.sp());
        EXPECT(0xebf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf7));
        EXPECT(0xf7, gbc.readMem(0xebf8));
        // CB F7 01A1
        gbc.setState(0x9c4e, 0xc7ef, 0xbfb0, 0x1338, 0x1f3f, 0x4860, 0x0, 0x1);
        gbc.writeMem(0x9c4e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc7ef, gbc.sp());
        EXPECT(0x9c50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c4e));
        EXPECT(0xf7, gbc.readMem(0x9c4f));
        // CB F7 01A2
        gbc.setState(0x44c, 0xa865, 0x1160, 0x2daf, 0xd721, 0x3fcc, 0x1, 0x0);
        gbc.writeMem(0x44c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa865, gbc.sp());
        EXPECT(0x44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01A3
        gbc.setState(0x7bd4, 0x354b, 0x2540, 0x242, 0x2f18, 0x2c26, 0x1, 0x1);
        gbc.writeMem(0x7bd4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x354b, gbc.sp());
        EXPECT(0x7bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01A4
        gbc.setState(0x30bc, 0x47ba, 0xa330, 0xee4d, 0xf67d, 0x303c, 0x0, 0x0);
        gbc.writeMem(0x30bc, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x47ba, gbc.sp());
        EXPECT(0x30be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01A5
        gbc.setState(0xdfa3, 0xe6f0, 0xe930, 0x3b96, 0xe987, 0x56d1, 0x1, 0x1);
        gbc.writeMem(0xdfa3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe6f0, gbc.sp());
        EXPECT(0xdfa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa3));
        EXPECT(0xf7, gbc.readMem(0xdfa4));
        // CB F7 01A6
        gbc.setState(0x7d7, 0xc39e, 0xd770, 0x61d2, 0xbe99, 0x2fec, 0x0, 0x1);
        gbc.writeMem(0x7d7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc39e, gbc.sp());
        EXPECT(0x7d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01A7
        gbc.setState(0xe2f1, 0xba0e, 0x4240, 0x67e7, 0xf40a, 0x5744, 0x1, 0x1);
        gbc.writeMem(0xe2f1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xba0e, gbc.sp());
        EXPECT(0xe2f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2f1));
        EXPECT(0xf7, gbc.readMem(0xe2f2));
        // CB F7 01A8
        gbc.setState(0xe953, 0xd08a, 0xa350, 0xc54b, 0x4978, 0xba98, 0x0, 0x1);
        gbc.writeMem(0xe953, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd08a, gbc.sp());
        EXPECT(0xe955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe953));
        EXPECT(0xf7, gbc.readMem(0xe954));
        // CB F7 01A9
        gbc.setState(0xbec7, 0x7548, 0x6db0, 0x3ef, 0xf39f, 0xe26a, 0x0, 0x0);
        gbc.writeMem(0xbec7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7548, gbc.sp());
        EXPECT(0xbec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec7));
        EXPECT(0xf7, gbc.readMem(0xbec8));
        // CB F7 01AA
        gbc.setState(0xb658, 0x65fc, 0x7e20, 0x7a4d, 0x10da, 0x17b5, 0x0, 0x0);
        gbc.writeMem(0xb658, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x65fc, gbc.sp());
        EXPECT(0xb65a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb658));
        EXPECT(0xf7, gbc.readMem(0xb659));
        // CB F7 01AB
        gbc.setState(0x3b7a, 0xda5f, 0x5730, 0xb919, 0x5376, 0xefe5, 0x0, 0x1);
        gbc.writeMem(0x3b7a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xda5f, gbc.sp());
        EXPECT(0x3b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01AC
        gbc.setState(0xdbb8, 0x1449, 0xa9b0, 0xa2a, 0x70db, 0xf347, 0x0, 0x1);
        gbc.writeMem(0xdbb8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1449, gbc.sp());
        EXPECT(0xdbba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb8));
        EXPECT(0xf7, gbc.readMem(0xdbb9));
        // CB F7 01AD
        gbc.setState(0xc231, 0xc33, 0x7710, 0x7af3, 0xffe5, 0x85e1, 0x1, 0x1);
        gbc.writeMem(0xc231, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc33, gbc.sp());
        EXPECT(0xc233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc231));
        EXPECT(0xf7, gbc.readMem(0xc232));
        // CB F7 01AE
        gbc.setState(0xabbc, 0x5274, 0x860, 0x9e74, 0x6f35, 0xf593, 0x1, 0x1);
        gbc.writeMem(0xabbc, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5274, gbc.sp());
        EXPECT(0xabbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabbc));
        EXPECT(0xf7, gbc.readMem(0xabbd));
        // CB F7 01AF
        gbc.setState(0x87d2, 0xab55, 0x2a60, 0x2d2c, 0xf09b, 0x689e, 0x1, 0x1);
        gbc.writeMem(0x87d2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xab55, gbc.sp());
        EXPECT(0x87d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d2));
        EXPECT(0xf7, gbc.readMem(0x87d3));
        // CB F7 01B0
        gbc.setState(0x9235, 0xc0e5, 0xb830, 0xb6fd, 0x79a1, 0xdd1c, 0x1, 0x0);
        gbc.writeMem(0x9235, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc0e5, gbc.sp());
        EXPECT(0x9237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9235));
        EXPECT(0xf7, gbc.readMem(0x9236));
        // CB F7 01B1
        gbc.setState(0x677b, 0x1523, 0xf930, 0x4fa9, 0xba91, 0xd09a, 0x1, 0x0);
        gbc.writeMem(0x677b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1523, gbc.sp());
        EXPECT(0x677d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01B2
        gbc.setState(0xa685, 0x12f8, 0xb140, 0x610, 0xab3d, 0xa63c, 0x0, 0x1);
        gbc.writeMem(0xa685, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x12f8, gbc.sp());
        EXPECT(0xa687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa685));
        EXPECT(0xf7, gbc.readMem(0xa686));
        // CB F7 01B3
        gbc.setState(0x3b34, 0xccd5, 0xc380, 0xa9c7, 0xd3a4, 0x734d, 0x1, 0x0);
        gbc.writeMem(0x3b34, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xccd5, gbc.sp());
        EXPECT(0x3b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01B4
        gbc.setState(0xece7, 0x2472, 0x7d80, 0xc97f, 0x2669, 0x177a, 0x0, 0x0);
        gbc.writeMem(0xece7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2472, gbc.sp());
        EXPECT(0xece9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece7));
        EXPECT(0xf7, gbc.readMem(0xece8));
        // CB F7 01B5
        gbc.setState(0xa41d, 0xa58f, 0x9350, 0x63cd, 0xf8a9, 0xfd59, 0x0, 0x1);
        gbc.writeMem(0xa41d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa58f, gbc.sp());
        EXPECT(0xa41f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa41d));
        EXPECT(0xf7, gbc.readMem(0xa41e));
        // CB F7 01B6
        gbc.setState(0xe37f, 0xa4e1, 0xf580, 0x5366, 0xa06d, 0x2280, 0x1, 0x1);
        gbc.writeMem(0xe37f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa4e1, gbc.sp());
        EXPECT(0xe381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe37f));
        EXPECT(0xf7, gbc.readMem(0xe380));
        // CB F7 01B7
        gbc.setState(0x7ac4, 0xfaea, 0x29c0, 0x2109, 0x2753, 0x960e, 0x1, 0x0);
        gbc.writeMem(0x7ac4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfaea, gbc.sp());
        EXPECT(0x7ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01B8
        gbc.setState(0x82d9, 0xeaa0, 0xd370, 0x835a, 0x28ea, 0x6861, 0x1, 0x0);
        gbc.writeMem(0x82d9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xeaa0, gbc.sp());
        EXPECT(0x82db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d9));
        EXPECT(0xf7, gbc.readMem(0x82da));
        // CB F7 01B9
        gbc.setState(0x4af2, 0xf14c, 0xe760, 0xcc7f, 0x6b44, 0x17ee, 0x0, 0x1);
        gbc.writeMem(0x4af2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf14c, gbc.sp());
        EXPECT(0x4af4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01BA
        gbc.setState(0xec44, 0x6154, 0x940, 0x6587, 0xfc4, 0x8686, 0x0, 0x1);
        gbc.writeMem(0xec44, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6154, gbc.sp());
        EXPECT(0xec46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec44));
        EXPECT(0xf7, gbc.readMem(0xec45));
        // CB F7 01BB
        gbc.setState(0x1f89, 0xad95, 0xae0, 0x5e0a, 0xe875, 0x947, 0x0, 0x1);
        gbc.writeMem(0x1f89, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xad95, gbc.sp());
        EXPECT(0x1f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01BC
        gbc.setState(0x29be, 0xd322, 0xb670, 0xbbb1, 0xb1f1, 0x3d8, 0x0, 0x1);
        gbc.writeMem(0x29be, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd322, gbc.sp());
        EXPECT(0x29c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01BD
        gbc.setState(0x7e9a, 0x54a9, 0x67f0, 0x94b2, 0xa2ad, 0x5d97, 0x0, 0x1);
        gbc.writeMem(0x7e9a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x54a9, gbc.sp());
        EXPECT(0x7e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01BE
        gbc.setState(0xd669, 0xb804, 0x3010, 0xc20c, 0xecfa, 0x6afc, 0x0, 0x1);
        gbc.writeMem(0xd669, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb804, gbc.sp());
        EXPECT(0xd66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd669));
        EXPECT(0xf7, gbc.readMem(0xd66a));
        // CB F7 01BF
        gbc.setState(0x2aea, 0xe4df, 0x7ec0, 0x6b6c, 0x70e2, 0x748c, 0x1, 0x0);
        gbc.writeMem(0x2aea, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe4df, gbc.sp());
        EXPECT(0x2aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01C0
        gbc.setState(0x61d4, 0xa18e, 0x3710, 0x90d4, 0xf2cb, 0x96a, 0x1, 0x1);
        gbc.writeMem(0x61d4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa18e, gbc.sp());
        EXPECT(0x61d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01C1
        gbc.setState(0x185c, 0x723d, 0xe220, 0x8835, 0x5a06, 0xdc06, 0x0, 0x0);
        gbc.writeMem(0x185c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x723d, gbc.sp());
        EXPECT(0x185e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01C2
        gbc.setState(0x7382, 0x9e78, 0xfc80, 0xbc33, 0xa14e, 0x4fdb, 0x0, 0x1);
        gbc.writeMem(0x7382, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9e78, gbc.sp());
        EXPECT(0x7384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01C3
        gbc.setState(0xd1b, 0x3260, 0x8750, 0xdc67, 0x921d, 0x7930, 0x1, 0x0);
        gbc.writeMem(0xd1b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3260, gbc.sp());
        EXPECT(0xd1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01C4
        gbc.setState(0x83bc, 0x22b6, 0xdff0, 0xcbf6, 0xd7db, 0x8aae, 0x0, 0x0);
        gbc.writeMem(0x83bc, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x22b6, gbc.sp());
        EXPECT(0x83be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83bc));
        EXPECT(0xf7, gbc.readMem(0x83bd));
        // CB F7 01C5
        gbc.setState(0x408d, 0x5187, 0x9830, 0xb7a, 0x945, 0xd916, 0x1, 0x1);
        gbc.writeMem(0x408d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5187, gbc.sp());
        EXPECT(0x408f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01C6
        gbc.setState(0xca64, 0x3a0f, 0x62a0, 0x9a16, 0xfbdc, 0x210d, 0x1, 0x0);
        gbc.writeMem(0xca64, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3a0f, gbc.sp());
        EXPECT(0xca66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca64));
        EXPECT(0xf7, gbc.readMem(0xca65));
        // CB F7 01C7
        gbc.setState(0x3fe5, 0xb98c, 0x9a10, 0xf1d2, 0x6add, 0xb12a, 0x0, 0x1);
        gbc.writeMem(0x3fe5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb98c, gbc.sp());
        EXPECT(0x3fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01C8
        gbc.setState(0x46fd, 0x831e, 0xb640, 0xe3fe, 0x2dfa, 0xf7dd, 0x0, 0x0);
        gbc.writeMem(0x46fd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x831e, gbc.sp());
        EXPECT(0x46ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01C9
        gbc.setState(0xd512, 0x21e6, 0x330, 0xa2f, 0x9994, 0x41ed, 0x1, 0x0);
        gbc.writeMem(0xd512, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x21e6, gbc.sp());
        EXPECT(0xd514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd512));
        EXPECT(0xf7, gbc.readMem(0xd513));
        // CB F7 01CB
        gbc.setState(0x2908, 0xc367, 0xe720, 0xfa93, 0xa810, 0xf16e, 0x1, 0x0);
        gbc.writeMem(0x2908, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc367, gbc.sp());
        EXPECT(0x290a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01CC
        gbc.setState(0x6afa, 0x12f5, 0x6220, 0xf62e, 0x4ca8, 0x70ab, 0x0, 0x1);
        gbc.writeMem(0x6afa, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x12f5, gbc.sp());
        EXPECT(0x6afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01CD
        gbc.setState(0x1192, 0x37c0, 0x8110, 0x7672, 0xe6c6, 0x82b2, 0x0, 0x1);
        gbc.writeMem(0x1192, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x37c0, gbc.sp());
        EXPECT(0x1194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01CE
        gbc.setState(0x83e6, 0x447d, 0x87e0, 0x58bc, 0x4966, 0x34bd, 0x1, 0x0);
        gbc.writeMem(0x83e6, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x447d, gbc.sp());
        EXPECT(0x83e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e6));
        EXPECT(0xf7, gbc.readMem(0x83e7));
        // CB F7 01CF
        gbc.setState(0x58a7, 0xce2e, 0xb550, 0x1670, 0x8047, 0xd80b, 0x0, 0x1);
        gbc.writeMem(0x58a7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xce2e, gbc.sp());
        EXPECT(0x58a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01D0
        gbc.setState(0x2eab, 0xdb6c, 0xaaf0, 0x38d5, 0x7560, 0xa7f7, 0x1, 0x1);
        gbc.writeMem(0x2eab, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdb6c, gbc.sp());
        EXPECT(0x2ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01D1
        gbc.setState(0x5223, 0xa78a, 0xe820, 0x75c2, 0xc453, 0x6ddc, 0x1, 0x1);
        gbc.writeMem(0x5223, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa78a, gbc.sp());
        EXPECT(0x5225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01D2
        gbc.setState(0x3589, 0xf38c, 0xe2f0, 0x2738, 0x258d, 0x21e8, 0x1, 0x0);
        gbc.writeMem(0x3589, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf38c, gbc.sp());
        EXPECT(0x358b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01D3
        gbc.setState(0x4ada, 0x9021, 0x7750, 0x4846, 0xf5b1, 0xa579, 0x0, 0x0);
        gbc.writeMem(0x4ada, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9021, gbc.sp());
        EXPECT(0x4adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01D4
        gbc.setState(0x6c49, 0x8e1b, 0x9c60, 0x1c83, 0x551a, 0x6f1f, 0x1, 0x0);
        gbc.writeMem(0x6c49, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8e1b, gbc.sp());
        EXPECT(0x6c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01D5
        gbc.setState(0xee00, 0xee49, 0x2820, 0xf2a3, 0xb686, 0x3ce2, 0x0, 0x0);
        gbc.writeMem(0xee00, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xee49, gbc.sp());
        EXPECT(0xee02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee00));
        EXPECT(0xf7, gbc.readMem(0xee01));
        // CB F7 01D6
        gbc.setState(0xc99f, 0xc5f4, 0xcbb0, 0x417b, 0x7ee0, 0xe566, 0x1, 0x1);
        gbc.writeMem(0xc99f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc5f4, gbc.sp());
        EXPECT(0xc9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99f));
        EXPECT(0xf7, gbc.readMem(0xc9a0));
        // CB F7 01D7
        gbc.setState(0x2df, 0x6ecf, 0x4680, 0xb964, 0x6728, 0xefbd, 0x0, 0x0);
        gbc.writeMem(0x2df, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6ecf, gbc.sp());
        EXPECT(0x2e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01D8
        gbc.setState(0x84b4, 0x7525, 0x5cd0, 0xaae2, 0x88b6, 0xa1ae, 0x0, 0x0);
        gbc.writeMem(0x84b4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7525, gbc.sp());
        EXPECT(0x84b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b4));
        EXPECT(0xf7, gbc.readMem(0x84b5));
        // CB F7 01D9
        gbc.setState(0x2f7b, 0xab2, 0x4e40, 0xb008, 0x84c5, 0x1cfb, 0x1, 0x0);
        gbc.writeMem(0x2f7b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xab2, gbc.sp());
        EXPECT(0x2f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01DA
        gbc.setState(0xee36, 0x70c0, 0xd6b0, 0xab4f, 0x75b9, 0xd287, 0x0, 0x1);
        gbc.writeMem(0xee36, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x70c0, gbc.sp());
        EXPECT(0xee38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee36));
        EXPECT(0xf7, gbc.readMem(0xee37));
        // CB F7 01DB
        gbc.setState(0x1218, 0xd934, 0x210, 0x6fe, 0x45d2, 0x5164, 0x1, 0x1);
        gbc.writeMem(0x1218, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd934, gbc.sp());
        EXPECT(0x121a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01DC
        gbc.setState(0x1c38, 0xa283, 0x1070, 0xd531, 0xbd78, 0x6cf1, 0x0, 0x1);
        gbc.writeMem(0x1c38, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa283, gbc.sp());
        EXPECT(0x1c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01DD
        gbc.setState(0x2c64, 0x48b5, 0x2f40, 0x425, 0x1ac7, 0xdd7f, 0x0, 0x0);
        gbc.writeMem(0x2c64, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x48b5, gbc.sp());
        EXPECT(0x2c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01DE
        gbc.setState(0xa2d1, 0x28b0, 0x9b10, 0x3eb0, 0xa442, 0x81d2, 0x1, 0x1);
        gbc.writeMem(0xa2d1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x28b0, gbc.sp());
        EXPECT(0xa2d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d1));
        EXPECT(0xf7, gbc.readMem(0xa2d2));
        // CB F7 01DF
        gbc.setState(0x1219, 0x4573, 0x2b60, 0x9f64, 0x955e, 0xcb8a, 0x0, 0x0);
        gbc.writeMem(0x1219, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4573, gbc.sp());
        EXPECT(0x121b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01E0
        gbc.setState(0xa9e9, 0x88e0, 0xbb30, 0xa679, 0x36ce, 0x4680, 0x0, 0x0);
        gbc.writeMem(0xa9e9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x88e0, gbc.sp());
        EXPECT(0xa9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e9));
        EXPECT(0xf7, gbc.readMem(0xa9ea));
        // CB F7 01E1
        gbc.setState(0x48b3, 0x369b, 0x3460, 0x7334, 0x8cd0, 0xb55d, 0x1, 0x0);
        gbc.writeMem(0x48b3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x369b, gbc.sp());
        EXPECT(0x48b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01E2
        gbc.setState(0x3847, 0x32b4, 0x7f70, 0xfa5, 0x8c06, 0xf808, 0x1, 0x1);
        gbc.writeMem(0x3847, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x32b4, gbc.sp());
        EXPECT(0x3849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01E3
        gbc.setState(0x8ab, 0xb4a7, 0x9b30, 0x31d0, 0x7b74, 0xd6af, 0x1, 0x1);
        gbc.writeMem(0x8ab, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb4a7, gbc.sp());
        EXPECT(0x8ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01E4
        gbc.setState(0x49fd, 0x55fe, 0x96b0, 0xadd, 0x26c4, 0x6fb6, 0x0, 0x1);
        gbc.writeMem(0x49fd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x55fe, gbc.sp());
        EXPECT(0x49ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01E5
        gbc.setState(0x286a, 0x4bd6, 0x6e00, 0x25e4, 0x34dc, 0xe633, 0x0, 0x0);
        gbc.writeMem(0x286a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4bd6, gbc.sp());
        EXPECT(0x286c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01E6
        gbc.setState(0x4d21, 0x9dd3, 0xcca0, 0xd2fc, 0x30c6, 0xa988, 0x0, 0x1);
        gbc.writeMem(0x4d21, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9dd3, gbc.sp());
        EXPECT(0x4d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01E7
        gbc.setState(0xdcad, 0x12b, 0x86c0, 0x4575, 0x4f36, 0x7646, 0x1, 0x0);
        gbc.writeMem(0xdcad, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x12b, gbc.sp());
        EXPECT(0xdcaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcad));
        EXPECT(0xf7, gbc.readMem(0xdcae));
        // CB F7 01E8
        gbc.setState(0x97f0, 0x2662, 0xf920, 0x69f6, 0x1e95, 0x6d9f, 0x0, 0x0);
        gbc.writeMem(0x97f0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2662, gbc.sp());
        EXPECT(0x97f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f0));
        EXPECT(0xf7, gbc.readMem(0x97f1));
        // CB F7 01E9
        gbc.setState(0xb0c, 0x8191, 0x560, 0x5b42, 0x8a49, 0x64a, 0x1, 0x0);
        gbc.writeMem(0xb0c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8191, gbc.sp());
        EXPECT(0xb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01EA
        gbc.setState(0x4494, 0xec08, 0x6cd0, 0xff16, 0x39e7, 0x9fe5, 0x0, 0x0);
        gbc.writeMem(0x4494, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xec08, gbc.sp());
        EXPECT(0x4496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01EB
        gbc.setState(0xdb1, 0x5ee6, 0x9480, 0xbebe, 0x3a7d, 0x741a, 0x1, 0x1);
        gbc.writeMem(0xdb1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5ee6, gbc.sp());
        EXPECT(0xdb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01EC
        gbc.setState(0xca54, 0xd034, 0x5600, 0x7af3, 0x73ee, 0xe723, 0x1, 0x0);
        gbc.writeMem(0xca54, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd034, gbc.sp());
        EXPECT(0xca56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca54));
        EXPECT(0xf7, gbc.readMem(0xca55));
        // CB F7 01ED
        gbc.setState(0x8dba, 0xb4ae, 0x6690, 0xcce9, 0x619d, 0xd3fb, 0x0, 0x1);
        gbc.writeMem(0x8dba, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb4ae, gbc.sp());
        EXPECT(0x8dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dba));
        EXPECT(0xf7, gbc.readMem(0x8dbb));
        // CB F7 01EE
        gbc.setState(0xc43, 0xd2a7, 0x1230, 0x229d, 0xe412, 0x68d7, 0x0, 0x1);
        gbc.writeMem(0xc43, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd2a7, gbc.sp());
        EXPECT(0xc45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01EF
        gbc.setState(0xeb2f, 0xa903, 0xe980, 0xa826, 0xbb7c, 0x4d5d, 0x0, 0x1);
        gbc.writeMem(0xeb2f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa903, gbc.sp());
        EXPECT(0xeb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2f));
        EXPECT(0xf7, gbc.readMem(0xeb30));
        // CB F7 01F0
        gbc.setState(0xed9c, 0xb7bf, 0xcdc0, 0x1b00, 0xa22b, 0x2683, 0x1, 0x1);
        gbc.writeMem(0xed9c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb7bf, gbc.sp());
        EXPECT(0xed9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed9c));
        EXPECT(0xf7, gbc.readMem(0xed9d));
        // CB F7 01F1
        gbc.setState(0xd927, 0x32cd, 0xa3f0, 0x4224, 0x5f24, 0x7ff0, 0x0, 0x0);
        gbc.writeMem(0xd927, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x32cd, gbc.sp());
        EXPECT(0xd929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd927));
        EXPECT(0xf7, gbc.readMem(0xd928));
        // CB F7 01F2
        gbc.setState(0x848e, 0xef69, 0xbd00, 0xb760, 0xda93, 0x617a, 0x0, 0x1);
        gbc.writeMem(0x848e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xef69, gbc.sp());
        EXPECT(0x8490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x848e));
        EXPECT(0xf7, gbc.readMem(0x848f));
        // CB F7 01F3
        gbc.setState(0x9268, 0xf211, 0xb930, 0xbe7d, 0x9f83, 0x45c6, 0x0, 0x0);
        gbc.writeMem(0x9268, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf211, gbc.sp());
        EXPECT(0x926a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9268));
        EXPECT(0xf7, gbc.readMem(0x9269));
        // CB F7 01F4
        gbc.setState(0xa8bb, 0xcb71, 0xe50, 0x5607, 0xa7ec, 0xeb00, 0x1, 0x0);
        gbc.writeMem(0xa8bb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcb71, gbc.sp());
        EXPECT(0xa8bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8bb));
        EXPECT(0xf7, gbc.readMem(0xa8bc));
        // CB F7 01F5
        gbc.setState(0xc4ea, 0x1af4, 0x3000, 0xb13b, 0xd9c, 0x9265, 0x1, 0x1);
        gbc.writeMem(0xc4ea, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1af4, gbc.sp());
        EXPECT(0xc4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ea));
        EXPECT(0xf7, gbc.readMem(0xc4eb));
        // CB F7 01F6
        gbc.setState(0xe1e1, 0x37f9, 0x6120, 0xf9f4, 0xe9ce, 0x5c3b, 0x0, 0x0);
        gbc.writeMem(0xe1e1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x37f9, gbc.sp());
        EXPECT(0xe1e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e1));
        EXPECT(0xf7, gbc.readMem(0xe1e2));
        // CB F7 01F7
        gbc.setState(0x83d7, 0x94cb, 0xdce0, 0x74dd, 0x9166, 0x4ef4, 0x1, 0x1);
        gbc.writeMem(0x83d7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x94cb, gbc.sp());
        EXPECT(0x83d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d7));
        EXPECT(0xf7, gbc.readMem(0x83d8));
        // CB F7 01F8
        gbc.setState(0x64cb, 0x8087, 0x3650, 0x82cf, 0xb4ee, 0xd929, 0x0, 0x0);
        gbc.writeMem(0x64cb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8087, gbc.sp());
        EXPECT(0x64cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01FA
        gbc.setState(0x7884, 0x4b18, 0xca60, 0x7a0b, 0x9d16, 0x891, 0x0, 0x0);
        gbc.writeMem(0x7884, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4b18, gbc.sp());
        EXPECT(0x7886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01FB
        gbc.setState(0xef03, 0x93c1, 0x5d00, 0x44f2, 0x2f40, 0x6756, 0x1, 0x1);
        gbc.writeMem(0xef03, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x93c1, gbc.sp());
        EXPECT(0xef05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef03));
        EXPECT(0xf7, gbc.readMem(0xef04));
        // CB F7 01FC
        gbc.setState(0x59e1, 0x452f, 0x1970, 0xd04d, 0xb123, 0x7c9b, 0x1, 0x0);
        gbc.writeMem(0x59e1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x452f, gbc.sp());
        EXPECT(0x59e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01FD
        gbc.setState(0x4254, 0xd0fd, 0xb040, 0x29a7, 0x193f, 0x9d38, 0x1, 0x1);
        gbc.writeMem(0x4254, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd0fd, gbc.sp());
        EXPECT(0x4256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 01FE
        gbc.setState(0x1a7b, 0x45b7, 0x5ab0, 0x54ee, 0xbd77, 0x7762, 0x0, 0x0);
        gbc.writeMem(0x1a7b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x45b7, gbc.sp());
        EXPECT(0x1a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 01FF
        gbc.setState(0xbd6a, 0x5047, 0x6260, 0x373, 0xabb7, 0x3711, 0x0, 0x1);
        gbc.writeMem(0xbd6a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5047, gbc.sp());
        EXPECT(0xbd6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd6a));
        EXPECT(0xf7, gbc.readMem(0xbd6b));
        // CB F7 0200
        gbc.setState(0x2d2d, 0xcdd6, 0xd220, 0x658b, 0xb643, 0x55e3, 0x0, 0x0);
        gbc.writeMem(0x2d2d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcdd6, gbc.sp());
        EXPECT(0x2d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0201
        gbc.setState(0xb1b7, 0xc742, 0x2eb0, 0xf6ee, 0x6649, 0xb34, 0x1, 0x0);
        gbc.writeMem(0xb1b7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc742, gbc.sp());
        EXPECT(0xb1b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b7));
        EXPECT(0xf7, gbc.readMem(0xb1b8));
        // CB F7 0202
        gbc.setState(0x67fe, 0xfc66, 0xc8d0, 0x956a, 0xa29b, 0x1f89, 0x1, 0x0);
        gbc.writeMem(0x67fe, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfc66, gbc.sp());
        EXPECT(0x6800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0203
        gbc.setState(0x8a7b, 0xa31, 0xcbf0, 0x179a, 0xf46b, 0xadb9, 0x1, 0x1);
        gbc.writeMem(0x8a7b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa31, gbc.sp());
        EXPECT(0x8a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a7b));
        EXPECT(0xf7, gbc.readMem(0x8a7c));
        // CB F7 0204
        gbc.setState(0x6685, 0x132d, 0x3020, 0xf292, 0x9aa8, 0x6322, 0x0, 0x0);
        gbc.writeMem(0x6685, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x132d, gbc.sp());
        EXPECT(0x6687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0205
        gbc.setState(0xeb43, 0x56bb, 0x7200, 0xaad5, 0x2d95, 0x81e, 0x0, 0x0);
        gbc.writeMem(0xeb43, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x56bb, gbc.sp());
        EXPECT(0xeb45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb43));
        EXPECT(0xf7, gbc.readMem(0xeb44));
        // CB F7 0206
        gbc.setState(0x17f6, 0xc2d9, 0xae50, 0xee99, 0xf569, 0x826c, 0x1, 0x1);
        gbc.writeMem(0x17f6, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc2d9, gbc.sp());
        EXPECT(0x17f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0208
        gbc.setState(0xd36, 0x46c7, 0x5cc0, 0xb5f, 0x73a4, 0xa1af, 0x0, 0x1);
        gbc.writeMem(0xd36, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x46c7, gbc.sp());
        EXPECT(0xd38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0209
        gbc.setState(0xa0ce, 0xb224, 0x7a0, 0x3ee, 0xafed, 0xde63, 0x1, 0x1);
        gbc.writeMem(0xa0ce, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb224, gbc.sp());
        EXPECT(0xa0d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ce));
        EXPECT(0xf7, gbc.readMem(0xa0cf));
        // CB F7 020A
        gbc.setState(0x9fa, 0x128, 0xe2c0, 0x337a, 0x6fb7, 0xe428, 0x1, 0x0);
        gbc.writeMem(0x9fa, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x128, gbc.sp());
        EXPECT(0x9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 020B
        gbc.setState(0xc244, 0x1524, 0xfd00, 0x922c, 0x3b38, 0xf798, 0x0, 0x1);
        gbc.writeMem(0xc244, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1524, gbc.sp());
        EXPECT(0xc246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc244));
        EXPECT(0xf7, gbc.readMem(0xc245));
        // CB F7 020C
        gbc.setState(0xc57b, 0x8fd1, 0x3050, 0xec44, 0x2baf, 0xe240, 0x0, 0x0);
        gbc.writeMem(0xc57b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8fd1, gbc.sp());
        EXPECT(0xc57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc57b));
        EXPECT(0xf7, gbc.readMem(0xc57c));
        // CB F7 020D
        gbc.setState(0xa1d3, 0x7187, 0xda20, 0x131d, 0x6515, 0x3456, 0x0, 0x1);
        gbc.writeMem(0xa1d3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7187, gbc.sp());
        EXPECT(0xa1d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d3));
        EXPECT(0xf7, gbc.readMem(0xa1d4));
        // CB F7 020F
        gbc.setState(0x4a26, 0xe6a5, 0xa320, 0x3869, 0xad2f, 0x5abd, 0x1, 0x0);
        gbc.writeMem(0x4a26, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe6a5, gbc.sp());
        EXPECT(0x4a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0210
        gbc.setState(0x642c, 0xa7af, 0x350, 0x553c, 0xae1f, 0xb6af, 0x1, 0x1);
        gbc.writeMem(0x642c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa7af, gbc.sp());
        EXPECT(0x642e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0211
        gbc.setState(0xa2ba, 0xca35, 0xb5f0, 0xe4f2, 0xb7ed, 0xfe79, 0x1, 0x0);
        gbc.writeMem(0xa2ba, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xca35, gbc.sp());
        EXPECT(0xa2bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ba));
        EXPECT(0xf7, gbc.readMem(0xa2bb));
        // CB F7 0213
        gbc.setState(0x9bb9, 0x1ff1, 0xe4e0, 0x6483, 0x737a, 0x61fe, 0x1, 0x1);
        gbc.writeMem(0x9bb9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1ff1, gbc.sp());
        EXPECT(0x9bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb9));
        EXPECT(0xf7, gbc.readMem(0x9bba));
        // CB F7 0214
        gbc.setState(0xbfda, 0xe51d, 0x5c80, 0x3f1c, 0x5840, 0xfd4a, 0x0, 0x1);
        gbc.writeMem(0xbfda, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe51d, gbc.sp());
        EXPECT(0xbfdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfda));
        EXPECT(0xf7, gbc.readMem(0xbfdb));
        // CB F7 0215
        gbc.setState(0x7465, 0x88e6, 0x33f0, 0x4b4c, 0xb795, 0x63a7, 0x0, 0x1);
        gbc.writeMem(0x7465, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x88e6, gbc.sp());
        EXPECT(0x7467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0216
        gbc.setState(0x9d77, 0x953b, 0x8d40, 0xdff8, 0xb145, 0x2d81, 0x1, 0x1);
        gbc.writeMem(0x9d77, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x953b, gbc.sp());
        EXPECT(0x9d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d77));
        EXPECT(0xf7, gbc.readMem(0x9d78));
        // CB F7 0217
        gbc.setState(0xaeed, 0xe703, 0x1f30, 0xda7b, 0x72c0, 0xd0b6, 0x0, 0x1);
        gbc.writeMem(0xaeed, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe703, gbc.sp());
        EXPECT(0xaeef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeed));
        EXPECT(0xf7, gbc.readMem(0xaeee));
        // CB F7 0218
        gbc.setState(0x79d2, 0x1f82, 0xfc40, 0xfe1d, 0x7b96, 0x585a, 0x0, 0x1);
        gbc.writeMem(0x79d2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1f82, gbc.sp());
        EXPECT(0x79d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0219
        gbc.setState(0xc09b, 0xc2cf, 0x54f0, 0xdcbc, 0xf066, 0x4603, 0x1, 0x0);
        gbc.writeMem(0xc09b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc2cf, gbc.sp());
        EXPECT(0xc09d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09b));
        EXPECT(0xf7, gbc.readMem(0xc09c));
        // CB F7 021A
        gbc.setState(0x6e6a, 0xcfe3, 0x180, 0x3010, 0xeff4, 0x48dd, 0x0, 0x0);
        gbc.writeMem(0x6e6a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcfe3, gbc.sp());
        EXPECT(0x6e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 021B
        gbc.setState(0xd1b0, 0x7474, 0x1950, 0x546, 0x3c68, 0xf461, 0x0, 0x1);
        gbc.writeMem(0xd1b0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7474, gbc.sp());
        EXPECT(0xd1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b0));
        EXPECT(0xf7, gbc.readMem(0xd1b1));
        // CB F7 021C
        gbc.setState(0x1dd7, 0x6f04, 0x84d0, 0xc919, 0xc5ca, 0xbb5d, 0x1, 0x0);
        gbc.writeMem(0x1dd7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6f04, gbc.sp());
        EXPECT(0x1dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 021D
        gbc.setState(0x7844, 0x26e4, 0x2810, 0x22c1, 0xc61d, 0x9fda, 0x1, 0x0);
        gbc.writeMem(0x7844, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x26e4, gbc.sp());
        EXPECT(0x7846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 021E
        gbc.setState(0xe432, 0x1603, 0xc600, 0x3b2c, 0x55f3, 0x3e7a, 0x0, 0x0);
        gbc.writeMem(0xe432, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1603, gbc.sp());
        EXPECT(0xe434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe432));
        EXPECT(0xf7, gbc.readMem(0xe433));
        // CB F7 021F
        gbc.setState(0xe7d2, 0xcb0b, 0xf640, 0x9f31, 0xa33, 0x8d06, 0x0, 0x0);
        gbc.writeMem(0xe7d2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcb0b, gbc.sp());
        EXPECT(0xe7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d2));
        EXPECT(0xf7, gbc.readMem(0xe7d3));
        // CB F7 0220
        gbc.setState(0x73ba, 0xf4b4, 0x36f0, 0x313c, 0xe1c0, 0x5408, 0x1, 0x1);
        gbc.writeMem(0x73ba, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf4b4, gbc.sp());
        EXPECT(0x73bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0221
        gbc.setState(0x9363, 0x258a, 0x7970, 0x3424, 0x4a62, 0xcc44, 0x1, 0x1);
        gbc.writeMem(0x9363, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x258a, gbc.sp());
        EXPECT(0x9365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9363));
        EXPECT(0xf7, gbc.readMem(0x9364));
        // CB F7 0222
        gbc.setState(0x53cb, 0xf1ef, 0x2e60, 0x5415, 0xf842, 0xa764, 0x0, 0x1);
        gbc.writeMem(0x53cb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf1ef, gbc.sp());
        EXPECT(0x53cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0223
        gbc.setState(0x65c4, 0xf3ec, 0x5d70, 0xadc2, 0x7478, 0xd31c, 0x1, 0x0);
        gbc.writeMem(0x65c4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf3ec, gbc.sp());
        EXPECT(0x65c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0224
        gbc.setState(0x99c3, 0xf0f4, 0x3f60, 0x10e9, 0xcd0f, 0xf2a, 0x0, 0x1);
        gbc.writeMem(0x99c3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf0f4, gbc.sp());
        EXPECT(0x99c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c3));
        EXPECT(0xf7, gbc.readMem(0x99c4));
        // CB F7 0225
        gbc.setState(0x67e0, 0xc797, 0x8d20, 0xc491, 0x3ad0, 0x91e3, 0x1, 0x0);
        gbc.writeMem(0x67e0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc797, gbc.sp());
        EXPECT(0x67e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0226
        gbc.setState(0xb3c7, 0xa465, 0xb430, 0xb412, 0x17a, 0xc3e5, 0x0, 0x0);
        gbc.writeMem(0xb3c7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa465, gbc.sp());
        EXPECT(0xb3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c7));
        EXPECT(0xf7, gbc.readMem(0xb3c8));
        // CB F7 0227
        gbc.setState(0xb898, 0xf5c2, 0xe3b0, 0x76fe, 0xdfd3, 0x8aea, 0x0, 0x1);
        gbc.writeMem(0xb898, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf5c2, gbc.sp());
        EXPECT(0xb89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb898));
        EXPECT(0xf7, gbc.readMem(0xb899));
        // CB F7 0228
        gbc.setState(0x1158, 0xcf87, 0x3620, 0x773, 0x3cc0, 0x4c75, 0x1, 0x1);
        gbc.writeMem(0x1158, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xcf87, gbc.sp());
        EXPECT(0x115a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0229
        gbc.setState(0xe4d5, 0xdcb9, 0x3700, 0xe3, 0x236d, 0x4452, 0x0, 0x1);
        gbc.writeMem(0xe4d5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdcb9, gbc.sp());
        EXPECT(0xe4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d5));
        EXPECT(0xf7, gbc.readMem(0xe4d6));
        // CB F7 022A
        gbc.setState(0x9349, 0xa3df, 0x5d30, 0x37a5, 0x4a36, 0x8bfc, 0x0, 0x0);
        gbc.writeMem(0x9349, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa3df, gbc.sp());
        EXPECT(0x934b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9349));
        EXPECT(0xf7, gbc.readMem(0x934a));
        // CB F7 022B
        gbc.setState(0x298b, 0xfd76, 0xa560, 0x8a2e, 0x94c6, 0xeecb, 0x0, 0x1);
        gbc.writeMem(0x298b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfd76, gbc.sp());
        EXPECT(0x298d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 022C
        gbc.setState(0x47e, 0xea12, 0xb5b0, 0x3a96, 0xd83b, 0x81fb, 0x0, 0x1);
        gbc.writeMem(0x47e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xea12, gbc.sp());
        EXPECT(0x480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 022D
        gbc.setState(0x6cc5, 0x34e, 0x1260, 0x6908, 0xfa74, 0x5e93, 0x1, 0x0);
        gbc.writeMem(0x6cc5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x34e, gbc.sp());
        EXPECT(0x6cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 022E
        gbc.setState(0xc35c, 0x1b97, 0x9a50, 0xaf, 0x3923, 0xe335, 0x1, 0x0);
        gbc.writeMem(0xc35c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1b97, gbc.sp());
        EXPECT(0xc35e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc35c));
        EXPECT(0xf7, gbc.readMem(0xc35d));
        // CB F7 022F
        gbc.setState(0xd068, 0x72b4, 0xe340, 0x2d8a, 0x2692, 0xd529, 0x1, 0x1);
        gbc.writeMem(0xd068, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x72b4, gbc.sp());
        EXPECT(0xd06a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd068));
        EXPECT(0xf7, gbc.readMem(0xd069));
        // CB F7 0230
        gbc.setState(0x2614, 0x1018, 0xb10, 0x9b05, 0x379e, 0xa53, 0x1, 0x0);
        gbc.writeMem(0x2614, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1018, gbc.sp());
        EXPECT(0x2616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0231
        gbc.setState(0x3e22, 0x8cf8, 0xd090, 0xe513, 0xf2c, 0xc4ad, 0x0, 0x0);
        gbc.writeMem(0x3e22, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8cf8, gbc.sp());
        EXPECT(0x3e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0232
        gbc.setState(0xc96e, 0xb9b3, 0xa7e0, 0xfd4f, 0xa7b7, 0x500e, 0x1, 0x0);
        gbc.writeMem(0xc96e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb9b3, gbc.sp());
        EXPECT(0xc970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96e));
        EXPECT(0xf7, gbc.readMem(0xc96f));
        // CB F7 0233
        gbc.setState(0x1657, 0xef5f, 0x1870, 0x47f1, 0xd9c4, 0x8cc9, 0x1, 0x0);
        gbc.writeMem(0x1657, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xef5f, gbc.sp());
        EXPECT(0x1659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0234
        gbc.setState(0x4415, 0x82c8, 0x5a20, 0xdc08, 0x986e, 0x156b, 0x1, 0x1);
        gbc.writeMem(0x4415, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x82c8, gbc.sp());
        EXPECT(0x4417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0235
        gbc.setState(0x8379, 0xb1ad, 0x8820, 0x9fbd, 0xf6b, 0x1157, 0x0, 0x1);
        gbc.writeMem(0x8379, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb1ad, gbc.sp());
        EXPECT(0x837b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8379));
        EXPECT(0xf7, gbc.readMem(0x837a));
        // CB F7 0236
        gbc.setState(0x9c6e, 0x7a50, 0xe610, 0x348e, 0xf9c3, 0xe47d, 0x1, 0x0);
        gbc.writeMem(0x9c6e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7a50, gbc.sp());
        EXPECT(0x9c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6e));
        EXPECT(0xf7, gbc.readMem(0x9c6f));
        // CB F7 0237
        gbc.setState(0x2b4d, 0x7221, 0xd4d0, 0xc2c4, 0x27f3, 0x56a1, 0x0, 0x1);
        gbc.writeMem(0x2b4d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7221, gbc.sp());
        EXPECT(0x2b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0238
        gbc.setState(0x7782, 0x47e3, 0x2c10, 0xdcb2, 0xd61c, 0x8dc1, 0x0, 0x1);
        gbc.writeMem(0x7782, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x47e3, gbc.sp());
        EXPECT(0x7784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0239
        gbc.setState(0x7fe0, 0xafb4, 0x1d0, 0x3b8d, 0x7bb4, 0x8555, 0x0, 0x1);
        gbc.writeMem(0x7fe0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xafb4, gbc.sp());
        EXPECT(0x7fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 023A
        gbc.setState(0x8826, 0x3dd, 0x85d0, 0xebe1, 0xf0b1, 0xf752, 0x0, 0x1);
        gbc.writeMem(0x8826, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3dd, gbc.sp());
        EXPECT(0x8828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8826));
        EXPECT(0xf7, gbc.readMem(0x8827));
        // CB F7 023C
        gbc.setState(0xa03b, 0x6b56, 0x1950, 0x3f20, 0xc446, 0x2bd0, 0x0, 0x0);
        gbc.writeMem(0xa03b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6b56, gbc.sp());
        EXPECT(0xa03d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03b));
        EXPECT(0xf7, gbc.readMem(0xa03c));
        // CB F7 023D
        gbc.setState(0x8eae, 0x4be6, 0x51f0, 0x22b0, 0x9c6c, 0x3af8, 0x1, 0x0);
        gbc.writeMem(0x8eae, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4be6, gbc.sp());
        EXPECT(0x8eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eae));
        EXPECT(0xf7, gbc.readMem(0x8eaf));
        // CB F7 023E
        gbc.setState(0x6df5, 0x1555, 0x4bd0, 0xdbb2, 0xd3b8, 0x6250, 0x1, 0x1);
        gbc.writeMem(0x6df5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1555, gbc.sp());
        EXPECT(0x6df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 023F
        gbc.setState(0x4175, 0xa273, 0x91c0, 0xb97b, 0x7f57, 0xadb7, 0x1, 0x1);
        gbc.writeMem(0x4175, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa273, gbc.sp());
        EXPECT(0x4177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0240
        gbc.setState(0x28fb, 0xe02, 0x6a0, 0x8e0e, 0x3233, 0x10e7, 0x1, 0x0);
        gbc.writeMem(0x28fb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe02, gbc.sp());
        EXPECT(0x28fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0241
        gbc.setState(0xcade, 0xaf72, 0x1ad0, 0x650c, 0xef31, 0x7f61, 0x1, 0x1);
        gbc.writeMem(0xcade, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xaf72, gbc.sp());
        EXPECT(0xcae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcade));
        EXPECT(0xf7, gbc.readMem(0xcadf));
        // CB F7 0242
        gbc.setState(0xe4cd, 0x24a2, 0x78d0, 0x5ba3, 0x4884, 0xa92, 0x1, 0x1);
        gbc.writeMem(0xe4cd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x24a2, gbc.sp());
        EXPECT(0xe4cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4cd));
        EXPECT(0xf7, gbc.readMem(0xe4ce));
        // CB F7 0243
        gbc.setState(0x4289, 0x53e8, 0xf7a0, 0x6bbd, 0x46e5, 0x8c78, 0x1, 0x1);
        gbc.writeMem(0x4289, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x53e8, gbc.sp());
        EXPECT(0x428b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0244
        gbc.setState(0xe9d, 0xd6b9, 0x5ce0, 0x754d, 0x391, 0x28cd, 0x1, 0x1);
        gbc.writeMem(0xe9d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd6b9, gbc.sp());
        EXPECT(0xe9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0245
        gbc.setState(0x1bab, 0x1cd5, 0x2540, 0x49c7, 0x2c96, 0xa8c0, 0x0, 0x0);
        gbc.writeMem(0x1bab, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1cd5, gbc.sp());
        EXPECT(0x1bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0246
        gbc.setState(0x816, 0xeff, 0xa660, 0xb0d9, 0xc8f1, 0xa728, 0x1, 0x0);
        gbc.writeMem(0x816, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xeff, gbc.sp());
        EXPECT(0x818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0247
        gbc.setState(0x35ca, 0x2efc, 0x5510, 0xd59, 0x6f43, 0x48c7, 0x0, 0x0);
        gbc.writeMem(0x35ca, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2efc, gbc.sp());
        EXPECT(0x35cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0248
        gbc.setState(0xc145, 0xc1ff, 0xf90, 0xc013, 0x5d31, 0x999c, 0x1, 0x1);
        gbc.writeMem(0xc145, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc1ff, gbc.sp());
        EXPECT(0xc147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc145));
        EXPECT(0xf7, gbc.readMem(0xc146));
        // CB F7 0249
        gbc.setState(0xac86, 0x501b, 0xc520, 0x3126, 0xc851, 0x8e9, 0x0, 0x0);
        gbc.writeMem(0xac86, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x501b, gbc.sp());
        EXPECT(0xac88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac86));
        EXPECT(0xf7, gbc.readMem(0xac87));
        // CB F7 024A
        gbc.setState(0x8a97, 0x6d67, 0x5f00, 0xd9cc, 0x699a, 0x3e42, 0x0, 0x0);
        gbc.writeMem(0x8a97, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6d67, gbc.sp());
        EXPECT(0x8a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a97));
        EXPECT(0xf7, gbc.readMem(0x8a98));
        // CB F7 024B
        gbc.setState(0xeb0a, 0x6601, 0xcd0, 0x474d, 0xdce7, 0x6f25, 0x0, 0x1);
        gbc.writeMem(0xeb0a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6601, gbc.sp());
        EXPECT(0xeb0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0a));
        EXPECT(0xf7, gbc.readMem(0xeb0b));
        // CB F7 024C
        gbc.setState(0x505a, 0x7183, 0x4870, 0x2093, 0xbc36, 0xb498, 0x0, 0x1);
        gbc.writeMem(0x505a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7183, gbc.sp());
        EXPECT(0x505c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 024E
        gbc.setState(0x4a9f, 0x282, 0xf1a0, 0x1e62, 0x2a24, 0x6e89, 0x1, 0x1);
        gbc.writeMem(0x4a9f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x282, gbc.sp());
        EXPECT(0x4aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 024F
        gbc.setState(0x9a7c, 0x955d, 0x48c0, 0x4000, 0xd108, 0x3ab6, 0x1, 0x1);
        gbc.writeMem(0x9a7c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x955d, gbc.sp());
        EXPECT(0x9a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a7c));
        EXPECT(0xf7, gbc.readMem(0x9a7d));
        // CB F7 0250
        gbc.setState(0x227f, 0x52c6, 0x25f0, 0x381e, 0x9825, 0xb779, 0x1, 0x0);
        gbc.writeMem(0x227f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x52c6, gbc.sp());
        EXPECT(0x2281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0251
        gbc.setState(0xadc3, 0x7700, 0xbff0, 0x85c3, 0xd98f, 0x7f32, 0x0, 0x1);
        gbc.writeMem(0xadc3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7700, gbc.sp());
        EXPECT(0xadc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc3));
        EXPECT(0xf7, gbc.readMem(0xadc4));
        // CB F7 0252
        gbc.setState(0x9361, 0x1ee8, 0x96c0, 0x3f59, 0xe0b, 0x95ab, 0x0, 0x0);
        gbc.writeMem(0x9361, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1ee8, gbc.sp());
        EXPECT(0x9363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9361));
        EXPECT(0xf7, gbc.readMem(0x9362));
        // CB F7 0253
        gbc.setState(0x850c, 0x43b9, 0xa270, 0x4947, 0x904c, 0x5fa, 0x0, 0x0);
        gbc.writeMem(0x850c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x43b9, gbc.sp());
        EXPECT(0x850e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850c));
        EXPECT(0xf7, gbc.readMem(0x850d));
        // CB F7 0254
        gbc.setState(0xce42, 0x57e7, 0xdcc0, 0xb164, 0x3a9a, 0xa09a, 0x1, 0x0);
        gbc.writeMem(0xce42, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x57e7, gbc.sp());
        EXPECT(0xce44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce42));
        EXPECT(0xf7, gbc.readMem(0xce43));
        // CB F7 0255
        gbc.setState(0xde71, 0xcca8, 0x8260, 0xf1ec, 0x783e, 0x884f, 0x1, 0x1);
        gbc.writeMem(0xde71, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcca8, gbc.sp());
        EXPECT(0xde73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde71));
        EXPECT(0xf7, gbc.readMem(0xde72));
        // CB F7 0256
        gbc.setState(0xe707, 0xccaf, 0xea0, 0xbd74, 0x2047, 0xeaa6, 0x1, 0x0);
        gbc.writeMem(0xe707, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xccaf, gbc.sp());
        EXPECT(0xe709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe707));
        EXPECT(0xf7, gbc.readMem(0xe708));
        // CB F7 0257
        gbc.setState(0x9f4a, 0x5235, 0xc600, 0xb440, 0xdb7c, 0xc653, 0x1, 0x1);
        gbc.writeMem(0x9f4a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5235, gbc.sp());
        EXPECT(0x9f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4a));
        EXPECT(0xf7, gbc.readMem(0x9f4b));
        // CB F7 0259
        gbc.setState(0xbf61, 0x4d70, 0xcbb0, 0x6973, 0xbf75, 0x77a6, 0x0, 0x1);
        gbc.writeMem(0xbf61, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4d70, gbc.sp());
        EXPECT(0xbf63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf61));
        EXPECT(0xf7, gbc.readMem(0xbf62));
        // CB F7 025A
        gbc.setState(0x6174, 0xf248, 0x5cd0, 0x22fd, 0xa160, 0x5fe9, 0x0, 0x0);
        gbc.writeMem(0x6174, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf248, gbc.sp());
        EXPECT(0x6176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 025B
        gbc.setState(0xee05, 0x7d8, 0x9250, 0xf051, 0xb217, 0xbe82, 0x1, 0x1);
        gbc.writeMem(0xee05, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7d8, gbc.sp());
        EXPECT(0xee07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee05));
        EXPECT(0xf7, gbc.readMem(0xee06));
        // CB F7 025C
        gbc.setState(0x50a, 0x9e98, 0x2440, 0x53d8, 0x553b, 0x2b, 0x0, 0x0);
        gbc.writeMem(0x50a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9e98, gbc.sp());
        EXPECT(0x50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 025D
        gbc.setState(0x45b5, 0x8038, 0xd350, 0xc0a8, 0x7f98, 0x295c, 0x1, 0x0);
        gbc.writeMem(0x45b5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8038, gbc.sp());
        EXPECT(0x45b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 025E
        gbc.setState(0xb513, 0xea1f, 0xa740, 0xc95c, 0xfe32, 0xa642, 0x1, 0x0);
        gbc.writeMem(0xb513, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xea1f, gbc.sp());
        EXPECT(0xb515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb513));
        EXPECT(0xf7, gbc.readMem(0xb514));
        // CB F7 025F
        gbc.setState(0x145c, 0x84dc, 0xb7f0, 0xd0e7, 0x2cdb, 0xe5ce, 0x0, 0x1);
        gbc.writeMem(0x145c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x84dc, gbc.sp());
        EXPECT(0x145e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0260
        gbc.setState(0xbd1c, 0x5346, 0x8840, 0xdf76, 0xcb27, 0x5ae7, 0x0, 0x1);
        gbc.writeMem(0xbd1c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5346, gbc.sp());
        EXPECT(0xbd1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd1c));
        EXPECT(0xf7, gbc.readMem(0xbd1d));
        // CB F7 0261
        gbc.setState(0xda76, 0xae16, 0xe20, 0x6b98, 0x14ac, 0xec17, 0x1, 0x0);
        gbc.writeMem(0xda76, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xae16, gbc.sp());
        EXPECT(0xda78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda76));
        EXPECT(0xf7, gbc.readMem(0xda77));
        // CB F7 0262
        gbc.setState(0x1781, 0xddc2, 0xc4b0, 0x7e9e, 0x6e0b, 0xae71, 0x0, 0x0);
        gbc.writeMem(0x1781, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xddc2, gbc.sp());
        EXPECT(0x1783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0263
        gbc.setState(0xb5b5, 0xa268, 0x8c20, 0x6fb3, 0x1f54, 0x367d, 0x0, 0x0);
        gbc.writeMem(0xb5b5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa268, gbc.sp());
        EXPECT(0xb5b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b5));
        EXPECT(0xf7, gbc.readMem(0xb5b6));
        // CB F7 0264
        gbc.setState(0x96a0, 0x9e4a, 0x1320, 0x9fb9, 0x3719, 0x14b9, 0x0, 0x1);
        gbc.writeMem(0x96a0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9e4a, gbc.sp());
        EXPECT(0x96a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a0));
        EXPECT(0xf7, gbc.readMem(0x96a1));
        // CB F7 0265
        gbc.setState(0x740a, 0xefeb, 0x4180, 0xdcad, 0x7c80, 0xf25c, 0x0, 0x0);
        gbc.writeMem(0x740a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xefeb, gbc.sp());
        EXPECT(0x740c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0266
        gbc.setState(0x446a, 0xc039, 0x79b0, 0x2228, 0xcb70, 0x5f95, 0x1, 0x1);
        gbc.writeMem(0x446a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc039, gbc.sp());
        EXPECT(0x446c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0267
        gbc.setState(0xd58d, 0x7b46, 0x13f0, 0x77d0, 0xd444, 0xf6ab, 0x1, 0x0);
        gbc.writeMem(0xd58d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7b46, gbc.sp());
        EXPECT(0xd58f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58d));
        EXPECT(0xf7, gbc.readMem(0xd58e));
        // CB F7 0268
        gbc.setState(0x29ea, 0xd486, 0x3440, 0xb5f, 0x5de, 0x7685, 0x1, 0x1);
        gbc.writeMem(0x29ea, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd486, gbc.sp());
        EXPECT(0x29ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0269
        gbc.setState(0x3111, 0x7b52, 0xe4b0, 0xd824, 0x1291, 0xc9f7, 0x0, 0x0);
        gbc.writeMem(0x3111, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7b52, gbc.sp());
        EXPECT(0x3113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 026A
        gbc.setState(0xa641, 0x40e5, 0x9ad0, 0xf9b1, 0x3c66, 0x23d5, 0x1, 0x0);
        gbc.writeMem(0xa641, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x40e5, gbc.sp());
        EXPECT(0xa643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa641));
        EXPECT(0xf7, gbc.readMem(0xa642));
        // CB F7 026C
        gbc.setState(0x16f6, 0x60d2, 0xc910, 0xc019, 0xe303, 0xb055, 0x1, 0x1);
        gbc.writeMem(0x16f6, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x60d2, gbc.sp());
        EXPECT(0x16f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 026D
        gbc.setState(0x292c, 0x1c36, 0x8750, 0xb10f, 0x4174, 0xfc25, 0x1, 0x0);
        gbc.writeMem(0x292c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1c36, gbc.sp());
        EXPECT(0x292e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 026E
        gbc.setState(0x3156, 0x2e36, 0xe000, 0x9dd8, 0x4508, 0xd620, 0x1, 0x1);
        gbc.writeMem(0x3156, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2e36, gbc.sp());
        EXPECT(0x3158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 026F
        gbc.setState(0x56be, 0x4dd3, 0x8f70, 0x5018, 0x90fb, 0xec3b, 0x1, 0x1);
        gbc.writeMem(0x56be, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4dd3, gbc.sp());
        EXPECT(0x56c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0270
        gbc.setState(0xc433, 0xffe9, 0xed60, 0x2241, 0x17b7, 0x1f4e, 0x1, 0x1);
        gbc.writeMem(0xc433, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xffe9, gbc.sp());
        EXPECT(0xc435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc433));
        EXPECT(0xf7, gbc.readMem(0xc434));
        // CB F7 0271
        gbc.setState(0xa413, 0x439, 0x48a0, 0x9644, 0xbf25, 0xd3a8, 0x0, 0x1);
        gbc.writeMem(0xa413, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x439, gbc.sp());
        EXPECT(0xa415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa413));
        EXPECT(0xf7, gbc.readMem(0xa414));
        // CB F7 0272
        gbc.setState(0x66d8, 0x53cd, 0x4300, 0xbaaf, 0x5929, 0xe273, 0x1, 0x1);
        gbc.writeMem(0x66d8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x53cd, gbc.sp());
        EXPECT(0x66da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0274
        gbc.setState(0x1843, 0x3802, 0x21f0, 0x22c3, 0x6291, 0x312a, 0x1, 0x0);
        gbc.writeMem(0x1843, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3802, gbc.sp());
        EXPECT(0x1845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0275
        gbc.setState(0xb400, 0x6ca4, 0xe300, 0xb8e7, 0xad9e, 0xa99f, 0x0, 0x0);
        gbc.writeMem(0xb400, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6ca4, gbc.sp());
        EXPECT(0xb402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb400));
        EXPECT(0xf7, gbc.readMem(0xb401));
        // CB F7 0276
        gbc.setState(0x53db, 0xa63e, 0xc1a0, 0x1cfd, 0xe2c4, 0x759, 0x0, 0x1);
        gbc.writeMem(0x53db, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa63e, gbc.sp());
        EXPECT(0x53dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0277
        gbc.setState(0xdc27, 0xb5de, 0xb950, 0xdeb, 0x6d02, 0xbe3c, 0x1, 0x1);
        gbc.writeMem(0xdc27, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb5de, gbc.sp());
        EXPECT(0xdc29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc27));
        EXPECT(0xf7, gbc.readMem(0xdc28));
        // CB F7 0278
        gbc.setState(0x9d31, 0x9fa0, 0xd650, 0x7d8d, 0xe9fc, 0x969, 0x1, 0x0);
        gbc.writeMem(0x9d31, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9fa0, gbc.sp());
        EXPECT(0x9d33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d31));
        EXPECT(0xf7, gbc.readMem(0x9d32));
        // CB F7 0279
        gbc.setState(0xec8, 0xf1c3, 0xd250, 0x6839, 0x8455, 0x3b6a, 0x0, 0x0);
        gbc.writeMem(0xec8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf1c3, gbc.sp());
        EXPECT(0xeca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 027A
        gbc.setState(0xee3b, 0x67a9, 0xe350, 0x13fd, 0x86f3, 0x6ab8, 0x0, 0x1);
        gbc.writeMem(0xee3b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x67a9, gbc.sp());
        EXPECT(0xee3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee3b));
        EXPECT(0xf7, gbc.readMem(0xee3c));
        // CB F7 027B
        gbc.setState(0xdd3d, 0x97b1, 0xf3d0, 0x43ae, 0xe6eb, 0xa72f, 0x0, 0x1);
        gbc.writeMem(0xdd3d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x97b1, gbc.sp());
        EXPECT(0xdd3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd3d));
        EXPECT(0xf7, gbc.readMem(0xdd3e));
        // CB F7 027C
        gbc.setState(0x4436, 0xe2bf, 0x1920, 0x648e, 0xab9a, 0xdd9f, 0x1, 0x1);
        gbc.writeMem(0x4436, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe2bf, gbc.sp());
        EXPECT(0x4438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 027D
        gbc.setState(0x26b0, 0xdf89, 0xcd60, 0x7bbe, 0xfea9, 0xaae9, 0x1, 0x1);
        gbc.writeMem(0x26b0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xdf89, gbc.sp());
        EXPECT(0x26b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 027E
        gbc.setState(0x4def, 0xeed9, 0x8d00, 0x8266, 0xd174, 0xa323, 0x1, 0x1);
        gbc.writeMem(0x4def, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xeed9, gbc.sp());
        EXPECT(0x4df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 027F
        gbc.setState(0x6cab, 0xf7b5, 0x9f90, 0x2743, 0xb852, 0x428b, 0x0, 0x0);
        gbc.writeMem(0x6cab, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf7b5, gbc.sp());
        EXPECT(0x6cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0280
        gbc.setState(0x370d, 0xec96, 0x94a0, 0xc72a, 0xbd78, 0x2c10, 0x1, 0x0);
        gbc.writeMem(0x370d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xec96, gbc.sp());
        EXPECT(0x370f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0281
        gbc.setState(0x6884, 0x5bdf, 0x1ba0, 0x7ef, 0x6f36, 0x2863, 0x1, 0x0);
        gbc.writeMem(0x6884, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5bdf, gbc.sp());
        EXPECT(0x6886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0282
        gbc.setState(0x7e31, 0x6e45, 0xcf50, 0x2ffa, 0xb08d, 0x5374, 0x0, 0x1);
        gbc.writeMem(0x7e31, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6e45, gbc.sp());
        EXPECT(0x7e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0283
        gbc.setState(0x8d50, 0x17eb, 0xd260, 0x94d, 0x321a, 0x88ce, 0x0, 0x1);
        gbc.writeMem(0x8d50, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x17eb, gbc.sp());
        EXPECT(0x8d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d50));
        EXPECT(0xf7, gbc.readMem(0x8d51));
        // CB F7 0284
        gbc.setState(0x5a40, 0xeb0b, 0xaa30, 0x54, 0xc1de, 0x37f1, 0x0, 0x1);
        gbc.writeMem(0x5a40, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xeb0b, gbc.sp());
        EXPECT(0x5a42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0285
        gbc.setState(0xc64, 0x2362, 0x1360, 0xd962, 0x8b4d, 0xe330, 0x1, 0x0);
        gbc.writeMem(0xc64, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2362, gbc.sp());
        EXPECT(0xc66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0286
        gbc.setState(0x1d3e, 0xd012, 0x5440, 0xef5, 0x6b8, 0xc1e1, 0x0, 0x0);
        gbc.writeMem(0x1d3e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd012, gbc.sp());
        EXPECT(0x1d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0287
        gbc.setState(0x465d, 0xd566, 0x1b90, 0x9e72, 0x5011, 0xca44, 0x0, 0x1);
        gbc.writeMem(0x465d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd566, gbc.sp());
        EXPECT(0x465f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0288
        gbc.setState(0x6d3f, 0x498a, 0x39d0, 0xdf57, 0x59e4, 0xb7bd, 0x1, 0x0);
        gbc.writeMem(0x6d3f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x498a, gbc.sp());
        EXPECT(0x6d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0289
        gbc.setState(0x620e, 0x930b, 0x8550, 0x46f7, 0x364f, 0x61d6, 0x0, 0x0);
        gbc.writeMem(0x620e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x930b, gbc.sp());
        EXPECT(0x6210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 028A
        gbc.setState(0xd760, 0x43cf, 0x72c0, 0xc31b, 0x56d6, 0xaef4, 0x1, 0x1);
        gbc.writeMem(0xd760, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x43cf, gbc.sp());
        EXPECT(0xd762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd760));
        EXPECT(0xf7, gbc.readMem(0xd761));
        // CB F7 028B
        gbc.setState(0x4c77, 0xb8ef, 0x6f50, 0xaa14, 0xa75, 0x96da, 0x1, 0x1);
        gbc.writeMem(0x4c77, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb8ef, gbc.sp());
        EXPECT(0x4c79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 028C
        gbc.setState(0x45e0, 0xf444, 0x380, 0xdfbe, 0xba42, 0x6e9f, 0x0, 0x1);
        gbc.writeMem(0x45e0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf444, gbc.sp());
        EXPECT(0x45e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 028D
        gbc.setState(0x8031, 0xea68, 0xb060, 0xacf4, 0xefb, 0x3088, 0x0, 0x1);
        gbc.writeMem(0x8031, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xea68, gbc.sp());
        EXPECT(0x8033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8031));
        EXPECT(0xf7, gbc.readMem(0x8032));
        // CB F7 028E
        gbc.setState(0x92ed, 0x173d, 0xfbe0, 0xad9c, 0x909c, 0x1ea2, 0x0, 0x0);
        gbc.writeMem(0x92ed, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x173d, gbc.sp());
        EXPECT(0x92ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ed));
        EXPECT(0xf7, gbc.readMem(0x92ee));
        // CB F7 028F
        gbc.setState(0x224e, 0xe2a6, 0x7c80, 0xcc18, 0xbf6e, 0xbad5, 0x0, 0x0);
        gbc.writeMem(0x224e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe2a6, gbc.sp());
        EXPECT(0x2250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0290
        gbc.setState(0x65b, 0xbde, 0x4fc0, 0x6174, 0x7162, 0x7ec9, 0x1, 0x0);
        gbc.writeMem(0x65b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbde, gbc.sp());
        EXPECT(0x65d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0291
        gbc.setState(0x8a6, 0x529d, 0x6ad0, 0xf595, 0xaf0b, 0xcc34, 0x1, 0x1);
        gbc.writeMem(0x8a6, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x529d, gbc.sp());
        EXPECT(0x8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0292
        gbc.setState(0xb7b5, 0x86dd, 0x7650, 0xb7c9, 0x19e2, 0x8f17, 0x1, 0x1);
        gbc.writeMem(0xb7b5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x86dd, gbc.sp());
        EXPECT(0xb7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b5));
        EXPECT(0xf7, gbc.readMem(0xb7b6));
        // CB F7 0293
        gbc.setState(0xbdf9, 0x796a, 0x9240, 0xce93, 0x90da, 0xe6ab, 0x1, 0x1);
        gbc.writeMem(0xbdf9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x796a, gbc.sp());
        EXPECT(0xbdfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf9));
        EXPECT(0xf7, gbc.readMem(0xbdfa));
        // CB F7 0294
        gbc.setState(0x9042, 0x4a07, 0x4e70, 0xaeb9, 0x2b0c, 0x128d, 0x1, 0x0);
        gbc.writeMem(0x9042, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4a07, gbc.sp());
        EXPECT(0x9044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9042));
        EXPECT(0xf7, gbc.readMem(0x9043));
        // CB F7 0295
        gbc.setState(0xead8, 0xa44a, 0x25d0, 0x1258, 0xb88c, 0x3665, 0x1, 0x1);
        gbc.writeMem(0xead8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa44a, gbc.sp());
        EXPECT(0xeada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead8));
        EXPECT(0xf7, gbc.readMem(0xead9));
        // CB F7 0296
        gbc.setState(0x6114, 0x29a4, 0x1ea0, 0xa062, 0x87bf, 0x6ab1, 0x1, 0x0);
        gbc.writeMem(0x6114, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x29a4, gbc.sp());
        EXPECT(0x6116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0297
        gbc.setState(0x4dfb, 0x3c98, 0xf5c0, 0xef1b, 0x4924, 0xf74a, 0x1, 0x0);
        gbc.writeMem(0x4dfb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3c98, gbc.sp());
        EXPECT(0x4dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0298
        gbc.setState(0xb0e0, 0xa5a2, 0xb230, 0xaa29, 0xef1d, 0xa282, 0x0, 0x1);
        gbc.writeMem(0xb0e0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa5a2, gbc.sp());
        EXPECT(0xb0e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e0));
        EXPECT(0xf7, gbc.readMem(0xb0e1));
        // CB F7 0299
        gbc.setState(0xf7d, 0x1565, 0x6e00, 0x9e2, 0x7450, 0x81c9, 0x0, 0x1);
        gbc.writeMem(0xf7d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1565, gbc.sp());
        EXPECT(0xf7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 029A
        gbc.setState(0x8ef2, 0xe01b, 0x2590, 0xf011, 0xd510, 0xfd09, 0x0, 0x0);
        gbc.writeMem(0x8ef2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe01b, gbc.sp());
        EXPECT(0x8ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef2));
        EXPECT(0xf7, gbc.readMem(0x8ef3));
        // CB F7 029B
        gbc.setState(0xa649, 0x1514, 0x490, 0xfafb, 0x7fa7, 0x1166, 0x0, 0x0);
        gbc.writeMem(0xa649, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1514, gbc.sp());
        EXPECT(0xa64b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa649));
        EXPECT(0xf7, gbc.readMem(0xa64a));
        // CB F7 029C
        gbc.setState(0x17e5, 0x76c0, 0xa240, 0x1f95, 0x227a, 0x9e2b, 0x0, 0x0);
        gbc.writeMem(0x17e5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x76c0, gbc.sp());
        EXPECT(0x17e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 029D
        gbc.setState(0xb5b4, 0xc46f, 0xeb70, 0x4b2d, 0x6834, 0xaf27, 0x1, 0x0);
        gbc.writeMem(0xb5b4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc46f, gbc.sp());
        EXPECT(0xb5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b4));
        EXPECT(0xf7, gbc.readMem(0xb5b5));
        // CB F7 029E
        gbc.setState(0x21b8, 0xd319, 0xea50, 0x1e18, 0x7979, 0xc438, 0x0, 0x0);
        gbc.writeMem(0x21b8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd319, gbc.sp());
        EXPECT(0x21ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 029F
        gbc.setState(0xc74e, 0x57a, 0xc5c0, 0xd262, 0xc8bc, 0x4e34, 0x0, 0x0);
        gbc.writeMem(0xc74e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x57a, gbc.sp());
        EXPECT(0xc750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc74e));
        EXPECT(0xf7, gbc.readMem(0xc74f));
        // CB F7 02A0
        gbc.setState(0x85b4, 0x71e1, 0x5f40, 0x4e9e, 0x6115, 0x9e08, 0x0, 0x1);
        gbc.writeMem(0x85b4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x71e1, gbc.sp());
        EXPECT(0x85b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b4));
        EXPECT(0xf7, gbc.readMem(0x85b5));
        // CB F7 02A1
        gbc.setState(0x9990, 0x6689, 0x5bc0, 0xbfa3, 0xb0ff, 0xc0f0, 0x1, 0x1);
        gbc.writeMem(0x9990, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6689, gbc.sp());
        EXPECT(0x9992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9990));
        EXPECT(0xf7, gbc.readMem(0x9991));
        // CB F7 02A2
        gbc.setState(0xacf7, 0x5c1, 0x8280, 0x22ee, 0x47f8, 0x63a8, 0x1, 0x1);
        gbc.writeMem(0xacf7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5c1, gbc.sp());
        EXPECT(0xacf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf7));
        EXPECT(0xf7, gbc.readMem(0xacf8));
        // CB F7 02A3
        gbc.setState(0x30f0, 0x83ce, 0xd7f0, 0x3be0, 0xefb3, 0xb849, 0x1, 0x0);
        gbc.writeMem(0x30f0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x83ce, gbc.sp());
        EXPECT(0x30f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02A4
        gbc.setState(0x97bf, 0x601e, 0x2200, 0xbfc3, 0x2ff4, 0x74de, 0x0, 0x0);
        gbc.writeMem(0x97bf, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x601e, gbc.sp());
        EXPECT(0x97c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97bf));
        EXPECT(0xf7, gbc.readMem(0x97c0));
        // CB F7 02A5
        gbc.setState(0x3505, 0xd9d8, 0x4d10, 0xa94f, 0x6a2e, 0x2530, 0x0, 0x1);
        gbc.writeMem(0x3505, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd9d8, gbc.sp());
        EXPECT(0x3507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02A6
        gbc.setState(0xaec1, 0x290b, 0x40a0, 0x6053, 0x6437, 0x34a4, 0x1, 0x1);
        gbc.writeMem(0xaec1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x290b, gbc.sp());
        EXPECT(0xaec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec1));
        EXPECT(0xf7, gbc.readMem(0xaec2));
        // CB F7 02A7
        gbc.setState(0xed19, 0xb829, 0xa4a0, 0xf6c0, 0x71d0, 0x130b, 0x0, 0x1);
        gbc.writeMem(0xed19, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb829, gbc.sp());
        EXPECT(0xed1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed19));
        EXPECT(0xf7, gbc.readMem(0xed1a));
        // CB F7 02A8
        gbc.setState(0xa5f4, 0xcb05, 0xa810, 0xfd22, 0x3964, 0xf2ae, 0x0, 0x0);
        gbc.writeMem(0xa5f4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcb05, gbc.sp());
        EXPECT(0xa5f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f4));
        EXPECT(0xf7, gbc.readMem(0xa5f5));
        // CB F7 02A9
        gbc.setState(0x95e9, 0xd14a, 0xee40, 0x73b5, 0xbcba, 0x720a, 0x1, 0x0);
        gbc.writeMem(0x95e9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd14a, gbc.sp());
        EXPECT(0x95eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e9));
        EXPECT(0xf7, gbc.readMem(0x95ea));
        // CB F7 02AB
        gbc.setState(0x14c, 0xc49d, 0x3c30, 0x3aca, 0xeede, 0x77cf, 0x0, 0x0);
        gbc.writeMem(0x14c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc49d, gbc.sp());
        EXPECT(0x14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02AC
        gbc.setState(0x2bc0, 0x38d4, 0xac00, 0xd3d5, 0xc608, 0xc82b, 0x0, 0x1);
        gbc.writeMem(0x2bc0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x38d4, gbc.sp());
        EXPECT(0x2bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02AD
        gbc.setState(0x987, 0x3239, 0x5990, 0x8699, 0x366, 0x3c14, 0x1, 0x0);
        gbc.writeMem(0x987, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3239, gbc.sp());
        EXPECT(0x989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02AE
        gbc.setState(0x5ad2, 0x14a5, 0xc4f0, 0x901c, 0xf6ac, 0x964c, 0x1, 0x0);
        gbc.writeMem(0x5ad2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x14a5, gbc.sp());
        EXPECT(0x5ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02AF
        gbc.setState(0x9f87, 0xa13, 0x9780, 0x189a, 0xf78e, 0x4132, 0x0, 0x1);
        gbc.writeMem(0x9f87, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa13, gbc.sp());
        EXPECT(0x9f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f87));
        EXPECT(0xf7, gbc.readMem(0x9f88));
        // CB F7 02B0
        gbc.setState(0x61b9, 0x4c35, 0x60b0, 0x1ecc, 0xd867, 0x2106, 0x1, 0x0);
        gbc.writeMem(0x61b9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4c35, gbc.sp());
        EXPECT(0x61bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02B1
        gbc.setState(0x7720, 0x87a, 0xfa50, 0x46ae, 0x9bf4, 0x58a5, 0x0, 0x0);
        gbc.writeMem(0x7720, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x87a, gbc.sp());
        EXPECT(0x7722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02B3
        gbc.setState(0xef17, 0x8267, 0xec40, 0xf9ea, 0x24c2, 0x47a2, 0x1, 0x1);
        gbc.writeMem(0xef17, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8267, gbc.sp());
        EXPECT(0xef19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef17));
        EXPECT(0xf7, gbc.readMem(0xef18));
        // CB F7 02B4
        gbc.setState(0xd538, 0x2aa4, 0xe370, 0x557b, 0x6de8, 0x4fe, 0x0, 0x1);
        gbc.writeMem(0xd538, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2aa4, gbc.sp());
        EXPECT(0xd53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd538));
        EXPECT(0xf7, gbc.readMem(0xd539));
        // CB F7 02B5
        gbc.setState(0xdcbc, 0x5ce, 0x32d0, 0xdc7c, 0xcf16, 0x9095, 0x1, 0x0);
        gbc.writeMem(0xdcbc, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5ce, gbc.sp());
        EXPECT(0xdcbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcbc));
        EXPECT(0xf7, gbc.readMem(0xdcbd));
        // CB F7 02B6
        gbc.setState(0x155b, 0xae24, 0x3630, 0x1217, 0x2f09, 0x4cc8, 0x1, 0x0);
        gbc.writeMem(0x155b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xae24, gbc.sp());
        EXPECT(0x155d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02B7
        gbc.setState(0x5d72, 0xf85f, 0x3160, 0xeef9, 0xb6bc, 0x86d6, 0x0, 0x0);
        gbc.writeMem(0x5d72, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf85f, gbc.sp());
        EXPECT(0x5d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02B8
        gbc.setState(0xb07a, 0x344e, 0xdbe0, 0x25e8, 0xe7fc, 0xdf75, 0x0, 0x0);
        gbc.writeMem(0xb07a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x344e, gbc.sp());
        EXPECT(0xb07c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb07a));
        EXPECT(0xf7, gbc.readMem(0xb07b));
        // CB F7 02B9
        gbc.setState(0x7b28, 0x26da, 0x7920, 0x3a37, 0xfe64, 0xc4d2, 0x0, 0x0);
        gbc.writeMem(0x7b28, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x26da, gbc.sp());
        EXPECT(0x7b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02BA
        gbc.setState(0xde07, 0xea6b, 0x2ce0, 0x25c2, 0x9abe, 0x78ca, 0x0, 0x0);
        gbc.writeMem(0xde07, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xea6b, gbc.sp());
        EXPECT(0xde09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde07));
        EXPECT(0xf7, gbc.readMem(0xde08));
        // CB F7 02BB
        gbc.setState(0x8af4, 0x1c46, 0xd600, 0xc47d, 0x76f5, 0x9f8d, 0x0, 0x1);
        gbc.writeMem(0x8af4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1c46, gbc.sp());
        EXPECT(0x8af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af4));
        EXPECT(0xf7, gbc.readMem(0x8af5));
        // CB F7 02BC
        gbc.setState(0xdf09, 0xf532, 0x1c10, 0x252b, 0x49ec, 0xefcb, 0x1, 0x1);
        gbc.writeMem(0xdf09, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf532, gbc.sp());
        EXPECT(0xdf0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf09));
        EXPECT(0xf7, gbc.readMem(0xdf0a));
        // CB F7 02BD
        gbc.setState(0x6367, 0x81c0, 0x9dc0, 0x9124, 0xd280, 0xcacb, 0x1, 0x0);
        gbc.writeMem(0x6367, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x81c0, gbc.sp());
        EXPECT(0x6369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02BE
        gbc.setState(0x563, 0x4ba4, 0xe7f0, 0x67b6, 0xa525, 0x91d0, 0x1, 0x1);
        gbc.writeMem(0x563, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4ba4, gbc.sp());
        EXPECT(0x565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02BF
        gbc.setState(0x76c3, 0xd40c, 0xb9e0, 0xd826, 0x58d7, 0xb733, 0x1, 0x1);
        gbc.writeMem(0x76c3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd40c, gbc.sp());
        EXPECT(0x76c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02C0
        gbc.setState(0xe047, 0xb66, 0x2b90, 0x1183, 0xf64b, 0x5a7b, 0x0, 0x1);
        gbc.writeMem(0xe047, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb66, gbc.sp());
        EXPECT(0xe049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe047));
        EXPECT(0xf7, gbc.readMem(0xe048));
        // CB F7 02C1
        gbc.setState(0x667e, 0x292b, 0x400, 0xeec9, 0x9959, 0xe951, 0x1, 0x1);
        gbc.writeMem(0x667e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x292b, gbc.sp());
        EXPECT(0x6680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02C2
        gbc.setState(0xbf38, 0x6bd1, 0x8130, 0x4b81, 0x5d9e, 0x28fe, 0x0, 0x0);
        gbc.writeMem(0xbf38, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6bd1, gbc.sp());
        EXPECT(0xbf3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf38));
        EXPECT(0xf7, gbc.readMem(0xbf39));
        // CB F7 02C3
        gbc.setState(0x8216, 0x76d7, 0x3970, 0x872a, 0x4ce, 0xa28f, 0x0, 0x1);
        gbc.writeMem(0x8216, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x76d7, gbc.sp());
        EXPECT(0x8218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8216));
        EXPECT(0xf7, gbc.readMem(0x8217));
        // CB F7 02C4
        gbc.setState(0x6a72, 0x75e5, 0x22d0, 0x15f9, 0x740b, 0xd532, 0x0, 0x1);
        gbc.writeMem(0x6a72, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x75e5, gbc.sp());
        EXPECT(0x6a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02C5
        gbc.setState(0xb0b0, 0xf252, 0xe430, 0xe92b, 0x67cb, 0x19c3, 0x0, 0x0);
        gbc.writeMem(0xb0b0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf252, gbc.sp());
        EXPECT(0xb0b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b0));
        EXPECT(0xf7, gbc.readMem(0xb0b1));
        // CB F7 02C6
        gbc.setState(0x7d97, 0x2967, 0xe9f0, 0xdf4a, 0xa49e, 0xc0b0, 0x0, 0x1);
        gbc.writeMem(0x7d97, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2967, gbc.sp());
        EXPECT(0x7d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02C8
        gbc.setState(0x67f3, 0x98bd, 0x7cf0, 0x7327, 0x5530, 0x93a0, 0x0, 0x0);
        gbc.writeMem(0x67f3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x98bd, gbc.sp());
        EXPECT(0x67f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02C9
        gbc.setState(0xbdb3, 0x133f, 0xfd20, 0x1aa0, 0xd6ce, 0x37b5, 0x0, 0x0);
        gbc.writeMem(0xbdb3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x133f, gbc.sp());
        EXPECT(0xbdb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb3));
        EXPECT(0xf7, gbc.readMem(0xbdb4));
        // CB F7 02CA
        gbc.setState(0x6e15, 0xf4af, 0x1640, 0x51ee, 0x1e38, 0xc0e0, 0x0, 0x1);
        gbc.writeMem(0x6e15, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf4af, gbc.sp());
        EXPECT(0x6e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02CC
        gbc.setState(0x351, 0xac8c, 0x8950, 0x3b1, 0x5d86, 0x33d6, 0x0, 0x0);
        gbc.writeMem(0x351, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xac8c, gbc.sp());
        EXPECT(0x353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02CD
        gbc.setState(0x22ad, 0x453c, 0xea00, 0x255e, 0xa71, 0x8eeb, 0x0, 0x1);
        gbc.writeMem(0x22ad, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x453c, gbc.sp());
        EXPECT(0x22af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02CE
        gbc.setState(0x5de2, 0xcac, 0xd790, 0x99cf, 0x2c76, 0xa86c, 0x0, 0x0);
        gbc.writeMem(0x5de2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcac, gbc.sp());
        EXPECT(0x5de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02CF
        gbc.setState(0xbbe3, 0x9dfb, 0xd990, 0x5b5d, 0x9edf, 0xfa49, 0x0, 0x1);
        gbc.writeMem(0xbbe3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9dfb, gbc.sp());
        EXPECT(0xbbe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe3));
        EXPECT(0xf7, gbc.readMem(0xbbe4));
        // CB F7 02D0
        gbc.setState(0x3044, 0x16df, 0xe5d0, 0xec40, 0x365a, 0x2d7, 0x1, 0x1);
        gbc.writeMem(0x3044, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x16df, gbc.sp());
        EXPECT(0x3046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02D1
        gbc.setState(0x81a9, 0xa902, 0xc750, 0xdc5e, 0x5cdd, 0x7e0, 0x1, 0x1);
        gbc.writeMem(0x81a9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa902, gbc.sp());
        EXPECT(0x81ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a9));
        EXPECT(0xf7, gbc.readMem(0x81aa));
        // CB F7 02D2
        gbc.setState(0x5022, 0x490f, 0xb290, 0x28b8, 0x5fbb, 0xcb51, 0x1, 0x0);
        gbc.writeMem(0x5022, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x490f, gbc.sp());
        EXPECT(0x5024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02D3
        gbc.setState(0x103e, 0x3512, 0x70d0, 0xe8ba, 0x83ec, 0x2f63, 0x0, 0x0);
        gbc.writeMem(0x103e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3512, gbc.sp());
        EXPECT(0x1040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02D4
        gbc.setState(0xd50e, 0xae2e, 0x3450, 0xb58a, 0xd16, 0x6d12, 0x0, 0x0);
        gbc.writeMem(0xd50e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xae2e, gbc.sp());
        EXPECT(0xd510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd50e));
        EXPECT(0xf7, gbc.readMem(0xd50f));
        // CB F7 02D5
        gbc.setState(0x5e98, 0x2f8c, 0x3870, 0x71c9, 0x1c8f, 0x5281, 0x1, 0x0);
        gbc.writeMem(0x5e98, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2f8c, gbc.sp());
        EXPECT(0x5e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02D6
        gbc.setState(0xd396, 0xa3e4, 0xe1e0, 0x61e0, 0xc76, 0xc887, 0x0, 0x1);
        gbc.writeMem(0xd396, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa3e4, gbc.sp());
        EXPECT(0xd398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd396));
        EXPECT(0xf7, gbc.readMem(0xd397));
        // CB F7 02D7
        gbc.setState(0xc8b7, 0x40f4, 0xd190, 0x18ee, 0xedf6, 0x579a, 0x1, 0x1);
        gbc.writeMem(0xc8b7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x40f4, gbc.sp());
        EXPECT(0xc8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b7));
        EXPECT(0xf7, gbc.readMem(0xc8b8));
        // CB F7 02D8
        gbc.setState(0xbbba, 0x6cb8, 0xf310, 0x7a11, 0x240c, 0x3b08, 0x0, 0x1);
        gbc.writeMem(0xbbba, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6cb8, gbc.sp());
        EXPECT(0xbbbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbba));
        EXPECT(0xf7, gbc.readMem(0xbbbb));
        // CB F7 02D9
        gbc.setState(0xa151, 0x17c0, 0x18e0, 0x2520, 0x79cc, 0xea76, 0x0, 0x0);
        gbc.writeMem(0xa151, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x17c0, gbc.sp());
        EXPECT(0xa153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa151));
        EXPECT(0xf7, gbc.readMem(0xa152));
        // CB F7 02DA
        gbc.setState(0x635d, 0x9d0f, 0x2ec0, 0xac0a, 0x3cc0, 0xcdba, 0x1, 0x0);
        gbc.writeMem(0x635d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9d0f, gbc.sp());
        EXPECT(0x635f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02DB
        gbc.setState(0xbf7c, 0xfdd1, 0x9de0, 0x1f6c, 0x79c7, 0x48be, 0x1, 0x1);
        gbc.writeMem(0xbf7c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfdd1, gbc.sp());
        EXPECT(0xbf7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf7c));
        EXPECT(0xf7, gbc.readMem(0xbf7d));
        // CB F7 02DC
        gbc.setState(0x33ea, 0xfa35, 0xb1d0, 0x58c9, 0x41c7, 0x8885, 0x0, 0x0);
        gbc.writeMem(0x33ea, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfa35, gbc.sp());
        EXPECT(0x33ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02DD
        gbc.setState(0x12d, 0x9b3c, 0x8d50, 0x558a, 0x6173, 0xd963, 0x1, 0x0);
        gbc.writeMem(0x12d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9b3c, gbc.sp());
        EXPECT(0x12f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02DE
        gbc.setState(0x91cf, 0x603e, 0x2b20, 0x32eb, 0xd434, 0x2022, 0x1, 0x0);
        gbc.writeMem(0x91cf, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x603e, gbc.sp());
        EXPECT(0x91d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91cf));
        EXPECT(0xf7, gbc.readMem(0x91d0));
        // CB F7 02DF
        gbc.setState(0x54a0, 0x65da, 0xbae0, 0x58a9, 0x999, 0x1b03, 0x1, 0x1);
        gbc.writeMem(0x54a0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x65da, gbc.sp());
        EXPECT(0x54a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02E0
        gbc.setState(0x21dd, 0xd72f, 0xb80, 0xdcbc, 0x4121, 0x2080, 0x1, 0x1);
        gbc.writeMem(0x21dd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd72f, gbc.sp());
        EXPECT(0x21df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02E1
        gbc.setState(0xefb, 0xf0dd, 0x4d00, 0x3456, 0x43d, 0xecd3, 0x0, 0x0);
        gbc.writeMem(0xefb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf0dd, gbc.sp());
        EXPECT(0xefd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02E2
        gbc.setState(0xaf80, 0xb702, 0x12a0, 0x1a61, 0xee67, 0x87eb, 0x0, 0x0);
        gbc.writeMem(0xaf80, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb702, gbc.sp());
        EXPECT(0xaf82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf80));
        EXPECT(0xf7, gbc.readMem(0xaf81));
        // CB F7 02E3
        gbc.setState(0x2af4, 0xfc6e, 0x5cb0, 0xf26b, 0x8edf, 0x102e, 0x0, 0x0);
        gbc.writeMem(0x2af4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfc6e, gbc.sp());
        EXPECT(0x2af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02E4
        gbc.setState(0xc33d, 0x74a0, 0x5430, 0x2367, 0x5896, 0xdb81, 0x0, 0x0);
        gbc.writeMem(0xc33d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x74a0, gbc.sp());
        EXPECT(0xc33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc33d));
        EXPECT(0xf7, gbc.readMem(0xc33e));
        // CB F7 02E5
        gbc.setState(0xdb4, 0x49ac, 0x4500, 0xf761, 0xa449, 0xcaac, 0x1, 0x0);
        gbc.writeMem(0xdb4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x49ac, gbc.sp());
        EXPECT(0xdb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02E6
        gbc.setState(0x44a5, 0x46c2, 0x44f0, 0x9ae9, 0xd685, 0xa0e1, 0x0, 0x1);
        gbc.writeMem(0x44a5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x46c2, gbc.sp());
        EXPECT(0x44a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02E7
        gbc.setState(0xc642, 0xf36a, 0xbea0, 0xe66c, 0x895e, 0x5286, 0x1, 0x1);
        gbc.writeMem(0xc642, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf36a, gbc.sp());
        EXPECT(0xc644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc642));
        EXPECT(0xf7, gbc.readMem(0xc643));
        // CB F7 02E8
        gbc.setState(0xbef2, 0xae03, 0x830, 0xd550, 0xffa9, 0xf024, 0x1, 0x0);
        gbc.writeMem(0xbef2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xae03, gbc.sp());
        EXPECT(0xbef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef2));
        EXPECT(0xf7, gbc.readMem(0xbef3));
        // CB F7 02E9
        gbc.setState(0x2e0f, 0xa73e, 0x910, 0x8f81, 0x2f5e, 0x89f9, 0x1, 0x0);
        gbc.writeMem(0x2e0f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa73e, gbc.sp());
        EXPECT(0x2e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02EA
        gbc.setState(0xbb4f, 0x8fe1, 0xdeb0, 0xf1c7, 0xb214, 0x5e7e, 0x1, 0x0);
        gbc.writeMem(0xbb4f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8fe1, gbc.sp());
        EXPECT(0xbb51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb4f));
        EXPECT(0xf7, gbc.readMem(0xbb50));
        // CB F7 02EC
        gbc.setState(0x7a53, 0xcc6b, 0xd040, 0x89cf, 0xc86c, 0xf531, 0x1, 0x1);
        gbc.writeMem(0x7a53, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcc6b, gbc.sp());
        EXPECT(0x7a55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02ED
        gbc.setState(0x89e4, 0x5ef8, 0x2bd0, 0x2aa6, 0x3ade, 0x7c4e, 0x0, 0x1);
        gbc.writeMem(0x89e4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5ef8, gbc.sp());
        EXPECT(0x89e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e4));
        EXPECT(0xf7, gbc.readMem(0x89e5));
        // CB F7 02EE
        gbc.setState(0x8782, 0xc509, 0xcb60, 0x5759, 0xc160, 0xd3cb, 0x0, 0x1);
        gbc.writeMem(0x8782, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc509, gbc.sp());
        EXPECT(0x8784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8782));
        EXPECT(0xf7, gbc.readMem(0x8783));
        // CB F7 02F0
        gbc.setState(0x8df1, 0x34c5, 0x15b0, 0xa79c, 0x7ac9, 0x4f99, 0x0, 0x0);
        gbc.writeMem(0x8df1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x34c5, gbc.sp());
        EXPECT(0x8df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df1));
        EXPECT(0xf7, gbc.readMem(0x8df2));
        // CB F7 02F1
        gbc.setState(0x176c, 0x582a, 0xe60, 0xca0a, 0x386, 0xb9c5, 0x1, 0x1);
        gbc.writeMem(0x176c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x582a, gbc.sp());
        EXPECT(0x176e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02F2
        gbc.setState(0x5d42, 0xfb80, 0x88e0, 0x21be, 0x8d84, 0x9548, 0x0, 0x1);
        gbc.writeMem(0x5d42, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfb80, gbc.sp());
        EXPECT(0x5d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02F3
        gbc.setState(0x54bc, 0xe523, 0x4920, 0x1fb, 0x1159, 0xd756, 0x1, 0x1);
        gbc.writeMem(0x54bc, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe523, gbc.sp());
        EXPECT(0x54be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02F5
        gbc.setState(0xd079, 0xa9bb, 0x1c50, 0xdfa0, 0x10ed, 0xbe99, 0x1, 0x1);
        gbc.writeMem(0xd079, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa9bb, gbc.sp());
        EXPECT(0xd07b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd079));
        EXPECT(0xf7, gbc.readMem(0xd07a));
        // CB F7 02F6
        gbc.setState(0xc60d, 0xf9ab, 0xe930, 0x8574, 0x7966, 0xfe7a, 0x0, 0x0);
        gbc.writeMem(0xc60d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf9ab, gbc.sp());
        EXPECT(0xc60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc60d));
        EXPECT(0xf7, gbc.readMem(0xc60e));
        // CB F7 02F7
        gbc.setState(0xbf42, 0x22c1, 0x1770, 0xe5e9, 0x7ff, 0xed91, 0x1, 0x0);
        gbc.writeMem(0xbf42, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x22c1, gbc.sp());
        EXPECT(0xbf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf42));
        EXPECT(0xf7, gbc.readMem(0xbf43));
        // CB F7 02F8
        gbc.setState(0x79ab, 0x5f9d, 0xbf10, 0xab50, 0xc660, 0xf5a1, 0x0, 0x1);
        gbc.writeMem(0x79ab, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5f9d, gbc.sp());
        EXPECT(0x79ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02F9
        gbc.setState(0x54ea, 0x9ce1, 0x3400, 0x8119, 0xa89d, 0x6ea5, 0x0, 0x1);
        gbc.writeMem(0x54ea, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9ce1, gbc.sp());
        EXPECT(0x54ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02FA
        gbc.setState(0x38fa, 0x590f, 0xbf10, 0x16f9, 0x7a3a, 0x467d, 0x1, 0x0);
        gbc.writeMem(0x38fa, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x590f, gbc.sp());
        EXPECT(0x38fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02FB
        gbc.setState(0x86f0, 0x4bef, 0xaa0, 0xc751, 0xaf6, 0x5a9d, 0x0, 0x0);
        gbc.writeMem(0x86f0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4bef, gbc.sp());
        EXPECT(0x86f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f0));
        EXPECT(0xf7, gbc.readMem(0x86f1));
        // CB F7 02FC
        gbc.setState(0x96c4, 0x8318, 0xee0, 0x3ea8, 0xdbac, 0xa381, 0x1, 0x0);
        gbc.writeMem(0x96c4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8318, gbc.sp());
        EXPECT(0x96c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c4));
        EXPECT(0xf7, gbc.readMem(0x96c5));
        // CB F7 02FD
        gbc.setState(0x498b, 0x2b6e, 0xbd70, 0xffd4, 0x92a2, 0x6373, 0x1, 0x1);
        gbc.writeMem(0x498b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2b6e, gbc.sp());
        EXPECT(0x498d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 02FE
        gbc.setState(0x43b3, 0x9ba4, 0x1ee0, 0xd85e, 0xad1f, 0xdc17, 0x0, 0x1);
        gbc.writeMem(0x43b3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9ba4, gbc.sp());
        EXPECT(0x43b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 02FF
        gbc.setState(0xa017, 0x594b, 0xdde0, 0x550e, 0x5a5f, 0xc81, 0x0, 0x1);
        gbc.writeMem(0xa017, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x594b, gbc.sp());
        EXPECT(0xa019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa017));
        EXPECT(0xf7, gbc.readMem(0xa018));
        // CB F7 0300
        gbc.setState(0xe918, 0x1fc0, 0x8280, 0x6d5a, 0xe41b, 0x8555, 0x0, 0x1);
        gbc.writeMem(0xe918, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1fc0, gbc.sp());
        EXPECT(0xe91a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe918));
        EXPECT(0xf7, gbc.readMem(0xe919));
        // CB F7 0301
        gbc.setState(0x8bd5, 0x7cd4, 0x760, 0x664f, 0x3b2, 0xd43f, 0x0, 0x0);
        gbc.writeMem(0x8bd5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7cd4, gbc.sp());
        EXPECT(0x8bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd5));
        EXPECT(0xf7, gbc.readMem(0x8bd6));
        // CB F7 0302
        gbc.setState(0x114e, 0x8558, 0xf7e0, 0x804d, 0xc05d, 0x533b, 0x1, 0x1);
        gbc.writeMem(0x114e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8558, gbc.sp());
        EXPECT(0x1150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0303
        gbc.setState(0x4ba, 0xe985, 0x1b70, 0x6186, 0x6993, 0x4fd4, 0x1, 0x1);
        gbc.writeMem(0x4ba, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe985, gbc.sp());
        EXPECT(0x4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0304
        gbc.setState(0xdcb6, 0xb591, 0x7db0, 0x751a, 0xbfe7, 0x83c5, 0x1, 0x1);
        gbc.writeMem(0xdcb6, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb591, gbc.sp());
        EXPECT(0xdcb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb6));
        EXPECT(0xf7, gbc.readMem(0xdcb7));
        // CB F7 0305
        gbc.setState(0x5e3b, 0x5b40, 0x52a0, 0x57fc, 0x864e, 0xf192, 0x0, 0x0);
        gbc.writeMem(0x5e3b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5b40, gbc.sp());
        EXPECT(0x5e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0306
        gbc.setState(0x4622, 0x6cf3, 0x2660, 0x821a, 0xa5f9, 0x9dee, 0x0, 0x1);
        gbc.writeMem(0x4622, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6cf3, gbc.sp());
        EXPECT(0x4624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0307
        gbc.setState(0x88ab, 0x58e4, 0xb200, 0x70d2, 0x412a, 0x9898, 0x1, 0x0);
        gbc.writeMem(0x88ab, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x58e4, gbc.sp());
        EXPECT(0x88ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ab));
        EXPECT(0xf7, gbc.readMem(0x88ac));
        // CB F7 0308
        gbc.setState(0x44ac, 0xcd2d, 0x4460, 0x279, 0x5e5d, 0xd782, 0x1, 0x1);
        gbc.writeMem(0x44ac, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcd2d, gbc.sp());
        EXPECT(0x44ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0309
        gbc.setState(0x68b0, 0x80, 0x6410, 0x7585, 0x69e1, 0xa58d, 0x1, 0x0);
        gbc.writeMem(0x68b0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x80, gbc.sp());
        EXPECT(0x68b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 030A
        gbc.setState(0x3dc7, 0xd97d, 0xedb0, 0xbce4, 0xffce, 0x479a, 0x1, 0x0);
        gbc.writeMem(0x3dc7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd97d, gbc.sp());
        EXPECT(0x3dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 030B
        gbc.setState(0xc676, 0x4d39, 0xa420, 0x84bc, 0x4cee, 0x3c54, 0x1, 0x0);
        gbc.writeMem(0xc676, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4d39, gbc.sp());
        EXPECT(0xc678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc676));
        EXPECT(0xf7, gbc.readMem(0xc677));
        // CB F7 030C
        gbc.setState(0xad0d, 0x2f3b, 0x4560, 0xe291, 0x6d7a, 0x99e2, 0x1, 0x1);
        gbc.writeMem(0xad0d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2f3b, gbc.sp());
        EXPECT(0xad0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad0d));
        EXPECT(0xf7, gbc.readMem(0xad0e));
        // CB F7 030D
        gbc.setState(0xdc73, 0x6948, 0x1d00, 0xaa5f, 0xba11, 0xb352, 0x0, 0x0);
        gbc.writeMem(0xdc73, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6948, gbc.sp());
        EXPECT(0xdc75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc73));
        EXPECT(0xf7, gbc.readMem(0xdc74));
        // CB F7 030E
        gbc.setState(0x4e59, 0xfeb0, 0x7ff0, 0x3152, 0xf8d0, 0x3406, 0x1, 0x1);
        gbc.writeMem(0x4e59, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfeb0, gbc.sp());
        EXPECT(0x4e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 030F
        gbc.setState(0x3fc0, 0xeb06, 0x7ad0, 0xc89f, 0x19eb, 0xcf0d, 0x1, 0x0);
        gbc.writeMem(0x3fc0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xeb06, gbc.sp());
        EXPECT(0x3fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0310
        gbc.setState(0x133f, 0x4274, 0xa1a0, 0x54eb, 0x2ec5, 0x99f3, 0x0, 0x0);
        gbc.writeMem(0x133f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4274, gbc.sp());
        EXPECT(0x1341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0311
        gbc.setState(0x1f54, 0xc155, 0xc100, 0x732c, 0x6f0e, 0xb806, 0x1, 0x1);
        gbc.writeMem(0x1f54, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc155, gbc.sp());
        EXPECT(0x1f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0312
        gbc.setState(0x96fd, 0x31b3, 0xf990, 0x5846, 0x895d, 0xa525, 0x1, 0x1);
        gbc.writeMem(0x96fd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x31b3, gbc.sp());
        EXPECT(0x96ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96fd));
        EXPECT(0xf7, gbc.readMem(0x96fe));
        // CB F7 0313
        gbc.setState(0x7815, 0x1f02, 0x3360, 0xf1a7, 0x2017, 0x15f6, 0x1, 0x0);
        gbc.writeMem(0x7815, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1f02, gbc.sp());
        EXPECT(0x7817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0314
        gbc.setState(0x8797, 0xd808, 0xf70, 0x146f, 0xb51e, 0x104f, 0x1, 0x0);
        gbc.writeMem(0x8797, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd808, gbc.sp());
        EXPECT(0x8799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8797));
        EXPECT(0xf7, gbc.readMem(0x8798));
        // CB F7 0315
        gbc.setState(0x4184, 0x8c6b, 0x4650, 0xda90, 0x3b2a, 0x6c11, 0x0, 0x1);
        gbc.writeMem(0x4184, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8c6b, gbc.sp());
        EXPECT(0x4186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0316
        gbc.setState(0xa01b, 0xcb8e, 0xc020, 0xa599, 0xc221, 0xf7e5, 0x0, 0x1);
        gbc.writeMem(0xa01b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcb8e, gbc.sp());
        EXPECT(0xa01d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa01b));
        EXPECT(0xf7, gbc.readMem(0xa01c));
        // CB F7 0317
        gbc.setState(0x8d76, 0x738c, 0x7db0, 0xf014, 0x2792, 0x4f, 0x0, 0x0);
        gbc.writeMem(0x8d76, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x738c, gbc.sp());
        EXPECT(0x8d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d76));
        EXPECT(0xf7, gbc.readMem(0x8d77));
        // CB F7 0318
        gbc.setState(0x6c61, 0x9a69, 0xb0d0, 0xad93, 0xf3fc, 0xe293, 0x0, 0x1);
        gbc.writeMem(0x6c61, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9a69, gbc.sp());
        EXPECT(0x6c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0319
        gbc.setState(0xdcbc, 0x619a, 0x6a90, 0xe2e8, 0x305f, 0x6f75, 0x0, 0x1);
        gbc.writeMem(0xdcbc, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x619a, gbc.sp());
        EXPECT(0xdcbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcbc));
        EXPECT(0xf7, gbc.readMem(0xdcbd));
        // CB F7 031A
        gbc.setState(0x73a9, 0xf230, 0x7d00, 0xc413, 0x677c, 0x4a79, 0x1, 0x1);
        gbc.writeMem(0x73a9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf230, gbc.sp());
        EXPECT(0x73ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 031B
        gbc.setState(0x2910, 0x2cbf, 0x7f20, 0x44a, 0x6709, 0x1e2c, 0x0, 0x0);
        gbc.writeMem(0x2910, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2cbf, gbc.sp());
        EXPECT(0x2912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 031C
        gbc.setState(0xa462, 0x5ca0, 0x8920, 0x2dac, 0x8f2a, 0xb3b9, 0x1, 0x0);
        gbc.writeMem(0xa462, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5ca0, gbc.sp());
        EXPECT(0xa464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa462));
        EXPECT(0xf7, gbc.readMem(0xa463));
        // CB F7 031D
        gbc.setState(0xe17a, 0xf880, 0x3020, 0x414f, 0xfde1, 0x8fb2, 0x1, 0x1);
        gbc.writeMem(0xe17a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf880, gbc.sp());
        EXPECT(0xe17c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe17a));
        EXPECT(0xf7, gbc.readMem(0xe17b));
        // CB F7 031E
        gbc.setState(0xe5a6, 0xbf5d, 0x4a10, 0xa253, 0x2f5d, 0xb292, 0x1, 0x0);
        gbc.writeMem(0xe5a6, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbf5d, gbc.sp());
        EXPECT(0xe5a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a6));
        EXPECT(0xf7, gbc.readMem(0xe5a7));
        // CB F7 031F
        gbc.setState(0x100d, 0xf57b, 0xb150, 0x10ac, 0x9b41, 0xfc18, 0x1, 0x0);
        gbc.writeMem(0x100d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf57b, gbc.sp());
        EXPECT(0x100f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0320
        gbc.setState(0x55c9, 0x4ac4, 0x9d50, 0xf089, 0x63c7, 0x363c, 0x0, 0x1);
        gbc.writeMem(0x55c9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4ac4, gbc.sp());
        EXPECT(0x55cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0321
        gbc.setState(0x7ea2, 0xaaeb, 0x15b0, 0x1c98, 0x9519, 0x343f, 0x0, 0x1);
        gbc.writeMem(0x7ea2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xaaeb, gbc.sp());
        EXPECT(0x7ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0322
        gbc.setState(0xe4f3, 0x9082, 0x1930, 0xa339, 0xd9bd, 0xcbde, 0x1, 0x1);
        gbc.writeMem(0xe4f3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9082, gbc.sp());
        EXPECT(0xe4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f3));
        EXPECT(0xf7, gbc.readMem(0xe4f4));
        // CB F7 0323
        gbc.setState(0xe1b2, 0x6f33, 0x42b0, 0xef22, 0xf6f5, 0x417c, 0x1, 0x0);
        gbc.writeMem(0xe1b2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6f33, gbc.sp());
        EXPECT(0xe1b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b2));
        EXPECT(0xf7, gbc.readMem(0xe1b3));
        // CB F7 0327
        gbc.setState(0x4b82, 0xfd23, 0x6390, 0xaaa8, 0xd832, 0xf907, 0x1, 0x1);
        gbc.writeMem(0x4b82, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfd23, gbc.sp());
        EXPECT(0x4b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0328
        gbc.setState(0x8876, 0x7499, 0x80b0, 0xc01c, 0x7072, 0x4b5f, 0x0, 0x0);
        gbc.writeMem(0x8876, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7499, gbc.sp());
        EXPECT(0x8878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8876));
        EXPECT(0xf7, gbc.readMem(0x8877));
        // CB F7 0329
        gbc.setState(0x3511, 0x2b03, 0xd000, 0x2cbe, 0xeb66, 0x4f8c, 0x1, 0x1);
        gbc.writeMem(0x3511, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2b03, gbc.sp());
        EXPECT(0x3513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 032B
        gbc.setState(0x8d1f, 0x9cbd, 0x7690, 0xbebe, 0x1620, 0x52c7, 0x1, 0x0);
        gbc.writeMem(0x8d1f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9cbd, gbc.sp());
        EXPECT(0x8d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d1f));
        EXPECT(0xf7, gbc.readMem(0x8d20));
        // CB F7 032C
        gbc.setState(0x9a4f, 0x45de, 0x7bc0, 0x8f5e, 0xdcac, 0x7c32, 0x0, 0x0);
        gbc.writeMem(0x9a4f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x45de, gbc.sp());
        EXPECT(0x9a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a4f));
        EXPECT(0xf7, gbc.readMem(0x9a50));
        // CB F7 032D
        gbc.setState(0x9ef8, 0xb298, 0x7d50, 0xc089, 0xa85a, 0xb585, 0x0, 0x0);
        gbc.writeMem(0x9ef8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb298, gbc.sp());
        EXPECT(0x9efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef8));
        EXPECT(0xf7, gbc.readMem(0x9ef9));
        // CB F7 032F
        gbc.setState(0x6f8d, 0xd1f9, 0x5770, 0x90f9, 0xf12d, 0x91aa, 0x0, 0x1);
        gbc.writeMem(0x6f8d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd1f9, gbc.sp());
        EXPECT(0x6f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0330
        gbc.setState(0x63c, 0x2696, 0xb590, 0x1cbe, 0x7765, 0x4708, 0x0, 0x1);
        gbc.writeMem(0x63c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2696, gbc.sp());
        EXPECT(0x63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0332
        gbc.setState(0x4a74, 0xce53, 0x7940, 0xf43, 0x5c8c, 0x905a, 0x0, 0x0);
        gbc.writeMem(0x4a74, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xce53, gbc.sp());
        EXPECT(0x4a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0333
        gbc.setState(0x4682, 0x5c0f, 0x49f0, 0x280d, 0x719e, 0xd4f5, 0x1, 0x1);
        gbc.writeMem(0x4682, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5c0f, gbc.sp());
        EXPECT(0x4684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0334
        gbc.setState(0x9d6c, 0x8173, 0x5770, 0x9b64, 0x6301, 0x3657, 0x0, 0x1);
        gbc.writeMem(0x9d6c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8173, gbc.sp());
        EXPECT(0x9d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6c));
        EXPECT(0xf7, gbc.readMem(0x9d6d));
        // CB F7 0335
        gbc.setState(0x6b1b, 0xdaea, 0x3830, 0x5cf8, 0xae3c, 0xf18b, 0x1, 0x0);
        gbc.writeMem(0x6b1b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdaea, gbc.sp());
        EXPECT(0x6b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0336
        gbc.setState(0x397f, 0x18f3, 0xf260, 0xd45, 0x8e69, 0xfaef, 0x0, 0x0);
        gbc.writeMem(0x397f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x18f3, gbc.sp());
        EXPECT(0x3981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0337
        gbc.setState(0xe400, 0xfb68, 0x9c50, 0x3e13, 0x8fa4, 0x9bbb, 0x0, 0x0);
        gbc.writeMem(0xe400, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfb68, gbc.sp());
        EXPECT(0xe402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe400));
        EXPECT(0xf7, gbc.readMem(0xe401));
        // CB F7 0338
        gbc.setState(0x43b4, 0x9cee, 0x8840, 0xc930, 0x6421, 0x87af, 0x1, 0x1);
        gbc.writeMem(0x43b4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9cee, gbc.sp());
        EXPECT(0x43b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0339
        gbc.setState(0x4407, 0x6988, 0x89d0, 0x1a49, 0x3f63, 0xc030, 0x0, 0x1);
        gbc.writeMem(0x4407, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6988, gbc.sp());
        EXPECT(0x4409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 033A
        gbc.setState(0x27, 0x328, 0xb0e0, 0x85f2, 0x1f7a, 0xebc5, 0x0, 0x1);
        gbc.writeMem(0x27, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x328, gbc.sp());
        EXPECT(0x29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 033C
        gbc.setState(0x7ac3, 0xaa1f, 0x92f0, 0xa481, 0xf8e0, 0x81f6, 0x0, 0x0);
        gbc.writeMem(0x7ac3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xaa1f, gbc.sp());
        EXPECT(0x7ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 033D
        gbc.setState(0x35c5, 0x4b99, 0x4630, 0xb36, 0xcd0, 0xa657, 0x0, 0x1);
        gbc.writeMem(0x35c5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4b99, gbc.sp());
        EXPECT(0x35c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 033E
        gbc.setState(0x592d, 0x4b19, 0x4870, 0xf8ac, 0x6d59, 0xd126, 0x0, 0x0);
        gbc.writeMem(0x592d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4b19, gbc.sp());
        EXPECT(0x592f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 033F
        gbc.setState(0x2871, 0x8b8, 0xf6d0, 0xc9a8, 0x17f1, 0x17be, 0x0, 0x0);
        gbc.writeMem(0x2871, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8b8, gbc.sp());
        EXPECT(0x2873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0340
        gbc.setState(0xa0ae, 0x699c, 0x5f30, 0x9051, 0xa02e, 0x307a, 0x1, 0x1);
        gbc.writeMem(0xa0ae, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x699c, gbc.sp());
        EXPECT(0xa0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ae));
        EXPECT(0xf7, gbc.readMem(0xa0af));
        // CB F7 0341
        gbc.setState(0x2c08, 0x5c18, 0xe90, 0xde75, 0x6142, 0xf7bd, 0x0, 0x0);
        gbc.writeMem(0x2c08, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5c18, gbc.sp());
        EXPECT(0x2c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0342
        gbc.setState(0x7b6d, 0xb8a2, 0x37e0, 0x79e5, 0xe51f, 0xe224, 0x1, 0x1);
        gbc.writeMem(0x7b6d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb8a2, gbc.sp());
        EXPECT(0x7b6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0343
        gbc.setState(0x9681, 0xf00a, 0xdf50, 0x7229, 0x4dd3, 0xae3, 0x0, 0x1);
        gbc.writeMem(0x9681, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf00a, gbc.sp());
        EXPECT(0x9683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9681));
        EXPECT(0xf7, gbc.readMem(0x9682));
        // CB F7 0344
        gbc.setState(0xd9c9, 0xea47, 0x950, 0xed09, 0xc088, 0x8f46, 0x1, 0x1);
        gbc.writeMem(0xd9c9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xea47, gbc.sp());
        EXPECT(0xd9cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c9));
        EXPECT(0xf7, gbc.readMem(0xd9ca));
        // CB F7 0345
        gbc.setState(0xefcb, 0x786d, 0xa840, 0x6ec8, 0xd6b8, 0x59ca, 0x1, 0x0);
        gbc.writeMem(0xefcb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x786d, gbc.sp());
        EXPECT(0xefcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefcb));
        EXPECT(0xf7, gbc.readMem(0xefcc));
        // CB F7 0347
        gbc.setState(0xea89, 0xef06, 0x8730, 0xdf9, 0x59e, 0x3b3e, 0x0, 0x1);
        gbc.writeMem(0xea89, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xef06, gbc.sp());
        EXPECT(0xea8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea89));
        EXPECT(0xf7, gbc.readMem(0xea8a));
        // CB F7 0348
        gbc.setState(0xb354, 0x3076, 0x3a40, 0xef81, 0x2f04, 0xd8df, 0x0, 0x0);
        gbc.writeMem(0xb354, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3076, gbc.sp());
        EXPECT(0xb356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb354));
        EXPECT(0xf7, gbc.readMem(0xb355));
        // CB F7 0349
        gbc.setState(0xe74d, 0x3f1c, 0xda80, 0x1772, 0x669a, 0xd339, 0x1, 0x1);
        gbc.writeMem(0xe74d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3f1c, gbc.sp());
        EXPECT(0xe74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74d));
        EXPECT(0xf7, gbc.readMem(0xe74e));
        // CB F7 034A
        gbc.setState(0x86d1, 0x33c1, 0xb3c0, 0x612, 0xeaee, 0x2770, 0x1, 0x1);
        gbc.writeMem(0x86d1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x33c1, gbc.sp());
        EXPECT(0x86d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d1));
        EXPECT(0xf7, gbc.readMem(0x86d2));
        // CB F7 034B
        gbc.setState(0x4efb, 0xf929, 0x9260, 0x1b30, 0xaa90, 0x1890, 0x0, 0x1);
        gbc.writeMem(0x4efb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf929, gbc.sp());
        EXPECT(0x4efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 034C
        gbc.setState(0x8e38, 0x9535, 0xfff0, 0x97f5, 0xb553, 0x8ec8, 0x1, 0x1);
        gbc.writeMem(0x8e38, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9535, gbc.sp());
        EXPECT(0x8e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e38));
        EXPECT(0xf7, gbc.readMem(0x8e39));
        // CB F7 034E
        gbc.setState(0x74ee, 0xa124, 0xf7d0, 0x919, 0xf0e4, 0x9023, 0x0, 0x1);
        gbc.writeMem(0x74ee, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa124, gbc.sp());
        EXPECT(0x74f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 034F
        gbc.setState(0x1e9e, 0xecef, 0x7e0, 0xf954, 0x7e6a, 0x5c2b, 0x1, 0x1);
        gbc.writeMem(0x1e9e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xecef, gbc.sp());
        EXPECT(0x1ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0350
        gbc.setState(0xc4c4, 0x9618, 0xb910, 0xd7ba, 0x1b2f, 0x826f, 0x0, 0x1);
        gbc.writeMem(0xc4c4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9618, gbc.sp());
        EXPECT(0xc4c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c4));
        EXPECT(0xf7, gbc.readMem(0xc4c5));
        // CB F7 0351
        gbc.setState(0x4a76, 0xb3d2, 0x5030, 0xc3cb, 0xca85, 0xac89, 0x0, 0x1);
        gbc.writeMem(0x4a76, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb3d2, gbc.sp());
        EXPECT(0x4a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0352
        gbc.setState(0xd85f, 0x174f, 0xa9c0, 0x2878, 0xf5c0, 0xeb21, 0x0, 0x1);
        gbc.writeMem(0xd85f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x174f, gbc.sp());
        EXPECT(0xd861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85f));
        EXPECT(0xf7, gbc.readMem(0xd860));
        // CB F7 0353
        gbc.setState(0xb9, 0xebb1, 0x1da0, 0xb7f1, 0xbc7e, 0x3e08, 0x1, 0x0);
        gbc.writeMem(0xb9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xebb1, gbc.sp());
        EXPECT(0xbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0354
        gbc.setState(0x3923, 0xbf64, 0xb4f0, 0x9d52, 0x6b78, 0x438e, 0x0, 0x0);
        gbc.writeMem(0x3923, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbf64, gbc.sp());
        EXPECT(0x3925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0355
        gbc.setState(0xd3cb, 0xdfea, 0x86c0, 0x4c27, 0x11f3, 0x5908, 0x1, 0x0);
        gbc.writeMem(0xd3cb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdfea, gbc.sp());
        EXPECT(0xd3cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3cb));
        EXPECT(0xf7, gbc.readMem(0xd3cc));
        // CB F7 0356
        gbc.setState(0xe09f, 0xed3f, 0x9d40, 0x36a0, 0x6a0c, 0x95a2, 0x0, 0x0);
        gbc.writeMem(0xe09f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xed3f, gbc.sp());
        EXPECT(0xe0a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09f));
        EXPECT(0xf7, gbc.readMem(0xe0a0));
        // CB F7 0357
        gbc.setState(0x80e1, 0xfc33, 0x5f90, 0x98f2, 0x9d58, 0x49a2, 0x1, 0x0);
        gbc.writeMem(0x80e1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfc33, gbc.sp());
        EXPECT(0x80e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e1));
        EXPECT(0xf7, gbc.readMem(0x80e2));
        // CB F7 0358
        gbc.setState(0x3191, 0xacdb, 0x7910, 0x6b10, 0xa0be, 0x36cf, 0x0, 0x1);
        gbc.writeMem(0x3191, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xacdb, gbc.sp());
        EXPECT(0x3193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0359
        gbc.setState(0x8c51, 0xae2f, 0x35d0, 0xde28, 0x6fc3, 0xfbf2, 0x0, 0x1);
        gbc.writeMem(0x8c51, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xae2f, gbc.sp());
        EXPECT(0x8c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c51));
        EXPECT(0xf7, gbc.readMem(0x8c52));
        // CB F7 035A
        gbc.setState(0x49d0, 0x3b0c, 0x5c70, 0xd966, 0x4916, 0x9c79, 0x0, 0x1);
        gbc.writeMem(0x49d0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3b0c, gbc.sp());
        EXPECT(0x49d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 035B
        gbc.setState(0x2d7e, 0x6581, 0xe100, 0x27c1, 0x8766, 0x8f2f, 0x1, 0x0);
        gbc.writeMem(0x2d7e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6581, gbc.sp());
        EXPECT(0x2d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 035C
        gbc.setState(0x32ab, 0x70c, 0xd120, 0x8d22, 0x761d, 0xe5d9, 0x0, 0x0);
        gbc.writeMem(0x32ab, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x70c, gbc.sp());
        EXPECT(0x32ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 035D
        gbc.setState(0xc673, 0x712d, 0xb50, 0xfcf, 0xcda6, 0x2ef0, 0x1, 0x0);
        gbc.writeMem(0xc673, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x712d, gbc.sp());
        EXPECT(0xc675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc673));
        EXPECT(0xf7, gbc.readMem(0xc674));
        // CB F7 035E
        gbc.setState(0xe304, 0x24b2, 0x7f80, 0xffc7, 0x43c6, 0xb380, 0x0, 0x1);
        gbc.writeMem(0xe304, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x24b2, gbc.sp());
        EXPECT(0xe306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe304));
        EXPECT(0xf7, gbc.readMem(0xe305));
        // CB F7 035F
        gbc.setState(0xcc97, 0x91a9, 0x84c0, 0x900a, 0xf226, 0xd5a, 0x1, 0x1);
        gbc.writeMem(0xcc97, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x91a9, gbc.sp());
        EXPECT(0xcc99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc97));
        EXPECT(0xf7, gbc.readMem(0xcc98));
        // CB F7 0360
        gbc.setState(0x47aa, 0xfbbc, 0x73b0, 0xc946, 0x1a46, 0x5597, 0x1, 0x1);
        gbc.writeMem(0x47aa, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfbbc, gbc.sp());
        EXPECT(0x47ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0361
        gbc.setState(0x24e9, 0x54ee, 0xcc00, 0xf3c0, 0x2669, 0x17f, 0x1, 0x1);
        gbc.writeMem(0x24e9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x54ee, gbc.sp());
        EXPECT(0x24eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0362
        gbc.setState(0x6adf, 0x54c2, 0xfe20, 0x3e99, 0xa94e, 0xd4a3, 0x0, 0x1);
        gbc.writeMem(0x6adf, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x54c2, gbc.sp());
        EXPECT(0x6ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0363
        gbc.setState(0x45d4, 0x648b, 0x890, 0xd1df, 0x7359, 0xc170, 0x1, 0x0);
        gbc.writeMem(0x45d4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x648b, gbc.sp());
        EXPECT(0x45d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0364
        gbc.setState(0x1597, 0x72b1, 0xc6a0, 0x4605, 0x119e, 0xfe42, 0x1, 0x1);
        gbc.writeMem(0x1597, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x72b1, gbc.sp());
        EXPECT(0x1599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0365
        gbc.setState(0xd986, 0xe437, 0xb350, 0x885c, 0xe5fc, 0x7d1a, 0x0, 0x0);
        gbc.writeMem(0xd986, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe437, gbc.sp());
        EXPECT(0xd988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd986));
        EXPECT(0xf7, gbc.readMem(0xd987));
        // CB F7 0366
        gbc.setState(0x215, 0x397c, 0xea0, 0xfb5f, 0x86bc, 0x9d6e, 0x0, 0x1);
        gbc.writeMem(0x215, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x397c, gbc.sp());
        EXPECT(0x217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0367
        gbc.setState(0x3056, 0xd03e, 0x6410, 0xfc85, 0x1c22, 0xbb3d, 0x1, 0x0);
        gbc.writeMem(0x3056, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd03e, gbc.sp());
        EXPECT(0x3058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0368
        gbc.setState(0xbaa0, 0x6d70, 0x2140, 0xf32a, 0x3696, 0x7c9e, 0x1, 0x1);
        gbc.writeMem(0xbaa0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6d70, gbc.sp());
        EXPECT(0xbaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa0));
        EXPECT(0xf7, gbc.readMem(0xbaa1));
        // CB F7 0369
        gbc.setState(0x5c8c, 0x72cf, 0xb100, 0xf4e1, 0xc7e, 0x98c6, 0x0, 0x0);
        gbc.writeMem(0x5c8c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x72cf, gbc.sp());
        EXPECT(0x5c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 036B
        gbc.setState(0xb4fd, 0x5d69, 0xf900, 0x5353, 0x3fca, 0xaab5, 0x1, 0x0);
        gbc.writeMem(0xb4fd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5d69, gbc.sp());
        EXPECT(0xb4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fd));
        EXPECT(0xf7, gbc.readMem(0xb4fe));
        // CB F7 036C
        gbc.setState(0xd93f, 0x3179, 0x7ce0, 0x4783, 0xdf86, 0xe70e, 0x0, 0x1);
        gbc.writeMem(0xd93f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3179, gbc.sp());
        EXPECT(0xd941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd93f));
        EXPECT(0xf7, gbc.readMem(0xd940));
        // CB F7 036D
        gbc.setState(0xa094, 0x5e67, 0xfcc0, 0xbc8, 0xc6f, 0x6ed6, 0x0, 0x1);
        gbc.writeMem(0xa094, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5e67, gbc.sp());
        EXPECT(0xa096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa094));
        EXPECT(0xf7, gbc.readMem(0xa095));
        // CB F7 036E
        gbc.setState(0x141c, 0x7f80, 0xcab0, 0x2b90, 0x82b8, 0x61bd, 0x1, 0x0);
        gbc.writeMem(0x141c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7f80, gbc.sp());
        EXPECT(0x141e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 036F
        gbc.setState(0xc553, 0x8d3d, 0x8b00, 0xb1ad, 0x1f21, 0x1d14, 0x1, 0x0);
        gbc.writeMem(0xc553, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8d3d, gbc.sp());
        EXPECT(0xc555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc553));
        EXPECT(0xf7, gbc.readMem(0xc554));
        // CB F7 0370
        gbc.setState(0x5ef4, 0xaf10, 0xcc0, 0x138d, 0x3ea8, 0x47d6, 0x0, 0x0);
        gbc.writeMem(0x5ef4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xaf10, gbc.sp());
        EXPECT(0x5ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0371
        gbc.setState(0x71cb, 0xfc55, 0x3210, 0x722d, 0xa2a5, 0x4d7a, 0x1, 0x1);
        gbc.writeMem(0x71cb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfc55, gbc.sp());
        EXPECT(0x71cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0372
        gbc.setState(0x6cea, 0x7728, 0x2610, 0x7cc6, 0x9384, 0xf047, 0x1, 0x0);
        gbc.writeMem(0x6cea, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7728, gbc.sp());
        EXPECT(0x6cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0373
        gbc.setState(0x4820, 0xe8fd, 0x66f0, 0x1f79, 0x647d, 0x6abe, 0x1, 0x1);
        gbc.writeMem(0x4820, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe8fd, gbc.sp());
        EXPECT(0x4822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0375
        gbc.setState(0x2fb8, 0xba2c, 0x1010, 0xd0f1, 0x7986, 0x86a3, 0x0, 0x1);
        gbc.writeMem(0x2fb8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xba2c, gbc.sp());
        EXPECT(0x2fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0377
        gbc.setState(0x6a61, 0x7853, 0xe9e0, 0xd100, 0x1e39, 0x9650, 0x1, 0x1);
        gbc.writeMem(0x6a61, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7853, gbc.sp());
        EXPECT(0x6a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0378
        gbc.setState(0x8809, 0x4da8, 0xd410, 0x7c6c, 0x431a, 0x9184, 0x1, 0x0);
        gbc.writeMem(0x8809, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4da8, gbc.sp());
        EXPECT(0x880b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8809));
        EXPECT(0xf7, gbc.readMem(0x880a));
        // CB F7 0379
        gbc.setState(0x5543, 0x46e5, 0x210, 0x3366, 0x37ac, 0x5b72, 0x0, 0x1);
        gbc.writeMem(0x5543, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x46e5, gbc.sp());
        EXPECT(0x5545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 037A
        gbc.setState(0xc9b6, 0xb6da, 0xc640, 0xaebc, 0xed72, 0xfebf, 0x0, 0x1);
        gbc.writeMem(0xc9b6, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb6da, gbc.sp());
        EXPECT(0xc9b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b6));
        EXPECT(0xf7, gbc.readMem(0xc9b7));
        // CB F7 037B
        gbc.setState(0x729c, 0xcef1, 0x54c0, 0x9399, 0x9f78, 0x1bb9, 0x0, 0x1);
        gbc.writeMem(0x729c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcef1, gbc.sp());
        EXPECT(0x729e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 037C
        gbc.setState(0x1167, 0x9b7b, 0xce0, 0x58d2, 0xe717, 0xe564, 0x0, 0x0);
        gbc.writeMem(0x1167, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9b7b, gbc.sp());
        EXPECT(0x1169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 037D
        gbc.setState(0x2dde, 0x7804, 0x6a00, 0xb4dc, 0xd036, 0xee7a, 0x1, 0x0);
        gbc.writeMem(0x2dde, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7804, gbc.sp());
        EXPECT(0x2de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 037E
        gbc.setState(0x815f, 0x5cd2, 0xc830, 0xc0c2, 0xcf5c, 0xfda2, 0x0, 0x1);
        gbc.writeMem(0x815f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5cd2, gbc.sp());
        EXPECT(0x8161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815f));
        EXPECT(0xf7, gbc.readMem(0x8160));
        // CB F7 037F
        gbc.setState(0x9cda, 0x17fe, 0x400, 0x7881, 0x8eb3, 0x96ed, 0x1, 0x0);
        gbc.writeMem(0x9cda, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x17fe, gbc.sp());
        EXPECT(0x9cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cda));
        EXPECT(0xf7, gbc.readMem(0x9cdb));
        // CB F7 0380
        gbc.setState(0xa2f5, 0x3edd, 0xb600, 0x4302, 0xb239, 0xcf1a, 0x0, 0x0);
        gbc.writeMem(0xa2f5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3edd, gbc.sp());
        EXPECT(0xa2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f5));
        EXPECT(0xf7, gbc.readMem(0xa2f6));
        // CB F7 0381
        gbc.setState(0xa2d4, 0x3f4e, 0x1a10, 0x38ba, 0xa913, 0x46ae, 0x1, 0x1);
        gbc.writeMem(0xa2d4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3f4e, gbc.sp());
        EXPECT(0xa2d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d4));
        EXPECT(0xf7, gbc.readMem(0xa2d5));
        // CB F7 0382
        gbc.setState(0x6317, 0x9506, 0x1e70, 0x11ee, 0xb007, 0xa032, 0x1, 0x0);
        gbc.writeMem(0x6317, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9506, gbc.sp());
        EXPECT(0x6319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0383
        gbc.setState(0x9f66, 0xfdd, 0x7dd0, 0x4ff2, 0x9a7, 0x8e44, 0x1, 0x0);
        gbc.writeMem(0x9f66, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfdd, gbc.sp());
        EXPECT(0x9f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f66));
        EXPECT(0xf7, gbc.readMem(0x9f67));
        // CB F7 0384
        gbc.setState(0xe449, 0xec13, 0x7550, 0x7b30, 0xe28a, 0xe5f, 0x1, 0x0);
        gbc.writeMem(0xe449, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xec13, gbc.sp());
        EXPECT(0xe44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe449));
        EXPECT(0xf7, gbc.readMem(0xe44a));
        // CB F7 0385
        gbc.setState(0x89e3, 0xe99f, 0xe140, 0x9238, 0x4c92, 0x1981, 0x1, 0x0);
        gbc.writeMem(0x89e3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe99f, gbc.sp());
        EXPECT(0x89e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e3));
        EXPECT(0xf7, gbc.readMem(0x89e4));
        // CB F7 0386
        gbc.setState(0x62fd, 0x31e5, 0xb870, 0xbc40, 0xa23f, 0xc94f, 0x0, 0x0);
        gbc.writeMem(0x62fd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x31e5, gbc.sp());
        EXPECT(0x62ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0387
        gbc.setState(0xb5ec, 0x3435, 0xcc10, 0x528e, 0x4dfc, 0x8b13, 0x1, 0x0);
        gbc.writeMem(0xb5ec, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3435, gbc.sp());
        EXPECT(0xb5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ec));
        EXPECT(0xf7, gbc.readMem(0xb5ed));
        // CB F7 0388
        gbc.setState(0x39cc, 0xa3c2, 0xd070, 0xa1d7, 0x9fce, 0x6325, 0x1, 0x0);
        gbc.writeMem(0x39cc, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa3c2, gbc.sp());
        EXPECT(0x39ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0389
        gbc.setState(0xb0f9, 0x2488, 0x5f20, 0x158, 0x4b13, 0x6530, 0x0, 0x0);
        gbc.writeMem(0xb0f9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2488, gbc.sp());
        EXPECT(0xb0fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f9));
        EXPECT(0xf7, gbc.readMem(0xb0fa));
        // CB F7 038A
        gbc.setState(0xe566, 0x8467, 0x1fc0, 0x6e63, 0x5a9d, 0x4d31, 0x0, 0x0);
        gbc.writeMem(0xe566, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8467, gbc.sp());
        EXPECT(0xe568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe566));
        EXPECT(0xf7, gbc.readMem(0xe567));
        // CB F7 038B
        gbc.setState(0xa4f3, 0x22a6, 0x4c50, 0x4fa4, 0x3275, 0x4a47, 0x0, 0x0);
        gbc.writeMem(0xa4f3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x22a6, gbc.sp());
        EXPECT(0xa4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f3));
        EXPECT(0xf7, gbc.readMem(0xa4f4));
        // CB F7 038C
        gbc.setState(0xe29b, 0xe67e, 0x94d0, 0xd8c9, 0xa056, 0x51d3, 0x0, 0x1);
        gbc.writeMem(0xe29b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe67e, gbc.sp());
        EXPECT(0xe29d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29b));
        EXPECT(0xf7, gbc.readMem(0xe29c));
        // CB F7 038D
        gbc.setState(0x526d, 0x9c38, 0x15b0, 0x21bd, 0x4e39, 0xb2c3, 0x0, 0x1);
        gbc.writeMem(0x526d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9c38, gbc.sp());
        EXPECT(0x526f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 038E
        gbc.setState(0xbb4e, 0xac8c, 0x7f70, 0xb737, 0x284e, 0xa824, 0x1, 0x1);
        gbc.writeMem(0xbb4e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xac8c, gbc.sp());
        EXPECT(0xbb50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb4e));
        EXPECT(0xf7, gbc.readMem(0xbb4f));
        // CB F7 0390
        gbc.setState(0xc5de, 0x97c, 0xa5c0, 0x88c, 0xdef6, 0x9e20, 0x1, 0x1);
        gbc.writeMem(0xc5de, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x97c, gbc.sp());
        EXPECT(0xc5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5de));
        EXPECT(0xf7, gbc.readMem(0xc5df));
        // CB F7 0391
        gbc.setState(0xb91b, 0xe08, 0xdff0, 0xa6aa, 0xc55f, 0x14a5, 0x0, 0x0);
        gbc.writeMem(0xb91b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe08, gbc.sp());
        EXPECT(0xb91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb91b));
        EXPECT(0xf7, gbc.readMem(0xb91c));
        // CB F7 0392
        gbc.setState(0x961f, 0x589c, 0xba60, 0x5ea3, 0x2192, 0x96c6, 0x0, 0x0);
        gbc.writeMem(0x961f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x589c, gbc.sp());
        EXPECT(0x9621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961f));
        EXPECT(0xf7, gbc.readMem(0x9620));
        // CB F7 0393
        gbc.setState(0x3525, 0xbfed, 0x98b0, 0x2449, 0x5311, 0x893, 0x1, 0x0);
        gbc.writeMem(0x3525, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbfed, gbc.sp());
        EXPECT(0x3527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0394
        gbc.setState(0xe996, 0xc503, 0x74e0, 0xb018, 0x7ec2, 0xc3a6, 0x1, 0x0);
        gbc.writeMem(0xe996, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc503, gbc.sp());
        EXPECT(0xe998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe996));
        EXPECT(0xf7, gbc.readMem(0xe997));
        // CB F7 0395
        gbc.setState(0x92b8, 0xbba6, 0x910, 0x654c, 0x2180, 0xdefa, 0x1, 0x1);
        gbc.writeMem(0x92b8, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbba6, gbc.sp());
        EXPECT(0x92ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b8));
        EXPECT(0xf7, gbc.readMem(0x92b9));
        // CB F7 0396
        gbc.setState(0x60e9, 0x2afb, 0xb9a0, 0x418d, 0xe01f, 0x8a43, 0x1, 0x0);
        gbc.writeMem(0x60e9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2afb, gbc.sp());
        EXPECT(0x60eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0397
        gbc.setState(0x4bb9, 0xdfd, 0x5230, 0x8816, 0x6657, 0xd8a8, 0x1, 0x0);
        gbc.writeMem(0x4bb9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdfd, gbc.sp());
        EXPECT(0x4bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 0398
        gbc.setState(0x3f6e, 0xd497, 0x7c40, 0x6c44, 0xc4e0, 0xffba, 0x0, 0x0);
        gbc.writeMem(0x3f6e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd497, gbc.sp());
        EXPECT(0x3f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 0399
        gbc.setState(0xc067, 0xe6bc, 0x4610, 0xa8b2, 0xa054, 0xf024, 0x1, 0x1);
        gbc.writeMem(0xc067, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe6bc, gbc.sp());
        EXPECT(0xc069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc067));
        EXPECT(0xf7, gbc.readMem(0xc068));
        // CB F7 039A
        gbc.setState(0xa13a, 0xfdb8, 0xc080, 0x680b, 0xe1b2, 0x3547, 0x1, 0x1);
        gbc.writeMem(0xa13a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfdb8, gbc.sp());
        EXPECT(0xa13c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa13a));
        EXPECT(0xf7, gbc.readMem(0xa13b));
        // CB F7 039B
        gbc.setState(0xba6a, 0x2a4d, 0x3b80, 0xc106, 0x11e3, 0xac96, 0x0, 0x0);
        gbc.writeMem(0xba6a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2a4d, gbc.sp());
        EXPECT(0xba6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba6a));
        EXPECT(0xf7, gbc.readMem(0xba6b));
        // CB F7 039C
        gbc.setState(0xbd57, 0xf47f, 0xdaa0, 0xce70, 0xb22b, 0x1ec9, 0x1, 0x0);
        gbc.writeMem(0xbd57, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf47f, gbc.sp());
        EXPECT(0xbd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd57));
        EXPECT(0xf7, gbc.readMem(0xbd58));
        // CB F7 039D
        gbc.setState(0x7487, 0x4e57, 0x9c80, 0x3378, 0xbef5, 0xe7dc, 0x0, 0x0);
        gbc.writeMem(0x7487, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4e57, gbc.sp());
        EXPECT(0x7489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 039E
        gbc.setState(0xe3b2, 0xea89, 0xdc60, 0x3f8, 0xece2, 0x97d1, 0x1, 0x1);
        gbc.writeMem(0xe3b2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xea89, gbc.sp());
        EXPECT(0xe3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b2));
        EXPECT(0xf7, gbc.readMem(0xe3b3));
        // CB F7 039F
        gbc.setState(0x9a86, 0xa978, 0x2630, 0x8f8f, 0xbbd1, 0x38c3, 0x1, 0x0);
        gbc.writeMem(0x9a86, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa978, gbc.sp());
        EXPECT(0x9a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a86));
        EXPECT(0xf7, gbc.readMem(0x9a87));
        // CB F7 03A0
        gbc.setState(0x3c79, 0xbc3b, 0x5290, 0xf3bc, 0xd253, 0xc50a, 0x1, 0x1);
        gbc.writeMem(0x3c79, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbc3b, gbc.sp());
        EXPECT(0x3c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03A1
        gbc.setState(0x1e29, 0x95b3, 0x7140, 0x4240, 0x2fda, 0x7304, 0x1, 0x1);
        gbc.writeMem(0x1e29, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x95b3, gbc.sp());
        EXPECT(0x1e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 03A2
        gbc.setState(0x4583, 0xb37b, 0x5ab0, 0x4c25, 0xcc94, 0x38aa, 0x0, 0x1);
        gbc.writeMem(0x4583, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb37b, gbc.sp());
        EXPECT(0x4585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03A3
        gbc.setState(0xab78, 0x35fa, 0x5f50, 0x3dd, 0xa64a, 0xda70, 0x0, 0x1);
        gbc.writeMem(0xab78, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x35fa, gbc.sp());
        EXPECT(0xab7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab78));
        EXPECT(0xf7, gbc.readMem(0xab79));
        // CB F7 03A4
        gbc.setState(0x6044, 0x7bca, 0xd230, 0x743c, 0x3bb5, 0xed6a, 0x0, 0x1);
        gbc.writeMem(0x6044, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7bca, gbc.sp());
        EXPECT(0x6046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03A7
        gbc.setState(0xddfb, 0xe02f, 0x5ef0, 0x7cc2, 0x1b5b, 0xc586, 0x0, 0x0);
        gbc.writeMem(0xddfb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe02f, gbc.sp());
        EXPECT(0xddfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddfb));
        EXPECT(0xf7, gbc.readMem(0xddfc));
        // CB F7 03A8
        gbc.setState(0x2a4a, 0xf43, 0xe5c0, 0x3f32, 0xb686, 0x6643, 0x1, 0x0);
        gbc.writeMem(0x2a4a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf43, gbc.sp());
        EXPECT(0x2a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 03A9
        gbc.setState(0xe17f, 0xecd2, 0xa500, 0x1a7d, 0x1fc5, 0x69a6, 0x1, 0x0);
        gbc.writeMem(0xe17f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xecd2, gbc.sp());
        EXPECT(0xe181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe17f));
        EXPECT(0xf7, gbc.readMem(0xe180));
        // CB F7 03AA
        gbc.setState(0x33d7, 0x6e53, 0xbb90, 0x78a7, 0x8b33, 0xc6bd, 0x1, 0x0);
        gbc.writeMem(0x33d7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6e53, gbc.sp());
        EXPECT(0x33d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03AB
        gbc.setState(0xd49f, 0xc869, 0xf2f0, 0x861b, 0x701a, 0x2176, 0x1, 0x0);
        gbc.writeMem(0xd49f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc869, gbc.sp());
        EXPECT(0xd4a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49f));
        EXPECT(0xf7, gbc.readMem(0xd4a0));
        // CB F7 03AC
        gbc.setState(0x63a0, 0xc769, 0x66a0, 0x6855, 0x1f1, 0xdb61, 0x0, 0x0);
        gbc.writeMem(0x63a0, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc769, gbc.sp());
        EXPECT(0x63a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 03AD
        gbc.setState(0x1764, 0xf958, 0x5aa0, 0x6db1, 0x4e9c, 0x681f, 0x1, 0x0);
        gbc.writeMem(0x1764, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf958, gbc.sp());
        EXPECT(0x1766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 03AE
        gbc.setState(0xe5e3, 0x36a6, 0x5540, 0xd2a0, 0xf10b, 0x733c, 0x0, 0x1);
        gbc.writeMem(0xe5e3, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x36a6, gbc.sp());
        EXPECT(0xe5e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e3));
        EXPECT(0xf7, gbc.readMem(0xe5e4));
        // CB F7 03AF
        gbc.setState(0xb1f9, 0x1e43, 0xa390, 0xc644, 0x9d90, 0xebcb, 0x1, 0x1);
        gbc.writeMem(0xb1f9, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1e43, gbc.sp());
        EXPECT(0xb1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f9));
        EXPECT(0xf7, gbc.readMem(0xb1fa));
        // CB F7 03B0
        gbc.setState(0x45dd, 0x4959, 0x7580, 0xe8e1, 0xb1e2, 0x5495, 0x1, 0x0);
        gbc.writeMem(0x45dd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4959, gbc.sp());
        EXPECT(0x45df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 03B1
        gbc.setState(0x6969, 0x54db, 0x1cb0, 0xc91f, 0xe9d6, 0x9abe, 0x0, 0x1);
        gbc.writeMem(0x6969, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x54db, gbc.sp());
        EXPECT(0x696b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03B2
        gbc.setState(0xc265, 0xbbb0, 0xf150, 0x9c53, 0x20ea, 0x3cf2, 0x0, 0x1);
        gbc.writeMem(0xc265, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbbb0, gbc.sp());
        EXPECT(0xc267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc265));
        EXPECT(0xf7, gbc.readMem(0xc266));
        // CB F7 03B3
        gbc.setState(0x95b2, 0xfa78, 0xebd0, 0xa688, 0x4b47, 0x844e, 0x0, 0x1);
        gbc.writeMem(0x95b2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfa78, gbc.sp());
        EXPECT(0x95b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b2));
        EXPECT(0xf7, gbc.readMem(0x95b3));
        // CB F7 03B4
        gbc.setState(0x277c, 0x61df, 0x4870, 0x486, 0x9500, 0x7841, 0x0, 0x0);
        gbc.writeMem(0x277c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x61df, gbc.sp());
        EXPECT(0x277e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03B5
        gbc.setState(0x5da6, 0x6af8, 0xc780, 0xcad, 0xa08c, 0x6fe1, 0x0, 0x0);
        gbc.writeMem(0x5da6, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6af8, gbc.sp());
        EXPECT(0x5da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 03B6
        gbc.setState(0xe103, 0xc72c, 0xf190, 0xee17, 0xc337, 0x9065, 0x1, 0x0);
        gbc.writeMem(0xe103, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc72c, gbc.sp());
        EXPECT(0xe105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe103));
        EXPECT(0xf7, gbc.readMem(0xe104));
        // CB F7 03B7
        gbc.setState(0x7f7d, 0x2df7, 0x5a30, 0xe006, 0x16e, 0xd91b, 0x0, 0x0);
        gbc.writeMem(0x7f7d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2df7, gbc.sp());
        EXPECT(0x7f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03B8
        gbc.setState(0xac4, 0x2059, 0xf5f0, 0x258f, 0x1469, 0x77db, 0x1, 0x0);
        gbc.writeMem(0xac4, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2059, gbc.sp());
        EXPECT(0xac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03B9
        gbc.setState(0xc57b, 0xd290, 0xba10, 0x527e, 0x203e, 0xdcd3, 0x0, 0x0);
        gbc.writeMem(0xc57b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd290, gbc.sp());
        EXPECT(0xc57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc57b));
        EXPECT(0xf7, gbc.readMem(0xc57c));
        // CB F7 03BA
        gbc.setState(0x852c, 0x1648, 0x1e70, 0x693c, 0x93c4, 0x8dab, 0x0, 0x1);
        gbc.writeMem(0x852c, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1648, gbc.sp());
        EXPECT(0x852e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x852c));
        EXPECT(0xf7, gbc.readMem(0x852d));
        // CB F7 03BB
        gbc.setState(0x8330, 0xc7a8, 0x8200, 0x5c22, 0x99d3, 0x4e5f, 0x1, 0x1);
        gbc.writeMem(0x8330, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc7a8, gbc.sp());
        EXPECT(0x8332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8330));
        EXPECT(0xf7, gbc.readMem(0x8331));
        // CB F7 03BC
        gbc.setState(0x3243, 0x3ae7, 0xe4d0, 0x92e6, 0xb37a, 0x15e4, 0x0, 0x1);
        gbc.writeMem(0x3243, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3ae7, gbc.sp());
        EXPECT(0x3245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03BE
        gbc.setState(0x349, 0xe69f, 0x6220, 0xb724, 0xc9bd, 0xc64c, 0x0, 0x1);
        gbc.writeMem(0x349, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe69f, gbc.sp());
        EXPECT(0x34b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 03BF
        gbc.setState(0xa1a7, 0x386f, 0x2640, 0xe248, 0x45d2, 0xd611, 0x1, 0x0);
        gbc.writeMem(0xa1a7, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x386f, gbc.sp());
        EXPECT(0xa1a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a7));
        EXPECT(0xf7, gbc.readMem(0xa1a8));
        // CB F7 03C0
        gbc.setState(0xbfa, 0xb0ca, 0x69b0, 0xe47a, 0x4d00, 0x3314, 0x0, 0x1);
        gbc.writeMem(0xbfa, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb0ca, gbc.sp());
        EXPECT(0xbfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03C1
        gbc.setState(0x6278, 0x61ad, 0x4b10, 0x6b80, 0x842e, 0x4bfa, 0x1, 0x0);
        gbc.writeMem(0x6278, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x61ad, gbc.sp());
        EXPECT(0x627a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03C2
        gbc.setState(0x208, 0x20b5, 0xcb0, 0x6268, 0xf81a, 0xe44b, 0x0, 0x1);
        gbc.writeMem(0x208, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x20b5, gbc.sp());
        EXPECT(0x20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03C3
        gbc.setState(0x7174, 0xa871, 0x19b0, 0xc4cf, 0x2014, 0xba02, 0x0, 0x0);
        gbc.writeMem(0x7174, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa871, gbc.sp());
        EXPECT(0x7176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03C5
        gbc.setState(0x7cd5, 0x9e00, 0xa7e0, 0x9db7, 0xbd62, 0x1969, 0x1, 0x0);
        gbc.writeMem(0x7cd5, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9e00, gbc.sp());
        EXPECT(0x7cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 03C6
        gbc.setState(0x8b9d, 0xbe6e, 0xa10, 0x4133, 0x31b8, 0x4e07, 0x1, 0x1);
        gbc.writeMem(0x8b9d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbe6e, gbc.sp());
        EXPECT(0x8b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b9d));
        EXPECT(0xf7, gbc.readMem(0x8b9e));
        // CB F7 03C7
        gbc.setState(0xac39, 0x8c9e, 0x9b30, 0xeaf7, 0xd224, 0x9d3d, 0x0, 0x1);
        gbc.writeMem(0xac39, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8c9e, gbc.sp());
        EXPECT(0xac3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac39));
        EXPECT(0xf7, gbc.readMem(0xac3a));
        // CB F7 03C8
        gbc.setState(0x6a35, 0x638, 0x1650, 0x29eb, 0x885a, 0x3b2f, 0x0, 0x1);
        gbc.writeMem(0x6a35, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x638, gbc.sp());
        EXPECT(0x6a37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03C9
        gbc.setState(0x16cb, 0xff7, 0x2420, 0x4394, 0x1a4c, 0x22ae, 0x0, 0x0);
        gbc.writeMem(0x16cb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xff7, gbc.sp());
        EXPECT(0x16cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 03CA
        gbc.setState(0xea58, 0x1f4f, 0x1a30, 0xbc8b, 0x3d87, 0x1d74, 0x0, 0x1);
        gbc.writeMem(0xea58, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1f4f, gbc.sp());
        EXPECT(0xea5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea58));
        EXPECT(0xf7, gbc.readMem(0xea59));
        // CB F7 03CB
        gbc.setState(0xc133, 0xe660, 0xa6d0, 0x1c80, 0x4ab5, 0x97c8, 0x0, 0x1);
        gbc.writeMem(0xc133, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe660, gbc.sp());
        EXPECT(0xc135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc133));
        EXPECT(0xf7, gbc.readMem(0xc134));
        // CB F7 03CC
        gbc.setState(0xbc6e, 0x638d, 0x9cf0, 0x89e, 0x861c, 0xb189, 0x0, 0x1);
        gbc.writeMem(0xbc6e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x638d, gbc.sp());
        EXPECT(0xbc70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc6e));
        EXPECT(0xf7, gbc.readMem(0xbc6f));
        // CB F7 03CD
        gbc.setState(0xd476, 0xafa9, 0x2590, 0x26a4, 0x36ee, 0x5ad5, 0x0, 0x1);
        gbc.writeMem(0xd476, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xafa9, gbc.sp());
        EXPECT(0xd478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd476));
        EXPECT(0xf7, gbc.readMem(0xd477));
        // CB F7 03CE
        gbc.setState(0x5c35, 0x57dc, 0xbf40, 0x19ac, 0xebbd, 0x367c, 0x0, 0x0);
        gbc.writeMem(0x5c35, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x57dc, gbc.sp());
        EXPECT(0x5c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 03CF
        gbc.setState(0xdf15, 0x2466, 0x8ac0, 0x28f1, 0xf0a6, 0x98ed, 0x1, 0x0);
        gbc.writeMem(0xdf15, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2466, gbc.sp());
        EXPECT(0xdf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf15));
        EXPECT(0xf7, gbc.readMem(0xdf16));
        // CB F7 03D0
        gbc.setState(0xe352, 0x6540, 0x20e0, 0xaf45, 0x4c96, 0xb4d, 0x0, 0x0);
        gbc.writeMem(0xe352, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6540, gbc.sp());
        EXPECT(0xe354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe352));
        EXPECT(0xf7, gbc.readMem(0xe353));
        // CB F7 03D1
        gbc.setState(0x48ab, 0x6d7f, 0x2d50, 0xfec3, 0x1581, 0xa6ac, 0x0, 0x0);
        gbc.writeMem(0x48ab, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6d7f, gbc.sp());
        EXPECT(0x48ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03D2
        gbc.setState(0xbd9b, 0xc8e6, 0x840, 0xd5a8, 0x9397, 0xbef7, 0x1, 0x1);
        gbc.writeMem(0xbd9b, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc8e6, gbc.sp());
        EXPECT(0xbd9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd9b));
        EXPECT(0xf7, gbc.readMem(0xbd9c));
        // CB F7 03D3
        gbc.setState(0x4e28, 0xabea, 0xc1f0, 0x415a, 0x7294, 0xffcd, 0x1, 0x0);
        gbc.writeMem(0x4e28, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xabea, gbc.sp());
        EXPECT(0x4e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03D4
        gbc.setState(0x3b6e, 0xcbda, 0x4770, 0xd88f, 0xb986, 0x50b9, 0x1, 0x1);
        gbc.writeMem(0x3b6e, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcbda, gbc.sp());
        EXPECT(0x3b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03D5
        gbc.setState(0x58e2, 0x820b, 0x2260, 0x9a1, 0x5e81, 0xb8e7, 0x0, 0x0);
        gbc.writeMem(0x58e2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x820b, gbc.sp());
        EXPECT(0x58e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 03D6
        gbc.setState(0xb8d1, 0xb849, 0x7cd0, 0xf776, 0x4129, 0xe77d, 0x0, 0x1);
        gbc.writeMem(0xb8d1, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb849, gbc.sp());
        EXPECT(0xb8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d1));
        EXPECT(0xf7, gbc.readMem(0xb8d2));
        // CB F7 03D7
        gbc.setState(0xed52, 0xbd04, 0x4b00, 0x51e4, 0x264d, 0x587c, 0x0, 0x0);
        gbc.writeMem(0xed52, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbd04, gbc.sp());
        EXPECT(0xed54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed52));
        EXPECT(0xf7, gbc.readMem(0xed53));
        // CB F7 03D8
        gbc.setState(0xd2bd, 0x533d, 0x52b0, 0xa863, 0x66b6, 0xfafc, 0x1, 0x1);
        gbc.writeMem(0xd2bd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x533d, gbc.sp());
        EXPECT(0xd2bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2bd));
        EXPECT(0xf7, gbc.readMem(0xd2be));
        // CB F7 03D9
        gbc.setState(0x46a, 0x2d80, 0x74f0, 0xac73, 0x182d, 0xcc20, 0x1, 0x1);
        gbc.writeMem(0x46a, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2d80, gbc.sp());
        EXPECT(0x46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03DA
        gbc.setState(0xef1f, 0x5e2e, 0x8f0, 0xd6b2, 0xdcb3, 0xd478, 0x0, 0x1);
        gbc.writeMem(0xef1f, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5e2e, gbc.sp());
        EXPECT(0xef21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef1f));
        EXPECT(0xf7, gbc.readMem(0xef20));
        // CB F7 03DB
        gbc.setState(0xc242, 0x1ae7, 0x5aa0, 0x7648, 0x7da3, 0x3f7e, 0x0, 0x1);
        gbc.writeMem(0xc242, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1ae7, gbc.sp());
        EXPECT(0xc244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc242));
        EXPECT(0xf7, gbc.readMem(0xc243));
        // CB F7 03DC
        gbc.setState(0xdbb, 0x42f3, 0x34a0, 0xcc9, 0x74e9, 0x9734, 0x1, 0x0);
        gbc.writeMem(0xdbb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x42f3, gbc.sp());
        EXPECT(0xdbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 03DE
        gbc.setState(0x9cb, 0x89e3, 0x3eb0, 0x513a, 0xdfa1, 0xe851, 0x0, 0x0);
        gbc.writeMem(0x9cb, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x89e3, gbc.sp());
        EXPECT(0x9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03DF
        gbc.setState(0x14d, 0xba46, 0x9ff0, 0x2703, 0x4957, 0xb8ed, 0x0, 0x0);
        gbc.writeMem(0x14d, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xba46, gbc.sp());
        EXPECT(0x14f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03E0
        gbc.setState(0xc812, 0x8f32, 0x3f10, 0x4928, 0x764d, 0x173a, 0x1, 0x0);
        gbc.writeMem(0xc812, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8f32, gbc.sp());
        EXPECT(0xc814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc812));
        EXPECT(0xf7, gbc.readMem(0xc813));
        // CB F7 03E1
        gbc.setState(0xef09, 0xf810, 0x8480, 0x7fc2, 0x483c, 0xe946, 0x0, 0x0);
        gbc.writeMem(0xef09, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf810, gbc.sp());
        EXPECT(0xef0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef09));
        EXPECT(0xf7, gbc.readMem(0xef0a));
        // CB F7 03E2
        gbc.setState(0x2961, 0x5a0c, 0xb50, 0x3469, 0xaec2, 0x2cbf, 0x0, 0x1);
        gbc.writeMem(0x2961, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5a0c, gbc.sp());
        EXPECT(0x2963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03E3
        gbc.setState(0x6377, 0x12c5, 0x42f0, 0x8dcd, 0x6032, 0x2b70, 0x0, 0x0);
        gbc.writeMem(0x6377, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x12c5, gbc.sp());
        EXPECT(0x6379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F7 03E4
        gbc.setState(0x99d2, 0xd704, 0x4ff0, 0x5a64, 0xf5c7, 0xc8d2, 0x0, 0x0);
        gbc.writeMem(0x99d2, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd704, gbc.sp());
        EXPECT(0x99d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d2));
        EXPECT(0xf7, gbc.readMem(0x99d3));
        // CB F7 03E5
        gbc.setState(0x23ae, 0xead1, 0xd3a0, 0xad43, 0xb88a, 0xf58d, 0x1, 0x1);
        gbc.writeMem(0x23ae, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xead1, gbc.sp());
        EXPECT(0x23b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F7 03E6
        gbc.setState(0xa2fd, 0x49cf, 0xa960, 0x5130, 0xf3cf, 0xf7c2, 0x0, 0x1);
        gbc.writeMem(0xa2fd, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x49cf, gbc.sp());
        EXPECT(0xa2ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2fd));
        EXPECT(0xf7, gbc.readMem(0xa2fe));
        // CB F7 03E7
        gbc.setState(0x3251, 0x92a7, 0x3940, 0x2ec1, 0x83a9, 0xa595, 0x0, 0x0);
        gbc.writeMem(0x3251, { 0xcb, 0xf7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x92a7, gbc.sp());
        EXPECT(0x3253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
