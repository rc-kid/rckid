    TEST(gbcemu, opcode_cb_d6) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB D6 0001
        gbc.setState(0x6cca, 0x1337, 0x3870, 0xf541, 0xedf0, 0x8969, 0x1, 0x1);
        gbc.writeMem(0x6cca, { 0xcb, 0xd6 });
        gbc.writeMem(0x8969, { 0xc3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1337, gbc.sp());
        EXPECT(0x6ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x8969));
        // CB D6 0002
        gbc.setState(0xef69, 0x1dee, 0x8450, 0xa4d8, 0x668b, 0x884e, 0x1, 0x1);
        gbc.writeMem(0x884e, { 0xe7 });
        gbc.writeMem(0xef69, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1dee, gbc.sp());
        EXPECT(0xef6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x884e));
        EXPECT(0xcb, gbc.readMem(0xef69));
        EXPECT(0xd6, gbc.readMem(0xef6a));
        // CB D6 0003
        gbc.setState(0x5fec, 0xef63, 0x9e80, 0xd082, 0x497, 0x2d5c, 0x1, 0x0);
        gbc.writeMem(0x2d5c, { 0x5d });
        gbc.writeMem(0x5fec, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xef63, gbc.sp());
        EXPECT(0x5fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0004
        gbc.setState(0x5543, 0x58bb, 0xd8e0, 0xf82f, 0x761b, 0x1f9, 0x0, 0x0);
        gbc.writeMem(0x1f9, { 0xb4 });
        gbc.writeMem(0x5543, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x58bb, gbc.sp());
        EXPECT(0x5545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0005
        gbc.setState(0x7e9a, 0x5c09, 0xb6e0, 0x8b7b, 0xc93c, 0x8f62, 0x1, 0x1);
        gbc.writeMem(0x7e9a, { 0xcb, 0xd6 });
        gbc.writeMem(0x8f62, { 0x7e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5c09, gbc.sp());
        EXPECT(0x7e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8f62));
        // CB D6 0006
        gbc.setState(0xdcf8, 0xeb7a, 0xa0e0, 0x7f22, 0x500c, 0x84b8, 0x1, 0x1);
        gbc.writeMem(0x84b8, { 0x5b });
        gbc.writeMem(0xdcf8, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xeb7a, gbc.sp());
        EXPECT(0xdcfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x84b8));
        EXPECT(0xcb, gbc.readMem(0xdcf8));
        EXPECT(0xd6, gbc.readMem(0xdcf9));
        // CB D6 0007
        gbc.setState(0x64a1, 0xa499, 0x5700, 0x102, 0xe37a, 0xbcd5, 0x0, 0x1);
        gbc.writeMem(0x64a1, { 0xcb, 0xd6 });
        gbc.writeMem(0xbcd5, { 0xb5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa499, gbc.sp());
        EXPECT(0x64a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xbcd5));
        // CB D6 0008
        gbc.setState(0x4678, 0x8ce1, 0x7b0, 0xff9d, 0xcd59, 0xd237, 0x1, 0x1);
        gbc.writeMem(0x4678, { 0xcb, 0xd6 });
        gbc.writeMem(0xd237, { 0x5b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8ce1, gbc.sp());
        EXPECT(0x467a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xd237));
        // CB D6 0009
        gbc.setState(0xcb4b, 0x1d82, 0x42e0, 0x2cdb, 0xd810, 0x59f0, 0x1, 0x0);
        gbc.writeMem(0x59f0, { 0x7 });
        gbc.writeMem(0xcb4b, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1d82, gbc.sp());
        EXPECT(0xcb4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4b));
        EXPECT(0xd6, gbc.readMem(0xcb4c));
        // CB D6 000A
        gbc.setState(0xa762, 0x553, 0xb8a0, 0xf0bb, 0x1aba, 0x807e, 0x0, 0x1);
        gbc.writeMem(0x807e, { 0x31 });
        gbc.writeMem(0xa762, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x553, gbc.sp());
        EXPECT(0xa764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x807e));
        EXPECT(0xcb, gbc.readMem(0xa762));
        EXPECT(0xd6, gbc.readMem(0xa763));
        // CB D6 000B
        gbc.setState(0x4d09, 0x5a59, 0x9bd0, 0xe4c6, 0x491f, 0xcb18, 0x1, 0x0);
        gbc.writeMem(0x4d09, { 0xcb, 0xd6 });
        gbc.writeMem(0xcb18, { 0xe1 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5a59, gbc.sp());
        EXPECT(0x4d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xcb18));
        // CB D6 000C
        gbc.setState(0x10b1, 0x4e20, 0x4750, 0x4f55, 0x7755, 0xf42, 0x0, 0x0);
        gbc.writeMem(0xf42, { 0x94 });
        gbc.writeMem(0x10b1, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4e20, gbc.sp());
        EXPECT(0x10b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 000E
        gbc.setState(0x4cb0, 0x83b3, 0xb250, 0xf7ce, 0x5c63, 0xf610, 0x0, 0x1);
        gbc.writeMem(0x4cb0, { 0xcb, 0xd6 });
        gbc.writeMem(0xf610, { 0xc8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x83b3, gbc.sp());
        EXPECT(0x4cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xf610));
        // CB D6 0010
        gbc.setState(0xbaa1, 0xdfac, 0xabb0, 0x1032, 0x5171, 0xf438, 0x0, 0x0);
        gbc.writeMem(0xbaa1, { 0xcb, 0xd6 });
        gbc.writeMem(0xf438, { 0xfb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdfac, gbc.sp());
        EXPECT(0xbaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa1));
        EXPECT(0xd6, gbc.readMem(0xbaa2));
        EXPECT(0xff, gbc.readMem(0xf438));
        // CB D6 0011
        gbc.setState(0xd37e, 0xc42a, 0x3720, 0x8450, 0x7c06, 0x5fab, 0x0, 0x0);
        gbc.writeMem(0x5fab, { 0x2d });
        gbc.writeMem(0xd37e, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc42a, gbc.sp());
        EXPECT(0xd380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37e));
        EXPECT(0xd6, gbc.readMem(0xd37f));
        // CB D6 0013
        gbc.setState(0x39b1, 0xbff0, 0x6070, 0x48ed, 0xa62e, 0xe176, 0x1, 0x1);
        gbc.writeMem(0x39b1, { 0xcb, 0xd6 });
        gbc.writeMem(0xe176, { 0xdf });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbff0, gbc.sp());
        EXPECT(0x39b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xe176));
        // CB D6 0014
        gbc.setState(0x2061, 0x26a5, 0xc570, 0x31cd, 0xbcc2, 0xab32, 0x1, 0x1);
        gbc.writeMem(0x2061, { 0xcb, 0xd6 });
        gbc.writeMem(0xab32, { 0xfe });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x26a5, gbc.sp());
        EXPECT(0x2063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xab32));
        // CB D6 0015
        gbc.setState(0x4374, 0xa5f9, 0x9830, 0xb313, 0xb43b, 0x15ff, 0x0, 0x0);
        gbc.writeMem(0x15ff, { 0xfe });
        gbc.writeMem(0x4374, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa5f9, gbc.sp());
        EXPECT(0x4376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0016
        gbc.setState(0x8a48, 0x361e, 0x47b0, 0x934, 0x5d90, 0xd419, 0x1, 0x1);
        gbc.writeMem(0x8a48, { 0xcb, 0xd6 });
        gbc.writeMem(0xd419, { 0x69 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x361e, gbc.sp());
        EXPECT(0x8a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a48));
        EXPECT(0xd6, gbc.readMem(0x8a49));
        EXPECT(0x6d, gbc.readMem(0xd419));
        // CB D6 0017
        gbc.setState(0xa870, 0x1303, 0xa4e0, 0x7c31, 0xef89, 0xce85, 0x0, 0x1);
        gbc.writeMem(0xa870, { 0xcb, 0xd6 });
        gbc.writeMem(0xce85, { 0x2d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1303, gbc.sp());
        EXPECT(0xa872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa870));
        EXPECT(0xd6, gbc.readMem(0xa871));
        EXPECT(0x2d, gbc.readMem(0xce85));
        // CB D6 0018
        gbc.setState(0x1bf, 0x3270, 0x7690, 0x22b9, 0x1c32, 0xa265, 0x0, 0x1);
        gbc.writeMem(0x1bf, { 0xcb, 0xd6 });
        gbc.writeMem(0xa265, { 0xb5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3270, gbc.sp());
        EXPECT(0x1c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa265));
        // CB D6 001C
        gbc.setState(0xdbb1, 0xdfd5, 0x8580, 0x819d, 0x8322, 0xc754, 0x0, 0x0);
        gbc.writeMem(0xc754, { 0x43 });
        gbc.writeMem(0xdbb1, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdfd5, gbc.sp());
        EXPECT(0xdbb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc754));
        EXPECT(0xcb, gbc.readMem(0xdbb1));
        EXPECT(0xd6, gbc.readMem(0xdbb2));
        // CB D6 001D
        gbc.setState(0x74c3, 0xef63, 0x9800, 0x8fc2, 0x1825, 0xc0a0, 0x0, 0x0);
        gbc.writeMem(0x74c3, { 0xcb, 0xd6 });
        gbc.writeMem(0xc0a0, { 0x33 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xef63, gbc.sp());
        EXPECT(0x74c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc0a0));
        // CB D6 001E
        gbc.setState(0x9c64, 0x61c7, 0x5fe0, 0x5105, 0x1802, 0xf6c3, 0x1, 0x1);
        gbc.writeMem(0x9c64, { 0xcb, 0xd6 });
        gbc.writeMem(0xf6c3, { 0x44 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x61c7, gbc.sp());
        EXPECT(0x9c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c64));
        EXPECT(0xd6, gbc.readMem(0x9c65));
        EXPECT(0x44, gbc.readMem(0xf6c3));
        // CB D6 0022
        gbc.setState(0x55c2, 0x2646, 0xcf0, 0x1afc, 0x6868, 0x4e51, 0x0, 0x0);
        gbc.writeMem(0x4e51, { 0x1e });
        gbc.writeMem(0x55c2, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2646, gbc.sp());
        EXPECT(0x55c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0024
        gbc.setState(0xae1f, 0xf43a, 0xd30, 0x485f, 0x8a47, 0x3e3f, 0x1, 0x0);
        gbc.writeMem(0x3e3f, { 0xef });
        gbc.writeMem(0xae1f, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf43a, gbc.sp());
        EXPECT(0xae21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae1f));
        EXPECT(0xd6, gbc.readMem(0xae20));
        // CB D6 0026
        gbc.setState(0x6e59, 0x6e9, 0x5c60, 0xdf5d, 0x363e, 0x95a6, 0x0, 0x1);
        gbc.writeMem(0x6e59, { 0xcb, 0xd6 });
        gbc.writeMem(0x95a6, { 0xec });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6e9, gbc.sp());
        EXPECT(0x6e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x95a6));
        // CB D6 0028
        gbc.setState(0x663e, 0x78d8, 0x5470, 0xed8e, 0xf6a4, 0x903b, 0x1, 0x1);
        gbc.writeMem(0x663e, { 0xcb, 0xd6 });
        gbc.writeMem(0x903b, { 0xd6 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x78d8, gbc.sp());
        EXPECT(0x6640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x903b));
        // CB D6 0029
        gbc.setState(0xc306, 0x58f0, 0x3540, 0x4818, 0x744c, 0xbb0e, 0x0, 0x0);
        gbc.writeMem(0xbb0e, { 0xc });
        gbc.writeMem(0xc306, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x58f0, gbc.sp());
        EXPECT(0xc308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbb0e));
        EXPECT(0xcb, gbc.readMem(0xc306));
        EXPECT(0xd6, gbc.readMem(0xc307));
        // CB D6 002B
        gbc.setState(0x7c97, 0x16db, 0x6450, 0x94c1, 0x1f5f, 0xb92b, 0x0, 0x1);
        gbc.writeMem(0x7c97, { 0xcb, 0xd6 });
        gbc.writeMem(0xb92b, { 0x9e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x16db, gbc.sp());
        EXPECT(0x7c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb92b));
        // CB D6 002D
        gbc.setState(0x4ca8, 0x7f79, 0x15d0, 0xe416, 0xe914, 0xa082, 0x1, 0x0);
        gbc.writeMem(0x4ca8, { 0xcb, 0xd6 });
        gbc.writeMem(0xa082, { 0xa4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7f79, gbc.sp());
        EXPECT(0x4caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa082));
        // CB D6 002E
        gbc.setState(0xad02, 0x76bc, 0xb980, 0xe58a, 0xe14f, 0xf3a8, 0x0, 0x1);
        gbc.writeMem(0xad02, { 0xcb, 0xd6 });
        gbc.writeMem(0xf3a8, { 0xc0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x76bc, gbc.sp());
        EXPECT(0xad04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad02));
        EXPECT(0xd6, gbc.readMem(0xad03));
        EXPECT(0xc4, gbc.readMem(0xf3a8));
        // CB D6 002F
        gbc.setState(0x93f4, 0x3575, 0xde20, 0xb90b, 0x3a95, 0xadb3, 0x1, 0x0);
        gbc.writeMem(0x93f4, { 0xcb, 0xd6 });
        gbc.writeMem(0xadb3, { 0x6b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3575, gbc.sp());
        EXPECT(0x93f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f4));
        EXPECT(0xd6, gbc.readMem(0x93f5));
        EXPECT(0x6f, gbc.readMem(0xadb3));
        // CB D6 0030
        gbc.setState(0xdeb2, 0x4d67, 0x3ea0, 0x419d, 0x38bb, 0xb8e, 0x0, 0x0);
        gbc.writeMem(0xb8e, { 0x55 });
        gbc.writeMem(0xdeb2, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4d67, gbc.sp());
        EXPECT(0xdeb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb2));
        EXPECT(0xd6, gbc.readMem(0xdeb3));
        // CB D6 0031
        gbc.setState(0x7e10, 0x3876, 0x840, 0xf3be, 0x78bb, 0xc85, 0x1, 0x1);
        gbc.writeMem(0xc85, { 0x2f });
        gbc.writeMem(0x7e10, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3876, gbc.sp());
        EXPECT(0x7e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0032
        gbc.setState(0x3ef9, 0xbecc, 0x3f30, 0x4384, 0x64a6, 0x1cf7, 0x1, 0x0);
        gbc.writeMem(0x1cf7, { 0xdd });
        gbc.writeMem(0x3ef9, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbecc, gbc.sp());
        EXPECT(0x3efb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0033
        gbc.setState(0x2408, 0x1aa8, 0x7a0, 0x1bd1, 0xdee9, 0xa863, 0x1, 0x1);
        gbc.writeMem(0x2408, { 0xcb, 0xd6 });
        gbc.writeMem(0xa863, { 0x6f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1aa8, gbc.sp());
        EXPECT(0x240a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa863));
        // CB D6 0034
        gbc.setState(0x1dd7, 0x9e04, 0xf0d0, 0xc68e, 0xe1b5, 0x4e0, 0x1, 0x0);
        gbc.writeMem(0x4e0, { 0xc7 });
        gbc.writeMem(0x1dd7, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9e04, gbc.sp());
        EXPECT(0x1dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0037
        gbc.setState(0x39a9, 0xf3b8, 0x80d0, 0x8557, 0x27ff, 0x80da, 0x1, 0x1);
        gbc.writeMem(0x39a9, { 0xcb, 0xd6 });
        gbc.writeMem(0x80da, { 0x19 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf3b8, gbc.sp());
        EXPECT(0x39ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x80da));
        // CB D6 0039
        gbc.setState(0xa785, 0xbc76, 0x96e0, 0x2bb1, 0x64c7, 0x22b1, 0x0, 0x0);
        gbc.writeMem(0x22b1, { 0x75 });
        gbc.writeMem(0xa785, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbc76, gbc.sp());
        EXPECT(0xa787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa785));
        EXPECT(0xd6, gbc.readMem(0xa786));
        // CB D6 003E
        gbc.setState(0xd9f3, 0xbdde, 0xb20, 0x8242, 0xb9f9, 0x8a46, 0x0, 0x1);
        gbc.writeMem(0x8a46, { 0xa5 });
        gbc.writeMem(0xd9f3, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbdde, gbc.sp());
        EXPECT(0xd9f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x8a46));
        EXPECT(0xcb, gbc.readMem(0xd9f3));
        EXPECT(0xd6, gbc.readMem(0xd9f4));
        // CB D6 003F
        gbc.setState(0x883d, 0xb4cd, 0xbfe0, 0x233b, 0xd838, 0xba2b, 0x1, 0x0);
        gbc.writeMem(0x883d, { 0xcb, 0xd6 });
        gbc.writeMem(0xba2b, { 0x37 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb4cd, gbc.sp());
        EXPECT(0x883f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x883d));
        EXPECT(0xd6, gbc.readMem(0x883e));
        EXPECT(0x37, gbc.readMem(0xba2b));
        // CB D6 0040
        gbc.setState(0xacdc, 0x5bd7, 0x50a0, 0x4e5a, 0x6b25, 0x384e, 0x0, 0x1);
        gbc.writeMem(0x384e, { 0xac });
        gbc.writeMem(0xacdc, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5bd7, gbc.sp());
        EXPECT(0xacde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacdc));
        EXPECT(0xd6, gbc.readMem(0xacdd));
        // CB D6 0041
        gbc.setState(0xe8ba, 0xba2c, 0xa6c0, 0xd5b, 0xc1fc, 0xb0fc, 0x1, 0x1);
        gbc.writeMem(0xb0fc, { 0xaf });
        gbc.writeMem(0xe8ba, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xba2c, gbc.sp());
        EXPECT(0xe8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xb0fc));
        EXPECT(0xcb, gbc.readMem(0xe8ba));
        EXPECT(0xd6, gbc.readMem(0xe8bb));
        // CB D6 0044
        gbc.setState(0xdf0b, 0xf55, 0x1b10, 0x17d7, 0xa066, 0xf565, 0x1, 0x1);
        gbc.writeMem(0xdf0b, { 0xcb, 0xd6 });
        gbc.writeMem(0xf565, { 0x3b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf55, gbc.sp());
        EXPECT(0xdf0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf0b));
        EXPECT(0xd6, gbc.readMem(0xdf0c));
        EXPECT(0x3f, gbc.readMem(0xf565));
        // CB D6 0045
        gbc.setState(0xcf4f, 0x21e1, 0x1820, 0x795f, 0xa139, 0x982e, 0x1, 0x1);
        gbc.writeMem(0x982e, { 0xef });
        gbc.writeMem(0xcf4f, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x21e1, gbc.sp());
        EXPECT(0xcf51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x982e));
        EXPECT(0xcb, gbc.readMem(0xcf4f));
        EXPECT(0xd6, gbc.readMem(0xcf50));
        // CB D6 0046
        gbc.setState(0x6e3d, 0x87c9, 0x3470, 0xd31f, 0xbf95, 0x9f1c, 0x1, 0x0);
        gbc.writeMem(0x6e3d, { 0xcb, 0xd6 });
        gbc.writeMem(0x9f1c, { 0x89 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x87c9, gbc.sp());
        EXPECT(0x6e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9f1c));
        // CB D6 0049
        gbc.setState(0xa323, 0xb80a, 0x2f00, 0xefba, 0x56a, 0xc7ef, 0x1, 0x1);
        gbc.writeMem(0xa323, { 0xcb, 0xd6 });
        gbc.writeMem(0xc7ef, { 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb80a, gbc.sp());
        EXPECT(0xa325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa323));
        EXPECT(0xd6, gbc.readMem(0xa324));
        EXPECT(0x2f, gbc.readMem(0xc7ef));
        // CB D6 004F
        gbc.setState(0x86e7, 0x461a, 0x2940, 0x8eab, 0x4617, 0x705d, 0x0, 0x0);
        gbc.writeMem(0x705d, { 0x2f });
        gbc.writeMem(0x86e7, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x461a, gbc.sp());
        EXPECT(0x86e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e7));
        EXPECT(0xd6, gbc.readMem(0x86e8));
        // CB D6 0050
        gbc.setState(0x7feb, 0xb6e8, 0xa590, 0x721, 0xf670, 0xdadd, 0x0, 0x0);
        gbc.writeMem(0x7feb, { 0xcb, 0xd6 });
        gbc.writeMem(0xdadd, { 0x40 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb6e8, gbc.sp());
        EXPECT(0x7fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdadd));
        // CB D6 0051
        gbc.setState(0xd092, 0x72d1, 0xa00, 0xcaca, 0xb886, 0x92bb, 0x1, 0x0);
        gbc.writeMem(0x92bb, { 0x71 });
        gbc.writeMem(0xd092, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x72d1, gbc.sp());
        EXPECT(0xd094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x92bb));
        EXPECT(0xcb, gbc.readMem(0xd092));
        EXPECT(0xd6, gbc.readMem(0xd093));
        // CB D6 0054
        gbc.setState(0x73a1, 0xe479, 0xe190, 0x4a36, 0x1fd6, 0x36d8, 0x0, 0x1);
        gbc.writeMem(0x36d8, { 0xb7 });
        gbc.writeMem(0x73a1, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe479, gbc.sp());
        EXPECT(0x73a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0056
        gbc.setState(0x7e99, 0x7ab9, 0xc3a0, 0xe308, 0xf320, 0x3f76, 0x0, 0x0);
        gbc.writeMem(0x3f76, { 0x7f });
        gbc.writeMem(0x7e99, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7ab9, gbc.sp());
        EXPECT(0x7e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0057
        gbc.setState(0x6e0f, 0x508c, 0xe210, 0x1ae3, 0x3c89, 0x1109, 0x0, 0x1);
        gbc.writeMem(0x1109, { 0x7 });
        gbc.writeMem(0x6e0f, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x508c, gbc.sp());
        EXPECT(0x6e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0058
        gbc.setState(0x984a, 0xbd65, 0xcd60, 0xb9e1, 0x928a, 0xee0f, 0x1, 0x1);
        gbc.writeMem(0x984a, { 0xcb, 0xd6 });
        gbc.writeMem(0xee0f, { 0x8e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbd65, gbc.sp());
        EXPECT(0x984c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984a));
        EXPECT(0xd6, gbc.readMem(0x984b));
        EXPECT(0x8e, gbc.readMem(0xee0f));
        // CB D6 0059
        gbc.setState(0x7b76, 0xa51a, 0x5430, 0x80ea, 0xae78, 0xe7a0, 0x0, 0x1);
        gbc.writeMem(0x7b76, { 0xcb, 0xd6 });
        gbc.writeMem(0xe7a0, { 0xe });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa51a, gbc.sp());
        EXPECT(0x7b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe7a0));
        // CB D6 005A
        gbc.setState(0xd734, 0x2ca5, 0xf070, 0x3e5a, 0xcb7b, 0x85b9, 0x1, 0x0);
        gbc.writeMem(0x85b9, { 0xba });
        gbc.writeMem(0xd734, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2ca5, gbc.sp());
        EXPECT(0xd736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x85b9));
        EXPECT(0xcb, gbc.readMem(0xd734));
        EXPECT(0xd6, gbc.readMem(0xd735));
        // CB D6 005B
        gbc.setState(0x2c36, 0xa967, 0x6f90, 0xf95f, 0xabdc, 0xce31, 0x0, 0x1);
        gbc.writeMem(0x2c36, { 0xcb, 0xd6 });
        gbc.writeMem(0xce31, { 0xc9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa967, gbc.sp());
        EXPECT(0x2c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xce31));
        // CB D6 005D
        gbc.setState(0xb982, 0x2a83, 0x270, 0xbfb7, 0xd6e1, 0xfb44, 0x1, 0x0);
        gbc.writeMem(0xb982, { 0xcb, 0xd6 });
        gbc.writeMem(0xfb44, { 0xbf });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2a83, gbc.sp());
        EXPECT(0xb984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb982));
        EXPECT(0xd6, gbc.readMem(0xb983));
        EXPECT(0xbf, gbc.readMem(0xfb44));
        // CB D6 005E
        gbc.setState(0x8488, 0x491f, 0xb7b0, 0x180b, 0x7d0d, 0x3f9b, 0x1, 0x0);
        gbc.writeMem(0x3f9b, { 0x46 });
        gbc.writeMem(0x8488, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x491f, gbc.sp());
        EXPECT(0x848a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8488));
        EXPECT(0xd6, gbc.readMem(0x8489));
        // CB D6 005F
        gbc.setState(0xdd66, 0xdb1c, 0x2c70, 0xc3c1, 0x3e9d, 0xc2e1, 0x0, 0x0);
        gbc.writeMem(0xc2e1, { 0x8 });
        gbc.writeMem(0xdd66, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdb1c, gbc.sp());
        EXPECT(0xdd68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc2e1));
        EXPECT(0xcb, gbc.readMem(0xdd66));
        EXPECT(0xd6, gbc.readMem(0xdd67));
        // CB D6 0061
        gbc.setState(0x2fc0, 0x13e3, 0x7470, 0x22f4, 0xd493, 0x7a33, 0x1, 0x0);
        gbc.writeMem(0x2fc0, { 0xcb, 0xd6 });
        gbc.writeMem(0x7a33, { 0x3e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x13e3, gbc.sp());
        EXPECT(0x2fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0062
        gbc.setState(0x54ed, 0xb4b0, 0x28c0, 0xe42d, 0x5057, 0x8fee, 0x1, 0x0);
        gbc.writeMem(0x54ed, { 0xcb, 0xd6 });
        gbc.writeMem(0x8fee, { 0x71 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb4b0, gbc.sp());
        EXPECT(0x54ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8fee));
        // CB D6 0063
        gbc.setState(0xb51, 0xd31e, 0xa530, 0x4779, 0xb1c7, 0xb64e, 0x1, 0x0);
        gbc.writeMem(0xb51, { 0xcb, 0xd6 });
        gbc.writeMem(0xb64e, { 0x76 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd31e, gbc.sp());
        EXPECT(0xb53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb64e));
        // CB D6 0064
        gbc.setState(0xc634, 0x8f86, 0x2f60, 0xefc7, 0xdc81, 0xa02, 0x1, 0x1);
        gbc.writeMem(0xa02, { 0xef });
        gbc.writeMem(0xc634, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8f86, gbc.sp());
        EXPECT(0xc636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc634));
        EXPECT(0xd6, gbc.readMem(0xc635));
        // CB D6 0065
        gbc.setState(0x7e9c, 0xdd54, 0xc980, 0x8075, 0xa52c, 0x3e9a, 0x0, 0x0);
        gbc.writeMem(0x3e9a, { 0xe4 });
        gbc.writeMem(0x7e9c, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdd54, gbc.sp());
        EXPECT(0x7e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0067
        gbc.setState(0xea9e, 0xeb0f, 0x4110, 0x7772, 0xb7d1, 0x3357, 0x0, 0x1);
        gbc.writeMem(0x3357, { 0x36 });
        gbc.writeMem(0xea9e, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xeb0f, gbc.sp());
        EXPECT(0xeaa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea9e));
        EXPECT(0xd6, gbc.readMem(0xea9f));
        // CB D6 0069
        gbc.setState(0x5389, 0xf0ec, 0xfd30, 0x10dc, 0x8902, 0xa420, 0x0, 0x0);
        gbc.writeMem(0x5389, { 0xcb, 0xd6 });
        gbc.writeMem(0xa420, { 0xf5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf0ec, gbc.sp());
        EXPECT(0x538b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xa420));
        // CB D6 006A
        gbc.setState(0xcb2b, 0x82df, 0xeaa0, 0x12e4, 0x1950, 0x23ce, 0x1, 0x1);
        gbc.writeMem(0x23ce, { 0x24 });
        gbc.writeMem(0xcb2b, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x82df, gbc.sp());
        EXPECT(0xcb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2b));
        EXPECT(0xd6, gbc.readMem(0xcb2c));
        // CB D6 006B
        gbc.setState(0xdc99, 0x29dd, 0x9330, 0xc945, 0x9f32, 0x803c, 0x0, 0x0);
        gbc.writeMem(0x803c, { 0xbd });
        gbc.writeMem(0xdc99, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x29dd, gbc.sp());
        EXPECT(0xdc9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x803c));
        EXPECT(0xcb, gbc.readMem(0xdc99));
        EXPECT(0xd6, gbc.readMem(0xdc9a));
        // CB D6 006D
        gbc.setState(0x4464, 0xd296, 0x78a0, 0xca04, 0x92e2, 0xb55a, 0x0, 0x0);
        gbc.writeMem(0x4464, { 0xcb, 0xd6 });
        gbc.writeMem(0xb55a, { 0x2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd296, gbc.sp());
        EXPECT(0x4466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb55a));
        // CB D6 006E
        gbc.setState(0xd513, 0x7043, 0x4260, 0xa281, 0x50b3, 0xfb5e, 0x0, 0x0);
        gbc.writeMem(0xd513, { 0xcb, 0xd6 });
        gbc.writeMem(0xfb5e, { 0x96 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7043, gbc.sp());
        EXPECT(0xd515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd513));
        EXPECT(0xd6, gbc.readMem(0xd514));
        EXPECT(0x96, gbc.readMem(0xfb5e));
        // CB D6 006F
        gbc.setState(0x7cb, 0x6cb1, 0x82c0, 0x7827, 0xee6a, 0x918c, 0x1, 0x0);
        gbc.writeMem(0x7cb, { 0xcb, 0xd6 });
        gbc.writeMem(0x918c, { 0xd3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6cb1, gbc.sp());
        EXPECT(0x7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x918c));
        // CB D6 0070
        gbc.setState(0x83e2, 0xd58d, 0x3e0, 0x3bc8, 0xc2fc, 0x162f, 0x1, 0x1);
        gbc.writeMem(0x162f, { 0xee });
        gbc.writeMem(0x83e2, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd58d, gbc.sp());
        EXPECT(0x83e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e2));
        EXPECT(0xd6, gbc.readMem(0x83e3));
        // CB D6 0072
        gbc.setState(0xe872, 0xa82, 0x13a0, 0xff51, 0x7f08, 0xb81b, 0x1, 0x0);
        gbc.writeMem(0xb81b, { 0xf0 });
        gbc.writeMem(0xe872, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa82, gbc.sp());
        EXPECT(0xe874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xb81b));
        EXPECT(0xcb, gbc.readMem(0xe872));
        EXPECT(0xd6, gbc.readMem(0xe873));
        // CB D6 0073
        gbc.setState(0x6d6b, 0xf180, 0x2720, 0x74a1, 0x3716, 0x111c, 0x1, 0x0);
        gbc.writeMem(0x111c, { 0xac });
        gbc.writeMem(0x6d6b, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf180, gbc.sp());
        EXPECT(0x6d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0074
        gbc.setState(0x10c5, 0xe9ea, 0x1230, 0x4468, 0xd01e, 0x9852, 0x1, 0x0);
        gbc.writeMem(0x10c5, { 0xcb, 0xd6 });
        gbc.writeMem(0x9852, { 0xa3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe9ea, gbc.sp());
        EXPECT(0x10c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9852));
        // CB D6 0075
        gbc.setState(0x701a, 0xf45, 0x9300, 0xe6c3, 0xd6e8, 0x7de5, 0x1, 0x1);
        gbc.writeMem(0x701a, { 0xcb, 0xd6 });
        gbc.writeMem(0x7de5, { 0x26 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf45, gbc.sp());
        EXPECT(0x701c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0077
        gbc.setState(0x4181, 0x7cbf, 0xd360, 0xdd22, 0x5132, 0xa5a8, 0x0, 0x1);
        gbc.writeMem(0x4181, { 0xcb, 0xd6 });
        gbc.writeMem(0xa5a8, { 0x43 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7cbf, gbc.sp());
        EXPECT(0x4183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa5a8));
        // CB D6 0078
        gbc.setState(0x9335, 0x6b5f, 0x43e0, 0x5728, 0xe4cf, 0xf82e, 0x0, 0x0);
        gbc.writeMem(0x9335, { 0xcb, 0xd6 });
        gbc.writeMem(0xf82e, { 0x72 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6b5f, gbc.sp());
        EXPECT(0x9337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9335));
        EXPECT(0xd6, gbc.readMem(0x9336));
        EXPECT(0x76, gbc.readMem(0xf82e));
        // CB D6 007A
        gbc.setState(0x6403, 0x1963, 0x1da0, 0x2bdf, 0x4629, 0xdc07, 0x1, 0x1);
        gbc.writeMem(0x6403, { 0xcb, 0xd6 });
        gbc.writeMem(0xdc07, { 0x8f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1963, gbc.sp());
        EXPECT(0x6405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdc07));
        // CB D6 007B
        gbc.setState(0x3622, 0x74d1, 0x5630, 0x7c25, 0x1598, 0xdb92, 0x0, 0x0);
        gbc.writeMem(0x3622, { 0xcb, 0xd6 });
        gbc.writeMem(0xdb92, { 0xc4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x74d1, gbc.sp());
        EXPECT(0x3624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xdb92));
        // CB D6 007C
        gbc.setState(0xeab5, 0xad0c, 0x9a40, 0xf53f, 0x6119, 0xedde, 0x0, 0x0);
        gbc.writeMem(0xeab5, { 0xcb, 0xd6 });
        gbc.writeMem(0xedde, { 0x1e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xad0c, gbc.sp());
        EXPECT(0xeab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab5));
        EXPECT(0xd6, gbc.readMem(0xeab6));
        EXPECT(0x1e, gbc.readMem(0xedde));
        // CB D6 007D
        gbc.setState(0x7239, 0x56fe, 0xaef0, 0xaba7, 0x9adb, 0xfb85, 0x1, 0x0);
        gbc.writeMem(0x7239, { 0xcb, 0xd6 });
        gbc.writeMem(0xfb85, { 0x4f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x56fe, gbc.sp());
        EXPECT(0x723b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xfb85));
        // CB D6 007E
        gbc.setState(0x5481, 0x3ae9, 0x8580, 0xbe8e, 0xd7a0, 0xbe30, 0x1, 0x0);
        gbc.writeMem(0x5481, { 0xcb, 0xd6 });
        gbc.writeMem(0xbe30, { 0xfc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3ae9, gbc.sp());
        EXPECT(0x5483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xbe30));
        // CB D6 007F
        gbc.setState(0xb81a, 0x5a6e, 0xc160, 0x7e0f, 0xaf18, 0x9ab4, 0x0, 0x0);
        gbc.writeMem(0x9ab4, { 0x80 });
        gbc.writeMem(0xb81a, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5a6e, gbc.sp());
        EXPECT(0xb81c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x9ab4));
        EXPECT(0xcb, gbc.readMem(0xb81a));
        EXPECT(0xd6, gbc.readMem(0xb81b));
        // CB D6 0082
        gbc.setState(0x4a23, 0x7980, 0xcd00, 0x2328, 0xec80, 0x1de6, 0x1, 0x1);
        gbc.writeMem(0x1de6, { 0xcd });
        gbc.writeMem(0x4a23, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7980, gbc.sp());
        EXPECT(0x4a25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0084
        gbc.setState(0xe258, 0xa461, 0xb660, 0xc769, 0x8afa, 0xcfe, 0x1, 0x0);
        gbc.writeMem(0xcfe, { 0xa6 });
        gbc.writeMem(0xe258, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa461, gbc.sp());
        EXPECT(0xe25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe258));
        EXPECT(0xd6, gbc.readMem(0xe259));
        // CB D6 0085
        gbc.setState(0x28ad, 0x10d2, 0x7370, 0x9621, 0x4c2, 0x6a6d, 0x0, 0x0);
        gbc.writeMem(0x28ad, { 0xcb, 0xd6 });
        gbc.writeMem(0x6a6d, { 0x74 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x10d2, gbc.sp());
        EXPECT(0x28af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0087
        gbc.setState(0xe8d8, 0x819f, 0xef80, 0x636f, 0x280b, 0x9b08, 0x0, 0x1);
        gbc.writeMem(0x9b08, { 0x1d });
        gbc.writeMem(0xe8d8, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x819f, gbc.sp());
        EXPECT(0xe8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9b08));
        EXPECT(0xcb, gbc.readMem(0xe8d8));
        EXPECT(0xd6, gbc.readMem(0xe8d9));
        // CB D6 0089
        gbc.setState(0xe53, 0x1180, 0xa7b0, 0xb0d1, 0x94cc, 0xa812, 0x1, 0x1);
        gbc.writeMem(0xe53, { 0xcb, 0xd6 });
        gbc.writeMem(0xa812, { 0x18 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1180, gbc.sp());
        EXPECT(0xe55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xa812));
        // CB D6 008A
        gbc.setState(0xa24a, 0xa278, 0x5b10, 0x4aa5, 0xad9b, 0x2f5f, 0x0, 0x0);
        gbc.writeMem(0x2f5f, { 0x5 });
        gbc.writeMem(0xa24a, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa278, gbc.sp());
        EXPECT(0xa24c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24a));
        EXPECT(0xd6, gbc.readMem(0xa24b));
        // CB D6 008C
        gbc.setState(0x1979, 0x4df2, 0x6bc0, 0x3d5a, 0x7834, 0xb44d, 0x1, 0x0);
        gbc.writeMem(0x1979, { 0xcb, 0xd6 });
        gbc.writeMem(0xb44d, { 0x50 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4df2, gbc.sp());
        EXPECT(0x197b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xb44d));
        // CB D6 008D
        gbc.setState(0x1d1, 0xd836, 0x2670, 0xffea, 0xad01, 0x71b1, 0x0, 0x0);
        gbc.writeMem(0x1d1, { 0xcb, 0xd6 });
        gbc.writeMem(0x71b1, { 0x1c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd836, gbc.sp());
        EXPECT(0x1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 008E
        gbc.setState(0x617b, 0x8243, 0x5a20, 0x7134, 0x65a3, 0xc594, 0x0, 0x1);
        gbc.writeMem(0x617b, { 0xcb, 0xd6 });
        gbc.writeMem(0xc594, { 0xea });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8243, gbc.sp());
        EXPECT(0x617d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xc594));
        // CB D6 008F
        gbc.setState(0xa151, 0xa76e, 0xcd50, 0x1acf, 0xf623, 0x8ba5, 0x0, 0x1);
        gbc.writeMem(0x8ba5, { 0xe5 });
        gbc.writeMem(0xa151, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa76e, gbc.sp());
        EXPECT(0xa153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8ba5));
        EXPECT(0xcb, gbc.readMem(0xa151));
        EXPECT(0xd6, gbc.readMem(0xa152));
        // CB D6 0090
        gbc.setState(0x4cf1, 0xe7b, 0xd980, 0x5439, 0x2603, 0x388c, 0x1, 0x0);
        gbc.writeMem(0x388c, { 0x36 });
        gbc.writeMem(0x4cf1, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe7b, gbc.sp());
        EXPECT(0x4cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0091
        gbc.setState(0x9e07, 0x257c, 0x4fe0, 0xa8c3, 0x1c1, 0x9c14, 0x1, 0x1);
        gbc.writeMem(0x9c14, { 0x5b });
        gbc.writeMem(0x9e07, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x257c, gbc.sp());
        EXPECT(0x9e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x9c14));
        EXPECT(0xcb, gbc.readMem(0x9e07));
        EXPECT(0xd6, gbc.readMem(0x9e08));
        // CB D6 0093
        gbc.setState(0x662b, 0x8cde, 0xeb90, 0x9b16, 0x454e, 0x56b4, 0x1, 0x0);
        gbc.writeMem(0x56b4, { 0xcc });
        gbc.writeMem(0x662b, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8cde, gbc.sp());
        EXPECT(0x662d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0094
        gbc.setState(0x33ed, 0x64a9, 0x6860, 0xc4d4, 0x7271, 0xd64f, 0x1, 0x0);
        gbc.writeMem(0x33ed, { 0xcb, 0xd6 });
        gbc.writeMem(0xd64f, { 0xfa });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x64a9, gbc.sp());
        EXPECT(0x33ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd64f));
        // CB D6 0097
        gbc.setState(0xf1f, 0xdcf0, 0x5b10, 0x416e, 0x6d79, 0xc61a, 0x1, 0x0);
        gbc.writeMem(0xf1f, { 0xcb, 0xd6 });
        gbc.writeMem(0xc61a, { 0xd0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdcf0, gbc.sp());
        EXPECT(0xf21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc61a));
        // CB D6 0098
        gbc.setState(0xa74a, 0x116e, 0x1df0, 0x21b1, 0xaa1b, 0xde17, 0x0, 0x1);
        gbc.writeMem(0xa74a, { 0xcb, 0xd6 });
        gbc.writeMem(0xde17, { 0xb3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x116e, gbc.sp());
        EXPECT(0xa74c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa74a));
        EXPECT(0xd6, gbc.readMem(0xa74b));
        EXPECT(0xb7, gbc.readMem(0xde17));
        // CB D6 009A
        gbc.setState(0x6aee, 0xcd63, 0xefe0, 0x1f52, 0x5d29, 0x4d10, 0x1, 0x1);
        gbc.writeMem(0x4d10, { 0x9d });
        gbc.writeMem(0x6aee, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcd63, gbc.sp());
        EXPECT(0x6af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 009B
        gbc.setState(0x647c, 0xfb66, 0x1f00, 0x2c9d, 0x2ae3, 0xc049, 0x0, 0x1);
        gbc.writeMem(0x647c, { 0xcb, 0xd6 });
        gbc.writeMem(0xc049, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfb66, gbc.sp());
        EXPECT(0x647e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc049));
        // CB D6 009E
        gbc.setState(0x2729, 0xb1eb, 0x5fe0, 0xace1, 0x7688, 0xc2aa, 0x1, 0x1);
        gbc.writeMem(0x2729, { 0xcb, 0xd6 });
        gbc.writeMem(0xc2aa, { 0x66 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb1eb, gbc.sp());
        EXPECT(0x272b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc2aa));
        // CB D6 009F
        gbc.setState(0xbf0a, 0xd8ef, 0x8740, 0xba74, 0xe99e, 0xfbe5, 0x1, 0x0);
        gbc.writeMem(0xbf0a, { 0xcb, 0xd6 });
        gbc.writeMem(0xfbe5, { 0x1e });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd8ef, gbc.sp());
        EXPECT(0xbf0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0a));
        EXPECT(0xd6, gbc.readMem(0xbf0b));
        EXPECT(0x1e, gbc.readMem(0xfbe5));
        // CB D6 00A0
        gbc.setState(0xe034, 0x3772, 0xfe50, 0xca02, 0x7ccb, 0x89f3, 0x0, 0x1);
        gbc.writeMem(0x89f3, { 0x59 });
        gbc.writeMem(0xe034, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3772, gbc.sp());
        EXPECT(0xe036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x89f3));
        EXPECT(0xcb, gbc.readMem(0xe034));
        EXPECT(0xd6, gbc.readMem(0xe035));
        // CB D6 00A1
        gbc.setState(0x1c8a, 0x59ad, 0xf160, 0xb00f, 0x1002, 0xd0a0, 0x0, 0x1);
        gbc.writeMem(0x1c8a, { 0xcb, 0xd6 });
        gbc.writeMem(0xd0a0, { 0xad });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x59ad, gbc.sp());
        EXPECT(0x1c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xd0a0));
        // CB D6 00A3
        gbc.setState(0xa536, 0x9ffd, 0xd380, 0xfa2e, 0x786d, 0xe755, 0x0, 0x1);
        gbc.writeMem(0xa536, { 0xcb, 0xd6 });
        gbc.writeMem(0xe755, { 0xe7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9ffd, gbc.sp());
        EXPECT(0xa538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa536));
        EXPECT(0xd6, gbc.readMem(0xa537));
        EXPECT(0xe7, gbc.readMem(0xe755));
        // CB D6 00A4
        gbc.setState(0x2494, 0xcb18, 0xf530, 0xd599, 0xf035, 0x8233, 0x0, 0x0);
        gbc.writeMem(0x2494, { 0xcb, 0xd6 });
        gbc.writeMem(0x8233, { 0x99 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcb18, gbc.sp());
        EXPECT(0x2496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8233));
        // CB D6 00A6
        gbc.setState(0x67e0, 0x54c8, 0x1d10, 0xaf2a, 0x9ff6, 0xcaca, 0x0, 0x1);
        gbc.writeMem(0x67e0, { 0xcb, 0xd6 });
        gbc.writeMem(0xcaca, { 0x73 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x54c8, gbc.sp());
        EXPECT(0x67e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xcaca));
        // CB D6 00A9
        gbc.setState(0xc97c, 0xd4ef, 0x3750, 0xa8d7, 0xe945, 0xf57c, 0x0, 0x0);
        gbc.writeMem(0xc97c, { 0xcb, 0xd6 });
        gbc.writeMem(0xf57c, { 0x4a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd4ef, gbc.sp());
        EXPECT(0xc97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc97c));
        EXPECT(0xd6, gbc.readMem(0xc97d));
        EXPECT(0x4e, gbc.readMem(0xf57c));
        // CB D6 00AA
        gbc.setState(0x9, 0x2051, 0xd2a0, 0x2394, 0xb477, 0x80ac, 0x1, 0x1);
        gbc.writeMem(0x9, { 0xcb, 0xd6 });
        gbc.writeMem(0x80ac, { 0xfb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2051, gbc.sp());
        EXPECT(0xb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x80ac));
        // CB D6 00AC
        gbc.setState(0x412a, 0x79a7, 0xcec0, 0xca3, 0x1a11, 0xf7b7, 0x0, 0x1);
        gbc.writeMem(0x412a, { 0xcb, 0xd6 });
        gbc.writeMem(0xf7b7, { 0x5c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x79a7, gbc.sp());
        EXPECT(0x412c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xf7b7));
        // CB D6 00AD
        gbc.setState(0xe456, 0x68df, 0xf2e0, 0xf749, 0x27be, 0xad4a, 0x0, 0x0);
        gbc.writeMem(0xad4a, { 0xdc });
        gbc.writeMem(0xe456, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x68df, gbc.sp());
        EXPECT(0xe458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xad4a));
        EXPECT(0xcb, gbc.readMem(0xe456));
        EXPECT(0xd6, gbc.readMem(0xe457));
        // CB D6 00AF
        gbc.setState(0x55f5, 0x3e65, 0x2580, 0x32d5, 0x2025, 0x9376, 0x1, 0x1);
        gbc.writeMem(0x55f5, { 0xcb, 0xd6 });
        gbc.writeMem(0x9376, { 0xd5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3e65, gbc.sp());
        EXPECT(0x55f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9376));
        // CB D6 00B0
        gbc.setState(0x21d2, 0x609f, 0xa070, 0xdaea, 0x68, 0xe659, 0x0, 0x0);
        gbc.writeMem(0x21d2, { 0xcb, 0xd6 });
        gbc.writeMem(0xe659, { 0xda });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x609f, gbc.sp());
        EXPECT(0x21d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xe659));
        // CB D6 00B1
        gbc.setState(0x4447, 0x5a13, 0x73f0, 0x7f3c, 0x7f24, 0xc985, 0x1, 0x0);
        gbc.writeMem(0x4447, { 0xcb, 0xd6 });
        gbc.writeMem(0xc985, { 0xca });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5a13, gbc.sp());
        EXPECT(0x4449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xc985));
        // CB D6 00B3
        gbc.setState(0x4f8, 0x59de, 0xb2f0, 0xaa9, 0xd4ac, 0xbc92, 0x1, 0x1);
        gbc.writeMem(0x4f8, { 0xcb, 0xd6 });
        gbc.writeMem(0xbc92, { 0xb0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x59de, gbc.sp());
        EXPECT(0x4fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xbc92));
        // CB D6 00B4
        gbc.setState(0xd039, 0x1cc9, 0x7880, 0x23fa, 0x4bbf, 0x4e34, 0x0, 0x1);
        gbc.writeMem(0x4e34, { 0xa4 });
        gbc.writeMem(0xd039, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1cc9, gbc.sp());
        EXPECT(0xd03b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd039));
        EXPECT(0xd6, gbc.readMem(0xd03a));
        // CB D6 00B5
        gbc.setState(0x1996, 0x6fa6, 0x9d0, 0x5f13, 0xe14, 0x5fbe, 0x0, 0x0);
        gbc.writeMem(0x1996, { 0xcb, 0xd6 });
        gbc.writeMem(0x5fbe, { 0x15 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6fa6, gbc.sp());
        EXPECT(0x1998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 00BA
        gbc.setState(0x7897, 0x18ea, 0xa530, 0xc2f4, 0x3074, 0x2d12, 0x1, 0x1);
        gbc.writeMem(0x2d12, { 0xb5 });
        gbc.writeMem(0x7897, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x18ea, gbc.sp());
        EXPECT(0x7899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 00BD
        gbc.setState(0xb434, 0xb227, 0x9bd0, 0xa244, 0x1d9c, 0xb879, 0x0, 0x0);
        gbc.writeMem(0xb434, { 0xcb, 0xd6 });
        gbc.writeMem(0xb879, { 0x71 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb227, gbc.sp());
        EXPECT(0xb436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb434));
        EXPECT(0xd6, gbc.readMem(0xb435));
        EXPECT(0x75, gbc.readMem(0xb879));
        // CB D6 00BF
        gbc.setState(0x97b5, 0x579d, 0x95f0, 0x427, 0x72c2, 0x7e98, 0x0, 0x1);
        gbc.writeMem(0x7e98, { 0x4d });
        gbc.writeMem(0x97b5, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x579d, gbc.sp());
        EXPECT(0x97b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b5));
        EXPECT(0xd6, gbc.readMem(0x97b6));
        // CB D6 00C0
        gbc.setState(0x5ea6, 0xc455, 0xd280, 0x9322, 0xf75, 0x8f42, 0x1, 0x0);
        gbc.writeMem(0x5ea6, { 0xcb, 0xd6 });
        gbc.writeMem(0x8f42, { 0x52 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc455, gbc.sp());
        EXPECT(0x5ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x8f42));
        // CB D6 00C1
        gbc.setState(0xb170, 0xc978, 0x59e0, 0x92aa, 0xb9bc, 0xe597, 0x0, 0x0);
        gbc.writeMem(0xb170, { 0xcb, 0xd6 });
        gbc.writeMem(0xe597, { 0xfa });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc978, gbc.sp());
        EXPECT(0xb172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb170));
        EXPECT(0xd6, gbc.readMem(0xb171));
        EXPECT(0xfe, gbc.readMem(0xe597));
        // CB D6 00C2
        gbc.setState(0xd76d, 0xa097, 0x4d70, 0x19a9, 0x7354, 0xcda2, 0x0, 0x0);
        gbc.writeMem(0xcda2, { 0xf0 });
        gbc.writeMem(0xd76d, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa097, gbc.sp());
        EXPECT(0xd76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xcda2));
        EXPECT(0xcb, gbc.readMem(0xd76d));
        EXPECT(0xd6, gbc.readMem(0xd76e));
        // CB D6 00C4
        gbc.setState(0xcb2a, 0x4605, 0xf160, 0x49b8, 0x48cb, 0x1a51, 0x1, 0x0);
        gbc.writeMem(0x1a51, { 0xad });
        gbc.writeMem(0xcb2a, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4605, gbc.sp());
        EXPECT(0xcb2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2a));
        EXPECT(0xd6, gbc.readMem(0xcb2b));
        // CB D6 00C6
        gbc.setState(0x9f14, 0xb472, 0x6510, 0xa421, 0xd64e, 0xbcbb, 0x1, 0x0);
        gbc.writeMem(0x9f14, { 0xcb, 0xd6 });
        gbc.writeMem(0xbcbb, { 0xa5 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb472, gbc.sp());
        EXPECT(0x9f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f14));
        EXPECT(0xd6, gbc.readMem(0x9f15));
        EXPECT(0xa5, gbc.readMem(0xbcbb));
        // CB D6 00C8
        gbc.setState(0xbc62, 0xb6b8, 0x6550, 0x66ce, 0x4cc3, 0xf507, 0x0, 0x0);
        gbc.writeMem(0xbc62, { 0xcb, 0xd6 });
        gbc.writeMem(0xf507, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb6b8, gbc.sp());
        EXPECT(0xbc64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc62));
        EXPECT(0xd6, gbc.readMem(0xbc63));
        EXPECT(0x4, gbc.readMem(0xf507));
        // CB D6 00C9
        gbc.setState(0xa85f, 0x7754, 0xc940, 0x9417, 0x6b90, 0x4f61, 0x0, 0x1);
        gbc.writeMem(0x4f61, { 0xef });
        gbc.writeMem(0xa85f, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7754, gbc.sp());
        EXPECT(0xa861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa85f));
        EXPECT(0xd6, gbc.readMem(0xa860));
        // CB D6 00CC
        gbc.setState(0xaf26, 0x9200, 0x7120, 0xc25c, 0xedeb, 0xaa42, 0x1, 0x1);
        gbc.writeMem(0xaa42, { 0xa5 });
        gbc.writeMem(0xaf26, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9200, gbc.sp());
        EXPECT(0xaf28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xaa42));
        EXPECT(0xcb, gbc.readMem(0xaf26));
        EXPECT(0xd6, gbc.readMem(0xaf27));
        // CB D6 00CD
        gbc.setState(0x4c78, 0xac25, 0xe4e0, 0xd5c6, 0x46d4, 0x9237, 0x0, 0x1);
        gbc.writeMem(0x4c78, { 0xcb, 0xd6 });
        gbc.writeMem(0x9237, { 0x52 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xac25, gbc.sp());
        EXPECT(0x4c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9237));
        // CB D6 00CF
        gbc.setState(0xd843, 0xf95f, 0xc010, 0xe521, 0x75af, 0x599d, 0x0, 0x0);
        gbc.writeMem(0x599d, { 0x24 });
        gbc.writeMem(0xd843, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf95f, gbc.sp());
        EXPECT(0xd845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd843));
        EXPECT(0xd6, gbc.readMem(0xd844));
        // CB D6 00D0
        gbc.setState(0x445a, 0x1a94, 0xe900, 0x5622, 0xddcd, 0x3873, 0x1, 0x1);
        gbc.writeMem(0x3873, { 0x2d });
        gbc.writeMem(0x445a, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1a94, gbc.sp());
        EXPECT(0x445c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 00D1
        gbc.setState(0xdb6f, 0x2d3a, 0xec60, 0x8376, 0xca88, 0x4fe7, 0x0, 0x1);
        gbc.writeMem(0x4fe7, { 0x45 });
        gbc.writeMem(0xdb6f, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2d3a, gbc.sp());
        EXPECT(0xdb71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb6f));
        EXPECT(0xd6, gbc.readMem(0xdb70));
        // CB D6 00D4
        gbc.setState(0x1e0, 0xef44, 0xf340, 0xb458, 0xff9c, 0xda44, 0x0, 0x1);
        gbc.writeMem(0x1e0, { 0xcb, 0xd6 });
        gbc.writeMem(0xda44, { 0x25 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xef44, gbc.sp());
        EXPECT(0x1e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xda44));
        // CB D6 00D6
        gbc.setState(0x849f, 0xd0cd, 0xe8f0, 0xf1ee, 0xec17, 0x54f5, 0x0, 0x0);
        gbc.writeMem(0x54f5, { 0x35 });
        gbc.writeMem(0x849f, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd0cd, gbc.sp());
        EXPECT(0x84a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849f));
        EXPECT(0xd6, gbc.readMem(0x84a0));
        // CB D6 00D7
        gbc.setState(0x4c6a, 0x31be, 0xec00, 0x5283, 0x7529, 0x936c, 0x1, 0x0);
        gbc.writeMem(0x4c6a, { 0xcb, 0xd6 });
        gbc.writeMem(0x936c, { 0x9d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x31be, gbc.sp());
        EXPECT(0x4c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x936c));
        // CB D6 00D9
        gbc.setState(0xc2b8, 0x8aca, 0xc2b0, 0x11a6, 0x4855, 0x4eb8, 0x0, 0x1);
        gbc.writeMem(0x4eb8, { 0x76 });
        gbc.writeMem(0xc2b8, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8aca, gbc.sp());
        EXPECT(0xc2ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b8));
        EXPECT(0xd6, gbc.readMem(0xc2b9));
        // CB D6 00DB
        gbc.setState(0xcf4a, 0x917, 0xcb70, 0x2799, 0xbc3e, 0xc0d5, 0x1, 0x1);
        gbc.writeMem(0xc0d5, { 0x5a });
        gbc.writeMem(0xcf4a, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x917, gbc.sp());
        EXPECT(0xcf4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc0d5));
        EXPECT(0xcb, gbc.readMem(0xcf4a));
        EXPECT(0xd6, gbc.readMem(0xcf4b));
        // CB D6 00DC
        gbc.setState(0xa99b, 0x255, 0xc750, 0xdba9, 0x8952, 0xe5e8, 0x1, 0x0);
        gbc.writeMem(0xa99b, { 0xcb, 0xd6 });
        gbc.writeMem(0xe5e8, { 0x63 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x255, gbc.sp());
        EXPECT(0xa99d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99b));
        EXPECT(0xd6, gbc.readMem(0xa99c));
        EXPECT(0x67, gbc.readMem(0xe5e8));
        // CB D6 00DF
        gbc.setState(0xb326, 0xb302, 0x3c0, 0x7790, 0x9ad9, 0x10f2, 0x1, 0x1);
        gbc.writeMem(0x10f2, { 0xde });
        gbc.writeMem(0xb326, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb302, gbc.sp());
        EXPECT(0xb328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb326));
        EXPECT(0xd6, gbc.readMem(0xb327));
        // CB D6 00E1
        gbc.setState(0xd7b7, 0xb55, 0x64d0, 0x3051, 0xc717, 0xc47d, 0x0, 0x0);
        gbc.writeMem(0xc47d, { 0x90 });
        gbc.writeMem(0xd7b7, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb55, gbc.sp());
        EXPECT(0xd7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc47d));
        EXPECT(0xcb, gbc.readMem(0xd7b7));
        EXPECT(0xd6, gbc.readMem(0xd7b8));
        // CB D6 00E2
        gbc.setState(0x10cd, 0x499c, 0xc9d0, 0xa978, 0x6539, 0xc6ce, 0x0, 0x1);
        gbc.writeMem(0x10cd, { 0xcb, 0xd6 });
        gbc.writeMem(0xc6ce, { 0xc0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x499c, gbc.sp());
        EXPECT(0x10cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xc6ce));
        // CB D6 00E3
        gbc.setState(0x1384, 0xc570, 0x1570, 0xbc6, 0x9f26, 0xcd9f, 0x1, 0x0);
        gbc.writeMem(0x1384, { 0xcb, 0xd6 });
        gbc.writeMem(0xcd9f, { 0x9e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc570, gbc.sp());
        EXPECT(0x1386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcd9f));
        // CB D6 00E4
        gbc.setState(0xfb, 0x6cfc, 0x79d0, 0x23dc, 0xb8e0, 0xffa4, 0x0, 0x1);
        gbc.writeMem(0xfb, { 0xcb, 0xd6 });
        gbc.writeMem(0xffa4, { 0xb8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6cfc, gbc.sp());
        EXPECT(0xfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xffa4));
        // CB D6 00E7
        gbc.setState(0x8c7c, 0xcecf, 0xe1f0, 0xc811, 0x7280, 0xdd94, 0x1, 0x1);
        gbc.writeMem(0x8c7c, { 0xcb, 0xd6 });
        gbc.writeMem(0xdd94, { 0x51 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcecf, gbc.sp());
        EXPECT(0x8c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c7c));
        EXPECT(0xd6, gbc.readMem(0x8c7d));
        EXPECT(0x55, gbc.readMem(0xdd94));
        // CB D6 00E8
        gbc.setState(0xbb95, 0xb0bc, 0xa180, 0x38b8, 0xcedc, 0x7202, 0x1, 0x0);
        gbc.writeMem(0x7202, { 0x7c });
        gbc.writeMem(0xbb95, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb0bc, gbc.sp());
        EXPECT(0xbb97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb95));
        EXPECT(0xd6, gbc.readMem(0xbb96));
        // CB D6 00E9
        gbc.setState(0xe984, 0xfc6e, 0x780, 0x2bae, 0x4bcd, 0xfde8, 0x0, 0x0);
        gbc.writeMem(0xe984, { 0xcb, 0xd6 });
        gbc.writeMem(0xfde8, { 0xcb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfc6e, gbc.sp());
        EXPECT(0xe986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe984));
        EXPECT(0xd6, gbc.readMem(0xe985));
        EXPECT(0xcf, gbc.readMem(0xfde8));
        // CB D6 00EA
        gbc.setState(0x1583, 0x8cb3, 0xad30, 0x5059, 0x4f09, 0x30f, 0x1, 0x0);
        gbc.writeMem(0x30f, { 0xa6 });
        gbc.writeMem(0x1583, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8cb3, gbc.sp());
        EXPECT(0x1585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 00EB
        gbc.setState(0xb93, 0xa906, 0xccd0, 0x2e0, 0xcb19, 0x4ba2, 0x0, 0x0);
        gbc.writeMem(0xb93, { 0xcb, 0xd6 });
        gbc.writeMem(0x4ba2, { 0xac });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa906, gbc.sp());
        EXPECT(0xb95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 00EC
        gbc.setState(0x4db2, 0xd7ee, 0x54e0, 0x420e, 0x810, 0x9c78, 0x1, 0x0);
        gbc.writeMem(0x4db2, { 0xcb, 0xd6 });
        gbc.writeMem(0x9c78, { 0xf4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd7ee, gbc.sp());
        EXPECT(0x4db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x9c78));
        // CB D6 00ED
        gbc.setState(0xd2f0, 0x60c9, 0x6180, 0x9a7d, 0xad4a, 0xdfea, 0x0, 0x1);
        gbc.writeMem(0xd2f0, { 0xcb, 0xd6 });
        gbc.writeMem(0xdfea, { 0x37 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x60c9, gbc.sp());
        EXPECT(0xd2f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f0));
        EXPECT(0xd6, gbc.readMem(0xd2f1));
        EXPECT(0x37, gbc.readMem(0xdfea));
        // CB D6 00EF
        gbc.setState(0x5b47, 0x84e6, 0xd3d0, 0xce0b, 0x8a25, 0x4868, 0x1, 0x1);
        gbc.writeMem(0x4868, { 0x6 });
        gbc.writeMem(0x5b47, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x84e6, gbc.sp());
        EXPECT(0x5b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 00F0
        gbc.setState(0xe3ee, 0xd3da, 0x18e0, 0x169, 0xdc2c, 0xd5a, 0x0, 0x1);
        gbc.writeMem(0xd5a, { 0xec });
        gbc.writeMem(0xe3ee, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd3da, gbc.sp());
        EXPECT(0xe3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ee));
        EXPECT(0xd6, gbc.readMem(0xe3ef));
        // CB D6 00F2
        gbc.setState(0xefb9, 0x9c02, 0x3ca0, 0x643b, 0x5363, 0xadbc, 0x1, 0x0);
        gbc.writeMem(0xadbc, { 0xa7 });
        gbc.writeMem(0xefb9, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9c02, gbc.sp());
        EXPECT(0xefbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xadbc));
        EXPECT(0xcb, gbc.readMem(0xefb9));
        EXPECT(0xd6, gbc.readMem(0xefba));
        // CB D6 00F4
        gbc.setState(0x5edc, 0xf9f5, 0xf6f0, 0xad29, 0xeb09, 0xce8e, 0x0, 0x0);
        gbc.writeMem(0x5edc, { 0xcb, 0xd6 });
        gbc.writeMem(0xce8e, { 0xab });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf9f5, gbc.sp());
        EXPECT(0x5ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xce8e));
        // CB D6 00F5
        gbc.setState(0x7baa, 0x4072, 0x1ee0, 0xed73, 0x6b4, 0x5540, 0x1, 0x0);
        gbc.writeMem(0x5540, { 0x35 });
        gbc.writeMem(0x7baa, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4072, gbc.sp());
        EXPECT(0x7bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 00F7
        gbc.setState(0x7e5d, 0x240a, 0x3970, 0xdc85, 0x7aed, 0x63fe, 0x0, 0x1);
        gbc.writeMem(0x63fe, { 0xc4 });
        gbc.writeMem(0x7e5d, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x240a, gbc.sp());
        EXPECT(0x7e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 00F8
        gbc.setState(0x6357, 0x6670, 0x4e60, 0xae23, 0xbd0d, 0x6c16, 0x1, 0x0);
        gbc.writeMem(0x6357, { 0xcb, 0xd6 });
        gbc.writeMem(0x6c16, { 0x95 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6670, gbc.sp());
        EXPECT(0x6359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 00FA
        gbc.setState(0x67c5, 0x7dca, 0x8dc0, 0x3033, 0xfb8b, 0x9ccd, 0x0, 0x1);
        gbc.writeMem(0x67c5, { 0xcb, 0xd6 });
        gbc.writeMem(0x9ccd, { 0xd8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7dca, gbc.sp());
        EXPECT(0x67c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x9ccd));
        // CB D6 00FC
        gbc.setState(0x9ccd, 0xa297, 0x5a20, 0x4f43, 0xe392, 0xeab6, 0x1, 0x0);
        gbc.writeMem(0x9ccd, { 0xcb, 0xd6 });
        gbc.writeMem(0xeab6, { 0x1b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa297, gbc.sp());
        EXPECT(0x9ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ccd));
        EXPECT(0xd6, gbc.readMem(0x9cce));
        EXPECT(0x1f, gbc.readMem(0xeab6));
        // CB D6 00FD
        gbc.setState(0x22a3, 0xd3bd, 0xeb40, 0xb68f, 0xa7d0, 0xaa00, 0x1, 0x0);
        gbc.writeMem(0x22a3, { 0xcb, 0xd6 });
        gbc.writeMem(0xaa00, { 0x50 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd3bd, gbc.sp());
        EXPECT(0x22a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xaa00));
        // CB D6 0100
        gbc.setState(0x8944, 0xb6a9, 0x15f0, 0xcbe4, 0xe93f, 0xdab9, 0x1, 0x1);
        gbc.writeMem(0x8944, { 0xcb, 0xd6 });
        gbc.writeMem(0xdab9, { 0xa1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb6a9, gbc.sp());
        EXPECT(0x8946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8944));
        EXPECT(0xd6, gbc.readMem(0x8945));
        EXPECT(0xa5, gbc.readMem(0xdab9));
        // CB D6 0101
        gbc.setState(0xd6d, 0x64b4, 0xeff0, 0x8265, 0x5fde, 0x935c, 0x0, 0x0);
        gbc.writeMem(0xd6d, { 0xcb, 0xd6 });
        gbc.writeMem(0x935c, { 0xe0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x64b4, gbc.sp());
        EXPECT(0xd6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x935c));
        // CB D6 0102
        gbc.setState(0x7102, 0x3a0d, 0x9bc0, 0x1764, 0xfb3a, 0x90bd, 0x0, 0x0);
        gbc.writeMem(0x7102, { 0xcb, 0xd6 });
        gbc.writeMem(0x90bd, { 0xa });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3a0d, gbc.sp());
        EXPECT(0x7104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x90bd));
        // CB D6 0103
        gbc.setState(0xd20c, 0x94f4, 0x5670, 0x6b98, 0xee3b, 0x8d41, 0x0, 0x1);
        gbc.writeMem(0x8d41, { 0xed });
        gbc.writeMem(0xd20c, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x94f4, gbc.sp());
        EXPECT(0xd20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8d41));
        EXPECT(0xcb, gbc.readMem(0xd20c));
        EXPECT(0xd6, gbc.readMem(0xd20d));
        // CB D6 0104
        gbc.setState(0xaa0e, 0xa8c0, 0xc510, 0xcfe7, 0xf003, 0x8892, 0x0, 0x0);
        gbc.writeMem(0x8892, { 0xb8 });
        gbc.writeMem(0xaa0e, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa8c0, gbc.sp());
        EXPECT(0xaa10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8892));
        EXPECT(0xcb, gbc.readMem(0xaa0e));
        EXPECT(0xd6, gbc.readMem(0xaa0f));
        // CB D6 0106
        gbc.setState(0x2297, 0x87b, 0x89c0, 0x29f6, 0x5312, 0xfbbf, 0x1, 0x1);
        gbc.writeMem(0x2297, { 0xcb, 0xd6 });
        gbc.writeMem(0xfbbf, { 0x6b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x87b, gbc.sp());
        EXPECT(0x2299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xfbbf));
        // CB D6 0107
        gbc.setState(0xe3f1, 0xf37, 0x5d30, 0xce69, 0x808a, 0x806a, 0x0, 0x0);
        gbc.writeMem(0x806a, { 0xb });
        gbc.writeMem(0xe3f1, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf37, gbc.sp());
        EXPECT(0xe3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x806a));
        EXPECT(0xcb, gbc.readMem(0xe3f1));
        EXPECT(0xd6, gbc.readMem(0xe3f2));
        // CB D6 0108
        gbc.setState(0x1f61, 0x8bc1, 0x95c0, 0xbe0, 0x7f85, 0xa71a, 0x0, 0x1);
        gbc.writeMem(0x1f61, { 0xcb, 0xd6 });
        gbc.writeMem(0xa71a, { 0xc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8bc1, gbc.sp());
        EXPECT(0x1f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa71a));
        // CB D6 0109
        gbc.setState(0x19fe, 0x5649, 0x2ba0, 0x3bfe, 0xa1ce, 0xc158, 0x1, 0x0);
        gbc.writeMem(0x19fe, { 0xcb, 0xd6 });
        gbc.writeMem(0xc158, { 0x80 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5649, gbc.sp());
        EXPECT(0x1a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xc158));
        // CB D6 010A
        gbc.setState(0xd7b6, 0xd9d4, 0x3f70, 0x31b5, 0x84d8, 0x5e1e, 0x1, 0x1);
        gbc.writeMem(0x5e1e, { 0x6e });
        gbc.writeMem(0xd7b6, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd9d4, gbc.sp());
        EXPECT(0xd7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b6));
        EXPECT(0xd6, gbc.readMem(0xd7b7));
        // CB D6 010B
        gbc.setState(0xaf2e, 0x66b1, 0xd670, 0xf327, 0xdd26, 0xc0fe, 0x1, 0x0);
        gbc.writeMem(0xaf2e, { 0xcb, 0xd6 });
        gbc.writeMem(0xc0fe, { 0xbc });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x66b1, gbc.sp());
        EXPECT(0xaf30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf2e));
        EXPECT(0xd6, gbc.readMem(0xaf2f));
        EXPECT(0xbc, gbc.readMem(0xc0fe));
        // CB D6 010C
        gbc.setState(0x4a96, 0xa7c7, 0x7360, 0x2623, 0x5426, 0xd10d, 0x0, 0x0);
        gbc.writeMem(0x4a96, { 0xcb, 0xd6 });
        gbc.writeMem(0xd10d, { 0x38 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa7c7, gbc.sp());
        EXPECT(0x4a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd10d));
        // CB D6 010D
        gbc.setState(0xc8a5, 0x6dbf, 0x82f0, 0x23e9, 0xded5, 0x123, 0x1, 0x0);
        gbc.writeMem(0x123, { 0x2c });
        gbc.writeMem(0xc8a5, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6dbf, gbc.sp());
        EXPECT(0xc8a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a5));
        EXPECT(0xd6, gbc.readMem(0xc8a6));
        // CB D6 010E
        gbc.setState(0x7455, 0x589, 0x39f0, 0xb90a, 0x814e, 0xa571, 0x1, 0x1);
        gbc.writeMem(0x7455, { 0xcb, 0xd6 });
        gbc.writeMem(0xa571, { 0xea });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x589, gbc.sp());
        EXPECT(0x7457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xa571));
        // CB D6 0111
        gbc.setState(0x6e31, 0xf17c, 0x54c0, 0xfcf4, 0xe41e, 0xf45f, 0x0, 0x1);
        gbc.writeMem(0x6e31, { 0xcb, 0xd6 });
        gbc.writeMem(0xf45f, { 0x40 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf17c, gbc.sp());
        EXPECT(0x6e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xf45f));
        // CB D6 0112
        gbc.setState(0xa556, 0xba74, 0xaa0, 0xbde1, 0x1fb4, 0xbcb0, 0x0, 0x0);
        gbc.writeMem(0xa556, { 0xcb, 0xd6 });
        gbc.writeMem(0xbcb0, { 0xb5 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xba74, gbc.sp());
        EXPECT(0xa558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa556));
        EXPECT(0xd6, gbc.readMem(0xa557));
        EXPECT(0xb5, gbc.readMem(0xbcb0));
        // CB D6 0113
        gbc.setState(0xb36a, 0xe560, 0xf9b0, 0x6d4, 0x75a1, 0xe3d0, 0x1, 0x1);
        gbc.writeMem(0xb36a, { 0xcb, 0xd6 });
        gbc.writeMem(0xe3d0, { 0x85 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe560, gbc.sp());
        EXPECT(0xb36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb36a));
        EXPECT(0xd6, gbc.readMem(0xb36b));
        EXPECT(0x85, gbc.readMem(0xe3d0));
        // CB D6 0114
        gbc.setState(0xbfbb, 0xe73f, 0x5c40, 0xf29d, 0xaf9b, 0xbf13, 0x1, 0x0);
        gbc.writeMem(0xbf13, { 0x83 });
        gbc.writeMem(0xbfbb, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe73f, gbc.sp());
        EXPECT(0xbfbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xbf13));
        EXPECT(0xcb, gbc.readMem(0xbfbb));
        EXPECT(0xd6, gbc.readMem(0xbfbc));
        // CB D6 0117
        gbc.setState(0xced1, 0x26ea, 0xbd50, 0x442b, 0xe7ec, 0xc2d5, 0x1, 0x0);
        gbc.writeMem(0xc2d5, { 0x9d });
        gbc.writeMem(0xced1, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x26ea, gbc.sp());
        EXPECT(0xced3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc2d5));
        EXPECT(0xcb, gbc.readMem(0xced1));
        EXPECT(0xd6, gbc.readMem(0xced2));
        // CB D6 0119
        gbc.setState(0xd2a8, 0x7fd9, 0x2b80, 0xb06d, 0x73ac, 0xf1bb, 0x0, 0x0);
        gbc.writeMem(0xd2a8, { 0xcb, 0xd6 });
        gbc.writeMem(0xf1bb, { 0xb9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7fd9, gbc.sp());
        EXPECT(0xd2aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a8));
        EXPECT(0xd6, gbc.readMem(0xd2a9));
        EXPECT(0xbd, gbc.readMem(0xf1bb));
        // CB D6 011B
        gbc.setState(0xbf6b, 0xbd7a, 0xe80, 0x11f4, 0x4573, 0x3354, 0x0, 0x1);
        gbc.writeMem(0x3354, { 0xbd });
        gbc.writeMem(0xbf6b, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbd7a, gbc.sp());
        EXPECT(0xbf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf6b));
        EXPECT(0xd6, gbc.readMem(0xbf6c));
        // CB D6 011C
        gbc.setState(0xe543, 0xfad4, 0x9c70, 0xfc7c, 0xf533, 0xf3c7, 0x0, 0x1);
        gbc.writeMem(0xe543, { 0xcb, 0xd6 });
        gbc.writeMem(0xf3c7, { 0x8b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfad4, gbc.sp());
        EXPECT(0xe545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe543));
        EXPECT(0xd6, gbc.readMem(0xe544));
        EXPECT(0x8f, gbc.readMem(0xf3c7));
        // CB D6 011D
        gbc.setState(0xe047, 0x4afb, 0x7be0, 0xb14f, 0x78bf, 0x18e, 0x0, 0x0);
        gbc.writeMem(0x18e, { 0xa7 });
        gbc.writeMem(0xe047, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4afb, gbc.sp());
        EXPECT(0xe049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe047));
        EXPECT(0xd6, gbc.readMem(0xe048));
        // CB D6 011E
        gbc.setState(0xbdea, 0xd69, 0x5aa0, 0x6d6b, 0x73b9, 0x8ccd, 0x0, 0x1);
        gbc.writeMem(0x8ccd, { 0x27 });
        gbc.writeMem(0xbdea, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd69, gbc.sp());
        EXPECT(0xbdec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8ccd));
        EXPECT(0xcb, gbc.readMem(0xbdea));
        EXPECT(0xd6, gbc.readMem(0xbdeb));
        // CB D6 011F
        gbc.setState(0xeae2, 0x88f5, 0x8700, 0xfd06, 0xc557, 0xd10e, 0x0, 0x0);
        gbc.writeMem(0xd10e, { 0xda });
        gbc.writeMem(0xeae2, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x88f5, gbc.sp());
        EXPECT(0xeae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xd10e));
        EXPECT(0xcb, gbc.readMem(0xeae2));
        EXPECT(0xd6, gbc.readMem(0xeae3));
        // CB D6 0120
        gbc.setState(0x2fa7, 0xe900, 0xfcf0, 0xf5e3, 0xe422, 0xb77d, 0x1, 0x0);
        gbc.writeMem(0x2fa7, { 0xcb, 0xd6 });
        gbc.writeMem(0xb77d, { 0xd5 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe900, gbc.sp());
        EXPECT(0x2fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb77d));
        // CB D6 0126
        gbc.setState(0x5b05, 0x4973, 0xeae0, 0xa60d, 0x1286, 0xcfc5, 0x1, 0x1);
        gbc.writeMem(0x5b05, { 0xcb, 0xd6 });
        gbc.writeMem(0xcfc5, { 0x3d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4973, gbc.sp());
        EXPECT(0x5b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xcfc5));
        // CB D6 0127
        gbc.setState(0x7009, 0x52ca, 0xd40, 0x296, 0xfdcf, 0xf130, 0x1, 0x0);
        gbc.writeMem(0x7009, { 0xcb, 0xd6 });
        gbc.writeMem(0xf130, { 0x99 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x52ca, gbc.sp());
        EXPECT(0x700b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xf130));
        // CB D6 012A
        gbc.setState(0x3a8b, 0xea74, 0x3390, 0x19b0, 0xf6b8, 0xc64f, 0x0, 0x0);
        gbc.writeMem(0x3a8b, { 0xcb, 0xd6 });
        gbc.writeMem(0xc64f, { 0x61 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xea74, gbc.sp());
        EXPECT(0x3a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc64f));
        // CB D6 012B
        gbc.setState(0xb764, 0xb4f1, 0x6a30, 0x2515, 0xb8d7, 0xa83e, 0x1, 0x1);
        gbc.writeMem(0xa83e, { 0xbe });
        gbc.writeMem(0xb764, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb4f1, gbc.sp());
        EXPECT(0xb766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xa83e));
        EXPECT(0xcb, gbc.readMem(0xb764));
        EXPECT(0xd6, gbc.readMem(0xb765));
        // CB D6 012E
        gbc.setState(0x6d37, 0xc0db, 0xb570, 0xa33c, 0xf49f, 0x3265, 0x0, 0x0);
        gbc.writeMem(0x3265, { 0x95 });
        gbc.writeMem(0x6d37, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc0db, gbc.sp());
        EXPECT(0x6d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 012F
        gbc.setState(0xd73, 0xf82a, 0x7d20, 0xecaf, 0xf2a4, 0xc1e2, 0x0, 0x0);
        gbc.writeMem(0xd73, { 0xcb, 0xd6 });
        gbc.writeMem(0xc1e2, { 0xdd });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf82a, gbc.sp());
        EXPECT(0xd75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xc1e2));
        // CB D6 0130
        gbc.setState(0x5b89, 0x282, 0x5160, 0xb004, 0xd647, 0x2789, 0x1, 0x1);
        gbc.writeMem(0x2789, { 0xef });
        gbc.writeMem(0x5b89, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x282, gbc.sp());
        EXPECT(0x5b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0131
        gbc.setState(0xc974, 0xa9ef, 0x15f0, 0xac25, 0xbf9a, 0x6724, 0x0, 0x1);
        gbc.writeMem(0x6724, { 0x76 });
        gbc.writeMem(0xc974, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa9ef, gbc.sp());
        EXPECT(0xc976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc974));
        EXPECT(0xd6, gbc.readMem(0xc975));
        // CB D6 0132
        gbc.setState(0x6001, 0xb63d, 0x1d00, 0xdb83, 0x82e6, 0x58ce, 0x0, 0x0);
        gbc.writeMem(0x58ce, { 0xd7 });
        gbc.writeMem(0x6001, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb63d, gbc.sp());
        EXPECT(0x6003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0133
        gbc.setState(0x8504, 0xf525, 0xf500, 0x1645, 0xd78b, 0x621b, 0x1, 0x1);
        gbc.writeMem(0x621b, { 0x9c });
        gbc.writeMem(0x8504, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf525, gbc.sp());
        EXPECT(0x8506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8504));
        EXPECT(0xd6, gbc.readMem(0x8505));
        // CB D6 0134
        gbc.setState(0x2241, 0x98ae, 0xe980, 0xa0e0, 0x86a, 0xa452, 0x0, 0x1);
        gbc.writeMem(0x2241, { 0xcb, 0xd6 });
        gbc.writeMem(0xa452, { 0x58 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x98ae, gbc.sp());
        EXPECT(0x2243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xa452));
        // CB D6 0137
        gbc.setState(0x4e92, 0xc5d2, 0x1e00, 0x546f, 0xb6fb, 0xbfaa, 0x0, 0x1);
        gbc.writeMem(0x4e92, { 0xcb, 0xd6 });
        gbc.writeMem(0xbfaa, { 0xa8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc5d2, gbc.sp());
        EXPECT(0x4e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbfaa));
        // CB D6 0138
        gbc.setState(0x5f14, 0x1c02, 0x26f0, 0x6c7d, 0x735f, 0xd6fb, 0x1, 0x1);
        gbc.writeMem(0x5f14, { 0xcb, 0xd6 });
        gbc.writeMem(0xd6fb, { 0x47 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1c02, gbc.sp());
        EXPECT(0x5f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd6fb));
        // CB D6 0139
        gbc.setState(0x1c2e, 0xa3e2, 0xa7f0, 0x1f5d, 0x46ae, 0x5e66, 0x1, 0x1);
        gbc.writeMem(0x1c2e, { 0xcb, 0xd6 });
        gbc.writeMem(0x5e66, { 0x84 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa3e2, gbc.sp());
        EXPECT(0x1c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 013A
        gbc.setState(0xc849, 0x8b2f, 0x2240, 0x2db6, 0x7788, 0xc774, 0x1, 0x0);
        gbc.writeMem(0xc774, { 0xf5 });
        gbc.writeMem(0xc849, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8b2f, gbc.sp());
        EXPECT(0xc84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xc774));
        EXPECT(0xcb, gbc.readMem(0xc849));
        EXPECT(0xd6, gbc.readMem(0xc84a));
        // CB D6 013D
        gbc.setState(0x4f51, 0xfd27, 0xc700, 0xd580, 0xe6c8, 0xcc6d, 0x0, 0x0);
        gbc.writeMem(0x4f51, { 0xcb, 0xd6 });
        gbc.writeMem(0xcc6d, { 0xe7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfd27, gbc.sp());
        EXPECT(0x4f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xcc6d));
        // CB D6 013E
        gbc.setState(0xc699, 0x6e39, 0x1c10, 0xe74c, 0xaea8, 0x36b7, 0x0, 0x0);
        gbc.writeMem(0x36b7, { 0x14 });
        gbc.writeMem(0xc699, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6e39, gbc.sp());
        EXPECT(0xc69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc699));
        EXPECT(0xd6, gbc.readMem(0xc69a));
        // CB D6 013F
        gbc.setState(0x8bd3, 0x2479, 0x85f0, 0xf4a7, 0xe861, 0xea02, 0x1, 0x0);
        gbc.writeMem(0x8bd3, { 0xcb, 0xd6 });
        gbc.writeMem(0xea02, { 0xe6 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2479, gbc.sp());
        EXPECT(0x8bd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd3));
        EXPECT(0xd6, gbc.readMem(0x8bd4));
        EXPECT(0xe6, gbc.readMem(0xea02));
        // CB D6 0141
        gbc.setState(0x5727, 0x70c5, 0x5ee0, 0xafdb, 0x897a, 0xb765, 0x0, 0x1);
        gbc.writeMem(0x5727, { 0xcb, 0xd6 });
        gbc.writeMem(0xb765, { 0x90 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x70c5, gbc.sp());
        EXPECT(0x5729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb765));
        // CB D6 0143
        gbc.setState(0xefbb, 0xecf, 0x7700, 0x6a40, 0xde10, 0x82b1, 0x0, 0x0);
        gbc.writeMem(0x82b1, { 0x8e });
        gbc.writeMem(0xefbb, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xecf, gbc.sp());
        EXPECT(0xefbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x82b1));
        EXPECT(0xcb, gbc.readMem(0xefbb));
        EXPECT(0xd6, gbc.readMem(0xefbc));
        // CB D6 0144
        gbc.setState(0x6880, 0x8bef, 0x8dd0, 0x722c, 0xbd29, 0xd437, 0x0, 0x1);
        gbc.writeMem(0x6880, { 0xcb, 0xd6 });
        gbc.writeMem(0xd437, { 0x2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8bef, gbc.sp());
        EXPECT(0x6882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd437));
        // CB D6 0145
        gbc.setState(0xc17f, 0xebbd, 0xe90, 0x2bb5, 0xc2c5, 0xec37, 0x1, 0x1);
        gbc.writeMem(0xc17f, { 0xcb, 0xd6 });
        gbc.writeMem(0xec37, { 0xb1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xebbd, gbc.sp());
        EXPECT(0xc181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc17f));
        EXPECT(0xd6, gbc.readMem(0xc180));
        EXPECT(0xb5, gbc.readMem(0xec37));
        // CB D6 0147
        gbc.setState(0x1541, 0xaed, 0x47b0, 0x39ba, 0xf411, 0xd05d, 0x0, 0x0);
        gbc.writeMem(0x1541, { 0xcb, 0xd6 });
        gbc.writeMem(0xd05d, { 0xa2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xaed, gbc.sp());
        EXPECT(0x1543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd05d));
        // CB D6 0148
        gbc.setState(0x2184, 0x2d1, 0x43e0, 0x4b56, 0x6bc4, 0x51f1, 0x1, 0x1);
        gbc.writeMem(0x2184, { 0xcb, 0xd6 });
        gbc.writeMem(0x51f1, { 0x7e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2d1, gbc.sp());
        EXPECT(0x2186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0149
        gbc.setState(0x19ff, 0x26a1, 0xe760, 0x3a41, 0xc88c, 0xa976, 0x1, 0x0);
        gbc.writeMem(0x19ff, { 0xcb, 0xd6 });
        gbc.writeMem(0xa976, { 0x44 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x26a1, gbc.sp());
        EXPECT(0x1a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa976));
        // CB D6 014A
        gbc.setState(0xc7d9, 0x7f26, 0xead0, 0xdbfd, 0x7051, 0x86de, 0x1, 0x1);
        gbc.writeMem(0x86de, { 0xee });
        gbc.writeMem(0xc7d9, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7f26, gbc.sp());
        EXPECT(0xc7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x86de));
        EXPECT(0xcb, gbc.readMem(0xc7d9));
        EXPECT(0xd6, gbc.readMem(0xc7da));
        // CB D6 014D
        gbc.setState(0x5390, 0xed29, 0xf680, 0x2ed1, 0x6934, 0xae83, 0x1, 0x1);
        gbc.writeMem(0x5390, { 0xcb, 0xd6 });
        gbc.writeMem(0xae83, { 0x35 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xed29, gbc.sp());
        EXPECT(0x5392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xae83));
        // CB D6 014E
        gbc.setState(0x4515, 0x20b7, 0xab60, 0xad7f, 0x3bee, 0x69d1, 0x1, 0x0);
        gbc.writeMem(0x4515, { 0xcb, 0xd6 });
        gbc.writeMem(0x69d1, { 0xcd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x20b7, gbc.sp());
        EXPECT(0x4517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0150
        gbc.setState(0xe190, 0x398d, 0x6f70, 0xec0f, 0x4170, 0x9bdb, 0x0, 0x0);
        gbc.writeMem(0x9bdb, { 0x80 });
        gbc.writeMem(0xe190, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x398d, gbc.sp());
        EXPECT(0xe192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x9bdb));
        EXPECT(0xcb, gbc.readMem(0xe190));
        EXPECT(0xd6, gbc.readMem(0xe191));
        // CB D6 0151
        gbc.setState(0x58a9, 0xed93, 0xb6c0, 0x78e8, 0x9702, 0x6bce, 0x0, 0x0);
        gbc.writeMem(0x58a9, { 0xcb, 0xd6 });
        gbc.writeMem(0x6bce, { 0x25 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xed93, gbc.sp());
        EXPECT(0x58ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0152
        gbc.setState(0x6633, 0x98e7, 0xf000, 0xe149, 0x9e1c, 0xa074, 0x0, 0x0);
        gbc.writeMem(0x6633, { 0xcb, 0xd6 });
        gbc.writeMem(0xa074, { 0x6c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x98e7, gbc.sp());
        EXPECT(0x6635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa074));
        // CB D6 0153
        gbc.setState(0xb258, 0x340d, 0x9830, 0x2998, 0x979, 0xbb90, 0x1, 0x0);
        gbc.writeMem(0xb258, { 0xcb, 0xd6 });
        gbc.writeMem(0xbb90, { 0xcf });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x340d, gbc.sp());
        EXPECT(0xb25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb258));
        EXPECT(0xd6, gbc.readMem(0xb259));
        EXPECT(0xcf, gbc.readMem(0xbb90));
        // CB D6 0154
        gbc.setState(0x89d7, 0xf40b, 0x77b0, 0xd99d, 0xbd66, 0x9ad1, 0x1, 0x0);
        gbc.writeMem(0x89d7, { 0xcb, 0xd6 });
        gbc.writeMem(0x9ad1, { 0x58 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf40b, gbc.sp());
        EXPECT(0x89d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d7));
        EXPECT(0xd6, gbc.readMem(0x89d8));
        EXPECT(0x5c, gbc.readMem(0x9ad1));
        // CB D6 0155
        gbc.setState(0x4ec, 0xf35f, 0x44d0, 0x4d, 0xb027, 0x8359, 0x1, 0x1);
        gbc.writeMem(0x4ec, { 0xcb, 0xd6 });
        gbc.writeMem(0x8359, { 0x78 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf35f, gbc.sp());
        EXPECT(0x4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x8359));
        // CB D6 0158
        gbc.setState(0x4cbf, 0x3f2, 0x4310, 0xd92c, 0xf47, 0x99c6, 0x1, 0x0);
        gbc.writeMem(0x4cbf, { 0xcb, 0xd6 });
        gbc.writeMem(0x99c6, { 0x41 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3f2, gbc.sp());
        EXPECT(0x4cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x99c6));
        // CB D6 015A
        gbc.setState(0x234f, 0x3298, 0x1660, 0xc356, 0xa5dd, 0x938c, 0x1, 0x1);
        gbc.writeMem(0x234f, { 0xcb, 0xd6 });
        gbc.writeMem(0x938c, { 0xbf });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3298, gbc.sp());
        EXPECT(0x2351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x938c));
        // CB D6 015B
        gbc.setState(0xbb28, 0x1075, 0xebc0, 0xe0fd, 0x3e05, 0xe3cd, 0x0, 0x0);
        gbc.writeMem(0xbb28, { 0xcb, 0xd6 });
        gbc.writeMem(0xe3cd, { 0x84 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1075, gbc.sp());
        EXPECT(0xbb2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb28));
        EXPECT(0xd6, gbc.readMem(0xbb29));
        EXPECT(0x84, gbc.readMem(0xe3cd));
        // CB D6 015C
        gbc.setState(0x3160, 0x1a27, 0xb060, 0xc6be, 0xfe5, 0x9cc6, 0x0, 0x1);
        gbc.writeMem(0x3160, { 0xcb, 0xd6 });
        gbc.writeMem(0x9cc6, { 0xe0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1a27, gbc.sp());
        EXPECT(0x3162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x9cc6));
        // CB D6 015D
        gbc.setState(0x5dc7, 0x210d, 0xd0e0, 0x8dbc, 0x3a54, 0x4004, 0x0, 0x0);
        gbc.writeMem(0x4004, { 0xf4 });
        gbc.writeMem(0x5dc7, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x210d, gbc.sp());
        EXPECT(0x5dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 015F
        gbc.setState(0xb0e1, 0x59e1, 0x2040, 0x3004, 0x2fd9, 0x2e3f, 0x0, 0x1);
        gbc.writeMem(0x2e3f, { 0xc });
        gbc.writeMem(0xb0e1, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x59e1, gbc.sp());
        EXPECT(0xb0e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e1));
        EXPECT(0xd6, gbc.readMem(0xb0e2));
        // CB D6 0160
        gbc.setState(0xd6d7, 0x6edb, 0xd70, 0x3f65, 0xddd3, 0xa678, 0x1, 0x0);
        gbc.writeMem(0xa678, { 0xe6 });
        gbc.writeMem(0xd6d7, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6edb, gbc.sp());
        EXPECT(0xd6d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa678));
        EXPECT(0xcb, gbc.readMem(0xd6d7));
        EXPECT(0xd6, gbc.readMem(0xd6d8));
        // CB D6 0161
        gbc.setState(0x1487, 0xd535, 0x19a0, 0x781f, 0x2b07, 0x1cd0, 0x0, 0x0);
        gbc.writeMem(0x1487, { 0xcb, 0xd6 });
        gbc.writeMem(0x1cd0, { 0x8c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd535, gbc.sp());
        EXPECT(0x1489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0162
        gbc.setState(0x990e, 0x1fd5, 0x4d70, 0xbbb3, 0xd22a, 0x563c, 0x0, 0x1);
        gbc.writeMem(0x563c, { 0xa6 });
        gbc.writeMem(0x990e, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1fd5, gbc.sp());
        EXPECT(0x9910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990e));
        EXPECT(0xd6, gbc.readMem(0x990f));
        // CB D6 0165
        gbc.setState(0xe921, 0x37fc, 0x44d0, 0x2e6e, 0x691a, 0x8dc4, 0x0, 0x1);
        gbc.writeMem(0x8dc4, { 0x35 });
        gbc.writeMem(0xe921, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x37fc, gbc.sp());
        EXPECT(0xe923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8dc4));
        EXPECT(0xcb, gbc.readMem(0xe921));
        EXPECT(0xd6, gbc.readMem(0xe922));
        // CB D6 0166
        gbc.setState(0x7e06, 0x452c, 0xc060, 0xccf9, 0x137d, 0x2536, 0x0, 0x1);
        gbc.writeMem(0x2536, { 0xfc });
        gbc.writeMem(0x7e06, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x452c, gbc.sp());
        EXPECT(0x7e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0167
        gbc.setState(0x4c3d, 0xb619, 0xbe0, 0xd9ce, 0xf577, 0xc526, 0x0, 0x1);
        gbc.writeMem(0x4c3d, { 0xcb, 0xd6 });
        gbc.writeMem(0xc526, { 0x58 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb619, gbc.sp());
        EXPECT(0x4c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xc526));
        // CB D6 0169
        gbc.setState(0xab3f, 0xb99c, 0xf130, 0xf69d, 0x2b8f, 0x90bb, 0x0, 0x0);
        gbc.writeMem(0x90bb, { 0xbf });
        gbc.writeMem(0xab3f, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb99c, gbc.sp());
        EXPECT(0xab41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x90bb));
        EXPECT(0xcb, gbc.readMem(0xab3f));
        EXPECT(0xd6, gbc.readMem(0xab40));
        // CB D6 016A
        gbc.setState(0x6e8a, 0x2cd3, 0xa2f0, 0xc009, 0xfe4c, 0xf4f8, 0x0, 0x0);
        gbc.writeMem(0x6e8a, { 0xcb, 0xd6 });
        gbc.writeMem(0xf4f8, { 0x47 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2cd3, gbc.sp());
        EXPECT(0x6e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xf4f8));
        // CB D6 016C
        gbc.setState(0x4603, 0x7f78, 0x4b60, 0x80a4, 0x473c, 0xb3f2, 0x0, 0x1);
        gbc.writeMem(0x4603, { 0xcb, 0xd6 });
        gbc.writeMem(0xb3f2, { 0xc0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7f78, gbc.sp());
        EXPECT(0x4605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xb3f2));
        // CB D6 0171
        gbc.setState(0x7ec9, 0x29fe, 0xc8f0, 0x8632, 0x606, 0x933b, 0x0, 0x1);
        gbc.writeMem(0x7ec9, { 0xcb, 0xd6 });
        gbc.writeMem(0x933b, { 0x16 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x29fe, gbc.sp());
        EXPECT(0x7ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x933b));
        // CB D6 0172
        gbc.setState(0x8f42, 0x7332, 0x41b0, 0x7cb4, 0x88d, 0xfb2d, 0x1, 0x1);
        gbc.writeMem(0x8f42, { 0xcb, 0xd6 });
        gbc.writeMem(0xfb2d, { 0x55 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7332, gbc.sp());
        EXPECT(0x8f44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f42));
        EXPECT(0xd6, gbc.readMem(0x8f43));
        EXPECT(0x55, gbc.readMem(0xfb2d));
        // CB D6 0173
        gbc.setState(0xc47e, 0x6bf7, 0x7fb0, 0x9295, 0x6d7c, 0xcdf7, 0x0, 0x0);
        gbc.writeMem(0xc47e, { 0xcb, 0xd6 });
        gbc.writeMem(0xcdf7, { 0x95 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6bf7, gbc.sp());
        EXPECT(0xc480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc47e));
        EXPECT(0xd6, gbc.readMem(0xc47f));
        EXPECT(0x95, gbc.readMem(0xcdf7));
        // CB D6 0174
        gbc.setState(0x5ebe, 0xe4e8, 0xf2f0, 0xd0b1, 0x242f, 0xdd75, 0x1, 0x0);
        gbc.writeMem(0x5ebe, { 0xcb, 0xd6 });
        gbc.writeMem(0xdd75, { 0x2a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe4e8, gbc.sp());
        EXPECT(0x5ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xdd75));
        // CB D6 0176
        gbc.setState(0x2a1d, 0xe021, 0xa970, 0x9bee, 0x8f07, 0x6383, 0x0, 0x0);
        gbc.writeMem(0x2a1d, { 0xcb, 0xd6 });
        gbc.writeMem(0x6383, { 0x3c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe021, gbc.sp());
        EXPECT(0x2a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0178
        gbc.setState(0xe947, 0xf417, 0xf850, 0xb575, 0x18ce, 0xced0, 0x1, 0x0);
        gbc.writeMem(0xced0, { 0xee });
        gbc.writeMem(0xe947, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf417, gbc.sp());
        EXPECT(0xe949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xced0));
        EXPECT(0xcb, gbc.readMem(0xe947));
        EXPECT(0xd6, gbc.readMem(0xe948));
        // CB D6 0179
        gbc.setState(0x1496, 0xfc24, 0xbf40, 0x3081, 0x17ee, 0x220e, 0x1, 0x0);
        gbc.writeMem(0x1496, { 0xcb, 0xd6 });
        gbc.writeMem(0x220e, { 0x37 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfc24, gbc.sp());
        EXPECT(0x1498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 017A
        gbc.setState(0x9e0, 0x36c1, 0x38e0, 0xd48f, 0xf019, 0x9696, 0x0, 0x0);
        gbc.writeMem(0x9e0, { 0xcb, 0xd6 });
        gbc.writeMem(0x9696, { 0x48 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x36c1, gbc.sp());
        EXPECT(0x9e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9696));
        // CB D6 017B
        gbc.setState(0x607e, 0xff00, 0xf6f0, 0x99f1, 0xb7a4, 0x985e, 0x1, 0x1);
        gbc.writeMem(0x607e, { 0xcb, 0xd6 });
        gbc.writeMem(0x985e, { 0x1d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xff00, gbc.sp());
        EXPECT(0x6080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x985e));
        // CB D6 017D
        gbc.setState(0x9cd, 0x76fa, 0xa3e0, 0x2c1b, 0xbd5b, 0x72d1, 0x0, 0x1);
        gbc.writeMem(0x9cd, { 0xcb, 0xd6 });
        gbc.writeMem(0x72d1, { 0x17 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x76fa, gbc.sp());
        EXPECT(0x9cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 017E
        gbc.setState(0xb540, 0xe504, 0x6d70, 0xf194, 0xddab, 0xf30d, 0x0, 0x0);
        gbc.writeMem(0xb540, { 0xcb, 0xd6 });
        gbc.writeMem(0xf30d, { 0x91 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe504, gbc.sp());
        EXPECT(0xb542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb540));
        EXPECT(0xd6, gbc.readMem(0xb541));
        EXPECT(0x95, gbc.readMem(0xf30d));
        // CB D6 017F
        gbc.setState(0xadf4, 0x5f00, 0xf8c0, 0x71be, 0x91dc, 0x427e, 0x0, 0x1);
        gbc.writeMem(0x427e, { 0xa7 });
        gbc.writeMem(0xadf4, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5f00, gbc.sp());
        EXPECT(0xadf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf4));
        EXPECT(0xd6, gbc.readMem(0xadf5));
        // CB D6 0180
        gbc.setState(0x3c58, 0x5392, 0x1610, 0xc471, 0x2644, 0xf1ec, 0x1, 0x0);
        gbc.writeMem(0x3c58, { 0xcb, 0xd6 });
        gbc.writeMem(0xf1ec, { 0x47 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5392, gbc.sp());
        EXPECT(0x3c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xf1ec));
        // CB D6 0181
        gbc.setState(0x7a97, 0x452, 0x9a50, 0x6b09, 0x142c, 0x76c1, 0x1, 0x0);
        gbc.writeMem(0x76c1, { 0xbd });
        gbc.writeMem(0x7a97, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x452, gbc.sp());
        EXPECT(0x7a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0182
        gbc.setState(0xccd3, 0xdc83, 0xc1e0, 0xa260, 0x17d2, 0xfe6d, 0x0, 0x1);
        gbc.writeMem(0xccd3, { 0xcb, 0xd6 });
        gbc.writeMem(0xfe6d, { 0xee });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdc83, gbc.sp());
        EXPECT(0xccd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd3));
        EXPECT(0xd6, gbc.readMem(0xccd4));
        EXPECT(0xee, gbc.readMem(0xfe6d));
        // CB D6 0183
        gbc.setState(0x8287, 0xa59c, 0xf280, 0xf3af, 0x5520, 0x663d, 0x0, 0x0);
        gbc.writeMem(0x663d, { 0x97 });
        gbc.writeMem(0x8287, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa59c, gbc.sp());
        EXPECT(0x8289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8287));
        EXPECT(0xd6, gbc.readMem(0x8288));
        // CB D6 0185
        gbc.setState(0x3232, 0xaafa, 0xa6c0, 0xcd31, 0xecf5, 0x54a2, 0x0, 0x0);
        gbc.writeMem(0x3232, { 0xcb, 0xd6 });
        gbc.writeMem(0x54a2, { 0xbf });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xaafa, gbc.sp());
        EXPECT(0x3234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0189
        gbc.setState(0xd59c, 0x62e0, 0x2d80, 0x1186, 0x64ac, 0x66ea, 0x1, 0x0);
        gbc.writeMem(0x66ea, { 0x95 });
        gbc.writeMem(0xd59c, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x62e0, gbc.sp());
        EXPECT(0xd59e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd59c));
        EXPECT(0xd6, gbc.readMem(0xd59d));
        // CB D6 018D
        gbc.setState(0x6c04, 0x7fb5, 0x8870, 0xec42, 0xe298, 0xa5d4, 0x0, 0x0);
        gbc.writeMem(0x6c04, { 0xcb, 0xd6 });
        gbc.writeMem(0xa5d4, { 0x61 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7fb5, gbc.sp());
        EXPECT(0x6c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa5d4));
        // CB D6 018E
        gbc.setState(0xedf2, 0x34f9, 0x91b0, 0x22a0, 0x17a5, 0xa154, 0x1, 0x1);
        gbc.writeMem(0xa154, { 0x66 });
        gbc.writeMem(0xedf2, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x34f9, gbc.sp());
        EXPECT(0xedf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xa154));
        EXPECT(0xcb, gbc.readMem(0xedf2));
        EXPECT(0xd6, gbc.readMem(0xedf3));
        // CB D6 018F
        gbc.setState(0x80c4, 0xd795, 0x62c0, 0x3c9d, 0x5afb, 0xda2c, 0x1, 0x0);
        gbc.writeMem(0x80c4, { 0xcb, 0xd6 });
        gbc.writeMem(0xda2c, { 0xb7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd795, gbc.sp());
        EXPECT(0x80c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c4));
        EXPECT(0xd6, gbc.readMem(0x80c5));
        EXPECT(0xb7, gbc.readMem(0xda2c));
        // CB D6 0190
        gbc.setState(0xeab4, 0xe4f6, 0xcda0, 0xcff2, 0xdb83, 0x8453, 0x1, 0x1);
        gbc.writeMem(0x8453, { 0xfb });
        gbc.writeMem(0xeab4, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe4f6, gbc.sp());
        EXPECT(0xeab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8453));
        EXPECT(0xcb, gbc.readMem(0xeab4));
        EXPECT(0xd6, gbc.readMem(0xeab5));
        // CB D6 0194
        gbc.setState(0x7aa1, 0x3a1a, 0xaa00, 0x819a, 0x3bc5, 0xc539, 0x0, 0x1);
        gbc.writeMem(0x7aa1, { 0xcb, 0xd6 });
        gbc.writeMem(0xc539, { 0xdd });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3a1a, gbc.sp());
        EXPECT(0x7aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xc539));
        // CB D6 0196
        gbc.setState(0x2431, 0x51e4, 0x4200, 0x3252, 0x60c1, 0x9ac6, 0x0, 0x1);
        gbc.writeMem(0x2431, { 0xcb, 0xd6 });
        gbc.writeMem(0x9ac6, { 0x41 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x51e4, gbc.sp());
        EXPECT(0x2433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x9ac6));
        // CB D6 0197
        gbc.setState(0x4b01, 0x7ce9, 0x9f80, 0x62c7, 0x7127, 0xbfde, 0x1, 0x0);
        gbc.writeMem(0x4b01, { 0xcb, 0xd6 });
        gbc.writeMem(0xbfde, { 0xaa });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7ce9, gbc.sp());
        EXPECT(0x4b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xbfde));
        // CB D6 0198
        gbc.setState(0x7901, 0x72ce, 0xd3c0, 0x509c, 0x3eec, 0x64af, 0x1, 0x0);
        gbc.writeMem(0x64af, { 0xde });
        gbc.writeMem(0x7901, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x72ce, gbc.sp());
        EXPECT(0x7903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0199
        gbc.setState(0xce18, 0xd79d, 0x7990, 0xc4cc, 0x8e6d, 0x1064, 0x0, 0x0);
        gbc.writeMem(0x1064, { 0x36 });
        gbc.writeMem(0xce18, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd79d, gbc.sp());
        EXPECT(0xce1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce18));
        EXPECT(0xd6, gbc.readMem(0xce19));
        // CB D6 019A
        gbc.setState(0x963a, 0x3941, 0x35b0, 0xc721, 0x9f71, 0x6744, 0x1, 0x1);
        gbc.writeMem(0x6744, { 0xed });
        gbc.writeMem(0x963a, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3941, gbc.sp());
        EXPECT(0x963c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963a));
        EXPECT(0xd6, gbc.readMem(0x963b));
        // CB D6 019B
        gbc.setState(0x29a7, 0xedaa, 0xfc70, 0x599f, 0x863f, 0xd3ef, 0x0, 0x0);
        gbc.writeMem(0x29a7, { 0xcb, 0xd6 });
        gbc.writeMem(0xd3ef, { 0x5e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xedaa, gbc.sp());
        EXPECT(0x29a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd3ef));
        // CB D6 019C
        gbc.setState(0x12b8, 0x64ca, 0xb0b0, 0xb5c5, 0xff56, 0xc32e, 0x0, 0x0);
        gbc.writeMem(0x12b8, { 0xcb, 0xd6 });
        gbc.writeMem(0xc32e, { 0x9b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x64ca, gbc.sp());
        EXPECT(0x12ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc32e));
        // CB D6 019D
        gbc.setState(0x8fa2, 0xd326, 0xa1c0, 0x7871, 0x9e33, 0x58b8, 0x0, 0x1);
        gbc.writeMem(0x58b8, { 0x54 });
        gbc.writeMem(0x8fa2, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd326, gbc.sp());
        EXPECT(0x8fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa2));
        EXPECT(0xd6, gbc.readMem(0x8fa3));
        // CB D6 019E
        gbc.setState(0xea6c, 0x83ac, 0x4c50, 0x7af, 0x32d1, 0xbcb5, 0x0, 0x1);
        gbc.writeMem(0xbcb5, { 0x1 });
        gbc.writeMem(0xea6c, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x83ac, gbc.sp());
        EXPECT(0xea6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbcb5));
        EXPECT(0xcb, gbc.readMem(0xea6c));
        EXPECT(0xd6, gbc.readMem(0xea6d));
        // CB D6 01A0
        gbc.setState(0x6460, 0x8de3, 0xad70, 0x34d2, 0x8c47, 0x62c6, 0x0, 0x1);
        gbc.writeMem(0x62c6, { 0xa5 });
        gbc.writeMem(0x6460, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8de3, gbc.sp());
        EXPECT(0x6462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 01A3
        gbc.setState(0x104c, 0xe44d, 0x1b90, 0x1e43, 0x6a39, 0xa1fb, 0x1, 0x0);
        gbc.writeMem(0x104c, { 0xcb, 0xd6 });
        gbc.writeMem(0xa1fb, { 0x9d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe44d, gbc.sp());
        EXPECT(0x104e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa1fb));
        // CB D6 01A4
        gbc.setState(0xb83f, 0x61e9, 0x240, 0xeb48, 0x4f4, 0x1a6b, 0x1, 0x1);
        gbc.writeMem(0x1a6b, { 0x44 });
        gbc.writeMem(0xb83f, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x61e9, gbc.sp());
        EXPECT(0xb841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb83f));
        EXPECT(0xd6, gbc.readMem(0xb840));
        // CB D6 01A5
        gbc.setState(0x12bd, 0xa08b, 0x5f80, 0x1240, 0x4f32, 0xd246, 0x1, 0x0);
        gbc.writeMem(0x12bd, { 0xcb, 0xd6 });
        gbc.writeMem(0xd246, { 0x73 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa08b, gbc.sp());
        EXPECT(0x12bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd246));
        // CB D6 01A6
        gbc.setState(0x37d7, 0xd6f0, 0xd090, 0x981f, 0xb24d, 0xbc1, 0x0, 0x1);
        gbc.writeMem(0xbc1, { 0x17 });
        gbc.writeMem(0x37d7, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd6f0, gbc.sp());
        EXPECT(0x37d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 01A7
        gbc.setState(0x4633, 0x2b26, 0xc210, 0x26f3, 0x5f4f, 0xcfa2, 0x0, 0x1);
        gbc.writeMem(0x4633, { 0xcb, 0xd6 });
        gbc.writeMem(0xcfa2, { 0x63 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2b26, gbc.sp());
        EXPECT(0x4635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xcfa2));
        // CB D6 01A8
        gbc.setState(0xd62d, 0x3b6e, 0xd160, 0x4f28, 0xdf3e, 0xcc80, 0x0, 0x0);
        gbc.writeMem(0xcc80, { 0xbf });
        gbc.writeMem(0xd62d, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3b6e, gbc.sp());
        EXPECT(0xd62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xcc80));
        EXPECT(0xcb, gbc.readMem(0xd62d));
        EXPECT(0xd6, gbc.readMem(0xd62e));
        // CB D6 01AA
        gbc.setState(0xa82f, 0xb966, 0xa5c0, 0xd3e5, 0x6cc1, 0x2234, 0x1, 0x0);
        gbc.writeMem(0x2234, { 0x1e });
        gbc.writeMem(0xa82f, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb966, gbc.sp());
        EXPECT(0xa831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa82f));
        EXPECT(0xd6, gbc.readMem(0xa830));
        // CB D6 01AB
        gbc.setState(0x7a98, 0x604e, 0x22b0, 0xb1c6, 0xa301, 0xe58d, 0x0, 0x0);
        gbc.writeMem(0x7a98, { 0xcb, 0xd6 });
        gbc.writeMem(0xe58d, { 0xe6 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x604e, gbc.sp());
        EXPECT(0x7a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe58d));
        // CB D6 01AC
        gbc.setState(0xdb82, 0xb908, 0x79e0, 0xe168, 0x4c9e, 0xf144, 0x0, 0x1);
        gbc.writeMem(0xdb82, { 0xcb, 0xd6 });
        gbc.writeMem(0xf144, { 0x38 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb908, gbc.sp());
        EXPECT(0xdb84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb82));
        EXPECT(0xd6, gbc.readMem(0xdb83));
        EXPECT(0x3c, gbc.readMem(0xf144));
        // CB D6 01AE
        gbc.setState(0xc8c0, 0xa273, 0xe4e0, 0x4d8b, 0xbb0a, 0x2065, 0x1, 0x1);
        gbc.writeMem(0x2065, { 0xa7 });
        gbc.writeMem(0xc8c0, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa273, gbc.sp());
        EXPECT(0xc8c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c0));
        EXPECT(0xd6, gbc.readMem(0xc8c1));
        // CB D6 01AF
        gbc.setState(0xabb4, 0xb210, 0x53c0, 0x1e0f, 0xd659, 0x79c9, 0x1, 0x1);
        gbc.writeMem(0x79c9, { 0xb6 });
        gbc.writeMem(0xabb4, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb210, gbc.sp());
        EXPECT(0xabb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb4));
        EXPECT(0xd6, gbc.readMem(0xabb5));
        // CB D6 01B0
        gbc.setState(0x6973, 0x5473, 0x800, 0x6915, 0x7497, 0x87d8, 0x1, 0x0);
        gbc.writeMem(0x6973, { 0xcb, 0xd6 });
        gbc.writeMem(0x87d8, { 0x3a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5473, gbc.sp());
        EXPECT(0x6975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x87d8));
        // CB D6 01B1
        gbc.setState(0xcfe, 0xc5f, 0x6cd0, 0x11ff, 0x12fb, 0x8894, 0x1, 0x0);
        gbc.writeMem(0xcfe, { 0xcb, 0xd6 });
        gbc.writeMem(0x8894, { 0x61 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc5f, gbc.sp());
        EXPECT(0xd00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8894));
        // CB D6 01B2
        gbc.setState(0xaf46, 0xd89b, 0xa90, 0x2761, 0x502, 0xba50, 0x0, 0x0);
        gbc.writeMem(0xaf46, { 0xcb, 0xd6 });
        gbc.writeMem(0xba50, { 0x1f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd89b, gbc.sp());
        EXPECT(0xaf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf46));
        EXPECT(0xd6, gbc.readMem(0xaf47));
        EXPECT(0x1f, gbc.readMem(0xba50));
        // CB D6 01B3
        gbc.setState(0x63f9, 0x51e2, 0x19c0, 0x6535, 0xe87d, 0x3433, 0x1, 0x0);
        gbc.writeMem(0x3433, { 0x1d });
        gbc.writeMem(0x63f9, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x51e2, gbc.sp());
        EXPECT(0x63fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 01B5
        gbc.setState(0xe314, 0x5f01, 0xcf50, 0xa1e9, 0xdf7f, 0xe37f, 0x0, 0x0);
        gbc.writeMem(0xe314, { 0xcb, 0xd6 });
        gbc.writeMem(0xe37f, { 0xb2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5f01, gbc.sp());
        EXPECT(0xe316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe314));
        EXPECT(0xd6, gbc.readMem(0xe315));
        EXPECT(0xb6, gbc.readMem(0xe37f));
        // CB D6 01B8
        gbc.setState(0x3233, 0xfe6a, 0xd0c0, 0x475f, 0x282d, 0xef94, 0x0, 0x0);
        gbc.writeMem(0x3233, { 0xcb, 0xd6 });
        gbc.writeMem(0xef94, { 0xa });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfe6a, gbc.sp());
        EXPECT(0x3235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xef94));
        // CB D6 01B9
        gbc.setState(0x2299, 0xc043, 0x29a0, 0xeaa5, 0x4ef3, 0xcb58, 0x0, 0x0);
        gbc.writeMem(0x2299, { 0xcb, 0xd6 });
        gbc.writeMem(0xcb58, { 0x4a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc043, gbc.sp());
        EXPECT(0x229b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcb58));
        // CB D6 01BA
        gbc.setState(0x3e66, 0xadf3, 0xd4c0, 0x683f, 0x73b5, 0xbd45, 0x1, 0x1);
        gbc.writeMem(0x3e66, { 0xcb, 0xd6 });
        gbc.writeMem(0xbd45, { 0x74 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xadf3, gbc.sp());
        EXPECT(0x3e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xbd45));
        // CB D6 01BB
        gbc.setState(0xc912, 0x61c, 0x8b0, 0xc56a, 0x4c79, 0xbd59, 0x1, 0x0);
        gbc.writeMem(0xbd59, { 0x56 });
        gbc.writeMem(0xc912, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x61c, gbc.sp());
        EXPECT(0xc914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbd59));
        EXPECT(0xcb, gbc.readMem(0xc912));
        EXPECT(0xd6, gbc.readMem(0xc913));
        // CB D6 01BC
        gbc.setState(0x334a, 0x708f, 0x40c0, 0xfce1, 0x2b0e, 0x6d30, 0x0, 0x0);
        gbc.writeMem(0x334a, { 0xcb, 0xd6 });
        gbc.writeMem(0x6d30, { 0xb7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x708f, gbc.sp());
        EXPECT(0x334c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 01BE
        gbc.setState(0xb560, 0x2433, 0xeac0, 0x837, 0x6d7c, 0xea9a, 0x0, 0x1);
        gbc.writeMem(0xb560, { 0xcb, 0xd6 });
        gbc.writeMem(0xea9a, { 0x93 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2433, gbc.sp());
        EXPECT(0xb562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb560));
        EXPECT(0xd6, gbc.readMem(0xb561));
        EXPECT(0x97, gbc.readMem(0xea9a));
        // CB D6 01BF
        gbc.setState(0x6a1e, 0x15, 0x2930, 0xe04, 0x7083, 0xa03f, 0x0, 0x1);
        gbc.writeMem(0x6a1e, { 0xcb, 0xd6 });
        gbc.writeMem(0xa03f, { 0x36 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x15, gbc.sp());
        EXPECT(0x6a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa03f));
        // CB D6 01C0
        gbc.setState(0xade5, 0xeddd, 0x4730, 0x71cd, 0x1e9d, 0xb45, 0x1, 0x0);
        gbc.writeMem(0xb45, { 0x7e });
        gbc.writeMem(0xade5, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xeddd, gbc.sp());
        EXPECT(0xade7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade5));
        EXPECT(0xd6, gbc.readMem(0xade6));
        // CB D6 01C1
        gbc.setState(0x8d4, 0x1cbe, 0x6f00, 0x8e97, 0xe572, 0x9881, 0x1, 0x1);
        gbc.writeMem(0x8d4, { 0xcb, 0xd6 });
        gbc.writeMem(0x9881, { 0xa8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1cbe, gbc.sp());
        EXPECT(0x8d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9881));
        // CB D6 01C3
        gbc.setState(0x92ab, 0x692a, 0x2860, 0xfd74, 0x1ea1, 0x7bac, 0x0, 0x1);
        gbc.writeMem(0x7bac, { 0x5c });
        gbc.writeMem(0x92ab, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x692a, gbc.sp());
        EXPECT(0x92ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ab));
        EXPECT(0xd6, gbc.readMem(0x92ac));
        // CB D6 01C4
        gbc.setState(0x7342, 0x4d6d, 0xd6d0, 0xee97, 0x1191, 0xc7c6, 0x1, 0x1);
        gbc.writeMem(0x7342, { 0xcb, 0xd6 });
        gbc.writeMem(0xc7c6, { 0x77 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4d6d, gbc.sp());
        EXPECT(0x7344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc7c6));
        // CB D6 01C7
        gbc.setState(0xe25b, 0xc2da, 0x4df0, 0xf65a, 0xc5e3, 0x4222, 0x1, 0x1);
        gbc.writeMem(0x4222, { 0x95 });
        gbc.writeMem(0xe25b, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc2da, gbc.sp());
        EXPECT(0xe25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25b));
        EXPECT(0xd6, gbc.readMem(0xe25c));
        // CB D6 01C8
        gbc.setState(0x6af6, 0x273, 0xec70, 0x30c4, 0x41ff, 0xf630, 0x1, 0x1);
        gbc.writeMem(0x6af6, { 0xcb, 0xd6 });
        gbc.writeMem(0xf630, { 0xab });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x273, gbc.sp());
        EXPECT(0x6af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xf630));
        // CB D6 01CA
        gbc.setState(0x810d, 0x1fa1, 0x6050, 0xc54d, 0xa52d, 0xd1ae, 0x0, 0x1);
        gbc.writeMem(0x810d, { 0xcb, 0xd6 });
        gbc.writeMem(0xd1ae, { 0xad });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1fa1, gbc.sp());
        EXPECT(0x810f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x810d));
        EXPECT(0xd6, gbc.readMem(0x810e));
        EXPECT(0xad, gbc.readMem(0xd1ae));
        // CB D6 01CB
        gbc.setState(0x1578, 0xf8c6, 0x52b0, 0xd330, 0x96c8, 0xc1c4, 0x1, 0x1);
        gbc.writeMem(0x1578, { 0xcb, 0xd6 });
        gbc.writeMem(0xc1c4, { 0x2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf8c6, gbc.sp());
        EXPECT(0x157a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc1c4));
        // CB D6 01CC
        gbc.setState(0x7232, 0x6d6d, 0xfcb0, 0xd72c, 0x95f, 0xd1bf, 0x1, 0x0);
        gbc.writeMem(0x7232, { 0xcb, 0xd6 });
        gbc.writeMem(0xd1bf, { 0xfe });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6d6d, gbc.sp());
        EXPECT(0x7234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd1bf));
        // CB D6 01CE
        gbc.setState(0xe40d, 0x7703, 0x9f20, 0xa47d, 0x58c1, 0xb7d2, 0x1, 0x0);
        gbc.writeMem(0xb7d2, { 0x4d });
        gbc.writeMem(0xe40d, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7703, gbc.sp());
        EXPECT(0xe40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb7d2));
        EXPECT(0xcb, gbc.readMem(0xe40d));
        EXPECT(0xd6, gbc.readMem(0xe40e));
        // CB D6 01D0
        gbc.setState(0xb2a4, 0xd7a1, 0xfa00, 0x1bbe, 0x1de7, 0xd37c, 0x0, 0x0);
        gbc.writeMem(0xb2a4, { 0xcb, 0xd6 });
        gbc.writeMem(0xd37c, { 0x22 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd7a1, gbc.sp());
        EXPECT(0xb2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a4));
        EXPECT(0xd6, gbc.readMem(0xb2a5));
        EXPECT(0x26, gbc.readMem(0xd37c));
        // CB D6 01D2
        gbc.setState(0x6f18, 0xfe6a, 0x7090, 0x5f92, 0xfde7, 0xb45a, 0x1, 0x0);
        gbc.writeMem(0x6f18, { 0xcb, 0xd6 });
        gbc.writeMem(0xb45a, { 0x15 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfe6a, gbc.sp());
        EXPECT(0x6f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb45a));
        // CB D6 01D3
        gbc.setState(0xad4b, 0xe304, 0x8ef0, 0x2db8, 0x3f4f, 0xaab2, 0x1, 0x0);
        gbc.writeMem(0xaab2, { 0x48 });
        gbc.writeMem(0xad4b, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe304, gbc.sp());
        EXPECT(0xad4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xaab2));
        EXPECT(0xcb, gbc.readMem(0xad4b));
        EXPECT(0xd6, gbc.readMem(0xad4c));
        // CB D6 01D5
        gbc.setState(0x818d, 0xc9c0, 0xae0, 0xef30, 0xedc0, 0x9fa7, 0x1, 0x0);
        gbc.writeMem(0x818d, { 0xcb, 0xd6 });
        gbc.writeMem(0x9fa7, { 0x7a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc9c0, gbc.sp());
        EXPECT(0x818f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x818d));
        EXPECT(0xd6, gbc.readMem(0x818e));
        EXPECT(0x7e, gbc.readMem(0x9fa7));
        // CB D6 01D6
        gbc.setState(0xcbc1, 0x9d9f, 0x1710, 0x36ad, 0xb22, 0xecb2, 0x0, 0x0);
        gbc.writeMem(0xcbc1, { 0xcb, 0xd6 });
        gbc.writeMem(0xecb2, { 0x52 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9d9f, gbc.sp());
        EXPECT(0xcbc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc1));
        EXPECT(0xd6, gbc.readMem(0xcbc2));
        EXPECT(0x56, gbc.readMem(0xecb2));
        // CB D6 01D7
        gbc.setState(0xde67, 0x5e22, 0x65d0, 0x8721, 0x5187, 0xdc03, 0x1, 0x1);
        gbc.writeMem(0xdc03, { 0x94 });
        gbc.writeMem(0xde67, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5e22, gbc.sp());
        EXPECT(0xde69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdc03));
        EXPECT(0xcb, gbc.readMem(0xde67));
        EXPECT(0xd6, gbc.readMem(0xde68));
        // CB D6 01D8
        gbc.setState(0x9c4c, 0xc49b, 0x7f00, 0x48d1, 0xcc55, 0xfdbb, 0x1, 0x0);
        gbc.writeMem(0x9c4c, { 0xcb, 0xd6 });
        gbc.writeMem(0xfdbb, { 0xee });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc49b, gbc.sp());
        EXPECT(0x9c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c4c));
        EXPECT(0xd6, gbc.readMem(0x9c4d));
        EXPECT(0xee, gbc.readMem(0xfdbb));
        // CB D6 01D9
        gbc.setState(0x3109, 0x6c, 0xb770, 0xdf90, 0xf05e, 0xc740, 0x0, 0x0);
        gbc.writeMem(0x3109, { 0xcb, 0xd6 });
        gbc.writeMem(0xc740, { 0xca });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6c, gbc.sp());
        EXPECT(0x310b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xc740));
        // CB D6 01DA
        gbc.setState(0x91c1, 0x2b2, 0x4720, 0x9cf5, 0xb6a7, 0xb766, 0x0, 0x0);
        gbc.writeMem(0x91c1, { 0xcb, 0xd6 });
        gbc.writeMem(0xb766, { 0xad });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2b2, gbc.sp());
        EXPECT(0x91c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c1));
        EXPECT(0xd6, gbc.readMem(0x91c2));
        EXPECT(0xad, gbc.readMem(0xb766));
        // CB D6 01DB
        gbc.setState(0x2351, 0x36b7, 0x340, 0xc98f, 0xce45, 0x31a9, 0x1, 0x1);
        gbc.writeMem(0x2351, { 0xcb, 0xd6 });
        gbc.writeMem(0x31a9, { 0x84 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x36b7, gbc.sp());
        EXPECT(0x2353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 01DC
        gbc.setState(0x32db, 0xc69c, 0xe910, 0x748a, 0xade5, 0xa29e, 0x0, 0x0);
        gbc.writeMem(0x32db, { 0xcb, 0xd6 });
        gbc.writeMem(0xa29e, { 0xe4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc69c, gbc.sp());
        EXPECT(0x32dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xa29e));
        // CB D6 01DD
        gbc.setState(0x834f, 0xfdf6, 0x3710, 0xcd1d, 0xa391, 0x5544, 0x1, 0x1);
        gbc.writeMem(0x5544, { 0x3f });
        gbc.writeMem(0x834f, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfdf6, gbc.sp());
        EXPECT(0x8351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x834f));
        EXPECT(0xd6, gbc.readMem(0x8350));
        // CB D6 01DE
        gbc.setState(0xf8b, 0x9594, 0xe480, 0x3622, 0x51d9, 0xbdda, 0x0, 0x0);
        gbc.writeMem(0xf8b, { 0xcb, 0xd6 });
        gbc.writeMem(0xbdda, { 0xa6 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9594, gbc.sp());
        EXPECT(0xf8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xbdda));
        // CB D6 01DF
        gbc.setState(0xefb7, 0x90d5, 0xb150, 0x9751, 0x4a6a, 0xf4e7, 0x0, 0x1);
        gbc.writeMem(0xefb7, { 0xcb, 0xd6 });
        gbc.writeMem(0xf4e7, { 0xee });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x90d5, gbc.sp());
        EXPECT(0xefb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb7));
        EXPECT(0xd6, gbc.readMem(0xefb8));
        EXPECT(0xee, gbc.readMem(0xf4e7));
        // CB D6 01E1
        gbc.setState(0xe878, 0x50c1, 0x1930, 0xddcd, 0x5328, 0x982d, 0x1, 0x0);
        gbc.writeMem(0x982d, { 0x42 });
        gbc.writeMem(0xe878, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x50c1, gbc.sp());
        EXPECT(0xe87a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x982d));
        EXPECT(0xcb, gbc.readMem(0xe878));
        EXPECT(0xd6, gbc.readMem(0xe879));
        // CB D6 01E2
        gbc.setState(0xdbc4, 0x8472, 0x36d0, 0x1514, 0x25c3, 0x8fe5, 0x1, 0x1);
        gbc.writeMem(0x8fe5, { 0x74 });
        gbc.writeMem(0xdbc4, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8472, gbc.sp());
        EXPECT(0xdbc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8fe5));
        EXPECT(0xcb, gbc.readMem(0xdbc4));
        EXPECT(0xd6, gbc.readMem(0xdbc5));
        // CB D6 01E3
        gbc.setState(0xa641, 0xdbf7, 0x7b30, 0xa94b, 0x5f03, 0xa5d0, 0x0, 0x0);
        gbc.writeMem(0xa5d0, { 0x4e });
        gbc.writeMem(0xa641, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdbf7, gbc.sp());
        EXPECT(0xa643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xa5d0));
        EXPECT(0xcb, gbc.readMem(0xa641));
        EXPECT(0xd6, gbc.readMem(0xa642));
        // CB D6 01E4
        gbc.setState(0x79f7, 0x5f0a, 0xdf70, 0x82b9, 0x75fe, 0x9c49, 0x0, 0x0);
        gbc.writeMem(0x79f7, { 0xcb, 0xd6 });
        gbc.writeMem(0x9c49, { 0xf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5f0a, gbc.sp());
        EXPECT(0x79f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x9c49));
        // CB D6 01E5
        gbc.setState(0x3376, 0xdf89, 0xc920, 0x21a9, 0xc950, 0x73f1, 0x0, 0x1);
        gbc.writeMem(0x3376, { 0xcb, 0xd6 });
        gbc.writeMem(0x73f1, { 0xd5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdf89, gbc.sp());
        EXPECT(0x3378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 01E6
        gbc.setState(0x569, 0xfb79, 0xe020, 0x577a, 0x6707, 0x7554, 0x0, 0x1);
        gbc.writeMem(0x569, { 0xcb, 0xd6 });
        gbc.writeMem(0x7554, { 0x27 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfb79, gbc.sp());
        EXPECT(0x56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 01E7
        gbc.setState(0xa6b1, 0xebf2, 0xba20, 0xff41, 0x906f, 0x48d6, 0x0, 0x0);
        gbc.writeMem(0x48d6, { 0x1e });
        gbc.writeMem(0xa6b1, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xebf2, gbc.sp());
        EXPECT(0xa6b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b1));
        EXPECT(0xd6, gbc.readMem(0xa6b2));
        // CB D6 01E9
        gbc.setState(0xda48, 0xa60f, 0xd550, 0x48b9, 0x8fec, 0xbe75, 0x0, 0x0);
        gbc.writeMem(0xbe75, { 0xfb });
        gbc.writeMem(0xda48, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa60f, gbc.sp());
        EXPECT(0xda4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xbe75));
        EXPECT(0xcb, gbc.readMem(0xda48));
        EXPECT(0xd6, gbc.readMem(0xda49));
        // CB D6 01EA
        gbc.setState(0x2530, 0xf5fb, 0x4f80, 0x2379, 0x56ae, 0x3914, 0x1, 0x1);
        gbc.writeMem(0x2530, { 0xcb, 0xd6 });
        gbc.writeMem(0x3914, { 0x76 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf5fb, gbc.sp());
        EXPECT(0x2532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 01EB
        gbc.setState(0xb9f2, 0xcf85, 0x6ef0, 0x335d, 0x1be7, 0xdd19, 0x1, 0x1);
        gbc.writeMem(0xb9f2, { 0xcb, 0xd6 });
        gbc.writeMem(0xdd19, { 0x44 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xcf85, gbc.sp());
        EXPECT(0xb9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f2));
        EXPECT(0xd6, gbc.readMem(0xb9f3));
        EXPECT(0x44, gbc.readMem(0xdd19));
        // CB D6 01ED
        gbc.setState(0x3d1e, 0xf0d, 0xf6f0, 0xbb06, 0x730b, 0x952d, 0x0, 0x0);
        gbc.writeMem(0x3d1e, { 0xcb, 0xd6 });
        gbc.writeMem(0x952d, { 0x6a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf0d, gbc.sp());
        EXPECT(0x3d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x952d));
        // CB D6 01F2
        gbc.setState(0x7e53, 0x3457, 0xbfb0, 0xf277, 0xaa9, 0x7a40, 0x0, 0x0);
        gbc.writeMem(0x7a40, { 0xbe });
        gbc.writeMem(0x7e53, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3457, gbc.sp());
        EXPECT(0x7e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 01F4
        gbc.setState(0x454d, 0xa1ef, 0x4d20, 0x9244, 0xce1d, 0xe681, 0x0, 0x0);
        gbc.writeMem(0x454d, { 0xcb, 0xd6 });
        gbc.writeMem(0xe681, { 0x9e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa1ef, gbc.sp());
        EXPECT(0x454f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe681));
        // CB D6 01F6
        gbc.setState(0x9875, 0x85ea, 0x1ae0, 0xef60, 0x838e, 0xa267, 0x0, 0x1);
        gbc.writeMem(0x9875, { 0xcb, 0xd6 });
        gbc.writeMem(0xa267, { 0x79 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x85ea, gbc.sp());
        EXPECT(0x9877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9875));
        EXPECT(0xd6, gbc.readMem(0x9876));
        EXPECT(0x7d, gbc.readMem(0xa267));
        // CB D6 01F7
        gbc.setState(0x4745, 0xa8aa, 0x46b0, 0x3e15, 0x413a, 0xdc2a, 0x1, 0x0);
        gbc.writeMem(0x4745, { 0xcb, 0xd6 });
        gbc.writeMem(0xdc2a, { 0x88 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa8aa, gbc.sp());
        EXPECT(0x4747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdc2a));
        // CB D6 01F8
        gbc.setState(0x602a, 0x7ec6, 0x1580, 0x69ad, 0x8d13, 0xaae9, 0x1, 0x1);
        gbc.writeMem(0x602a, { 0xcb, 0xd6 });
        gbc.writeMem(0xaae9, { 0xbe });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7ec6, gbc.sp());
        EXPECT(0x602c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xaae9));
        // CB D6 01F9
        gbc.setState(0x3709, 0x53b0, 0xf050, 0x2da2, 0x41f5, 0xc171, 0x1, 0x0);
        gbc.writeMem(0x3709, { 0xcb, 0xd6 });
        gbc.writeMem(0xc171, { 0x79 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x53b0, gbc.sp());
        EXPECT(0x370b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc171));
        // CB D6 01FA
        gbc.setState(0x8408, 0x28a1, 0x31d0, 0xe9c0, 0x22ac, 0x9c9b, 0x0, 0x1);
        gbc.writeMem(0x8408, { 0xcb, 0xd6 });
        gbc.writeMem(0x9c9b, { 0xa5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x28a1, gbc.sp());
        EXPECT(0x840a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8408));
        EXPECT(0xd6, gbc.readMem(0x8409));
        EXPECT(0xa5, gbc.readMem(0x9c9b));
        // CB D6 01FC
        gbc.setState(0xbbde, 0x4d49, 0xb770, 0x71b4, 0x5c5a, 0xf20e, 0x1, 0x0);
        gbc.writeMem(0xbbde, { 0xcb, 0xd6 });
        gbc.writeMem(0xf20e, { 0x4c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4d49, gbc.sp());
        EXPECT(0xbbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbde));
        EXPECT(0xd6, gbc.readMem(0xbbdf));
        EXPECT(0x4c, gbc.readMem(0xf20e));
        // CB D6 01FF
        gbc.setState(0x6156, 0xc8ab, 0xd600, 0x4217, 0x649c, 0xc369, 0x0, 0x0);
        gbc.writeMem(0x6156, { 0xcb, 0xd6 });
        gbc.writeMem(0xc369, { 0x77 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc8ab, gbc.sp());
        EXPECT(0x6158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc369));
        // CB D6 0201
        gbc.setState(0xef8a, 0x4ae6, 0x0, 0xea1f, 0xbf68, 0x800, 0x0, 0x0);
        gbc.writeMem(0x800, { 0x76 });
        gbc.writeMem(0xef8a, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4ae6, gbc.sp());
        EXPECT(0xef8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef8a));
        EXPECT(0xd6, gbc.readMem(0xef8b));
        // CB D6 0202
        gbc.setState(0x8e18, 0xa08, 0xe0f0, 0x69b1, 0x6b54, 0xb79e, 0x0, 0x0);
        gbc.writeMem(0x8e18, { 0xcb, 0xd6 });
        gbc.writeMem(0xb79e, { 0xd1 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa08, gbc.sp());
        EXPECT(0x8e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e18));
        EXPECT(0xd6, gbc.readMem(0x8e19));
        EXPECT(0xd5, gbc.readMem(0xb79e));
        // CB D6 0205
        gbc.setState(0xeb15, 0xf6de, 0x80e0, 0x9692, 0xe1b5, 0xc4f1, 0x1, 0x0);
        gbc.writeMem(0xc4f1, { 0x37 });
        gbc.writeMem(0xeb15, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf6de, gbc.sp());
        EXPECT(0xeb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc4f1));
        EXPECT(0xcb, gbc.readMem(0xeb15));
        EXPECT(0xd6, gbc.readMem(0xeb16));
        // CB D6 0206
        gbc.setState(0x4b95, 0xdd8c, 0x7620, 0x31ee, 0x1f60, 0x9851, 0x1, 0x1);
        gbc.writeMem(0x4b95, { 0xcb, 0xd6 });
        gbc.writeMem(0x9851, { 0x24 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdd8c, gbc.sp());
        EXPECT(0x4b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x9851));
        // CB D6 0207
        gbc.setState(0xb5ee, 0xc287, 0xd8a0, 0x566, 0x4faf, 0xb9f1, 0x1, 0x0);
        gbc.writeMem(0xb5ee, { 0xcb, 0xd6 });
        gbc.writeMem(0xb9f1, { 0x59 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc287, gbc.sp());
        EXPECT(0xb5f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ee));
        EXPECT(0xd6, gbc.readMem(0xb5ef));
        EXPECT(0x5d, gbc.readMem(0xb9f1));
        // CB D6 0208
        gbc.setState(0x2c1f, 0x1be, 0xe010, 0x6665, 0x44a, 0xdfd5, 0x0, 0x1);
        gbc.writeMem(0x2c1f, { 0xcb, 0xd6 });
        gbc.writeMem(0xdfd5, { 0xf });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1be, gbc.sp());
        EXPECT(0x2c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xdfd5));
        // CB D6 0209
        gbc.setState(0x6721, 0xe418, 0xf170, 0x951, 0x9c75, 0xae7a, 0x1, 0x1);
        gbc.writeMem(0x6721, { 0xcb, 0xd6 });
        gbc.writeMem(0xae7a, { 0x57 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe418, gbc.sp());
        EXPECT(0x6723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xae7a));
        // CB D6 020C
        gbc.setState(0xd169, 0x4148, 0xbcf0, 0xc222, 0xc487, 0xd260, 0x1, 0x1);
        gbc.writeMem(0xd169, { 0xcb, 0xd6 });
        gbc.writeMem(0xd260, { 0x29 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4148, gbc.sp());
        EXPECT(0xd16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd169));
        EXPECT(0xd6, gbc.readMem(0xd16a));
        EXPECT(0x2d, gbc.readMem(0xd260));
        // CB D6 020D
        gbc.setState(0xeb0a, 0xe7b, 0x9460, 0xc9c0, 0xe076, 0xb5d9, 0x1, 0x1);
        gbc.writeMem(0xb5d9, { 0xdf });
        gbc.writeMem(0xeb0a, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe7b, gbc.sp());
        EXPECT(0xeb0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xb5d9));
        EXPECT(0xcb, gbc.readMem(0xeb0a));
        EXPECT(0xd6, gbc.readMem(0xeb0b));
        // CB D6 020E
        gbc.setState(0xcc4b, 0x2f00, 0x5af0, 0x534c, 0xf514, 0x651d, 0x1, 0x1);
        gbc.writeMem(0x651d, { 0x64 });
        gbc.writeMem(0xcc4b, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2f00, gbc.sp());
        EXPECT(0xcc4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc4b));
        EXPECT(0xd6, gbc.readMem(0xcc4c));
        // CB D6 020F
        gbc.setState(0x43ed, 0xcb53, 0x7680, 0x5411, 0xb1d9, 0xfe38, 0x1, 0x0);
        gbc.writeMem(0x43ed, { 0xcb, 0xd6 });
        gbc.writeMem(0xfe38, { 0xc3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcb53, gbc.sp());
        EXPECT(0x43ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xfe38));
        // CB D6 0211
        gbc.setState(0x6ae8, 0x76f2, 0xd9b0, 0x7599, 0x3ca4, 0xe0b4, 0x0, 0x0);
        gbc.writeMem(0x6ae8, { 0xcb, 0xd6 });
        gbc.writeMem(0xe0b4, { 0xf4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x76f2, gbc.sp());
        EXPECT(0x6aea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xe0b4));
        // CB D6 0212
        gbc.setState(0xe6d9, 0x2461, 0x9480, 0xbd47, 0xa69e, 0xfd17, 0x0, 0x1);
        gbc.writeMem(0xe6d9, { 0xcb, 0xd6 });
        gbc.writeMem(0xfd17, { 0x41 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2461, gbc.sp());
        EXPECT(0xe6db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d9));
        EXPECT(0xd6, gbc.readMem(0xe6da));
        EXPECT(0x45, gbc.readMem(0xfd17));
        // CB D6 0213
        gbc.setState(0x7959, 0x85a2, 0x68b0, 0x2c8e, 0xd265, 0x780a, 0x1, 0x1);
        gbc.writeMem(0x780a, { 0x16 });
        gbc.writeMem(0x7959, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x85a2, gbc.sp());
        EXPECT(0x795b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0216
        gbc.setState(0xcdb, 0xdebb, 0xb5b0, 0x6c75, 0x812e, 0x1776, 0x0, 0x1);
        gbc.writeMem(0xcdb, { 0xcb, 0xd6 });
        gbc.writeMem(0x1776, { 0x3c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdebb, gbc.sp());
        EXPECT(0xcdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0217
        gbc.setState(0x8115, 0x95bb, 0xeef0, 0x907d, 0x9fbf, 0x92d5, 0x0, 0x0);
        gbc.writeMem(0x8115, { 0xcb, 0xd6 });
        gbc.writeMem(0x92d5, { 0x6f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x95bb, gbc.sp());
        EXPECT(0x8117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8115));
        EXPECT(0xd6, gbc.readMem(0x8116));
        EXPECT(0x6f, gbc.readMem(0x92d5));
        // CB D6 0218
        gbc.setState(0xa2e9, 0x12eb, 0xf030, 0xb874, 0xe15b, 0x8de2, 0x1, 0x1);
        gbc.writeMem(0x8de2, { 0x2a });
        gbc.writeMem(0xa2e9, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x12eb, gbc.sp());
        EXPECT(0xa2eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8de2));
        EXPECT(0xcb, gbc.readMem(0xa2e9));
        EXPECT(0xd6, gbc.readMem(0xa2ea));
        // CB D6 0219
        gbc.setState(0xadff, 0x3c88, 0xc2f0, 0x2f14, 0x4053, 0x71cd, 0x0, 0x0);
        gbc.writeMem(0x71cd, { 0x7 });
        gbc.writeMem(0xadff, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3c88, gbc.sp());
        EXPECT(0xae01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadff));
        EXPECT(0xd6, gbc.readMem(0xae00));
        // CB D6 021B
        gbc.setState(0xc86c, 0xdf51, 0x4420, 0x97a7, 0x7815, 0xd8f7, 0x1, 0x1);
        gbc.writeMem(0xc86c, { 0xcb, 0xd6 });
        gbc.writeMem(0xd8f7, { 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdf51, gbc.sp());
        EXPECT(0xc86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc86c));
        EXPECT(0xd6, gbc.readMem(0xc86d));
        EXPECT(0x44, gbc.readMem(0xd8f7));
        // CB D6 021C
        gbc.setState(0xe5d9, 0x6665, 0xb280, 0xac4e, 0x2eae, 0xfe11, 0x0, 0x1);
        gbc.writeMem(0xe5d9, { 0xcb, 0xd6 });
        gbc.writeMem(0xfe11, { 0x13 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6665, gbc.sp());
        EXPECT(0xe5db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d9));
        EXPECT(0xd6, gbc.readMem(0xe5da));
        EXPECT(0x17, gbc.readMem(0xfe11));
        // CB D6 021E
        gbc.setState(0x5ca3, 0xf56a, 0xe4f0, 0x38b, 0x564, 0xef92, 0x0, 0x1);
        gbc.writeMem(0x5ca3, { 0xcb, 0xd6 });
        gbc.writeMem(0xef92, { 0x1a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf56a, gbc.sp());
        EXPECT(0x5ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xef92));
        // CB D6 021F
        gbc.setState(0x3ca7, 0xbdfc, 0xcc90, 0xe400, 0x364a, 0xb721, 0x1, 0x0);
        gbc.writeMem(0x3ca7, { 0xcb, 0xd6 });
        gbc.writeMem(0xb721, { 0xd5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbdfc, gbc.sp());
        EXPECT(0x3ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb721));
        // CB D6 0220
        gbc.setState(0xcae5, 0x394f, 0x8480, 0xa55a, 0x1df2, 0x350b, 0x0, 0x1);
        gbc.writeMem(0x350b, { 0xf4 });
        gbc.writeMem(0xcae5, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x394f, gbc.sp());
        EXPECT(0xcae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae5));
        EXPECT(0xd6, gbc.readMem(0xcae6));
        // CB D6 0222
        gbc.setState(0x6d68, 0x7ce9, 0xc860, 0x8d7e, 0xa712, 0x7f1f, 0x0, 0x0);
        gbc.writeMem(0x6d68, { 0xcb, 0xd6 });
        gbc.writeMem(0x7f1f, { 0xbf });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7ce9, gbc.sp());
        EXPECT(0x6d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0223
        gbc.setState(0xbbf, 0x8489, 0x4720, 0xa9fd, 0xf0a7, 0xa192, 0x1, 0x1);
        gbc.writeMem(0xbbf, { 0xcb, 0xd6 });
        gbc.writeMem(0xa192, { 0x49 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8489, gbc.sp());
        EXPECT(0xbc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa192));
        // CB D6 0224
        gbc.setState(0xbb0f, 0x996f, 0xd090, 0x4494, 0x7bd8, 0x73ad, 0x0, 0x0);
        gbc.writeMem(0x73ad, { 0x7c });
        gbc.writeMem(0xbb0f, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x996f, gbc.sp());
        EXPECT(0xbb11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb0f));
        EXPECT(0xd6, gbc.readMem(0xbb10));
        // CB D6 0225
        gbc.setState(0x8865, 0x8e8f, 0xdee0, 0x355e, 0xa180, 0x9abe, 0x0, 0x1);
        gbc.writeMem(0x8865, { 0xcb, 0xd6 });
        gbc.writeMem(0x9abe, { 0xbe });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8e8f, gbc.sp());
        EXPECT(0x8867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8865));
        EXPECT(0xd6, gbc.readMem(0x8866));
        EXPECT(0xbe, gbc.readMem(0x9abe));
        // CB D6 0226
        gbc.setState(0xacc4, 0x2ce3, 0xee40, 0x4214, 0xf134, 0x5fe7, 0x0, 0x1);
        gbc.writeMem(0x5fe7, { 0x5 });
        gbc.writeMem(0xacc4, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2ce3, gbc.sp());
        EXPECT(0xacc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc4));
        EXPECT(0xd6, gbc.readMem(0xacc5));
        // CB D6 0229
        gbc.setState(0x9691, 0x9171, 0xa640, 0x3249, 0xf0b0, 0xc36c, 0x1, 0x0);
        gbc.writeMem(0x9691, { 0xcb, 0xd6 });
        gbc.writeMem(0xc36c, { 0xe8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9171, gbc.sp());
        EXPECT(0x9693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9691));
        EXPECT(0xd6, gbc.readMem(0x9692));
        EXPECT(0xec, gbc.readMem(0xc36c));
        // CB D6 022B
        gbc.setState(0xd012, 0x3437, 0x7b0, 0x178a, 0x6140, 0x2a25, 0x0, 0x1);
        gbc.writeMem(0x2a25, { 0x14 });
        gbc.writeMem(0xd012, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3437, gbc.sp());
        EXPECT(0xd014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd012));
        EXPECT(0xd6, gbc.readMem(0xd013));
        // CB D6 022C
        gbc.setState(0x8c73, 0xda9b, 0x38a0, 0xc2ca, 0xdd72, 0x92bf, 0x0, 0x1);
        gbc.writeMem(0x8c73, { 0xcb, 0xd6 });
        gbc.writeMem(0x92bf, { 0xd6 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xda9b, gbc.sp());
        EXPECT(0x8c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c73));
        EXPECT(0xd6, gbc.readMem(0x8c74));
        EXPECT(0xd6, gbc.readMem(0x92bf));
        // CB D6 022D
        gbc.setState(0xb7f2, 0x2cb9, 0x7d50, 0x7ce, 0xb6fc, 0xb417, 0x1, 0x1);
        gbc.writeMem(0xb417, { 0x4e });
        gbc.writeMem(0xb7f2, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2cb9, gbc.sp());
        EXPECT(0xb7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb417));
        EXPECT(0xcb, gbc.readMem(0xb7f2));
        EXPECT(0xd6, gbc.readMem(0xb7f3));
        // CB D6 022E
        gbc.setState(0xc289, 0x3009, 0x8e60, 0x9fa2, 0x170c, 0xa48c, 0x0, 0x0);
        gbc.writeMem(0xa48c, { 0x45 });
        gbc.writeMem(0xc289, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3009, gbc.sp());
        EXPECT(0xc28b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xa48c));
        EXPECT(0xcb, gbc.readMem(0xc289));
        EXPECT(0xd6, gbc.readMem(0xc28a));
        // CB D6 022F
        gbc.setState(0xdf57, 0x103f, 0xc6c0, 0xc7fb, 0x9643, 0x13bc, 0x0, 0x0);
        gbc.writeMem(0x13bc, { 0x4 });
        gbc.writeMem(0xdf57, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x103f, gbc.sp());
        EXPECT(0xdf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf57));
        EXPECT(0xd6, gbc.readMem(0xdf58));
        // CB D6 0231
        gbc.setState(0x2d10, 0xf9b8, 0x6770, 0xd1c9, 0x7519, 0xcfb8, 0x1, 0x0);
        gbc.writeMem(0x2d10, { 0xcb, 0xd6 });
        gbc.writeMem(0xcfb8, { 0x66 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf9b8, gbc.sp());
        EXPECT(0x2d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xcfb8));
        // CB D6 0232
        gbc.setState(0x6d07, 0x612e, 0x1d80, 0xed19, 0xce1, 0xcd8b, 0x0, 0x0);
        gbc.writeMem(0x6d07, { 0xcb, 0xd6 });
        gbc.writeMem(0xcd8b, { 0x72 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x612e, gbc.sp());
        EXPECT(0x6d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcd8b));
        // CB D6 0234
        gbc.setState(0xe80c, 0x5bbe, 0x1050, 0xb7a7, 0xad77, 0xbe11, 0x0, 0x1);
        gbc.writeMem(0xbe11, { 0x95 });
        gbc.writeMem(0xe80c, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5bbe, gbc.sp());
        EXPECT(0xe80e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbe11));
        EXPECT(0xcb, gbc.readMem(0xe80c));
        EXPECT(0xd6, gbc.readMem(0xe80d));
        // CB D6 0236
        gbc.setState(0xa401, 0xa2db, 0x1a30, 0xa2e5, 0xecef, 0x83f, 0x0, 0x1);
        gbc.writeMem(0x83f, { 0x3d });
        gbc.writeMem(0xa401, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa2db, gbc.sp());
        EXPECT(0xa403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa401));
        EXPECT(0xd6, gbc.readMem(0xa402));
        // CB D6 0238
        gbc.setState(0x3d62, 0xb27d, 0x4f90, 0x182, 0xd786, 0x61cb, 0x0, 0x1);
        gbc.writeMem(0x3d62, { 0xcb, 0xd6 });
        gbc.writeMem(0x61cb, { 0x17 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb27d, gbc.sp());
        EXPECT(0x3d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0239
        gbc.setState(0x495e, 0xdac4, 0xb2f0, 0xdcc8, 0x6a67, 0x26c9, 0x1, 0x0);
        gbc.writeMem(0x26c9, { 0x35 });
        gbc.writeMem(0x495e, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdac4, gbc.sp());
        EXPECT(0x4960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 023A
        gbc.setState(0x3c39, 0x69ae, 0xef60, 0x2013, 0x2abf, 0x8f47, 0x1, 0x0);
        gbc.writeMem(0x3c39, { 0xcb, 0xd6 });
        gbc.writeMem(0x8f47, { 0x92 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x69ae, gbc.sp());
        EXPECT(0x3c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x8f47));
        // CB D6 023C
        gbc.setState(0xc1a2, 0x2e3d, 0x1f60, 0xcbf2, 0x3cde, 0xdfae, 0x0, 0x1);
        gbc.writeMem(0xc1a2, { 0xcb, 0xd6 });
        gbc.writeMem(0xdfae, { 0x85 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2e3d, gbc.sp());
        EXPECT(0xc1a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a2));
        EXPECT(0xd6, gbc.readMem(0xc1a3));
        EXPECT(0x85, gbc.readMem(0xdfae));
        // CB D6 023D
        gbc.setState(0x734d, 0x3895, 0xadc0, 0xb7b9, 0x70b0, 0xf44a, 0x1, 0x1);
        gbc.writeMem(0x734d, { 0xcb, 0xd6 });
        gbc.writeMem(0xf44a, { 0x4a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3895, gbc.sp());
        EXPECT(0x734f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xf44a));
        // CB D6 023E
        gbc.setState(0xd35d, 0xb3c4, 0x17b0, 0x2439, 0xaf1, 0x9647, 0x1, 0x1);
        gbc.writeMem(0x9647, { 0x3e });
        gbc.writeMem(0xd35d, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb3c4, gbc.sp());
        EXPECT(0xd35f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9647));
        EXPECT(0xcb, gbc.readMem(0xd35d));
        EXPECT(0xd6, gbc.readMem(0xd35e));
        // CB D6 0240
        gbc.setState(0x6411, 0x47a3, 0x75f0, 0x1369, 0xdf4, 0xb492, 0x1, 0x0);
        gbc.writeMem(0x6411, { 0xcb, 0xd6 });
        gbc.writeMem(0xb492, { 0x52 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x47a3, gbc.sp());
        EXPECT(0x6413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb492));
        // CB D6 0241
        gbc.setState(0x186, 0x2b6b, 0x40, 0x2b8a, 0xec1d, 0x738c, 0x0, 0x1);
        gbc.writeMem(0x186, { 0xcb, 0xd6 });
        gbc.writeMem(0x738c, { 0xcf });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2b6b, gbc.sp());
        EXPECT(0x188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0243
        gbc.setState(0x8b5b, 0xc50, 0x3770, 0x7d0a, 0xe3be, 0x9c31, 0x0, 0x0);
        gbc.writeMem(0x8b5b, { 0xcb, 0xd6 });
        gbc.writeMem(0x9c31, { 0x89 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc50, gbc.sp());
        EXPECT(0x8b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b5b));
        EXPECT(0xd6, gbc.readMem(0x8b5c));
        EXPECT(0x8d, gbc.readMem(0x9c31));
        // CB D6 0244
        gbc.setState(0xc740, 0x9b78, 0xc5e0, 0x7e17, 0xa54b, 0xafb8, 0x0, 0x0);
        gbc.writeMem(0xafb8, { 0xd8 });
        gbc.writeMem(0xc740, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9b78, gbc.sp());
        EXPECT(0xc742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xafb8));
        EXPECT(0xcb, gbc.readMem(0xc740));
        EXPECT(0xd6, gbc.readMem(0xc741));
        // CB D6 0246
        gbc.setState(0xd088, 0xd4d, 0x77b0, 0x933e, 0x28f0, 0xfa2c, 0x0, 0x1);
        gbc.writeMem(0xd088, { 0xcb, 0xd6 });
        gbc.writeMem(0xfa2c, { 0x19 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd4d, gbc.sp());
        EXPECT(0xd08a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd088));
        EXPECT(0xd6, gbc.readMem(0xd089));
        EXPECT(0x1d, gbc.readMem(0xfa2c));
        // CB D6 0248
        gbc.setState(0x472, 0x4576, 0xdb60, 0xa42a, 0x839c, 0x69ce, 0x1, 0x0);
        gbc.writeMem(0x472, { 0xcb, 0xd6 });
        gbc.writeMem(0x69ce, { 0xed });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4576, gbc.sp());
        EXPECT(0x474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0249
        gbc.setState(0xe146, 0xbe76, 0xb370, 0x7c5e, 0x4e2c, 0x7cee, 0x0, 0x1);
        gbc.writeMem(0x7cee, { 0xfe });
        gbc.writeMem(0xe146, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbe76, gbc.sp());
        EXPECT(0xe148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe146));
        EXPECT(0xd6, gbc.readMem(0xe147));
        // CB D6 024A
        gbc.setState(0x3b28, 0xb96b, 0x26f0, 0xb71e, 0x741e, 0x4711, 0x1, 0x1);
        gbc.writeMem(0x3b28, { 0xcb, 0xd6 });
        gbc.writeMem(0x4711, { 0x2e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb96b, gbc.sp());
        EXPECT(0x3b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 024B
        gbc.setState(0x77ee, 0xed43, 0xc250, 0x5bfe, 0x2bd5, 0xdec6, 0x0, 0x0);
        gbc.writeMem(0x77ee, { 0xcb, 0xd6 });
        gbc.writeMem(0xdec6, { 0x54 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xed43, gbc.sp());
        EXPECT(0x77f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xdec6));
        // CB D6 024C
        gbc.setState(0xd9c3, 0xe66f, 0x3dc0, 0xdd7a, 0x2898, 0x154e, 0x1, 0x0);
        gbc.writeMem(0x154e, { 0x37 });
        gbc.writeMem(0xd9c3, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe66f, gbc.sp());
        EXPECT(0xd9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c3));
        EXPECT(0xd6, gbc.readMem(0xd9c4));
        // CB D6 024D
        gbc.setState(0x1742, 0xce5b, 0x15a0, 0xf51b, 0xa2b4, 0xeab8, 0x1, 0x0);
        gbc.writeMem(0x1742, { 0xcb, 0xd6 });
        gbc.writeMem(0xeab8, { 0x1 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xce5b, gbc.sp());
        EXPECT(0x1744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xeab8));
        // CB D6 024F
        gbc.setState(0x881a, 0xd233, 0x5ae0, 0x67ff, 0xfc9a, 0x9229, 0x0, 0x1);
        gbc.writeMem(0x881a, { 0xcb, 0xd6 });
        gbc.writeMem(0x9229, { 0xfa });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd233, gbc.sp());
        EXPECT(0x881c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881a));
        EXPECT(0xd6, gbc.readMem(0x881b));
        EXPECT(0xfe, gbc.readMem(0x9229));
        // CB D6 0251
        gbc.setState(0xe483, 0xd382, 0x7db0, 0x1cc8, 0x939c, 0xe07d, 0x0, 0x0);
        gbc.writeMem(0xe07d, { 0xa });
        gbc.writeMem(0xe483, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd382, gbc.sp());
        EXPECT(0xe485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe07d));
        EXPECT(0xcb, gbc.readMem(0xe483));
        EXPECT(0xd6, gbc.readMem(0xe484));
        // CB D6 0252
        gbc.setState(0xb6f5, 0x767, 0xe850, 0xb63c, 0xf23e, 0xc254, 0x1, 0x0);
        gbc.writeMem(0xb6f5, { 0xcb, 0xd6 });
        gbc.writeMem(0xc254, { 0xfa });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x767, gbc.sp());
        EXPECT(0xb6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f5));
        EXPECT(0xd6, gbc.readMem(0xb6f6));
        EXPECT(0xfe, gbc.readMem(0xc254));
        // CB D6 0253
        gbc.setState(0xb70c, 0x41fd, 0x5170, 0x896e, 0x6443, 0x9bef, 0x0, 0x0);
        gbc.writeMem(0x9bef, { 0x4e });
        gbc.writeMem(0xb70c, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x41fd, gbc.sp());
        EXPECT(0xb70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9bef));
        EXPECT(0xcb, gbc.readMem(0xb70c));
        EXPECT(0xd6, gbc.readMem(0xb70d));
        // CB D6 0257
        gbc.setState(0xebe6, 0x313a, 0x61b0, 0x4023, 0x5604, 0xc7c3, 0x0, 0x0);
        gbc.writeMem(0xc7c3, { 0xf9 });
        gbc.writeMem(0xebe6, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x313a, gbc.sp());
        EXPECT(0xebe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xc7c3));
        EXPECT(0xcb, gbc.readMem(0xebe6));
        EXPECT(0xd6, gbc.readMem(0xebe7));
        // CB D6 0258
        gbc.setState(0xce7c, 0xe349, 0xc730, 0xad4b, 0x7b29, 0xfb53, 0x0, 0x1);
        gbc.writeMem(0xce7c, { 0xcb, 0xd6 });
        gbc.writeMem(0xfb53, { 0xe3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe349, gbc.sp());
        EXPECT(0xce7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce7c));
        EXPECT(0xd6, gbc.readMem(0xce7d));
        EXPECT(0xe7, gbc.readMem(0xfb53));
        // CB D6 0259
        gbc.setState(0xc914, 0x1855, 0xe3c0, 0x5128, 0xe34c, 0xac1a, 0x1, 0x0);
        gbc.writeMem(0xac1a, { 0x1c });
        gbc.writeMem(0xc914, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1855, gbc.sp());
        EXPECT(0xc916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xac1a));
        EXPECT(0xcb, gbc.readMem(0xc914));
        EXPECT(0xd6, gbc.readMem(0xc915));
        // CB D6 025B
        gbc.setState(0x60ef, 0x95b2, 0x2fa0, 0xd9e2, 0x1f3c, 0xb66b, 0x1, 0x0);
        gbc.writeMem(0x60ef, { 0xcb, 0xd6 });
        gbc.writeMem(0xb66b, { 0x2d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x95b2, gbc.sp());
        EXPECT(0x60f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb66b));
        // CB D6 025C
        gbc.setState(0x9937, 0x5fc4, 0xead0, 0x2d8d, 0xb30a, 0xfc82, 0x1, 0x0);
        gbc.writeMem(0x9937, { 0xcb, 0xd6 });
        gbc.writeMem(0xfc82, { 0xe5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5fc4, gbc.sp());
        EXPECT(0x9939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9937));
        EXPECT(0xd6, gbc.readMem(0x9938));
        EXPECT(0xe5, gbc.readMem(0xfc82));
        // CB D6 025D
        gbc.setState(0xa675, 0xb60c, 0x8990, 0xa1f9, 0x1e54, 0xf31c, 0x0, 0x0);
        gbc.writeMem(0xa675, { 0xcb, 0xd6 });
        gbc.writeMem(0xf31c, { 0xc4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb60c, gbc.sp());
        EXPECT(0xa677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa675));
        EXPECT(0xd6, gbc.readMem(0xa676));
        EXPECT(0xc4, gbc.readMem(0xf31c));
        // CB D6 025E
        gbc.setState(0x8d4f, 0x67c7, 0x33b0, 0xe8d6, 0x7759, 0xb238, 0x0, 0x0);
        gbc.writeMem(0x8d4f, { 0xcb, 0xd6 });
        gbc.writeMem(0xb238, { 0x84 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x67c7, gbc.sp());
        EXPECT(0x8d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4f));
        EXPECT(0xd6, gbc.readMem(0x8d50));
        EXPECT(0x84, gbc.readMem(0xb238));
        // CB D6 025F
        gbc.setState(0xe3e7, 0xef54, 0x4fb0, 0x30b8, 0xd1fa, 0xb655, 0x1, 0x0);
        gbc.writeMem(0xb655, { 0xf7 });
        gbc.writeMem(0xe3e7, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xef54, gbc.sp());
        EXPECT(0xe3e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb655));
        EXPECT(0xcb, gbc.readMem(0xe3e7));
        EXPECT(0xd6, gbc.readMem(0xe3e8));
        // CB D6 0264
        gbc.setState(0x908e, 0xcced, 0x1bb0, 0x40e7, 0x33e1, 0xe6a2, 0x1, 0x0);
        gbc.writeMem(0x908e, { 0xcb, 0xd6 });
        gbc.writeMem(0xe6a2, { 0xce });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcced, gbc.sp());
        EXPECT(0x9090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x908e));
        EXPECT(0xd6, gbc.readMem(0x908f));
        EXPECT(0xce, gbc.readMem(0xe6a2));
        // CB D6 0265
        gbc.setState(0x6302, 0xf45a, 0x5020, 0x2563, 0xd965, 0x883b, 0x0, 0x1);
        gbc.writeMem(0x6302, { 0xcb, 0xd6 });
        gbc.writeMem(0x883b, { 0xc1 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf45a, gbc.sp());
        EXPECT(0x6304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x883b));
        // CB D6 0266
        gbc.setState(0x547e, 0xc5d7, 0x9c10, 0xfeeb, 0x49f8, 0x23fb, 0x1, 0x0);
        gbc.writeMem(0x23fb, { 0x5c });
        gbc.writeMem(0x547e, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc5d7, gbc.sp());
        EXPECT(0x5480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0267
        gbc.setState(0x9cdf, 0xc64d, 0xf50, 0xeb01, 0x47c9, 0xb571, 0x1, 0x1);
        gbc.writeMem(0x9cdf, { 0xcb, 0xd6 });
        gbc.writeMem(0xb571, { 0x8c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc64d, gbc.sp());
        EXPECT(0x9ce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cdf));
        EXPECT(0xd6, gbc.readMem(0x9ce0));
        EXPECT(0x8c, gbc.readMem(0xb571));
        // CB D6 0269
        gbc.setState(0xadb1, 0x1215, 0x8410, 0x3e5e, 0x6956, 0x1c92, 0x1, 0x0);
        gbc.writeMem(0x1c92, { 0x35 });
        gbc.writeMem(0xadb1, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1215, gbc.sp());
        EXPECT(0xadb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb1));
        EXPECT(0xd6, gbc.readMem(0xadb2));
        // CB D6 026A
        gbc.setState(0x1041, 0x7f6a, 0x1bf0, 0x4c40, 0x5fb7, 0x564b, 0x0, 0x0);
        gbc.writeMem(0x1041, { 0xcb, 0xd6 });
        gbc.writeMem(0x564b, { 0x5e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7f6a, gbc.sp());
        EXPECT(0x1043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 026B
        gbc.setState(0xe9c3, 0xdf0a, 0x35b0, 0xe6f2, 0x2695, 0xe8d1, 0x1, 0x1);
        gbc.writeMem(0xe8d1, { 0xb });
        gbc.writeMem(0xe9c3, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdf0a, gbc.sp());
        EXPECT(0xe9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xe8d1));
        EXPECT(0xcb, gbc.readMem(0xe9c3));
        EXPECT(0xd6, gbc.readMem(0xe9c4));
        // CB D6 026C
        gbc.setState(0xab47, 0x655d, 0x7b90, 0xef9f, 0xab01, 0x3b59, 0x1, 0x0);
        gbc.writeMem(0x3b59, { 0xc7 });
        gbc.writeMem(0xab47, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x655d, gbc.sp());
        EXPECT(0xab49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab47));
        EXPECT(0xd6, gbc.readMem(0xab48));
        // CB D6 026E
        gbc.setState(0x22cd, 0xd4be, 0x1e0, 0xa669, 0x7d6d, 0xac6f, 0x0, 0x0);
        gbc.writeMem(0x22cd, { 0xcb, 0xd6 });
        gbc.writeMem(0xac6f, { 0xeb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd4be, gbc.sp());
        EXPECT(0x22cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xac6f));
        // CB D6 0271
        gbc.setState(0xc339, 0x393a, 0xaef0, 0xbc7b, 0x7878, 0xe61a, 0x0, 0x0);
        gbc.writeMem(0xc339, { 0xcb, 0xd6 });
        gbc.writeMem(0xe61a, { 0x80 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x393a, gbc.sp());
        EXPECT(0xc33b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc339));
        EXPECT(0xd6, gbc.readMem(0xc33a));
        EXPECT(0x84, gbc.readMem(0xe61a));
        // CB D6 0273
        gbc.setState(0x9b6e, 0xc19d, 0x35e0, 0xd1f2, 0x42ce, 0xf0c6, 0x1, 0x1);
        gbc.writeMem(0x9b6e, { 0xcb, 0xd6 });
        gbc.writeMem(0xf0c6, { 0xf5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc19d, gbc.sp());
        EXPECT(0x9b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b6e));
        EXPECT(0xd6, gbc.readMem(0x9b6f));
        EXPECT(0xf5, gbc.readMem(0xf0c6));
        // CB D6 0274
        gbc.setState(0xdf67, 0x326e, 0x8b70, 0x111d, 0xb9b4, 0x5434, 0x0, 0x0);
        gbc.writeMem(0x5434, { 0x6d });
        gbc.writeMem(0xdf67, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x326e, gbc.sp());
        EXPECT(0xdf69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf67));
        EXPECT(0xd6, gbc.readMem(0xdf68));
        // CB D6 0276
        gbc.setState(0x184d, 0x5ba3, 0xc790, 0x6e51, 0x7e22, 0xe39a, 0x0, 0x0);
        gbc.writeMem(0x184d, { 0xcb, 0xd6 });
        gbc.writeMem(0xe39a, { 0xb8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5ba3, gbc.sp());
        EXPECT(0x184f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe39a));
        // CB D6 0277
        gbc.setState(0xda57, 0xf23d, 0x4d60, 0xcde6, 0x38a1, 0xc553, 0x0, 0x0);
        gbc.writeMem(0xc553, { 0xa1 });
        gbc.writeMem(0xda57, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf23d, gbc.sp());
        EXPECT(0xda59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xc553));
        EXPECT(0xcb, gbc.readMem(0xda57));
        EXPECT(0xd6, gbc.readMem(0xda58));
        // CB D6 0278
        gbc.setState(0x39e7, 0x5d5e, 0xbc90, 0xf033, 0x418e, 0xc729, 0x1, 0x1);
        gbc.writeMem(0x39e7, { 0xcb, 0xd6 });
        gbc.writeMem(0xc729, { 0xbb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5d5e, gbc.sp());
        EXPECT(0x39e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xc729));
        // CB D6 0279
        gbc.setState(0x4a83, 0x477, 0x3640, 0xc96c, 0x7cc2, 0xec9f, 0x0, 0x1);
        gbc.writeMem(0x4a83, { 0xcb, 0xd6 });
        gbc.writeMem(0xec9f, { 0xa4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x477, gbc.sp());
        EXPECT(0x4a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xec9f));
        // CB D6 027A
        gbc.setState(0xd5b2, 0x9316, 0xb3a0, 0xca8b, 0x2c6e, 0xf559, 0x0, 0x1);
        gbc.writeMem(0xd5b2, { 0xcb, 0xd6 });
        gbc.writeMem(0xf559, { 0x94 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9316, gbc.sp());
        EXPECT(0xd5b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b2));
        EXPECT(0xd6, gbc.readMem(0xd5b3));
        EXPECT(0x94, gbc.readMem(0xf559));
        // CB D6 027C
        gbc.setState(0xedc8, 0x9ff2, 0xddb0, 0x969, 0xaf23, 0xcb59, 0x0, 0x0);
        gbc.writeMem(0xcb59, { 0xc });
        gbc.writeMem(0xedc8, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9ff2, gbc.sp());
        EXPECT(0xedca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcb59));
        EXPECT(0xcb, gbc.readMem(0xedc8));
        EXPECT(0xd6, gbc.readMem(0xedc9));
        // CB D6 027D
        gbc.setState(0x3e19, 0xdd42, 0x9710, 0xa91b, 0xf9, 0x99d7, 0x0, 0x1);
        gbc.writeMem(0x3e19, { 0xcb, 0xd6 });
        gbc.writeMem(0x99d7, { 0x48 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdd42, gbc.sp());
        EXPECT(0x3e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x99d7));
        // CB D6 027F
        gbc.setState(0xc4a9, 0x6ea6, 0x280, 0xb66c, 0x15f6, 0xb729, 0x0, 0x0);
        gbc.writeMem(0xb729, { 0xae });
        gbc.writeMem(0xc4a9, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6ea6, gbc.sp());
        EXPECT(0xc4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xb729));
        EXPECT(0xcb, gbc.readMem(0xc4a9));
        EXPECT(0xd6, gbc.readMem(0xc4aa));
        // CB D6 0282
        gbc.setState(0x2617, 0x6d37, 0x49d0, 0x6aa6, 0x1ecb, 0x603d, 0x1, 0x1);
        gbc.writeMem(0x2617, { 0xcb, 0xd6 });
        gbc.writeMem(0x603d, { 0x9c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6d37, gbc.sp());
        EXPECT(0x2619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0283
        gbc.setState(0x90db, 0x663f, 0xf360, 0xefb0, 0x8aec, 0xf39d, 0x0, 0x1);
        gbc.writeMem(0x90db, { 0xcb, 0xd6 });
        gbc.writeMem(0xf39d, { 0x54 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x663f, gbc.sp());
        EXPECT(0x90dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90db));
        EXPECT(0xd6, gbc.readMem(0x90dc));
        EXPECT(0x54, gbc.readMem(0xf39d));
        // CB D6 0284
        gbc.setState(0x235, 0x3db1, 0xca80, 0x9f61, 0xaeaa, 0x9ec2, 0x0, 0x1);
        gbc.writeMem(0x235, { 0xcb, 0xd6 });
        gbc.writeMem(0x9ec2, { 0xda });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3db1, gbc.sp());
        EXPECT(0x237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x9ec2));
        // CB D6 0285
        gbc.setState(0xddff, 0xd7e2, 0x1b90, 0xef62, 0x9473, 0x8574, 0x0, 0x1);
        gbc.writeMem(0x8574, { 0x78 });
        gbc.writeMem(0xddff, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd7e2, gbc.sp());
        EXPECT(0xde01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x8574));
        EXPECT(0xcb, gbc.readMem(0xddff));
        EXPECT(0xd6, gbc.readMem(0xde00));
        // CB D6 0286
        gbc.setState(0x9f12, 0x7ed5, 0x4af0, 0xedd0, 0xbb38, 0xb0cf, 0x0, 0x0);
        gbc.writeMem(0x9f12, { 0xcb, 0xd6 });
        gbc.writeMem(0xb0cf, { 0xd7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7ed5, gbc.sp());
        EXPECT(0x9f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f12));
        EXPECT(0xd6, gbc.readMem(0x9f13));
        EXPECT(0xd7, gbc.readMem(0xb0cf));
        // CB D6 0287
        gbc.setState(0x7550, 0x7180, 0xd5d0, 0xf929, 0xd92d, 0x84a2, 0x0, 0x1);
        gbc.writeMem(0x7550, { 0xcb, 0xd6 });
        gbc.writeMem(0x84a2, { 0x49 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7180, gbc.sp());
        EXPECT(0x7552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x84a2));
        // CB D6 0288
        gbc.setState(0x124, 0x8a3e, 0x81a0, 0x4c13, 0x9eb6, 0xa5e9, 0x0, 0x0);
        gbc.writeMem(0x124, { 0xcb, 0xd6 });
        gbc.writeMem(0xa5e9, { 0x14 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8a3e, gbc.sp());
        EXPECT(0x126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa5e9));
        // CB D6 0289
        gbc.setState(0x1960, 0x27cd, 0x7330, 0x3c75, 0x49ed, 0xf8f3, 0x1, 0x1);
        gbc.writeMem(0x1960, { 0xcb, 0xd6 });
        gbc.writeMem(0xf8f3, { 0x8a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x27cd, gbc.sp());
        EXPECT(0x1962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xf8f3));
        // CB D6 028A
        gbc.setState(0x9a5, 0x49b9, 0xc2a0, 0xda83, 0x7d27, 0x7ca, 0x0, 0x0);
        gbc.writeMem(0x7ca, { 0xef });
        gbc.writeMem(0x9a5, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x49b9, gbc.sp());
        EXPECT(0x9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 028B
        gbc.setState(0xc2ff, 0x8848, 0xe0e0, 0xbfeb, 0xd93f, 0xe23d, 0x0, 0x0);
        gbc.writeMem(0xc2ff, { 0xcb, 0xd6 });
        gbc.writeMem(0xe23d, { 0x6 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8848, gbc.sp());
        EXPECT(0xc301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ff));
        EXPECT(0xd6, gbc.readMem(0xc300));
        EXPECT(0x6, gbc.readMem(0xe23d));
        // CB D6 028C
        gbc.setState(0x40b0, 0x3ee0, 0x10, 0xa86d, 0x1b86, 0xd22e, 0x0, 0x0);
        gbc.writeMem(0x40b0, { 0xcb, 0xd6 });
        gbc.writeMem(0xd22e, { 0x38 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3ee0, gbc.sp());
        EXPECT(0x40b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd22e));
        // CB D6 028E
        gbc.setState(0x76ec, 0x672b, 0x5c50, 0x500c, 0xace3, 0xfd5d, 0x0, 0x1);
        gbc.writeMem(0x76ec, { 0xcb, 0xd6 });
        gbc.writeMem(0xfd5d, { 0xaa });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x672b, gbc.sp());
        EXPECT(0x76ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xfd5d));
        // CB D6 028F
        gbc.setState(0x62b6, 0x3deb, 0x9ff0, 0x683c, 0xc1b7, 0xcd85, 0x1, 0x1);
        gbc.writeMem(0x62b6, { 0xcb, 0xd6 });
        gbc.writeMem(0xcd85, { 0xf5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3deb, gbc.sp());
        EXPECT(0x62b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xcd85));
        // CB D6 0290
        gbc.setState(0xdc7d, 0x1336, 0x8360, 0x6137, 0x7af4, 0x42f3, 0x0, 0x0);
        gbc.writeMem(0x42f3, { 0x96 });
        gbc.writeMem(0xdc7d, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1336, gbc.sp());
        EXPECT(0xdc7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7d));
        EXPECT(0xd6, gbc.readMem(0xdc7e));
        // CB D6 0292
        gbc.setState(0x1877, 0xe722, 0x9490, 0xa318, 0x1805, 0x11b0, 0x1, 0x1);
        gbc.writeMem(0x11b0, { 0x3f });
        gbc.writeMem(0x1877, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe722, gbc.sp());
        EXPECT(0x1879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0294
        gbc.setState(0x1ada, 0x54e9, 0x6330, 0x7807, 0x1532, 0xfa6d, 0x1, 0x0);
        gbc.writeMem(0x1ada, { 0xcb, 0xd6 });
        gbc.writeMem(0xfa6d, { 0xca });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x54e9, gbc.sp());
        EXPECT(0x1adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xfa6d));
        // CB D6 0297
        gbc.setState(0x9633, 0x59f4, 0x5530, 0x988a, 0xa27a, 0x3462, 0x0, 0x1);
        gbc.writeMem(0x3462, { 0x1f });
        gbc.writeMem(0x9633, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x59f4, gbc.sp());
        EXPECT(0x9635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9633));
        EXPECT(0xd6, gbc.readMem(0x9634));
        // CB D6 0298
        gbc.setState(0x1b1f, 0x80, 0xbd30, 0xa1de, 0x6b87, 0xb4eb, 0x0, 0x1);
        gbc.writeMem(0x1b1f, { 0xcb, 0xd6 });
        gbc.writeMem(0xb4eb, { 0x62 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x80, gbc.sp());
        EXPECT(0x1b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb4eb));
        // CB D6 0299
        gbc.setState(0xcc8, 0x82d, 0x78d0, 0x1c1d, 0x2284, 0x9870, 0x0, 0x0);
        gbc.writeMem(0xcc8, { 0xcb, 0xd6 });
        gbc.writeMem(0x9870, { 0x1c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x82d, gbc.sp());
        EXPECT(0xcca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x9870));
        // CB D6 029A
        gbc.setState(0x199c, 0x9f20, 0xcc20, 0x20bf, 0x9c36, 0x9f2d, 0x1, 0x1);
        gbc.writeMem(0x199c, { 0xcb, 0xd6 });
        gbc.writeMem(0x9f2d, { 0x31 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9f20, gbc.sp());
        EXPECT(0x199e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9f2d));
        // CB D6 029B
        gbc.setState(0xe994, 0xa34, 0x5190, 0x6ea7, 0x3a21, 0x9ca0, 0x1, 0x0);
        gbc.writeMem(0x9ca0, { 0x3b });
        gbc.writeMem(0xe994, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa34, gbc.sp());
        EXPECT(0xe996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9ca0));
        EXPECT(0xcb, gbc.readMem(0xe994));
        EXPECT(0xd6, gbc.readMem(0xe995));
        // CB D6 029C
        gbc.setState(0x92e2, 0xf18e, 0x27b0, 0xfc99, 0x6560, 0x9135, 0x1, 0x1);
        gbc.writeMem(0x9135, { 0x35 });
        gbc.writeMem(0x92e2, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf18e, gbc.sp());
        EXPECT(0x92e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9135));
        EXPECT(0xcb, gbc.readMem(0x92e2));
        EXPECT(0xd6, gbc.readMem(0x92e3));
        // CB D6 029D
        gbc.setState(0x46f6, 0x3961, 0xf850, 0xbc51, 0x5ae4, 0x9bb9, 0x0, 0x1);
        gbc.writeMem(0x46f6, { 0xcb, 0xd6 });
        gbc.writeMem(0x9bb9, { 0xba });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3961, gbc.sp());
        EXPECT(0x46f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x9bb9));
        // CB D6 02A0
        gbc.setState(0xd1ad, 0xf45, 0x3a20, 0xb4f3, 0xe9f2, 0xd973, 0x0, 0x1);
        gbc.writeMem(0xd1ad, { 0xcb, 0xd6 });
        gbc.writeMem(0xd973, { 0x8a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf45, gbc.sp());
        EXPECT(0xd1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ad));
        EXPECT(0xd6, gbc.readMem(0xd1ae));
        EXPECT(0x8e, gbc.readMem(0xd973));
        // CB D6 02A1
        gbc.setState(0x4d3f, 0x2e7c, 0x6bf0, 0x3adb, 0x1de4, 0x9f85, 0x0, 0x1);
        gbc.writeMem(0x4d3f, { 0xcb, 0xd6 });
        gbc.writeMem(0x9f85, { 0x75 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2e7c, gbc.sp());
        EXPECT(0x4d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9f85));
        // CB D6 02A2
        gbc.setState(0xa44d, 0xc872, 0xe40, 0x747d, 0x315f, 0xa928, 0x0, 0x1);
        gbc.writeMem(0xa44d, { 0xcb, 0xd6 });
        gbc.writeMem(0xa928, { 0x80 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc872, gbc.sp());
        EXPECT(0xa44f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44d));
        EXPECT(0xd6, gbc.readMem(0xa44e));
        EXPECT(0x84, gbc.readMem(0xa928));
        // CB D6 02A3
        gbc.setState(0xd528, 0xaf4c, 0xb0f0, 0x74a2, 0xa390, 0xe476, 0x1, 0x1);
        gbc.writeMem(0xd528, { 0xcb, 0xd6 });
        gbc.writeMem(0xe476, { 0xcd });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xaf4c, gbc.sp());
        EXPECT(0xd52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd528));
        EXPECT(0xd6, gbc.readMem(0xd529));
        EXPECT(0xcd, gbc.readMem(0xe476));
        // CB D6 02A4
        gbc.setState(0x3d80, 0x1438, 0x4e0, 0xd0d5, 0x872a, 0x4af, 0x0, 0x1);
        gbc.writeMem(0x4af, { 0xd6 });
        gbc.writeMem(0x3d80, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1438, gbc.sp());
        EXPECT(0x3d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 02A5
        gbc.setState(0x1109, 0x6ab2, 0xa780, 0xe634, 0xd73b, 0x2641, 0x1, 0x1);
        gbc.writeMem(0x1109, { 0xcb, 0xd6 });
        gbc.writeMem(0x2641, { 0x57 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6ab2, gbc.sp());
        EXPECT(0x110b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 02A9
        gbc.setState(0x4907, 0x1ac9, 0xfbb0, 0xacfe, 0xaf72, 0x934b, 0x1, 0x1);
        gbc.writeMem(0x4907, { 0xcb, 0xd6 });
        gbc.writeMem(0x934b, { 0x90 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1ac9, gbc.sp());
        EXPECT(0x4909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x934b));
        // CB D6 02AA
        gbc.setState(0x11ca, 0xe9d9, 0x8980, 0xa472, 0xd469, 0xa26d, 0x1, 0x0);
        gbc.writeMem(0x11ca, { 0xcb, 0xd6 });
        gbc.writeMem(0xa26d, { 0x77 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe9d9, gbc.sp());
        EXPECT(0x11cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa26d));
        // CB D6 02AD
        gbc.setState(0x30a5, 0x32d6, 0x7610, 0x8457, 0xb92f, 0x125f, 0x0, 0x1);
        gbc.writeMem(0x125f, { 0x27 });
        gbc.writeMem(0x30a5, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x32d6, gbc.sp());
        EXPECT(0x30a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 02AE
        gbc.setState(0x1bcc, 0x4ff0, 0x45c0, 0x9622, 0x9e8d, 0xf62f, 0x0, 0x0);
        gbc.writeMem(0x1bcc, { 0xcb, 0xd6 });
        gbc.writeMem(0xf62f, { 0x5b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4ff0, gbc.sp());
        EXPECT(0x1bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xf62f));
        // CB D6 02B0
        gbc.setState(0xe362, 0xfaac, 0x82f0, 0x4668, 0xff70, 0x3c94, 0x0, 0x1);
        gbc.writeMem(0x3c94, { 0xdf });
        gbc.writeMem(0xe362, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfaac, gbc.sp());
        EXPECT(0xe364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe362));
        EXPECT(0xd6, gbc.readMem(0xe363));
        // CB D6 02B1
        gbc.setState(0x4617, 0xb1b0, 0x31b0, 0x4f73, 0xe9bc, 0xe318, 0x0, 0x1);
        gbc.writeMem(0x4617, { 0xcb, 0xd6 });
        gbc.writeMem(0xe318, { 0x22 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb1b0, gbc.sp());
        EXPECT(0x4619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe318));
        // CB D6 02B2
        gbc.setState(0x9c57, 0x6b, 0x7ae0, 0xe1dd, 0x39, 0xf241, 0x0, 0x0);
        gbc.writeMem(0x9c57, { 0xcb, 0xd6 });
        gbc.writeMem(0xf241, { 0x67 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6b, gbc.sp());
        EXPECT(0x9c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c57));
        EXPECT(0xd6, gbc.readMem(0x9c58));
        EXPECT(0x67, gbc.readMem(0xf241));
        // CB D6 02B3
        gbc.setState(0x52ee, 0x10c5, 0xb4c0, 0xd3f0, 0xcbef, 0x8c94, 0x1, 0x1);
        gbc.writeMem(0x52ee, { 0xcb, 0xd6 });
        gbc.writeMem(0x8c94, { 0x99 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x10c5, gbc.sp());
        EXPECT(0x52f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8c94));
        // CB D6 02B7
        gbc.setState(0xb1ce, 0xcf5f, 0xf040, 0xdc5a, 0x1091, 0xf621, 0x1, 0x1);
        gbc.writeMem(0xb1ce, { 0xcb, 0xd6 });
        gbc.writeMem(0xf621, { 0xbc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcf5f, gbc.sp());
        EXPECT(0xb1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ce));
        EXPECT(0xd6, gbc.readMem(0xb1cf));
        EXPECT(0xbc, gbc.readMem(0xf621));
        // CB D6 02B9
        gbc.setState(0xc660, 0x7049, 0xd430, 0x4c8d, 0xf31c, 0x92a5, 0x0, 0x0);
        gbc.writeMem(0x92a5, { 0x27 });
        gbc.writeMem(0xc660, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7049, gbc.sp());
        EXPECT(0xc662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x92a5));
        EXPECT(0xcb, gbc.readMem(0xc660));
        EXPECT(0xd6, gbc.readMem(0xc661));
        // CB D6 02BA
        gbc.setState(0xc0bc, 0x383b, 0x9170, 0x72ef, 0x8ede, 0x31d6, 0x1, 0x1);
        gbc.writeMem(0x31d6, { 0x36 });
        gbc.writeMem(0xc0bc, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x383b, gbc.sp());
        EXPECT(0xc0be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0bc));
        EXPECT(0xd6, gbc.readMem(0xc0bd));
        // CB D6 02BB
        gbc.setState(0x68a2, 0xbea1, 0xd190, 0xe646, 0x7978, 0xfcb4, 0x0, 0x0);
        gbc.writeMem(0x68a2, { 0xcb, 0xd6 });
        gbc.writeMem(0xfcb4, { 0xac });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbea1, gbc.sp());
        EXPECT(0x68a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xfcb4));
        // CB D6 02BD
        gbc.setState(0x1d99, 0xa31, 0xd8f0, 0xb417, 0x1c2f, 0x92c, 0x1, 0x1);
        gbc.writeMem(0x92c, { 0x16 });
        gbc.writeMem(0x1d99, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa31, gbc.sp());
        EXPECT(0x1d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 02BE
        gbc.setState(0xb821, 0x6934, 0x6ac0, 0xfc02, 0xa99d, 0xca86, 0x1, 0x1);
        gbc.writeMem(0xb821, { 0xcb, 0xd6 });
        gbc.writeMem(0xca86, { 0x11 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6934, gbc.sp());
        EXPECT(0xb823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb821));
        EXPECT(0xd6, gbc.readMem(0xb822));
        EXPECT(0x15, gbc.readMem(0xca86));
        // CB D6 02C1
        gbc.setState(0x1531, 0x9100, 0xdb20, 0xa91e, 0xf69d, 0xff72, 0x1, 0x0);
        gbc.writeMem(0x1531, { 0xcb, 0xd6 });
        gbc.writeMem(0xff72, { 0xc2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9100, gbc.sp());
        EXPECT(0x1533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xff72));
        // CB D6 02C2
        gbc.setState(0x52a0, 0x8870, 0x5440, 0x6960, 0x53f, 0xc354, 0x0, 0x0);
        gbc.writeMem(0x52a0, { 0xcb, 0xd6 });
        gbc.writeMem(0xc354, { 0x38 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8870, gbc.sp());
        EXPECT(0x52a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc354));
        // CB D6 02C4
        gbc.setState(0xb3d3, 0x83f5, 0xf260, 0x612d, 0x3c4c, 0xfa1f, 0x0, 0x0);
        gbc.writeMem(0xb3d3, { 0xcb, 0xd6 });
        gbc.writeMem(0xfa1f, { 0x53 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x83f5, gbc.sp());
        EXPECT(0xb3d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d3));
        EXPECT(0xd6, gbc.readMem(0xb3d4));
        EXPECT(0x57, gbc.readMem(0xfa1f));
        // CB D6 02C5
        gbc.setState(0x1e98, 0x2d26, 0xcae0, 0xbceb, 0xbac5, 0xe365, 0x1, 0x1);
        gbc.writeMem(0x1e98, { 0xcb, 0xd6 });
        gbc.writeMem(0xe365, { 0xb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2d26, gbc.sp());
        EXPECT(0x1e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xe365));
        // CB D6 02C6
        gbc.setState(0x3783, 0x9a63, 0x2c40, 0x3dfd, 0xb55, 0x80b, 0x0, 0x1);
        gbc.writeMem(0x80b, { 0x34 });
        gbc.writeMem(0x3783, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9a63, gbc.sp());
        EXPECT(0x3785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 02CA
        gbc.setState(0x928f, 0xf893, 0xdef0, 0x71ef, 0x367e, 0x5e04, 0x1, 0x0);
        gbc.writeMem(0x5e04, { 0xef });
        gbc.writeMem(0x928f, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf893, gbc.sp());
        EXPECT(0x9291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928f));
        EXPECT(0xd6, gbc.readMem(0x9290));
        // CB D6 02CB
        gbc.setState(0xe7e3, 0x57d7, 0xa0a0, 0xa4b2, 0xa445, 0x1442, 0x1, 0x1);
        gbc.writeMem(0x1442, { 0xe });
        gbc.writeMem(0xe7e3, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x57d7, gbc.sp());
        EXPECT(0xe7e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e3));
        EXPECT(0xd6, gbc.readMem(0xe7e4));
        // CB D6 02CC
        gbc.setState(0x5e74, 0xf22c, 0x4e60, 0x860b, 0x2a5f, 0x8964, 0x1, 0x0);
        gbc.writeMem(0x5e74, { 0xcb, 0xd6 });
        gbc.writeMem(0x8964, { 0x9a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf22c, gbc.sp());
        EXPECT(0x5e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8964));
        // CB D6 02CD
        gbc.setState(0x7f37, 0x4541, 0xa8d0, 0xcdf1, 0x3146, 0x4aa5, 0x0, 0x1);
        gbc.writeMem(0x4aa5, { 0x5f });
        gbc.writeMem(0x7f37, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4541, gbc.sp());
        EXPECT(0x7f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 02CF
        gbc.setState(0x63bd, 0xb1ff, 0xd6a0, 0xf4e6, 0xfdc9, 0xcc02, 0x1, 0x0);
        gbc.writeMem(0x63bd, { 0xcb, 0xd6 });
        gbc.writeMem(0xcc02, { 0x5a });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb1ff, gbc.sp());
        EXPECT(0x63bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xcc02));
        // CB D6 02D0
        gbc.setState(0x481d, 0x721b, 0x2350, 0x9e0b, 0x8e5b, 0xc33a, 0x0, 0x1);
        gbc.writeMem(0x481d, { 0xcb, 0xd6 });
        gbc.writeMem(0xc33a, { 0x67 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x721b, gbc.sp());
        EXPECT(0x481f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xc33a));
        // CB D6 02D1
        gbc.setState(0xceb, 0x7c9d, 0xb3f0, 0xa46e, 0x3546, 0x991f, 0x0, 0x1);
        gbc.writeMem(0xceb, { 0xcb, 0xd6 });
        gbc.writeMem(0x991f, { 0x8e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7c9d, gbc.sp());
        EXPECT(0xced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x991f));
        // CB D6 02D2
        gbc.setState(0xae4, 0x86b5, 0xb4e0, 0xb26a, 0xc703, 0x4e9e, 0x0, 0x1);
        gbc.writeMem(0xae4, { 0xcb, 0xd6 });
        gbc.writeMem(0x4e9e, { 0x4e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x86b5, gbc.sp());
        EXPECT(0xae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 02D3
        gbc.setState(0x884f, 0xa3f4, 0xe580, 0x3bf, 0x3450, 0xf1d3, 0x1, 0x1);
        gbc.writeMem(0x884f, { 0xcb, 0xd6 });
        gbc.writeMem(0xf1d3, { 0x86 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa3f4, gbc.sp());
        EXPECT(0x8851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884f));
        EXPECT(0xd6, gbc.readMem(0x8850));
        EXPECT(0x86, gbc.readMem(0xf1d3));
        // CB D6 02D4
        gbc.setState(0xb188, 0x6593, 0x3800, 0x5d37, 0x1642, 0xbcd7, 0x0, 0x0);
        gbc.writeMem(0xb188, { 0xcb, 0xd6 });
        gbc.writeMem(0xbcd7, { 0x52 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6593, gbc.sp());
        EXPECT(0xb18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb188));
        EXPECT(0xd6, gbc.readMem(0xb189));
        EXPECT(0x56, gbc.readMem(0xbcd7));
        // CB D6 02D5
        gbc.setState(0x809c, 0xf95f, 0x7810, 0xa3c, 0xbbe1, 0x302c, 0x0, 0x1);
        gbc.writeMem(0x302c, { 0x75 });
        gbc.writeMem(0x809c, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf95f, gbc.sp());
        EXPECT(0x809e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809c));
        EXPECT(0xd6, gbc.readMem(0x809d));
        // CB D6 02D6
        gbc.setState(0x1217, 0x2eab, 0xab70, 0xe039, 0xb391, 0xd390, 0x1, 0x1);
        gbc.writeMem(0x1217, { 0xcb, 0xd6 });
        gbc.writeMem(0xd390, { 0x48 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2eab, gbc.sp());
        EXPECT(0x1219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd390));
        // CB D6 02D7
        gbc.setState(0x6327, 0x221f, 0xef20, 0x5999, 0x3f1a, 0x8ea6, 0x0, 0x1);
        gbc.writeMem(0x6327, { 0xcb, 0xd6 });
        gbc.writeMem(0x8ea6, { 0xad });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x221f, gbc.sp());
        EXPECT(0x6329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x8ea6));
        // CB D6 02D8
        gbc.setState(0xc57c, 0xe600, 0xd100, 0x9b44, 0x71c, 0xfc5, 0x0, 0x0);
        gbc.writeMem(0xfc5, { 0x5c });
        gbc.writeMem(0xc57c, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe600, gbc.sp());
        EXPECT(0xc57e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc57c));
        EXPECT(0xd6, gbc.readMem(0xc57d));
        // CB D6 02D9
        gbc.setState(0x87b9, 0x1601, 0xe5e0, 0x9f77, 0xded4, 0xc488, 0x0, 0x1);
        gbc.writeMem(0x87b9, { 0xcb, 0xd6 });
        gbc.writeMem(0xc488, { 0xae });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1601, gbc.sp());
        EXPECT(0x87bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b9));
        EXPECT(0xd6, gbc.readMem(0x87ba));
        EXPECT(0xae, gbc.readMem(0xc488));
        // CB D6 02DA
        gbc.setState(0x4265, 0x815d, 0xeb40, 0x7349, 0x7d5d, 0xec6c, 0x0, 0x1);
        gbc.writeMem(0x4265, { 0xcb, 0xd6 });
        gbc.writeMem(0xec6c, { 0x51 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x815d, gbc.sp());
        EXPECT(0x4267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xec6c));
        // CB D6 02DB
        gbc.setState(0x7b38, 0x17c1, 0x27f0, 0xcc1c, 0xe9eb, 0x8b75, 0x1, 0x0);
        gbc.writeMem(0x7b38, { 0xcb, 0xd6 });
        gbc.writeMem(0x8b75, { 0x31 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x17c1, gbc.sp());
        EXPECT(0x7b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8b75));
        // CB D6 02DC
        gbc.setState(0x9cd5, 0x8173, 0xc980, 0x38a6, 0x7baf, 0xc9d1, 0x0, 0x0);
        gbc.writeMem(0x9cd5, { 0xcb, 0xd6 });
        gbc.writeMem(0xc9d1, { 0x2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8173, gbc.sp());
        EXPECT(0x9cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd5));
        EXPECT(0xd6, gbc.readMem(0x9cd6));
        EXPECT(0x6, gbc.readMem(0xc9d1));
        // CB D6 02DE
        gbc.setState(0xc62b, 0xa84c, 0x72d0, 0x993f, 0x9d7e, 0x47d2, 0x1, 0x0);
        gbc.writeMem(0x47d2, { 0xe5 });
        gbc.writeMem(0xc62b, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa84c, gbc.sp());
        EXPECT(0xc62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc62b));
        EXPECT(0xd6, gbc.readMem(0xc62c));
        // CB D6 02DF
        gbc.setState(0xed55, 0xfcb9, 0xd2e0, 0x8930, 0x6af8, 0xe32, 0x0, 0x1);
        gbc.writeMem(0xe32, { 0xe });
        gbc.writeMem(0xed55, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfcb9, gbc.sp());
        EXPECT(0xed57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed55));
        EXPECT(0xd6, gbc.readMem(0xed56));
        // CB D6 02E1
        gbc.setState(0x907d, 0x749c, 0x1b30, 0xc81, 0xf3c, 0x53a8, 0x0, 0x1);
        gbc.writeMem(0x53a8, { 0x1c });
        gbc.writeMem(0x907d, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x749c, gbc.sp());
        EXPECT(0x907f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x907d));
        EXPECT(0xd6, gbc.readMem(0x907e));
        // CB D6 02E2
        gbc.setState(0xa1e3, 0x9cb8, 0x40, 0xd23c, 0x2227, 0xb9a7, 0x0, 0x1);
        gbc.writeMem(0xa1e3, { 0xcb, 0xd6 });
        gbc.writeMem(0xb9a7, { 0xb2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9cb8, gbc.sp());
        EXPECT(0xa1e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e3));
        EXPECT(0xd6, gbc.readMem(0xa1e4));
        EXPECT(0xb6, gbc.readMem(0xb9a7));
        // CB D6 02E3
        gbc.setState(0x44d2, 0xd681, 0xbf90, 0x6996, 0xcf63, 0x3eae, 0x0, 0x1);
        gbc.writeMem(0x3eae, { 0xe7 });
        gbc.writeMem(0x44d2, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd681, gbc.sp());
        EXPECT(0x44d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 02E4
        gbc.setState(0x438b, 0x7ed6, 0x9060, 0x12fd, 0xb00a, 0xb77c, 0x0, 0x1);
        gbc.writeMem(0x438b, { 0xcb, 0xd6 });
        gbc.writeMem(0xb77c, { 0x17 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7ed6, gbc.sp());
        EXPECT(0x438d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xb77c));
        // CB D6 02E6
        gbc.setState(0x5c03, 0x9774, 0xd400, 0x9fbf, 0x6039, 0xcbab, 0x1, 0x1);
        gbc.writeMem(0x5c03, { 0xcb, 0xd6 });
        gbc.writeMem(0xcbab, { 0xf1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9774, gbc.sp());
        EXPECT(0x5c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xcbab));
        // CB D6 02E7
        gbc.setState(0xb7e6, 0x2170, 0x55c0, 0xda29, 0x1fc2, 0xcd61, 0x1, 0x0);
        gbc.writeMem(0xb7e6, { 0xcb, 0xd6 });
        gbc.writeMem(0xcd61, { 0x7e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2170, gbc.sp());
        EXPECT(0xb7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e6));
        EXPECT(0xd6, gbc.readMem(0xb7e7));
        EXPECT(0x7e, gbc.readMem(0xcd61));
        // CB D6 02E8
        gbc.setState(0x9fed, 0x6ccb, 0xf220, 0x27bf, 0xd0d2, 0x3381, 0x1, 0x1);
        gbc.writeMem(0x3381, { 0xf7 });
        gbc.writeMem(0x9fed, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6ccb, gbc.sp());
        EXPECT(0x9fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fed));
        EXPECT(0xd6, gbc.readMem(0x9fee));
        // CB D6 02EA
        gbc.setState(0x6522, 0x357f, 0x67f0, 0xe7f3, 0x146c, 0xf9cb, 0x1, 0x1);
        gbc.writeMem(0x6522, { 0xcb, 0xd6 });
        gbc.writeMem(0xf9cb, { 0xd5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x357f, gbc.sp());
        EXPECT(0x6524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xf9cb));
        // CB D6 02EC
        gbc.setState(0xe233, 0xc33e, 0xa500, 0xb1e4, 0xe650, 0x8873, 0x0, 0x0);
        gbc.writeMem(0x8873, { 0xf9 });
        gbc.writeMem(0xe233, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc33e, gbc.sp());
        EXPECT(0xe235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x8873));
        EXPECT(0xcb, gbc.readMem(0xe233));
        EXPECT(0xd6, gbc.readMem(0xe234));
        // CB D6 02ED
        gbc.setState(0x957d, 0x89fe, 0xa4f0, 0x5ed, 0xd013, 0x8105, 0x0, 0x1);
        gbc.writeMem(0x8105, { 0xe4 });
        gbc.writeMem(0x957d, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x89fe, gbc.sp());
        EXPECT(0x957f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x8105));
        EXPECT(0xcb, gbc.readMem(0x957d));
        EXPECT(0xd6, gbc.readMem(0x957e));
        // CB D6 02EE
        gbc.setState(0xbd63, 0xac69, 0xb7d0, 0xdf55, 0x711c, 0xe04d, 0x1, 0x1);
        gbc.writeMem(0xbd63, { 0xcb, 0xd6 });
        gbc.writeMem(0xe04d, { 0xa6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xac69, gbc.sp());
        EXPECT(0xbd65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd63));
        EXPECT(0xd6, gbc.readMem(0xbd64));
        EXPECT(0xa6, gbc.readMem(0xe04d));
        // CB D6 02EF
        gbc.setState(0x50d3, 0xce4a, 0x7d70, 0x682, 0x24e1, 0x8743, 0x1, 0x0);
        gbc.writeMem(0x50d3, { 0xcb, 0xd6 });
        gbc.writeMem(0x8743, { 0xba });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xce4a, gbc.sp());
        EXPECT(0x50d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x8743));
        // CB D6 02F0
        gbc.setState(0xd687, 0x1fb6, 0xbf30, 0x3bce, 0x5ff6, 0xb19d, 0x1, 0x0);
        gbc.writeMem(0xb19d, { 0x2 });
        gbc.writeMem(0xd687, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1fb6, gbc.sp());
        EXPECT(0xd689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb19d));
        EXPECT(0xcb, gbc.readMem(0xd687));
        EXPECT(0xd6, gbc.readMem(0xd688));
        // CB D6 02F1
        gbc.setState(0xd2f1, 0x28e7, 0x8d10, 0xebf, 0xb13, 0xf037, 0x0, 0x1);
        gbc.writeMem(0xd2f1, { 0xcb, 0xd6 });
        gbc.writeMem(0xf037, { 0x1f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x28e7, gbc.sp());
        EXPECT(0xd2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f1));
        EXPECT(0xd6, gbc.readMem(0xd2f2));
        EXPECT(0x1f, gbc.readMem(0xf037));
        // CB D6 02F2
        gbc.setState(0xe45d, 0xe02f, 0x5b60, 0x2ef9, 0x5c8a, 0xc0aa, 0x0, 0x0);
        gbc.writeMem(0xc0aa, { 0x8b });
        gbc.writeMem(0xe45d, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe02f, gbc.sp());
        EXPECT(0xe45f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc0aa));
        EXPECT(0xcb, gbc.readMem(0xe45d));
        EXPECT(0xd6, gbc.readMem(0xe45e));
        // CB D6 02F3
        gbc.setState(0xbcf1, 0xf15a, 0x42c0, 0x312a, 0xb40d, 0xf227, 0x1, 0x0);
        gbc.writeMem(0xbcf1, { 0xcb, 0xd6 });
        gbc.writeMem(0xf227, { 0xa2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf15a, gbc.sp());
        EXPECT(0xbcf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf1));
        EXPECT(0xd6, gbc.readMem(0xbcf2));
        EXPECT(0xa6, gbc.readMem(0xf227));
        // CB D6 02F4
        gbc.setState(0x2c86, 0xd179, 0x4b0, 0x92a6, 0x9305, 0x8dcc, 0x0, 0x1);
        gbc.writeMem(0x2c86, { 0xcb, 0xd6 });
        gbc.writeMem(0x8dcc, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd179, gbc.sp());
        EXPECT(0x2c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x8dcc));
        // CB D6 02F5
        gbc.setState(0xa1ff, 0x73f4, 0x3340, 0xdd39, 0x262c, 0x9ca5, 0x1, 0x1);
        gbc.writeMem(0x9ca5, { 0xda });
        gbc.writeMem(0xa1ff, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x73f4, gbc.sp());
        EXPECT(0xa201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x9ca5));
        EXPECT(0xcb, gbc.readMem(0xa1ff));
        EXPECT(0xd6, gbc.readMem(0xa200));
        // CB D6 02F6
        gbc.setState(0xa008, 0x5b9b, 0x460, 0xaae3, 0x44e0, 0x18d3, 0x0, 0x0);
        gbc.writeMem(0x18d3, { 0xc7 });
        gbc.writeMem(0xa008, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5b9b, gbc.sp());
        EXPECT(0xa00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa008));
        EXPECT(0xd6, gbc.readMem(0xa009));
        // CB D6 02F7
        gbc.setState(0x4a36, 0x75df, 0x630, 0xcd3a, 0x4c7b, 0xfabc, 0x1, 0x1);
        gbc.writeMem(0x4a36, { 0xcb, 0xd6 });
        gbc.writeMem(0xfabc, { 0x5d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x75df, gbc.sp());
        EXPECT(0x4a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xfabc));
        // CB D6 02FA
        gbc.setState(0xd0de, 0x6fa3, 0x4870, 0x524c, 0x94f7, 0x9908, 0x1, 0x0);
        gbc.writeMem(0x9908, { 0xde });
        gbc.writeMem(0xd0de, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6fa3, gbc.sp());
        EXPECT(0xd0e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x9908));
        EXPECT(0xcb, gbc.readMem(0xd0de));
        EXPECT(0xd6, gbc.readMem(0xd0df));
        // CB D6 02FB
        gbc.setState(0x64c, 0x5cd9, 0x4680, 0x9ad8, 0x22c5, 0x6a24, 0x0, 0x0);
        gbc.writeMem(0x64c, { 0xcb, 0xd6 });
        gbc.writeMem(0x6a24, { 0x66 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5cd9, gbc.sp());
        EXPECT(0x64e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 02FC
        gbc.setState(0x5951, 0x7871, 0x290, 0x9226, 0x11bb, 0x6521, 0x1, 0x1);
        gbc.writeMem(0x5951, { 0xcb, 0xd6 });
        gbc.writeMem(0x6521, { 0x7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7871, gbc.sp());
        EXPECT(0x5953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 02FD
        gbc.setState(0x1387, 0x4c59, 0xa510, 0x76af, 0x1d9e, 0x60e, 0x0, 0x1);
        gbc.writeMem(0x60e, { 0x2d });
        gbc.writeMem(0x1387, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4c59, gbc.sp());
        EXPECT(0x1389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 02FE
        gbc.setState(0x138, 0x4553, 0x11c0, 0x13dd, 0x7380, 0xc627, 0x0, 0x0);
        gbc.writeMem(0x138, { 0xcb, 0xd6 });
        gbc.writeMem(0xc627, { 0x82 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4553, gbc.sp());
        EXPECT(0x13a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc627));
        // CB D6 0300
        gbc.setState(0x4ee1, 0x371b, 0x5bf0, 0x15ce, 0x7f4a, 0x1627, 0x0, 0x1);
        gbc.writeMem(0x1627, { 0x7d });
        gbc.writeMem(0x4ee1, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x371b, gbc.sp());
        EXPECT(0x4ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0301
        gbc.setState(0x761a, 0x1be9, 0xee40, 0x1583, 0xb46e, 0xbc21, 0x0, 0x0);
        gbc.writeMem(0x761a, { 0xcb, 0xd6 });
        gbc.writeMem(0xbc21, { 0x6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1be9, gbc.sp());
        EXPECT(0x761c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbc21));
        // CB D6 0303
        gbc.setState(0xd3f4, 0xbc9d, 0xae80, 0x6d25, 0x130e, 0x36c5, 0x1, 0x1);
        gbc.writeMem(0x36c5, { 0xcf });
        gbc.writeMem(0xd3f4, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbc9d, gbc.sp());
        EXPECT(0xd3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f4));
        EXPECT(0xd6, gbc.readMem(0xd3f5));
        // CB D6 0305
        gbc.setState(0x5474, 0x8620, 0x69f0, 0x27d1, 0x4308, 0x37a, 0x0, 0x1);
        gbc.writeMem(0x37a, { 0x56 });
        gbc.writeMem(0x5474, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8620, gbc.sp());
        EXPECT(0x5476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0307
        gbc.setState(0xab65, 0xabe5, 0xe610, 0x13f6, 0x9ca, 0xf3b5, 0x0, 0x1);
        gbc.writeMem(0xab65, { 0xcb, 0xd6 });
        gbc.writeMem(0xf3b5, { 0x4e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xabe5, gbc.sp());
        EXPECT(0xab67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab65));
        EXPECT(0xd6, gbc.readMem(0xab66));
        EXPECT(0x4e, gbc.readMem(0xf3b5));
        // CB D6 0308
        gbc.setState(0xacef, 0x8c91, 0xb730, 0xb229, 0x2e1c, 0xa4f0, 0x1, 0x1);
        gbc.writeMem(0xa4f0, { 0xcf });
        gbc.writeMem(0xacef, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8c91, gbc.sp());
        EXPECT(0xacf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xa4f0));
        EXPECT(0xcb, gbc.readMem(0xacef));
        EXPECT(0xd6, gbc.readMem(0xacf0));
        // CB D6 030A
        gbc.setState(0xce10, 0x697f, 0xde90, 0x75fc, 0x8f15, 0xdf2e, 0x1, 0x1);
        gbc.writeMem(0xce10, { 0xcb, 0xd6 });
        gbc.writeMem(0xdf2e, { 0xa6 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x697f, gbc.sp());
        EXPECT(0xce12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce10));
        EXPECT(0xd6, gbc.readMem(0xce11));
        EXPECT(0xa6, gbc.readMem(0xdf2e));
        // CB D6 030B
        gbc.setState(0x4eb1, 0x1d82, 0x97e0, 0x61ea, 0x4d8e, 0x8992, 0x1, 0x0);
        gbc.writeMem(0x4eb1, { 0xcb, 0xd6 });
        gbc.writeMem(0x8992, { 0x9c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1d82, gbc.sp());
        EXPECT(0x4eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8992));
        // CB D6 030D
        gbc.setState(0xea38, 0x8fae, 0x2950, 0x234a, 0x130f, 0x4b61, 0x1, 0x1);
        gbc.writeMem(0x4b61, { 0xee });
        gbc.writeMem(0xea38, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8fae, gbc.sp());
        EXPECT(0xea3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea38));
        EXPECT(0xd6, gbc.readMem(0xea39));
        // CB D6 030E
        gbc.setState(0x70a1, 0xcad8, 0x1030, 0x114f, 0x8833, 0x935e, 0x0, 0x1);
        gbc.writeMem(0x70a1, { 0xcb, 0xd6 });
        gbc.writeMem(0x935e, { 0x6e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcad8, gbc.sp());
        EXPECT(0x70a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x935e));
        // CB D6 030F
        gbc.setState(0x7d37, 0x58ab, 0xf9f0, 0xea30, 0x2579, 0xd67f, 0x1, 0x0);
        gbc.writeMem(0x7d37, { 0xcb, 0xd6 });
        gbc.writeMem(0xd67f, { 0xdc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x58ab, gbc.sp());
        EXPECT(0x7d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xd67f));
        // CB D6 0310
        gbc.setState(0xef37, 0x1e0b, 0x3850, 0x8f64, 0xd4b4, 0xb7b1, 0x1, 0x0);
        gbc.writeMem(0xb7b1, { 0xde });
        gbc.writeMem(0xef37, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1e0b, gbc.sp());
        EXPECT(0xef39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xb7b1));
        EXPECT(0xcb, gbc.readMem(0xef37));
        EXPECT(0xd6, gbc.readMem(0xef38));
        // CB D6 0311
        gbc.setState(0xe39e, 0xb0d0, 0xb4d0, 0x363, 0x47c8, 0xc302, 0x1, 0x0);
        gbc.writeMem(0xc302, { 0x3f });
        gbc.writeMem(0xe39e, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb0d0, gbc.sp());
        EXPECT(0xe3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc302));
        EXPECT(0xcb, gbc.readMem(0xe39e));
        EXPECT(0xd6, gbc.readMem(0xe39f));
        // CB D6 0312
        gbc.setState(0x38a2, 0xc88d, 0x73c0, 0x8ed8, 0x6a1e, 0xd6df, 0x0, 0x0);
        gbc.writeMem(0x38a2, { 0xcb, 0xd6 });
        gbc.writeMem(0xd6df, { 0x86 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc88d, gbc.sp());
        EXPECT(0x38a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd6df));
        // CB D6 0313
        gbc.setState(0x57ff, 0xa0fc, 0x6c30, 0xdd55, 0xadaa, 0xa509, 0x1, 0x0);
        gbc.writeMem(0x57ff, { 0xcb, 0xd6 });
        gbc.writeMem(0xa509, { 0x1a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa0fc, gbc.sp());
        EXPECT(0x5801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xa509));
        // CB D6 0314
        gbc.setState(0xd81b, 0x7167, 0xfdc0, 0xc80a, 0x978, 0x1e60, 0x0, 0x0);
        gbc.writeMem(0x1e60, { 0x6f });
        gbc.writeMem(0xd81b, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7167, gbc.sp());
        EXPECT(0xd81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81b));
        EXPECT(0xd6, gbc.readMem(0xd81c));
        // CB D6 0316
        gbc.setState(0x661c, 0x80c7, 0x1c40, 0x46b5, 0xeaf9, 0x37d0, 0x0, 0x1);
        gbc.writeMem(0x37d0, { 0xbf });
        gbc.writeMem(0x661c, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x80c7, gbc.sp());
        EXPECT(0x661e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0317
        gbc.setState(0x38c3, 0x7a0c, 0x1900, 0xd121, 0xacd7, 0xeb16, 0x1, 0x0);
        gbc.writeMem(0x38c3, { 0xcb, 0xd6 });
        gbc.writeMem(0xeb16, { 0x59 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7a0c, gbc.sp());
        EXPECT(0x38c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xeb16));
        // CB D6 0318
        gbc.setState(0x6dcc, 0xc550, 0xb640, 0xe1f1, 0xa93e, 0x805f, 0x0, 0x1);
        gbc.writeMem(0x6dcc, { 0xcb, 0xd6 });
        gbc.writeMem(0x805f, { 0x73 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc550, gbc.sp());
        EXPECT(0x6dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x805f));
        // CB D6 0319
        gbc.setState(0x6e93, 0x347a, 0x5660, 0x8089, 0x701f, 0x3520, 0x0, 0x1);
        gbc.writeMem(0x3520, { 0x27 });
        gbc.writeMem(0x6e93, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x347a, gbc.sp());
        EXPECT(0x6e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 031A
        gbc.setState(0x8a26, 0x3566, 0x69b0, 0xfe14, 0x4537, 0x1abc, 0x1, 0x1);
        gbc.writeMem(0x1abc, { 0xec });
        gbc.writeMem(0x8a26, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3566, gbc.sp());
        EXPECT(0x8a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a26));
        EXPECT(0xd6, gbc.readMem(0x8a27));
        // CB D6 031B
        gbc.setState(0x91ef, 0x6186, 0x4870, 0xa68, 0xf74b, 0xe58f, 0x1, 0x0);
        gbc.writeMem(0x91ef, { 0xcb, 0xd6 });
        gbc.writeMem(0xe58f, { 0x38 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6186, gbc.sp());
        EXPECT(0x91f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ef));
        EXPECT(0xd6, gbc.readMem(0x91f0));
        EXPECT(0x3c, gbc.readMem(0xe58f));
        // CB D6 031C
        gbc.setState(0x9d0c, 0x7c9b, 0x85c0, 0xcb7a, 0x4981, 0xa16f, 0x1, 0x1);
        gbc.writeMem(0x9d0c, { 0xcb, 0xd6 });
        gbc.writeMem(0xa16f, { 0x7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7c9b, gbc.sp());
        EXPECT(0x9d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d0c));
        EXPECT(0xd6, gbc.readMem(0x9d0d));
        EXPECT(0x7, gbc.readMem(0xa16f));
        // CB D6 031E
        gbc.setState(0x5418, 0xf551, 0x82d0, 0x2386, 0x5324, 0xda95, 0x0, 0x0);
        gbc.writeMem(0x5418, { 0xcb, 0xd6 });
        gbc.writeMem(0xda95, { 0x4b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf551, gbc.sp());
        EXPECT(0x541a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xda95));
        // CB D6 031F
        gbc.setState(0x81c6, 0xce1e, 0x5080, 0xffae, 0x7871, 0x82f8, 0x0, 0x0);
        gbc.writeMem(0x81c6, { 0xcb, 0xd6 });
        gbc.writeMem(0x82f8, { 0xe8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xce1e, gbc.sp());
        EXPECT(0x81c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c6));
        EXPECT(0xd6, gbc.readMem(0x81c7));
        EXPECT(0xec, gbc.readMem(0x82f8));
        // CB D6 0320
        gbc.setState(0xbc53, 0xb928, 0x4d90, 0x1a64, 0x9b24, 0xc3ad, 0x1, 0x0);
        gbc.writeMem(0xbc53, { 0xcb, 0xd6 });
        gbc.writeMem(0xc3ad, { 0x69 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb928, gbc.sp());
        EXPECT(0xbc55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc53));
        EXPECT(0xd6, gbc.readMem(0xbc54));
        EXPECT(0x6d, gbc.readMem(0xc3ad));
        // CB D6 0321
        gbc.setState(0xe9f6, 0xc428, 0xb200, 0x221e, 0x8d2c, 0x8233, 0x1, 0x0);
        gbc.writeMem(0x8233, { 0x99 });
        gbc.writeMem(0xe9f6, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc428, gbc.sp());
        EXPECT(0xe9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8233));
        EXPECT(0xcb, gbc.readMem(0xe9f6));
        EXPECT(0xd6, gbc.readMem(0xe9f7));
        // CB D6 0322
        gbc.setState(0x45a0, 0x5f02, 0x1d60, 0x73be, 0x26a, 0x6488, 0x0, 0x0);
        gbc.writeMem(0x45a0, { 0xcb, 0xd6 });
        gbc.writeMem(0x6488, { 0x3d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5f02, gbc.sp());
        EXPECT(0x45a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0323
        gbc.setState(0xbb8f, 0xf521, 0x8a50, 0xc29d, 0x3419, 0xd601, 0x1, 0x1);
        gbc.writeMem(0xbb8f, { 0xcb, 0xd6 });
        gbc.writeMem(0xd601, { 0x87 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf521, gbc.sp());
        EXPECT(0xbb91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb8f));
        EXPECT(0xd6, gbc.readMem(0xbb90));
        EXPECT(0x87, gbc.readMem(0xd601));
        // CB D6 0324
        gbc.setState(0x625c, 0x6bfb, 0xf340, 0x4851, 0xd574, 0xfe60, 0x0, 0x0);
        gbc.writeMem(0x625c, { 0xcb, 0xd6 });
        gbc.writeMem(0xfe60, { 0xfb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6bfb, gbc.sp());
        EXPECT(0x625e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xfe60));
        // CB D6 0325
        gbc.setState(0x86e1, 0xa8f3, 0xdb0, 0x4a92, 0xcbea, 0xaca2, 0x1, 0x0);
        gbc.writeMem(0x86e1, { 0xcb, 0xd6 });
        gbc.writeMem(0xaca2, { 0xbd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa8f3, gbc.sp());
        EXPECT(0x86e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e1));
        EXPECT(0xd6, gbc.readMem(0x86e2));
        EXPECT(0xbd, gbc.readMem(0xaca2));
        // CB D6 0326
        gbc.setState(0xa6d, 0xe1f7, 0x36d0, 0xd4fd, 0xde4c, 0xc189, 0x0, 0x1);
        gbc.writeMem(0xa6d, { 0xcb, 0xd6 });
        gbc.writeMem(0xc189, { 0xf });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe1f7, gbc.sp());
        EXPECT(0xa6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xc189));
        // CB D6 0327
        gbc.setState(0x457, 0xa8a5, 0x5c80, 0xc56f, 0xb6d2, 0xb9b5, 0x0, 0x0);
        gbc.writeMem(0x457, { 0xcb, 0xd6 });
        gbc.writeMem(0xb9b5, { 0x9e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa8a5, gbc.sp());
        EXPECT(0x459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb9b5));
        // CB D6 032A
        gbc.setState(0x1d0d, 0x7449, 0x76d0, 0xc38b, 0x86ae, 0x97fb, 0x0, 0x0);
        gbc.writeMem(0x1d0d, { 0xcb, 0xd6 });
        gbc.writeMem(0x97fb, { 0x55 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7449, gbc.sp());
        EXPECT(0x1d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x97fb));
        // CB D6 032C
        gbc.setState(0x39b9, 0xb1f7, 0xde30, 0x9069, 0xd1d, 0xe7bc, 0x0, 0x1);
        gbc.writeMem(0x39b9, { 0xcb, 0xd6 });
        gbc.writeMem(0xe7bc, { 0x23 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb1f7, gbc.sp());
        EXPECT(0x39bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe7bc));
        // CB D6 032D
        gbc.setState(0x447d, 0xbad5, 0xdb20, 0x96b3, 0x4947, 0xdce5, 0x0, 0x1);
        gbc.writeMem(0x447d, { 0xcb, 0xd6 });
        gbc.writeMem(0xdce5, { 0x38 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbad5, gbc.sp());
        EXPECT(0x447f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdce5));
        // CB D6 032E
        gbc.setState(0xd10e, 0x4326, 0xf0b0, 0x9cb3, 0x6033, 0xe80b, 0x0, 0x0);
        gbc.writeMem(0xd10e, { 0xcb, 0xd6 });
        gbc.writeMem(0xe80b, { 0xeb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4326, gbc.sp());
        EXPECT(0xd110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10e));
        EXPECT(0xd6, gbc.readMem(0xd10f));
        EXPECT(0xef, gbc.readMem(0xe80b));
        // CB D6 032F
        gbc.setState(0x467b, 0x826a, 0x16f0, 0x5357, 0x3268, 0xdb96, 0x1, 0x1);
        gbc.writeMem(0x467b, { 0xcb, 0xd6 });
        gbc.writeMem(0xdb96, { 0xa0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x826a, gbc.sp());
        EXPECT(0x467d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xdb96));
        // CB D6 0330
        gbc.setState(0x9d1f, 0x7ae8, 0x4230, 0x3fd3, 0xe561, 0xf7f6, 0x1, 0x0);
        gbc.writeMem(0x9d1f, { 0xcb, 0xd6 });
        gbc.writeMem(0xf7f6, { 0x52 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7ae8, gbc.sp());
        EXPECT(0x9d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d1f));
        EXPECT(0xd6, gbc.readMem(0x9d20));
        EXPECT(0x56, gbc.readMem(0xf7f6));
        // CB D6 0331
        gbc.setState(0x6827, 0xdcb3, 0x88b0, 0xbaec, 0xcaee, 0xc7d, 0x1, 0x0);
        gbc.writeMem(0xc7d, { 0x6f });
        gbc.writeMem(0x6827, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdcb3, gbc.sp());
        EXPECT(0x6829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0332
        gbc.setState(0x6598, 0xb93, 0xf410, 0x8f49, 0x796e, 0xf2d8, 0x0, 0x0);
        gbc.writeMem(0x6598, { 0xcb, 0xd6 });
        gbc.writeMem(0xf2d8, { 0x87 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb93, gbc.sp());
        EXPECT(0x659a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xf2d8));
        // CB D6 0334
        gbc.setState(0x4ef1, 0x2d94, 0x3d00, 0x3904, 0x101d, 0x3b0f, 0x0, 0x0);
        gbc.writeMem(0x3b0f, { 0x2c });
        gbc.writeMem(0x4ef1, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2d94, gbc.sp());
        EXPECT(0x4ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0335
        gbc.setState(0x1335, 0xae2e, 0x9a80, 0x7a5f, 0x5a79, 0xf5f, 0x1, 0x1);
        gbc.writeMem(0xf5f, { 0x7c });
        gbc.writeMem(0x1335, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xae2e, gbc.sp());
        EXPECT(0x1337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0336
        gbc.setState(0xb238, 0xa7d3, 0x5800, 0x4ab, 0xfa6b, 0x98f2, 0x0, 0x1);
        gbc.writeMem(0x98f2, { 0xe7 });
        gbc.writeMem(0xb238, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa7d3, gbc.sp());
        EXPECT(0xb23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x98f2));
        EXPECT(0xcb, gbc.readMem(0xb238));
        EXPECT(0xd6, gbc.readMem(0xb239));
        // CB D6 0337
        gbc.setState(0xd8, 0xdf97, 0xee20, 0xc009, 0x9819, 0x5a64, 0x1, 0x0);
        gbc.writeMem(0xd8, { 0xcb, 0xd6 });
        gbc.writeMem(0x5a64, { 0x5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdf97, gbc.sp());
        EXPECT(0xda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0338
        gbc.setState(0xaaeb, 0x7ecc, 0xff30, 0x30d5, 0x4d0, 0xb352, 0x0, 0x1);
        gbc.writeMem(0xaaeb, { 0xcb, 0xd6 });
        gbc.writeMem(0xb352, { 0x4c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7ecc, gbc.sp());
        EXPECT(0xaaed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaeb));
        EXPECT(0xd6, gbc.readMem(0xaaec));
        EXPECT(0x4c, gbc.readMem(0xb352));
        // CB D6 033A
        gbc.setState(0xa94f, 0x145b, 0xe560, 0xaf3b, 0xe579, 0x1865, 0x0, 0x1);
        gbc.writeMem(0x1865, { 0xf7 });
        gbc.writeMem(0xa94f, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x145b, gbc.sp());
        EXPECT(0xa951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa94f));
        EXPECT(0xd6, gbc.readMem(0xa950));
        // CB D6 033B
        gbc.setState(0x31c0, 0x8d9a, 0x5d30, 0xc2d, 0xe474, 0xa2ff, 0x0, 0x0);
        gbc.writeMem(0x31c0, { 0xcb, 0xd6 });
        gbc.writeMem(0xa2ff, { 0x76 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8d9a, gbc.sp());
        EXPECT(0x31c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa2ff));
        // CB D6 033C
        gbc.setState(0xcfe7, 0x5aff, 0x4c40, 0x1d95, 0xeafd, 0x74d, 0x0, 0x1);
        gbc.writeMem(0x74d, { 0x26 });
        gbc.writeMem(0xcfe7, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5aff, gbc.sp());
        EXPECT(0xcfe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe7));
        EXPECT(0xd6, gbc.readMem(0xcfe8));
        // CB D6 033D
        gbc.setState(0xbbe7, 0x7038, 0x73f0, 0xd1fd, 0x37ec, 0xc6b2, 0x1, 0x0);
        gbc.writeMem(0xbbe7, { 0xcb, 0xd6 });
        gbc.writeMem(0xc6b2, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7038, gbc.sp());
        EXPECT(0xbbe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe7));
        EXPECT(0xd6, gbc.readMem(0xbbe8));
        EXPECT(0x4, gbc.readMem(0xc6b2));
        // CB D6 033E
        gbc.setState(0x1c06, 0xfab1, 0x28c0, 0x373b, 0xc379, 0xe57a, 0x1, 0x1);
        gbc.writeMem(0x1c06, { 0xcb, 0xd6 });
        gbc.writeMem(0xe57a, { 0x20 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfab1, gbc.sp());
        EXPECT(0x1c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xe57a));
        // CB D6 033F
        gbc.setState(0x3fea, 0x516d, 0xe60, 0x8031, 0x4fab, 0xce2f, 0x1, 0x1);
        gbc.writeMem(0x3fea, { 0xcb, 0xd6 });
        gbc.writeMem(0xce2f, { 0x44 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x516d, gbc.sp());
        EXPECT(0x3fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xce2f));
        // CB D6 0340
        gbc.setState(0x7e6d, 0x5a6f, 0x75d0, 0xe455, 0x3b19, 0x1cd, 0x0, 0x0);
        gbc.writeMem(0x1cd, { 0x9d });
        gbc.writeMem(0x7e6d, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5a6f, gbc.sp());
        EXPECT(0x7e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0341
        gbc.setState(0xae99, 0x2329, 0xc20, 0x464d, 0x157a, 0xd8f7, 0x1, 0x1);
        gbc.writeMem(0xae99, { 0xcb, 0xd6 });
        gbc.writeMem(0xd8f7, { 0x44 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2329, gbc.sp());
        EXPECT(0xae9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae99));
        EXPECT(0xd6, gbc.readMem(0xae9a));
        EXPECT(0x44, gbc.readMem(0xd8f7));
        // CB D6 0342
        gbc.setState(0x4ebd, 0x2557, 0x7c10, 0x90da, 0x338a, 0x8a82, 0x1, 0x0);
        gbc.writeMem(0x4ebd, { 0xcb, 0xd6 });
        gbc.writeMem(0x8a82, { 0x7e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2557, gbc.sp());
        EXPECT(0x4ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8a82));
        // CB D6 0343
        gbc.setState(0x7a5c, 0x9d3, 0xeba0, 0xa5a1, 0x5f1c, 0xb3f9, 0x0, 0x0);
        gbc.writeMem(0x7a5c, { 0xcb, 0xd6 });
        gbc.writeMem(0xb3f9, { 0x21 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9d3, gbc.sp());
        EXPECT(0x7a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb3f9));
        // CB D6 0344
        gbc.setState(0xabc5, 0x49ea, 0xcfc0, 0x495, 0xe342, 0x839d, 0x1, 0x0);
        gbc.writeMem(0x839d, { 0xfa });
        gbc.writeMem(0xabc5, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x49ea, gbc.sp());
        EXPECT(0xabc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x839d));
        EXPECT(0xcb, gbc.readMem(0xabc5));
        EXPECT(0xd6, gbc.readMem(0xabc6));
        // CB D6 0345
        gbc.setState(0x3813, 0x2b26, 0xa960, 0x42cb, 0x849f, 0xba61, 0x0, 0x1);
        gbc.writeMem(0x3813, { 0xcb, 0xd6 });
        gbc.writeMem(0xba61, { 0xb2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2b26, gbc.sp());
        EXPECT(0x3815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xba61));
        // CB D6 0346
        gbc.setState(0x3bf8, 0x235e, 0xbb30, 0xb130, 0x33a2, 0xa4b5, 0x1, 0x1);
        gbc.writeMem(0x3bf8, { 0xcb, 0xd6 });
        gbc.writeMem(0xa4b5, { 0x38 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x235e, gbc.sp());
        EXPECT(0x3bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa4b5));
        // CB D6 034A
        gbc.setState(0x7cc1, 0xb15c, 0x62e0, 0x7d71, 0xa7c7, 0x1f78, 0x1, 0x0);
        gbc.writeMem(0x1f78, { 0x1e });
        gbc.writeMem(0x7cc1, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb15c, gbc.sp());
        EXPECT(0x7cc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 034B
        gbc.setState(0x9127, 0xfdce, 0x9650, 0x252c, 0xb08d, 0xfb24, 0x0, 0x0);
        gbc.writeMem(0x9127, { 0xcb, 0xd6 });
        gbc.writeMem(0xfb24, { 0x70 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfdce, gbc.sp());
        EXPECT(0x9129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9127));
        EXPECT(0xd6, gbc.readMem(0x9128));
        EXPECT(0x74, gbc.readMem(0xfb24));
        // CB D6 034C
        gbc.setState(0xc5c1, 0x8a57, 0xcfa0, 0x793f, 0xecd, 0xcf02, 0x1, 0x0);
        gbc.writeMem(0xc5c1, { 0xcb, 0xd6 });
        gbc.writeMem(0xcf02, { 0xd3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8a57, gbc.sp());
        EXPECT(0xc5c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c1));
        EXPECT(0xd6, gbc.readMem(0xc5c2));
        EXPECT(0xd7, gbc.readMem(0xcf02));
        // CB D6 034D
        gbc.setState(0x3a71, 0x54db, 0x3d60, 0x2ef7, 0x6029, 0x62c4, 0x1, 0x1);
        gbc.writeMem(0x3a71, { 0xcb, 0xd6 });
        gbc.writeMem(0x62c4, { 0x55 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x54db, gbc.sp());
        EXPECT(0x3a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 034E
        gbc.setState(0xbf35, 0xcb8, 0xb470, 0xe57c, 0xcba2, 0x2241, 0x0, 0x0);
        gbc.writeMem(0x2241, { 0x1e });
        gbc.writeMem(0xbf35, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcb8, gbc.sp());
        EXPECT(0xbf37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf35));
        EXPECT(0xd6, gbc.readMem(0xbf36));
        // CB D6 034F
        gbc.setState(0x179a, 0x13f0, 0x5620, 0x191e, 0x5e6a, 0xb57e, 0x1, 0x0);
        gbc.writeMem(0x179a, { 0xcb, 0xd6 });
        gbc.writeMem(0xb57e, { 0x3e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x13f0, gbc.sp());
        EXPECT(0x179c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb57e));
        // CB D6 0350
        gbc.setState(0xa3c2, 0xd35c, 0x9e30, 0xcbd7, 0xdb0d, 0xe536, 0x1, 0x0);
        gbc.writeMem(0xa3c2, { 0xcb, 0xd6 });
        gbc.writeMem(0xe536, { 0xf0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd35c, gbc.sp());
        EXPECT(0xa3c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c2));
        EXPECT(0xd6, gbc.readMem(0xa3c3));
        EXPECT(0xf4, gbc.readMem(0xe536));
        // CB D6 0351
        gbc.setState(0xa910, 0x744f, 0xa320, 0x5ca5, 0xd142, 0xfcb7, 0x1, 0x1);
        gbc.writeMem(0xa910, { 0xcb, 0xd6 });
        gbc.writeMem(0xfcb7, { 0x6b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x744f, gbc.sp());
        EXPECT(0xa912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa910));
        EXPECT(0xd6, gbc.readMem(0xa911));
        EXPECT(0x6f, gbc.readMem(0xfcb7));
        // CB D6 0352
        gbc.setState(0xbf6c, 0x4d40, 0xd360, 0x7a07, 0x4756, 0xecc5, 0x0, 0x0);
        gbc.writeMem(0xbf6c, { 0xcb, 0xd6 });
        gbc.writeMem(0xecc5, { 0xed });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4d40, gbc.sp());
        EXPECT(0xbf6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf6c));
        EXPECT(0xd6, gbc.readMem(0xbf6d));
        EXPECT(0xed, gbc.readMem(0xecc5));
        // CB D6 0353
        gbc.setState(0xe1ef, 0x5c2b, 0xe8b0, 0x8e83, 0x95cc, 0x5ed2, 0x1, 0x1);
        gbc.writeMem(0x5ed2, { 0xcd });
        gbc.writeMem(0xe1ef, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5c2b, gbc.sp());
        EXPECT(0xe1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ef));
        EXPECT(0xd6, gbc.readMem(0xe1f0));
        // CB D6 0354
        gbc.setState(0x222a, 0x97a8, 0x3da0, 0x24e7, 0x910b, 0x4833, 0x1, 0x1);
        gbc.writeMem(0x222a, { 0xcb, 0xd6 });
        gbc.writeMem(0x4833, { 0x7f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x97a8, gbc.sp());
        EXPECT(0x222c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0355
        gbc.setState(0x34dc, 0x6a31, 0x7840, 0x6e0f, 0xe3e, 0xf675, 0x1, 0x1);
        gbc.writeMem(0x34dc, { 0xcb, 0xd6 });
        gbc.writeMem(0xf675, { 0xac });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6a31, gbc.sp());
        EXPECT(0x34de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xf675));
        // CB D6 0356
        gbc.setState(0x6ba1, 0x6341, 0xa190, 0x57e0, 0x7e00, 0xe251, 0x1, 0x0);
        gbc.writeMem(0x6ba1, { 0xcb, 0xd6 });
        gbc.writeMem(0xe251, { 0x39 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6341, gbc.sp());
        EXPECT(0x6ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xe251));
        // CB D6 0357
        gbc.setState(0x1e45, 0xbc6, 0xf4f0, 0xe8a2, 0xf575, 0xc39e, 0x0, 0x1);
        gbc.writeMem(0x1e45, { 0xcb, 0xd6 });
        gbc.writeMem(0xc39e, { 0x83 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbc6, gbc.sp());
        EXPECT(0x1e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc39e));
        // CB D6 0358
        gbc.setState(0x2349, 0x4580, 0xaa10, 0x6c42, 0xbeda, 0xc3d0, 0x0, 0x0);
        gbc.writeMem(0x2349, { 0xcb, 0xd6 });
        gbc.writeMem(0xc3d0, { 0x3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4580, gbc.sp());
        EXPECT(0x234b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc3d0));
        // CB D6 0359
        gbc.setState(0xd2dd, 0x7385, 0x6ac0, 0x3547, 0xfe40, 0xf9b6, 0x0, 0x0);
        gbc.writeMem(0xd2dd, { 0xcb, 0xd6 });
        gbc.writeMem(0xf9b6, { 0xad });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7385, gbc.sp());
        EXPECT(0xd2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2dd));
        EXPECT(0xd6, gbc.readMem(0xd2de));
        EXPECT(0xad, gbc.readMem(0xf9b6));
        // CB D6 035C
        gbc.setState(0x7a5c, 0x2d6f, 0xb580, 0x9acc, 0x2fbe, 0x914a, 0x1, 0x1);
        gbc.writeMem(0x7a5c, { 0xcb, 0xd6 });
        gbc.writeMem(0x914a, { 0xa5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2d6f, gbc.sp());
        EXPECT(0x7a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x914a));
        // CB D6 035D
        gbc.setState(0xbab7, 0x417b, 0x1920, 0xcd4a, 0xf331, 0xaaba, 0x0, 0x0);
        gbc.writeMem(0xaaba, { 0x56 });
        gbc.writeMem(0xbab7, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x417b, gbc.sp());
        EXPECT(0xbab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xaaba));
        EXPECT(0xcb, gbc.readMem(0xbab7));
        EXPECT(0xd6, gbc.readMem(0xbab8));
        // CB D6 035E
        gbc.setState(0xea51, 0x9a70, 0x9540, 0xf68, 0x3dbc, 0x5c04, 0x0, 0x1);
        gbc.writeMem(0x5c04, { 0xb6 });
        gbc.writeMem(0xea51, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9a70, gbc.sp());
        EXPECT(0xea53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea51));
        EXPECT(0xd6, gbc.readMem(0xea52));
        // CB D6 035F
        gbc.setState(0x1f71, 0xee0e, 0x1b70, 0xab07, 0x24f, 0xe1aa, 0x0, 0x1);
        gbc.writeMem(0x1f71, { 0xcb, 0xd6 });
        gbc.writeMem(0xe1aa, { 0x65 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xee0e, gbc.sp());
        EXPECT(0x1f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe1aa));
        // CB D6 0362
        gbc.setState(0x7c7, 0x6332, 0x9220, 0x2716, 0xd965, 0x744f, 0x0, 0x1);
        gbc.writeMem(0x7c7, { 0xcb, 0xd6 });
        gbc.writeMem(0x744f, { 0x97 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6332, gbc.sp());
        EXPECT(0x7c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0363
        gbc.setState(0xb1ce, 0x4543, 0xb8f0, 0xa004, 0xbe5, 0x508f, 0x0, 0x0);
        gbc.writeMem(0x508f, { 0x55 });
        gbc.writeMem(0xb1ce, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4543, gbc.sp());
        EXPECT(0xb1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ce));
        EXPECT(0xd6, gbc.readMem(0xb1cf));
        // CB D6 0364
        gbc.setState(0xaab3, 0xc2ac, 0xf400, 0x141, 0xc9fa, 0xa8b7, 0x0, 0x0);
        gbc.writeMem(0xa8b7, { 0x6d });
        gbc.writeMem(0xaab3, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc2ac, gbc.sp());
        EXPECT(0xaab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xa8b7));
        EXPECT(0xcb, gbc.readMem(0xaab3));
        EXPECT(0xd6, gbc.readMem(0xaab4));
        // CB D6 0365
        gbc.setState(0x4f26, 0xd1b5, 0x200, 0x8011, 0x3e24, 0xda00, 0x1, 0x0);
        gbc.writeMem(0x4f26, { 0xcb, 0xd6 });
        gbc.writeMem(0xda00, { 0xa6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd1b5, gbc.sp());
        EXPECT(0x4f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xda00));
        // CB D6 0366
        gbc.setState(0x153b, 0x9191, 0x47c0, 0xaadb, 0xe4e7, 0xb604, 0x0, 0x1);
        gbc.writeMem(0x153b, { 0xcb, 0xd6 });
        gbc.writeMem(0xb604, { 0x5b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9191, gbc.sp());
        EXPECT(0x153d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xb604));
        // CB D6 0367
        gbc.setState(0xb5c3, 0xc12a, 0xa330, 0x5975, 0x8d34, 0x4599, 0x0, 0x1);
        gbc.writeMem(0x4599, { 0x55 });
        gbc.writeMem(0xb5c3, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc12a, gbc.sp());
        EXPECT(0xb5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c3));
        EXPECT(0xd6, gbc.readMem(0xb5c4));
        // CB D6 0369
        gbc.setState(0x50aa, 0xc08e, 0xc4f0, 0x7e1d, 0xa06, 0x16a, 0x1, 0x0);
        gbc.writeMem(0x16a, { 0xe6 });
        gbc.writeMem(0x50aa, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc08e, gbc.sp());
        EXPECT(0x50ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 036C
        gbc.setState(0x6105, 0xab35, 0x9f70, 0x4294, 0x80fa, 0x3ffb, 0x0, 0x0);
        gbc.writeMem(0x3ffb, { 0xc7 });
        gbc.writeMem(0x6105, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xab35, gbc.sp());
        EXPECT(0x6107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 036D
        gbc.setState(0xaecd, 0x734b, 0xa660, 0xb26a, 0x6f33, 0xaa11, 0x0, 0x0);
        gbc.writeMem(0xaa11, { 0xc6 });
        gbc.writeMem(0xaecd, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x734b, gbc.sp());
        EXPECT(0xaecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xaa11));
        EXPECT(0xcb, gbc.readMem(0xaecd));
        EXPECT(0xd6, gbc.readMem(0xaece));
        // CB D6 036F
        gbc.setState(0xc33f, 0xac5b, 0x55d0, 0x3730, 0x241b, 0xf618, 0x1, 0x0);
        gbc.writeMem(0xc33f, { 0xcb, 0xd6 });
        gbc.writeMem(0xf618, { 0xf });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xac5b, gbc.sp());
        EXPECT(0xc341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc33f));
        EXPECT(0xd6, gbc.readMem(0xc340));
        EXPECT(0xf, gbc.readMem(0xf618));
        // CB D6 0370
        gbc.setState(0x291b, 0x9432, 0x6120, 0xebdd, 0x7c6f, 0xfab7, 0x1, 0x1);
        gbc.writeMem(0x291b, { 0xcb, 0xd6 });
        gbc.writeMem(0xfab7, { 0x4e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9432, gbc.sp());
        EXPECT(0x291d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xfab7));
        // CB D6 0371
        gbc.setState(0xdba9, 0xc2c3, 0x3ac0, 0x704, 0xb32f, 0xf7e6, 0x0, 0x1);
        gbc.writeMem(0xdba9, { 0xcb, 0xd6 });
        gbc.writeMem(0xf7e6, { 0xc5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc2c3, gbc.sp());
        EXPECT(0xdbab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba9));
        EXPECT(0xd6, gbc.readMem(0xdbaa));
        EXPECT(0xc5, gbc.readMem(0xf7e6));
        // CB D6 0372
        gbc.setState(0xbbdf, 0x1bf4, 0xdab0, 0x6497, 0xdd04, 0xa71c, 0x0, 0x1);
        gbc.writeMem(0xa71c, { 0x5e });
        gbc.writeMem(0xbbdf, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1bf4, gbc.sp());
        EXPECT(0xbbe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa71c));
        EXPECT(0xcb, gbc.readMem(0xbbdf));
        EXPECT(0xd6, gbc.readMem(0xbbe0));
        // CB D6 0374
        gbc.setState(0x362c, 0x7e4d, 0x39a0, 0x4158, 0xb390, 0xc50, 0x1, 0x1);
        gbc.writeMem(0xc50, { 0xdf });
        gbc.writeMem(0x362c, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7e4d, gbc.sp());
        EXPECT(0x362e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0375
        gbc.setState(0x3703, 0x9fc0, 0x700, 0xdd27, 0x963a, 0xa435, 0x1, 0x1);
        gbc.writeMem(0x3703, { 0xcb, 0xd6 });
        gbc.writeMem(0xa435, { 0xcb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9fc0, gbc.sp());
        EXPECT(0x3705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xa435));
        // CB D6 0376
        gbc.setState(0x284f, 0xf879, 0x64b0, 0xbb6d, 0x1c03, 0xd262, 0x1, 0x0);
        gbc.writeMem(0x284f, { 0xcb, 0xd6 });
        gbc.writeMem(0xd262, { 0x28 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf879, gbc.sp());
        EXPECT(0x2851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd262));
        // CB D6 0377
        gbc.setState(0x9d6f, 0x978e, 0x14f0, 0x3dd2, 0xc565, 0x38d8, 0x1, 0x0);
        gbc.writeMem(0x38d8, { 0x35 });
        gbc.writeMem(0x9d6f, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x978e, gbc.sp());
        EXPECT(0x9d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6f));
        EXPECT(0xd6, gbc.readMem(0x9d70));
        // CB D6 0378
        gbc.setState(0xa3e9, 0xcd31, 0xd220, 0x6239, 0x2cf1, 0x53a1, 0x0, 0x1);
        gbc.writeMem(0x53a1, { 0xe });
        gbc.writeMem(0xa3e9, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcd31, gbc.sp());
        EXPECT(0xa3eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e9));
        EXPECT(0xd6, gbc.readMem(0xa3ea));
        // CB D6 0379
        gbc.setState(0xdde2, 0x1a28, 0x2a0, 0xadf6, 0xe13f, 0xc0a3, 0x0, 0x1);
        gbc.writeMem(0xc0a3, { 0xf0 });
        gbc.writeMem(0xdde2, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1a28, gbc.sp());
        EXPECT(0xdde4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xc0a3));
        EXPECT(0xcb, gbc.readMem(0xdde2));
        EXPECT(0xd6, gbc.readMem(0xdde3));
        // CB D6 037A
        gbc.setState(0x14a, 0x65fb, 0x740, 0x334c, 0xef10, 0x80e0, 0x0, 0x0);
        gbc.writeMem(0x14a, { 0xcb, 0xd6 });
        gbc.writeMem(0x80e0, { 0x78 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x65fb, gbc.sp());
        EXPECT(0x14c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x80e0));
        // CB D6 037B
        gbc.setState(0xd3ce, 0xa339, 0x4c0, 0x1947, 0x3a3b, 0xec47, 0x1, 0x0);
        gbc.writeMem(0xd3ce, { 0xcb, 0xd6 });
        gbc.writeMem(0xec47, { 0x37 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa339, gbc.sp());
        EXPECT(0xd3d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ce));
        EXPECT(0xd6, gbc.readMem(0xd3cf));
        EXPECT(0x37, gbc.readMem(0xec47));
        // CB D6 037C
        gbc.setState(0xd7a4, 0xb3a6, 0x9850, 0x4fe1, 0x5a68, 0xc61c, 0x0, 0x0);
        gbc.writeMem(0xc61c, { 0xe4 });
        gbc.writeMem(0xd7a4, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb3a6, gbc.sp());
        EXPECT(0xd7a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xc61c));
        EXPECT(0xcb, gbc.readMem(0xd7a4));
        EXPECT(0xd6, gbc.readMem(0xd7a5));
        // CB D6 037E
        gbc.setState(0x1262, 0xa006, 0xea40, 0x4d7f, 0x760f, 0x2d5c, 0x0, 0x0);
        gbc.writeMem(0x1262, { 0xcb, 0xd6 });
        gbc.writeMem(0x2d5c, { 0x5d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa006, gbc.sp());
        EXPECT(0x1264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 037F
        gbc.setState(0xdf88, 0xdef8, 0x64c0, 0x788d, 0xaf48, 0x49ac, 0x1, 0x1);
        gbc.writeMem(0x49ac, { 0xcf });
        gbc.writeMem(0xdf88, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdef8, gbc.sp());
        EXPECT(0xdf8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf88));
        EXPECT(0xd6, gbc.readMem(0xdf89));
        // CB D6 0380
        gbc.setState(0xc4d, 0x18a5, 0xc690, 0xf3c8, 0x520c, 0x68b0, 0x1, 0x0);
        gbc.writeMem(0xc4d, { 0xcb, 0xd6 });
        gbc.writeMem(0x68b0, { 0xcc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x18a5, gbc.sp());
        EXPECT(0xc4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 0382
        gbc.setState(0x2d8e, 0x2494, 0x8dc0, 0xdabf, 0xabc4, 0x28f, 0x1, 0x1);
        gbc.writeMem(0x28f, { 0x96 });
        gbc.writeMem(0x2d8e, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2494, gbc.sp());
        EXPECT(0x2d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0383
        gbc.setState(0x4073, 0xccdf, 0x6980, 0xb569, 0x79a, 0xb666, 0x0, 0x0);
        gbc.writeMem(0x4073, { 0xcb, 0xd6 });
        gbc.writeMem(0xb666, { 0x2f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xccdf, gbc.sp());
        EXPECT(0x4075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb666));
        // CB D6 0385
        gbc.setState(0x7401, 0xcd9a, 0x2400, 0x370d, 0x4c2, 0x4be5, 0x1, 0x0);
        gbc.writeMem(0x4be5, { 0xe6 });
        gbc.writeMem(0x7401, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcd9a, gbc.sp());
        EXPECT(0x7403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 0388
        gbc.setState(0xd6c9, 0xb13d, 0x8330, 0xae66, 0xeb2a, 0x8700, 0x1, 0x0);
        gbc.writeMem(0x8700, { 0x98 });
        gbc.writeMem(0xd6c9, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb13d, gbc.sp());
        EXPECT(0xd6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8700));
        EXPECT(0xcb, gbc.readMem(0xd6c9));
        EXPECT(0xd6, gbc.readMem(0xd6ca));
        // CB D6 0389
        gbc.setState(0xacbf, 0xdce, 0x71d0, 0x2a33, 0x2a7c, 0x4bb0, 0x0, 0x0);
        gbc.writeMem(0x4bb0, { 0x46 });
        gbc.writeMem(0xacbf, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdce, gbc.sp());
        EXPECT(0xacc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacbf));
        EXPECT(0xd6, gbc.readMem(0xacc0));
        // CB D6 038C
        gbc.setState(0x6f7a, 0xe701, 0xfc70, 0xa3eb, 0x5278, 0x1867, 0x1, 0x0);
        gbc.writeMem(0x1867, { 0x16 });
        gbc.writeMem(0x6f7a, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe701, gbc.sp());
        EXPECT(0x6f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 038D
        gbc.setState(0xc4d3, 0xcfca, 0x8df0, 0x5bed, 0xc090, 0xcb65, 0x0, 0x0);
        gbc.writeMem(0xc4d3, { 0xcb, 0xd6 });
        gbc.writeMem(0xcb65, { 0x16 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcfca, gbc.sp());
        EXPECT(0xc4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d3));
        EXPECT(0xd6, gbc.readMem(0xc4d4));
        EXPECT(0x16, gbc.readMem(0xcb65));
        // CB D6 038E
        gbc.setState(0x5de3, 0x56a1, 0x3c70, 0x6353, 0x4fe1, 0x88fc, 0x0, 0x0);
        gbc.writeMem(0x5de3, { 0xcb, 0xd6 });
        gbc.writeMem(0x88fc, { 0xc7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x56a1, gbc.sp());
        EXPECT(0x5de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x88fc));
        // CB D6 038F
        gbc.setState(0x36b, 0x165f, 0xae00, 0x750d, 0x482f, 0xbe0d, 0x0, 0x0);
        gbc.writeMem(0x36b, { 0xcb, 0xd6 });
        gbc.writeMem(0xbe0d, { 0x8d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x165f, gbc.sp());
        EXPECT(0x36d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbe0d));
        // CB D6 0392
        gbc.setState(0x4055, 0x42da, 0xf430, 0xb322, 0xad83, 0x9f4c, 0x0, 0x0);
        gbc.writeMem(0x4055, { 0xcb, 0xd6 });
        gbc.writeMem(0x9f4c, { 0x35 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x42da, gbc.sp());
        EXPECT(0x4057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9f4c));
        // CB D6 0394
        gbc.setState(0x855e, 0x8479, 0xd2a0, 0xaf9e, 0xc7c, 0x5fc3, 0x0, 0x1);
        gbc.writeMem(0x5fc3, { 0xb6 });
        gbc.writeMem(0x855e, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8479, gbc.sp());
        EXPECT(0x8560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x855e));
        EXPECT(0xd6, gbc.readMem(0x855f));
        // CB D6 0395
        gbc.setState(0xbcb, 0x3fd8, 0x3400, 0x247d, 0xf29f, 0xbb3a, 0x1, 0x0);
        gbc.writeMem(0xbcb, { 0xcb, 0xd6 });
        gbc.writeMem(0xbb3a, { 0x98 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3fd8, gbc.sp());
        EXPECT(0xbcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbb3a));
        // CB D6 0396
        gbc.setState(0xdff0, 0x892a, 0x8960, 0x6bb5, 0xff41, 0xe0c0, 0x1, 0x1);
        gbc.writeMem(0xdff0, { 0xcb, 0xd6 });
        gbc.writeMem(0xe0c0, { 0x44 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x892a, gbc.sp());
        EXPECT(0xdff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff0));
        EXPECT(0xd6, gbc.readMem(0xdff1));
        EXPECT(0x44, gbc.readMem(0xe0c0));
        // CB D6 0399
        gbc.setState(0xce54, 0xf0fc, 0xa080, 0xe9e6, 0x6b7b, 0xe38f, 0x1, 0x1);
        gbc.writeMem(0xce54, { 0xcb, 0xd6 });
        gbc.writeMem(0xe38f, { 0xa9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf0fc, gbc.sp());
        EXPECT(0xce56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce54));
        EXPECT(0xd6, gbc.readMem(0xce55));
        EXPECT(0xad, gbc.readMem(0xe38f));
        // CB D6 039A
        gbc.setState(0x3afb, 0x2d35, 0xfee0, 0x344, 0x9bce, 0x3d61, 0x0, 0x1);
        gbc.writeMem(0x3afb, { 0xcb, 0xd6 });
        gbc.writeMem(0x3d61, { 0x77 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2d35, gbc.sp());
        EXPECT(0x3afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 039B
        gbc.setState(0x6d31, 0xdf2f, 0xb3d0, 0x2889, 0x51ea, 0xf5, 0x1, 0x0);
        gbc.writeMem(0xf5, { 0xbd });
        gbc.writeMem(0x6d31, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdf2f, gbc.sp());
        EXPECT(0x6d33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 039C
        gbc.setState(0x2ba7, 0xa5ad, 0xcc90, 0x14a0, 0xb67f, 0xfd69, 0x1, 0x1);
        gbc.writeMem(0x2ba7, { 0xcb, 0xd6 });
        gbc.writeMem(0xfd69, { 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa5ad, gbc.sp());
        EXPECT(0x2ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xfd69));
        // CB D6 039D
        gbc.setState(0x5bde, 0x22e4, 0x38b0, 0xb2ae, 0xd561, 0xca49, 0x1, 0x1);
        gbc.writeMem(0x5bde, { 0xcb, 0xd6 });
        gbc.writeMem(0xca49, { 0xf9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x22e4, gbc.sp());
        EXPECT(0x5be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xca49));
        // CB D6 039E
        gbc.setState(0x41d2, 0x53f0, 0x92f0, 0x89cd, 0x1902, 0xe69b, 0x1, 0x0);
        gbc.writeMem(0x41d2, { 0xcb, 0xd6 });
        gbc.writeMem(0xe69b, { 0x42 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x53f0, gbc.sp());
        EXPECT(0x41d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xe69b));
        // CB D6 03A0
        gbc.setState(0x4a7, 0x327b, 0xa90, 0xb841, 0x575b, 0xa4dd, 0x1, 0x1);
        gbc.writeMem(0x4a7, { 0xcb, 0xd6 });
        gbc.writeMem(0xa4dd, { 0x65 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x327b, gbc.sp());
        EXPECT(0x4a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa4dd));
        // CB D6 03A1
        gbc.setState(0x2196, 0xd443, 0x2100, 0xe058, 0x3dde, 0xff1c, 0x1, 0x1);
        gbc.writeMem(0x2196, { 0xcb, 0xd6 });
        gbc.writeMem(0xff1c, { 0x94 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd443, gbc.sp());
        EXPECT(0x2198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xff1c));
        // CB D6 03A2
        gbc.setState(0x39d7, 0xb173, 0xe160, 0xca0, 0x32eb, 0x7c49, 0x1, 0x0);
        gbc.writeMem(0x39d7, { 0xcb, 0xd6 });
        gbc.writeMem(0x7c49, { 0x8f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb173, gbc.sp());
        EXPECT(0x39d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 03A3
        gbc.setState(0x6a26, 0xaef0, 0xcef0, 0x8de1, 0x52f1, 0xfa54, 0x1, 0x1);
        gbc.writeMem(0x6a26, { 0xcb, 0xd6 });
        gbc.writeMem(0xfa54, { 0x54 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xaef0, gbc.sp());
        EXPECT(0x6a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xfa54));
        // CB D6 03A4
        gbc.setState(0xb0d4, 0xda8, 0xf9d0, 0xe562, 0xfd82, 0x82ed, 0x1, 0x1);
        gbc.writeMem(0x82ed, { 0xfb });
        gbc.writeMem(0xb0d4, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xda8, gbc.sp());
        EXPECT(0xb0d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x82ed));
        EXPECT(0xcb, gbc.readMem(0xb0d4));
        EXPECT(0xd6, gbc.readMem(0xb0d5));
        // CB D6 03A5
        gbc.setState(0xa9f3, 0xf49b, 0x1300, 0x68af, 0x4f09, 0xca17, 0x0, 0x1);
        gbc.writeMem(0xa9f3, { 0xcb, 0xd6 });
        gbc.writeMem(0xca17, { 0x3e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf49b, gbc.sp());
        EXPECT(0xa9f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f3));
        EXPECT(0xd6, gbc.readMem(0xa9f4));
        EXPECT(0x3e, gbc.readMem(0xca17));
        // CB D6 03A6
        gbc.setState(0x6775, 0xe4b1, 0xbfa0, 0x18f, 0x47e8, 0x280e, 0x0, 0x1);
        gbc.writeMem(0x280e, { 0x4f });
        gbc.writeMem(0x6775, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe4b1, gbc.sp());
        EXPECT(0x6777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 03A7
        gbc.setState(0x4064, 0x99ae, 0x9030, 0x845d, 0x5621, 0xc524, 0x1, 0x0);
        gbc.writeMem(0x4064, { 0xcb, 0xd6 });
        gbc.writeMem(0xc524, { 0x95 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x99ae, gbc.sp());
        EXPECT(0x4066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc524));
        // CB D6 03A8
        gbc.setState(0xcbf4, 0x9b94, 0x50f0, 0x90f5, 0x96bf, 0xe18f, 0x1, 0x0);
        gbc.writeMem(0xcbf4, { 0xcb, 0xd6 });
        gbc.writeMem(0xe18f, { 0x4f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9b94, gbc.sp());
        EXPECT(0xcbf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf4));
        EXPECT(0xd6, gbc.readMem(0xcbf5));
        EXPECT(0x4f, gbc.readMem(0xe18f));
        // CB D6 03AA
        gbc.setState(0x2be9, 0x2fb2, 0xc110, 0x28ba, 0xc9c9, 0x2b59, 0x0, 0x1);
        gbc.writeMem(0x2b59, { 0x1c });
        gbc.writeMem(0x2be9, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2fb2, gbc.sp());
        EXPECT(0x2beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 03AE
        gbc.setState(0x77b1, 0x43d4, 0x4740, 0x927f, 0x2883, 0x3c22, 0x1, 0x0);
        gbc.writeMem(0x3c22, { 0x2d });
        gbc.writeMem(0x77b1, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x43d4, gbc.sp());
        EXPECT(0x77b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 03AF
        gbc.setState(0xb30c, 0x540a, 0xe600, 0x11ce, 0x2032, 0xe643, 0x0, 0x1);
        gbc.writeMem(0xb30c, { 0xcb, 0xd6 });
        gbc.writeMem(0xe643, { 0xc1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x540a, gbc.sp());
        EXPECT(0xb30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb30c));
        EXPECT(0xd6, gbc.readMem(0xb30d));
        EXPECT(0xc5, gbc.readMem(0xe643));
        // CB D6 03B0
        gbc.setState(0xd831, 0xe39f, 0xacc0, 0xe50, 0x2040, 0x27b9, 0x0, 0x1);
        gbc.writeMem(0x27b9, { 0x8e });
        gbc.writeMem(0xd831, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe39f, gbc.sp());
        EXPECT(0xd833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd831));
        EXPECT(0xd6, gbc.readMem(0xd832));
        // CB D6 03B1
        gbc.setState(0xe796, 0x872c, 0x7c60, 0xfcb0, 0xa609, 0x6b25, 0x0, 0x1);
        gbc.writeMem(0x6b25, { 0x14 });
        gbc.writeMem(0xe796, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x872c, gbc.sp());
        EXPECT(0xe798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe796));
        EXPECT(0xd6, gbc.readMem(0xe797));
        // CB D6 03B3
        gbc.setState(0xb3fd, 0x9db5, 0xc270, 0x2d5a, 0xa159, 0xe725, 0x0, 0x1);
        gbc.writeMem(0xb3fd, { 0xcb, 0xd6 });
        gbc.writeMem(0xe725, { 0xb0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9db5, gbc.sp());
        EXPECT(0xb3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3fd));
        EXPECT(0xd6, gbc.readMem(0xb3fe));
        EXPECT(0xb4, gbc.readMem(0xe725));
        // CB D6 03B4
        gbc.setState(0x693c, 0x9594, 0x6960, 0xe169, 0xb85e, 0xa055, 0x0, 0x1);
        gbc.writeMem(0x693c, { 0xcb, 0xd6 });
        gbc.writeMem(0xa055, { 0x45 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9594, gbc.sp());
        EXPECT(0x693e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xa055));
        // CB D6 03B5
        gbc.setState(0xc2d7, 0x575d, 0xb320, 0xa75c, 0x76f6, 0xbbd, 0x0, 0x1);
        gbc.writeMem(0xbbd, { 0x95 });
        gbc.writeMem(0xc2d7, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x575d, gbc.sp());
        EXPECT(0xc2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d7));
        EXPECT(0xd6, gbc.readMem(0xc2d8));
        // CB D6 03B7
        gbc.setState(0x544d, 0x9e6b, 0xc620, 0x394c, 0x7db7, 0x3296, 0x0, 0x1);
        gbc.writeMem(0x3296, { 0xa4 });
        gbc.writeMem(0x544d, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9e6b, gbc.sp());
        EXPECT(0x544f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 03B8
        gbc.setState(0xcd6, 0xbb79, 0xcc70, 0x44a1, 0x7667, 0x8399, 0x1, 0x1);
        gbc.writeMem(0xcd6, { 0xcb, 0xd6 });
        gbc.writeMem(0x8399, { 0x9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbb79, gbc.sp());
        EXPECT(0xcd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x8399));
        // CB D6 03B9
        gbc.setState(0x7538, 0x90a6, 0xaca0, 0x70c3, 0x6bf1, 0xfa1b, 0x1, 0x1);
        gbc.writeMem(0x7538, { 0xcb, 0xd6 });
        gbc.writeMem(0xfa1b, { 0x5b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x90a6, gbc.sp());
        EXPECT(0x753a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xfa1b));
        // CB D6 03BB
        gbc.setState(0xae82, 0xa800, 0x80a0, 0x746c, 0xdfa0, 0xc213, 0x0, 0x1);
        gbc.writeMem(0xae82, { 0xcb, 0xd6 });
        gbc.writeMem(0xc213, { 0xec });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa800, gbc.sp());
        EXPECT(0xae84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae82));
        EXPECT(0xd6, gbc.readMem(0xae83));
        EXPECT(0xec, gbc.readMem(0xc213));
        // CB D6 03BF
        gbc.setState(0x780e, 0xa3cd, 0x3ab0, 0x16b3, 0xa4d9, 0xc066, 0x0, 0x1);
        gbc.writeMem(0x780e, { 0xcb, 0xd6 });
        gbc.writeMem(0xc066, { 0x5b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa3cd, gbc.sp());
        EXPECT(0x7810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xc066));
        // CB D6 03C0
        gbc.setState(0xa5a8, 0xc41, 0xf900, 0x1410, 0xdef7, 0x369c, 0x1, 0x1);
        gbc.writeMem(0x369c, { 0x6e });
        gbc.writeMem(0xa5a8, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc41, gbc.sp());
        EXPECT(0xa5aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a8));
        EXPECT(0xd6, gbc.readMem(0xa5a9));
        // CB D6 03C1
        gbc.setState(0x2bc, 0x5ccb, 0x5340, 0x2116, 0xfe08, 0x6fa2, 0x0, 0x1);
        gbc.writeMem(0x2bc, { 0xcb, 0xd6 });
        gbc.writeMem(0x6fa2, { 0xfc });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5ccb, gbc.sp());
        EXPECT(0x2be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 03C2
        gbc.setState(0xca42, 0x403c, 0x78e0, 0x1abf, 0x3c48, 0xe406, 0x1, 0x1);
        gbc.writeMem(0xca42, { 0xcb, 0xd6 });
        gbc.writeMem(0xe406, { 0xf8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x403c, gbc.sp());
        EXPECT(0xca44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca42));
        EXPECT(0xd6, gbc.readMem(0xca43));
        EXPECT(0xfc, gbc.readMem(0xe406));
        // CB D6 03C3
        gbc.setState(0x89c1, 0xa8a3, 0x8170, 0x7738, 0xa3ae, 0xd7bf, 0x1, 0x1);
        gbc.writeMem(0x89c1, { 0xcb, 0xd6 });
        gbc.writeMem(0xd7bf, { 0x5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa8a3, gbc.sp());
        EXPECT(0x89c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c1));
        EXPECT(0xd6, gbc.readMem(0x89c2));
        EXPECT(0x5, gbc.readMem(0xd7bf));
        // CB D6 03C4
        gbc.setState(0x812d, 0xc18b, 0x4330, 0x9c38, 0xd4a8, 0x8075, 0x0, 0x0);
        gbc.writeMem(0x8075, { 0x49 });
        gbc.writeMem(0x812d, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc18b, gbc.sp());
        EXPECT(0x812f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8075));
        EXPECT(0xcb, gbc.readMem(0x812d));
        EXPECT(0xd6, gbc.readMem(0x812e));
        // CB D6 03C5
        gbc.setState(0x6676, 0xb252, 0x3790, 0x55aa, 0xf76d, 0xc8fa, 0x0, 0x0);
        gbc.writeMem(0x6676, { 0xcb, 0xd6 });
        gbc.writeMem(0xc8fa, { 0xb7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb252, gbc.sp());
        EXPECT(0x6678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc8fa));
        // CB D6 03C8
        gbc.setState(0xf6b, 0x9d95, 0xe3a0, 0x6717, 0xdf6b, 0x5ea5, 0x1, 0x1);
        gbc.writeMem(0xf6b, { 0xcb, 0xd6 });
        gbc.writeMem(0x5ea5, { 0xde });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9d95, gbc.sp());
        EXPECT(0xf6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 03C9
        gbc.setState(0xbb67, 0x57cb, 0xb3b0, 0xa85, 0x282d, 0xb114, 0x1, 0x1);
        gbc.writeMem(0xb114, { 0x3c });
        gbc.writeMem(0xbb67, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x57cb, gbc.sp());
        EXPECT(0xbb69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb114));
        EXPECT(0xcb, gbc.readMem(0xbb67));
        EXPECT(0xd6, gbc.readMem(0xbb68));
        // CB D6 03CA
        gbc.setState(0xe647, 0x11e1, 0xf450, 0xdd52, 0x61b1, 0x99d1, 0x1, 0x1);
        gbc.writeMem(0x99d1, { 0x2 });
        gbc.writeMem(0xe647, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x11e1, gbc.sp());
        EXPECT(0xe649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x99d1));
        EXPECT(0xcb, gbc.readMem(0xe647));
        EXPECT(0xd6, gbc.readMem(0xe648));
        // CB D6 03CB
        gbc.setState(0xce82, 0x8dfd, 0xb240, 0x5e07, 0x13f, 0xb3fe, 0x0, 0x0);
        gbc.writeMem(0xb3fe, { 0xd1 });
        gbc.writeMem(0xce82, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8dfd, gbc.sp());
        EXPECT(0xce84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb3fe));
        EXPECT(0xcb, gbc.readMem(0xce82));
        EXPECT(0xd6, gbc.readMem(0xce83));
        // CB D6 03CC
        gbc.setState(0x3194, 0x5f28, 0x5680, 0x2d60, 0xfbd4, 0xed69, 0x0, 0x1);
        gbc.writeMem(0x3194, { 0xcb, 0xd6 });
        gbc.writeMem(0xed69, { 0x51 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5f28, gbc.sp());
        EXPECT(0x3196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xed69));
        // CB D6 03CE
        gbc.setState(0x831a, 0x39f1, 0xcda0, 0xb572, 0x8085, 0xb0f7, 0x1, 0x0);
        gbc.writeMem(0x831a, { 0xcb, 0xd6 });
        gbc.writeMem(0xb0f7, { 0x53 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x39f1, gbc.sp());
        EXPECT(0x831c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x831a));
        EXPECT(0xd6, gbc.readMem(0x831b));
        EXPECT(0x57, gbc.readMem(0xb0f7));
        // CB D6 03CF
        gbc.setState(0x3552, 0x3652, 0x1e70, 0x5099, 0x9099, 0x901d, 0x0, 0x0);
        gbc.writeMem(0x3552, { 0xcb, 0xd6 });
        gbc.writeMem(0x901d, { 0x90 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3652, gbc.sp());
        EXPECT(0x3554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x901d));
        // CB D6 03D0
        gbc.setState(0x93c8, 0xd0d9, 0xfc00, 0xfe7f, 0x741, 0xb737, 0x1, 0x0);
        gbc.writeMem(0x93c8, { 0xcb, 0xd6 });
        gbc.writeMem(0xb737, { 0x17 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd0d9, gbc.sp());
        EXPECT(0x93ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c8));
        EXPECT(0xd6, gbc.readMem(0x93c9));
        EXPECT(0x17, gbc.readMem(0xb737));
        // CB D6 03D1
        gbc.setState(0xe3, 0x58f2, 0xbc00, 0x672a, 0x1975, 0xa8f, 0x1, 0x0);
        gbc.writeMem(0xe3, { 0xcb, 0xd6 });
        gbc.writeMem(0xa8f, { 0x4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x58f2, gbc.sp());
        EXPECT(0xe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D6 03D3
        gbc.setState(0x9039, 0xb700, 0x78f0, 0xc8d4, 0x9f6d, 0xba93, 0x0, 0x1);
        gbc.writeMem(0x9039, { 0xcb, 0xd6 });
        gbc.writeMem(0xba93, { 0x87 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb700, gbc.sp());
        EXPECT(0x903b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9039));
        EXPECT(0xd6, gbc.readMem(0x903a));
        EXPECT(0x87, gbc.readMem(0xba93));
        // CB D6 03D5
        gbc.setState(0xc25, 0x19b0, 0xe570, 0x155c, 0xd178, 0xfbc0, 0x0, 0x0);
        gbc.writeMem(0xc25, { 0xcb, 0xd6 });
        gbc.writeMem(0xfbc0, { 0x78 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x19b0, gbc.sp());
        EXPECT(0xc27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xfbc0));
        // CB D6 03D6
        gbc.setState(0xdae2, 0x1d, 0xf710, 0x97e1, 0x4e28, 0x8cca, 0x1, 0x0);
        gbc.writeMem(0x8cca, { 0xdf });
        gbc.writeMem(0xdae2, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1d, gbc.sp());
        EXPECT(0xdae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x8cca));
        EXPECT(0xcb, gbc.readMem(0xdae2));
        EXPECT(0xd6, gbc.readMem(0xdae3));
        // CB D6 03DB
        gbc.setState(0xc46e, 0xca43, 0xd940, 0xe6d7, 0x2424, 0xbc4c, 0x1, 0x0);
        gbc.writeMem(0xbc4c, { 0xdd });
        gbc.writeMem(0xc46e, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xca43, gbc.sp());
        EXPECT(0xc470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xbc4c));
        EXPECT(0xcb, gbc.readMem(0xc46e));
        EXPECT(0xd6, gbc.readMem(0xc46f));
        // CB D6 03DC
        gbc.setState(0xa50f, 0x19fc, 0x3d90, 0x8309, 0xe27b, 0xb373, 0x1, 0x1);
        gbc.writeMem(0xa50f, { 0xcb, 0xd6 });
        gbc.writeMem(0xb373, { 0xf2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x19fc, gbc.sp());
        EXPECT(0xa511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50f));
        EXPECT(0xd6, gbc.readMem(0xa510));
        EXPECT(0xf6, gbc.readMem(0xb373));
        // CB D6 03DF
        gbc.setState(0x69ea, 0xb403, 0x8db0, 0xc309, 0x5ad6, 0xcc5e, 0x1, 0x1);
        gbc.writeMem(0x69ea, { 0xcb, 0xd6 });
        gbc.writeMem(0xcc5e, { 0xa3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb403, gbc.sp());
        EXPECT(0x69ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcc5e));
        // CB D6 03E1
        gbc.setState(0x8930, 0xa37a, 0xfb80, 0xadd7, 0xe878, 0x29d2, 0x0, 0x1);
        gbc.writeMem(0x29d2, { 0x66 });
        gbc.writeMem(0x8930, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa37a, gbc.sp());
        EXPECT(0x8932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8930));
        EXPECT(0xd6, gbc.readMem(0x8931));
        // CB D6 03E2
        gbc.setState(0x7a80, 0xf741, 0x9330, 0xbe57, 0xef1b, 0x4b4, 0x0, 0x1);
        gbc.writeMem(0x4b4, { 0xc6 });
        gbc.writeMem(0x7a80, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf741, gbc.sp());
        EXPECT(0x7a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D6 03E6
        gbc.setState(0x8f1d, 0x8769, 0x5800, 0xdbe6, 0xb66e, 0x8c57, 0x1, 0x0);
        gbc.writeMem(0x8c57, { 0x7 });
        gbc.writeMem(0x8f1d, { 0xcb, 0xd6 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8769, gbc.sp());
        EXPECT(0x8f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8c57));
        EXPECT(0xcb, gbc.readMem(0x8f1d));
        EXPECT(0xd6, gbc.readMem(0x8f1e));
        // CB D6 03E7
        gbc.setState(0x4674, 0xb566, 0x8220, 0x21b6, 0x9294, 0xf467, 0x1, 0x0);
        gbc.writeMem(0x4674, { 0xcb, 0xd6 });
        gbc.writeMem(0xf467, { 0x5a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb566, gbc.sp());
        EXPECT(0x4676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xf467));
    }
