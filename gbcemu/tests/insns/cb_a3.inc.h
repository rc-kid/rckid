    TEST(gbcemu, opcode_cb_a3) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB A3 0000
        gbc.setState(0x98f2, 0x4571, 0x6a20, 0x3b97, 0xf5d, 0xace1, 0x0, 0x0);
        gbc.writeMem(0x98f2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4571);
        EXPECT(gbc.pc(), 0x98f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98f2), 0xcb);
        EXPECT(gbc.readMem(0x98f3), 0xa3);
        // CB A3 0001
        gbc.setState(0xd082, 0xda52, 0x7340, 0x269, 0x4dcb, 0xd978, 0x1, 0x0);
        gbc.writeMem(0xd082, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xda52);
        EXPECT(gbc.pc(), 0xd084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd082), 0xcb);
        EXPECT(gbc.readMem(0xd083), 0xa3);
        // CB A3 0002
        gbc.setState(0xc11f, 0x5f15, 0x2f20, 0xc51a, 0x6e08, 0x3bfe, 0x1, 0x1);
        gbc.writeMem(0xc11f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5f15);
        EXPECT(gbc.pc(), 0xc121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc11f), 0xcb);
        EXPECT(gbc.readMem(0xc120), 0xa3);
        // CB A3 0003
        gbc.setState(0x9088, 0x2917, 0xbe00, 0xb868, 0xa090, 0x6681, 0x1, 0x1);
        gbc.writeMem(0x9088, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2917);
        EXPECT(gbc.pc(), 0x908a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9088), 0xcb);
        EXPECT(gbc.readMem(0x9089), 0xa3);
        // CB A3 0004
        gbc.setState(0x7c47, 0x808b, 0xb1e0, 0x6d85, 0x249c, 0xd935, 0x1, 0x0);
        gbc.writeMem(0x7c47, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x808b);
        EXPECT(gbc.pc(), 0x7c49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0005
        gbc.setState(0x1618, 0xa0b6, 0x3a30, 0x8138, 0xb380, 0x827, 0x0, 0x1);
        gbc.writeMem(0x1618, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa0b6);
        EXPECT(gbc.pc(), 0x161a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0006
        gbc.setState(0xa45a, 0xd0ba, 0x300, 0x9088, 0x35f3, 0x9324, 0x0, 0x0);
        gbc.writeMem(0xa45a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd0ba);
        EXPECT(gbc.pc(), 0xa45c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa45a), 0xcb);
        EXPECT(gbc.readMem(0xa45b), 0xa3);
        // CB A3 0007
        gbc.setState(0x5afc, 0x8022, 0x8770, 0x8e59, 0x3f2d, 0x3e9a, 0x1, 0x0);
        gbc.writeMem(0x5afc, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8022);
        EXPECT(gbc.pc(), 0x5afe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0008
        gbc.setState(0xa037, 0x61a5, 0x6150, 0x3f69, 0xa5b4, 0x182a, 0x0, 0x1);
        gbc.writeMem(0xa037, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x61a5);
        EXPECT(gbc.pc(), 0xa039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa037), 0xcb);
        EXPECT(gbc.readMem(0xa038), 0xa3);
        // CB A3 0009
        gbc.setState(0x83fd, 0xd8b6, 0xa980, 0x7282, 0x5cc5, 0xebcb, 0x0, 0x1);
        gbc.writeMem(0x83fd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd8b6);
        EXPECT(gbc.pc(), 0x83ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83fd), 0xcb);
        EXPECT(gbc.readMem(0x83fe), 0xa3);
        // CB A3 000A
        gbc.setState(0x6542, 0x1d9f, 0xa5b0, 0xf1c7, 0xa30d, 0x356e, 0x1, 0x1);
        gbc.writeMem(0x6542, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1d9f);
        EXPECT(gbc.pc(), 0x6544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 000B
        gbc.setState(0x4852, 0xdfb2, 0xb430, 0x636c, 0x5aaf, 0x1be9, 0x1, 0x0);
        gbc.writeMem(0x4852, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdfb2);
        EXPECT(gbc.pc(), 0x4854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 000C
        gbc.setState(0x247a, 0xcd6d, 0x7320, 0x9ea5, 0xa903, 0x5766, 0x0, 0x0);
        gbc.writeMem(0x247a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcd6d);
        EXPECT(gbc.pc(), 0x247c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 000D
        gbc.setState(0xa7fe, 0x7835, 0x1b70, 0x8c6f, 0x3536, 0x48e8, 0x1, 0x0);
        gbc.writeMem(0xa7fe, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7835);
        EXPECT(gbc.pc(), 0xa800);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7fe), 0xcb);
        EXPECT(gbc.readMem(0xa7ff), 0xa3);
        // CB A3 000E
        gbc.setState(0x6a9, 0xed26, 0x6fd0, 0xb286, 0xcabb, 0x739f, 0x1, 0x0);
        gbc.writeMem(0x6a9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xed26);
        EXPECT(gbc.pc(), 0x6ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 000F
        gbc.setState(0x8b86, 0x852, 0x1eb0, 0x9c54, 0xdc5b, 0xc89f, 0x1, 0x1);
        gbc.writeMem(0x8b86, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x852);
        EXPECT(gbc.pc(), 0x8b88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b86), 0xcb);
        EXPECT(gbc.readMem(0x8b87), 0xa3);
        // CB A3 0010
        gbc.setState(0x2e5c, 0x6ea2, 0x39a0, 0x169b, 0x5051, 0x5c14, 0x1, 0x0);
        gbc.writeMem(0x2e5c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6ea2);
        EXPECT(gbc.pc(), 0x2e5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0011
        gbc.setState(0x2b0f, 0xa9fe, 0x4120, 0xd7b2, 0x2e8, 0xe87d, 0x0, 0x1);
        gbc.writeMem(0x2b0f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa9fe);
        EXPECT(gbc.pc(), 0x2b11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0012
        gbc.setState(0x9877, 0x92eb, 0x1120, 0x7e7b, 0x516b, 0x7611, 0x1, 0x0);
        gbc.writeMem(0x9877, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x92eb);
        EXPECT(gbc.pc(), 0x9879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9877), 0xcb);
        EXPECT(gbc.readMem(0x9878), 0xa3);
        // CB A3 0014
        gbc.setState(0xc8e6, 0xf126, 0x35c0, 0x349c, 0xa017, 0x816d, 0x1, 0x1);
        gbc.writeMem(0xc8e6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf126);
        EXPECT(gbc.pc(), 0xc8e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8e6), 0xcb);
        EXPECT(gbc.readMem(0xc8e7), 0xa3);
        // CB A3 0015
        gbc.setState(0x50c2, 0xfbc2, 0x5520, 0x64fb, 0x7e85, 0x32df, 0x0, 0x1);
        gbc.writeMem(0x50c2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfbc2);
        EXPECT(gbc.pc(), 0x50c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0016
        gbc.setState(0x50ff, 0x99ec, 0xd2f0, 0xd0d6, 0x3355, 0x6ad1, 0x0, 0x1);
        gbc.writeMem(0x50ff, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x99ec);
        EXPECT(gbc.pc(), 0x5101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0017
        gbc.setState(0x5b0a, 0x49e3, 0x9490, 0x1309, 0x9da, 0x315b, 0x1, 0x0);
        gbc.writeMem(0x5b0a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x49e3);
        EXPECT(gbc.pc(), 0x5b0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0018
        gbc.setState(0x876e, 0xf3bc, 0xcb20, 0xed95, 0xc6f7, 0x89f3, 0x0, 0x0);
        gbc.writeMem(0x876e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf3bc);
        EXPECT(gbc.pc(), 0x8770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x876e), 0xcb);
        EXPECT(gbc.readMem(0x876f), 0xa3);
        // CB A3 0019
        gbc.setState(0xe24f, 0xe55, 0x4f50, 0x9e56, 0xfdb8, 0xbef5, 0x0, 0x0);
        gbc.writeMem(0xe24f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe55);
        EXPECT(gbc.pc(), 0xe251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe24f), 0xcb);
        EXPECT(gbc.readMem(0xe250), 0xa3);
        // CB A3 001A
        gbc.setState(0x5c3c, 0xf5ec, 0x3f30, 0x88c4, 0xea04, 0x7ff1, 0x0, 0x0);
        gbc.writeMem(0x5c3c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf5ec);
        EXPECT(gbc.pc(), 0x5c3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 001B
        gbc.setState(0x5229, 0x332, 0x6c40, 0x8053, 0xe1e8, 0xf04b, 0x0, 0x0);
        gbc.writeMem(0x5229, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x332);
        EXPECT(gbc.pc(), 0x522b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 001C
        gbc.setState(0xe604, 0xb459, 0x5870, 0x58e, 0xf652, 0x9962, 0x1, 0x0);
        gbc.writeMem(0xe604, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb459);
        EXPECT(gbc.pc(), 0xe606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe604), 0xcb);
        EXPECT(gbc.readMem(0xe605), 0xa3);
        // CB A3 001D
        gbc.setState(0xbe71, 0xd2b9, 0x7530, 0x453f, 0x5092, 0xca6f, 0x0, 0x1);
        gbc.writeMem(0xbe71, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd2b9);
        EXPECT(gbc.pc(), 0xbe73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe71), 0xcb);
        EXPECT(gbc.readMem(0xbe72), 0xa3);
        // CB A3 001E
        gbc.setState(0xec76, 0xb3ed, 0x6d30, 0x64bb, 0x35c9, 0x593b, 0x1, 0x1);
        gbc.writeMem(0xec76, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb3ed);
        EXPECT(gbc.pc(), 0xec78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec76), 0xcb);
        EXPECT(gbc.readMem(0xec77), 0xa3);
        // CB A3 001F
        gbc.setState(0xa0e7, 0x6264, 0x7e80, 0x9b2d, 0x2ccb, 0x56e9, 0x0, 0x0);
        gbc.writeMem(0xa0e7, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6264);
        EXPECT(gbc.pc(), 0xa0e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e7), 0xcb);
        EXPECT(gbc.readMem(0xa0e8), 0xa3);
        // CB A3 0020
        gbc.setState(0x7864, 0x6a6f, 0x77d0, 0xcd8b, 0x36d3, 0xfe3f, 0x0, 0x1);
        gbc.writeMem(0x7864, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6a6f);
        EXPECT(gbc.pc(), 0x7866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0021
        gbc.setState(0x56c9, 0xc07, 0x3e70, 0xd9f1, 0x6dcb, 0x3658, 0x0, 0x1);
        gbc.writeMem(0x56c9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc07);
        EXPECT(gbc.pc(), 0x56cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0022
        gbc.setState(0xddf7, 0x39e2, 0xc240, 0x9de5, 0xcba6, 0xf504, 0x0, 0x1);
        gbc.writeMem(0xddf7, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x39e2);
        EXPECT(gbc.pc(), 0xddf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf7), 0xcb);
        EXPECT(gbc.readMem(0xddf8), 0xa3);
        // CB A3 0023
        gbc.setState(0x3a95, 0x9a65, 0x5a60, 0x9b1, 0x5150, 0x8bcf, 0x0, 0x0);
        gbc.writeMem(0x3a95, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x9a65);
        EXPECT(gbc.pc(), 0x3a97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0024
        gbc.setState(0xae82, 0x33ac, 0x2fe0, 0xa9c6, 0x90cf, 0x512c, 0x1, 0x1);
        gbc.writeMem(0xae82, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x33ac);
        EXPECT(gbc.pc(), 0xae84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae82), 0xcb);
        EXPECT(gbc.readMem(0xae83), 0xa3);
        // CB A3 0025
        gbc.setState(0x21c1, 0x46ab, 0x1470, 0xfab7, 0x5fad, 0xaafd, 0x1, 0x1);
        gbc.writeMem(0x21c1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x46ab);
        EXPECT(gbc.pc(), 0x21c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0026
        gbc.setState(0x7d4d, 0xc06b, 0x1f40, 0x2cf7, 0x726, 0x5248, 0x0, 0x1);
        gbc.writeMem(0x7d4d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc06b);
        EXPECT(gbc.pc(), 0x7d4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0027
        gbc.setState(0x466b, 0x2b1f, 0xfdd0, 0xa348, 0x8f50, 0xa930, 0x1, 0x0);
        gbc.writeMem(0x466b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2b1f);
        EXPECT(gbc.pc(), 0x466d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0028
        gbc.setState(0x710, 0x3d5b, 0x39a0, 0x2ce8, 0x6450, 0x402d, 0x1, 0x1);
        gbc.writeMem(0x710, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3d5b);
        EXPECT(gbc.pc(), 0x712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0029
        gbc.setState(0xa738, 0xfd04, 0xd990, 0xc835, 0xeae4, 0xa85d, 0x1, 0x1);
        gbc.writeMem(0xa738, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfd04);
        EXPECT(gbc.pc(), 0xa73a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa738), 0xcb);
        EXPECT(gbc.readMem(0xa739), 0xa3);
        // CB A3 002A
        gbc.setState(0x5f4b, 0x8432, 0xd1d0, 0x3110, 0xad17, 0x2d7e, 0x0, 0x0);
        gbc.writeMem(0x5f4b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8432);
        EXPECT(gbc.pc(), 0x5f4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 002C
        gbc.setState(0xc80d, 0x2a8, 0x870, 0xcb85, 0xd017, 0x5015, 0x0, 0x0);
        gbc.writeMem(0xc80d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2a8);
        EXPECT(gbc.pc(), 0xc80f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc80d), 0xcb);
        EXPECT(gbc.readMem(0xc80e), 0xa3);
        // CB A3 002D
        gbc.setState(0x2c74, 0xdc29, 0x3820, 0xb0f1, 0x1ac3, 0x8f13, 0x1, 0x1);
        gbc.writeMem(0x2c74, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdc29);
        EXPECT(gbc.pc(), 0x2c76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 002E
        gbc.setState(0xb771, 0x559c, 0x2c50, 0x7082, 0xc1ae, 0xa9a3, 0x0, 0x0);
        gbc.writeMem(0xb771, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x559c);
        EXPECT(gbc.pc(), 0xb773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb771), 0xcb);
        EXPECT(gbc.readMem(0xb772), 0xa3);
        // CB A3 002F
        gbc.setState(0x28ae, 0x7025, 0x7c90, 0xf4ea, 0x4413, 0xfa2c, 0x1, 0x1);
        gbc.writeMem(0x28ae, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7025);
        EXPECT(gbc.pc(), 0x28b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0030
        gbc.setState(0x10f, 0x4955, 0x65d0, 0xdf7e, 0x712f, 0x2302, 0x1, 0x0);
        gbc.writeMem(0x10f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4955);
        EXPECT(gbc.pc(), 0x111);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0031
        gbc.setState(0xa47c, 0x7fe6, 0xb980, 0xdd3e, 0x901, 0xca98, 0x1, 0x0);
        gbc.writeMem(0xa47c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7fe6);
        EXPECT(gbc.pc(), 0xa47e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa47c), 0xcb);
        EXPECT(gbc.readMem(0xa47d), 0xa3);
        // CB A3 0032
        gbc.setState(0x7d5e, 0x4830, 0xbf60, 0xb44c, 0x5696, 0x839c, 0x0, 0x1);
        gbc.writeMem(0x7d5e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4830);
        EXPECT(gbc.pc(), 0x7d60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0033
        gbc.setState(0x1b1b, 0xedff, 0xfce0, 0x3d2c, 0x2d0a, 0x5f62, 0x0, 0x0);
        gbc.writeMem(0x1b1b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xedff);
        EXPECT(gbc.pc(), 0x1b1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0034
        gbc.setState(0xc41a, 0xe85c, 0x2ec0, 0x834d, 0x38f2, 0x8dbc, 0x0, 0x0);
        gbc.writeMem(0xc41a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe85c);
        EXPECT(gbc.pc(), 0xc41c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc41a), 0xcb);
        EXPECT(gbc.readMem(0xc41b), 0xa3);
        // CB A3 0036
        gbc.setState(0x8f25, 0x1f12, 0xc0f0, 0x54b6, 0x964d, 0x203f, 0x1, 0x0);
        gbc.writeMem(0x8f25, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1f12);
        EXPECT(gbc.pc(), 0x8f27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f25), 0xcb);
        EXPECT(gbc.readMem(0x8f26), 0xa3);
        // CB A3 0037
        gbc.setState(0x17b3, 0xe7cd, 0x3fd0, 0x8a5c, 0x97e7, 0x86df, 0x0, 0x0);
        gbc.writeMem(0x17b3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe7cd);
        EXPECT(gbc.pc(), 0x17b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0038
        gbc.setState(0x98ce, 0xe682, 0xf970, 0x3a76, 0x3090, 0xc3f2, 0x0, 0x0);
        gbc.writeMem(0x98ce, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe682);
        EXPECT(gbc.pc(), 0x98d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ce), 0xcb);
        EXPECT(gbc.readMem(0x98cf), 0xa3);
        // CB A3 0039
        gbc.setState(0xbb02, 0xf76b, 0x2140, 0x6957, 0x1c6a, 0xce62, 0x1, 0x0);
        gbc.writeMem(0xbb02, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf76b);
        EXPECT(gbc.pc(), 0xbb04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb02), 0xcb);
        EXPECT(gbc.readMem(0xbb03), 0xa3);
        // CB A3 003A
        gbc.setState(0x211a, 0x4214, 0x160, 0x2e3a, 0x72eb, 0x503a, 0x0, 0x1);
        gbc.writeMem(0x211a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4214);
        EXPECT(gbc.pc(), 0x211c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 003B
        gbc.setState(0xb6b0, 0x3731, 0x3370, 0x856d, 0x673f, 0x588d, 0x0, 0x0);
        gbc.writeMem(0xb6b0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3731);
        EXPECT(gbc.pc(), 0xb6b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6b0), 0xcb);
        EXPECT(gbc.readMem(0xb6b1), 0xa3);
        // CB A3 003C
        gbc.setState(0xaee7, 0x6195, 0x7ac0, 0x459e, 0xf140, 0x890f, 0x0, 0x0);
        gbc.writeMem(0xaee7, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6195);
        EXPECT(gbc.pc(), 0xaee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee7), 0xcb);
        EXPECT(gbc.readMem(0xaee8), 0xa3);
        // CB A3 003D
        gbc.setState(0xad88, 0x5f9c, 0x6520, 0x193d, 0xf01, 0xbfcb, 0x0, 0x1);
        gbc.writeMem(0xad88, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5f9c);
        EXPECT(gbc.pc(), 0xad8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad88), 0xcb);
        EXPECT(gbc.readMem(0xad89), 0xa3);
        // CB A3 003E
        gbc.setState(0xb2ea, 0x10df, 0xb680, 0xb1ab, 0xb8b2, 0xf3a1, 0x0, 0x0);
        gbc.writeMem(0xb2ea, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x10df);
        EXPECT(gbc.pc(), 0xb2ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ea), 0xcb);
        EXPECT(gbc.readMem(0xb2eb), 0xa3);
        // CB A3 003F
        gbc.setState(0x6581, 0x69aa, 0x1280, 0xbd58, 0x334f, 0x87a9, 0x0, 0x1);
        gbc.writeMem(0x6581, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x69aa);
        EXPECT(gbc.pc(), 0x6583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0040
        gbc.setState(0xec37, 0xf493, 0x43f0, 0x3581, 0xbb33, 0xa2bf, 0x1, 0x0);
        gbc.writeMem(0xec37, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf493);
        EXPECT(gbc.pc(), 0xec39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec37), 0xcb);
        EXPECT(gbc.readMem(0xec38), 0xa3);
        // CB A3 0041
        gbc.setState(0xbffd, 0x3fc, 0x95d0, 0xf563, 0x741d, 0xe6c1, 0x0, 0x0);
        gbc.writeMem(0xbffd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3fc);
        EXPECT(gbc.pc(), 0xbfff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbffd), 0xcb);
        EXPECT(gbc.readMem(0xbffe), 0xa3);
        // CB A3 0042
        gbc.setState(0x1329, 0xa6b7, 0x19e0, 0x10fb, 0x9406, 0x3ad2, 0x1, 0x1);
        gbc.writeMem(0x1329, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa6b7);
        EXPECT(gbc.pc(), 0x132b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0043
        gbc.setState(0xa2c3, 0xe82f, 0xcba0, 0xaa09, 0x4d47, 0x7faa, 0x0, 0x1);
        gbc.writeMem(0xa2c3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe82f);
        EXPECT(gbc.pc(), 0xa2c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c3), 0xcb);
        EXPECT(gbc.readMem(0xa2c4), 0xa3);
        // CB A3 0044
        gbc.setState(0x78ac, 0x9f9f, 0x6130, 0x954b, 0xf77b, 0xad86, 0x0, 0x0);
        gbc.writeMem(0x78ac, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9f9f);
        EXPECT(gbc.pc(), 0x78ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0045
        gbc.setState(0x4d7b, 0x5ef6, 0xf340, 0x409e, 0xafc5, 0xc27, 0x0, 0x1);
        gbc.writeMem(0x4d7b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5ef6);
        EXPECT(gbc.pc(), 0x4d7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0046
        gbc.setState(0xcc04, 0x47c7, 0xbe40, 0x38a6, 0xfad4, 0xeb49, 0x0, 0x1);
        gbc.writeMem(0xcc04, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x47c7);
        EXPECT(gbc.pc(), 0xcc06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc04), 0xcb);
        EXPECT(gbc.readMem(0xcc05), 0xa3);
        // CB A3 0047
        gbc.setState(0xc371, 0xccd7, 0xbd50, 0x1047, 0x6458, 0xc82e, 0x1, 0x1);
        gbc.writeMem(0xc371, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xccd7);
        EXPECT(gbc.pc(), 0xc373);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc371), 0xcb);
        EXPECT(gbc.readMem(0xc372), 0xa3);
        // CB A3 0048
        gbc.setState(0x9653, 0xf03a, 0x5ae0, 0x7b50, 0xb176, 0x95f3, 0x1, 0x1);
        gbc.writeMem(0x9653, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xf03a);
        EXPECT(gbc.pc(), 0x9655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9653), 0xcb);
        EXPECT(gbc.readMem(0x9654), 0xa3);
        // CB A3 0049
        gbc.setState(0x866d, 0x1ddb, 0x17e0, 0xd6f1, 0xef16, 0x4e4d, 0x0, 0x1);
        gbc.writeMem(0x866d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1ddb);
        EXPECT(gbc.pc(), 0x866f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x866d), 0xcb);
        EXPECT(gbc.readMem(0x866e), 0xa3);
        // CB A3 004A
        gbc.setState(0x879b, 0x70a0, 0x5bb0, 0x32a1, 0x4149, 0xa2e4, 0x0, 0x1);
        gbc.writeMem(0x879b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x70a0);
        EXPECT(gbc.pc(), 0x879d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x879b), 0xcb);
        EXPECT(gbc.readMem(0x879c), 0xa3);
        // CB A3 004B
        gbc.setState(0xa725, 0x3a3b, 0xa0b0, 0x3830, 0x2213, 0xc01, 0x1, 0x0);
        gbc.writeMem(0xa725, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3a3b);
        EXPECT(gbc.pc(), 0xa727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa725), 0xcb);
        EXPECT(gbc.readMem(0xa726), 0xa3);
        // CB A3 004C
        gbc.setState(0xef43, 0x2ff2, 0xda50, 0xca5f, 0xef54, 0xdf4b, 0x0, 0x1);
        gbc.writeMem(0xef43, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2ff2);
        EXPECT(gbc.pc(), 0xef45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef43), 0xcb);
        EXPECT(gbc.readMem(0xef44), 0xa3);
        // CB A3 004D
        gbc.setState(0xa76c, 0x87c0, 0x8940, 0x12cb, 0x4604, 0xeae3, 0x1, 0x1);
        gbc.writeMem(0xa76c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x87c0);
        EXPECT(gbc.pc(), 0xa76e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa76c), 0xcb);
        EXPECT(gbc.readMem(0xa76d), 0xa3);
        // CB A3 004E
        gbc.setState(0x4637, 0xcc46, 0xfa80, 0x563c, 0x54aa, 0xeeb6, 0x1, 0x1);
        gbc.writeMem(0x4637, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcc46);
        EXPECT(gbc.pc(), 0x4639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0050
        gbc.setState(0xb5a3, 0xca8c, 0x38f0, 0xbe67, 0xaa4e, 0xf238, 0x0, 0x0);
        gbc.writeMem(0xb5a3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xca8c);
        EXPECT(gbc.pc(), 0xb5a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5a3), 0xcb);
        EXPECT(gbc.readMem(0xb5a4), 0xa3);
        // CB A3 0051
        gbc.setState(0xc2b8, 0xff01, 0xd6f0, 0x724, 0x54db, 0x8f1b, 0x0, 0x0);
        gbc.writeMem(0xc2b8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xff01);
        EXPECT(gbc.pc(), 0xc2ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2b8), 0xcb);
        EXPECT(gbc.readMem(0xc2b9), 0xa3);
        // CB A3 0052
        gbc.setState(0xb6a3, 0x78cf, 0x4a40, 0x308c, 0x6801, 0x9153, 0x0, 0x1);
        gbc.writeMem(0xb6a3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x78cf);
        EXPECT(gbc.pc(), 0xb6a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6a3), 0xcb);
        EXPECT(gbc.readMem(0xb6a4), 0xa3);
        // CB A3 0053
        gbc.setState(0x8a92, 0xd515, 0xae70, 0xe06c, 0xbeb4, 0x7222, 0x0, 0x0);
        gbc.writeMem(0x8a92, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd515);
        EXPECT(gbc.pc(), 0x8a94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a92), 0xcb);
        EXPECT(gbc.readMem(0x8a93), 0xa3);
        // CB A3 0054
        gbc.setState(0x7816, 0xda74, 0x8f40, 0x9b92, 0xfe05, 0x1ffb, 0x1, 0x1);
        gbc.writeMem(0x7816, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xda74);
        EXPECT(gbc.pc(), 0x7818);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0055
        gbc.setState(0x1ea2, 0x8521, 0xbae0, 0xb048, 0x4af, 0x5271, 0x0, 0x1);
        gbc.writeMem(0x1ea2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8521);
        EXPECT(gbc.pc(), 0x1ea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0056
        gbc.setState(0xb029, 0xdd65, 0x8ea0, 0x6454, 0x9310, 0x604b, 0x0, 0x1);
        gbc.writeMem(0xb029, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xdd65);
        EXPECT(gbc.pc(), 0xb02b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb029), 0xcb);
        EXPECT(gbc.readMem(0xb02a), 0xa3);
        // CB A3 0057
        gbc.setState(0x9709, 0x46b9, 0xa000, 0x799, 0xf96b, 0x1a1f, 0x0, 0x0);
        gbc.writeMem(0x9709, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x46b9);
        EXPECT(gbc.pc(), 0x970b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9709), 0xcb);
        EXPECT(gbc.readMem(0x970a), 0xa3);
        // CB A3 0058
        gbc.setState(0xa7de, 0x55dc, 0x2340, 0x4b82, 0xc5c6, 0xcca5, 0x1, 0x0);
        gbc.writeMem(0xa7de, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x55dc);
        EXPECT(gbc.pc(), 0xa7e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7de), 0xcb);
        EXPECT(gbc.readMem(0xa7df), 0xa3);
        // CB A3 0059
        gbc.setState(0x5856, 0x1aa7, 0x7eb0, 0x36ee, 0x5ed2, 0x24e5, 0x1, 0x0);
        gbc.writeMem(0x5856, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1aa7);
        EXPECT(gbc.pc(), 0x5858);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 005A
        gbc.setState(0x3c76, 0xd364, 0xf3c0, 0xeb46, 0xe148, 0x1db3, 0x1, 0x0);
        gbc.writeMem(0x3c76, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd364);
        EXPECT(gbc.pc(), 0x3c78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 005C
        gbc.setState(0x9f18, 0x20d1, 0xa90, 0x402f, 0x3928, 0x1d1f, 0x0, 0x0);
        gbc.writeMem(0x9f18, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x20d1);
        EXPECT(gbc.pc(), 0x9f1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f18), 0xcb);
        EXPECT(gbc.readMem(0x9f19), 0xa3);
        // CB A3 005D
        gbc.setState(0x8ab9, 0x5918, 0xd7e0, 0x9af7, 0x6e8f, 0x79d8, 0x1, 0x0);
        gbc.writeMem(0x8ab9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5918);
        EXPECT(gbc.pc(), 0x8abb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab9), 0xcb);
        EXPECT(gbc.readMem(0x8aba), 0xa3);
        // CB A3 005E
        gbc.setState(0xa566, 0x7bc7, 0xeb70, 0x9eb0, 0xad9f, 0x67bf, 0x0, 0x0);
        gbc.writeMem(0xa566, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7bc7);
        EXPECT(gbc.pc(), 0xa568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa566), 0xcb);
        EXPECT(gbc.readMem(0xa567), 0xa3);
        // CB A3 005F
        gbc.setState(0x6516, 0xdd82, 0xe810, 0x802f, 0xa235, 0x9e7f, 0x0, 0x1);
        gbc.writeMem(0x6516, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xdd82);
        EXPECT(gbc.pc(), 0x6518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0060
        gbc.setState(0x8f5e, 0xc015, 0x5a70, 0xbd56, 0xc714, 0xa7d7, 0x1, 0x0);
        gbc.writeMem(0x8f5e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc015);
        EXPECT(gbc.pc(), 0x8f60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f5e), 0xcb);
        EXPECT(gbc.readMem(0x8f5f), 0xa3);
        // CB A3 0062
        gbc.setState(0xa040, 0x3446, 0x6cc0, 0x7095, 0xd98e, 0x7b13, 0x0, 0x1);
        gbc.writeMem(0xa040, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3446);
        EXPECT(gbc.pc(), 0xa042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa040), 0xcb);
        EXPECT(gbc.readMem(0xa041), 0xa3);
        // CB A3 0063
        gbc.setState(0xaeaf, 0x3494, 0x43d0, 0xf9ee, 0x3b0f, 0x5059, 0x0, 0x0);
        gbc.writeMem(0xaeaf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3494);
        EXPECT(gbc.pc(), 0xaeb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeaf), 0xcb);
        EXPECT(gbc.readMem(0xaeb0), 0xa3);
        // CB A3 0064
        gbc.setState(0x9fe8, 0x4e8c, 0x1f30, 0x2258, 0xd169, 0x795f, 0x0, 0x1);
        gbc.writeMem(0x9fe8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4e8c);
        EXPECT(gbc.pc(), 0x9fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe8), 0xcb);
        EXPECT(gbc.readMem(0x9fe9), 0xa3);
        // CB A3 0065
        gbc.setState(0x753a, 0x3751, 0x3940, 0xd110, 0x4418, 0xb6f5, 0x0, 0x0);
        gbc.writeMem(0x753a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3751);
        EXPECT(gbc.pc(), 0x753c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0067
        gbc.setState(0x1077, 0xc5a2, 0x6b0, 0x5157, 0x6e9b, 0x9819, 0x1, 0x1);
        gbc.writeMem(0x1077, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc5a2);
        EXPECT(gbc.pc(), 0x1079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0068
        gbc.setState(0x53d0, 0x5a5, 0x2ca0, 0x2141, 0xef87, 0xc3bc, 0x1, 0x1);
        gbc.writeMem(0x53d0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5a5);
        EXPECT(gbc.pc(), 0x53d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0069
        gbc.setState(0xde75, 0x321b, 0x4480, 0x7571, 0x7ff, 0xc8f2, 0x0, 0x1);
        gbc.writeMem(0xde75, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x321b);
        EXPECT(gbc.pc(), 0xde77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde75), 0xcb);
        EXPECT(gbc.readMem(0xde76), 0xa3);
        // CB A3 006A
        gbc.setState(0x2a07, 0x4c11, 0xa220, 0xed93, 0x2b74, 0xaa79, 0x1, 0x0);
        gbc.writeMem(0x2a07, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4c11);
        EXPECT(gbc.pc(), 0x2a09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 006B
        gbc.setState(0xb64c, 0xe5e5, 0x8380, 0x12ea, 0x808a, 0x5f91, 0x1, 0x0);
        gbc.writeMem(0xb64c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe5e5);
        EXPECT(gbc.pc(), 0xb64e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb64c), 0xcb);
        EXPECT(gbc.readMem(0xb64d), 0xa3);
        // CB A3 006C
        gbc.setState(0x55fb, 0x8958, 0x3ca0, 0xe074, 0xd37a, 0x1cfd, 0x0, 0x1);
        gbc.writeMem(0x55fb, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8958);
        EXPECT(gbc.pc(), 0x55fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 006D
        gbc.setState(0xb4ef, 0xfb59, 0x7b30, 0x68f2, 0xb1a0, 0x39e, 0x1, 0x1);
        gbc.writeMem(0xb4ef, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfb59);
        EXPECT(gbc.pc(), 0xb4f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ef), 0xcb);
        EXPECT(gbc.readMem(0xb4f0), 0xa3);
        // CB A3 006E
        gbc.setState(0xe740, 0x530e, 0x4a10, 0x2478, 0x9dea, 0xd413, 0x0, 0x0);
        gbc.writeMem(0xe740, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x530e);
        EXPECT(gbc.pc(), 0xe742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe740), 0xcb);
        EXPECT(gbc.readMem(0xe741), 0xa3);
        // CB A3 006F
        gbc.setState(0xeaaa, 0x230, 0x5d50, 0xc795, 0x86c5, 0x39ef, 0x0, 0x1);
        gbc.writeMem(0xeaaa, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x230);
        EXPECT(gbc.pc(), 0xeaac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaaa), 0xcb);
        EXPECT(gbc.readMem(0xeaab), 0xa3);
        // CB A3 0070
        gbc.setState(0x1f7c, 0x966e, 0x8560, 0x36f2, 0x1114, 0x9708, 0x0, 0x0);
        gbc.writeMem(0x1f7c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x966e);
        EXPECT(gbc.pc(), 0x1f7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0071
        gbc.setState(0xcde5, 0x8e05, 0xcb10, 0xb6af, 0x15e7, 0xcc4c, 0x0, 0x0);
        gbc.writeMem(0xcde5, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8e05);
        EXPECT(gbc.pc(), 0xcde7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde5), 0xcb);
        EXPECT(gbc.readMem(0xcde6), 0xa3);
        // CB A3 0072
        gbc.setState(0x5836, 0x819d, 0x7780, 0x1f93, 0x69f1, 0xe2ba, 0x1, 0x0);
        gbc.writeMem(0x5836, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x819d);
        EXPECT(gbc.pc(), 0x5838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0073
        gbc.setState(0xb022, 0xa856, 0x7090, 0x2257, 0x67d2, 0x9d1b, 0x0, 0x1);
        gbc.writeMem(0xb022, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa856);
        EXPECT(gbc.pc(), 0xb024);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb022), 0xcb);
        EXPECT(gbc.readMem(0xb023), 0xa3);
        // CB A3 0074
        gbc.setState(0xb96d, 0x3a12, 0x31e0, 0xfcd0, 0x3ac0, 0x378f, 0x0, 0x1);
        gbc.writeMem(0xb96d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3a12);
        EXPECT(gbc.pc(), 0xb96f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb96d), 0xcb);
        EXPECT(gbc.readMem(0xb96e), 0xa3);
        // CB A3 0075
        gbc.setState(0x3ae9, 0x2628, 0x4800, 0x48ac, 0x24cb, 0x5128, 0x1, 0x0);
        gbc.writeMem(0x3ae9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2628);
        EXPECT(gbc.pc(), 0x3aeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0076
        gbc.setState(0x5b5f, 0x98b2, 0xf940, 0xfb4d, 0x8dc9, 0xf91b, 0x0, 0x0);
        gbc.writeMem(0x5b5f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x98b2);
        EXPECT(gbc.pc(), 0x5b61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0077
        gbc.setState(0xdf53, 0x1faa, 0xef60, 0xf04c, 0xa78e, 0xf090, 0x1, 0x1);
        gbc.writeMem(0xdf53, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1faa);
        EXPECT(gbc.pc(), 0xdf55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf53), 0xcb);
        EXPECT(gbc.readMem(0xdf54), 0xa3);
        // CB A3 0078
        gbc.setState(0xe4dc, 0xaf3e, 0x9f0, 0xc2f7, 0xed54, 0x5de4, 0x1, 0x0);
        gbc.writeMem(0xe4dc, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xaf3e);
        EXPECT(gbc.pc(), 0xe4de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4dc), 0xcb);
        EXPECT(gbc.readMem(0xe4dd), 0xa3);
        // CB A3 0079
        gbc.setState(0x92c1, 0xa58c, 0xbf10, 0x99cd, 0x75f1, 0xf45e, 0x0, 0x0);
        gbc.writeMem(0x92c1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa58c);
        EXPECT(gbc.pc(), 0x92c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c1), 0xcb);
        EXPECT(gbc.readMem(0x92c2), 0xa3);
        // CB A3 007A
        gbc.setState(0xee05, 0xb9d3, 0x7cc0, 0x9ff7, 0xca7b, 0xea0d, 0x0, 0x0);
        gbc.writeMem(0xee05, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb9d3);
        EXPECT(gbc.pc(), 0xee07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee05), 0xcb);
        EXPECT(gbc.readMem(0xee06), 0xa3);
        // CB A3 007C
        gbc.setState(0xb04f, 0x1dc8, 0xec0, 0xa46c, 0x7d6a, 0xd03f, 0x0, 0x0);
        gbc.writeMem(0xb04f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1dc8);
        EXPECT(gbc.pc(), 0xb051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb04f), 0xcb);
        EXPECT(gbc.readMem(0xb050), 0xa3);
        // CB A3 007D
        gbc.setState(0x3811, 0x9090, 0xa3c0, 0xdb44, 0x6c6e, 0x3ca3, 0x1, 0x0);
        gbc.writeMem(0x3811, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9090);
        EXPECT(gbc.pc(), 0x3813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 007E
        gbc.setState(0xce29, 0xac66, 0x71b0, 0xc0bb, 0xdf3f, 0x5812, 0x0, 0x1);
        gbc.writeMem(0xce29, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xac66);
        EXPECT(gbc.pc(), 0xce2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce29), 0xcb);
        EXPECT(gbc.readMem(0xce2a), 0xa3);
        // CB A3 007F
        gbc.setState(0x4bae, 0x8591, 0xf2d0, 0xbdd9, 0xe6f7, 0xad96, 0x1, 0x1);
        gbc.writeMem(0x4bae, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8591);
        EXPECT(gbc.pc(), 0x4bb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0080
        gbc.setState(0xb4c7, 0x1c0, 0xece0, 0x18b, 0xbd3f, 0x7fb5, 0x1, 0x1);
        gbc.writeMem(0xb4c7, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1c0);
        EXPECT(gbc.pc(), 0xb4c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4c7), 0xcb);
        EXPECT(gbc.readMem(0xb4c8), 0xa3);
        // CB A3 0082
        gbc.setState(0xb7bd, 0xcc69, 0xde90, 0x5820, 0x1a18, 0xd8ee, 0x1, 0x0);
        gbc.writeMem(0xb7bd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcc69);
        EXPECT(gbc.pc(), 0xb7bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7bd), 0xcb);
        EXPECT(gbc.readMem(0xb7be), 0xa3);
        // CB A3 0083
        gbc.setState(0x4253, 0x7d32, 0x30d0, 0xb42e, 0xd943, 0xef92, 0x1, 0x1);
        gbc.writeMem(0x4253, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7d32);
        EXPECT(gbc.pc(), 0x4255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0084
        gbc.setState(0xe427, 0x24be, 0x8a50, 0xe1d2, 0xca75, 0xec59, 0x1, 0x0);
        gbc.writeMem(0xe427, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x24be);
        EXPECT(gbc.pc(), 0xe429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe427), 0xcb);
        EXPECT(gbc.readMem(0xe428), 0xa3);
        // CB A3 0085
        gbc.setState(0x9194, 0x4cec, 0x6d60, 0xd892, 0xd26e, 0xb8b0, 0x1, 0x0);
        gbc.writeMem(0x9194, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4cec);
        EXPECT(gbc.pc(), 0x9196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9194), 0xcb);
        EXPECT(gbc.readMem(0x9195), 0xa3);
        // CB A3 0086
        gbc.setState(0xd334, 0x63f9, 0x37a0, 0x9806, 0x56b3, 0x49d9, 0x1, 0x0);
        gbc.writeMem(0xd334, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x63f9);
        EXPECT(gbc.pc(), 0xd336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd334), 0xcb);
        EXPECT(gbc.readMem(0xd335), 0xa3);
        // CB A3 0087
        gbc.setState(0x34dc, 0x5fe1, 0x4640, 0x459e, 0xe3f9, 0x990c, 0x0, 0x1);
        gbc.writeMem(0x34dc, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5fe1);
        EXPECT(gbc.pc(), 0x34de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0088
        gbc.setState(0x6e95, 0x802a, 0x80d0, 0x7017, 0xba71, 0xc370, 0x1, 0x0);
        gbc.writeMem(0x6e95, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x802a);
        EXPECT(gbc.pc(), 0x6e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0089
        gbc.setState(0x2b15, 0x2dcc, 0x5840, 0x7fd, 0x6533, 0x5070, 0x0, 0x1);
        gbc.writeMem(0x2b15, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2dcc);
        EXPECT(gbc.pc(), 0x2b17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 008A
        gbc.setState(0xd73e, 0xa7ac, 0x35f0, 0xdba, 0x321b, 0xe1cb, 0x1, 0x0);
        gbc.writeMem(0xd73e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa7ac);
        EXPECT(gbc.pc(), 0xd740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd73e), 0xcb);
        EXPECT(gbc.readMem(0xd73f), 0xa3);
        // CB A3 008B
        gbc.setState(0x71cc, 0xfda3, 0x3600, 0x224c, 0x5a7d, 0xc4e9, 0x1, 0x0);
        gbc.writeMem(0x71cc, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xfda3);
        EXPECT(gbc.pc(), 0x71ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 008D
        gbc.setState(0xfa9, 0xb33b, 0xd6e0, 0x806b, 0x78d2, 0xbc18, 0x0, 0x0);
        gbc.writeMem(0xfa9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb33b);
        EXPECT(gbc.pc(), 0xfab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 008E
        gbc.setState(0x2307, 0x3934, 0x5ed0, 0xef5d, 0x9edb, 0x8c2d, 0x1, 0x1);
        gbc.writeMem(0x2307, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3934);
        EXPECT(gbc.pc(), 0x2309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 008F
        gbc.setState(0xb98b, 0x640a, 0x11d0, 0x2e7e, 0xb231, 0x20e5, 0x1, 0x0);
        gbc.writeMem(0xb98b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x640a);
        EXPECT(gbc.pc(), 0xb98d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb98b), 0xcb);
        EXPECT(gbc.readMem(0xb98c), 0xa3);
        // CB A3 0090
        gbc.setState(0xa07f, 0x36a1, 0x6f10, 0x6085, 0x6ca1, 0xa21c, 0x1, 0x1);
        gbc.writeMem(0xa07f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x36a1);
        EXPECT(gbc.pc(), 0xa081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa07f), 0xcb);
        EXPECT(gbc.readMem(0xa080), 0xa3);
        // CB A3 0091
        gbc.setState(0xd621, 0x59b2, 0x5640, 0x16e9, 0x22f, 0x882, 0x1, 0x1);
        gbc.writeMem(0xd621, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x59b2);
        EXPECT(gbc.pc(), 0xd623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd621), 0xcb);
        EXPECT(gbc.readMem(0xd622), 0xa3);
        // CB A3 0092
        gbc.setState(0x8417, 0x5aab, 0x7160, 0x154f, 0x49f0, 0xa9ec, 0x0, 0x1);
        gbc.writeMem(0x8417, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5aab);
        EXPECT(gbc.pc(), 0x8419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8417), 0xcb);
        EXPECT(gbc.readMem(0x8418), 0xa3);
        // CB A3 0093
        gbc.setState(0x3696, 0x67c5, 0xa900, 0x216b, 0x5e5c, 0x44d3, 0x0, 0x0);
        gbc.writeMem(0x3696, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x67c5);
        EXPECT(gbc.pc(), 0x3698);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0094
        gbc.setState(0xd530, 0xd14a, 0x9ad0, 0xf13, 0xf7d2, 0x4389, 0x1, 0x1);
        gbc.writeMem(0xd530, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd14a);
        EXPECT(gbc.pc(), 0xd532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd530), 0xcb);
        EXPECT(gbc.readMem(0xd531), 0xa3);
        // CB A3 0095
        gbc.setState(0xc3e1, 0x2209, 0xfda0, 0xd259, 0x21a2, 0xaab0, 0x0, 0x1);
        gbc.writeMem(0xc3e1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2209);
        EXPECT(gbc.pc(), 0xc3e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3e1), 0xcb);
        EXPECT(gbc.readMem(0xc3e2), 0xa3);
        // CB A3 0097
        gbc.setState(0xe051, 0x90df, 0xd310, 0xfc2, 0x6482, 0x427d, 0x1, 0x1);
        gbc.writeMem(0xe051, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x90df);
        EXPECT(gbc.pc(), 0xe053);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe051), 0xcb);
        EXPECT(gbc.readMem(0xe052), 0xa3);
        // CB A3 0098
        gbc.setState(0x5be, 0x606c, 0x5110, 0x761e, 0x36b8, 0x1f38, 0x1, 0x0);
        gbc.writeMem(0x5be, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x606c);
        EXPECT(gbc.pc(), 0x5c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0099
        gbc.setState(0x5b0d, 0x773c, 0xd4c0, 0xb3e7, 0xd081, 0xbcec, 0x0, 0x1);
        gbc.writeMem(0x5b0d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x773c);
        EXPECT(gbc.pc(), 0x5b0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 009A
        gbc.setState(0xe979, 0xfc7b, 0xdbc0, 0x824e, 0xdb18, 0x1c7f, 0x1, 0x1);
        gbc.writeMem(0xe979, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xfc7b);
        EXPECT(gbc.pc(), 0xe97b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe979), 0xcb);
        EXPECT(gbc.readMem(0xe97a), 0xa3);
        // CB A3 009B
        gbc.setState(0x5e1, 0x87a9, 0x2b90, 0x7ba9, 0xe6c5, 0x1d9d, 0x1, 0x0);
        gbc.writeMem(0x5e1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x87a9);
        EXPECT(gbc.pc(), 0x5e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 009C
        gbc.setState(0xc444, 0xc39a, 0xeda0, 0xb1ae, 0xd0da, 0x6c8, 0x1, 0x1);
        gbc.writeMem(0xc444, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc39a);
        EXPECT(gbc.pc(), 0xc446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc444), 0xcb);
        EXPECT(gbc.readMem(0xc445), 0xa3);
        // CB A3 009D
        gbc.setState(0x3e60, 0xbb11, 0x90e0, 0xb304, 0x994b, 0x26b8, 0x0, 0x0);
        gbc.writeMem(0x3e60, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbb11);
        EXPECT(gbc.pc(), 0x3e62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 009E
        gbc.setState(0x3e4f, 0x9ba1, 0x1420, 0xa350, 0xb55a, 0xe51f, 0x1, 0x1);
        gbc.writeMem(0x3e4f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9ba1);
        EXPECT(gbc.pc(), 0x3e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 009F
        gbc.setState(0x67c2, 0xbd10, 0x9b20, 0xccdc, 0x9d5d, 0x574a, 0x0, 0x1);
        gbc.writeMem(0x67c2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbd10);
        EXPECT(gbc.pc(), 0x67c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 00A0
        gbc.setState(0xbba1, 0x8d7c, 0x7740, 0x1254, 0x1647, 0x3370, 0x0, 0x1);
        gbc.writeMem(0xbba1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8d7c);
        EXPECT(gbc.pc(), 0xbba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbba1), 0xcb);
        EXPECT(gbc.readMem(0xbba2), 0xa3);
        // CB A3 00A1
        gbc.setState(0xa386, 0x45a1, 0x84d0, 0x1163, 0x3da3, 0xd675, 0x0, 0x1);
        gbc.writeMem(0xa386, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x45a1);
        EXPECT(gbc.pc(), 0xa388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa386), 0xcb);
        EXPECT(gbc.readMem(0xa387), 0xa3);
        // CB A3 00A2
        gbc.setState(0x71c8, 0x8d38, 0xf570, 0x14eb, 0x77e0, 0xa5fb, 0x1, 0x1);
        gbc.writeMem(0x71c8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8d38);
        EXPECT(gbc.pc(), 0x71ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00A3
        gbc.setState(0x5e13, 0x6d4e, 0xe1c0, 0x5c1a, 0xef96, 0x7423, 0x0, 0x0);
        gbc.writeMem(0x5e13, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6d4e);
        EXPECT(gbc.pc(), 0x5e15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 00A4
        gbc.setState(0xcf82, 0x56f6, 0x38c0, 0x953f, 0x3d54, 0x1f3f, 0x0, 0x0);
        gbc.writeMem(0xcf82, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x56f6);
        EXPECT(gbc.pc(), 0xcf84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf82), 0xcb);
        EXPECT(gbc.readMem(0xcf83), 0xa3);
        // CB A3 00A5
        gbc.setState(0x649f, 0x3ba8, 0xdd90, 0xe408, 0x2f47, 0xeed0, 0x1, 0x1);
        gbc.writeMem(0x649f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3ba8);
        EXPECT(gbc.pc(), 0x64a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00A6
        gbc.setState(0xb024, 0xf2b6, 0x81a0, 0x36b8, 0xdfa6, 0x239c, 0x0, 0x0);
        gbc.writeMem(0xb024, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf2b6);
        EXPECT(gbc.pc(), 0xb026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb024), 0xcb);
        EXPECT(gbc.readMem(0xb025), 0xa3);
        // CB A3 00A7
        gbc.setState(0x3121, 0x24d9, 0x9450, 0xaec8, 0x7535, 0xe72b, 0x1, 0x1);
        gbc.writeMem(0x3121, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x24d9);
        EXPECT(gbc.pc(), 0x3123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00A8
        gbc.setState(0x3d2f, 0xcef7, 0xb100, 0x9d7d, 0x589e, 0x2a32, 0x0, 0x0);
        gbc.writeMem(0x3d2f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xcef7);
        EXPECT(gbc.pc(), 0x3d31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 00A9
        gbc.setState(0xe063, 0x3c1d, 0xd7e0, 0x8536, 0xc10a, 0x7c1, 0x1, 0x0);
        gbc.writeMem(0xe063, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3c1d);
        EXPECT(gbc.pc(), 0xe065);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe063), 0xcb);
        EXPECT(gbc.readMem(0xe064), 0xa3);
        // CB A3 00AA
        gbc.setState(0x704a, 0x403b, 0xd690, 0x17ff, 0x453a, 0x9cc0, 0x0, 0x0);
        gbc.writeMem(0x704a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x403b);
        EXPECT(gbc.pc(), 0x704c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00AB
        gbc.setState(0x8f0b, 0xa91f, 0x4c50, 0x9d9f, 0x1786, 0xc9d, 0x0, 0x0);
        gbc.writeMem(0x8f0b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa91f);
        EXPECT(gbc.pc(), 0x8f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f0b), 0xcb);
        EXPECT(gbc.readMem(0x8f0c), 0xa3);
        // CB A3 00AC
        gbc.setState(0x7982, 0x2eb1, 0x9350, 0x33f6, 0xf736, 0x4e1e, 0x1, 0x0);
        gbc.writeMem(0x7982, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2eb1);
        EXPECT(gbc.pc(), 0x7984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00AE
        gbc.setState(0x64f1, 0x945, 0xc2e0, 0xd3e7, 0x3efd, 0xf84d, 0x0, 0x0);
        gbc.writeMem(0x64f1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x945);
        EXPECT(gbc.pc(), 0x64f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 00AF
        gbc.setState(0x1f9b, 0x71f7, 0xbfd0, 0x1ebf, 0x9d78, 0xa292, 0x0, 0x1);
        gbc.writeMem(0x1f9b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x71f7);
        EXPECT(gbc.pc(), 0x1f9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00B0
        gbc.setState(0x99bd, 0x72f8, 0x2120, 0x6c5b, 0xa3c3, 0xd5e, 0x0, 0x0);
        gbc.writeMem(0x99bd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x72f8);
        EXPECT(gbc.pc(), 0x99bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99bd), 0xcb);
        EXPECT(gbc.readMem(0x99be), 0xa3);
        // CB A3 00B1
        gbc.setState(0x8d8, 0xc884, 0x7a70, 0x5484, 0xe1f0, 0xf01f, 0x1, 0x1);
        gbc.writeMem(0x8d8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc884);
        EXPECT(gbc.pc(), 0x8da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00B2
        gbc.setState(0x6c95, 0xb9f3, 0xe770, 0x6e6d, 0x50ce, 0x78e8, 0x0, 0x0);
        gbc.writeMem(0x6c95, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb9f3);
        EXPECT(gbc.pc(), 0x6c97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00B3
        gbc.setState(0xae4d, 0x6ba2, 0x9f90, 0x7f14, 0x50b6, 0x6e80, 0x0, 0x1);
        gbc.writeMem(0xae4d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6ba2);
        EXPECT(gbc.pc(), 0xae4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae4d), 0xcb);
        EXPECT(gbc.readMem(0xae4e), 0xa3);
        // CB A3 00B4
        gbc.setState(0x5b62, 0xbfba, 0x5b10, 0x3c9f, 0x62ce, 0xfc49, 0x0, 0x0);
        gbc.writeMem(0x5b62, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xbfba);
        EXPECT(gbc.pc(), 0x5b64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00B5
        gbc.setState(0x9177, 0x251e, 0xe940, 0x3ab5, 0x4ebd, 0x1bf8, 0x1, 0x0);
        gbc.writeMem(0x9177, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x251e);
        EXPECT(gbc.pc(), 0x9179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9177), 0xcb);
        EXPECT(gbc.readMem(0x9178), 0xa3);
        // CB A3 00B7
        gbc.setState(0x42aa, 0x4cca, 0x8bb0, 0x559b, 0x4424, 0xa2c0, 0x1, 0x1);
        gbc.writeMem(0x42aa, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4cca);
        EXPECT(gbc.pc(), 0x42ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00B8
        gbc.setState(0x8f17, 0x2d5c, 0xcc60, 0x7d90, 0xf287, 0xadcd, 0x0, 0x0);
        gbc.writeMem(0x8f17, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2d5c);
        EXPECT(gbc.pc(), 0x8f19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f17), 0xcb);
        EXPECT(gbc.readMem(0x8f18), 0xa3);
        // CB A3 00B9
        gbc.setState(0xe78f, 0x14be, 0xc9a0, 0x17c2, 0xc4b4, 0x7365, 0x1, 0x1);
        gbc.writeMem(0xe78f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x14be);
        EXPECT(gbc.pc(), 0xe791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe78f), 0xcb);
        EXPECT(gbc.readMem(0xe790), 0xa3);
        // CB A3 00BB
        gbc.setState(0xbc36, 0x3df2, 0x7790, 0x5646, 0xe7f5, 0x1162, 0x1, 0x0);
        gbc.writeMem(0xbc36, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3df2);
        EXPECT(gbc.pc(), 0xbc38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc36), 0xcb);
        EXPECT(gbc.readMem(0xbc37), 0xa3);
        // CB A3 00BC
        gbc.setState(0xc500, 0xc393, 0x4d90, 0xad2d, 0xd8b8, 0xffeb, 0x0, 0x1);
        gbc.writeMem(0xc500, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc393);
        EXPECT(gbc.pc(), 0xc502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc500), 0xcb);
        EXPECT(gbc.readMem(0xc501), 0xa3);
        // CB A3 00BD
        gbc.setState(0x430c, 0x39c1, 0x5350, 0x430c, 0x5bc, 0x543, 0x1, 0x1);
        gbc.writeMem(0x430c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x39c1);
        EXPECT(gbc.pc(), 0x430e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00BE
        gbc.setState(0x18ff, 0xbc77, 0x7af0, 0x3624, 0xe6d5, 0x5fea, 0x0, 0x1);
        gbc.writeMem(0x18ff, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbc77);
        EXPECT(gbc.pc(), 0x1901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00BF
        gbc.setState(0xba6f, 0x7ba6, 0xa9d0, 0x2fba, 0x510c, 0xdc4d, 0x0, 0x1);
        gbc.writeMem(0xba6f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7ba6);
        EXPECT(gbc.pc(), 0xba71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba6f), 0xcb);
        EXPECT(gbc.readMem(0xba70), 0xa3);
        // CB A3 00C0
        gbc.setState(0xee8d, 0xf589, 0x2300, 0xe805, 0x8807, 0xb59c, 0x1, 0x0);
        gbc.writeMem(0xee8d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf589);
        EXPECT(gbc.pc(), 0xee8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee8d), 0xcb);
        EXPECT(gbc.readMem(0xee8e), 0xa3);
        // CB A3 00C2
        gbc.setState(0x15c9, 0x79d2, 0xd010, 0x6c86, 0x3dc4, 0x9298, 0x0, 0x0);
        gbc.writeMem(0x15c9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x79d2);
        EXPECT(gbc.pc(), 0x15cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00C3
        gbc.setState(0x9c6b, 0x5798, 0xdeb0, 0x7ecf, 0x4dce, 0x2a53, 0x1, 0x0);
        gbc.writeMem(0x9c6b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5798);
        EXPECT(gbc.pc(), 0x9c6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c6b), 0xcb);
        EXPECT(gbc.readMem(0x9c6c), 0xa3);
        // CB A3 00C4
        gbc.setState(0xcbf5, 0x2ec7, 0xf430, 0xb5fa, 0xc802, 0xcda2, 0x0, 0x1);
        gbc.writeMem(0xcbf5, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2ec7);
        EXPECT(gbc.pc(), 0xcbf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbf5), 0xcb);
        EXPECT(gbc.readMem(0xcbf6), 0xa3);
        // CB A3 00C5
        gbc.setState(0xe9a5, 0xbbc0, 0x2440, 0x8bb5, 0x8180, 0xe05a, 0x1, 0x1);
        gbc.writeMem(0xe9a5, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbbc0);
        EXPECT(gbc.pc(), 0xe9a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9a5), 0xcb);
        EXPECT(gbc.readMem(0xe9a6), 0xa3);
        // CB A3 00C6
        gbc.setState(0x2e84, 0x6fa8, 0xf410, 0x59d9, 0x63ab, 0x5464, 0x1, 0x1);
        gbc.writeMem(0x2e84, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6fa8);
        EXPECT(gbc.pc(), 0x2e86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00C7
        gbc.setState(0xed37, 0x503a, 0x84d0, 0xb94e, 0x6f80, 0xebb9, 0x1, 0x0);
        gbc.writeMem(0xed37, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x503a);
        EXPECT(gbc.pc(), 0xed39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed37), 0xcb);
        EXPECT(gbc.readMem(0xed38), 0xa3);
        // CB A3 00C8
        gbc.setState(0xaeda, 0xcac1, 0xbec0, 0x1e6b, 0xd501, 0x834f, 0x0, 0x0);
        gbc.writeMem(0xaeda, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xcac1);
        EXPECT(gbc.pc(), 0xaedc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeda), 0xcb);
        EXPECT(gbc.readMem(0xaedb), 0xa3);
        // CB A3 00C9
        gbc.setState(0x1b59, 0x71a6, 0xa9b0, 0x1a57, 0x80cf, 0x7e92, 0x1, 0x0);
        gbc.writeMem(0x1b59, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x71a6);
        EXPECT(gbc.pc(), 0x1b5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00CB
        gbc.setState(0x46d0, 0x29cd, 0x7ed0, 0xd76b, 0x3f60, 0x11e1, 0x0, 0x0);
        gbc.writeMem(0x46d0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x29cd);
        EXPECT(gbc.pc(), 0x46d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00CC
        gbc.setState(0x2ca2, 0x473, 0x6590, 0x5440, 0xe8cd, 0xb38f, 0x0, 0x1);
        gbc.writeMem(0x2ca2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x473);
        EXPECT(gbc.pc(), 0x2ca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00CD
        gbc.setState(0x5b7a, 0xed48, 0x5c20, 0xdacd, 0x4cd1, 0x7bc2, 0x1, 0x0);
        gbc.writeMem(0x5b7a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xed48);
        EXPECT(gbc.pc(), 0x5b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 00CE
        gbc.setState(0x5ef7, 0x86b5, 0xf740, 0x7aa5, 0xf6fd, 0x594e, 0x1, 0x0);
        gbc.writeMem(0x5ef7, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x86b5);
        EXPECT(gbc.pc(), 0x5ef9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 00CF
        gbc.setState(0xe456, 0xf7ea, 0x63c0, 0x2c59, 0x38ea, 0x5864, 0x1, 0x0);
        gbc.writeMem(0xe456, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf7ea);
        EXPECT(gbc.pc(), 0xe458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe456), 0xcb);
        EXPECT(gbc.readMem(0xe457), 0xa3);
        // CB A3 00D0
        gbc.setState(0x8536, 0xaa45, 0x9410, 0xbd4, 0xbad0, 0x8b4a, 0x1, 0x1);
        gbc.writeMem(0x8536, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xaa45);
        EXPECT(gbc.pc(), 0x8538);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8536), 0xcb);
        EXPECT(gbc.readMem(0x8537), 0xa3);
        // CB A3 00D1
        gbc.setState(0x88b6, 0xd141, 0x1d0, 0xcd77, 0xf5a3, 0xbb4e, 0x1, 0x0);
        gbc.writeMem(0x88b6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd141);
        EXPECT(gbc.pc(), 0x88b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b6), 0xcb);
        EXPECT(gbc.readMem(0x88b7), 0xa3);
        // CB A3 00D2
        gbc.setState(0xe009, 0xc134, 0xff70, 0xaf5a, 0xc50d, 0xd06c, 0x0, 0x1);
        gbc.writeMem(0xe009, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc134);
        EXPECT(gbc.pc(), 0xe00b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe009), 0xcb);
        EXPECT(gbc.readMem(0xe00a), 0xa3);
        // CB A3 00D3
        gbc.setState(0x1113, 0x52d2, 0xb540, 0x3e42, 0x952c, 0x2222, 0x1, 0x0);
        gbc.writeMem(0x1113, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x52d2);
        EXPECT(gbc.pc(), 0x1115);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 00D4
        gbc.setState(0x30bc, 0x80cb, 0xe050, 0xd298, 0xbcb7, 0x6600, 0x0, 0x0);
        gbc.writeMem(0x30bc, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x80cb);
        EXPECT(gbc.pc(), 0x30be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00D6
        gbc.setState(0xd2da, 0x4a95, 0xe40, 0x84a8, 0x92c8, 0xdcaf, 0x0, 0x0);
        gbc.writeMem(0xd2da, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4a95);
        EXPECT(gbc.pc(), 0xd2dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2da), 0xcb);
        EXPECT(gbc.readMem(0xd2db), 0xa3);
        // CB A3 00D7
        gbc.setState(0x8d82, 0x2230, 0x4c40, 0xd8, 0xde31, 0xfaab, 0x0, 0x1);
        gbc.writeMem(0x8d82, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2230);
        EXPECT(gbc.pc(), 0x8d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d82), 0xcb);
        EXPECT(gbc.readMem(0x8d83), 0xa3);
        // CB A3 00D8
        gbc.setState(0xd236, 0x853e, 0xa200, 0x6c8d, 0x81f4, 0x8ed9, 0x0, 0x1);
        gbc.writeMem(0xd236, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x853e);
        EXPECT(gbc.pc(), 0xd238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd236), 0xcb);
        EXPECT(gbc.readMem(0xd237), 0xa3);
        // CB A3 00D9
        gbc.setState(0x8e37, 0x45c7, 0x5cf0, 0x3973, 0xd362, 0xa410, 0x1, 0x1);
        gbc.writeMem(0x8e37, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x45c7);
        EXPECT(gbc.pc(), 0x8e39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e37), 0xcb);
        EXPECT(gbc.readMem(0x8e38), 0xa3);
        // CB A3 00DA
        gbc.setState(0xc403, 0x555, 0x3230, 0x7493, 0x1e28, 0xd324, 0x0, 0x0);
        gbc.writeMem(0xc403, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x555);
        EXPECT(gbc.pc(), 0xc405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc403), 0xcb);
        EXPECT(gbc.readMem(0xc404), 0xa3);
        // CB A3 00DB
        gbc.setState(0xaf42, 0xfe05, 0x5f00, 0x5ed3, 0x2966, 0x7000, 0x1, 0x1);
        gbc.writeMem(0xaf42, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xfe05);
        EXPECT(gbc.pc(), 0xaf44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf42), 0xcb);
        EXPECT(gbc.readMem(0xaf43), 0xa3);
        // CB A3 00DC
        gbc.setState(0x96bb, 0x7309, 0x9530, 0x5413, 0xe8f4, 0x7403, 0x0, 0x1);
        gbc.writeMem(0x96bb, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7309);
        EXPECT(gbc.pc(), 0x96bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96bb), 0xcb);
        EXPECT(gbc.readMem(0x96bc), 0xa3);
        // CB A3 00DD
        gbc.setState(0x1237, 0x3635, 0x30, 0x8472, 0x8f60, 0x17e6, 0x1, 0x0);
        gbc.writeMem(0x1237, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3635);
        EXPECT(gbc.pc(), 0x1239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00DE
        gbc.setState(0x608, 0xc8f5, 0xecf0, 0xcbd6, 0xdb1e, 0xeffc, 0x1, 0x0);
        gbc.writeMem(0x608, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc8f5);
        EXPECT(gbc.pc(), 0x60a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00E0
        gbc.setState(0x119c, 0xfd39, 0xd310, 0x14f4, 0x1703, 0x4a93, 0x0, 0x0);
        gbc.writeMem(0x119c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xfd39);
        EXPECT(gbc.pc(), 0x119e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00E2
        gbc.setState(0xc045, 0xc613, 0xbe50, 0xff60, 0x2de9, 0x7156, 0x1, 0x0);
        gbc.writeMem(0xc045, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc613);
        EXPECT(gbc.pc(), 0xc047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc045), 0xcb);
        EXPECT(gbc.readMem(0xc046), 0xa3);
        // CB A3 00E3
        gbc.setState(0x5e3c, 0xc324, 0x1fc0, 0xa96, 0x4557, 0x9cd4, 0x1, 0x1);
        gbc.writeMem(0x5e3c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc324);
        EXPECT(gbc.pc(), 0x5e3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 00E4
        gbc.setState(0xed78, 0xd3a5, 0xc340, 0x3e3e, 0xf768, 0xb75a, 0x0, 0x0);
        gbc.writeMem(0xed78, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd3a5);
        EXPECT(gbc.pc(), 0xed7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed78), 0xcb);
        EXPECT(gbc.readMem(0xed79), 0xa3);
        // CB A3 00E5
        gbc.setState(0x6645, 0x4957, 0xd3a0, 0x14df, 0xa043, 0x3fca, 0x1, 0x1);
        gbc.writeMem(0x6645, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4957);
        EXPECT(gbc.pc(), 0x6647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 00E6
        gbc.setState(0xc1e9, 0xa341, 0x3150, 0x1bf7, 0x6e70, 0xa3e2, 0x0, 0x1);
        gbc.writeMem(0xc1e9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa341);
        EXPECT(gbc.pc(), 0xc1eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e9), 0xcb);
        EXPECT(gbc.readMem(0xc1ea), 0xa3);
        // CB A3 00E7
        gbc.setState(0xa7f6, 0x309f, 0xc650, 0x858d, 0xc59f, 0x1d1b, 0x0, 0x0);
        gbc.writeMem(0xa7f6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x309f);
        EXPECT(gbc.pc(), 0xa7f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f6), 0xcb);
        EXPECT(gbc.readMem(0xa7f7), 0xa3);
        // CB A3 00E8
        gbc.setState(0x9e7, 0xc3bb, 0x5d30, 0x3955, 0x331c, 0xd58e, 0x1, 0x0);
        gbc.writeMem(0x9e7, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc3bb);
        EXPECT(gbc.pc(), 0x9e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00E9
        gbc.setState(0xd0ed, 0x906e, 0x1ca0, 0xa2ce, 0xe5e4, 0x580, 0x0, 0x1);
        gbc.writeMem(0xd0ed, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x906e);
        EXPECT(gbc.pc(), 0xd0ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ed), 0xcb);
        EXPECT(gbc.readMem(0xd0ee), 0xa3);
        // CB A3 00EA
        gbc.setState(0xea68, 0x3e10, 0xd320, 0x9273, 0x289c, 0xef9b, 0x0, 0x0);
        gbc.writeMem(0xea68, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3e10);
        EXPECT(gbc.pc(), 0xea6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea68), 0xcb);
        EXPECT(gbc.readMem(0xea69), 0xa3);
        // CB A3 00EB
        gbc.setState(0x185d, 0x958d, 0x5650, 0xeadb, 0x504e, 0xd057, 0x1, 0x0);
        gbc.writeMem(0x185d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x958d);
        EXPECT(gbc.pc(), 0x185f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00EC
        gbc.setState(0x5675, 0xed3c, 0xe020, 0x3659, 0x6037, 0xad5c, 0x0, 0x0);
        gbc.writeMem(0x5675, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xed3c);
        EXPECT(gbc.pc(), 0x5677);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 00ED
        gbc.setState(0x5406, 0xf415, 0x86d0, 0xcecf, 0xc95b, 0x8d06, 0x0, 0x0);
        gbc.writeMem(0x5406, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf415);
        EXPECT(gbc.pc(), 0x5408);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00EE
        gbc.setState(0x4b5a, 0x66cc, 0x2230, 0xd68e, 0x45f7, 0x38a6, 0x1, 0x0);
        gbc.writeMem(0x4b5a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x66cc);
        EXPECT(gbc.pc(), 0x4b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00F1
        gbc.setState(0x55df, 0x345d, 0xe500, 0x3f40, 0x8dac, 0x6dcb, 0x1, 0x0);
        gbc.writeMem(0x55df, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x345d);
        EXPECT(gbc.pc(), 0x55e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 00F2
        gbc.setState(0xc09b, 0x2df6, 0x4fa0, 0x864d, 0xa065, 0xfe8b, 0x0, 0x1);
        gbc.writeMem(0xc09b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2df6);
        EXPECT(gbc.pc(), 0xc09d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc09b), 0xcb);
        EXPECT(gbc.readMem(0xc09c), 0xa3);
        // CB A3 00F3
        gbc.setState(0x1f7b, 0x1260, 0x18d0, 0x51d5, 0x839f, 0x9fef, 0x1, 0x1);
        gbc.writeMem(0x1f7b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1260);
        EXPECT(gbc.pc(), 0x1f7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00F4
        gbc.setState(0x7cca, 0x7454, 0x46a0, 0xe0a2, 0x73fc, 0x7c2, 0x0, 0x0);
        gbc.writeMem(0x7cca, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x7454);
        EXPECT(gbc.pc(), 0x7ccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 00F5
        gbc.setState(0xc117, 0xe7fe, 0x2060, 0x2af4, 0x56a0, 0xc4fc, 0x0, 0x1);
        gbc.writeMem(0xc117, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe7fe);
        EXPECT(gbc.pc(), 0xc119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc117), 0xcb);
        EXPECT(gbc.readMem(0xc118), 0xa3);
        // CB A3 00F6
        gbc.setState(0xc8b3, 0x55ea, 0xd7e0, 0xc1fa, 0xeef3, 0x7e2, 0x0, 0x1);
        gbc.writeMem(0xc8b3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x55ea);
        EXPECT(gbc.pc(), 0xc8b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b3), 0xcb);
        EXPECT(gbc.readMem(0xc8b4), 0xa3);
        // CB A3 00F7
        gbc.setState(0x7587, 0x792a, 0x8de0, 0xf500, 0x3498, 0xa505, 0x1, 0x1);
        gbc.writeMem(0x7587, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x792a);
        EXPECT(gbc.pc(), 0x7589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 00F8
        gbc.setState(0x8b75, 0x5fe1, 0x2650, 0x6b71, 0x8fb0, 0x9f27, 0x0, 0x0);
        gbc.writeMem(0x8b75, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5fe1);
        EXPECT(gbc.pc(), 0x8b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b75), 0xcb);
        EXPECT(gbc.readMem(0x8b76), 0xa3);
        // CB A3 00F9
        gbc.setState(0xce25, 0xb5a4, 0xfd0, 0xdb85, 0xbfac, 0xf9de, 0x1, 0x0);
        gbc.writeMem(0xce25, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb5a4);
        EXPECT(gbc.pc(), 0xce27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce25), 0xcb);
        EXPECT(gbc.readMem(0xce26), 0xa3);
        // CB A3 00FA
        gbc.setState(0xeedc, 0x28ba, 0xd3e0, 0x940d, 0xe125, 0x5101, 0x1, 0x0);
        gbc.writeMem(0xeedc, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x28ba);
        EXPECT(gbc.pc(), 0xeede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeedc), 0xcb);
        EXPECT(gbc.readMem(0xeedd), 0xa3);
        // CB A3 00FB
        gbc.setState(0x1488, 0xa23f, 0x8fc0, 0xfc1f, 0x66fe, 0xca54, 0x0, 0x1);
        gbc.writeMem(0x1488, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa23f);
        EXPECT(gbc.pc(), 0x148a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 00FC
        gbc.setState(0x3ae3, 0xc6cc, 0x1350, 0xccae, 0xa0a4, 0x6772, 0x0, 0x0);
        gbc.writeMem(0x3ae3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc6cc);
        EXPECT(gbc.pc(), 0x3ae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00FD
        gbc.setState(0x42f9, 0x8703, 0xdf50, 0xa887, 0x6d40, 0xd7ab, 0x1, 0x0);
        gbc.writeMem(0x42f9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x8703);
        EXPECT(gbc.pc(), 0x42fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 00FE
        gbc.setState(0x3b99, 0x1b13, 0x1e60, 0x46d, 0x147, 0xd89d, 0x0, 0x1);
        gbc.writeMem(0x3b99, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1b13);
        EXPECT(gbc.pc(), 0x3b9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0100
        gbc.setState(0x85d2, 0xcdb8, 0x8430, 0xeb03, 0xbcb6, 0xc300, 0x1, 0x1);
        gbc.writeMem(0x85d2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xcdb8);
        EXPECT(gbc.pc(), 0x85d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d2), 0xcb);
        EXPECT(gbc.readMem(0x85d3), 0xa3);
        // CB A3 0101
        gbc.setState(0xa9ba, 0xec8, 0x42f0, 0x6ff1, 0x738d, 0x652e, 0x1, 0x1);
        gbc.writeMem(0xa9ba, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xec8);
        EXPECT(gbc.pc(), 0xa9bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ba), 0xcb);
        EXPECT(gbc.readMem(0xa9bb), 0xa3);
        // CB A3 0102
        gbc.setState(0x7327, 0x39d8, 0xc790, 0x5d73, 0x6c0c, 0xbba6, 0x0, 0x1);
        gbc.writeMem(0x7327, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x39d8);
        EXPECT(gbc.pc(), 0x7329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0103
        gbc.setState(0xedb3, 0xef78, 0x7200, 0x6de4, 0xcc2e, 0x3fbc, 0x0, 0x1);
        gbc.writeMem(0xedb3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xef78);
        EXPECT(gbc.pc(), 0xedb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb3), 0xcb);
        EXPECT(gbc.readMem(0xedb4), 0xa3);
        // CB A3 0105
        gbc.setState(0x94e8, 0x4f0c, 0x2c70, 0xcbd1, 0xe807, 0x3f1c, 0x1, 0x0);
        gbc.writeMem(0x94e8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4f0c);
        EXPECT(gbc.pc(), 0x94ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94e8), 0xcb);
        EXPECT(gbc.readMem(0x94e9), 0xa3);
        // CB A3 0106
        gbc.setState(0x3047, 0x436b, 0x61a0, 0x7755, 0x252c, 0x8984, 0x0, 0x0);
        gbc.writeMem(0x3047, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x436b);
        EXPECT(gbc.pc(), 0x3049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0107
        gbc.setState(0x25c1, 0x7734, 0x8e60, 0xc3bb, 0xb1f0, 0xc2a7, 0x1, 0x1);
        gbc.writeMem(0x25c1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7734);
        EXPECT(gbc.pc(), 0x25c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0109
        gbc.setState(0xb809, 0x794, 0xb850, 0x55e8, 0x5010, 0xffc7, 0x0, 0x1);
        gbc.writeMem(0xb809, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x794);
        EXPECT(gbc.pc(), 0xb80b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb809), 0xcb);
        EXPECT(gbc.readMem(0xb80a), 0xa3);
        // CB A3 010A
        gbc.setState(0xcbb7, 0x1ca4, 0xc070, 0x92dd, 0xc484, 0x5c45, 0x0, 0x0);
        gbc.writeMem(0xcbb7, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1ca4);
        EXPECT(gbc.pc(), 0xcbb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbb7), 0xcb);
        EXPECT(gbc.readMem(0xcbb8), 0xa3);
        // CB A3 010B
        gbc.setState(0x5b57, 0x993a, 0x1ec0, 0xc42d, 0x5e4, 0x49cf, 0x0, 0x0);
        gbc.writeMem(0x5b57, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x993a);
        EXPECT(gbc.pc(), 0x5b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 010C
        gbc.setState(0x24c1, 0x74fb, 0xe190, 0x4f0b, 0xee82, 0x7e30, 0x0, 0x0);
        gbc.writeMem(0x24c1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x74fb);
        EXPECT(gbc.pc(), 0x24c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 010D
        gbc.setState(0x464, 0x3d16, 0x1ea0, 0x53e4, 0x9827, 0x3844, 0x0, 0x1);
        gbc.writeMem(0x464, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3d16);
        EXPECT(gbc.pc(), 0x466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 010E
        gbc.setState(0x8c04, 0xb106, 0xded0, 0x1a26, 0xbf76, 0x120d, 0x0, 0x1);
        gbc.writeMem(0x8c04, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb106);
        EXPECT(gbc.pc(), 0x8c06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c04), 0xcb);
        EXPECT(gbc.readMem(0x8c05), 0xa3);
        // CB A3 010F
        gbc.setState(0x111d, 0x793a, 0xb790, 0x5fa, 0x23e4, 0xbae6, 0x0, 0x0);
        gbc.writeMem(0x111d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x793a);
        EXPECT(gbc.pc(), 0x111f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0110
        gbc.setState(0xa7f, 0x688d, 0x8840, 0x3fb0, 0xb487, 0xef9f, 0x0, 0x1);
        gbc.writeMem(0xa7f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x688d);
        EXPECT(gbc.pc(), 0xa81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0111
        gbc.setState(0x17a4, 0x523, 0x5200, 0x958b, 0x9065, 0xcf74, 0x0, 0x1);
        gbc.writeMem(0x17a4, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x523);
        EXPECT(gbc.pc(), 0x17a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0113
        gbc.setState(0x3f4e, 0x632c, 0x28f0, 0x6642, 0x3375, 0x250c, 0x0, 0x0);
        gbc.writeMem(0x3f4e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x632c);
        EXPECT(gbc.pc(), 0x3f50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0114
        gbc.setState(0x1593, 0xa12, 0x8670, 0x99e5, 0x744f, 0x8f24, 0x0, 0x1);
        gbc.writeMem(0x1593, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa12);
        EXPECT(gbc.pc(), 0x1595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0115
        gbc.setState(0xcaad, 0x522f, 0x620, 0xae97, 0x2a7d, 0x3ded, 0x1, 0x0);
        gbc.writeMem(0xcaad, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x522f);
        EXPECT(gbc.pc(), 0xcaaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaad), 0xcb);
        EXPECT(gbc.readMem(0xcaae), 0xa3);
        // CB A3 0116
        gbc.setState(0xd3e0, 0x110b, 0xdbe0, 0x86d4, 0xd8d9, 0xf300, 0x0, 0x1);
        gbc.writeMem(0xd3e0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x110b);
        EXPECT(gbc.pc(), 0xd3e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3e0), 0xcb);
        EXPECT(gbc.readMem(0xd3e1), 0xa3);
        // CB A3 0117
        gbc.setState(0xa7b8, 0x9c4b, 0x230, 0xf286, 0xfb27, 0xb279, 0x0, 0x0);
        gbc.writeMem(0xa7b8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9c4b);
        EXPECT(gbc.pc(), 0xa7ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b8), 0xcb);
        EXPECT(gbc.readMem(0xa7b9), 0xa3);
        // CB A3 0119
        gbc.setState(0xed54, 0x8dfe, 0x64b0, 0xff6e, 0x8e3e, 0x45e1, 0x1, 0x0);
        gbc.writeMem(0xed54, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8dfe);
        EXPECT(gbc.pc(), 0xed56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed54), 0xcb);
        EXPECT(gbc.readMem(0xed55), 0xa3);
        // CB A3 011A
        gbc.setState(0xb762, 0xf392, 0x80f0, 0xd418, 0x70ea, 0x1fe4, 0x1, 0x0);
        gbc.writeMem(0xb762, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf392);
        EXPECT(gbc.pc(), 0xb764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb762), 0xcb);
        EXPECT(gbc.readMem(0xb763), 0xa3);
        // CB A3 011B
        gbc.setState(0xca69, 0x6cca, 0x8be0, 0xdbc0, 0x18fb, 0xc87a, 0x0, 0x0);
        gbc.writeMem(0xca69, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6cca);
        EXPECT(gbc.pc(), 0xca6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca69), 0xcb);
        EXPECT(gbc.readMem(0xca6a), 0xa3);
        // CB A3 011C
        gbc.setState(0x6d6f, 0xd0aa, 0xea60, 0xf02e, 0x3df, 0x8a41, 0x0, 0x0);
        gbc.writeMem(0x6d6f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd0aa);
        EXPECT(gbc.pc(), 0x6d71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 011D
        gbc.setState(0x7a28, 0xc39d, 0x2b50, 0x774f, 0x76a2, 0x6c00, 0x0, 0x0);
        gbc.writeMem(0x7a28, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc39d);
        EXPECT(gbc.pc(), 0x7a2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 011E
        gbc.setState(0xe6d5, 0xab98, 0x77b0, 0x676, 0x42d4, 0xdeb4, 0x0, 0x1);
        gbc.writeMem(0xe6d5, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xab98);
        EXPECT(gbc.pc(), 0xe6d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6d5), 0xcb);
        EXPECT(gbc.readMem(0xe6d6), 0xa3);
        // CB A3 011F
        gbc.setState(0x66ea, 0xe2d8, 0xaa10, 0x632b, 0x2769, 0xf3b1, 0x0, 0x0);
        gbc.writeMem(0x66ea, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe2d8);
        EXPECT(gbc.pc(), 0x66ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0120
        gbc.setState(0x2f23, 0x4da7, 0x8df0, 0x8e7f, 0x62fe, 0x1ee3, 0x0, 0x0);
        gbc.writeMem(0x2f23, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4da7);
        EXPECT(gbc.pc(), 0x2f25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0121
        gbc.setState(0x3ac, 0xb95c, 0xf330, 0x6517, 0xb7f1, 0xb330, 0x1, 0x0);
        gbc.writeMem(0x3ac, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb95c);
        EXPECT(gbc.pc(), 0x3ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0122
        gbc.setState(0xb0ad, 0x2d72, 0xd510, 0xbc7b, 0x8234, 0x38f4, 0x0, 0x1);
        gbc.writeMem(0xb0ad, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2d72);
        EXPECT(gbc.pc(), 0xb0af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0ad), 0xcb);
        EXPECT(gbc.readMem(0xb0ae), 0xa3);
        // CB A3 0123
        gbc.setState(0xcb86, 0x2d15, 0xf510, 0xb615, 0xbd82, 0x30a4, 0x1, 0x0);
        gbc.writeMem(0xcb86, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2d15);
        EXPECT(gbc.pc(), 0xcb88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb86), 0xcb);
        EXPECT(gbc.readMem(0xcb87), 0xa3);
        // CB A3 0124
        gbc.setState(0xac35, 0x48dc, 0x37f0, 0x8bdd, 0xc94f, 0xc875, 0x0, 0x0);
        gbc.writeMem(0xac35, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x48dc);
        EXPECT(gbc.pc(), 0xac37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac35), 0xcb);
        EXPECT(gbc.readMem(0xac36), 0xa3);
        // CB A3 0125
        gbc.setState(0xd7a1, 0xa132, 0xcad0, 0xb8aa, 0x4fb6, 0xa4ff, 0x1, 0x1);
        gbc.writeMem(0xd7a1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa132);
        EXPECT(gbc.pc(), 0xd7a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7a1), 0xcb);
        EXPECT(gbc.readMem(0xd7a2), 0xa3);
        // CB A3 0126
        gbc.setState(0xab50, 0x75cc, 0x1ab0, 0x7d54, 0x420d, 0xeb34, 0x1, 0x0);
        gbc.writeMem(0xab50, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x75cc);
        EXPECT(gbc.pc(), 0xab52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab50), 0xcb);
        EXPECT(gbc.readMem(0xab51), 0xa3);
        // CB A3 0127
        gbc.setState(0xe685, 0x8653, 0x2bc0, 0xc75d, 0xb12, 0x9795, 0x0, 0x1);
        gbc.writeMem(0xe685, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8653);
        EXPECT(gbc.pc(), 0xe687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe685), 0xcb);
        EXPECT(gbc.readMem(0xe686), 0xa3);
        // CB A3 0128
        gbc.setState(0x8228, 0xe80b, 0x25c0, 0x7b31, 0xd37f, 0x61f3, 0x1, 0x1);
        gbc.writeMem(0x8228, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe80b);
        EXPECT(gbc.pc(), 0x822a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8228), 0xcb);
        EXPECT(gbc.readMem(0x8229), 0xa3);
        // CB A3 0129
        gbc.setState(0x5bad, 0xced5, 0xeaa0, 0x2e28, 0x93df, 0xc356, 0x0, 0x1);
        gbc.writeMem(0x5bad, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xced5);
        EXPECT(gbc.pc(), 0x5baf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 012A
        gbc.setState(0xb403, 0xd0a5, 0xa630, 0x1f97, 0x5367, 0xa937, 0x1, 0x1);
        gbc.writeMem(0xb403, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd0a5);
        EXPECT(gbc.pc(), 0xb405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb403), 0xcb);
        EXPECT(gbc.readMem(0xb404), 0xa3);
        // CB A3 012B
        gbc.setState(0x3d0f, 0xdcd9, 0xf480, 0x411c, 0x2e14, 0x2d4c, 0x0, 0x0);
        gbc.writeMem(0x3d0f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xdcd9);
        EXPECT(gbc.pc(), 0x3d11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 012C
        gbc.setState(0x978d, 0x7522, 0x21e0, 0x525e, 0x404e, 0x73c5, 0x1, 0x0);
        gbc.writeMem(0x978d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7522);
        EXPECT(gbc.pc(), 0x978f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978d), 0xcb);
        EXPECT(gbc.readMem(0x978e), 0xa3);
        // CB A3 012D
        gbc.setState(0x56ee, 0x1d2c, 0x6260, 0xb70c, 0xa6c4, 0x94fb, 0x0, 0x1);
        gbc.writeMem(0x56ee, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1d2c);
        EXPECT(gbc.pc(), 0x56f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 012E
        gbc.setState(0xa608, 0xfb29, 0xc5b0, 0x7077, 0x9eb, 0xb644, 0x0, 0x0);
        gbc.writeMem(0xa608, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfb29);
        EXPECT(gbc.pc(), 0xa60a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa608), 0xcb);
        EXPECT(gbc.readMem(0xa609), 0xa3);
        // CB A3 0130
        gbc.setState(0x1e61, 0x95a5, 0x30f0, 0x5589, 0x270b, 0xa7e9, 0x1, 0x0);
        gbc.writeMem(0x1e61, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x95a5);
        EXPECT(gbc.pc(), 0x1e63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0131
        gbc.setState(0x79d1, 0x6f59, 0xbac0, 0x492c, 0x1181, 0xdcea, 0x0, 0x0);
        gbc.writeMem(0x79d1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6f59);
        EXPECT(gbc.pc(), 0x79d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0132
        gbc.setState(0xcc4d, 0x4a28, 0x85d0, 0x82d1, 0xf78b, 0xc678, 0x0, 0x1);
        gbc.writeMem(0xcc4d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4a28);
        EXPECT(gbc.pc(), 0xcc4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc4d), 0xcb);
        EXPECT(gbc.readMem(0xcc4e), 0xa3);
        // CB A3 0133
        gbc.setState(0x11e5, 0xba5a, 0x7580, 0xa78a, 0xa631, 0x6b09, 0x1, 0x1);
        gbc.writeMem(0x11e5, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xba5a);
        EXPECT(gbc.pc(), 0x11e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0134
        gbc.setState(0x7cbf, 0x7a6b, 0x1e10, 0xcc78, 0x2c69, 0xbff0, 0x1, 0x1);
        gbc.writeMem(0x7cbf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7a6b);
        EXPECT(gbc.pc(), 0x7cc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0136
        gbc.setState(0x9782, 0x70c, 0xdad0, 0xff88, 0x5ee, 0xed51, 0x1, 0x0);
        gbc.writeMem(0x9782, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x70c);
        EXPECT(gbc.pc(), 0x9784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9782), 0xcb);
        EXPECT(gbc.readMem(0x9783), 0xa3);
        // CB A3 0137
        gbc.setState(0x3cdc, 0x66cd, 0xc520, 0xda2a, 0x2365, 0x3f78, 0x0, 0x1);
        gbc.writeMem(0x3cdc, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x66cd);
        EXPECT(gbc.pc(), 0x3cde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0138
        gbc.setState(0xa734, 0xa30, 0x6f20, 0xc70d, 0x6bae, 0x439a, 0x0, 0x0);
        gbc.writeMem(0xa734, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa30);
        EXPECT(gbc.pc(), 0xa736);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa734), 0xcb);
        EXPECT(gbc.readMem(0xa735), 0xa3);
        // CB A3 013A
        gbc.setState(0xcd98, 0xf540, 0x0, 0x2243, 0xe9fe, 0xd15a, 0x0, 0x0);
        gbc.writeMem(0xcd98, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf540);
        EXPECT(gbc.pc(), 0xcd9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd98), 0xcb);
        EXPECT(gbc.readMem(0xcd99), 0xa3);
        // CB A3 013B
        gbc.setState(0xb65d, 0xd77b, 0x3a30, 0xcd5d, 0x4671, 0xe08a, 0x0, 0x0);
        gbc.writeMem(0xb65d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd77b);
        EXPECT(gbc.pc(), 0xb65f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb65d), 0xcb);
        EXPECT(gbc.readMem(0xb65e), 0xa3);
        // CB A3 013C
        gbc.setState(0xe809, 0xba8a, 0x3db0, 0xd828, 0x353b, 0xe858, 0x0, 0x0);
        gbc.writeMem(0xe809, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xba8a);
        EXPECT(gbc.pc(), 0xe80b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe809), 0xcb);
        EXPECT(gbc.readMem(0xe80a), 0xa3);
        // CB A3 013D
        gbc.setState(0xd563, 0x8e90, 0xa0e0, 0x5137, 0xaa24, 0x97a8, 0x1, 0x1);
        gbc.writeMem(0xd563, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8e90);
        EXPECT(gbc.pc(), 0xd565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd563), 0xcb);
        EXPECT(gbc.readMem(0xd564), 0xa3);
        // CB A3 013E
        gbc.setState(0x17e9, 0x9444, 0xce50, 0x6abb, 0xc44f, 0x11c, 0x0, 0x0);
        gbc.writeMem(0x17e9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9444);
        EXPECT(gbc.pc(), 0x17eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 013F
        gbc.setState(0xbbff, 0x4a7d, 0xd750, 0x5b0f, 0xbafb, 0xfbc2, 0x1, 0x1);
        gbc.writeMem(0xbbff, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4a7d);
        EXPECT(gbc.pc(), 0xbc01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbff), 0xcb);
        EXPECT(gbc.readMem(0xbc00), 0xa3);
        // CB A3 0140
        gbc.setState(0x13e2, 0xd3e2, 0x69f0, 0xe525, 0x6949, 0xebb6, 0x1, 0x1);
        gbc.writeMem(0x13e2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd3e2);
        EXPECT(gbc.pc(), 0x13e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0141
        gbc.setState(0x9bc3, 0x7b5f, 0x5250, 0xa67b, 0x9c9c, 0x43e9, 0x1, 0x1);
        gbc.writeMem(0x9bc3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7b5f);
        EXPECT(gbc.pc(), 0x9bc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc3), 0xcb);
        EXPECT(gbc.readMem(0x9bc4), 0xa3);
        // CB A3 0142
        gbc.setState(0x61ba, 0x926a, 0x8d90, 0x5366, 0xbeda, 0xdaff, 0x1, 0x0);
        gbc.writeMem(0x61ba, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x926a);
        EXPECT(gbc.pc(), 0x61bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0143
        gbc.setState(0xc88e, 0x639e, 0xdb20, 0x5d59, 0x16a, 0xbac5, 0x0, 0x1);
        gbc.writeMem(0xc88e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x639e);
        EXPECT(gbc.pc(), 0xc890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc88e), 0xcb);
        EXPECT(gbc.readMem(0xc88f), 0xa3);
        // CB A3 0144
        gbc.setState(0x5bef, 0x16ee, 0x7100, 0x4d5b, 0x740f, 0x7834, 0x0, 0x0);
        gbc.writeMem(0x5bef, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x16ee);
        EXPECT(gbc.pc(), 0x5bf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0145
        gbc.setState(0x5477, 0x67e4, 0xf4f0, 0xc78b, 0xbb23, 0x8fed, 0x0, 0x1);
        gbc.writeMem(0x5477, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x67e4);
        EXPECT(gbc.pc(), 0x5479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0146
        gbc.setState(0xcacf, 0x901a, 0x7b80, 0x4a62, 0x3550, 0x9241, 0x1, 0x1);
        gbc.writeMem(0xcacf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x901a);
        EXPECT(gbc.pc(), 0xcad1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcacf), 0xcb);
        EXPECT(gbc.readMem(0xcad0), 0xa3);
        // CB A3 0147
        gbc.setState(0x6aee, 0xc0e2, 0xbca0, 0x9172, 0x899, 0x84ac, 0x0, 0x0);
        gbc.writeMem(0x6aee, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc0e2);
        EXPECT(gbc.pc(), 0x6af0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0148
        gbc.setState(0x4ce6, 0xc62, 0x1770, 0xacf8, 0x3b09, 0x636b, 0x1, 0x1);
        gbc.writeMem(0x4ce6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc62);
        EXPECT(gbc.pc(), 0x4ce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0149
        gbc.setState(0x77ec, 0xb327, 0x3430, 0x593f, 0x684b, 0xde85, 0x0, 0x1);
        gbc.writeMem(0x77ec, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb327);
        EXPECT(gbc.pc(), 0x77ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 014A
        gbc.setState(0xdbc5, 0x4aea, 0xcc30, 0x6371, 0x2a7f, 0xd8ca, 0x1, 0x0);
        gbc.writeMem(0xdbc5, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4aea);
        EXPECT(gbc.pc(), 0xdbc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbc5), 0xcb);
        EXPECT(gbc.readMem(0xdbc6), 0xa3);
        // CB A3 014B
        gbc.setState(0xbe93, 0x4e2e, 0xc210, 0x3ee8, 0x287a, 0x74f4, 0x0, 0x1);
        gbc.writeMem(0xbe93, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4e2e);
        EXPECT(gbc.pc(), 0xbe95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe93), 0xcb);
        EXPECT(gbc.readMem(0xbe94), 0xa3);
        // CB A3 014C
        gbc.setState(0x21b9, 0x1751, 0x6c10, 0xdda5, 0x8ca0, 0x2d1a, 0x1, 0x1);
        gbc.writeMem(0x21b9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1751);
        EXPECT(gbc.pc(), 0x21bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 014D
        gbc.setState(0x972f, 0xfe89, 0xd1b0, 0x95ac, 0x8dea, 0x35ef, 0x1, 0x1);
        gbc.writeMem(0x972f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xfe89);
        EXPECT(gbc.pc(), 0x9731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x972f), 0xcb);
        EXPECT(gbc.readMem(0x9730), 0xa3);
        // CB A3 014F
        gbc.setState(0x57c3, 0x7445, 0xace0, 0x4929, 0xeb90, 0x899c, 0x1, 0x1);
        gbc.writeMem(0x57c3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7445);
        EXPECT(gbc.pc(), 0x57c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0150
        gbc.setState(0xbe43, 0x7f40, 0x2270, 0xcb6f, 0xcfbc, 0xff51, 0x1, 0x1);
        gbc.writeMem(0xbe43, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7f40);
        EXPECT(gbc.pc(), 0xbe45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe43), 0xcb);
        EXPECT(gbc.readMem(0xbe44), 0xa3);
        // CB A3 0151
        gbc.setState(0x476b, 0x8e63, 0x4db0, 0x1504, 0x2727, 0xf86f, 0x1, 0x1);
        gbc.writeMem(0x476b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8e63);
        EXPECT(gbc.pc(), 0x476d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0152
        gbc.setState(0x4663, 0xe4ea, 0xc890, 0x9be4, 0xfc07, 0x3472, 0x1, 0x1);
        gbc.writeMem(0x4663, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe4ea);
        EXPECT(gbc.pc(), 0x4665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0154
        gbc.setState(0x2dea, 0xc608, 0xbf50, 0xc0c4, 0x2a54, 0x9f99, 0x0, 0x0);
        gbc.writeMem(0x2dea, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc608);
        EXPECT(gbc.pc(), 0x2dec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0156
        gbc.setState(0x7c4a, 0x776c, 0xc90, 0xa585, 0xab9a, 0x4a4e, 0x0, 0x1);
        gbc.writeMem(0x7c4a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x776c);
        EXPECT(gbc.pc(), 0x7c4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0157
        gbc.setState(0xbb12, 0xe5e9, 0x5520, 0xcce8, 0x63fe, 0x695e, 0x1, 0x0);
        gbc.writeMem(0xbb12, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe5e9);
        EXPECT(gbc.pc(), 0xbb14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb12), 0xcb);
        EXPECT(gbc.readMem(0xbb13), 0xa3);
        // CB A3 0158
        gbc.setState(0x745, 0x1606, 0x3460, 0xdfe4, 0x4d6f, 0x7820, 0x1, 0x1);
        gbc.writeMem(0x745, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1606);
        EXPECT(gbc.pc(), 0x747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0159
        gbc.setState(0x4415, 0xf24f, 0xd260, 0xd5e1, 0xbe8d, 0x6d6a, 0x0, 0x1);
        gbc.writeMem(0x4415, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf24f);
        EXPECT(gbc.pc(), 0x4417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 015A
        gbc.setState(0xa20c, 0xfece, 0xc770, 0x4d74, 0xf46f, 0xb4c7, 0x1, 0x0);
        gbc.writeMem(0xa20c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xfece);
        EXPECT(gbc.pc(), 0xa20e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa20c), 0xcb);
        EXPECT(gbc.readMem(0xa20d), 0xa3);
        // CB A3 015B
        gbc.setState(0xcc0f, 0xab62, 0xd800, 0x3d1d, 0xfcfb, 0xe875, 0x0, 0x1);
        gbc.writeMem(0xcc0f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xab62);
        EXPECT(gbc.pc(), 0xcc11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc0f), 0xcb);
        EXPECT(gbc.readMem(0xcc10), 0xa3);
        // CB A3 015C
        gbc.setState(0x5ba2, 0xc569, 0xd280, 0x5bd6, 0x82c9, 0x61a0, 0x1, 0x1);
        gbc.writeMem(0x5ba2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc569);
        EXPECT(gbc.pc(), 0x5ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 015E
        gbc.setState(0x28e3, 0xec1, 0xe070, 0x7bb1, 0xbd25, 0x9b24, 0x1, 0x1);
        gbc.writeMem(0x28e3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xec1);
        EXPECT(gbc.pc(), 0x28e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 015F
        gbc.setState(0x448, 0x1064, 0xca40, 0xfe03, 0x62ff, 0x45b7, 0x1, 0x1);
        gbc.writeMem(0x448, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1064);
        EXPECT(gbc.pc(), 0x44a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0160
        gbc.setState(0x58f7, 0x9dc6, 0x3610, 0xe48f, 0x9df7, 0x114e, 0x1, 0x1);
        gbc.writeMem(0x58f7, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9dc6);
        EXPECT(gbc.pc(), 0x58f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0161
        gbc.setState(0x3d76, 0x373a, 0xeb0, 0x232d, 0xde53, 0x2f8b, 0x1, 0x1);
        gbc.writeMem(0x3d76, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x373a);
        EXPECT(gbc.pc(), 0x3d78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0162
        gbc.setState(0xa89b, 0x2ec0, 0x10e0, 0xba0a, 0x6ab4, 0x824b, 0x1, 0x1);
        gbc.writeMem(0xa89b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2ec0);
        EXPECT(gbc.pc(), 0xa89d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa89b), 0xcb);
        EXPECT(gbc.readMem(0xa89c), 0xa3);
        // CB A3 0163
        gbc.setState(0xebec, 0xc881, 0x990, 0xd664, 0x5a0f, 0x3c32, 0x1, 0x1);
        gbc.writeMem(0xebec, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc881);
        EXPECT(gbc.pc(), 0xebee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebec), 0xcb);
        EXPECT(gbc.readMem(0xebed), 0xa3);
        // CB A3 0164
        gbc.setState(0x4696, 0x3a90, 0x2870, 0x28ef, 0x5ff8, 0xea75, 0x1, 0x0);
        gbc.writeMem(0x4696, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3a90);
        EXPECT(gbc.pc(), 0x4698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0165
        gbc.setState(0x685b, 0x1a82, 0x95b0, 0x6c5, 0x455e, 0x2b56, 0x0, 0x0);
        gbc.writeMem(0x685b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1a82);
        EXPECT(gbc.pc(), 0x685d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0166
        gbc.setState(0xd170, 0x3197, 0x6640, 0x445c, 0x9394, 0x1dc4, 0x0, 0x1);
        gbc.writeMem(0xd170, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3197);
        EXPECT(gbc.pc(), 0xd172);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd170), 0xcb);
        EXPECT(gbc.readMem(0xd171), 0xa3);
        // CB A3 0167
        gbc.setState(0x6ad9, 0xa13e, 0xedb0, 0xfeaf, 0xab1b, 0xe44b, 0x0, 0x0);
        gbc.writeMem(0x6ad9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa13e);
        EXPECT(gbc.pc(), 0x6adb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0168
        gbc.setState(0x9dec, 0x6535, 0xb1d0, 0xa3aa, 0x1e2d, 0x854c, 0x1, 0x1);
        gbc.writeMem(0x9dec, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6535);
        EXPECT(gbc.pc(), 0x9dee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dec), 0xcb);
        EXPECT(gbc.readMem(0x9ded), 0xa3);
        // CB A3 0169
        gbc.setState(0x99e3, 0x269b, 0x980, 0xbddf, 0x48d3, 0x8bc4, 0x1, 0x0);
        gbc.writeMem(0x99e3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x269b);
        EXPECT(gbc.pc(), 0x99e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e3), 0xcb);
        EXPECT(gbc.readMem(0x99e4), 0xa3);
        // CB A3 016A
        gbc.setState(0x218e, 0x729a, 0xeac0, 0xa44a, 0x9ca6, 0x63a4, 0x0, 0x1);
        gbc.writeMem(0x218e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x729a);
        EXPECT(gbc.pc(), 0x2190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 016B
        gbc.setState(0xa0ec, 0xe0de, 0x1b30, 0x4207, 0x5346, 0xab5a, 0x1, 0x1);
        gbc.writeMem(0xa0ec, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe0de);
        EXPECT(gbc.pc(), 0xa0ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0ec), 0xcb);
        EXPECT(gbc.readMem(0xa0ed), 0xa3);
        // CB A3 016D
        gbc.setState(0xb755, 0x4567, 0xeb0, 0x714f, 0xf17e, 0xeaad, 0x0, 0x0);
        gbc.writeMem(0xb755, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4567);
        EXPECT(gbc.pc(), 0xb757);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb755), 0xcb);
        EXPECT(gbc.readMem(0xb756), 0xa3);
        // CB A3 016E
        gbc.setState(0x63ac, 0x3e70, 0x7410, 0xf706, 0xa79a, 0x396c, 0x0, 0x1);
        gbc.writeMem(0x63ac, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3e70);
        EXPECT(gbc.pc(), 0x63ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 016F
        gbc.setState(0xdbfe, 0x371b, 0x4000, 0xa4a9, 0xe0a, 0xf28, 0x0, 0x0);
        gbc.writeMem(0xdbfe, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x371b);
        EXPECT(gbc.pc(), 0xdc00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbfe), 0xcb);
        EXPECT(gbc.readMem(0xdbff), 0xa3);
        // CB A3 0170
        gbc.setState(0x580b, 0x1f8c, 0x60, 0xc08d, 0xb15b, 0x3d7b, 0x0, 0x1);
        gbc.writeMem(0x580b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1f8c);
        EXPECT(gbc.pc(), 0x580d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0171
        gbc.setState(0x3f50, 0x3ec3, 0xf640, 0xecec, 0x1c0f, 0x491b, 0x0, 0x0);
        gbc.writeMem(0x3f50, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3ec3);
        EXPECT(gbc.pc(), 0x3f52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0172
        gbc.setState(0x4c95, 0xbc55, 0x81e0, 0x887b, 0x3812, 0x6322, 0x0, 0x0);
        gbc.writeMem(0x4c95, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbc55);
        EXPECT(gbc.pc(), 0x4c97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0173
        gbc.setState(0x871f, 0xa2b9, 0x9210, 0x7a2f, 0x6a4b, 0x23de, 0x0, 0x0);
        gbc.writeMem(0x871f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa2b9);
        EXPECT(gbc.pc(), 0x8721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x871f), 0xcb);
        EXPECT(gbc.readMem(0x8720), 0xa3);
        // CB A3 0174
        gbc.setState(0x7c1f, 0xd07d, 0x930, 0xaaac, 0x25c0, 0x1303, 0x1, 0x0);
        gbc.writeMem(0x7c1f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd07d);
        EXPECT(gbc.pc(), 0x7c21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0175
        gbc.setState(0x3066, 0x4edf, 0xba60, 0x2990, 0xff5c, 0xafca, 0x0, 0x0);
        gbc.writeMem(0x3066, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4edf);
        EXPECT(gbc.pc(), 0x3068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0176
        gbc.setState(0x231, 0x8a3f, 0xe070, 0x658c, 0x165e, 0x5a0b, 0x1, 0x0);
        gbc.writeMem(0x231, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8a3f);
        EXPECT(gbc.pc(), 0x233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0177
        gbc.setState(0x25dd, 0x9377, 0x24d0, 0x9b78, 0xafb8, 0x6dd4, 0x1, 0x0);
        gbc.writeMem(0x25dd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9377);
        EXPECT(gbc.pc(), 0x25df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0178
        gbc.setState(0xef84, 0x197e, 0x69c0, 0x6e7a, 0x573a, 0x4dcd, 0x0, 0x0);
        gbc.writeMem(0xef84, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x197e);
        EXPECT(gbc.pc(), 0xef86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef84), 0xcb);
        EXPECT(gbc.readMem(0xef85), 0xa3);
        // CB A3 0179
        gbc.setState(0xde67, 0xd81c, 0x57a0, 0x3475, 0xe370, 0x7086, 0x1, 0x1);
        gbc.writeMem(0xde67, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd81c);
        EXPECT(gbc.pc(), 0xde69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde67), 0xcb);
        EXPECT(gbc.readMem(0xde68), 0xa3);
        // CB A3 017A
        gbc.setState(0xa400, 0x8c95, 0xf710, 0x4ea5, 0xa3e5, 0xb6ae, 0x1, 0x0);
        gbc.writeMem(0xa400, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8c95);
        EXPECT(gbc.pc(), 0xa402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa400), 0xcb);
        EXPECT(gbc.readMem(0xa401), 0xa3);
        // CB A3 017B
        gbc.setState(0x602f, 0x348e, 0xb100, 0x68ed, 0x6f88, 0x59ff, 0x0, 0x0);
        gbc.writeMem(0x602f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x348e);
        EXPECT(gbc.pc(), 0x6031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 017C
        gbc.setState(0x1de0, 0xf2d1, 0x870, 0xa027, 0xda5c, 0x9619, 0x0, 0x1);
        gbc.writeMem(0x1de0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf2d1);
        EXPECT(gbc.pc(), 0x1de2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 017D
        gbc.setState(0xe747, 0xde43, 0x79d0, 0xac54, 0xb968, 0xaa19, 0x0, 0x1);
        gbc.writeMem(0xe747, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xde43);
        EXPECT(gbc.pc(), 0xe749);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe747), 0xcb);
        EXPECT(gbc.readMem(0xe748), 0xa3);
        // CB A3 017E
        gbc.setState(0x80cf, 0xc3d9, 0xabb0, 0x6099, 0x20d9, 0xd679, 0x0, 0x1);
        gbc.writeMem(0x80cf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc3d9);
        EXPECT(gbc.pc(), 0x80d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80cf), 0xcb);
        EXPECT(gbc.readMem(0x80d0), 0xa3);
        // CB A3 0180
        gbc.setState(0x2d8, 0x9fa4, 0xd8f0, 0xaf08, 0xb983, 0x1761, 0x0, 0x0);
        gbc.writeMem(0x2d8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9fa4);
        EXPECT(gbc.pc(), 0x2da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0181
        gbc.setState(0xed4, 0xac07, 0x48d0, 0x2d50, 0xf01a, 0x526d, 0x0, 0x0);
        gbc.writeMem(0xed4, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xac07);
        EXPECT(gbc.pc(), 0xed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0182
        gbc.setState(0xd8d6, 0xb58a, 0x2680, 0x6057, 0xb686, 0x1ecc, 0x1, 0x0);
        gbc.writeMem(0xd8d6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb58a);
        EXPECT(gbc.pc(), 0xd8d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d6), 0xcb);
        EXPECT(gbc.readMem(0xd8d7), 0xa3);
        // CB A3 0183
        gbc.setState(0xe1a6, 0xb81f, 0xdb80, 0x534b, 0x51a1, 0x69c7, 0x0, 0x0);
        gbc.writeMem(0xe1a6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb81f);
        EXPECT(gbc.pc(), 0xe1a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a6), 0xcb);
        EXPECT(gbc.readMem(0xe1a7), 0xa3);
        // CB A3 0184
        gbc.setState(0xfd0, 0x50a0, 0x2b90, 0x83ce, 0x2e46, 0xf128, 0x0, 0x0);
        gbc.writeMem(0xfd0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x50a0);
        EXPECT(gbc.pc(), 0xfd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0185
        gbc.setState(0xe5e0, 0xed3, 0x57e0, 0x3e0b, 0xf7f, 0xfb26, 0x0, 0x0);
        gbc.writeMem(0xe5e0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xed3);
        EXPECT(gbc.pc(), 0xe5e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e0), 0xcb);
        EXPECT(gbc.readMem(0xe5e1), 0xa3);
        // CB A3 0186
        gbc.setState(0x626, 0xdc8a, 0xa9a0, 0x634, 0x4e4c, 0x5198, 0x0, 0x0);
        gbc.writeMem(0x626, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xdc8a);
        EXPECT(gbc.pc(), 0x628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0187
        gbc.setState(0x58cd, 0x41e5, 0x4ac0, 0x86cc, 0x652d, 0xccfb, 0x1, 0x1);
        gbc.writeMem(0x58cd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x41e5);
        EXPECT(gbc.pc(), 0x58cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0188
        gbc.setState(0x1191, 0xd282, 0x9850, 0x7a22, 0xfaa4, 0x1e1f, 0x0, 0x1);
        gbc.writeMem(0x1191, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd282);
        EXPECT(gbc.pc(), 0x1193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0189
        gbc.setState(0xe466, 0xd75a, 0xe4d0, 0x329d, 0x1a40, 0x598b, 0x1, 0x1);
        gbc.writeMem(0xe466, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd75a);
        EXPECT(gbc.pc(), 0xe468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe466), 0xcb);
        EXPECT(gbc.readMem(0xe467), 0xa3);
        // CB A3 018A
        gbc.setState(0x7d0f, 0x65e1, 0xac20, 0xb6e1, 0x723d, 0xdb2f, 0x0, 0x1);
        gbc.writeMem(0x7d0f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x65e1);
        EXPECT(gbc.pc(), 0x7d11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 018B
        gbc.setState(0xd8ce, 0x8558, 0xdcc0, 0xf4d8, 0x7bce, 0xcfce, 0x1, 0x0);
        gbc.writeMem(0xd8ce, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8558);
        EXPECT(gbc.pc(), 0xd8d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ce), 0xcb);
        EXPECT(gbc.readMem(0xd8cf), 0xa3);
        // CB A3 018C
        gbc.setState(0x662c, 0x21c2, 0xb20, 0xf0b7, 0xec51, 0x3f24, 0x1, 0x0);
        gbc.writeMem(0x662c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x21c2);
        EXPECT(gbc.pc(), 0x662e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 018D
        gbc.setState(0x1161, 0xa755, 0x99b0, 0x795b, 0xe908, 0xbf1e, 0x1, 0x1);
        gbc.writeMem(0x1161, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa755);
        EXPECT(gbc.pc(), 0x1163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 018F
        gbc.setState(0xa667, 0xa7e1, 0xb830, 0xacc, 0xcfef, 0x2b33, 0x1, 0x0);
        gbc.writeMem(0xa667, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa7e1);
        EXPECT(gbc.pc(), 0xa669);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa667), 0xcb);
        EXPECT(gbc.readMem(0xa668), 0xa3);
        // CB A3 0190
        gbc.setState(0x1c93, 0x2245, 0xf870, 0x7e33, 0x3fa6, 0xcdce, 0x0, 0x1);
        gbc.writeMem(0x1c93, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2245);
        EXPECT(gbc.pc(), 0x1c95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0191
        gbc.setState(0xd586, 0xf2bc, 0xe7b0, 0xcd46, 0x3e3a, 0x8d19, 0x0, 0x0);
        gbc.writeMem(0xd586, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf2bc);
        EXPECT(gbc.pc(), 0xd588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd586), 0xcb);
        EXPECT(gbc.readMem(0xd587), 0xa3);
        // CB A3 0192
        gbc.setState(0x4245, 0xea84, 0xe280, 0xc9c9, 0x1a63, 0x4296, 0x0, 0x0);
        gbc.writeMem(0x4245, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xea84);
        EXPECT(gbc.pc(), 0x4247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0193
        gbc.setState(0x3887, 0xbd23, 0x8a70, 0xcb1d, 0x3139, 0x816a, 0x1, 0x1);
        gbc.writeMem(0x3887, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xbd23);
        EXPECT(gbc.pc(), 0x3889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0194
        gbc.setState(0xa471, 0x1388, 0xb070, 0x79bd, 0xe371, 0x3ce3, 0x0, 0x1);
        gbc.writeMem(0xa471, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1388);
        EXPECT(gbc.pc(), 0xa473);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa471), 0xcb);
        EXPECT(gbc.readMem(0xa472), 0xa3);
        // CB A3 0195
        gbc.setState(0xa730, 0xd66, 0xc680, 0xf0d0, 0x6f43, 0xa78d, 0x1, 0x1);
        gbc.writeMem(0xa730, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd66);
        EXPECT(gbc.pc(), 0xa732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa730), 0xcb);
        EXPECT(gbc.readMem(0xa731), 0xa3);
        // CB A3 0196
        gbc.setState(0x45ff, 0xc3cc, 0x3cf0, 0x8b27, 0x1155, 0xbb8e, 0x0, 0x0);
        gbc.writeMem(0x45ff, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc3cc);
        EXPECT(gbc.pc(), 0x4601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0197
        gbc.setState(0x167d, 0x1c4b, 0x6a50, 0x2395, 0x889d, 0x8187, 0x1, 0x0);
        gbc.writeMem(0x167d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1c4b);
        EXPECT(gbc.pc(), 0x167f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0198
        gbc.setState(0xde4e, 0x9e91, 0xabc0, 0xfa0b, 0xe824, 0xa9b1, 0x0, 0x1);
        gbc.writeMem(0xde4e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9e91);
        EXPECT(gbc.pc(), 0xde50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde4e), 0xcb);
        EXPECT(gbc.readMem(0xde4f), 0xa3);
        // CB A3 019A
        gbc.setState(0xb1cf, 0x119d, 0xe5b0, 0x8b7b, 0x4f1d, 0x20de, 0x0, 0x0);
        gbc.writeMem(0xb1cf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x119d);
        EXPECT(gbc.pc(), 0xb1d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1cf), 0xcb);
        EXPECT(gbc.readMem(0xb1d0), 0xa3);
        // CB A3 019B
        gbc.setState(0xa91c, 0xe15d, 0xb170, 0x875f, 0xfc0a, 0x665d, 0x0, 0x1);
        gbc.writeMem(0xa91c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe15d);
        EXPECT(gbc.pc(), 0xa91e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa91c), 0xcb);
        EXPECT(gbc.readMem(0xa91d), 0xa3);
        // CB A3 019C
        gbc.setState(0x3fef, 0x8871, 0x4480, 0x2c0b, 0xc69f, 0xfece, 0x0, 0x1);
        gbc.writeMem(0x3fef, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8871);
        EXPECT(gbc.pc(), 0x3ff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 019D
        gbc.setState(0x1a2b, 0x8af9, 0x4970, 0x817d, 0xb28b, 0x266f, 0x0, 0x0);
        gbc.writeMem(0x1a2b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8af9);
        EXPECT(gbc.pc(), 0x1a2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 019E
        gbc.setState(0xa5b6, 0xf861, 0xced0, 0xc3, 0x87f8, 0x9ff0, 0x0, 0x0);
        gbc.writeMem(0xa5b6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf861);
        EXPECT(gbc.pc(), 0xa5b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5b6), 0xcb);
        EXPECT(gbc.readMem(0xa5b7), 0xa3);
        // CB A3 019F
        gbc.setState(0x2344, 0x66e1, 0x53d0, 0xbef5, 0xbd6, 0xdb27, 0x0, 0x1);
        gbc.writeMem(0x2344, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x66e1);
        EXPECT(gbc.pc(), 0x2346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01A0
        gbc.setState(0xc94, 0x87a8, 0xd470, 0x41b3, 0xe5ee, 0x2cc8, 0x1, 0x1);
        gbc.writeMem(0xc94, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x87a8);
        EXPECT(gbc.pc(), 0xc96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01A2
        gbc.setState(0xb6d3, 0xc146, 0xa840, 0x611a, 0x200, 0x31af, 0x0, 0x0);
        gbc.writeMem(0xb6d3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc146);
        EXPECT(gbc.pc(), 0xb6d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d3), 0xcb);
        EXPECT(gbc.readMem(0xb6d4), 0xa3);
        // CB A3 01A3
        gbc.setState(0x1183, 0xfa4, 0xd110, 0xc32b, 0x891e, 0x79df, 0x0, 0x0);
        gbc.writeMem(0x1183, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfa4);
        EXPECT(gbc.pc(), 0x1185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01A4
        gbc.setState(0x40f8, 0xa4b8, 0xf2b0, 0x598, 0x61b, 0xb162, 0x1, 0x0);
        gbc.writeMem(0x40f8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa4b8);
        EXPECT(gbc.pc(), 0x40fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01A5
        gbc.setState(0x7eb7, 0xc30d, 0xe410, 0xb15b, 0xd967, 0x38e1, 0x1, 0x0);
        gbc.writeMem(0x7eb7, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc30d);
        EXPECT(gbc.pc(), 0x7eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01A6
        gbc.setState(0x245a, 0x9f22, 0x2d70, 0x9bb3, 0xb08a, 0x5f31, 0x0, 0x1);
        gbc.writeMem(0x245a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9f22);
        EXPECT(gbc.pc(), 0x245c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01A7
        gbc.setState(0x1401, 0x1802, 0xf540, 0x2fb0, 0x7b99, 0x3da, 0x0, 0x0);
        gbc.writeMem(0x1401, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1802);
        EXPECT(gbc.pc(), 0x1403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01A8
        gbc.setState(0xa2aa, 0x40ea, 0xe450, 0x54d6, 0xb4da, 0x73c4, 0x0, 0x1);
        gbc.writeMem(0xa2aa, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x40ea);
        EXPECT(gbc.pc(), 0xa2ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2aa), 0xcb);
        EXPECT(gbc.readMem(0xa2ab), 0xa3);
        // CB A3 01AA
        gbc.setState(0xe229, 0x561b, 0x720, 0x325e, 0x75ef, 0xb11b, 0x1, 0x1);
        gbc.writeMem(0xe229, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x561b);
        EXPECT(gbc.pc(), 0xe22b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe229), 0xcb);
        EXPECT(gbc.readMem(0xe22a), 0xa3);
        // CB A3 01AB
        gbc.setState(0xc4d0, 0x8982, 0x42b0, 0xe7f9, 0x610f, 0xfc5e, 0x1, 0x0);
        gbc.writeMem(0xc4d0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8982);
        EXPECT(gbc.pc(), 0xc4d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4d0), 0xcb);
        EXPECT(gbc.readMem(0xc4d1), 0xa3);
        // CB A3 01AC
        gbc.setState(0xcdce, 0x69a9, 0xcd10, 0x533d, 0x1bd, 0xf374, 0x0, 0x0);
        gbc.writeMem(0xcdce, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x69a9);
        EXPECT(gbc.pc(), 0xcdd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdce), 0xcb);
        EXPECT(gbc.readMem(0xcdcf), 0xa3);
        // CB A3 01AD
        gbc.setState(0x86c7, 0x4c33, 0x8ab0, 0x726, 0xe35b, 0x9d13, 0x0, 0x0);
        gbc.writeMem(0x86c7, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4c33);
        EXPECT(gbc.pc(), 0x86c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c7), 0xcb);
        EXPECT(gbc.readMem(0x86c8), 0xa3);
        // CB A3 01AE
        gbc.setState(0xaaf8, 0x68c8, 0x7fe0, 0x986a, 0xbdec, 0x69cd, 0x1, 0x0);
        gbc.writeMem(0xaaf8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x68c8);
        EXPECT(gbc.pc(), 0xaafa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf8), 0xcb);
        EXPECT(gbc.readMem(0xaaf9), 0xa3);
        // CB A3 01AF
        gbc.setState(0xe593, 0x635c, 0x6ca0, 0x9c2b, 0x8a0b, 0x13e4, 0x0, 0x1);
        gbc.writeMem(0xe593, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x635c);
        EXPECT(gbc.pc(), 0xe595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe593), 0xcb);
        EXPECT(gbc.readMem(0xe594), 0xa3);
        // CB A3 01B0
        gbc.setState(0x9b40, 0x27c6, 0x7ce0, 0x5a53, 0xd635, 0x1b8b, 0x1, 0x0);
        gbc.writeMem(0x9b40, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x27c6);
        EXPECT(gbc.pc(), 0x9b42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b40), 0xcb);
        EXPECT(gbc.readMem(0x9b41), 0xa3);
        // CB A3 01B1
        gbc.setState(0x5856, 0x5e92, 0x3f20, 0xa8f3, 0x6c39, 0x4e1b, 0x1, 0x0);
        gbc.writeMem(0x5856, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5e92);
        EXPECT(gbc.pc(), 0x5858);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01B2
        gbc.setState(0x871d, 0x5939, 0xc3d0, 0x3980, 0xa0e, 0x9cf7, 0x1, 0x0);
        gbc.writeMem(0x871d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5939);
        EXPECT(gbc.pc(), 0x871f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x871d), 0xcb);
        EXPECT(gbc.readMem(0x871e), 0xa3);
        // CB A3 01B3
        gbc.setState(0x955e, 0x71d7, 0x80f0, 0xabc0, 0x812, 0x405a, 0x0, 0x0);
        gbc.writeMem(0x955e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x71d7);
        EXPECT(gbc.pc(), 0x9560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x955e), 0xcb);
        EXPECT(gbc.readMem(0x955f), 0xa3);
        // CB A3 01B4
        gbc.setState(0x13b4, 0x32d0, 0x3970, 0x2de8, 0x5a40, 0xf919, 0x0, 0x0);
        gbc.writeMem(0x13b4, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x32d0);
        EXPECT(gbc.pc(), 0x13b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01B6
        gbc.setState(0x6cec, 0x70ca, 0xa830, 0x9d0f, 0x4ab, 0x5722, 0x0, 0x1);
        gbc.writeMem(0x6cec, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x70ca);
        EXPECT(gbc.pc(), 0x6cee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01B7
        gbc.setState(0x3462, 0x3eca, 0xdbc0, 0x4a23, 0x7227, 0x12c5, 0x1, 0x0);
        gbc.writeMem(0x3462, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3eca);
        EXPECT(gbc.pc(), 0x3464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01B8
        gbc.setState(0xdb55, 0x85b2, 0xdd10, 0xa80f, 0xb648, 0x9e3, 0x1, 0x1);
        gbc.writeMem(0xdb55, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x85b2);
        EXPECT(gbc.pc(), 0xdb57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb55), 0xcb);
        EXPECT(gbc.readMem(0xdb56), 0xa3);
        // CB A3 01B9
        gbc.setState(0x38b5, 0x2348, 0x3750, 0x1a6, 0x5ae, 0xce22, 0x0, 0x0);
        gbc.writeMem(0x38b5, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2348);
        EXPECT(gbc.pc(), 0x38b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01BA
        gbc.setState(0x2368, 0x1646, 0x2580, 0x12e1, 0xf1f6, 0x48e5, 0x0, 0x0);
        gbc.writeMem(0x2368, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1646);
        EXPECT(gbc.pc(), 0x236a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01BB
        gbc.setState(0x11fc, 0xb2b0, 0x95d0, 0xf5f2, 0x6c78, 0xcbc, 0x0, 0x1);
        gbc.writeMem(0x11fc, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb2b0);
        EXPECT(gbc.pc(), 0x11fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01BC
        gbc.setState(0xdc98, 0xfd9, 0xb1f0, 0x106f, 0x207a, 0x859c, 0x0, 0x0);
        gbc.writeMem(0xdc98, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xfd9);
        EXPECT(gbc.pc(), 0xdc9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc98), 0xcb);
        EXPECT(gbc.readMem(0xdc99), 0xa3);
        // CB A3 01BD
        gbc.setState(0x70bf, 0x336b, 0x7450, 0xb496, 0x496f, 0xd992, 0x1, 0x1);
        gbc.writeMem(0x70bf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x336b);
        EXPECT(gbc.pc(), 0x70c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01BE
        gbc.setState(0xdbf2, 0x740c, 0x3c20, 0x7414, 0xf963, 0xb89c, 0x0, 0x0);
        gbc.writeMem(0xdbf2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x740c);
        EXPECT(gbc.pc(), 0xdbf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbf2), 0xcb);
        EXPECT(gbc.readMem(0xdbf3), 0xa3);
        // CB A3 01BF
        gbc.setState(0x78d5, 0x5293, 0x9070, 0xd2e6, 0x74d5, 0x8016, 0x0, 0x0);
        gbc.writeMem(0x78d5, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5293);
        EXPECT(gbc.pc(), 0x78d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01C0
        gbc.setState(0x4ed4, 0xb63e, 0x2d90, 0x7b7e, 0x8a03, 0xeae7, 0x1, 0x1);
        gbc.writeMem(0x4ed4, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb63e);
        EXPECT(gbc.pc(), 0x4ed6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01C1
        gbc.setState(0x7aa7, 0x30e4, 0xba00, 0x2bd5, 0x8f2b, 0xba7c, 0x1, 0x0);
        gbc.writeMem(0x7aa7, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x30e4);
        EXPECT(gbc.pc(), 0x7aa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01C2
        gbc.setState(0xbbbb, 0x2554, 0x7410, 0x9507, 0xdd9e, 0xc942, 0x1, 0x1);
        gbc.writeMem(0xbbbb, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2554);
        EXPECT(gbc.pc(), 0xbbbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbbb), 0xcb);
        EXPECT(gbc.readMem(0xbbbc), 0xa3);
        // CB A3 01C3
        gbc.setState(0x7431, 0x3cef, 0x2d80, 0xe97, 0x32a8, 0x6f45, 0x0, 0x0);
        gbc.writeMem(0x7431, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3cef);
        EXPECT(gbc.pc(), 0x7433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01C4
        gbc.setState(0x114, 0xb0ec, 0x90a0, 0x1d6c, 0x6551, 0x2a35, 0x1, 0x0);
        gbc.writeMem(0x114, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb0ec);
        EXPECT(gbc.pc(), 0x116);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01C5
        gbc.setState(0x42e4, 0xbd27, 0x2520, 0xb799, 0x4cf8, 0x570d, 0x1, 0x0);
        gbc.writeMem(0x42e4, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xbd27);
        EXPECT(gbc.pc(), 0x42e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01C6
        gbc.setState(0xcbd1, 0x30, 0xb910, 0x6721, 0x2122, 0xf078, 0x1, 0x1);
        gbc.writeMem(0xcbd1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x30);
        EXPECT(gbc.pc(), 0xcbd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbd1), 0xcb);
        EXPECT(gbc.readMem(0xcbd2), 0xa3);
        // CB A3 01C7
        gbc.setState(0x9c87, 0xb579, 0xdca0, 0xbdc7, 0x9659, 0x507c, 0x0, 0x0);
        gbc.writeMem(0x9c87, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb579);
        EXPECT(gbc.pc(), 0x9c89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c87), 0xcb);
        EXPECT(gbc.readMem(0x9c88), 0xa3);
        // CB A3 01C8
        gbc.setState(0xd2be, 0x9336, 0x7c40, 0x15b4, 0xb3da, 0xe8e6, 0x0, 0x1);
        gbc.writeMem(0xd2be, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9336);
        EXPECT(gbc.pc(), 0xd2c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2be), 0xcb);
        EXPECT(gbc.readMem(0xd2bf), 0xa3);
        // CB A3 01C9
        gbc.setState(0x6c4, 0x7f40, 0x2100, 0x630a, 0x159f, 0x7078, 0x0, 0x1);
        gbc.writeMem(0x6c4, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7f40);
        EXPECT(gbc.pc(), 0x6c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01CA
        gbc.setState(0xbd29, 0xaa7b, 0x1ca0, 0x90ac, 0x8909, 0x4a7e, 0x0, 0x0);
        gbc.writeMem(0xbd29, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xaa7b);
        EXPECT(gbc.pc(), 0xbd2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd29), 0xcb);
        EXPECT(gbc.readMem(0xbd2a), 0xa3);
        // CB A3 01CB
        gbc.setState(0xa00f, 0x41d4, 0xca70, 0x7ef, 0xf0c9, 0x8, 0x0, 0x0);
        gbc.writeMem(0xa00f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x41d4);
        EXPECT(gbc.pc(), 0xa011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa00f), 0xcb);
        EXPECT(gbc.readMem(0xa010), 0xa3);
        // CB A3 01CC
        gbc.setState(0x89d, 0x9b03, 0x76f0, 0x6b8b, 0x1f82, 0xc693, 0x0, 0x0);
        gbc.writeMem(0x89d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9b03);
        EXPECT(gbc.pc(), 0x89f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01CD
        gbc.setState(0x889c, 0xb59f, 0xc160, 0x3c20, 0x4860, 0xe5b9, 0x0, 0x0);
        gbc.writeMem(0x889c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb59f);
        EXPECT(gbc.pc(), 0x889e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x889c), 0xcb);
        EXPECT(gbc.readMem(0x889d), 0xa3);
        // CB A3 01CE
        gbc.setState(0x6334, 0x3c4d, 0x75a0, 0xabdc, 0xe596, 0x9534, 0x1, 0x1);
        gbc.writeMem(0x6334, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3c4d);
        EXPECT(gbc.pc(), 0x6336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01CF
        gbc.setState(0xfa7, 0x78a, 0x8550, 0x3430, 0xdaa8, 0xaa04, 0x0, 0x1);
        gbc.writeMem(0xfa7, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x78a);
        EXPECT(gbc.pc(), 0xfa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01D0
        gbc.setState(0x7197, 0x1ba4, 0x94c0, 0x1ddc, 0xc26a, 0xa73d, 0x0, 0x1);
        gbc.writeMem(0x7197, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1ba4);
        EXPECT(gbc.pc(), 0x7199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01D1
        gbc.setState(0x99a8, 0x14fc, 0xf880, 0x4e09, 0xdaa1, 0xffbb, 0x1, 0x0);
        gbc.writeMem(0x99a8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x14fc);
        EXPECT(gbc.pc(), 0x99aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99a8), 0xcb);
        EXPECT(gbc.readMem(0x99a9), 0xa3);
        // CB A3 01D2
        gbc.setState(0x78c4, 0x49ee, 0x3d50, 0xd192, 0x3e63, 0x9538, 0x1, 0x0);
        gbc.writeMem(0x78c4, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x49ee);
        EXPECT(gbc.pc(), 0x78c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01D5
        gbc.setState(0xca4c, 0x6824, 0x8cb0, 0xb36e, 0x5881, 0xe2e0, 0x0, 0x1);
        gbc.writeMem(0xca4c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6824);
        EXPECT(gbc.pc(), 0xca4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca4c), 0xcb);
        EXPECT(gbc.readMem(0xca4d), 0xa3);
        // CB A3 01D6
        gbc.setState(0x23b4, 0x1606, 0x39b0, 0xca0c, 0x788e, 0x74e4, 0x1, 0x0);
        gbc.writeMem(0x23b4, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1606);
        EXPECT(gbc.pc(), 0x23b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01D7
        gbc.setState(0x3df2, 0xb38f, 0xd40, 0x8b08, 0x334d, 0x3c2, 0x0, 0x1);
        gbc.writeMem(0x3df2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb38f);
        EXPECT(gbc.pc(), 0x3df4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01D8
        gbc.setState(0x688e, 0xd2c5, 0x6660, 0xed4c, 0xf9e3, 0xa63e, 0x1, 0x0);
        gbc.writeMem(0x688e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd2c5);
        EXPECT(gbc.pc(), 0x6890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01D9
        gbc.setState(0x826e, 0x4e4d, 0xc6d0, 0x9eff, 0x8111, 0xdb20, 0x1, 0x0);
        gbc.writeMem(0x826e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4e4d);
        EXPECT(gbc.pc(), 0x8270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x826e), 0xcb);
        EXPECT(gbc.readMem(0x826f), 0xa3);
        // CB A3 01DA
        gbc.setState(0xde42, 0x4448, 0x86b0, 0xf2c6, 0xb997, 0xaed3, 0x0, 0x1);
        gbc.writeMem(0xde42, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4448);
        EXPECT(gbc.pc(), 0xde44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde42), 0xcb);
        EXPECT(gbc.readMem(0xde43), 0xa3);
        // CB A3 01DB
        gbc.setState(0x246c, 0x60ed, 0xd410, 0xaeb8, 0x4ddd, 0xa362, 0x0, 0x1);
        gbc.writeMem(0x246c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x60ed);
        EXPECT(gbc.pc(), 0x246e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01DC
        gbc.setState(0xb055, 0x75e5, 0xfa20, 0x1e9a, 0x9f00, 0x25d4, 0x1, 0x1);
        gbc.writeMem(0xb055, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x75e5);
        EXPECT(gbc.pc(), 0xb057);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb055), 0xcb);
        EXPECT(gbc.readMem(0xb056), 0xa3);
        // CB A3 01DD
        gbc.setState(0xc5e0, 0x3e7d, 0xa6a0, 0xd176, 0xa659, 0x4d24, 0x1, 0x1);
        gbc.writeMem(0xc5e0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3e7d);
        EXPECT(gbc.pc(), 0xc5e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5e0), 0xcb);
        EXPECT(gbc.readMem(0xc5e1), 0xa3);
        // CB A3 01DE
        gbc.setState(0x238e, 0x68a9, 0xc500, 0x839a, 0x7035, 0x48a1, 0x0, 0x1);
        gbc.writeMem(0x238e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x68a9);
        EXPECT(gbc.pc(), 0x2390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01DF
        gbc.setState(0x3e38, 0xc9ee, 0xf8c0, 0xe820, 0x5948, 0x47cb, 0x0, 0x0);
        gbc.writeMem(0x3e38, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc9ee);
        EXPECT(gbc.pc(), 0x3e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01E0
        gbc.setState(0x7c87, 0x4ca8, 0xcc60, 0xee91, 0x5d93, 0xe718, 0x0, 0x0);
        gbc.writeMem(0x7c87, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4ca8);
        EXPECT(gbc.pc(), 0x7c89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01E1
        gbc.setState(0x1538, 0x960e, 0x7ee0, 0x66c6, 0xe5c1, 0xb519, 0x0, 0x0);
        gbc.writeMem(0x1538, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x960e);
        EXPECT(gbc.pc(), 0x153a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01E2
        gbc.setState(0xeaae, 0xd285, 0xe520, 0x19a2, 0xd24e, 0x15cf, 0x1, 0x0);
        gbc.writeMem(0xeaae, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd285);
        EXPECT(gbc.pc(), 0xeab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaae), 0xcb);
        EXPECT(gbc.readMem(0xeaaf), 0xa3);
        // CB A3 01E3
        gbc.setState(0x1ff0, 0x6c36, 0x65e0, 0xf6ed, 0xeba4, 0x2a72, 0x0, 0x0);
        gbc.writeMem(0x1ff0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6c36);
        EXPECT(gbc.pc(), 0x1ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01E4
        gbc.setState(0x1d56, 0x1eee, 0xbcc0, 0xab8e, 0x8607, 0x75d6, 0x0, 0x0);
        gbc.writeMem(0x1d56, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1eee);
        EXPECT(gbc.pc(), 0x1d58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01E5
        gbc.setState(0x9efb, 0xa33e, 0x3660, 0xa856, 0x986a, 0xa750, 0x1, 0x1);
        gbc.writeMem(0x9efb, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa33e);
        EXPECT(gbc.pc(), 0x9efd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9efb), 0xcb);
        EXPECT(gbc.readMem(0x9efc), 0xa3);
        // CB A3 01E6
        gbc.setState(0xa271, 0x9989, 0x8060, 0x8cba, 0x1fab, 0x35f7, 0x1, 0x0);
        gbc.writeMem(0xa271, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9989);
        EXPECT(gbc.pc(), 0xa273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa271), 0xcb);
        EXPECT(gbc.readMem(0xa272), 0xa3);
        // CB A3 01E7
        gbc.setState(0x3e8d, 0x2233, 0x6c30, 0x1320, 0x39ad, 0xef85, 0x0, 0x0);
        gbc.writeMem(0x3e8d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2233);
        EXPECT(gbc.pc(), 0x3e8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01E8
        gbc.setState(0x276, 0x46ab, 0x9c50, 0xc862, 0x3991, 0xe28, 0x0, 0x0);
        gbc.writeMem(0x276, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x46ab);
        EXPECT(gbc.pc(), 0x278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01E9
        gbc.setState(0xc1e1, 0xd4d1, 0xbd70, 0xecc3, 0xa6d4, 0x3ec4, 0x1, 0x0);
        gbc.writeMem(0xc1e1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd4d1);
        EXPECT(gbc.pc(), 0xc1e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e1), 0xcb);
        EXPECT(gbc.readMem(0xc1e2), 0xa3);
        // CB A3 01EA
        gbc.setState(0xaba4, 0x909e, 0xd760, 0xfdb, 0xf313, 0xbbc, 0x0, 0x0);
        gbc.writeMem(0xaba4, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x909e);
        EXPECT(gbc.pc(), 0xaba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba4), 0xcb);
        EXPECT(gbc.readMem(0xaba5), 0xa3);
        // CB A3 01EB
        gbc.setState(0xbe93, 0x89ba, 0xe030, 0xa058, 0x56de, 0xd75a, 0x0, 0x1);
        gbc.writeMem(0xbe93, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x89ba);
        EXPECT(gbc.pc(), 0xbe95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe93), 0xcb);
        EXPECT(gbc.readMem(0xbe94), 0xa3);
        // CB A3 01EC
        gbc.setState(0xca4f, 0x3c21, 0x5910, 0xf7a1, 0x9719, 0xfb45, 0x1, 0x0);
        gbc.writeMem(0xca4f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3c21);
        EXPECT(gbc.pc(), 0xca51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca4f), 0xcb);
        EXPECT(gbc.readMem(0xca50), 0xa3);
        // CB A3 01ED
        gbc.setState(0x294c, 0xc577, 0xc3e0, 0x2bb5, 0x25a9, 0xbc36, 0x1, 0x0);
        gbc.writeMem(0x294c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc577);
        EXPECT(gbc.pc(), 0x294e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01EE
        gbc.setState(0xb271, 0x7c39, 0x5710, 0x403a, 0x241b, 0x42e4, 0x1, 0x1);
        gbc.writeMem(0xb271, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7c39);
        EXPECT(gbc.pc(), 0xb273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb271), 0xcb);
        EXPECT(gbc.readMem(0xb272), 0xa3);
        // CB A3 01EF
        gbc.setState(0xd41a, 0xcf3d, 0xedb0, 0xd341, 0xb178, 0xa7b, 0x0, 0x0);
        gbc.writeMem(0xd41a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xcf3d);
        EXPECT(gbc.pc(), 0xd41c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd41a), 0xcb);
        EXPECT(gbc.readMem(0xd41b), 0xa3);
        // CB A3 01F0
        gbc.setState(0x6a4, 0x377c, 0xaff0, 0x39ff, 0xfb63, 0xe50, 0x0, 0x0);
        gbc.writeMem(0x6a4, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x377c);
        EXPECT(gbc.pc(), 0x6a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01F1
        gbc.setState(0x17a1, 0x2f1c, 0x9f80, 0x28a8, 0xdfeb, 0xa688, 0x0, 0x0);
        gbc.writeMem(0x17a1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2f1c);
        EXPECT(gbc.pc(), 0x17a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01F2
        gbc.setState(0xa69e, 0x4bcf, 0xebe0, 0x1f75, 0x87e5, 0xb0a2, 0x1, 0x1);
        gbc.writeMem(0xa69e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4bcf);
        EXPECT(gbc.pc(), 0xa6a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa69e), 0xcb);
        EXPECT(gbc.readMem(0xa69f), 0xa3);
        // CB A3 01F3
        gbc.setState(0xcdbf, 0xc4f3, 0xb080, 0x4526, 0x1173, 0x580e, 0x1, 0x0);
        gbc.writeMem(0xcdbf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc4f3);
        EXPECT(gbc.pc(), 0xcdc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdbf), 0xcb);
        EXPECT(gbc.readMem(0xcdc0), 0xa3);
        // CB A3 01F4
        gbc.setState(0xd49a, 0x535, 0x53f0, 0xa1ef, 0x4250, 0x519d, 0x1, 0x0);
        gbc.writeMem(0xd49a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x535);
        EXPECT(gbc.pc(), 0xd49c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd49a), 0xcb);
        EXPECT(gbc.readMem(0xd49b), 0xa3);
        // CB A3 01F5
        gbc.setState(0xa186, 0xd2d9, 0xc630, 0x8fa8, 0x23f9, 0x3c20, 0x1, 0x1);
        gbc.writeMem(0xa186, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd2d9);
        EXPECT(gbc.pc(), 0xa188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa186), 0xcb);
        EXPECT(gbc.readMem(0xa187), 0xa3);
        // CB A3 01F6
        gbc.setState(0xe00b, 0x8603, 0xdc30, 0x634, 0xf119, 0x54e7, 0x1, 0x1);
        gbc.writeMem(0xe00b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8603);
        EXPECT(gbc.pc(), 0xe00d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe00b), 0xcb);
        EXPECT(gbc.readMem(0xe00c), 0xa3);
        // CB A3 01F7
        gbc.setState(0xe270, 0x9092, 0xf270, 0xbb7f, 0x7ae2, 0x5373, 0x1, 0x0);
        gbc.writeMem(0xe270, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9092);
        EXPECT(gbc.pc(), 0xe272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe270), 0xcb);
        EXPECT(gbc.readMem(0xe271), 0xa3);
        // CB A3 01F8
        gbc.setState(0x411a, 0xfaf8, 0x11f0, 0x1b0, 0xcd08, 0xc27d, 0x1, 0x1);
        gbc.writeMem(0x411a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfaf8);
        EXPECT(gbc.pc(), 0x411c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 01F9
        gbc.setState(0x86b9, 0x5389, 0x95e0, 0xfada, 0x5b0, 0x8677, 0x1, 0x0);
        gbc.writeMem(0x86b9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5389);
        EXPECT(gbc.pc(), 0x86bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b9), 0xcb);
        EXPECT(gbc.readMem(0x86ba), 0xa3);
        // CB A3 01FA
        gbc.setState(0xde0d, 0xcbfe, 0xa8f0, 0x97a5, 0x6719, 0xfebe, 0x1, 0x1);
        gbc.writeMem(0xde0d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xcbfe);
        EXPECT(gbc.pc(), 0xde0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde0d), 0xcb);
        EXPECT(gbc.readMem(0xde0e), 0xa3);
        // CB A3 01FB
        gbc.setState(0x160, 0xbef, 0x2920, 0x3642, 0x3fb9, 0x4763, 0x1, 0x1);
        gbc.writeMem(0x160, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbef);
        EXPECT(gbc.pc(), 0x162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 01FD
        gbc.setState(0xda56, 0xb435, 0x2f40, 0x695a, 0xf00e, 0x1d89, 0x1, 0x1);
        gbc.writeMem(0xda56, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb435);
        EXPECT(gbc.pc(), 0xda58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda56), 0xcb);
        EXPECT(gbc.readMem(0xda57), 0xa3);
        // CB A3 01FE
        gbc.setState(0x9da6, 0xa924, 0xd0d0, 0xb4e5, 0x3c4d, 0x1653, 0x1, 0x1);
        gbc.writeMem(0x9da6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa924);
        EXPECT(gbc.pc(), 0x9da8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da6), 0xcb);
        EXPECT(gbc.readMem(0x9da7), 0xa3);
        // CB A3 01FF
        gbc.setState(0x9dbc, 0x9d85, 0x9100, 0x4089, 0xcc4f, 0x9d59, 0x0, 0x0);
        gbc.writeMem(0x9dbc, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9d85);
        EXPECT(gbc.pc(), 0x9dbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dbc), 0xcb);
        EXPECT(gbc.readMem(0x9dbd), 0xa3);
        // CB A3 0200
        gbc.setState(0x1597, 0x7bf6, 0x870, 0x9a70, 0x9633, 0x6d, 0x0, 0x1);
        gbc.writeMem(0x1597, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7bf6);
        EXPECT(gbc.pc(), 0x1599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0201
        gbc.setState(0x368a, 0xf88b, 0x62e0, 0x5686, 0x12e, 0xbdf0, 0x0, 0x0);
        gbc.writeMem(0x368a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf88b);
        EXPECT(gbc.pc(), 0x368c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0202
        gbc.setState(0x9a19, 0x102, 0x46f0, 0x75d6, 0xf45f, 0x877a, 0x0, 0x1);
        gbc.writeMem(0x9a19, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x102);
        EXPECT(gbc.pc(), 0x9a1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a19), 0xcb);
        EXPECT(gbc.readMem(0x9a1a), 0xa3);
        // CB A3 0203
        gbc.setState(0xaae5, 0xf2c5, 0xfd40, 0xc267, 0x4b7a, 0x8da7, 0x1, 0x0);
        gbc.writeMem(0xaae5, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf2c5);
        EXPECT(gbc.pc(), 0xaae7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaae5), 0xcb);
        EXPECT(gbc.readMem(0xaae6), 0xa3);
        // CB A3 0204
        gbc.setState(0x958f, 0xbb61, 0xff70, 0xc179, 0x49b6, 0xa256, 0x1, 0x0);
        gbc.writeMem(0x958f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xbb61);
        EXPECT(gbc.pc(), 0x9591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x958f), 0xcb);
        EXPECT(gbc.readMem(0x9590), 0xa3);
        // CB A3 0205
        gbc.setState(0x904a, 0x1ef4, 0xafe0, 0xf96e, 0xa091, 0x4483, 0x1, 0x1);
        gbc.writeMem(0x904a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1ef4);
        EXPECT(gbc.pc(), 0x904c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x904a), 0xcb);
        EXPECT(gbc.readMem(0x904b), 0xa3);
        // CB A3 0207
        gbc.setState(0xd7ed, 0xc6b7, 0x8800, 0xee05, 0xa82c, 0x9fac, 0x1, 0x1);
        gbc.writeMem(0xd7ed, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc6b7);
        EXPECT(gbc.pc(), 0xd7ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ed), 0xcb);
        EXPECT(gbc.readMem(0xd7ee), 0xa3);
        // CB A3 0208
        gbc.setState(0xa2c1, 0x96b1, 0xf2e0, 0x9879, 0x4277, 0xb47b, 0x0, 0x1);
        gbc.writeMem(0xa2c1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x96b1);
        EXPECT(gbc.pc(), 0xa2c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c1), 0xcb);
        EXPECT(gbc.readMem(0xa2c2), 0xa3);
        // CB A3 0209
        gbc.setState(0xe68f, 0x5b71, 0x4f70, 0x25e6, 0x1f12, 0x11c5, 0x1, 0x1);
        gbc.writeMem(0xe68f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5b71);
        EXPECT(gbc.pc(), 0xe691);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe68f), 0xcb);
        EXPECT(gbc.readMem(0xe690), 0xa3);
        // CB A3 020A
        gbc.setState(0x3651, 0x55e5, 0x60c0, 0xe875, 0xe228, 0xf2fa, 0x1, 0x1);
        gbc.writeMem(0x3651, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x55e5);
        EXPECT(gbc.pc(), 0x3653);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 020B
        gbc.setState(0x94cf, 0x9867, 0x3050, 0xa576, 0xa69a, 0x8544, 0x0, 0x0);
        gbc.writeMem(0x94cf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9867);
        EXPECT(gbc.pc(), 0x94d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94cf), 0xcb);
        EXPECT(gbc.readMem(0x94d0), 0xa3);
        // CB A3 020C
        gbc.setState(0x73ce, 0x8ef2, 0x8fd0, 0xb365, 0xf3d2, 0xa715, 0x0, 0x0);
        gbc.writeMem(0x73ce, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8ef2);
        EXPECT(gbc.pc(), 0x73d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 020D
        gbc.setState(0x2d1, 0xdbbd, 0xbb40, 0x60b0, 0x4eff, 0x816, 0x0, 0x1);
        gbc.writeMem(0x2d1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xdbbd);
        EXPECT(gbc.pc(), 0x2d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 020E
        gbc.setState(0x45a6, 0xe154, 0xab50, 0xd89, 0x1132, 0x3206, 0x0, 0x0);
        gbc.writeMem(0x45a6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe154);
        EXPECT(gbc.pc(), 0x45a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 020F
        gbc.setState(0xdd55, 0x741e, 0xe5a0, 0x1318, 0x3a4a, 0x4fb3, 0x1, 0x0);
        gbc.writeMem(0xdd55, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x741e);
        EXPECT(gbc.pc(), 0xdd57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd55), 0xcb);
        EXPECT(gbc.readMem(0xdd56), 0xa3);
        // CB A3 0210
        gbc.setState(0x5a59, 0xd96c, 0xbb90, 0x5486, 0x6a69, 0xe1e6, 0x0, 0x0);
        gbc.writeMem(0x5a59, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd96c);
        EXPECT(gbc.pc(), 0x5a5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0211
        gbc.setState(0x1c3b, 0x80ab, 0x9fd0, 0x3a76, 0x285c, 0x8d1b, 0x0, 0x1);
        gbc.writeMem(0x1c3b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x80ab);
        EXPECT(gbc.pc(), 0x1c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0213
        gbc.setState(0x1d18, 0x9bea, 0x5c20, 0x1793, 0x434c, 0xbc0, 0x0, 0x1);
        gbc.writeMem(0x1d18, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9bea);
        EXPECT(gbc.pc(), 0x1d1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0214
        gbc.setState(0xaa2a, 0xa8c6, 0xed0, 0xe66e, 0xad2d, 0x5e86, 0x0, 0x0);
        gbc.writeMem(0xaa2a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa8c6);
        EXPECT(gbc.pc(), 0xaa2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa2a), 0xcb);
        EXPECT(gbc.readMem(0xaa2b), 0xa3);
        // CB A3 0215
        gbc.setState(0xe260, 0xe94f, 0x20b0, 0x68b9, 0x248, 0x5da7, 0x1, 0x0);
        gbc.writeMem(0xe260, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe94f);
        EXPECT(gbc.pc(), 0xe262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe260), 0xcb);
        EXPECT(gbc.readMem(0xe261), 0xa3);
        // CB A3 0216
        gbc.setState(0xe9ce, 0xc58f, 0x90, 0xcf55, 0xf4c8, 0x3fac, 0x0, 0x0);
        gbc.writeMem(0xe9ce, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc58f);
        EXPECT(gbc.pc(), 0xe9d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ce), 0xcb);
        EXPECT(gbc.readMem(0xe9cf), 0xa3);
        // CB A3 0218
        gbc.setState(0x509a, 0x5ce1, 0x1690, 0xa6f5, 0xfc15, 0xbb08, 0x0, 0x0);
        gbc.writeMem(0x509a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5ce1);
        EXPECT(gbc.pc(), 0x509c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0219
        gbc.setState(0x7aff, 0x5c82, 0x28a0, 0x9e61, 0xe648, 0xe501, 0x1, 0x0);
        gbc.writeMem(0x7aff, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5c82);
        EXPECT(gbc.pc(), 0x7b01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 021A
        gbc.setState(0xa194, 0x9639, 0x72f0, 0x820c, 0xd607, 0x60d6, 0x0, 0x0);
        gbc.writeMem(0xa194, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9639);
        EXPECT(gbc.pc(), 0xa196);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa194), 0xcb);
        EXPECT(gbc.readMem(0xa195), 0xa3);
        // CB A3 021B
        gbc.setState(0x8eaf, 0x92f, 0x6860, 0x34cb, 0xdce3, 0x20da, 0x0, 0x0);
        gbc.writeMem(0x8eaf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x92f);
        EXPECT(gbc.pc(), 0x8eb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eaf), 0xcb);
        EXPECT(gbc.readMem(0x8eb0), 0xa3);
        // CB A3 021C
        gbc.setState(0xcf9f, 0xd59a, 0x6780, 0x6832, 0x7dd3, 0xa956, 0x0, 0x1);
        gbc.writeMem(0xcf9f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd59a);
        EXPECT(gbc.pc(), 0xcfa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf9f), 0xcb);
        EXPECT(gbc.readMem(0xcfa0), 0xa3);
        // CB A3 021D
        gbc.setState(0xe764, 0x933, 0x68e0, 0xd922, 0x630a, 0x37f8, 0x1, 0x0);
        gbc.writeMem(0xe764, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x933);
        EXPECT(gbc.pc(), 0xe766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe764), 0xcb);
        EXPECT(gbc.readMem(0xe765), 0xa3);
        // CB A3 021F
        gbc.setState(0xd42e, 0x3525, 0x1d90, 0x3320, 0x3a81, 0x1a4, 0x1, 0x0);
        gbc.writeMem(0xd42e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3525);
        EXPECT(gbc.pc(), 0xd430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd42e), 0xcb);
        EXPECT(gbc.readMem(0xd42f), 0xa3);
        // CB A3 0220
        gbc.setState(0x90fd, 0x43be, 0x3a40, 0xfc30, 0xcc2b, 0x3473, 0x0, 0x1);
        gbc.writeMem(0x90fd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x43be);
        EXPECT(gbc.pc(), 0x90ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90fd), 0xcb);
        EXPECT(gbc.readMem(0x90fe), 0xa3);
        // CB A3 0221
        gbc.setState(0x315a, 0xce75, 0x9eb0, 0x92c4, 0x9bfe, 0xbd37, 0x0, 0x1);
        gbc.writeMem(0x315a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xce75);
        EXPECT(gbc.pc(), 0x315c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0222
        gbc.setState(0x3cdc, 0x8ded, 0x5920, 0xf06c, 0xa949, 0x3fa9, 0x0, 0x0);
        gbc.writeMem(0x3cdc, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8ded);
        EXPECT(gbc.pc(), 0x3cde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0223
        gbc.setState(0x66a1, 0x1e43, 0xff90, 0x235d, 0x44c1, 0xdf9e, 0x0, 0x0);
        gbc.writeMem(0x66a1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1e43);
        EXPECT(gbc.pc(), 0x66a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0224
        gbc.setState(0x5cce, 0x8497, 0x4df0, 0x8da7, 0x5842, 0x82c4, 0x0, 0x1);
        gbc.writeMem(0x5cce, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8497);
        EXPECT(gbc.pc(), 0x5cd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0225
        gbc.setState(0x4b8d, 0x52b1, 0xd3f0, 0x51f8, 0xc20c, 0x679a, 0x0, 0x1);
        gbc.writeMem(0x4b8d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x52b1);
        EXPECT(gbc.pc(), 0x4b8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0226
        gbc.setState(0x5d8c, 0x3e01, 0x1210, 0x6e29, 0x464, 0x6674, 0x1, 0x1);
        gbc.writeMem(0x5d8c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3e01);
        EXPECT(gbc.pc(), 0x5d8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0227
        gbc.setState(0x8af0, 0xc030, 0xe720, 0x764f, 0xaf22, 0xa9ad, 0x0, 0x1);
        gbc.writeMem(0x8af0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc030);
        EXPECT(gbc.pc(), 0x8af2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af0), 0xcb);
        EXPECT(gbc.readMem(0x8af1), 0xa3);
        // CB A3 0228
        gbc.setState(0xbc9f, 0xa07, 0x7170, 0x87b3, 0xcb27, 0xc469, 0x0, 0x1);
        gbc.writeMem(0xbc9f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa07);
        EXPECT(gbc.pc(), 0xbca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc9f), 0xcb);
        EXPECT(gbc.readMem(0xbca0), 0xa3);
        // CB A3 0229
        gbc.setState(0x850, 0x93c4, 0xf3c0, 0xe9ac, 0xf078, 0x59ff, 0x0, 0x1);
        gbc.writeMem(0x850, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x93c4);
        EXPECT(gbc.pc(), 0x852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 022A
        gbc.setState(0x9614, 0x9d52, 0xa90, 0x4365, 0xe8df, 0x1989, 0x1, 0x0);
        gbc.writeMem(0x9614, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9d52);
        EXPECT(gbc.pc(), 0x9616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9614), 0xcb);
        EXPECT(gbc.readMem(0x9615), 0xa3);
        // CB A3 022B
        gbc.setState(0x1072, 0x3084, 0x1bc0, 0xdf41, 0x1663, 0xcbcc, 0x0, 0x0);
        gbc.writeMem(0x1072, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3084);
        EXPECT(gbc.pc(), 0x1074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 022C
        gbc.setState(0x1a40, 0x90fd, 0xaf90, 0xb3ad, 0xa6d9, 0x72db, 0x0, 0x0);
        gbc.writeMem(0x1a40, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x90fd);
        EXPECT(gbc.pc(), 0x1a42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 022D
        gbc.setState(0x2046, 0x7219, 0xe190, 0x88a6, 0xd336, 0x149, 0x1, 0x1);
        gbc.writeMem(0x2046, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7219);
        EXPECT(gbc.pc(), 0x2048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 022E
        gbc.setState(0xbf10, 0xa344, 0xf250, 0xfe04, 0x7e2e, 0x81fa, 0x1, 0x0);
        gbc.writeMem(0xbf10, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa344);
        EXPECT(gbc.pc(), 0xbf12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf10), 0xcb);
        EXPECT(gbc.readMem(0xbf11), 0xa3);
        // CB A3 022F
        gbc.setState(0xb929, 0xf60, 0xea70, 0x69e7, 0xe621, 0xd580, 0x0, 0x0);
        gbc.writeMem(0xb929, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf60);
        EXPECT(gbc.pc(), 0xb92b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb929), 0xcb);
        EXPECT(gbc.readMem(0xb92a), 0xa3);
        // CB A3 0230
        gbc.setState(0x405d, 0xd893, 0x8580, 0x5175, 0x9c3d, 0x5083, 0x0, 0x0);
        gbc.writeMem(0x405d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd893);
        EXPECT(gbc.pc(), 0x405f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0231
        gbc.setState(0xef67, 0x1d80, 0x1ee0, 0xbf9, 0x9f25, 0xbc05, 0x0, 0x1);
        gbc.writeMem(0xef67, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1d80);
        EXPECT(gbc.pc(), 0xef69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef67), 0xcb);
        EXPECT(gbc.readMem(0xef68), 0xa3);
        // CB A3 0232
        gbc.setState(0x5e3b, 0xaa2d, 0x8030, 0x935f, 0x1589, 0xae00, 0x1, 0x0);
        gbc.writeMem(0x5e3b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xaa2d);
        EXPECT(gbc.pc(), 0x5e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0233
        gbc.setState(0x1c9c, 0x5f8a, 0x9170, 0xc1ed, 0xc9e9, 0x74dc, 0x1, 0x1);
        gbc.writeMem(0x1c9c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5f8a);
        EXPECT(gbc.pc(), 0x1c9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0234
        gbc.setState(0xefa4, 0x416a, 0x3080, 0xbbaf, 0x3d7f, 0xf7b6, 0x1, 0x1);
        gbc.writeMem(0xefa4, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x416a);
        EXPECT(gbc.pc(), 0xefa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefa4), 0xcb);
        EXPECT(gbc.readMem(0xefa5), 0xa3);
        // CB A3 0235
        gbc.setState(0x72df, 0xb2d1, 0xab30, 0x8e2, 0x6c10, 0x34e9, 0x0, 0x1);
        gbc.writeMem(0x72df, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb2d1);
        EXPECT(gbc.pc(), 0x72e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0237
        gbc.setState(0x3d7e, 0x1894, 0x3a80, 0x4f6e, 0x7d5c, 0xf7d9, 0x0, 0x0);
        gbc.writeMem(0x3d7e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1894);
        EXPECT(gbc.pc(), 0x3d80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0238
        gbc.setState(0x2e36, 0xe813, 0x6fe0, 0x9b66, 0xcd49, 0x7a4d, 0x1, 0x0);
        gbc.writeMem(0x2e36, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe813);
        EXPECT(gbc.pc(), 0x2e38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0239
        gbc.setState(0x5fc2, 0x8930, 0xb1d0, 0xa4ba, 0x2b1c, 0x8d00, 0x1, 0x1);
        gbc.writeMem(0x5fc2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8930);
        EXPECT(gbc.pc(), 0x5fc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 023A
        gbc.setState(0x55d3, 0x9f0e, 0xf590, 0x3f53, 0x7f07, 0x86a2, 0x0, 0x0);
        gbc.writeMem(0x55d3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9f0e);
        EXPECT(gbc.pc(), 0x55d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 023B
        gbc.setState(0xca2b, 0xb08a, 0xc770, 0xe917, 0x1ae5, 0x53c3, 0x0, 0x0);
        gbc.writeMem(0xca2b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb08a);
        EXPECT(gbc.pc(), 0xca2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca2b), 0xcb);
        EXPECT(gbc.readMem(0xca2c), 0xa3);
        // CB A3 023C
        gbc.setState(0x8489, 0x6ee, 0xee60, 0xc263, 0x8fff, 0x893, 0x1, 0x0);
        gbc.writeMem(0x8489, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6ee);
        EXPECT(gbc.pc(), 0x848b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8489), 0xcb);
        EXPECT(gbc.readMem(0x848a), 0xa3);
        // CB A3 023D
        gbc.setState(0xbebe, 0x539c, 0x9b00, 0x3a23, 0xea12, 0x2c55, 0x1, 0x0);
        gbc.writeMem(0xbebe, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x539c);
        EXPECT(gbc.pc(), 0xbec0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbebe), 0xcb);
        EXPECT(gbc.readMem(0xbebf), 0xa3);
        // CB A3 023E
        gbc.setState(0x7ce, 0xc351, 0x33f0, 0x5e8d, 0xfd77, 0x4deb, 0x0, 0x0);
        gbc.writeMem(0x7ce, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc351);
        EXPECT(gbc.pc(), 0x7d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 023F
        gbc.setState(0x1b30, 0xe44a, 0x80a0, 0xd11e, 0x4d8e, 0x13c6, 0x1, 0x1);
        gbc.writeMem(0x1b30, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe44a);
        EXPECT(gbc.pc(), 0x1b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0240
        gbc.setState(0x3196, 0x1f4b, 0xa450, 0xa779, 0x8224, 0x68f1, 0x0, 0x0);
        gbc.writeMem(0x3196, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1f4b);
        EXPECT(gbc.pc(), 0x3198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0241
        gbc.setState(0xce88, 0x41b1, 0x660, 0x84f, 0x1a41, 0x51d, 0x0, 0x1);
        gbc.writeMem(0xce88, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x41b1);
        EXPECT(gbc.pc(), 0xce8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce88), 0xcb);
        EXPECT(gbc.readMem(0xce89), 0xa3);
        // CB A3 0243
        gbc.setState(0x8d3, 0x15e, 0x8dd0, 0xf5f0, 0x5c89, 0xd6b2, 0x1, 0x0);
        gbc.writeMem(0x8d3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x15e);
        EXPECT(gbc.pc(), 0x8d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0244
        gbc.setState(0x6ed3, 0x559f, 0xa7a0, 0x32ee, 0x50de, 0x9d36, 0x0, 0x0);
        gbc.writeMem(0x6ed3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x559f);
        EXPECT(gbc.pc(), 0x6ed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0245
        gbc.setState(0xc5e1, 0x5232, 0x4240, 0x5745, 0x5b7c, 0x4e6, 0x1, 0x0);
        gbc.writeMem(0xc5e1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5232);
        EXPECT(gbc.pc(), 0xc5e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5e1), 0xcb);
        EXPECT(gbc.readMem(0xc5e2), 0xa3);
        // CB A3 0246
        gbc.setState(0x8e5e, 0x9b29, 0x1f70, 0x7b1, 0xd407, 0x85c1, 0x1, 0x1);
        gbc.writeMem(0x8e5e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9b29);
        EXPECT(gbc.pc(), 0x8e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e5e), 0xcb);
        EXPECT(gbc.readMem(0x8e5f), 0xa3);
        // CB A3 0247
        gbc.setState(0x11a9, 0xc049, 0xd6f0, 0x68c8, 0x198b, 0x5214, 0x0, 0x0);
        gbc.writeMem(0x11a9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc049);
        EXPECT(gbc.pc(), 0x11ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0248
        gbc.setState(0xba56, 0xbb29, 0x59e0, 0xedc, 0x965a, 0xdcf, 0x0, 0x1);
        gbc.writeMem(0xba56, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbb29);
        EXPECT(gbc.pc(), 0xba58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba56), 0xcb);
        EXPECT(gbc.readMem(0xba57), 0xa3);
        // CB A3 0249
        gbc.setState(0x7115, 0xebbb, 0xccc0, 0x7205, 0xc9fd, 0x5501, 0x1, 0x0);
        gbc.writeMem(0x7115, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xebbb);
        EXPECT(gbc.pc(), 0x7117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 024A
        gbc.setState(0xd92e, 0x8b71, 0x14c0, 0xb907, 0x13db, 0x65b5, 0x0, 0x0);
        gbc.writeMem(0xd92e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8b71);
        EXPECT(gbc.pc(), 0xd930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd92e), 0xcb);
        EXPECT(gbc.readMem(0xd92f), 0xa3);
        // CB A3 024B
        gbc.setState(0x22bc, 0xd19b, 0x29c0, 0xc5bb, 0x6bac, 0x90b0, 0x0, 0x0);
        gbc.writeMem(0x22bc, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd19b);
        EXPECT(gbc.pc(), 0x22be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 024C
        gbc.setState(0x81fd, 0xa2bc, 0xc000, 0x7191, 0x450c, 0xc8d5, 0x1, 0x1);
        gbc.writeMem(0x81fd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa2bc);
        EXPECT(gbc.pc(), 0x81ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81fd), 0xcb);
        EXPECT(gbc.readMem(0x81fe), 0xa3);
        // CB A3 024D
        gbc.setState(0x634b, 0x276c, 0x56f0, 0x4ebc, 0x9734, 0x4bb4, 0x0, 0x0);
        gbc.writeMem(0x634b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x276c);
        EXPECT(gbc.pc(), 0x634d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 024F
        gbc.setState(0x7577, 0xc74a, 0x52b0, 0x14b6, 0x3ae9, 0xd150, 0x1, 0x0);
        gbc.writeMem(0x7577, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc74a);
        EXPECT(gbc.pc(), 0x7579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0250
        gbc.setState(0x8c55, 0x4454, 0x9e60, 0x4078, 0xa4b0, 0xca68, 0x0, 0x1);
        gbc.writeMem(0x8c55, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4454);
        EXPECT(gbc.pc(), 0x8c57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c55), 0xcb);
        EXPECT(gbc.readMem(0x8c56), 0xa3);
        // CB A3 0251
        gbc.setState(0x342f, 0xe80a, 0x5360, 0xdc9d, 0x4a53, 0x48a3, 0x1, 0x1);
        gbc.writeMem(0x342f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe80a);
        EXPECT(gbc.pc(), 0x3431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0252
        gbc.setState(0xe74a, 0xb89f, 0x28e0, 0x9a65, 0xcc77, 0x6312, 0x0, 0x1);
        gbc.writeMem(0xe74a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb89f);
        EXPECT(gbc.pc(), 0xe74c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe74a), 0xcb);
        EXPECT(gbc.readMem(0xe74b), 0xa3);
        // CB A3 0253
        gbc.setState(0x5c4b, 0x7329, 0xcc20, 0xc51c, 0x16d1, 0x4af1, 0x0, 0x0);
        gbc.writeMem(0x5c4b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7329);
        EXPECT(gbc.pc(), 0x5c4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0254
        gbc.setState(0x900f, 0x5297, 0x2550, 0x8a1, 0xf1b1, 0x9e2d, 0x1, 0x0);
        gbc.writeMem(0x900f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5297);
        EXPECT(gbc.pc(), 0x9011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x900f), 0xcb);
        EXPECT(gbc.readMem(0x9010), 0xa3);
        // CB A3 0255
        gbc.setState(0xcfed, 0x6b1a, 0x93a0, 0x5bac, 0x1367, 0x5434, 0x1, 0x0);
        gbc.writeMem(0xcfed, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6b1a);
        EXPECT(gbc.pc(), 0xcfef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfed), 0xcb);
        EXPECT(gbc.readMem(0xcfee), 0xa3);
        // CB A3 0256
        gbc.setState(0x270f, 0xd197, 0x4da0, 0x7cc4, 0x1e95, 0xd383, 0x0, 0x1);
        gbc.writeMem(0x270f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd197);
        EXPECT(gbc.pc(), 0x2711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0257
        gbc.setState(0x5762, 0xf162, 0x3f90, 0x3d62, 0xc83b, 0xc26a, 0x1, 0x1);
        gbc.writeMem(0x5762, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf162);
        EXPECT(gbc.pc(), 0x5764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0258
        gbc.setState(0xbaff, 0xed26, 0x8ea0, 0xdecb, 0xce83, 0x1161, 0x0, 0x0);
        gbc.writeMem(0xbaff, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xed26);
        EXPECT(gbc.pc(), 0xbb01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaff), 0xcb);
        EXPECT(gbc.readMem(0xbb00), 0xa3);
        // CB A3 0259
        gbc.setState(0x2fff, 0x84ee, 0x4080, 0x2524, 0x58a8, 0x921b, 0x0, 0x1);
        gbc.writeMem(0x2fff, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x84ee);
        EXPECT(gbc.pc(), 0x3001);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 025A
        gbc.setState(0x976a, 0x22d3, 0x4350, 0x57e6, 0x2161, 0x706d, 0x0, 0x0);
        gbc.writeMem(0x976a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x22d3);
        EXPECT(gbc.pc(), 0x976c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x976a), 0xcb);
        EXPECT(gbc.readMem(0x976b), 0xa3);
        // CB A3 025B
        gbc.setState(0xd9e9, 0x13fa, 0xde80, 0x1dca, 0x4499, 0xb0d6, 0x0, 0x0);
        gbc.writeMem(0xd9e9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x13fa);
        EXPECT(gbc.pc(), 0xd9eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9e9), 0xcb);
        EXPECT(gbc.readMem(0xd9ea), 0xa3);
        // CB A3 025D
        gbc.setState(0xc120, 0xbd3b, 0xc360, 0x9ee5, 0x3080, 0xf041, 0x0, 0x1);
        gbc.writeMem(0xc120, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbd3b);
        EXPECT(gbc.pc(), 0xc122);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc120), 0xcb);
        EXPECT(gbc.readMem(0xc121), 0xa3);
        // CB A3 025E
        gbc.setState(0x494b, 0x873a, 0xd390, 0x4ef5, 0xd2f1, 0x7ffe, 0x1, 0x1);
        gbc.writeMem(0x494b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x873a);
        EXPECT(gbc.pc(), 0x494d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 025F
        gbc.setState(0x7070, 0x15f0, 0xcc70, 0xe1e0, 0xc338, 0x891e, 0x0, 0x0);
        gbc.writeMem(0x7070, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x15f0);
        EXPECT(gbc.pc(), 0x7072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0260
        gbc.setState(0x561a, 0xff0f, 0x7b20, 0x4e1e, 0x4c9f, 0x72ee, 0x0, 0x0);
        gbc.writeMem(0x561a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xff0f);
        EXPECT(gbc.pc(), 0x561c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0261
        gbc.setState(0x9cfa, 0x4088, 0x53c0, 0x916e, 0xcbdb, 0xdcd3, 0x1, 0x0);
        gbc.writeMem(0x9cfa, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4088);
        EXPECT(gbc.pc(), 0x9cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cfa), 0xcb);
        EXPECT(gbc.readMem(0x9cfb), 0xa3);
        // CB A3 0262
        gbc.setState(0xb5fd, 0xd7c5, 0x96f0, 0xd0fa, 0x3e10, 0xf988, 0x0, 0x0);
        gbc.writeMem(0xb5fd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd7c5);
        EXPECT(gbc.pc(), 0xb5ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5fd), 0xcb);
        EXPECT(gbc.readMem(0xb5fe), 0xa3);
        // CB A3 0263
        gbc.setState(0xc6ca, 0x4a02, 0xaa30, 0x4b4c, 0x2192, 0xd418, 0x1, 0x1);
        gbc.writeMem(0xc6ca, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4a02);
        EXPECT(gbc.pc(), 0xc6cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ca), 0xcb);
        EXPECT(gbc.readMem(0xc6cb), 0xa3);
        // CB A3 0264
        gbc.setState(0x583a, 0xe08d, 0xda40, 0x52fe, 0xfc0b, 0x638, 0x1, 0x1);
        gbc.writeMem(0x583a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe08d);
        EXPECT(gbc.pc(), 0x583c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0265
        gbc.setState(0x2dc3, 0xfc85, 0x7f10, 0x9f, 0xe30c, 0x738b, 0x1, 0x1);
        gbc.writeMem(0x2dc3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xfc85);
        EXPECT(gbc.pc(), 0x2dc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0266
        gbc.setState(0xaf53, 0xbda7, 0x4430, 0xf9e3, 0xd3dd, 0xbf78, 0x0, 0x1);
        gbc.writeMem(0xaf53, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbda7);
        EXPECT(gbc.pc(), 0xaf55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf53), 0xcb);
        EXPECT(gbc.readMem(0xaf54), 0xa3);
        // CB A3 0267
        gbc.setState(0x5b87, 0xb468, 0x6c50, 0xa92f, 0x67ab, 0xec99, 0x0, 0x1);
        gbc.writeMem(0x5b87, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb468);
        EXPECT(gbc.pc(), 0x5b89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0268
        gbc.setState(0x74e9, 0x8712, 0xfcd0, 0x8b33, 0x5cd1, 0x10c2, 0x0, 0x1);
        gbc.writeMem(0x74e9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8712);
        EXPECT(gbc.pc(), 0x74eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0269
        gbc.setState(0x2e4c, 0x42ef, 0x9c10, 0x3fc6, 0xd56e, 0x8377, 0x0, 0x0);
        gbc.writeMem(0x2e4c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x42ef);
        EXPECT(gbc.pc(), 0x2e4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 026A
        gbc.setState(0x1801, 0x8910, 0xe180, 0xe3c, 0xd608, 0x80c5, 0x0, 0x0);
        gbc.writeMem(0x1801, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8910);
        EXPECT(gbc.pc(), 0x1803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 026B
        gbc.setState(0x75f9, 0xa9b3, 0x7f90, 0x13f8, 0xfbcf, 0x8129, 0x0, 0x0);
        gbc.writeMem(0x75f9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa9b3);
        EXPECT(gbc.pc(), 0x75fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 026D
        gbc.setState(0x321c, 0x8cad, 0xbad0, 0xa411, 0x8745, 0xd28c, 0x0, 0x1);
        gbc.writeMem(0x321c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8cad);
        EXPECT(gbc.pc(), 0x321e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 026E
        gbc.setState(0xbf57, 0x6163, 0xb0d0, 0xe08d, 0xcd4, 0xadd7, 0x1, 0x0);
        gbc.writeMem(0xbf57, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6163);
        EXPECT(gbc.pc(), 0xbf59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf57), 0xcb);
        EXPECT(gbc.readMem(0xbf58), 0xa3);
        // CB A3 026F
        gbc.setState(0x3cef, 0x2d02, 0xc9e0, 0xd711, 0xebc1, 0xb5d7, 0x0, 0x1);
        gbc.writeMem(0x3cef, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2d02);
        EXPECT(gbc.pc(), 0x3cf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0270
        gbc.setState(0xc025, 0xe6d3, 0x8e80, 0x7e9d, 0x2264, 0x4202, 0x1, 0x1);
        gbc.writeMem(0xc025, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe6d3);
        EXPECT(gbc.pc(), 0xc027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc025), 0xcb);
        EXPECT(gbc.readMem(0xc026), 0xa3);
        // CB A3 0271
        gbc.setState(0xc847, 0x8934, 0x7800, 0xc7fc, 0x6407, 0x1f21, 0x1, 0x0);
        gbc.writeMem(0xc847, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8934);
        EXPECT(gbc.pc(), 0xc849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc847), 0xcb);
        EXPECT(gbc.readMem(0xc848), 0xa3);
        // CB A3 0272
        gbc.setState(0xbc36, 0x9f30, 0x82a0, 0xe635, 0x51bf, 0xfaf3, 0x0, 0x1);
        gbc.writeMem(0xbc36, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9f30);
        EXPECT(gbc.pc(), 0xbc38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc36), 0xcb);
        EXPECT(gbc.readMem(0xbc37), 0xa3);
        // CB A3 0274
        gbc.setState(0xcfb3, 0xd744, 0xf30, 0x195d, 0xd27c, 0x2edf, 0x1, 0x1);
        gbc.writeMem(0xcfb3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd744);
        EXPECT(gbc.pc(), 0xcfb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb3), 0xcb);
        EXPECT(gbc.readMem(0xcfb4), 0xa3);
        // CB A3 0275
        gbc.setState(0x78c5, 0x9709, 0x4ef0, 0xece5, 0xae63, 0x1f84, 0x0, 0x1);
        gbc.writeMem(0x78c5, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9709);
        EXPECT(gbc.pc(), 0x78c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0277
        gbc.setState(0x489e, 0x5cb1, 0x2b00, 0x9a65, 0x70b2, 0xf6dc, 0x0, 0x0);
        gbc.writeMem(0x489e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5cb1);
        EXPECT(gbc.pc(), 0x48a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0278
        gbc.setState(0xc4db, 0x94d4, 0x3cc0, 0x7333, 0xb954, 0x4483, 0x0, 0x0);
        gbc.writeMem(0xc4db, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x94d4);
        EXPECT(gbc.pc(), 0xc4dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4db), 0xcb);
        EXPECT(gbc.readMem(0xc4dc), 0xa3);
        // CB A3 0279
        gbc.setState(0x2ecd, 0x2775, 0xa5c0, 0x3f6a, 0x65bf, 0x6737, 0x0, 0x1);
        gbc.writeMem(0x2ecd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2775);
        EXPECT(gbc.pc(), 0x2ecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 027A
        gbc.setState(0xbf89, 0xd240, 0x6520, 0x6ddd, 0xb754, 0x3009, 0x0, 0x1);
        gbc.writeMem(0xbf89, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd240);
        EXPECT(gbc.pc(), 0xbf8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf89), 0xcb);
        EXPECT(gbc.readMem(0xbf8a), 0xa3);
        // CB A3 027B
        gbc.setState(0x52b3, 0xac8, 0x3b30, 0xa9fe, 0x318a, 0x6ef6, 0x0, 0x0);
        gbc.writeMem(0x52b3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xac8);
        EXPECT(gbc.pc(), 0x52b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 027C
        gbc.setState(0x6f69, 0x4d8e, 0x5080, 0xef3, 0x4476, 0xc1e3, 0x0, 0x1);
        gbc.writeMem(0x6f69, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4d8e);
        EXPECT(gbc.pc(), 0x6f6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 027D
        gbc.setState(0x6d7a, 0xa05f, 0x29a0, 0x9363, 0xa60c, 0x26ee, 0x0, 0x0);
        gbc.writeMem(0x6d7a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa05f);
        EXPECT(gbc.pc(), 0x6d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 027E
        gbc.setState(0x3905, 0xb9b6, 0x97e0, 0xb0e4, 0x1060, 0xb778, 0x1, 0x1);
        gbc.writeMem(0x3905, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb9b6);
        EXPECT(gbc.pc(), 0x3907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 027F
        gbc.setState(0xad2f, 0x6350, 0xd1e0, 0xe522, 0xaf2d, 0x2bb5, 0x1, 0x1);
        gbc.writeMem(0xad2f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6350);
        EXPECT(gbc.pc(), 0xad31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad2f), 0xcb);
        EXPECT(gbc.readMem(0xad30), 0xa3);
        // CB A3 0280
        gbc.setState(0xe1fa, 0x906b, 0x2290, 0x92e8, 0x2133, 0x373d, 0x1, 0x0);
        gbc.writeMem(0xe1fa, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x906b);
        EXPECT(gbc.pc(), 0xe1fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1fa), 0xcb);
        EXPECT(gbc.readMem(0xe1fb), 0xa3);
        // CB A3 0281
        gbc.setState(0x8c8f, 0x839d, 0x8ec0, 0xf3c, 0x49fb, 0x979c, 0x0, 0x1);
        gbc.writeMem(0x8c8f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x839d);
        EXPECT(gbc.pc(), 0x8c91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c8f), 0xcb);
        EXPECT(gbc.readMem(0x8c90), 0xa3);
        // CB A3 0282
        gbc.setState(0x1da4, 0xe0fe, 0x3210, 0xdaa1, 0xfc55, 0x15d0, 0x0, 0x0);
        gbc.writeMem(0x1da4, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe0fe);
        EXPECT(gbc.pc(), 0x1da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0283
        gbc.setState(0x7b4e, 0xa617, 0xed00, 0x1e64, 0x5c0d, 0x8ff7, 0x1, 0x0);
        gbc.writeMem(0x7b4e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa617);
        EXPECT(gbc.pc(), 0x7b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0284
        gbc.setState(0x7643, 0x96ad, 0xcaf0, 0x1803, 0xd904, 0xdf2b, 0x0, 0x1);
        gbc.writeMem(0x7643, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x96ad);
        EXPECT(gbc.pc(), 0x7645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0285
        gbc.setState(0x6595, 0xaf38, 0xa340, 0x4939, 0xe21e, 0x7e0d, 0x0, 0x0);
        gbc.writeMem(0x6595, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xaf38);
        EXPECT(gbc.pc(), 0x6597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0286
        gbc.setState(0xb1de, 0x1d2b, 0xbac0, 0x558b, 0x7775, 0x7f99, 0x1, 0x0);
        gbc.writeMem(0xb1de, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1d2b);
        EXPECT(gbc.pc(), 0xb1e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1de), 0xcb);
        EXPECT(gbc.readMem(0xb1df), 0xa3);
        // CB A3 0287
        gbc.setState(0x5b62, 0x3772, 0x46a0, 0x5fbd, 0x4c19, 0xd9a3, 0x1, 0x0);
        gbc.writeMem(0x5b62, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3772);
        EXPECT(gbc.pc(), 0x5b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0288
        gbc.setState(0xd80c, 0xdee9, 0x20e0, 0xce6b, 0xa472, 0x62b7, 0x0, 0x0);
        gbc.writeMem(0xd80c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdee9);
        EXPECT(gbc.pc(), 0xd80e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd80c), 0xcb);
        EXPECT(gbc.readMem(0xd80d), 0xa3);
        // CB A3 0289
        gbc.setState(0x7353, 0x3001, 0x3c90, 0x12b9, 0xef20, 0xf1e7, 0x1, 0x1);
        gbc.writeMem(0x7353, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3001);
        EXPECT(gbc.pc(), 0x7355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 028A
        gbc.setState(0x37cf, 0x5bb8, 0x59b0, 0x646b, 0xa61d, 0x1b5f, 0x1, 0x1);
        gbc.writeMem(0x37cf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5bb8);
        EXPECT(gbc.pc(), 0x37d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 028B
        gbc.setState(0x6a70, 0x2d91, 0xcc90, 0x8c17, 0xa851, 0x4a0e, 0x0, 0x0);
        gbc.writeMem(0x6a70, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2d91);
        EXPECT(gbc.pc(), 0x6a72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 028C
        gbc.setState(0x8743, 0xa4b7, 0x6ca0, 0x7131, 0x40d1, 0x6e84, 0x1, 0x1);
        gbc.writeMem(0x8743, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa4b7);
        EXPECT(gbc.pc(), 0x8745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8743), 0xcb);
        EXPECT(gbc.readMem(0x8744), 0xa3);
        // CB A3 028D
        gbc.setState(0xe0a, 0x1d2d, 0x68e0, 0x7d86, 0x7ed7, 0x8c80, 0x1, 0x1);
        gbc.writeMem(0xe0a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1d2d);
        EXPECT(gbc.pc(), 0xe0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 028E
        gbc.setState(0xd57e, 0x9884, 0x500, 0x25ca, 0x88da, 0x6afa, 0x0, 0x0);
        gbc.writeMem(0xd57e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9884);
        EXPECT(gbc.pc(), 0xd580);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd57e), 0xcb);
        EXPECT(gbc.readMem(0xd57f), 0xa3);
        // CB A3 028F
        gbc.setState(0x7c5b, 0xc615, 0x9810, 0x7832, 0x5df5, 0x9d5f, 0x1, 0x1);
        gbc.writeMem(0x7c5b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc615);
        EXPECT(gbc.pc(), 0x7c5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0290
        gbc.setState(0xeb42, 0xfa81, 0x8ee0, 0x8e97, 0x8518, 0x5ad5, 0x1, 0x0);
        gbc.writeMem(0xeb42, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfa81);
        EXPECT(gbc.pc(), 0xeb44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb42), 0xcb);
        EXPECT(gbc.readMem(0xeb43), 0xa3);
        // CB A3 0291
        gbc.setState(0xe725, 0x5349, 0xf80, 0xf3c0, 0x574d, 0xd30c, 0x1, 0x0);
        gbc.writeMem(0xe725, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5349);
        EXPECT(gbc.pc(), 0xe727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe725), 0xcb);
        EXPECT(gbc.readMem(0xe726), 0xa3);
        // CB A3 0292
        gbc.setState(0x1eb, 0x80f8, 0xc250, 0x15c8, 0x883c, 0xdcde, 0x0, 0x1);
        gbc.writeMem(0x1eb, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x80f8);
        EXPECT(gbc.pc(), 0x1ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0293
        gbc.setState(0xcad6, 0x3c98, 0x9d90, 0xfdc1, 0x48b6, 0xad33, 0x0, 0x0);
        gbc.writeMem(0xcad6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3c98);
        EXPECT(gbc.pc(), 0xcad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcad6), 0xcb);
        EXPECT(gbc.readMem(0xcad7), 0xa3);
        // CB A3 0294
        gbc.setState(0xe2dd, 0x39ac, 0xa0, 0x1a5e, 0x1b73, 0xe177, 0x1, 0x0);
        gbc.writeMem(0xe2dd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x39ac);
        EXPECT(gbc.pc(), 0xe2df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2dd), 0xcb);
        EXPECT(gbc.readMem(0xe2de), 0xa3);
        // CB A3 0295
        gbc.setState(0xdadd, 0xa4d4, 0x1240, 0x7539, 0x4009, 0x8e3b, 0x1, 0x0);
        gbc.writeMem(0xdadd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa4d4);
        EXPECT(gbc.pc(), 0xdadf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdadd), 0xcb);
        EXPECT(gbc.readMem(0xdade), 0xa3);
        // CB A3 0296
        gbc.setState(0x5d16, 0x67ac, 0xf130, 0x2a06, 0x2fdd, 0x6acf, 0x0, 0x0);
        gbc.writeMem(0x5d16, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x67ac);
        EXPECT(gbc.pc(), 0x5d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0297
        gbc.setState(0x63a6, 0xacdb, 0x1810, 0x61bf, 0xfae3, 0x7035, 0x0, 0x1);
        gbc.writeMem(0x63a6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xacdb);
        EXPECT(gbc.pc(), 0x63a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0298
        gbc.setState(0x479a, 0xb834, 0x88c0, 0x54d8, 0xf7a5, 0x61e9, 0x0, 0x0);
        gbc.writeMem(0x479a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb834);
        EXPECT(gbc.pc(), 0x479c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0299
        gbc.setState(0x6231, 0xe83b, 0x80f0, 0x9138, 0x9899, 0x273a, 0x0, 0x0);
        gbc.writeMem(0x6231, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe83b);
        EXPECT(gbc.pc(), 0x6233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 029A
        gbc.setState(0xaa1c, 0xa294, 0xb300, 0x3dce, 0x5178, 0x1742, 0x0, 0x0);
        gbc.writeMem(0xaa1c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa294);
        EXPECT(gbc.pc(), 0xaa1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa1c), 0xcb);
        EXPECT(gbc.readMem(0xaa1d), 0xa3);
        // CB A3 029B
        gbc.setState(0x1eb7, 0x47d, 0xc960, 0x1a96, 0x1c0e, 0x62de, 0x0, 0x0);
        gbc.writeMem(0x1eb7, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x47d);
        EXPECT(gbc.pc(), 0x1eb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 029C
        gbc.setState(0x7324, 0xa4e8, 0xca80, 0xf1b9, 0xdbb9, 0x2a78, 0x1, 0x0);
        gbc.writeMem(0x7324, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa4e8);
        EXPECT(gbc.pc(), 0x7326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 029D
        gbc.setState(0x62a, 0x79ca, 0x57a0, 0xad9f, 0x6a48, 0xc8e, 0x1, 0x1);
        gbc.writeMem(0x62a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x79ca);
        EXPECT(gbc.pc(), 0x62c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 029E
        gbc.setState(0x8278, 0x8eda, 0xb2b0, 0xb6c3, 0xeeb7, 0xf35f, 0x1, 0x1);
        gbc.writeMem(0x8278, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8eda);
        EXPECT(gbc.pc(), 0x827a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8278), 0xcb);
        EXPECT(gbc.readMem(0x8279), 0xa3);
        // CB A3 029F
        gbc.setState(0x8435, 0x5c79, 0x1890, 0x9def, 0xa2b2, 0xe5cd, 0x1, 0x1);
        gbc.writeMem(0x8435, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5c79);
        EXPECT(gbc.pc(), 0x8437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8435), 0xcb);
        EXPECT(gbc.readMem(0x8436), 0xa3);
        // CB A3 02A0
        gbc.setState(0x3005, 0xca62, 0xb850, 0x5f78, 0xea70, 0x8fa0, 0x1, 0x0);
        gbc.writeMem(0x3005, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xca62);
        EXPECT(gbc.pc(), 0x3007);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02A1
        gbc.setState(0xc96f, 0x200a, 0xc20, 0xe7e, 0x8d0f, 0x989f, 0x1, 0x0);
        gbc.writeMem(0xc96f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x200a);
        EXPECT(gbc.pc(), 0xc971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc96f), 0xcb);
        EXPECT(gbc.readMem(0xc970), 0xa3);
        // CB A3 02A2
        gbc.setState(0xa412, 0x37a1, 0x6b50, 0xce17, 0x50f7, 0x13c8, 0x1, 0x1);
        gbc.writeMem(0xa412, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x37a1);
        EXPECT(gbc.pc(), 0xa414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa412), 0xcb);
        EXPECT(gbc.readMem(0xa413), 0xa3);
        // CB A3 02A3
        gbc.setState(0xcc27, 0x1d30, 0x5c30, 0x25b7, 0x7cd, 0x8990, 0x0, 0x1);
        gbc.writeMem(0xcc27, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1d30);
        EXPECT(gbc.pc(), 0xcc29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc27), 0xcb);
        EXPECT(gbc.readMem(0xcc28), 0xa3);
        // CB A3 02A4
        gbc.setState(0x955e, 0x8452, 0xdcc0, 0xf50c, 0xf78e, 0x264e, 0x0, 0x0);
        gbc.writeMem(0x955e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8452);
        EXPECT(gbc.pc(), 0x9560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x955e), 0xcb);
        EXPECT(gbc.readMem(0x955f), 0xa3);
        // CB A3 02A5
        gbc.setState(0x595, 0x481e, 0x32e0, 0xffb9, 0xed7, 0x6029, 0x1, 0x1);
        gbc.writeMem(0x595, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x481e);
        EXPECT(gbc.pc(), 0x597);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02A6
        gbc.setState(0x4c07, 0x571f, 0x5fd0, 0x8c2d, 0x2b66, 0x27bc, 0x0, 0x0);
        gbc.writeMem(0x4c07, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x571f);
        EXPECT(gbc.pc(), 0x4c09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02A7
        gbc.setState(0x78d5, 0x732c, 0x7e20, 0xd426, 0xb4aa, 0x996, 0x0, 0x0);
        gbc.writeMem(0x78d5, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x732c);
        EXPECT(gbc.pc(), 0x78d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02A8
        gbc.setState(0xa31e, 0xf1f8, 0x2290, 0xadcf, 0x13d1, 0xed6d, 0x0, 0x0);
        gbc.writeMem(0xa31e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf1f8);
        EXPECT(gbc.pc(), 0xa320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa31e), 0xcb);
        EXPECT(gbc.readMem(0xa31f), 0xa3);
        // CB A3 02AA
        gbc.setState(0x9373, 0x9104, 0xdb90, 0x3f83, 0x96c4, 0xf76f, 0x1, 0x0);
        gbc.writeMem(0x9373, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9104);
        EXPECT(gbc.pc(), 0x9375);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9373), 0xcb);
        EXPECT(gbc.readMem(0x9374), 0xa3);
        // CB A3 02AB
        gbc.setState(0xc8a1, 0x7e64, 0xfe40, 0xfab4, 0xdeb0, 0x39e0, 0x0, 0x1);
        gbc.writeMem(0xc8a1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7e64);
        EXPECT(gbc.pc(), 0xc8a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8a1), 0xcb);
        EXPECT(gbc.readMem(0xc8a2), 0xa3);
        // CB A3 02AC
        gbc.setState(0x72d8, 0x9102, 0x1920, 0x4a65, 0x4217, 0x3c00, 0x0, 0x0);
        gbc.writeMem(0x72d8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9102);
        EXPECT(gbc.pc(), 0x72da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02AD
        gbc.setState(0xd16f, 0x8075, 0x6ad0, 0xa345, 0x39d0, 0xc81b, 0x0, 0x1);
        gbc.writeMem(0xd16f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8075);
        EXPECT(gbc.pc(), 0xd171);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd16f), 0xcb);
        EXPECT(gbc.readMem(0xd170), 0xa3);
        // CB A3 02AE
        gbc.setState(0x61b6, 0x4d76, 0xa10, 0x88f5, 0x7d63, 0xe662, 0x0, 0x0);
        gbc.writeMem(0x61b6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4d76);
        EXPECT(gbc.pc(), 0x61b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02AF
        gbc.setState(0x491e, 0x36a1, 0x5fc0, 0x87f4, 0xc4f8, 0x7f0a, 0x1, 0x0);
        gbc.writeMem(0x491e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x36a1);
        EXPECT(gbc.pc(), 0x4920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02B0
        gbc.setState(0x732a, 0xa68, 0x9ef0, 0x9d30, 0x2bff, 0x8b7a, 0x0, 0x1);
        gbc.writeMem(0x732a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa68);
        EXPECT(gbc.pc(), 0x732c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02B1
        gbc.setState(0x27aa, 0x8ad8, 0x1b00, 0xa0db, 0x8162, 0x8717, 0x0, 0x1);
        gbc.writeMem(0x27aa, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8ad8);
        EXPECT(gbc.pc(), 0x27ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02B2
        gbc.setState(0xe124, 0xc28, 0xf880, 0x8341, 0xbf08, 0x3b78, 0x0, 0x1);
        gbc.writeMem(0xe124, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc28);
        EXPECT(gbc.pc(), 0xe126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe124), 0xcb);
        EXPECT(gbc.readMem(0xe125), 0xa3);
        // CB A3 02B3
        gbc.setState(0xaf33, 0x369d, 0xb710, 0x8947, 0x60c6, 0x47bf, 0x0, 0x0);
        gbc.writeMem(0xaf33, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x369d);
        EXPECT(gbc.pc(), 0xaf35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf33), 0xcb);
        EXPECT(gbc.readMem(0xaf34), 0xa3);
        // CB A3 02B4
        gbc.setState(0x3e62, 0x54bc, 0xbf80, 0xea12, 0x3ac8, 0x5be4, 0x0, 0x0);
        gbc.writeMem(0x3e62, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x54bc);
        EXPECT(gbc.pc(), 0x3e64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02B5
        gbc.setState(0x27ec, 0xd20c, 0xa5f0, 0x6bb7, 0xa8b1, 0xf77e, 0x0, 0x1);
        gbc.writeMem(0x27ec, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd20c);
        EXPECT(gbc.pc(), 0x27ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02B6
        gbc.setState(0x6e35, 0xc5a0, 0xd750, 0x7584, 0x5565, 0x53e3, 0x0, 0x1);
        gbc.writeMem(0x6e35, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc5a0);
        EXPECT(gbc.pc(), 0x6e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02B7
        gbc.setState(0x9a71, 0x55ea, 0xbbc0, 0xc067, 0x55e1, 0xdcc8, 0x1, 0x1);
        gbc.writeMem(0x9a71, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x55ea);
        EXPECT(gbc.pc(), 0x9a73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a71), 0xcb);
        EXPECT(gbc.readMem(0x9a72), 0xa3);
        // CB A3 02B8
        gbc.setState(0xc3ca, 0x8dac, 0xc460, 0xe6ff, 0x86c4, 0xb4c, 0x1, 0x0);
        gbc.writeMem(0xc3ca, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8dac);
        EXPECT(gbc.pc(), 0xc3cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ca), 0xcb);
        EXPECT(gbc.readMem(0xc3cb), 0xa3);
        // CB A3 02B9
        gbc.setState(0x24ab, 0xb0f9, 0x38f0, 0xae5f, 0xc7b2, 0xac20, 0x1, 0x1);
        gbc.writeMem(0x24ab, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb0f9);
        EXPECT(gbc.pc(), 0x24ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02BA
        gbc.setState(0x7f42, 0xaf6e, 0x3770, 0x45fd, 0x7f37, 0xfbe9, 0x1, 0x0);
        gbc.writeMem(0x7f42, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xaf6e);
        EXPECT(gbc.pc(), 0x7f44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02BB
        gbc.setState(0xabc9, 0xf660, 0x6ec0, 0x50b, 0x4282, 0x1018, 0x1, 0x1);
        gbc.writeMem(0xabc9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf660);
        EXPECT(gbc.pc(), 0xabcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabc9), 0xcb);
        EXPECT(gbc.readMem(0xabca), 0xa3);
        // CB A3 02BC
        gbc.setState(0x96d2, 0x5d59, 0x40a0, 0xe23e, 0x6128, 0xd5ea, 0x1, 0x0);
        gbc.writeMem(0x96d2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5d59);
        EXPECT(gbc.pc(), 0x96d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96d2), 0xcb);
        EXPECT(gbc.readMem(0x96d3), 0xa3);
        // CB A3 02BD
        gbc.setState(0x9441, 0xcdbd, 0xb070, 0xc44d, 0x4b79, 0x95b2, 0x0, 0x1);
        gbc.writeMem(0x9441, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xcdbd);
        EXPECT(gbc.pc(), 0x9443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9441), 0xcb);
        EXPECT(gbc.readMem(0x9442), 0xa3);
        // CB A3 02BE
        gbc.setState(0x289b, 0x2852, 0x19b0, 0xc6d7, 0xdf1d, 0x9769, 0x0, 0x1);
        gbc.writeMem(0x289b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2852);
        EXPECT(gbc.pc(), 0x289d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02BF
        gbc.setState(0xc811, 0x70bc, 0x45a0, 0xf6e4, 0x5c11, 0x83b2, 0x1, 0x0);
        gbc.writeMem(0xc811, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x70bc);
        EXPECT(gbc.pc(), 0xc813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc811), 0xcb);
        EXPECT(gbc.readMem(0xc812), 0xa3);
        // CB A3 02C0
        gbc.setState(0xc9d2, 0x9f9c, 0x5cd0, 0xbb44, 0xc33f, 0x366, 0x1, 0x0);
        gbc.writeMem(0xc9d2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9f9c);
        EXPECT(gbc.pc(), 0xc9d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9d2), 0xcb);
        EXPECT(gbc.readMem(0xc9d3), 0xa3);
        // CB A3 02C1
        gbc.setState(0x3b09, 0xda3, 0xdc30, 0x518c, 0x730b, 0xde53, 0x1, 0x0);
        gbc.writeMem(0x3b09, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xda3);
        EXPECT(gbc.pc(), 0x3b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02C2
        gbc.setState(0xc1fa, 0xfadf, 0xa020, 0x8286, 0x7000, 0xe28, 0x0, 0x1);
        gbc.writeMem(0xc1fa, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xfadf);
        EXPECT(gbc.pc(), 0xc1fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1fa), 0xcb);
        EXPECT(gbc.readMem(0xc1fb), 0xa3);
        // CB A3 02C3
        gbc.setState(0xd870, 0xe3d1, 0x5aa0, 0x7aa8, 0x8d0a, 0x3a00, 0x0, 0x1);
        gbc.writeMem(0xd870, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe3d1);
        EXPECT(gbc.pc(), 0xd872);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd870), 0xcb);
        EXPECT(gbc.readMem(0xd871), 0xa3);
        // CB A3 02C4
        gbc.setState(0x8229, 0x528e, 0x83c0, 0xa84, 0xa628, 0x132, 0x1, 0x1);
        gbc.writeMem(0x8229, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x528e);
        EXPECT(gbc.pc(), 0x822b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8229), 0xcb);
        EXPECT(gbc.readMem(0x822a), 0xa3);
        // CB A3 02C5
        gbc.setState(0x3292, 0xf6d9, 0x5650, 0x61a3, 0xb619, 0xc2ba, 0x1, 0x1);
        gbc.writeMem(0x3292, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf6d9);
        EXPECT(gbc.pc(), 0x3294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02C6
        gbc.setState(0xd1f6, 0x83e3, 0xada0, 0xbd3e, 0x3b01, 0xd3c9, 0x1, 0x0);
        gbc.writeMem(0xd1f6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x83e3);
        EXPECT(gbc.pc(), 0xd1f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f6), 0xcb);
        EXPECT(gbc.readMem(0xd1f7), 0xa3);
        // CB A3 02C7
        gbc.setState(0x2a55, 0x8238, 0xf110, 0x96bb, 0xe758, 0x836e, 0x1, 0x0);
        gbc.writeMem(0x2a55, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8238);
        EXPECT(gbc.pc(), 0x2a57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02C8
        gbc.setState(0x148c, 0x180d, 0x5740, 0x4bb4, 0x5b80, 0xeda9, 0x1, 0x1);
        gbc.writeMem(0x148c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x180d);
        EXPECT(gbc.pc(), 0x148e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02C9
        gbc.setState(0xe9d8, 0x6248, 0xbb70, 0xc36a, 0xfb4, 0xf021, 0x1, 0x1);
        gbc.writeMem(0xe9d8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6248);
        EXPECT(gbc.pc(), 0xe9da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9d8), 0xcb);
        EXPECT(gbc.readMem(0xe9d9), 0xa3);
        // CB A3 02CA
        gbc.setState(0xccbd, 0x15fe, 0xf9f0, 0x982, 0x907f, 0x92c1, 0x1, 0x1);
        gbc.writeMem(0xccbd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x15fe);
        EXPECT(gbc.pc(), 0xccbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccbd), 0xcb);
        EXPECT(gbc.readMem(0xccbe), 0xa3);
        // CB A3 02CB
        gbc.setState(0x6281, 0x86c4, 0x7000, 0xfec6, 0x8b75, 0xb699, 0x0, 0x1);
        gbc.writeMem(0x6281, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x86c4);
        EXPECT(gbc.pc(), 0x6283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02CC
        gbc.setState(0x22b9, 0x4b4a, 0x9130, 0x3523, 0x26c7, 0xfb5, 0x1, 0x1);
        gbc.writeMem(0x22b9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4b4a);
        EXPECT(gbc.pc(), 0x22bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02CD
        gbc.setState(0x21cb, 0xdb43, 0x90e0, 0xda3, 0x1150, 0x2eba, 0x1, 0x1);
        gbc.writeMem(0x21cb, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xdb43);
        EXPECT(gbc.pc(), 0x21cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02CE
        gbc.setState(0x5caa, 0xc805, 0x1d50, 0xaa1e, 0x619d, 0x831a, 0x0, 0x0);
        gbc.writeMem(0x5caa, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc805);
        EXPECT(gbc.pc(), 0x5cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02CF
        gbc.setState(0xbddd, 0xff95, 0xaaf0, 0x8d3d, 0x7acf, 0x392f, 0x1, 0x1);
        gbc.writeMem(0xbddd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xff95);
        EXPECT(gbc.pc(), 0xbddf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbddd), 0xcb);
        EXPECT(gbc.readMem(0xbdde), 0xa3);
        // CB A3 02D0
        gbc.setState(0x90dd, 0x2356, 0x3690, 0x449d, 0x8997, 0xbf8, 0x0, 0x0);
        gbc.writeMem(0x90dd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2356);
        EXPECT(gbc.pc(), 0x90df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90dd), 0xcb);
        EXPECT(gbc.readMem(0x90de), 0xa3);
        // CB A3 02D1
        gbc.setState(0xb60b, 0x9506, 0x68e0, 0xa5a9, 0x1b3, 0xa8b5, 0x0, 0x0);
        gbc.writeMem(0xb60b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9506);
        EXPECT(gbc.pc(), 0xb60d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb60b), 0xcb);
        EXPECT(gbc.readMem(0xb60c), 0xa3);
        // CB A3 02D2
        gbc.setState(0xe742, 0xef3a, 0x9140, 0xc940, 0xf396, 0x1a7a, 0x1, 0x1);
        gbc.writeMem(0xe742, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xef3a);
        EXPECT(gbc.pc(), 0xe744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe742), 0xcb);
        EXPECT(gbc.readMem(0xe743), 0xa3);
        // CB A3 02D3
        gbc.setState(0xd72f, 0xead0, 0x8750, 0x5064, 0x5fa8, 0x80c7, 0x0, 0x1);
        gbc.writeMem(0xd72f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xead0);
        EXPECT(gbc.pc(), 0xd731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd72f), 0xcb);
        EXPECT(gbc.readMem(0xd730), 0xa3);
        // CB A3 02D4
        gbc.setState(0xad41, 0x3915, 0x5140, 0x4b8f, 0x2d0e, 0xa908, 0x1, 0x0);
        gbc.writeMem(0xad41, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3915);
        EXPECT(gbc.pc(), 0xad43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad41), 0xcb);
        EXPECT(gbc.readMem(0xad42), 0xa3);
        // CB A3 02D5
        gbc.setState(0x3e8, 0xb6ce, 0x49f0, 0xa509, 0x4620, 0xf19d, 0x1, 0x1);
        gbc.writeMem(0x3e8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb6ce);
        EXPECT(gbc.pc(), 0x3ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02D6
        gbc.setState(0x82c3, 0x211e, 0x33c0, 0xc4c, 0x522b, 0x5d44, 0x1, 0x0);
        gbc.writeMem(0x82c3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x211e);
        EXPECT(gbc.pc(), 0x82c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82c3), 0xcb);
        EXPECT(gbc.readMem(0x82c4), 0xa3);
        // CB A3 02D7
        gbc.setState(0x183f, 0x6c1d, 0x360, 0x4660, 0xb673, 0x466c, 0x1, 0x1);
        gbc.writeMem(0x183f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6c1d);
        EXPECT(gbc.pc(), 0x1841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02D8
        gbc.setState(0xa35d, 0xc323, 0xeb0, 0xe917, 0x8c6a, 0xbe0d, 0x0, 0x0);
        gbc.writeMem(0xa35d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc323);
        EXPECT(gbc.pc(), 0xa35f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa35d), 0xcb);
        EXPECT(gbc.readMem(0xa35e), 0xa3);
        // CB A3 02D9
        gbc.setState(0xbe38, 0x674b, 0x4880, 0x6f45, 0xf821, 0x4f96, 0x0, 0x0);
        gbc.writeMem(0xbe38, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x674b);
        EXPECT(gbc.pc(), 0xbe3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe38), 0xcb);
        EXPECT(gbc.readMem(0xbe39), 0xa3);
        // CB A3 02DA
        gbc.setState(0x5e4e, 0x3b9c, 0x330, 0xe007, 0xb877, 0x20d1, 0x0, 0x1);
        gbc.writeMem(0x5e4e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3b9c);
        EXPECT(gbc.pc(), 0x5e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02DB
        gbc.setState(0x9900, 0xf79a, 0x4810, 0x4006, 0xeb30, 0x49fb, 0x1, 0x1);
        gbc.writeMem(0x9900, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf79a);
        EXPECT(gbc.pc(), 0x9902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9900), 0xcb);
        EXPECT(gbc.readMem(0x9901), 0xa3);
        // CB A3 02DC
        gbc.setState(0x660d, 0xc555, 0x16c0, 0xae64, 0xb2ec, 0xd045, 0x1, 0x0);
        gbc.writeMem(0x660d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc555);
        EXPECT(gbc.pc(), 0x660f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02DD
        gbc.setState(0x5d4e, 0x3557, 0xa020, 0x5ba8, 0x388c, 0x2f71, 0x1, 0x1);
        gbc.writeMem(0x5d4e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3557);
        EXPECT(gbc.pc(), 0x5d50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02DE
        gbc.setState(0x7031, 0xf3ce, 0x5120, 0x6f9b, 0xd663, 0xbc51, 0x0, 0x0);
        gbc.writeMem(0x7031, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf3ce);
        EXPECT(gbc.pc(), 0x7033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02DF
        gbc.setState(0x5bc4, 0xad12, 0x1d90, 0x4a8f, 0x4dae, 0x163a, 0x1, 0x1);
        gbc.writeMem(0x5bc4, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xad12);
        EXPECT(gbc.pc(), 0x5bc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02E1
        gbc.setState(0x1c79, 0xf8c3, 0xee20, 0xafa5, 0x4aa1, 0xd203, 0x1, 0x1);
        gbc.writeMem(0x1c79, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf8c3);
        EXPECT(gbc.pc(), 0x1c7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02E2
        gbc.setState(0x898, 0x4f14, 0x89d0, 0x3f7a, 0x7680, 0x81c0, 0x0, 0x1);
        gbc.writeMem(0x898, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4f14);
        EXPECT(gbc.pc(), 0x89a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02E3
        gbc.setState(0x36d5, 0x3a2b, 0xd30, 0x229b, 0xf9a1, 0x6f94, 0x0, 0x0);
        gbc.writeMem(0x36d5, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3a2b);
        EXPECT(gbc.pc(), 0x36d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02E5
        gbc.setState(0x3c99, 0xfe90, 0xd210, 0x2205, 0x7692, 0x1e1f, 0x0, 0x0);
        gbc.writeMem(0x3c99, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfe90);
        EXPECT(gbc.pc(), 0x3c9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02E6
        gbc.setState(0x7a7c, 0x643b, 0x8a90, 0x526f, 0xc63f, 0x9dc9, 0x1, 0x1);
        gbc.writeMem(0x7a7c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x643b);
        EXPECT(gbc.pc(), 0x7a7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02E7
        gbc.setState(0x2b4b, 0x12e, 0x5b00, 0x224f, 0x504a, 0x524e, 0x0, 0x1);
        gbc.writeMem(0x2b4b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x12e);
        EXPECT(gbc.pc(), 0x2b4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02E8
        gbc.setState(0x2215, 0x7fb5, 0x9370, 0x4b56, 0x2eb6, 0x2b9a, 0x1, 0x0);
        gbc.writeMem(0x2215, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7fb5);
        EXPECT(gbc.pc(), 0x2217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02E9
        gbc.setState(0x4b2f, 0xf3f6, 0x4a60, 0x1618, 0xcbfc, 0x7be1, 0x1, 0x0);
        gbc.writeMem(0x4b2f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf3f6);
        EXPECT(gbc.pc(), 0x4b31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02EA
        gbc.setState(0x5912, 0x218f, 0x8f70, 0xe4, 0x19d0, 0x968e, 0x0, 0x0);
        gbc.writeMem(0x5912, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x218f);
        EXPECT(gbc.pc(), 0x5914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02EB
        gbc.setState(0x704d, 0x6eea, 0x16f0, 0xba72, 0xa00, 0xfb79, 0x1, 0x1);
        gbc.writeMem(0x704d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6eea);
        EXPECT(gbc.pc(), 0x704f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02EC
        gbc.setState(0x94b9, 0x4b3, 0x770, 0x5e8c, 0x6d65, 0x9140, 0x0, 0x0);
        gbc.writeMem(0x94b9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4b3);
        EXPECT(gbc.pc(), 0x94bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94b9), 0xcb);
        EXPECT(gbc.readMem(0x94ba), 0xa3);
        // CB A3 02ED
        gbc.setState(0x4dd8, 0x76b8, 0xb180, 0x2c25, 0x618b, 0xcd78, 0x1, 0x0);
        gbc.writeMem(0x4dd8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x76b8);
        EXPECT(gbc.pc(), 0x4dda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02EE
        gbc.setState(0x1c3, 0xfb52, 0x19e0, 0x3dc8, 0xcbda, 0x29be, 0x0, 0x1);
        gbc.writeMem(0x1c3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xfb52);
        EXPECT(gbc.pc(), 0x1c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02EF
        gbc.setState(0x39ee, 0xe53e, 0x9c70, 0xf609, 0x55f1, 0x761e, 0x0, 0x0);
        gbc.writeMem(0x39ee, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe53e);
        EXPECT(gbc.pc(), 0x39f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02F0
        gbc.setState(0xeb44, 0x8686, 0x4900, 0x777e, 0x241a, 0x6696, 0x1, 0x1);
        gbc.writeMem(0xeb44, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8686);
        EXPECT(gbc.pc(), 0xeb46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb44), 0xcb);
        EXPECT(gbc.readMem(0xeb45), 0xa3);
        // CB A3 02F1
        gbc.setState(0xe88b, 0xda5d, 0xdb0, 0x13aa, 0x49e4, 0x944d, 0x1, 0x1);
        gbc.writeMem(0xe88b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xda5d);
        EXPECT(gbc.pc(), 0xe88d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe88b), 0xcb);
        EXPECT(gbc.readMem(0xe88c), 0xa3);
        // CB A3 02F2
        gbc.setState(0xd97a, 0x1967, 0xc750, 0xb3f, 0x13a6, 0xc66c, 0x0, 0x1);
        gbc.writeMem(0xd97a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1967);
        EXPECT(gbc.pc(), 0xd97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd97a), 0xcb);
        EXPECT(gbc.readMem(0xd97b), 0xa3);
        // CB A3 02F3
        gbc.setState(0xa82d, 0xf70, 0x5110, 0xc6c, 0x3315, 0x5000, 0x0, 0x0);
        gbc.writeMem(0xa82d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf70);
        EXPECT(gbc.pc(), 0xa82f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa82d), 0xcb);
        EXPECT(gbc.readMem(0xa82e), 0xa3);
        // CB A3 02F4
        gbc.setState(0xba92, 0x7f2, 0xd250, 0xd901, 0x436c, 0x9d6b, 0x0, 0x0);
        gbc.writeMem(0xba92, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7f2);
        EXPECT(gbc.pc(), 0xba94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba92), 0xcb);
        EXPECT(gbc.readMem(0xba93), 0xa3);
        // CB A3 02F5
        gbc.setState(0xd502, 0x89f7, 0x7a40, 0x270d, 0x36bd, 0x9d41, 0x0, 0x1);
        gbc.writeMem(0xd502, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x89f7);
        EXPECT(gbc.pc(), 0xd504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd502), 0xcb);
        EXPECT(gbc.readMem(0xd503), 0xa3);
        // CB A3 02F6
        gbc.setState(0x425a, 0xab6f, 0x47d0, 0x5097, 0x6580, 0xde0e, 0x1, 0x1);
        gbc.writeMem(0x425a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xab6f);
        EXPECT(gbc.pc(), 0x425c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02F7
        gbc.setState(0x4524, 0x5147, 0x3cd0, 0x6b0c, 0x57e1, 0x5d5d, 0x0, 0x1);
        gbc.writeMem(0x4524, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5147);
        EXPECT(gbc.pc(), 0x4526);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02F8
        gbc.setState(0xb7ac, 0x1d70, 0x8ce0, 0x5322, 0x466b, 0x7a26, 0x1, 0x0);
        gbc.writeMem(0xb7ac, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1d70);
        EXPECT(gbc.pc(), 0xb7ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ac), 0xcb);
        EXPECT(gbc.readMem(0xb7ad), 0xa3);
        // CB A3 02F9
        gbc.setState(0x7a50, 0xc1dc, 0xb9f0, 0x3961, 0x923c, 0xad2d, 0x1, 0x0);
        gbc.writeMem(0x7a50, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc1dc);
        EXPECT(gbc.pc(), 0x7a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02FA
        gbc.setState(0xc5df, 0x3d97, 0xe820, 0xefc9, 0xb268, 0x8774, 0x0, 0x0);
        gbc.writeMem(0xc5df, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3d97);
        EXPECT(gbc.pc(), 0xc5e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5df), 0xcb);
        EXPECT(gbc.readMem(0xc5e0), 0xa3);
        // CB A3 02FB
        gbc.setState(0x569d, 0xf225, 0x1f00, 0xd392, 0x7964, 0x14bb, 0x1, 0x1);
        gbc.writeMem(0x569d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf225);
        EXPECT(gbc.pc(), 0x569f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02FC
        gbc.setState(0x523e, 0x35ec, 0xb50, 0x8bf5, 0xc22a, 0xd9f4, 0x1, 0x1);
        gbc.writeMem(0x523e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x35ec);
        EXPECT(gbc.pc(), 0x5240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 02FD
        gbc.setState(0xd9e7, 0xa7db, 0x61a0, 0x38cc, 0xc42e, 0x95a3, 0x1, 0x1);
        gbc.writeMem(0xd9e7, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa7db);
        EXPECT(gbc.pc(), 0xd9e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9e7), 0xcb);
        EXPECT(gbc.readMem(0xd9e8), 0xa3);
        // CB A3 02FE
        gbc.setState(0x685a, 0x21b8, 0xb80, 0x5e47, 0xaffb, 0x1b3f, 0x1, 0x0);
        gbc.writeMem(0x685a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x21b8);
        EXPECT(gbc.pc(), 0x685c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 02FF
        gbc.setState(0xee30, 0xeb9e, 0x5de0, 0xf845, 0xe8a9, 0xb511, 0x1, 0x1);
        gbc.writeMem(0xee30, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xeb9e);
        EXPECT(gbc.pc(), 0xee32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee30), 0xcb);
        EXPECT(gbc.readMem(0xee31), 0xa3);
        // CB A3 0300
        gbc.setState(0x797c, 0xd05d, 0x1750, 0x7b98, 0x17e3, 0x5b2d, 0x0, 0x0);
        gbc.writeMem(0x797c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd05d);
        EXPECT(gbc.pc(), 0x797e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0301
        gbc.setState(0x7baf, 0xd7bb, 0x8730, 0x4354, 0xf214, 0x2e41, 0x0, 0x1);
        gbc.writeMem(0x7baf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd7bb);
        EXPECT(gbc.pc(), 0x7bb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0302
        gbc.setState(0x6d65, 0x1ff4, 0x9c30, 0x7cba, 0x7a5, 0x1e44, 0x0, 0x1);
        gbc.writeMem(0x6d65, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1ff4);
        EXPECT(gbc.pc(), 0x6d67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0303
        gbc.setState(0xa61d, 0xafef, 0x3aa0, 0xe46d, 0x631, 0x9f73, 0x1, 0x0);
        gbc.writeMem(0xa61d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xafef);
        EXPECT(gbc.pc(), 0xa61f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa61d), 0xcb);
        EXPECT(gbc.readMem(0xa61e), 0xa3);
        // CB A3 0304
        gbc.setState(0x5a07, 0x5957, 0x7f40, 0x336, 0xfda8, 0xfb25, 0x0, 0x0);
        gbc.writeMem(0x5a07, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5957);
        EXPECT(gbc.pc(), 0x5a09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0305
        gbc.setState(0x8446, 0xf5f5, 0x6b50, 0x3b07, 0xf7fd, 0x833a, 0x1, 0x0);
        gbc.writeMem(0x8446, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf5f5);
        EXPECT(gbc.pc(), 0x8448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8446), 0xcb);
        EXPECT(gbc.readMem(0x8447), 0xa3);
        // CB A3 0306
        gbc.setState(0x7afb, 0xf8e6, 0xe3a0, 0xcd0e, 0xe061, 0x86e3, 0x0, 0x0);
        gbc.writeMem(0x7afb, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf8e6);
        EXPECT(gbc.pc(), 0x7afd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0307
        gbc.setState(0xd2c8, 0xa8f0, 0x45b0, 0x3d96, 0x88f0, 0x6fd2, 0x0, 0x1);
        gbc.writeMem(0xd2c8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa8f0);
        EXPECT(gbc.pc(), 0xd2ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2c8), 0xcb);
        EXPECT(gbc.readMem(0xd2c9), 0xa3);
        // CB A3 0308
        gbc.setState(0xb9ee, 0x37de, 0x93f0, 0x44d3, 0xfce2, 0x167a, 0x1, 0x1);
        gbc.writeMem(0xb9ee, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x37de);
        EXPECT(gbc.pc(), 0xb9f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ee), 0xcb);
        EXPECT(gbc.readMem(0xb9ef), 0xa3);
        // CB A3 0309
        gbc.setState(0x1324, 0x3578, 0xa6c0, 0xb11a, 0x5e15, 0x8ac4, 0x0, 0x0);
        gbc.writeMem(0x1324, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3578);
        EXPECT(gbc.pc(), 0x1326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 030A
        gbc.setState(0x68d6, 0xe89d, 0x9200, 0x9dda, 0xcffc, 0xc508, 0x0, 0x1);
        gbc.writeMem(0x68d6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe89d);
        EXPECT(gbc.pc(), 0x68d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 030B
        gbc.setState(0x3774, 0x83fe, 0x9600, 0x672e, 0x7db6, 0x1219, 0x0, 0x0);
        gbc.writeMem(0x3774, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x83fe);
        EXPECT(gbc.pc(), 0x3776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 030C
        gbc.setState(0x5f4d, 0x6aab, 0xf40, 0xbfde, 0x5fe2, 0xd5a6, 0x1, 0x0);
        gbc.writeMem(0x5f4d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6aab);
        EXPECT(gbc.pc(), 0x5f4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 030D
        gbc.setState(0xd32d, 0x5148, 0x8b60, 0x7fe, 0x5e11, 0x16ac, 0x1, 0x0);
        gbc.writeMem(0xd32d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5148);
        EXPECT(gbc.pc(), 0xd32f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd32d), 0xcb);
        EXPECT(gbc.readMem(0xd32e), 0xa3);
        // CB A3 030E
        gbc.setState(0x3808, 0x84d2, 0x2b60, 0xc364, 0xf81, 0x5ffc, 0x0, 0x0);
        gbc.writeMem(0x3808, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x84d2);
        EXPECT(gbc.pc(), 0x380a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 030F
        gbc.setState(0x4ed1, 0xef79, 0x3a70, 0xa50a, 0x909c, 0xad4a, 0x1, 0x0);
        gbc.writeMem(0x4ed1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xef79);
        EXPECT(gbc.pc(), 0x4ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0310
        gbc.setState(0x27b1, 0x8b38, 0x100, 0x67a9, 0xc75c, 0x16c0, 0x1, 0x1);
        gbc.writeMem(0x27b1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8b38);
        EXPECT(gbc.pc(), 0x27b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0311
        gbc.setState(0x98b2, 0x1fe1, 0x23c0, 0x57ff, 0xc07b, 0x68d7, 0x0, 0x0);
        gbc.writeMem(0x98b2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1fe1);
        EXPECT(gbc.pc(), 0x98b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b2), 0xcb);
        EXPECT(gbc.readMem(0x98b3), 0xa3);
        // CB A3 0312
        gbc.setState(0x1e51, 0x1d81, 0xfe80, 0x1b88, 0xd603, 0xf160, 0x1, 0x1);
        gbc.writeMem(0x1e51, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1d81);
        EXPECT(gbc.pc(), 0x1e53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0313
        gbc.setState(0x37be, 0xc471, 0x180, 0x41db, 0xaebf, 0xd62e, 0x1, 0x1);
        gbc.writeMem(0x37be, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc471);
        EXPECT(gbc.pc(), 0x37c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0314
        gbc.setState(0x68f, 0x8536, 0xd8a0, 0x5ac3, 0x2cf0, 0xd127, 0x0, 0x0);
        gbc.writeMem(0x68f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8536);
        EXPECT(gbc.pc(), 0x691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0315
        gbc.setState(0x6b56, 0xa514, 0xcf40, 0x3355, 0xb7d9, 0xef11, 0x0, 0x1);
        gbc.writeMem(0x6b56, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa514);
        EXPECT(gbc.pc(), 0x6b58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0316
        gbc.setState(0xb9ea, 0xa554, 0x1200, 0xb629, 0x2bfb, 0x25a2, 0x0, 0x1);
        gbc.writeMem(0xb9ea, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa554);
        EXPECT(gbc.pc(), 0xb9ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9ea), 0xcb);
        EXPECT(gbc.readMem(0xb9eb), 0xa3);
        // CB A3 0317
        gbc.setState(0xe7cf, 0xf384, 0x1190, 0xa897, 0x66b5, 0x7c61, 0x0, 0x0);
        gbc.writeMem(0xe7cf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf384);
        EXPECT(gbc.pc(), 0xe7d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7cf), 0xcb);
        EXPECT(gbc.readMem(0xe7d0), 0xa3);
        // CB A3 0318
        gbc.setState(0xc62c, 0xe2b2, 0xc220, 0x4731, 0xa58d, 0xc84d, 0x0, 0x0);
        gbc.writeMem(0xc62c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe2b2);
        EXPECT(gbc.pc(), 0xc62e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc62c), 0xcb);
        EXPECT(gbc.readMem(0xc62d), 0xa3);
        // CB A3 0319
        gbc.setState(0xa343, 0x6f9a, 0x8ea0, 0x7d7, 0xacaa, 0xebad, 0x1, 0x1);
        gbc.writeMem(0xa343, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6f9a);
        EXPECT(gbc.pc(), 0xa345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa343), 0xcb);
        EXPECT(gbc.readMem(0xa344), 0xa3);
        // CB A3 031A
        gbc.setState(0xd030, 0x9e68, 0xad60, 0x67e2, 0xa6c5, 0xc669, 0x1, 0x0);
        gbc.writeMem(0xd030, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9e68);
        EXPECT(gbc.pc(), 0xd032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd030), 0xcb);
        EXPECT(gbc.readMem(0xd031), 0xa3);
        // CB A3 031B
        gbc.setState(0x7adf, 0xd376, 0xcff0, 0xd712, 0xd967, 0xec9a, 0x0, 0x0);
        gbc.writeMem(0x7adf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd376);
        EXPECT(gbc.pc(), 0x7ae1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 031C
        gbc.setState(0x1fdb, 0x4b78, 0x58c0, 0xba2a, 0xd9b0, 0x5bfe, 0x1, 0x0);
        gbc.writeMem(0x1fdb, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4b78);
        EXPECT(gbc.pc(), 0x1fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 031D
        gbc.setState(0xe9eb, 0x6020, 0xb8a0, 0x3a35, 0x731e, 0x8fb, 0x1, 0x0);
        gbc.writeMem(0xe9eb, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6020);
        EXPECT(gbc.pc(), 0xe9ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9eb), 0xcb);
        EXPECT(gbc.readMem(0xe9ec), 0xa3);
        // CB A3 031E
        gbc.setState(0x1605, 0x188a, 0xfe50, 0xf01b, 0xdba, 0xffee, 0x1, 0x0);
        gbc.writeMem(0x1605, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x188a);
        EXPECT(gbc.pc(), 0x1607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 031F
        gbc.setState(0xdc62, 0x4a3e, 0x21f0, 0x8217, 0x3988, 0xa5c5, 0x0, 0x1);
        gbc.writeMem(0xdc62, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4a3e);
        EXPECT(gbc.pc(), 0xdc64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc62), 0xcb);
        EXPECT(gbc.readMem(0xdc63), 0xa3);
        // CB A3 0320
        gbc.setState(0xad6a, 0x3275, 0x1e0, 0xfca9, 0x633f, 0xd594, 0x1, 0x0);
        gbc.writeMem(0xad6a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3275);
        EXPECT(gbc.pc(), 0xad6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad6a), 0xcb);
        EXPECT(gbc.readMem(0xad6b), 0xa3);
        // CB A3 0321
        gbc.setState(0x4412, 0x483b, 0x2910, 0x2a29, 0x814d, 0xc471, 0x0, 0x1);
        gbc.writeMem(0x4412, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x483b);
        EXPECT(gbc.pc(), 0x4414);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0322
        gbc.setState(0x16d2, 0x31b6, 0x3710, 0xf36b, 0x5278, 0xcb98, 0x0, 0x1);
        gbc.writeMem(0x16d2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x31b6);
        EXPECT(gbc.pc(), 0x16d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0323
        gbc.setState(0x2c33, 0x1cbf, 0x680, 0xeaec, 0x425a, 0x6090, 0x1, 0x1);
        gbc.writeMem(0x2c33, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1cbf);
        EXPECT(gbc.pc(), 0x2c35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0324
        gbc.setState(0x9879, 0x847, 0xe0d0, 0xc8a4, 0xacbb, 0x1b0d, 0x1, 0x0);
        gbc.writeMem(0x9879, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x847);
        EXPECT(gbc.pc(), 0x987b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9879), 0xcb);
        EXPECT(gbc.readMem(0x987a), 0xa3);
        // CB A3 0325
        gbc.setState(0x7cb, 0xb7ac, 0x93f0, 0x4173, 0xb932, 0x83c0, 0x0, 0x0);
        gbc.writeMem(0x7cb, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb7ac);
        EXPECT(gbc.pc(), 0x7cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0326
        gbc.setState(0xc60d, 0xe9e6, 0x85f0, 0xc38b, 0xb30, 0xd8d0, 0x0, 0x1);
        gbc.writeMem(0xc60d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe9e6);
        EXPECT(gbc.pc(), 0xc60f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc60d), 0xcb);
        EXPECT(gbc.readMem(0xc60e), 0xa3);
        // CB A3 0327
        gbc.setState(0x2ec9, 0xcb40, 0x9bd0, 0x4a67, 0x9b1a, 0xe3ab, 0x0, 0x1);
        gbc.writeMem(0x2ec9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcb40);
        EXPECT(gbc.pc(), 0x2ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0328
        gbc.setState(0x4eeb, 0xf040, 0x8650, 0xfbb5, 0x339a, 0x331, 0x0, 0x1);
        gbc.writeMem(0x4eeb, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf040);
        EXPECT(gbc.pc(), 0x4eed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 032A
        gbc.setState(0x7152, 0x4464, 0xd0c0, 0xf282, 0x19c7, 0xcca1, 0x0, 0x0);
        gbc.writeMem(0x7152, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4464);
        EXPECT(gbc.pc(), 0x7154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 032B
        gbc.setState(0xe0bf, 0x5e5c, 0xbef0, 0xcbd4, 0x5af7, 0xc9fa, 0x0, 0x1);
        gbc.writeMem(0xe0bf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5e5c);
        EXPECT(gbc.pc(), 0xe0c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0bf), 0xcb);
        EXPECT(gbc.readMem(0xe0c0), 0xa3);
        // CB A3 032C
        gbc.setState(0x250d, 0x694b, 0x4a30, 0x8f5, 0xf6f7, 0xfd9e, 0x1, 0x1);
        gbc.writeMem(0x250d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x694b);
        EXPECT(gbc.pc(), 0x250f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 032D
        gbc.setState(0xc0eb, 0x6e4e, 0xd310, 0xf3d3, 0xc8e6, 0x630c, 0x1, 0x0);
        gbc.writeMem(0xc0eb, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x6e4e);
        EXPECT(gbc.pc(), 0xc0ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0eb), 0xcb);
        EXPECT(gbc.readMem(0xc0ec), 0xa3);
        // CB A3 032E
        gbc.setState(0x56ab, 0x7c1b, 0x2830, 0x9d96, 0x9ab5, 0xc3de, 0x1, 0x0);
        gbc.writeMem(0x56ab, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7c1b);
        EXPECT(gbc.pc(), 0x56ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 032F
        gbc.setState(0x161d, 0x6bf8, 0xb5c0, 0x2cb9, 0xb658, 0xa264, 0x1, 0x1);
        gbc.writeMem(0x161d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6bf8);
        EXPECT(gbc.pc(), 0x161f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0330
        gbc.setState(0xa137, 0x966c, 0xeb90, 0x227d, 0x6a4b, 0xc47f, 0x1, 0x0);
        gbc.writeMem(0xa137, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x966c);
        EXPECT(gbc.pc(), 0xa139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa137), 0xcb);
        EXPECT(gbc.readMem(0xa138), 0xa3);
        // CB A3 0331
        gbc.setState(0x33e1, 0x833f, 0xdc0, 0xf12e, 0xf933, 0x9176, 0x0, 0x1);
        gbc.writeMem(0x33e1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x833f);
        EXPECT(gbc.pc(), 0x33e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0332
        gbc.setState(0x1e4c, 0xd58e, 0x1030, 0x77f3, 0x587d, 0x944b, 0x1, 0x1);
        gbc.writeMem(0x1e4c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd58e);
        EXPECT(gbc.pc(), 0x1e4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0333
        gbc.setState(0xb32c, 0xcfba, 0x2cf0, 0x409a, 0x6ce3, 0x3b91, 0x1, 0x0);
        gbc.writeMem(0xb32c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xcfba);
        EXPECT(gbc.pc(), 0xb32e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32c), 0xcb);
        EXPECT(gbc.readMem(0xb32d), 0xa3);
        // CB A3 0335
        gbc.setState(0x4886, 0x5763, 0x57a0, 0xebf, 0x2b7e, 0x9310, 0x1, 0x1);
        gbc.writeMem(0x4886, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5763);
        EXPECT(gbc.pc(), 0x4888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0337
        gbc.setState(0x1c1e, 0x7c6, 0xfb20, 0xa47a, 0x7507, 0x90ca, 0x0, 0x0);
        gbc.writeMem(0x1c1e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7c6);
        EXPECT(gbc.pc(), 0x1c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0338
        gbc.setState(0x97b3, 0x3dcf, 0xd7c0, 0x6006, 0x92b0, 0xc5f5, 0x0, 0x0);
        gbc.writeMem(0x97b3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3dcf);
        EXPECT(gbc.pc(), 0x97b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b3), 0xcb);
        EXPECT(gbc.readMem(0x97b4), 0xa3);
        // CB A3 0339
        gbc.setState(0x581c, 0x6350, 0xc350, 0x580, 0x68b5, 0x6bfc, 0x1, 0x1);
        gbc.writeMem(0x581c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6350);
        EXPECT(gbc.pc(), 0x581e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 033B
        gbc.setState(0x2e53, 0x87bf, 0xa2d0, 0x5057, 0x7c9b, 0x2e40, 0x1, 0x1);
        gbc.writeMem(0x2e53, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x87bf);
        EXPECT(gbc.pc(), 0x2e55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 033C
        gbc.setState(0x10ca, 0xce6b, 0xcb0, 0xd375, 0xec9, 0x2e47, 0x0, 0x0);
        gbc.writeMem(0x10ca, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xce6b);
        EXPECT(gbc.pc(), 0x10cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 033D
        gbc.setState(0x2df2, 0xe611, 0x8450, 0xf573, 0xd47f, 0xd28a, 0x1, 0x0);
        gbc.writeMem(0x2df2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe611);
        EXPECT(gbc.pc(), 0x2df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 033E
        gbc.setState(0x6356, 0x64a, 0xa540, 0x1bc4, 0xebf4, 0x269d, 0x0, 0x0);
        gbc.writeMem(0x6356, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x64a);
        EXPECT(gbc.pc(), 0x6358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 033F
        gbc.setState(0xd0ea, 0xf5cc, 0x1440, 0x2ab5, 0xfce1, 0x9b01, 0x0, 0x0);
        gbc.writeMem(0xd0ea, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf5cc);
        EXPECT(gbc.pc(), 0xd0ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ea), 0xcb);
        EXPECT(gbc.readMem(0xd0eb), 0xa3);
        // CB A3 0340
        gbc.setState(0x30f6, 0xbeeb, 0xb010, 0xe657, 0x96aa, 0x1fc3, 0x0, 0x0);
        gbc.writeMem(0x30f6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xbeeb);
        EXPECT(gbc.pc(), 0x30f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0341
        gbc.setState(0xebd2, 0xcacb, 0x71a0, 0xec44, 0x23bd, 0xdbb3, 0x1, 0x1);
        gbc.writeMem(0xebd2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xcacb);
        EXPECT(gbc.pc(), 0xebd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd2), 0xcb);
        EXPECT(gbc.readMem(0xebd3), 0xa3);
        // CB A3 0342
        gbc.setState(0x5da, 0x510f, 0x68a0, 0x8374, 0xce18, 0x31d9, 0x1, 0x1);
        gbc.writeMem(0x5da, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x510f);
        EXPECT(gbc.pc(), 0x5dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0343
        gbc.setState(0xa34, 0x6555, 0x7e40, 0x5569, 0x1d58, 0x16a9, 0x0, 0x1);
        gbc.writeMem(0xa34, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6555);
        EXPECT(gbc.pc(), 0xa36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0344
        gbc.setState(0x9f01, 0xe9a, 0xdf90, 0x3461, 0xfe55, 0x7f5b, 0x0, 0x0);
        gbc.writeMem(0x9f01, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe9a);
        EXPECT(gbc.pc(), 0x9f03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f01), 0xcb);
        EXPECT(gbc.readMem(0x9f02), 0xa3);
        // CB A3 0345
        gbc.setState(0x3366, 0x244c, 0x1ae0, 0x5bcb, 0x9654, 0x7bb5, 0x0, 0x1);
        gbc.writeMem(0x3366, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x244c);
        EXPECT(gbc.pc(), 0x3368);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0346
        gbc.setState(0xf9f, 0xba71, 0x6e0, 0x4a2b, 0xa98c, 0x4c33, 0x1, 0x1);
        gbc.writeMem(0xf9f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xba71);
        EXPECT(gbc.pc(), 0xfa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0347
        gbc.setState(0x6bf, 0x71d9, 0x77e0, 0xdf3c, 0x1c50, 0x8e77, 0x1, 0x1);
        gbc.writeMem(0x6bf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x71d9);
        EXPECT(gbc.pc(), 0x6c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0348
        gbc.setState(0xb100, 0x229f, 0x2950, 0xa8ad, 0x8c80, 0x7075, 0x0, 0x1);
        gbc.writeMem(0xb100, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x229f);
        EXPECT(gbc.pc(), 0xb102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb100), 0xcb);
        EXPECT(gbc.readMem(0xb101), 0xa3);
        // CB A3 0349
        gbc.setState(0x1a2f, 0x694a, 0x17c0, 0x6a6, 0x14e4, 0x5bfa, 0x0, 0x1);
        gbc.writeMem(0x1a2f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x694a);
        EXPECT(gbc.pc(), 0x1a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 034A
        gbc.setState(0xec2a, 0xc0ae, 0x3250, 0xb7d3, 0x54cb, 0x6225, 0x1, 0x0);
        gbc.writeMem(0xec2a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc0ae);
        EXPECT(gbc.pc(), 0xec2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec2a), 0xcb);
        EXPECT(gbc.readMem(0xec2b), 0xa3);
        // CB A3 034B
        gbc.setState(0x142b, 0x10e7, 0xa400, 0x3cc8, 0xef5a, 0xbdab, 0x1, 0x0);
        gbc.writeMem(0x142b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x10e7);
        EXPECT(gbc.pc(), 0x142d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 034C
        gbc.setState(0xbd1d, 0x56ee, 0x76c0, 0x4a56, 0xec37, 0xc882, 0x1, 0x1);
        gbc.writeMem(0xbd1d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x56ee);
        EXPECT(gbc.pc(), 0xbd1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd1d), 0xcb);
        EXPECT(gbc.readMem(0xbd1e), 0xa3);
        // CB A3 034D
        gbc.setState(0xeec4, 0xae27, 0x1700, 0xe75f, 0x1ab7, 0x3212, 0x0, 0x1);
        gbc.writeMem(0xeec4, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xae27);
        EXPECT(gbc.pc(), 0xeec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeec4), 0xcb);
        EXPECT(gbc.readMem(0xeec5), 0xa3);
        // CB A3 034F
        gbc.setState(0x2b69, 0x1173, 0xa4c0, 0x37fc, 0x743d, 0xa298, 0x0, 0x1);
        gbc.writeMem(0x2b69, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1173);
        EXPECT(gbc.pc(), 0x2b6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0350
        gbc.setState(0xa529, 0x886c, 0xe460, 0x8197, 0x4459, 0xe4c2, 0x1, 0x0);
        gbc.writeMem(0xa529, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x886c);
        EXPECT(gbc.pc(), 0xa52b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa529), 0xcb);
        EXPECT(gbc.readMem(0xa52a), 0xa3);
        // CB A3 0351
        gbc.setState(0xb4ed, 0xa54b, 0xd990, 0xdf0c, 0xda1c, 0xf7d2, 0x0, 0x1);
        gbc.writeMem(0xb4ed, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa54b);
        EXPECT(gbc.pc(), 0xb4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ed), 0xcb);
        EXPECT(gbc.readMem(0xb4ee), 0xa3);
        // CB A3 0352
        gbc.setState(0x505, 0xf8, 0x1d90, 0x2826, 0x5e35, 0x8d7, 0x0, 0x1);
        gbc.writeMem(0x505, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf8);
        EXPECT(gbc.pc(), 0x507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0353
        gbc.setState(0x9de6, 0xb725, 0x4960, 0xe376, 0x70b2, 0x28b4, 0x1, 0x1);
        gbc.writeMem(0x9de6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb725);
        EXPECT(gbc.pc(), 0x9de8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9de6), 0xcb);
        EXPECT(gbc.readMem(0x9de7), 0xa3);
        // CB A3 0354
        gbc.setState(0xcc61, 0xe888, 0x1c00, 0x8f06, 0xf43b, 0x23b, 0x0, 0x0);
        gbc.writeMem(0xcc61, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe888);
        EXPECT(gbc.pc(), 0xcc63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc61), 0xcb);
        EXPECT(gbc.readMem(0xcc62), 0xa3);
        // CB A3 0355
        gbc.setState(0x2b34, 0xe408, 0xde00, 0x65ab, 0xb3b2, 0xf2b5, 0x0, 0x1);
        gbc.writeMem(0x2b34, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe408);
        EXPECT(gbc.pc(), 0x2b36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0356
        gbc.setState(0x5daf, 0xa04, 0x2b40, 0xf6c8, 0x2714, 0x2471, 0x0, 0x0);
        gbc.writeMem(0x5daf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa04);
        EXPECT(gbc.pc(), 0x5db1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0357
        gbc.setState(0x7fd2, 0x3b96, 0x5f70, 0xdd5d, 0x86b7, 0x4dcf, 0x1, 0x1);
        gbc.writeMem(0x7fd2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3b96);
        EXPECT(gbc.pc(), 0x7fd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0358
        gbc.setState(0xd0ec, 0x413b, 0xd940, 0x66bd, 0xb6c8, 0x5956, 0x0, 0x1);
        gbc.writeMem(0xd0ec, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x413b);
        EXPECT(gbc.pc(), 0xd0ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ec), 0xcb);
        EXPECT(gbc.readMem(0xd0ed), 0xa3);
        // CB A3 035A
        gbc.setState(0x59b5, 0x798d, 0x7c20, 0xdcf2, 0xe52d, 0xa984, 0x1, 0x1);
        gbc.writeMem(0x59b5, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x798d);
        EXPECT(gbc.pc(), 0x59b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 035B
        gbc.setState(0x6dde, 0xf20f, 0x8ec0, 0xac32, 0x4d43, 0xfeaa, 0x1, 0x0);
        gbc.writeMem(0x6dde, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf20f);
        EXPECT(gbc.pc(), 0x6de0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 035C
        gbc.setState(0x66ad, 0x23b7, 0xf580, 0x8bf8, 0x595e, 0x67bc, 0x0, 0x0);
        gbc.writeMem(0x66ad, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x23b7);
        EXPECT(gbc.pc(), 0x66af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 035D
        gbc.setState(0xedfa, 0xfeda, 0x6ef0, 0xc4c1, 0xd9a4, 0x9ff8, 0x0, 0x1);
        gbc.writeMem(0xedfa, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfeda);
        EXPECT(gbc.pc(), 0xedfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedfa), 0xcb);
        EXPECT(gbc.readMem(0xedfb), 0xa3);
        // CB A3 035F
        gbc.setState(0x453, 0x1574, 0x58c0, 0x3f8d, 0x1d92, 0xd294, 0x1, 0x1);
        gbc.writeMem(0x453, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1574);
        EXPECT(gbc.pc(), 0x455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0360
        gbc.setState(0x70d0, 0x87c8, 0x1bf0, 0xcfb8, 0xde64, 0x2534, 0x0, 0x1);
        gbc.writeMem(0x70d0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x87c8);
        EXPECT(gbc.pc(), 0x70d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0363
        gbc.setState(0x3e2e, 0x75b4, 0x35b0, 0x4ebe, 0x5077, 0xc01e, 0x1, 0x0);
        gbc.writeMem(0x3e2e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x75b4);
        EXPECT(gbc.pc(), 0x3e30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0364
        gbc.setState(0x8070, 0x5a6, 0x6580, 0xc35, 0xcb32, 0x9c3e, 0x0, 0x1);
        gbc.writeMem(0x8070, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5a6);
        EXPECT(gbc.pc(), 0x8072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8070), 0xcb);
        EXPECT(gbc.readMem(0x8071), 0xa3);
        // CB A3 0365
        gbc.setState(0xbbf5, 0x3f7e, 0x4060, 0xcb03, 0xa099, 0x6343, 0x1, 0x0);
        gbc.writeMem(0xbbf5, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3f7e);
        EXPECT(gbc.pc(), 0xbbf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbf5), 0xcb);
        EXPECT(gbc.readMem(0xbbf6), 0xa3);
        // CB A3 0366
        gbc.setState(0x52d6, 0xf9f3, 0xa880, 0xef3b, 0xf67e, 0x8e84, 0x1, 0x1);
        gbc.writeMem(0x52d6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf9f3);
        EXPECT(gbc.pc(), 0x52d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0367
        gbc.setState(0xcfde, 0x78b0, 0xcda0, 0x1f8e, 0xc481, 0x8c34, 0x0, 0x0);
        gbc.writeMem(0xcfde, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x78b0);
        EXPECT(gbc.pc(), 0xcfe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfde), 0xcb);
        EXPECT(gbc.readMem(0xcfdf), 0xa3);
        // CB A3 0368
        gbc.setState(0x8931, 0x3d5, 0x4750, 0x320c, 0xe28e, 0x3e5a, 0x1, 0x1);
        gbc.writeMem(0x8931, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3d5);
        EXPECT(gbc.pc(), 0x8933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8931), 0xcb);
        EXPECT(gbc.readMem(0x8932), 0xa3);
        // CB A3 0369
        gbc.setState(0x913d, 0xf4ab, 0xec80, 0x3e59, 0xf1df, 0x913a, 0x0, 0x1);
        gbc.writeMem(0x913d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf4ab);
        EXPECT(gbc.pc(), 0x913f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x913d), 0xcb);
        EXPECT(gbc.readMem(0x913e), 0xa3);
        // CB A3 036A
        gbc.setState(0x6d28, 0x53f3, 0x56b0, 0x311c, 0xd48d, 0xead, 0x1, 0x0);
        gbc.writeMem(0x6d28, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x53f3);
        EXPECT(gbc.pc(), 0x6d2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 036B
        gbc.setState(0x4ea2, 0x23c, 0xc700, 0x27f8, 0x1e95, 0xfb84, 0x0, 0x1);
        gbc.writeMem(0x4ea2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x23c);
        EXPECT(gbc.pc(), 0x4ea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 036C
        gbc.setState(0xaad8, 0x7e0, 0x4fa0, 0xda0e, 0xd02b, 0x3fe5, 0x1, 0x0);
        gbc.writeMem(0xaad8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7e0);
        EXPECT(gbc.pc(), 0xaada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaad8), 0xcb);
        EXPECT(gbc.readMem(0xaad9), 0xa3);
        // CB A3 036D
        gbc.setState(0xd839, 0xd660, 0xac20, 0x520, 0x50c6, 0x28e4, 0x1, 0x0);
        gbc.writeMem(0xd839, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd660);
        EXPECT(gbc.pc(), 0xd83b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd839), 0xcb);
        EXPECT(gbc.readMem(0xd83a), 0xa3);
        // CB A3 036E
        gbc.setState(0x4907, 0xff9, 0xea80, 0x8072, 0x4113, 0x766e, 0x0, 0x0);
        gbc.writeMem(0x4907, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xff9);
        EXPECT(gbc.pc(), 0x4909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 036F
        gbc.setState(0xb831, 0xb45a, 0xd780, 0x623a, 0x56e2, 0xfa92, 0x0, 0x0);
        gbc.writeMem(0xb831, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb45a);
        EXPECT(gbc.pc(), 0xb833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb831), 0xcb);
        EXPECT(gbc.readMem(0xb832), 0xa3);
        // CB A3 0370
        gbc.setState(0x1ee3, 0xf7d4, 0x1500, 0xe00b, 0x9dbb, 0x6f22, 0x1, 0x0);
        gbc.writeMem(0x1ee3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf7d4);
        EXPECT(gbc.pc(), 0x1ee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0373
        gbc.setState(0xda30, 0x1695, 0x48b0, 0x13ef, 0xbe5c, 0xbef5, 0x0, 0x0);
        gbc.writeMem(0xda30, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1695);
        EXPECT(gbc.pc(), 0xda32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda30), 0xcb);
        EXPECT(gbc.readMem(0xda31), 0xa3);
        // CB A3 0374
        gbc.setState(0x573c, 0xe279, 0x62d0, 0xb288, 0xe47f, 0xeb2e, 0x0, 0x0);
        gbc.writeMem(0x573c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe279);
        EXPECT(gbc.pc(), 0x573e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0375
        gbc.setState(0xde7b, 0x94f7, 0x7510, 0xf8ba, 0xd264, 0xc76f, 0x1, 0x1);
        gbc.writeMem(0xde7b, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x94f7);
        EXPECT(gbc.pc(), 0xde7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde7b), 0xcb);
        EXPECT(gbc.readMem(0xde7c), 0xa3);
        // CB A3 0376
        gbc.setState(0x46df, 0xa419, 0x6610, 0xe42c, 0x5e9c, 0x2d8f, 0x1, 0x1);
        gbc.writeMem(0x46df, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa419);
        EXPECT(gbc.pc(), 0x46e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0377
        gbc.setState(0xb76e, 0x4ea1, 0x1890, 0x4eef, 0xefb0, 0x906f, 0x0, 0x1);
        gbc.writeMem(0xb76e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4ea1);
        EXPECT(gbc.pc(), 0xb770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb76e), 0xcb);
        EXPECT(gbc.readMem(0xb76f), 0xa3);
        // CB A3 0378
        gbc.setState(0x8002, 0x8afa, 0x5db0, 0xdeea, 0x11fa, 0xe353, 0x0, 0x1);
        gbc.writeMem(0x8002, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8afa);
        EXPECT(gbc.pc(), 0x8004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8002), 0xcb);
        EXPECT(gbc.readMem(0x8003), 0xa3);
        // CB A3 0379
        gbc.setState(0xd665, 0xa2de, 0xc0a0, 0x52ec, 0x6ea1, 0x93cf, 0x1, 0x1);
        gbc.writeMem(0xd665, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa2de);
        EXPECT(gbc.pc(), 0xd667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd665), 0xcb);
        EXPECT(gbc.readMem(0xd666), 0xa3);
        // CB A3 037A
        gbc.setState(0x596d, 0xf32d, 0x290, 0x9308, 0xa79d, 0x8113, 0x0, 0x1);
        gbc.writeMem(0x596d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf32d);
        EXPECT(gbc.pc(), 0x596f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 037B
        gbc.setState(0x9d53, 0x34e1, 0x8770, 0xf459, 0x204a, 0x8fd2, 0x1, 0x0);
        gbc.writeMem(0x9d53, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x34e1);
        EXPECT(gbc.pc(), 0x9d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d53), 0xcb);
        EXPECT(gbc.readMem(0x9d54), 0xa3);
        // CB A3 037C
        gbc.setState(0xa6ec, 0xdd73, 0xfd80, 0x3a43, 0xb390, 0x3e03, 0x1, 0x1);
        gbc.writeMem(0xa6ec, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdd73);
        EXPECT(gbc.pc(), 0xa6ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ec), 0xcb);
        EXPECT(gbc.readMem(0xa6ed), 0xa3);
        // CB A3 037D
        gbc.setState(0x13ad, 0xc2b3, 0x3070, 0xff3b, 0x6d70, 0xdcf6, 0x1, 0x0);
        gbc.writeMem(0x13ad, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc2b3);
        EXPECT(gbc.pc(), 0x13af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 037E
        gbc.setState(0x22e9, 0x6620, 0xe6f0, 0xf489, 0x3a16, 0x9c81, 0x1, 0x0);
        gbc.writeMem(0x22e9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6620);
        EXPECT(gbc.pc(), 0x22eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 037F
        gbc.setState(0x7856, 0xae8b, 0x7240, 0x34d4, 0xae9, 0x3a1, 0x0, 0x1);
        gbc.writeMem(0x7856, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xae8b);
        EXPECT(gbc.pc(), 0x7858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0380
        gbc.setState(0x5725, 0xb919, 0x7a50, 0x2f8c, 0x2ead, 0xecf, 0x1, 0x0);
        gbc.writeMem(0x5725, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb919);
        EXPECT(gbc.pc(), 0x5727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0381
        gbc.setState(0xd090, 0x9909, 0x9e20, 0xd66d, 0xb44, 0xc753, 0x0, 0x0);
        gbc.writeMem(0xd090, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9909);
        EXPECT(gbc.pc(), 0xd092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd090), 0xcb);
        EXPECT(gbc.readMem(0xd091), 0xa3);
        // CB A3 0382
        gbc.setState(0x9a46, 0xfc2, 0xf450, 0xd813, 0xde63, 0x923a, 0x0, 0x0);
        gbc.writeMem(0x9a46, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xfc2);
        EXPECT(gbc.pc(), 0x9a48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a46), 0xcb);
        EXPECT(gbc.readMem(0x9a47), 0xa3);
        // CB A3 0383
        gbc.setState(0x6785, 0xcb17, 0xc620, 0x6efc, 0xcbad, 0x797d, 0x0, 0x0);
        gbc.writeMem(0x6785, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xcb17);
        EXPECT(gbc.pc(), 0x6787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0384
        gbc.setState(0x2422, 0x3487, 0xfee0, 0xe321, 0xb7bd, 0x9c28, 0x0, 0x1);
        gbc.writeMem(0x2422, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3487);
        EXPECT(gbc.pc(), 0x2424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0385
        gbc.setState(0xe066, 0x95b1, 0xc6c0, 0xa182, 0x58f3, 0x60df, 0x0, 0x0);
        gbc.writeMem(0xe066, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x95b1);
        EXPECT(gbc.pc(), 0xe068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe066), 0xcb);
        EXPECT(gbc.readMem(0xe067), 0xa3);
        // CB A3 0386
        gbc.setState(0x47d9, 0x14a3, 0xe570, 0x4b89, 0x2b4b, 0x3ec9, 0x1, 0x1);
        gbc.writeMem(0x47d9, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x14a3);
        EXPECT(gbc.pc(), 0x47db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0387
        gbc.setState(0x18d, 0xe65c, 0x6ac0, 0x189f, 0xbb5e, 0x7ad9, 0x0, 0x1);
        gbc.writeMem(0x18d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe65c);
        EXPECT(gbc.pc(), 0x18f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0388
        gbc.setState(0x48b8, 0x25f1, 0x68b0, 0x4ee4, 0xf, 0x1dff, 0x0, 0x0);
        gbc.writeMem(0x48b8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x25f1);
        EXPECT(gbc.pc(), 0x48ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0389
        gbc.setState(0x7911, 0xf0db, 0xf080, 0xa416, 0x876, 0x8b7d, 0x0, 0x0);
        gbc.writeMem(0x7911, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf0db);
        EXPECT(gbc.pc(), 0x7913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 038A
        gbc.setState(0x5443, 0x413c, 0xaf80, 0xab6c, 0x1e72, 0x72f0, 0x1, 0x1);
        gbc.writeMem(0x5443, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x413c);
        EXPECT(gbc.pc(), 0x5445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 038B
        gbc.setState(0x8696, 0xe1b6, 0xc380, 0x3ae5, 0x6a18, 0x1dd9, 0x1, 0x1);
        gbc.writeMem(0x8696, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe1b6);
        EXPECT(gbc.pc(), 0x8698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8696), 0xcb);
        EXPECT(gbc.readMem(0x8697), 0xa3);
        // CB A3 038C
        gbc.setState(0x35c3, 0x34f4, 0x4aa0, 0x3509, 0x5c5b, 0x9b73, 0x0, 0x1);
        gbc.writeMem(0x35c3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x34f4);
        EXPECT(gbc.pc(), 0x35c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 038D
        gbc.setState(0xad9f, 0x41fb, 0x4840, 0xf6b4, 0x857f, 0x70ca, 0x0, 0x1);
        gbc.writeMem(0xad9f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x41fb);
        EXPECT(gbc.pc(), 0xada1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad9f), 0xcb);
        EXPECT(gbc.readMem(0xada0), 0xa3);
        // CB A3 038E
        gbc.setState(0x6534, 0xefa9, 0xeb60, 0x8b40, 0x2a5d, 0xe4c6, 0x0, 0x1);
        gbc.writeMem(0x6534, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xefa9);
        EXPECT(gbc.pc(), 0x6536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 038F
        gbc.setState(0x9878, 0xd065, 0xdb50, 0x9fb6, 0xb3f2, 0x2200, 0x1, 0x1);
        gbc.writeMem(0x9878, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd065);
        EXPECT(gbc.pc(), 0x987a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9878), 0xcb);
        EXPECT(gbc.readMem(0x9879), 0xa3);
        // CB A3 0390
        gbc.setState(0x9bab, 0x2d4c, 0x6cc0, 0x9288, 0xe815, 0xceb9, 0x0, 0x0);
        gbc.writeMem(0x9bab, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2d4c);
        EXPECT(gbc.pc(), 0x9bad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bab), 0xcb);
        EXPECT(gbc.readMem(0x9bac), 0xa3);
        // CB A3 0391
        gbc.setState(0xcc26, 0x8b2a, 0x7880, 0xffd5, 0xdf86, 0x5be1, 0x0, 0x0);
        gbc.writeMem(0xcc26, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8b2a);
        EXPECT(gbc.pc(), 0xcc28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc26), 0xcb);
        EXPECT(gbc.readMem(0xcc27), 0xa3);
        // CB A3 0392
        gbc.setState(0x4076, 0xf2f2, 0xddb0, 0xa5fb, 0x7d44, 0x8135, 0x0, 0x1);
        gbc.writeMem(0x4076, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf2f2);
        EXPECT(gbc.pc(), 0x4078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 0394
        gbc.setState(0x85cf, 0x2c61, 0xfbc0, 0x170, 0xe815, 0x9d07, 0x1, 0x0);
        gbc.writeMem(0x85cf, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2c61);
        EXPECT(gbc.pc(), 0x85d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85cf), 0xcb);
        EXPECT(gbc.readMem(0x85d0), 0xa3);
        // CB A3 0395
        gbc.setState(0xe00c, 0xbe84, 0x6970, 0x42b1, 0x81ab, 0x4cbc, 0x0, 0x1);
        gbc.writeMem(0xe00c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbe84);
        EXPECT(gbc.pc(), 0xe00e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe00c), 0xcb);
        EXPECT(gbc.readMem(0xe00d), 0xa3);
        // CB A3 0396
        gbc.setState(0x310c, 0x7b75, 0x7060, 0x72ec, 0xd42b, 0x2803, 0x0, 0x0);
        gbc.writeMem(0x310c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7b75);
        EXPECT(gbc.pc(), 0x310e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0397
        gbc.setState(0x1267, 0x8f27, 0x5fa0, 0x62af, 0x91e0, 0xffb5, 0x0, 0x1);
        gbc.writeMem(0x1267, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8f27);
        EXPECT(gbc.pc(), 0x1269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0398
        gbc.setState(0x4bc6, 0x2a79, 0x4a0, 0x5107, 0x8da, 0x18b2, 0x1, 0x0);
        gbc.writeMem(0x4bc6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2a79);
        EXPECT(gbc.pc(), 0x4bc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 0399
        gbc.setState(0x5f8, 0x1c32, 0xff30, 0x71b8, 0x902a, 0xa9d4, 0x0, 0x1);
        gbc.writeMem(0x5f8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1c32);
        EXPECT(gbc.pc(), 0x5fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 039A
        gbc.setState(0xa247, 0x4427, 0xee00, 0x5473, 0xbbf6, 0x937c, 0x0, 0x0);
        gbc.writeMem(0xa247, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4427);
        EXPECT(gbc.pc(), 0xa249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa247), 0xcb);
        EXPECT(gbc.readMem(0xa248), 0xa3);
        // CB A3 039C
        gbc.setState(0x7564, 0xd6b6, 0x79c0, 0xe89f, 0x9990, 0xc4e7, 0x0, 0x0);
        gbc.writeMem(0x7564, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd6b6);
        EXPECT(gbc.pc(), 0x7566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 039D
        gbc.setState(0x6ea4, 0x6641, 0xf380, 0xcf76, 0x5f3e, 0x68c1, 0x0, 0x1);
        gbc.writeMem(0x6ea4, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6641);
        EXPECT(gbc.pc(), 0x6ea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 039E
        gbc.setState(0x2a17, 0x4cb8, 0xc2d0, 0xdd37, 0xf1bd, 0x20c3, 0x0, 0x1);
        gbc.writeMem(0x2a17, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4cb8);
        EXPECT(gbc.pc(), 0x2a19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 039F
        gbc.setState(0x3ac1, 0x8768, 0x6540, 0xaf6e, 0x3da3, 0x95c1, 0x1, 0x0);
        gbc.writeMem(0x3ac1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8768);
        EXPECT(gbc.pc(), 0x3ac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03A0
        gbc.setState(0x9537, 0x4ac, 0xf380, 0x9ad1, 0xdaa0, 0x90b3, 0x0, 0x1);
        gbc.writeMem(0x9537, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4ac);
        EXPECT(gbc.pc(), 0x9539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9537), 0xcb);
        EXPECT(gbc.readMem(0x9538), 0xa3);
        // CB A3 03A1
        gbc.setState(0xdeda, 0x17c1, 0xaa00, 0x28d6, 0x5e66, 0xc7e1, 0x0, 0x0);
        gbc.writeMem(0xdeda, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x17c1);
        EXPECT(gbc.pc(), 0xdedc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeda), 0xcb);
        EXPECT(gbc.readMem(0xdedb), 0xa3);
        // CB A3 03A2
        gbc.setState(0xcff3, 0x6198, 0xba80, 0xffae, 0x93ad, 0x4902, 0x0, 0x1);
        gbc.writeMem(0xcff3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6198);
        EXPECT(gbc.pc(), 0xcff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcff3), 0xcb);
        EXPECT(gbc.readMem(0xcff4), 0xa3);
        // CB A3 03A3
        gbc.setState(0x8c3, 0xdb3c, 0xb3b0, 0xc4ab, 0xb760, 0x5140, 0x0, 0x1);
        gbc.writeMem(0x8c3, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xdb3c);
        EXPECT(gbc.pc(), 0x8c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03A4
        gbc.setState(0x78f6, 0xeb46, 0x6dd0, 0x1220, 0x502, 0xeded, 0x0, 0x1);
        gbc.writeMem(0x78f6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xeb46);
        EXPECT(gbc.pc(), 0x78f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03A5
        gbc.setState(0xc882, 0xf1a0, 0x3750, 0xe484, 0xc34, 0xc06f, 0x1, 0x1);
        gbc.writeMem(0xc882, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf1a0);
        EXPECT(gbc.pc(), 0xc884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc882), 0xcb);
        EXPECT(gbc.readMem(0xc883), 0xa3);
        // CB A3 03A6
        gbc.setState(0xd1d6, 0x4606, 0x6f70, 0xe26b, 0xd3e3, 0x886b, 0x1, 0x1);
        gbc.writeMem(0xd1d6, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4606);
        EXPECT(gbc.pc(), 0xd1d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1d6), 0xcb);
        EXPECT(gbc.readMem(0xd1d7), 0xa3);
        // CB A3 03A7
        gbc.setState(0x64a, 0x1145, 0xa520, 0x1ae9, 0x867c, 0x1340, 0x0, 0x1);
        gbc.writeMem(0x64a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1145);
        EXPECT(gbc.pc(), 0x64c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03A8
        gbc.setState(0x6660, 0xf0eb, 0x9e80, 0x83af, 0xe609, 0xf7ba, 0x1, 0x0);
        gbc.writeMem(0x6660, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf0eb);
        EXPECT(gbc.pc(), 0x6662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03A9
        gbc.setState(0x8f13, 0x349d, 0x2290, 0x27d2, 0x1adc, 0x3bc1, 0x0, 0x1);
        gbc.writeMem(0x8f13, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x349d);
        EXPECT(gbc.pc(), 0x8f15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f13), 0xcb);
        EXPECT(gbc.readMem(0x8f14), 0xa3);
        // CB A3 03AA
        gbc.setState(0xc256, 0x2b0a, 0x290, 0x4d59, 0xabe0, 0xa40, 0x0, 0x0);
        gbc.writeMem(0xc256, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2b0a);
        EXPECT(gbc.pc(), 0xc258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc256), 0xcb);
        EXPECT(gbc.readMem(0xc257), 0xa3);
        // CB A3 03AB
        gbc.setState(0xfab, 0x5ea7, 0x6c90, 0x39cc, 0x5fed, 0xd241, 0x0, 0x0);
        gbc.writeMem(0xfab, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5ea7);
        EXPECT(gbc.pc(), 0xfad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03AC
        gbc.setState(0xa2e0, 0xac01, 0xe7e0, 0xa361, 0x9660, 0xc02e, 0x0, 0x0);
        gbc.writeMem(0xa2e0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xac01);
        EXPECT(gbc.pc(), 0xa2e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2e0), 0xcb);
        EXPECT(gbc.readMem(0xa2e1), 0xa3);
        // CB A3 03AD
        gbc.setState(0x9607, 0x7bfe, 0x5c30, 0x70c3, 0x38dc, 0x895e, 0x1, 0x1);
        gbc.writeMem(0x9607, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7bfe);
        EXPECT(gbc.pc(), 0x9609);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9607), 0xcb);
        EXPECT(gbc.readMem(0x9608), 0xa3);
        // CB A3 03AE
        gbc.setState(0x1e39, 0x33ac, 0x3a40, 0x1c80, 0x9f26, 0xc6ba, 0x0, 0x0);
        gbc.writeMem(0x1e39, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x33ac);
        EXPECT(gbc.pc(), 0x1e3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03AF
        gbc.setState(0xdae1, 0xb4a2, 0x6f90, 0x387d, 0xa586, 0x2759, 0x0, 0x0);
        gbc.writeMem(0xdae1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb4a2);
        EXPECT(gbc.pc(), 0xdae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae1), 0xcb);
        EXPECT(gbc.readMem(0xdae2), 0xa3);
        // CB A3 03B0
        gbc.setState(0x6f23, 0x7ba6, 0x46d0, 0x2c99, 0xdab, 0x4f8f, 0x0, 0x0);
        gbc.writeMem(0x6f23, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7ba6);
        EXPECT(gbc.pc(), 0x6f25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03B1
        gbc.setState(0xaf51, 0x5df1, 0x3660, 0x8288, 0xf876, 0x97d1, 0x1, 0x1);
        gbc.writeMem(0xaf51, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5df1);
        EXPECT(gbc.pc(), 0xaf53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf51), 0xcb);
        EXPECT(gbc.readMem(0xaf52), 0xa3);
        // CB A3 03B2
        gbc.setState(0xb997, 0x67c9, 0x77b0, 0xaeae, 0xf163, 0xc916, 0x0, 0x1);
        gbc.writeMem(0xb997, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x67c9);
        EXPECT(gbc.pc(), 0xb999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb997), 0xcb);
        EXPECT(gbc.readMem(0xb998), 0xa3);
        // CB A3 03B3
        gbc.setState(0x2ceb, 0x2a84, 0x5c30, 0x982c, 0x33b9, 0x2103, 0x1, 0x1);
        gbc.writeMem(0x2ceb, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2a84);
        EXPECT(gbc.pc(), 0x2ced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03B4
        gbc.setState(0x4430, 0x8beb, 0xfb60, 0xca18, 0x3da7, 0x9acb, 0x1, 0x1);
        gbc.writeMem(0x4430, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8beb);
        EXPECT(gbc.pc(), 0x4432);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03B5
        gbc.setState(0x7c5a, 0xcf19, 0x8bc0, 0x1da2, 0x7e04, 0x72f8, 0x1, 0x0);
        gbc.writeMem(0x7c5a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xcf19);
        EXPECT(gbc.pc(), 0x7c5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03B6
        gbc.setState(0x390c, 0x258a, 0xb2d0, 0x95d0, 0xa1be, 0x659d, 0x1, 0x0);
        gbc.writeMem(0x390c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x258a);
        EXPECT(gbc.pc(), 0x390e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03B7
        gbc.setState(0xd51a, 0xa918, 0xb8d0, 0xe562, 0x45bb, 0xcbc7, 0x0, 0x1);
        gbc.writeMem(0xd51a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa918);
        EXPECT(gbc.pc(), 0xd51c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd51a), 0xcb);
        EXPECT(gbc.readMem(0xd51b), 0xa3);
        // CB A3 03B8
        gbc.setState(0xacf8, 0x8a0f, 0x7480, 0xbdd8, 0xa9fc, 0x4a3a, 0x0, 0x1);
        gbc.writeMem(0xacf8, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8a0f);
        EXPECT(gbc.pc(), 0xacfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacf8), 0xcb);
        EXPECT(gbc.readMem(0xacf9), 0xa3);
        // CB A3 03B9
        gbc.setState(0xe8c2, 0xf5ed, 0x2840, 0xabf2, 0xd5fe, 0x28da, 0x0, 0x0);
        gbc.writeMem(0xe8c2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf5ed);
        EXPECT(gbc.pc(), 0xe8c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c2), 0xcb);
        EXPECT(gbc.readMem(0xe8c3), 0xa3);
        // CB A3 03BA
        gbc.setState(0x9f03, 0xaa1c, 0xbf10, 0x4122, 0x55ac, 0xcf06, 0x0, 0x1);
        gbc.writeMem(0x9f03, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xaa1c);
        EXPECT(gbc.pc(), 0x9f05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f03), 0xcb);
        EXPECT(gbc.readMem(0x9f04), 0xa3);
        // CB A3 03BB
        gbc.setState(0x6f1a, 0x6dd9, 0x68a0, 0x597e, 0x69cc, 0xe599, 0x0, 0x1);
        gbc.writeMem(0x6f1a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6dd9);
        EXPECT(gbc.pc(), 0x6f1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03BC
        gbc.setState(0x2056, 0x469c, 0x40c0, 0xd83e, 0x2ffc, 0x377c, 0x1, 0x0);
        gbc.writeMem(0x2056, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x469c);
        EXPECT(gbc.pc(), 0x2058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03BD
        gbc.setState(0xc88, 0x3865, 0xfaa0, 0xa540, 0x3caa, 0xf767, 0x1, 0x1);
        gbc.writeMem(0xc88, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3865);
        EXPECT(gbc.pc(), 0xc8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03BE
        gbc.setState(0x9c27, 0x61a2, 0xf440, 0xbd63, 0xd8e, 0xfa71, 0x1, 0x0);
        gbc.writeMem(0x9c27, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x61a2);
        EXPECT(gbc.pc(), 0x9c29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c27), 0xcb);
        EXPECT(gbc.readMem(0x9c28), 0xa3);
        // CB A3 03BF
        gbc.setState(0x73de, 0x3165, 0x9190, 0xd082, 0x314b, 0x8632, 0x0, 0x0);
        gbc.writeMem(0x73de, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3165);
        EXPECT(gbc.pc(), 0x73e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03C0
        gbc.setState(0xe58, 0x4180, 0x3390, 0x5398, 0x457b, 0x9abe, 0x0, 0x0);
        gbc.writeMem(0xe58, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4180);
        EXPECT(gbc.pc(), 0xe5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03C1
        gbc.setState(0x2ed2, 0xfba9, 0xccc0, 0x98bf, 0xcef6, 0x4e29, 0x1, 0x0);
        gbc.writeMem(0x2ed2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xfba9);
        EXPECT(gbc.pc(), 0x2ed4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03C3
        gbc.setState(0x8d42, 0xcd64, 0xef40, 0x4ee8, 0xbf88, 0x1e2a, 0x1, 0x0);
        gbc.writeMem(0x8d42, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xcd64);
        EXPECT(gbc.pc(), 0x8d44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d42), 0xcb);
        EXPECT(gbc.readMem(0x8d43), 0xa3);
        // CB A3 03C4
        gbc.setState(0x1804, 0x4ebf, 0x6850, 0x4f9a, 0xe468, 0xe8be, 0x1, 0x0);
        gbc.writeMem(0x1804, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4ebf);
        EXPECT(gbc.pc(), 0x1806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03C5
        gbc.setState(0xa07, 0xe5d1, 0xa5e0, 0xf9d8, 0xc03b, 0x42b2, 0x0, 0x0);
        gbc.writeMem(0xa07, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe5d1);
        EXPECT(gbc.pc(), 0xa09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03C6
        gbc.setState(0xd908, 0x4d03, 0x1230, 0x4edb, 0xca2c, 0xd1a, 0x0, 0x1);
        gbc.writeMem(0xd908, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4d03);
        EXPECT(gbc.pc(), 0xd90a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd908), 0xcb);
        EXPECT(gbc.readMem(0xd909), 0xa3);
        // CB A3 03C7
        gbc.setState(0x7fb7, 0x837d, 0x2300, 0x907f, 0xc907, 0xc514, 0x0, 0x1);
        gbc.writeMem(0x7fb7, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x837d);
        EXPECT(gbc.pc(), 0x7fb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03C8
        gbc.setState(0x330c, 0x94ef, 0x14b0, 0x6e7a, 0xa78d, 0xbc18, 0x0, 0x1);
        gbc.writeMem(0x330c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x94ef);
        EXPECT(gbc.pc(), 0x330e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03C9
        gbc.setState(0x747a, 0x1f5a, 0x5fa0, 0x3740, 0xad8f, 0xf8ac, 0x0, 0x0);
        gbc.writeMem(0x747a, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1f5a);
        EXPECT(gbc.pc(), 0x747c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03CA
        gbc.setState(0xd0fa, 0xcd15, 0x860, 0x9778, 0xf32f, 0x26ff, 0x0, 0x0);
        gbc.writeMem(0xd0fa, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xcd15);
        EXPECT(gbc.pc(), 0xd0fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0fa), 0xcb);
        EXPECT(gbc.readMem(0xd0fb), 0xa3);
        // CB A3 03CB
        gbc.setState(0x7ab2, 0xd32a, 0xa3a0, 0x51d1, 0xef7a, 0x23d7, 0x1, 0x0);
        gbc.writeMem(0x7ab2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd32a);
        EXPECT(gbc.pc(), 0x7ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03CC
        gbc.setState(0xcf8f, 0x7a54, 0xfb80, 0x855b, 0xae99, 0x1356, 0x0, 0x1);
        gbc.writeMem(0xcf8f, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7a54);
        EXPECT(gbc.pc(), 0xcf91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf8f), 0xcb);
        EXPECT(gbc.readMem(0xcf90), 0xa3);
        // CB A3 03CD
        gbc.setState(0xc0a0, 0x259c, 0x4010, 0x67e5, 0x622, 0x2e46, 0x0, 0x0);
        gbc.writeMem(0xc0a0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x259c);
        EXPECT(gbc.pc(), 0xc0a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0a0), 0xcb);
        EXPECT(gbc.readMem(0xc0a1), 0xa3);
        // CB A3 03CE
        gbc.setState(0xb2c0, 0x8475, 0x9540, 0x9857, 0xc089, 0xcda5, 0x1, 0x1);
        gbc.writeMem(0xb2c0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8475);
        EXPECT(gbc.pc(), 0xb2c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2c0), 0xcb);
        EXPECT(gbc.readMem(0xb2c1), 0xa3);
        // CB A3 03CF
        gbc.setState(0x37be, 0xa7, 0x9c50, 0xf55d, 0x451, 0x15df, 0x1, 0x1);
        gbc.writeMem(0x37be, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa7);
        EXPECT(gbc.pc(), 0x37c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03D0
        gbc.setState(0xefaa, 0xf558, 0x9b30, 0x3987, 0x72f8, 0x1394, 0x0, 0x1);
        gbc.writeMem(0xefaa, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf558);
        EXPECT(gbc.pc(), 0xefac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefaa), 0xcb);
        EXPECT(gbc.readMem(0xefab), 0xa3);
        // CB A3 03D1
        gbc.setState(0xee96, 0x7ef3, 0xb2a0, 0x12d7, 0xee5f, 0xd6d2, 0x0, 0x1);
        gbc.writeMem(0xee96, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7ef3);
        EXPECT(gbc.pc(), 0xee98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee96), 0xcb);
        EXPECT(gbc.readMem(0xee97), 0xa3);
        // CB A3 03D2
        gbc.setState(0x6e19, 0x572, 0x7780, 0x220b, 0x94f0, 0xee83, 0x0, 0x0);
        gbc.writeMem(0x6e19, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x572);
        EXPECT(gbc.pc(), 0x6e1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03D5
        gbc.setState(0xdd4e, 0x4eac, 0x3f30, 0x1481, 0xcf50, 0xec24, 0x0, 0x0);
        gbc.writeMem(0xdd4e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4eac);
        EXPECT(gbc.pc(), 0xdd50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd4e), 0xcb);
        EXPECT(gbc.readMem(0xdd4f), 0xa3);
        // CB A3 03D6
        gbc.setState(0xa297, 0x148a, 0x1fc0, 0x3d72, 0xd604, 0xa66, 0x0, 0x1);
        gbc.writeMem(0xa297, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x148a);
        EXPECT(gbc.pc(), 0xa299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa297), 0xcb);
        EXPECT(gbc.readMem(0xa298), 0xa3);
        // CB A3 03D7
        gbc.setState(0x1ab0, 0x2b70, 0xe0b0, 0x438d, 0x674a, 0x1894, 0x1, 0x1);
        gbc.writeMem(0x1ab0, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2b70);
        EXPECT(gbc.pc(), 0x1ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03D8
        gbc.setState(0x5ad, 0xe94f, 0xdc30, 0x670f, 0x517c, 0xe370, 0x1, 0x1);
        gbc.writeMem(0x5ad, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe94f);
        EXPECT(gbc.pc(), 0x5af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03D9
        gbc.setState(0x6e92, 0x1e69, 0xa850, 0x21d, 0x39f, 0x8e17, 0x0, 0x1);
        gbc.writeMem(0x6e92, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1e69);
        EXPECT(gbc.pc(), 0x6e94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03DA
        gbc.setState(0x6fd, 0x7cec, 0xa790, 0xc24c, 0x63a2, 0x1827, 0x1, 0x1);
        gbc.writeMem(0x6fd, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7cec);
        EXPECT(gbc.pc(), 0x6ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03DB
        gbc.setState(0x8c45, 0x808a, 0x1230, 0xc476, 0xcd94, 0xa2bd, 0x0, 0x1);
        gbc.writeMem(0x8c45, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x808a);
        EXPECT(gbc.pc(), 0x8c47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c45), 0xcb);
        EXPECT(gbc.readMem(0x8c46), 0xa3);
        // CB A3 03DC
        gbc.setState(0x421c, 0xd8a7, 0xfc20, 0xff09, 0xee4f, 0x9bbb, 0x1, 0x1);
        gbc.writeMem(0x421c, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd8a7);
        EXPECT(gbc.pc(), 0x421e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03DD
        gbc.setState(0x4b08, 0x6793, 0x59f0, 0x1a3, 0xf055, 0xaca0, 0x0, 0x1);
        gbc.writeMem(0x4b08, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6793);
        EXPECT(gbc.pc(), 0x4b0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A3 03DF
        gbc.setState(0x90f1, 0xeab0, 0xa930, 0xb12f, 0x378c, 0x9475, 0x0, 0x1);
        gbc.writeMem(0x90f1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xeab0);
        EXPECT(gbc.pc(), 0x90f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f1), 0xcb);
        EXPECT(gbc.readMem(0x90f2), 0xa3);
        // CB A3 03E0
        gbc.setState(0xd3e2, 0xf200, 0x9eb0, 0xfe6f, 0xaca4, 0x5607, 0x1, 0x1);
        gbc.writeMem(0xd3e2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf200);
        EXPECT(gbc.pc(), 0xd3e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3e2), 0xcb);
        EXPECT(gbc.readMem(0xd3e3), 0xa3);
        // CB A3 03E1
        gbc.setState(0xae7e, 0x8434, 0x9190, 0xb18d, 0xe84e, 0x65d, 0x0, 0x0);
        gbc.writeMem(0xae7e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8434);
        EXPECT(gbc.pc(), 0xae80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae7e), 0xcb);
        EXPECT(gbc.readMem(0xae7f), 0xa3);
        // CB A3 03E2
        gbc.setState(0xa79e, 0xcd00, 0x8380, 0xe794, 0x1071, 0x5fec, 0x0, 0x0);
        gbc.writeMem(0xa79e, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xcd00);
        EXPECT(gbc.pc(), 0xa7a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa79e), 0xcb);
        EXPECT(gbc.readMem(0xa79f), 0xa3);
        // CB A3 03E3
        gbc.setState(0x920, 0x6327, 0xcc60, 0x5a75, 0x20c3, 0x358f, 0x1, 0x0);
        gbc.writeMem(0x920, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6327);
        EXPECT(gbc.pc(), 0x922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03E4
        gbc.setState(0x9e1d, 0xdb41, 0x6ca0, 0x2ab3, 0x8ee5, 0xfdb6, 0x1, 0x0);
        gbc.writeMem(0x9e1d, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdb41);
        EXPECT(gbc.pc(), 0x9e1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e1d), 0xcb);
        EXPECT(gbc.readMem(0x9e1e), 0xa3);
        // CB A3 03E5
        gbc.setState(0x91ec, 0xddff, 0xcc70, 0xde05, 0x3f93, 0x1a25, 0x0, 0x0);
        gbc.writeMem(0x91ec, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xddff);
        EXPECT(gbc.pc(), 0x91ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91ec), 0xcb);
        EXPECT(gbc.readMem(0x91ed), 0xa3);
        // CB A3 03E6
        gbc.setState(0x44e1, 0xeafc, 0xcfc0, 0x7391, 0x35bd, 0x4c21, 0x0, 0x0);
        gbc.writeMem(0x44e1, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xeafc);
        EXPECT(gbc.pc(), 0x44e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A3 03E7
        gbc.setState(0xcce2, 0x5c4c, 0x70a0, 0x31e5, 0xec2a, 0x28a4, 0x1, 0x0);
        gbc.writeMem(0xcce2, { 0xcb, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5c4c);
        EXPECT(gbc.pc(), 0xcce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcce2), 0xcb);
        EXPECT(gbc.readMem(0xcce3), 0xa3);
    }
