    TEST(gbcemu, opcode_b7) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // B7 0000
        gbc.setState(0x4ba2, 0x4bd1, 0x59f0, 0xc252, 0xa2fc, 0x6836, 0x1, 0x0);
        gbc.writeMem(0x4ba2, { 0xb7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4bd1, gbc.sp());
        EXPECT(0x4ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0001
        gbc.setState(0xe5b, 0x6188, 0x5300, 0xbf3d, 0x5ec4, 0xebcf, 0x0, 0x0);
        gbc.writeMem(0xe5b, { 0xb7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6188, gbc.sp());
        EXPECT(0xe5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0002
        gbc.setState(0xccdf, 0x68a0, 0xba20, 0x80f9, 0xca0, 0x4d1e, 0x1, 0x1);
        gbc.writeMem(0xccdf, { 0xb7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x68a0, gbc.sp());
        EXPECT(0xcce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xccdf));
        // B7 0003
        gbc.setState(0x2e80, 0x4d9, 0xd6b0, 0xd2ac, 0x7741, 0xcb7a, 0x0, 0x0);
        gbc.writeMem(0x2e80, { 0xb7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4d9, gbc.sp());
        EXPECT(0x2e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0004
        gbc.setState(0x3fc0, 0xdb1c, 0xc90, 0xdea4, 0xffdc, 0x840, 0x0, 0x1);
        gbc.writeMem(0x3fc0, { 0xb7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdb1c, gbc.sp());
        EXPECT(0x3fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0005
        gbc.setState(0x760e, 0xae3e, 0x83f0, 0xd034, 0xf1a6, 0xd266, 0x0, 0x1);
        gbc.writeMem(0x760e, { 0xb7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xae3e, gbc.sp());
        EXPECT(0x760f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0006
        gbc.setState(0xc288, 0x5493, 0xaf20, 0x36f0, 0x6f84, 0xfed3, 0x1, 0x0);
        gbc.writeMem(0xc288, { 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5493, gbc.sp());
        EXPECT(0xc289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc288));
        // B7 0007
        gbc.setState(0x85a, 0xdb70, 0x2b70, 0x9bf, 0x8576, 0x4e86, 0x0, 0x1);
        gbc.writeMem(0x85a, { 0xb7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdb70, gbc.sp());
        EXPECT(0x85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0008
        gbc.setState(0xb3bc, 0xd67d, 0x7680, 0xc77d, 0x3877, 0x262a, 0x1, 0x0);
        gbc.writeMem(0xb3bc, { 0xb7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd67d, gbc.sp());
        EXPECT(0xb3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb3bc));
        // B7 0009
        gbc.setState(0x78b7, 0x67ea, 0x6260, 0x264d, 0x7649, 0xbe2d, 0x1, 0x1);
        gbc.writeMem(0x78b7, { 0xb7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x67ea, gbc.sp());
        EXPECT(0x78b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 000A
        gbc.setState(0x33, 0xae48, 0xf9f0, 0xfec, 0x3583, 0x20e2, 0x0, 0x1);
        gbc.writeMem(0x33, { 0xb7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xae48, gbc.sp());
        EXPECT(0x34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 000B
        gbc.setState(0xeced, 0x9e7d, 0xf160, 0x7149, 0xf8aa, 0x7320, 0x1, 0x0);
        gbc.writeMem(0xeced, { 0xb7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9e7d, gbc.sp());
        EXPECT(0xecee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xeced));
        // B7 000C
        gbc.setState(0xdd95, 0x5853, 0x1290, 0x4b4e, 0x8009, 0x1295, 0x0, 0x1);
        gbc.writeMem(0xdd95, { 0xb7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5853, gbc.sp());
        EXPECT(0xdd96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdd95));
        // B7 000D
        gbc.setState(0xefc8, 0x7beb, 0xacc0, 0xeb4, 0xe021, 0x1665, 0x1, 0x1);
        gbc.writeMem(0xefc8, { 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7beb, gbc.sp());
        EXPECT(0xefc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xefc8));
        // B7 000E
        gbc.setState(0xa33d, 0x97d6, 0x5440, 0x93f6, 0xe326, 0x4411, 0x1, 0x1);
        gbc.writeMem(0xa33d, { 0xb7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x97d6, gbc.sp());
        EXPECT(0xa33e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa33d));
        // B7 000F
        gbc.setState(0xc900, 0x81b5, 0xbdb0, 0x34d4, 0xce48, 0xd5fc, 0x0, 0x0);
        gbc.writeMem(0xc900, { 0xb7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x81b5, gbc.sp());
        EXPECT(0xc901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc900));
        // B7 0010
        gbc.setState(0xdfda, 0xb52f, 0xcdb0, 0x3e5a, 0x6ea, 0x20e9, 0x1, 0x0);
        gbc.writeMem(0xdfda, { 0xb7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb52f, gbc.sp());
        EXPECT(0xdfdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdfda));
        // B7 0011
        gbc.setState(0xd39b, 0xffdb, 0xc600, 0x8526, 0xc023, 0x2a0b, 0x1, 0x0);
        gbc.writeMem(0xd39b, { 0xb7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xffdb, gbc.sp());
        EXPECT(0xd39c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd39b));
        // B7 0012
        gbc.setState(0xe97c, 0x7fba, 0xa870, 0x47b3, 0x2954, 0xe38e, 0x1, 0x0);
        gbc.writeMem(0xe97c, { 0xb7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7fba, gbc.sp());
        EXPECT(0xe97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe97c));
        // B7 0013
        gbc.setState(0x7a5a, 0x8072, 0xbe90, 0x7c16, 0xbd72, 0x84ce, 0x0, 0x0);
        gbc.writeMem(0x7a5a, { 0xb7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8072, gbc.sp());
        EXPECT(0x7a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0014
        gbc.setState(0x8402, 0x5226, 0xd550, 0x8ffe, 0x2471, 0x4454, 0x1, 0x1);
        gbc.writeMem(0x8402, { 0xb7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5226, gbc.sp());
        EXPECT(0x8403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8402));
        // B7 0015
        gbc.setState(0x94af, 0x691f, 0x1b00, 0xe9cc, 0xec7d, 0xfda5, 0x1, 0x0);
        gbc.writeMem(0x94af, { 0xb7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x691f, gbc.sp());
        EXPECT(0x94b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x94af));
        // B7 0016
        gbc.setState(0xb40f, 0x9639, 0x3dc0, 0xb39d, 0x2383, 0xe920, 0x0, 0x1);
        gbc.writeMem(0xb40f, { 0xb7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9639, gbc.sp());
        EXPECT(0xb410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb40f));
        // B7 0017
        gbc.setState(0xbeb3, 0x2d8b, 0x23e0, 0x21d9, 0xaa8d, 0x76d1, 0x1, 0x1);
        gbc.writeMem(0xbeb3, { 0xb7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2d8b, gbc.sp());
        EXPECT(0xbeb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbeb3));
        // B7 0018
        gbc.setState(0x9c81, 0x3f, 0x74f0, 0x48ab, 0xb13e, 0x60b0, 0x0, 0x1);
        gbc.writeMem(0x9c81, { 0xb7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3f, gbc.sp());
        EXPECT(0x9c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9c81));
        // B7 0019
        gbc.setState(0x6378, 0x2735, 0x1af0, 0x4646, 0xdcc3, 0x1690, 0x1, 0x0);
        gbc.writeMem(0x6378, { 0xb7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2735, gbc.sp());
        EXPECT(0x6379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 001A
        gbc.setState(0xcf98, 0x6ff0, 0xa870, 0x31f7, 0x43e4, 0x1e9a, 0x1, 0x0);
        gbc.writeMem(0xcf98, { 0xb7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6ff0, gbc.sp());
        EXPECT(0xcf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcf98));
        // B7 001B
        gbc.setState(0xdbe, 0xd6f0, 0xa550, 0x3260, 0x4c98, 0x31e3, 0x1, 0x1);
        gbc.writeMem(0xdbe, { 0xb7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd6f0, gbc.sp());
        EXPECT(0xdbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 001C
        gbc.setState(0x8cf6, 0xff8f, 0x7070, 0xa954, 0x8357, 0x5f66, 0x0, 0x0);
        gbc.writeMem(0x8cf6, { 0xb7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xff8f, gbc.sp());
        EXPECT(0x8cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8cf6));
        // B7 001D
        gbc.setState(0x2f54, 0x5f24, 0x4cb0, 0xd4c8, 0xfbf7, 0x5e3c, 0x1, 0x0);
        gbc.writeMem(0x2f54, { 0xb7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5f24, gbc.sp());
        EXPECT(0x2f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 001E
        gbc.setState(0x9c4f, 0x29cc, 0x6e60, 0xdd6c, 0x9f94, 0x6cfb, 0x1, 0x0);
        gbc.writeMem(0x9c4f, { 0xb7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x29cc, gbc.sp());
        EXPECT(0x9c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9c4f));
        // B7 001F
        gbc.setState(0xac1c, 0x423e, 0x6ee0, 0x6c88, 0x8e9b, 0xcba5, 0x1, 0x1);
        gbc.writeMem(0xac1c, { 0xb7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x423e, gbc.sp());
        EXPECT(0xac1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xac1c));
        // B7 0020
        gbc.setState(0xaf33, 0x9ff6, 0x2ff0, 0xc620, 0x3eea, 0x7e19, 0x1, 0x0);
        gbc.writeMem(0xaf33, { 0xb7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9ff6, gbc.sp());
        EXPECT(0xaf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xaf33));
        // B7 0021
        gbc.setState(0x1648, 0x30e7, 0x4090, 0x8355, 0xb747, 0xbd2, 0x1, 0x1);
        gbc.writeMem(0x1648, { 0xb7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x30e7, gbc.sp());
        EXPECT(0x1649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0022
        gbc.setState(0x92d2, 0x19d7, 0xcac0, 0xc630, 0x7544, 0x2060, 0x1, 0x0);
        gbc.writeMem(0x92d2, { 0xb7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x19d7, gbc.sp());
        EXPECT(0x92d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x92d2));
        // B7 0023
        gbc.setState(0x2e18, 0x111c, 0x4d50, 0x7e8, 0x3052, 0xbe53, 0x1, 0x1);
        gbc.writeMem(0x2e18, { 0xb7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x111c, gbc.sp());
        EXPECT(0x2e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0024
        gbc.setState(0xf50, 0x865, 0xf5d0, 0x9cfa, 0xd2b2, 0xdc07, 0x1, 0x1);
        gbc.writeMem(0xf50, { 0xb7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x865, gbc.sp());
        EXPECT(0xf51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0025
        gbc.setState(0x8a7f, 0x2cd8, 0x8b60, 0x5601, 0x8142, 0x184b, 0x1, 0x1);
        gbc.writeMem(0x8a7f, { 0xb7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2cd8, gbc.sp());
        EXPECT(0x8a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8a7f));
        // B7 0026
        gbc.setState(0xe0d5, 0xd765, 0xc670, 0xc239, 0xcebd, 0x807c, 0x1, 0x1);
        gbc.writeMem(0xe0d5, { 0xb7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd765, gbc.sp());
        EXPECT(0xe0d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe0d5));
        // B7 0027
        gbc.setState(0x83c7, 0x80ef, 0x6a00, 0x2651, 0x682d, 0xd922, 0x1, 0x1);
        gbc.writeMem(0x83c7, { 0xb7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x80ef, gbc.sp());
        EXPECT(0x83c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x83c7));
        // B7 0028
        gbc.setState(0xef8e, 0x4566, 0x9a20, 0x7fd3, 0x3327, 0x192c, 0x0, 0x0);
        gbc.writeMem(0xef8e, { 0xb7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4566, gbc.sp());
        EXPECT(0xef8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xef8e));
        // B7 0029
        gbc.setState(0x54ea, 0xb70a, 0x46b0, 0x7e25, 0xa5cb, 0x6db2, 0x0, 0x0);
        gbc.writeMem(0x54ea, { 0xb7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb70a, gbc.sp());
        EXPECT(0x54eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 002A
        gbc.setState(0xc2d1, 0x8b4f, 0x7a0, 0x1ea2, 0xd9bd, 0x7496, 0x0, 0x1);
        gbc.writeMem(0xc2d1, { 0xb7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8b4f, gbc.sp());
        EXPECT(0xc2d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc2d1));
        // B7 002B
        gbc.setState(0x4df7, 0x2b07, 0xc10, 0x23fc, 0xa093, 0x5974, 0x1, 0x1);
        gbc.writeMem(0x4df7, { 0xb7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2b07, gbc.sp());
        EXPECT(0x4df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 002C
        gbc.setState(0xca44, 0x1e70, 0x31f0, 0x23e4, 0xb893, 0xa9c6, 0x1, 0x1);
        gbc.writeMem(0xca44, { 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1e70, gbc.sp());
        EXPECT(0xca45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xca44));
        // B7 002D
        gbc.setState(0xaf5b, 0x10d2, 0xa530, 0xaf42, 0xe3bc, 0xf2d0, 0x0, 0x0);
        gbc.writeMem(0xaf5b, { 0xb7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x10d2, gbc.sp());
        EXPECT(0xaf5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xaf5b));
        // B7 002E
        gbc.setState(0xa094, 0x2fe8, 0x1e60, 0x68ac, 0x9653, 0x32d8, 0x1, 0x0);
        gbc.writeMem(0xa094, { 0xb7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2fe8, gbc.sp());
        EXPECT(0xa095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa094));
        // B7 0031
        gbc.setState(0xa28e, 0x15a0, 0x25e0, 0xac68, 0xa72c, 0xbd24, 0x0, 0x0);
        gbc.writeMem(0xa28e, { 0xb7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x15a0, gbc.sp());
        EXPECT(0xa28f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa28e));
        // B7 0032
        gbc.setState(0x2c04, 0xb118, 0x41f0, 0x28ac, 0x28cb, 0x177e, 0x1, 0x0);
        gbc.writeMem(0x2c04, { 0xb7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb118, gbc.sp());
        EXPECT(0x2c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0033
        gbc.setState(0x31c1, 0x14e9, 0xb0, 0x4164, 0xda20, 0xf295, 0x1, 0x0);
        gbc.writeMem(0x31c1, { 0xb7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x14e9, gbc.sp());
        EXPECT(0x31c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0034
        gbc.setState(0x8f01, 0x3e02, 0xa600, 0x7352, 0x5dce, 0xe154, 0x0, 0x1);
        gbc.writeMem(0x8f01, { 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3e02, gbc.sp());
        EXPECT(0x8f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8f01));
        // B7 0035
        gbc.setState(0x1449, 0xa3ae, 0x3410, 0xd63e, 0x8837, 0x84cb, 0x1, 0x0);
        gbc.writeMem(0x1449, { 0xb7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa3ae, gbc.sp());
        EXPECT(0x144a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0036
        gbc.setState(0xda2f, 0xc427, 0x2d00, 0x4129, 0xf3ee, 0xff1d, 0x1, 0x1);
        gbc.writeMem(0xda2f, { 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc427, gbc.sp());
        EXPECT(0xda30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xda2f));
        // B7 0037
        gbc.setState(0x6b1f, 0x482, 0x9700, 0x163e, 0x3504, 0x4489, 0x0, 0x1);
        gbc.writeMem(0x6b1f, { 0xb7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x482, gbc.sp());
        EXPECT(0x6b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0038
        gbc.setState(0x690a, 0x2791, 0xde0, 0xf184, 0xf5dd, 0xedda, 0x0, 0x1);
        gbc.writeMem(0x690a, { 0xb7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2791, gbc.sp());
        EXPECT(0x690b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0039
        gbc.setState(0x4c22, 0xa5ad, 0xff70, 0x99a9, 0x6689, 0xd1d9, 0x1, 0x1);
        gbc.writeMem(0x4c22, { 0xb7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa5ad, gbc.sp());
        EXPECT(0x4c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 003A
        gbc.setState(0x177f, 0x5dbc, 0x7260, 0x2c26, 0xfe20, 0x9dbe, 0x0, 0x1);
        gbc.writeMem(0x177f, { 0xb7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5dbc, gbc.sp());
        EXPECT(0x1780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 003B
        gbc.setState(0x552e, 0x91d7, 0xf270, 0x376c, 0x3a07, 0x434e, 0x1, 0x1);
        gbc.writeMem(0x552e, { 0xb7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x91d7, gbc.sp());
        EXPECT(0x552f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 003C
        gbc.setState(0xb38, 0xc966, 0x15e0, 0x7fa3, 0x936b, 0xf368, 0x0, 0x1);
        gbc.writeMem(0xb38, { 0xb7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc966, gbc.sp());
        EXPECT(0xb39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 003D
        gbc.setState(0x8572, 0xe5f7, 0xe050, 0x4779, 0x46fa, 0xd0c5, 0x1, 0x0);
        gbc.writeMem(0x8572, { 0xb7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe5f7, gbc.sp());
        EXPECT(0x8573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8572));
        // B7 003E
        gbc.setState(0xd399, 0xd6e4, 0x9ad0, 0x8db4, 0xafb8, 0xb93b, 0x1, 0x1);
        gbc.writeMem(0xd399, { 0xb7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd6e4, gbc.sp());
        EXPECT(0xd39a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd399));
        // B7 003F
        gbc.setState(0x60d2, 0x985a, 0x9fe0, 0x42a7, 0xd016, 0xfb0b, 0x0, 0x0);
        gbc.writeMem(0x60d2, { 0xb7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x985a, gbc.sp());
        EXPECT(0x60d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0040
        gbc.setState(0xade1, 0xa18a, 0x16f0, 0xf827, 0xbb80, 0x4dea, 0x0, 0x1);
        gbc.writeMem(0xade1, { 0xb7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa18a, gbc.sp());
        EXPECT(0xade2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xade1));
        // B7 0041
        gbc.setState(0x2bfa, 0x57f3, 0x7c30, 0x96f0, 0x49bf, 0x7468, 0x0, 0x1);
        gbc.writeMem(0x2bfa, { 0xb7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x57f3, gbc.sp());
        EXPECT(0x2bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0042
        gbc.setState(0x9f74, 0xeab6, 0x8600, 0xaaa0, 0x4126, 0xc169, 0x0, 0x1);
        gbc.writeMem(0x9f74, { 0xb7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xeab6, gbc.sp());
        EXPECT(0x9f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9f74));
        // B7 0043
        gbc.setState(0xbed9, 0xfb22, 0x88a0, 0x8f0c, 0x7c81, 0x744f, 0x0, 0x1);
        gbc.writeMem(0xbed9, { 0xb7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfb22, gbc.sp());
        EXPECT(0xbeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbed9));
        // B7 0044
        gbc.setState(0x26ee, 0xcef8, 0xe6c0, 0xf26e, 0x19df, 0xee6e, 0x1, 0x0);
        gbc.writeMem(0x26ee, { 0xb7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcef8, gbc.sp());
        EXPECT(0x26ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0047
        gbc.setState(0x20f9, 0x5a84, 0xe30, 0x3e4, 0x5554, 0x6ee0, 0x1, 0x1);
        gbc.writeMem(0x20f9, { 0xb7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5a84, gbc.sp());
        EXPECT(0x20fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0048
        gbc.setState(0x838e, 0xf300, 0x36e0, 0xc476, 0x7803, 0x5738, 0x0, 0x1);
        gbc.writeMem(0x838e, { 0xb7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf300, gbc.sp());
        EXPECT(0x838f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x838e));
        // B7 004A
        gbc.setState(0x9c24, 0x9f5, 0x10a0, 0x2f82, 0x93f7, 0x55f1, 0x0, 0x1);
        gbc.writeMem(0x9c24, { 0xb7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9f5, gbc.sp());
        EXPECT(0x9c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9c24));
        // B7 004B
        gbc.setState(0x872e, 0xf03c, 0xd050, 0x3f36, 0x21b1, 0x5535, 0x1, 0x0);
        gbc.writeMem(0x872e, { 0xb7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf03c, gbc.sp());
        EXPECT(0x872f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x872e));
        // B7 004C
        gbc.setState(0x7a08, 0xd5f, 0x4910, 0x79e0, 0xc96b, 0xb21f, 0x1, 0x0);
        gbc.writeMem(0x7a08, { 0xb7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd5f, gbc.sp());
        EXPECT(0x7a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 004D
        gbc.setState(0x346d, 0x4ed0, 0x5db0, 0x7278, 0x7647, 0xd877, 0x0, 0x1);
        gbc.writeMem(0x346d, { 0xb7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4ed0, gbc.sp());
        EXPECT(0x346e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 004E
        gbc.setState(0x1445, 0x6248, 0x8c80, 0xff87, 0x96a8, 0xb3e5, 0x0, 0x1);
        gbc.writeMem(0x1445, { 0xb7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6248, gbc.sp());
        EXPECT(0x1446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 004F
        gbc.setState(0x5e3b, 0xf16a, 0x8050, 0xb6ed, 0xe3fd, 0x348d, 0x1, 0x0);
        gbc.writeMem(0x5e3b, { 0xb7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf16a, gbc.sp());
        EXPECT(0x5e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0050
        gbc.setState(0xcd19, 0xe941, 0xcef0, 0xc618, 0x3c58, 0x6f3, 0x0, 0x0);
        gbc.writeMem(0xcd19, { 0xb7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe941, gbc.sp());
        EXPECT(0xcd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcd19));
        // B7 0051
        gbc.setState(0x87a8, 0x23d9, 0x5620, 0x6249, 0x3633, 0x2476, 0x1, 0x0);
        gbc.writeMem(0x87a8, { 0xb7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x23d9, gbc.sp());
        EXPECT(0x87a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x87a8));
        // B7 0052
        gbc.setState(0x95b0, 0x83de, 0x5a20, 0x7be8, 0x8b7c, 0xeb31, 0x1, 0x0);
        gbc.writeMem(0x95b0, { 0xb7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x83de, gbc.sp());
        EXPECT(0x95b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x95b0));
        // B7 0053
        gbc.setState(0xe38a, 0xec79, 0x98d0, 0x45e8, 0xf639, 0xd345, 0x1, 0x1);
        gbc.writeMem(0xe38a, { 0xb7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xec79, gbc.sp());
        EXPECT(0xe38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe38a));
        // B7 0054
        gbc.setState(0xffe, 0x7788, 0xb990, 0xf2d9, 0xc690, 0xad53, 0x1, 0x0);
        gbc.writeMem(0xffe, { 0xb7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7788, gbc.sp());
        EXPECT(0xfff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0055
        gbc.setState(0xba79, 0xad38, 0x4930, 0xf99b, 0xf48e, 0xdfc2, 0x0, 0x1);
        gbc.writeMem(0xba79, { 0xb7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xad38, gbc.sp());
        EXPECT(0xba7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xba79));
        // B7 0056
        gbc.setState(0xe90, 0xb669, 0x7a70, 0x784b, 0x5f0f, 0x560a, 0x0, 0x0);
        gbc.writeMem(0xe90, { 0xb7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb669, gbc.sp());
        EXPECT(0xe91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0057
        gbc.setState(0x8491, 0xe3fe, 0xc5d0, 0x3dcf, 0xc648, 0x7529, 0x0, 0x1);
        gbc.writeMem(0x8491, { 0xb7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe3fe, gbc.sp());
        EXPECT(0x8492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8491));
        // B7 0058
        gbc.setState(0x20e8, 0x56bf, 0xeb50, 0xd6c2, 0x1178, 0x2b04, 0x1, 0x1);
        gbc.writeMem(0x20e8, { 0xb7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x56bf, gbc.sp());
        EXPECT(0x20e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0059
        gbc.setState(0x2afd, 0x8df1, 0xc5a0, 0x3888, 0x75a6, 0xd4fe, 0x0, 0x1);
        gbc.writeMem(0x2afd, { 0xb7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8df1, gbc.sp());
        EXPECT(0x2afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 005B
        gbc.setState(0xba1a, 0x10ef, 0x43c0, 0xff5a, 0x3ce1, 0xf003, 0x0, 0x1);
        gbc.writeMem(0xba1a, { 0xb7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x10ef, gbc.sp());
        EXPECT(0xba1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xba1a));
        // B7 005C
        gbc.setState(0x887d, 0xdb19, 0xd8d0, 0xd7b9, 0xdfe5, 0x43a9, 0x0, 0x1);
        gbc.writeMem(0x887d, { 0xb7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdb19, gbc.sp());
        EXPECT(0x887e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x887d));
        // B7 005D
        gbc.setState(0x4ce6, 0x7fe9, 0xba20, 0xaebc, 0x8dc4, 0x70c5, 0x0, 0x1);
        gbc.writeMem(0x4ce6, { 0xb7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7fe9, gbc.sp());
        EXPECT(0x4ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 005E
        gbc.setState(0x208c, 0x9c84, 0x5bf0, 0xe1db, 0xeb6d, 0xc14e, 0x0, 0x0);
        gbc.writeMem(0x208c, { 0xb7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9c84, gbc.sp());
        EXPECT(0x208d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 005F
        gbc.setState(0xdca2, 0x753f, 0x4cf0, 0x403c, 0x7157, 0xfe96, 0x1, 0x0);
        gbc.writeMem(0xdca2, { 0xb7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x753f, gbc.sp());
        EXPECT(0xdca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdca2));
        // B7 0060
        gbc.setState(0xe34f, 0xca6e, 0x16c0, 0x4074, 0xdb48, 0x6460, 0x1, 0x0);
        gbc.writeMem(0xe34f, { 0xb7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xca6e, gbc.sp());
        EXPECT(0xe350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe34f));
        // B7 0062
        gbc.setState(0x2e28, 0x9ba9, 0x69c0, 0xdc40, 0x50c0, 0xb9f2, 0x0, 0x1);
        gbc.writeMem(0x2e28, { 0xb7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9ba9, gbc.sp());
        EXPECT(0x2e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0063
        gbc.setState(0x4ec1, 0x228d, 0xbee0, 0x4ad1, 0xc46c, 0xf3c, 0x0, 0x0);
        gbc.writeMem(0x4ec1, { 0xb7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x228d, gbc.sp());
        EXPECT(0x4ec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0064
        gbc.setState(0xe0ad, 0xd4b1, 0xb340, 0xfe38, 0xcfaf, 0xba18, 0x1, 0x0);
        gbc.writeMem(0xe0ad, { 0xb7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd4b1, gbc.sp());
        EXPECT(0xe0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe0ad));
        // B7 0065
        gbc.setState(0x2160, 0x465f, 0xaa70, 0xf48e, 0x1ac1, 0x1aa4, 0x1, 0x1);
        gbc.writeMem(0x2160, { 0xb7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x465f, gbc.sp());
        EXPECT(0x2161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0066
        gbc.setState(0x1b32, 0x5816, 0x22a0, 0x3f05, 0xb95b, 0x20a7, 0x0, 0x1);
        gbc.writeMem(0x1b32, { 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5816, gbc.sp());
        EXPECT(0x1b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0067
        gbc.setState(0x4df0, 0x1cb1, 0x350, 0x476, 0x877a, 0x125b, 0x1, 0x1);
        gbc.writeMem(0x4df0, { 0xb7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1cb1, gbc.sp());
        EXPECT(0x4df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0068
        gbc.setState(0x8708, 0x37d5, 0x7ff0, 0xf9e2, 0xf7b3, 0x21a4, 0x0, 0x0);
        gbc.writeMem(0x8708, { 0xb7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x37d5, gbc.sp());
        EXPECT(0x8709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8708));
        // B7 0069
        gbc.setState(0x17a6, 0xac78, 0x7bf0, 0x7ba6, 0x851b, 0xc4ff, 0x0, 0x1);
        gbc.writeMem(0x17a6, { 0xb7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xac78, gbc.sp());
        EXPECT(0x17a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 006A
        gbc.setState(0xeed9, 0xc87c, 0x9960, 0x4cdb, 0x6449, 0x39f7, 0x0, 0x0);
        gbc.writeMem(0xeed9, { 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc87c, gbc.sp());
        EXPECT(0xeeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xeed9));
        // B7 006C
        gbc.setState(0xe3f, 0xbeff, 0x9660, 0x709c, 0xb956, 0x9fcd, 0x0, 0x0);
        gbc.writeMem(0xe3f, { 0xb7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbeff, gbc.sp());
        EXPECT(0xe40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 006D
        gbc.setState(0x80bc, 0x7029, 0x7130, 0x1bee, 0x11aa, 0xbb9d, 0x0, 0x0);
        gbc.writeMem(0x80bc, { 0xb7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7029, gbc.sp());
        EXPECT(0x80bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x80bc));
        // B7 006E
        gbc.setState(0xe771, 0x98de, 0xa3e0, 0xa489, 0x821b, 0xe89e, 0x0, 0x0);
        gbc.writeMem(0xe771, { 0xb7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x98de, gbc.sp());
        EXPECT(0xe772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe771));
        // B7 006F
        gbc.setState(0x8cf6, 0xb8fd, 0x3c0, 0xcc85, 0x1ee3, 0x50cc, 0x1, 0x1);
        gbc.writeMem(0x8cf6, { 0xb7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb8fd, gbc.sp());
        EXPECT(0x8cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8cf6));
        // B7 0070
        gbc.setState(0x9779, 0xf811, 0x7fe0, 0xb3be, 0x3b6a, 0x9a58, 0x1, 0x0);
        gbc.writeMem(0x9779, { 0xb7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf811, gbc.sp());
        EXPECT(0x977a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9779));
        // B7 0071
        gbc.setState(0xd85d, 0x2085, 0x4c80, 0x8367, 0xfbe2, 0x8570, 0x0, 0x1);
        gbc.writeMem(0xd85d, { 0xb7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2085, gbc.sp());
        EXPECT(0xd85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd85d));
        // B7 0072
        gbc.setState(0xc8bb, 0xb7f6, 0xf80, 0x6e46, 0x7f8f, 0xf649, 0x0, 0x0);
        gbc.writeMem(0xc8bb, { 0xb7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb7f6, gbc.sp());
        EXPECT(0xc8bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc8bb));
        // B7 0073
        gbc.setState(0x8447, 0x369c, 0xd470, 0xee3d, 0x696c, 0x95e1, 0x1, 0x1);
        gbc.writeMem(0x8447, { 0xb7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x369c, gbc.sp());
        EXPECT(0x8448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8447));
        // B7 0074
        gbc.setState(0x824e, 0xcc25, 0xac0, 0xb6c6, 0x5393, 0x8840, 0x0, 0x0);
        gbc.writeMem(0x824e, { 0xb7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xcc25, gbc.sp());
        EXPECT(0x824f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x824e));
        // B7 0075
        gbc.setState(0xac6b, 0x371e, 0x5c0, 0x29cc, 0x625c, 0x867d, 0x0, 0x0);
        gbc.writeMem(0xac6b, { 0xb7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x371e, gbc.sp());
        EXPECT(0xac6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xac6b));
        // B7 0077
        gbc.setState(0x8ca5, 0x907b, 0x9cc0, 0xe503, 0xc6b6, 0x7af3, 0x0, 0x0);
        gbc.writeMem(0x8ca5, { 0xb7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x907b, gbc.sp());
        EXPECT(0x8ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8ca5));
        // B7 0078
        gbc.setState(0xea6a, 0xa6b0, 0xbc0, 0xece5, 0x60c6, 0x137b, 0x0, 0x0);
        gbc.writeMem(0xea6a, { 0xb7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa6b0, gbc.sp());
        EXPECT(0xea6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xea6a));
        // B7 0079
        gbc.setState(0xc8c0, 0x7cb1, 0x3010, 0x9a2e, 0xdd9b, 0xdcbe, 0x1, 0x0);
        gbc.writeMem(0xc8c0, { 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7cb1, gbc.sp());
        EXPECT(0xc8c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc8c0));
        // B7 007A
        gbc.setState(0x75ab, 0x6ca7, 0x3030, 0xfd59, 0xf062, 0x2ddb, 0x1, 0x1);
        gbc.writeMem(0x75ab, { 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6ca7, gbc.sp());
        EXPECT(0x75ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 007B
        gbc.setState(0x37e3, 0x9ce2, 0x6970, 0x751b, 0xc397, 0xd001, 0x0, 0x0);
        gbc.writeMem(0x37e3, { 0xb7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9ce2, gbc.sp());
        EXPECT(0x37e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 007C
        gbc.setState(0x17a5, 0x41e0, 0x93e0, 0xc52e, 0x734f, 0x16e0, 0x0, 0x1);
        gbc.writeMem(0x17a5, { 0xb7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x41e0, gbc.sp());
        EXPECT(0x17a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 007D
        gbc.setState(0xc779, 0x4206, 0x6910, 0x3fce, 0x223a, 0x5ed8, 0x0, 0x1);
        gbc.writeMem(0xc779, { 0xb7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4206, gbc.sp());
        EXPECT(0xc77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc779));
        // B7 007E
        gbc.setState(0x787c, 0x1cdb, 0x4340, 0xcce8, 0xc6ff, 0xa311, 0x1, 0x0);
        gbc.writeMem(0x787c, { 0xb7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1cdb, gbc.sp());
        EXPECT(0x787d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 007F
        gbc.setState(0x7b03, 0x5fa3, 0xb6b0, 0x5bc0, 0x3958, 0x420c, 0x0, 0x0);
        gbc.writeMem(0x7b03, { 0xb7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5fa3, gbc.sp());
        EXPECT(0x7b04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0080
        gbc.setState(0x77d3, 0x3db2, 0xd320, 0xef30, 0xe11a, 0x363b, 0x1, 0x0);
        gbc.writeMem(0x77d3, { 0xb7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3db2, gbc.sp());
        EXPECT(0x77d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0081
        gbc.setState(0x8620, 0xae96, 0x2250, 0x4729, 0xb5aa, 0x40d1, 0x0, 0x0);
        gbc.writeMem(0x8620, { 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xae96, gbc.sp());
        EXPECT(0x8621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8620));
        // B7 0082
        gbc.setState(0xe539, 0x6142, 0xfe10, 0x6224, 0x497c, 0x3c44, 0x1, 0x0);
        gbc.writeMem(0xe539, { 0xb7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6142, gbc.sp());
        EXPECT(0xe53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe539));
        // B7 0083
        gbc.setState(0x86db, 0x6520, 0x8600, 0xd7f7, 0x6599, 0x4454, 0x1, 0x1);
        gbc.writeMem(0x86db, { 0xb7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6520, gbc.sp());
        EXPECT(0x86dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x86db));
        // B7 0084
        gbc.setState(0xe81e, 0xb828, 0xc390, 0x6fe8, 0x72af, 0x82a0, 0x1, 0x1);
        gbc.writeMem(0xe81e, { 0xb7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb828, gbc.sp());
        EXPECT(0xe81f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe81e));
        // B7 0085
        gbc.setState(0xec9, 0x69bd, 0xd680, 0xe70d, 0xabc8, 0x6f0f, 0x1, 0x1);
        gbc.writeMem(0xec9, { 0xb7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x69bd, gbc.sp());
        EXPECT(0xeca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0086
        gbc.setState(0x143c, 0x59f, 0x8300, 0xd404, 0xa058, 0x3228, 0x1, 0x1);
        gbc.writeMem(0x143c, { 0xb7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x59f, gbc.sp());
        EXPECT(0x143d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0087
        gbc.setState(0xaf38, 0x4e0, 0x9d10, 0x3e61, 0x9dbf, 0x29ba, 0x1, 0x0);
        gbc.writeMem(0xaf38, { 0xb7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4e0, gbc.sp());
        EXPECT(0xaf39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xaf38));
        // B7 0088
        gbc.setState(0xd2b3, 0x79e, 0x7b10, 0xe552, 0x4ffd, 0xb471, 0x0, 0x0);
        gbc.writeMem(0xd2b3, { 0xb7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x79e, gbc.sp());
        EXPECT(0xd2b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd2b3));
        // B7 0089
        gbc.setState(0x45c8, 0xc54d, 0x7770, 0x5574, 0xe50, 0x56c4, 0x0, 0x1);
        gbc.writeMem(0x45c8, { 0xb7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc54d, gbc.sp());
        EXPECT(0x45c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 008A
        gbc.setState(0x84ec, 0x7ee3, 0xd780, 0x8d06, 0x9e65, 0x65a5, 0x1, 0x0);
        gbc.writeMem(0x84ec, { 0xb7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7ee3, gbc.sp());
        EXPECT(0x84ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x84ec));
        // B7 008B
        gbc.setState(0x81c0, 0xa28f, 0x6ee0, 0x1aa9, 0xf6c0, 0x804, 0x0, 0x1);
        gbc.writeMem(0x81c0, { 0xb7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa28f, gbc.sp());
        EXPECT(0x81c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x81c0));
        // B7 008C
        gbc.setState(0xd551, 0xedff, 0x84d0, 0xe863, 0x794b, 0x6050, 0x1, 0x0);
        gbc.writeMem(0xd551, { 0xb7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xedff, gbc.sp());
        EXPECT(0xd552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd551));
        // B7 008D
        gbc.setState(0x8ef1, 0xd266, 0x4910, 0x1858, 0x745f, 0xcf99, 0x0, 0x0);
        gbc.writeMem(0x8ef1, { 0xb7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd266, gbc.sp());
        EXPECT(0x8ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8ef1));
        // B7 008E
        gbc.setState(0x1f6a, 0x4c92, 0xe400, 0x87c0, 0xa418, 0x1d4f, 0x1, 0x0);
        gbc.writeMem(0x1f6a, { 0xb7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4c92, gbc.sp());
        EXPECT(0x1f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 008F
        gbc.setState(0x6c52, 0xe47b, 0x7b40, 0xd427, 0x46b, 0xcdff, 0x0, 0x1);
        gbc.writeMem(0x6c52, { 0xb7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe47b, gbc.sp());
        EXPECT(0x6c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0090
        gbc.setState(0x332c, 0x8f55, 0xac30, 0xa439, 0x241e, 0xac49, 0x0, 0x0);
        gbc.writeMem(0x332c, { 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8f55, gbc.sp());
        EXPECT(0x332d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0091
        gbc.setState(0x2d9e, 0x51c1, 0x65b0, 0x1c09, 0x3bc0, 0x9eea, 0x0, 0x0);
        gbc.writeMem(0x2d9e, { 0xb7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x51c1, gbc.sp());
        EXPECT(0x2d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0092
        gbc.setState(0x5d37, 0xe3b1, 0x3eb0, 0x6402, 0xe855, 0x5580, 0x1, 0x0);
        gbc.writeMem(0x5d37, { 0xb7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe3b1, gbc.sp());
        EXPECT(0x5d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0093
        gbc.setState(0xca60, 0xab07, 0x6cc0, 0xd2fb, 0xff79, 0xba8a, 0x1, 0x0);
        gbc.writeMem(0xca60, { 0xb7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xab07, gbc.sp());
        EXPECT(0xca61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xca60));
        // B7 0095
        gbc.setState(0x6686, 0x7842, 0x3810, 0x8998, 0xf445, 0xf15a, 0x1, 0x1);
        gbc.writeMem(0x6686, { 0xb7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7842, gbc.sp());
        EXPECT(0x6687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0096
        gbc.setState(0xd9af, 0x2ab9, 0x4f80, 0x8278, 0x7487, 0x2765, 0x0, 0x0);
        gbc.writeMem(0xd9af, { 0xb7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2ab9, gbc.sp());
        EXPECT(0xd9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd9af));
        // B7 0097
        gbc.setState(0x2856, 0xd058, 0xbd30, 0x779c, 0x61ab, 0x8844, 0x1, 0x1);
        gbc.writeMem(0x2856, { 0xb7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd058, gbc.sp());
        EXPECT(0x2857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0098
        gbc.setState(0x7c61, 0x4c9d, 0x7a10, 0xdbd5, 0x2969, 0xca40, 0x1, 0x1);
        gbc.writeMem(0x7c61, { 0xb7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4c9d, gbc.sp());
        EXPECT(0x7c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0099
        gbc.setState(0x6e3f, 0x5433, 0x40d0, 0x2caf, 0x1f44, 0xf261, 0x1, 0x1);
        gbc.writeMem(0x6e3f, { 0xb7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5433, gbc.sp());
        EXPECT(0x6e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 009A
        gbc.setState(0x654c, 0x81f4, 0xd0f0, 0xaa90, 0x917e, 0x243f, 0x1, 0x1);
        gbc.writeMem(0x654c, { 0xb7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x81f4, gbc.sp());
        EXPECT(0x654d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 009B
        gbc.setState(0xb337, 0xafb0, 0xdf60, 0x9824, 0x8f1a, 0x359a, 0x0, 0x1);
        gbc.writeMem(0xb337, { 0xb7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xafb0, gbc.sp());
        EXPECT(0xb338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb337));
        // B7 009C
        gbc.setState(0x17fb, 0xcc7c, 0xaed0, 0x3ac, 0x47a5, 0x1dff, 0x0, 0x0);
        gbc.writeMem(0x17fb, { 0xb7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcc7c, gbc.sp());
        EXPECT(0x17fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 009D
        gbc.setState(0x8e04, 0xa06e, 0x5f20, 0x6f55, 0xe499, 0x8f27, 0x0, 0x1);
        gbc.writeMem(0x8e04, { 0xb7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa06e, gbc.sp());
        EXPECT(0x8e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8e04));
        // B7 009E
        gbc.setState(0x5054, 0xf4ec, 0x7500, 0x9234, 0x607b, 0x1868, 0x1, 0x0);
        gbc.writeMem(0x5054, { 0xb7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf4ec, gbc.sp());
        EXPECT(0x5055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 009F
        gbc.setState(0xd3fc, 0xb7d4, 0xefb0, 0xa030, 0x755b, 0xd489, 0x1, 0x0);
        gbc.writeMem(0xd3fc, { 0xb7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb7d4, gbc.sp());
        EXPECT(0xd3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd3fc));
        // B7 00A0
        gbc.setState(0x645b, 0x8433, 0x39d0, 0xc150, 0x51bf, 0x7293, 0x0, 0x1);
        gbc.writeMem(0x645b, { 0xb7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8433, gbc.sp());
        EXPECT(0x645c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00A1
        gbc.setState(0xd846, 0x6c74, 0x94d0, 0xd18c, 0x14c9, 0x6171, 0x0, 0x0);
        gbc.writeMem(0xd846, { 0xb7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6c74, gbc.sp());
        EXPECT(0xd847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd846));
        // B7 00A2
        gbc.setState(0x5c2c, 0x9822, 0x40d0, 0x5e49, 0xcf2, 0x2c01, 0x1, 0x0);
        gbc.writeMem(0x5c2c, { 0xb7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9822, gbc.sp());
        EXPECT(0x5c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00A3
        gbc.setState(0x9f5a, 0x85de, 0xa090, 0xd248, 0x34fc, 0xa3da, 0x0, 0x0);
        gbc.writeMem(0x9f5a, { 0xb7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x85de, gbc.sp());
        EXPECT(0x9f5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9f5a));
        // B7 00A6
        gbc.setState(0x230c, 0xa52c, 0x62f0, 0x5d1b, 0xc807, 0x157d, 0x0, 0x1);
        gbc.writeMem(0x230c, { 0xb7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa52c, gbc.sp());
        EXPECT(0x230d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00A7
        gbc.setState(0x691f, 0x8627, 0xc2c0, 0x1d3b, 0xecb1, 0x3cd1, 0x0, 0x0);
        gbc.writeMem(0x691f, { 0xb7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8627, gbc.sp());
        EXPECT(0x6920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00A9
        gbc.setState(0x5a34, 0x1d5a, 0x9f70, 0x22b8, 0xe7a3, 0x2555, 0x0, 0x0);
        gbc.writeMem(0x5a34, { 0xb7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1d5a, gbc.sp());
        EXPECT(0x5a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00AA
        gbc.setState(0x4141, 0x8db2, 0x8bc0, 0x58d, 0x1fa, 0xffb0, 0x0, 0x0);
        gbc.writeMem(0x4141, { 0xb7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8db2, gbc.sp());
        EXPECT(0x4142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00AB
        gbc.setState(0xac28, 0x3cb2, 0x1ee0, 0x9a39, 0x1e99, 0x5ee7, 0x0, 0x0);
        gbc.writeMem(0xac28, { 0xb7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3cb2, gbc.sp());
        EXPECT(0xac29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xac28));
        // B7 00AD
        gbc.setState(0xc5f2, 0x9bce, 0x4a10, 0xf45e, 0xee23, 0xa741, 0x1, 0x1);
        gbc.writeMem(0xc5f2, { 0xb7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9bce, gbc.sp());
        EXPECT(0xc5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc5f2));
        // B7 00AE
        gbc.setState(0x1806, 0xd92e, 0x4fa0, 0x5317, 0x346d, 0x5859, 0x1, 0x0);
        gbc.writeMem(0x1806, { 0xb7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd92e, gbc.sp());
        EXPECT(0x1807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00AF
        gbc.setState(0x6bda, 0x8651, 0x33d0, 0xf94f, 0xe9ec, 0xe973, 0x0, 0x1);
        gbc.writeMem(0x6bda, { 0xb7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8651, gbc.sp());
        EXPECT(0x6bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00B0
        gbc.setState(0x6d34, 0xbf8a, 0xd620, 0xb00a, 0xbe8a, 0x2022, 0x0, 0x1);
        gbc.writeMem(0x6d34, { 0xb7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbf8a, gbc.sp());
        EXPECT(0x6d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00B2
        gbc.setState(0x4355, 0xd9a5, 0x7170, 0xd24, 0x39b3, 0x7e80, 0x0, 0x1);
        gbc.writeMem(0x4355, { 0xb7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd9a5, gbc.sp());
        EXPECT(0x4356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00B3
        gbc.setState(0xbab0, 0x40d6, 0x5170, 0xe2ee, 0x504d, 0xe6e8, 0x1, 0x1);
        gbc.writeMem(0xbab0, { 0xb7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x40d6, gbc.sp());
        EXPECT(0xbab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbab0));
        // B7 00B4
        gbc.setState(0xac76, 0xead1, 0xea00, 0x1ddb, 0xb291, 0x8b5c, 0x0, 0x0);
        gbc.writeMem(0xac76, { 0xb7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xead1, gbc.sp());
        EXPECT(0xac77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xac76));
        // B7 00B5
        gbc.setState(0xd48d, 0x8b32, 0x51d0, 0x8ba6, 0xcee2, 0x2780, 0x1, 0x1);
        gbc.writeMem(0xd48d, { 0xb7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8b32, gbc.sp());
        EXPECT(0xd48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd48d));
        // B7 00B6
        gbc.setState(0xeea3, 0x1d99, 0x15f0, 0xbbe1, 0x208c, 0xc51f, 0x0, 0x1);
        gbc.writeMem(0xeea3, { 0xb7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1d99, gbc.sp());
        EXPECT(0xeea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xeea3));
        // B7 00B7
        gbc.setState(0x3a85, 0xd69a, 0xea60, 0x4af9, 0xcf89, 0x9d8f, 0x0, 0x0);
        gbc.writeMem(0x3a85, { 0xb7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd69a, gbc.sp());
        EXPECT(0x3a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00B8
        gbc.setState(0x5748, 0xf6d6, 0xbdd0, 0x29ba, 0x6d2b, 0x8130, 0x1, 0x1);
        gbc.writeMem(0x5748, { 0xb7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf6d6, gbc.sp());
        EXPECT(0x5749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00B9
        gbc.setState(0xbb31, 0x259c, 0x9930, 0xeba, 0xf5eb, 0x5a03, 0x1, 0x0);
        gbc.writeMem(0xbb31, { 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x259c, gbc.sp());
        EXPECT(0xbb32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbb31));
        // B7 00BA
        gbc.setState(0x7394, 0x8bb0, 0x1bc0, 0xf72f, 0x7d13, 0x3716, 0x1, 0x0);
        gbc.writeMem(0x7394, { 0xb7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8bb0, gbc.sp());
        EXPECT(0x7395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00BC
        gbc.setState(0x4805, 0xd07f, 0x1a50, 0x629d, 0x5283, 0x5e82, 0x0, 0x0);
        gbc.writeMem(0x4805, { 0xb7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd07f, gbc.sp());
        EXPECT(0x4806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00BD
        gbc.setState(0x81e8, 0x8560, 0x5d40, 0x3199, 0xb906, 0xbc4, 0x0, 0x0);
        gbc.writeMem(0x81e8, { 0xb7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8560, gbc.sp());
        EXPECT(0x81e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x81e8));
        // B7 00BE
        gbc.setState(0x499a, 0x394b, 0xfe20, 0xcaf2, 0x123c, 0xade6, 0x1, 0x0);
        gbc.writeMem(0x499a, { 0xb7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x394b, gbc.sp());
        EXPECT(0x499b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00BF
        gbc.setState(0x364c, 0xb181, 0x2910, 0x2c8c, 0x262a, 0xdafb, 0x0, 0x1);
        gbc.writeMem(0x364c, { 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb181, gbc.sp());
        EXPECT(0x364d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00C0
        gbc.setState(0x3fed, 0x31b8, 0xf460, 0x8c21, 0xd8c0, 0xd9b2, 0x0, 0x1);
        gbc.writeMem(0x3fed, { 0xb7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x31b8, gbc.sp());
        EXPECT(0x3fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00C1
        gbc.setState(0xd135, 0xf956, 0x3550, 0x151f, 0x86e6, 0xd9ee, 0x0, 0x0);
        gbc.writeMem(0xd135, { 0xb7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf956, gbc.sp());
        EXPECT(0xd136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd135));
        // B7 00C2
        gbc.setState(0x7837, 0x6e27, 0x2710, 0x744a, 0x9a13, 0xf8ba, 0x0, 0x1);
        gbc.writeMem(0x7837, { 0xb7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6e27, gbc.sp());
        EXPECT(0x7838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00C3
        gbc.setState(0x1201, 0x7e55, 0x1500, 0x9283, 0xf78c, 0x7d9a, 0x1, 0x1);
        gbc.writeMem(0x1201, { 0xb7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7e55, gbc.sp());
        EXPECT(0x1202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00C4
        gbc.setState(0x2a42, 0xa7, 0xab60, 0x3151, 0xe37, 0x8b26, 0x1, 0x1);
        gbc.writeMem(0x2a42, { 0xb7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa7, gbc.sp());
        EXPECT(0x2a43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00C5
        gbc.setState(0x3096, 0x2d7e, 0xc8b0, 0xeeae, 0x3660, 0x240c, 0x0, 0x0);
        gbc.writeMem(0x3096, { 0xb7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2d7e, gbc.sp());
        EXPECT(0x3097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00C6
        gbc.setState(0xa297, 0x7fe4, 0x1180, 0xeb83, 0xa8c0, 0x3c07, 0x1, 0x0);
        gbc.writeMem(0xa297, { 0xb7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7fe4, gbc.sp());
        EXPECT(0xa298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa297));
        // B7 00C7
        gbc.setState(0x66d, 0xf289, 0xf890, 0xfd53, 0x7571, 0xb4f2, 0x1, 0x0);
        gbc.writeMem(0x66d, { 0xb7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf289, gbc.sp());
        EXPECT(0x66e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00C8
        gbc.setState(0x8afd, 0xe1be, 0xef70, 0xa09c, 0xe6e3, 0x7891, 0x1, 0x0);
        gbc.writeMem(0x8afd, { 0xb7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe1be, gbc.sp());
        EXPECT(0x8afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8afd));
        // B7 00C9
        gbc.setState(0x3a98, 0x7fdf, 0xe1a0, 0xbd5a, 0x807b, 0x34a8, 0x0, 0x0);
        gbc.writeMem(0x3a98, { 0xb7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7fdf, gbc.sp());
        EXPECT(0x3a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00CB
        gbc.setState(0xa52f, 0x7176, 0xecd0, 0x7ba9, 0x8a3d, 0xd303, 0x0, 0x0);
        gbc.writeMem(0xa52f, { 0xb7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7176, gbc.sp());
        EXPECT(0xa530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa52f));
        // B7 00CC
        gbc.setState(0xafa5, 0xf53d, 0x450, 0xbc38, 0x990f, 0x42a0, 0x1, 0x1);
        gbc.writeMem(0xafa5, { 0xb7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf53d, gbc.sp());
        EXPECT(0xafa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xafa5));
        // B7 00CD
        gbc.setState(0x8ebf, 0xb0e1, 0x9900, 0x4880, 0xc6da, 0xa543, 0x1, 0x0);
        gbc.writeMem(0x8ebf, { 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb0e1, gbc.sp());
        EXPECT(0x8ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8ebf));
        // B7 00CE
        gbc.setState(0xc42d, 0xd1e8, 0x4a30, 0x45dc, 0x4e64, 0xfd4a, 0x1, 0x0);
        gbc.writeMem(0xc42d, { 0xb7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd1e8, gbc.sp());
        EXPECT(0xc42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc42d));
        // B7 00D0
        gbc.setState(0x5c, 0x997, 0x5280, 0x6ca3, 0x3ea7, 0x61f, 0x1, 0x0);
        gbc.writeMem(0x5c, { 0xb7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x997, gbc.sp());
        EXPECT(0x5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00D1
        gbc.setState(0xd561, 0x6d40, 0x7db0, 0xc9dc, 0x81fc, 0xb4ae, 0x0, 0x0);
        gbc.writeMem(0xd561, { 0xb7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6d40, gbc.sp());
        EXPECT(0xd562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd561));
        // B7 00D2
        gbc.setState(0x3ac8, 0xaa3e, 0x1d40, 0x9c44, 0x4ee, 0x1816, 0x1, 0x1);
        gbc.writeMem(0x3ac8, { 0xb7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaa3e, gbc.sp());
        EXPECT(0x3ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00D3
        gbc.setState(0x870f, 0x7ea1, 0x6c00, 0x25e9, 0x384, 0x2191, 0x1, 0x1);
        gbc.writeMem(0x870f, { 0xb7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7ea1, gbc.sp());
        EXPECT(0x8710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x870f));
        // B7 00D4
        gbc.setState(0xc50e, 0x2f19, 0xd200, 0xed6e, 0xcc8f, 0x1137, 0x1, 0x1);
        gbc.writeMem(0xc50e, { 0xb7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2f19, gbc.sp());
        EXPECT(0xc50f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc50e));
        // B7 00D5
        gbc.setState(0x77c9, 0xc3fc, 0xe850, 0xbf5b, 0x729b, 0xadab, 0x1, 0x0);
        gbc.writeMem(0x77c9, { 0xb7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc3fc, gbc.sp());
        EXPECT(0x77ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00D6
        gbc.setState(0x3490, 0xb4ea, 0x9360, 0xf5a5, 0x8a8, 0x2831, 0x0, 0x1);
        gbc.writeMem(0x3490, { 0xb7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb4ea, gbc.sp());
        EXPECT(0x3491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00D7
        gbc.setState(0x440f, 0xd91e, 0xb3b0, 0x5172, 0x4d2c, 0xbfed, 0x0, 0x1);
        gbc.writeMem(0x440f, { 0xb7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd91e, gbc.sp());
        EXPECT(0x4410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00D8
        gbc.setState(0x70dc, 0xc945, 0xc580, 0x5d77, 0xa703, 0xe233, 0x0, 0x1);
        gbc.writeMem(0x70dc, { 0xb7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc945, gbc.sp());
        EXPECT(0x70dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00D9
        gbc.setState(0x73ef, 0xef61, 0x1a30, 0x1c30, 0x952d, 0x4603, 0x0, 0x0);
        gbc.writeMem(0x73ef, { 0xb7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xef61, gbc.sp());
        EXPECT(0x73f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00DA
        gbc.setState(0x4269, 0x330c, 0x9720, 0x8856, 0x4c00, 0x8258, 0x1, 0x0);
        gbc.writeMem(0x4269, { 0xb7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x330c, gbc.sp());
        EXPECT(0x426a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00DB
        gbc.setState(0xac15, 0x9efa, 0xc540, 0x21f2, 0x71c4, 0xa1f1, 0x1, 0x0);
        gbc.writeMem(0xac15, { 0xb7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9efa, gbc.sp());
        EXPECT(0xac16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xac15));
        // B7 00DC
        gbc.setState(0x23d5, 0x2aec, 0xc6f0, 0x6465, 0x3eb5, 0xbcb8, 0x0, 0x1);
        gbc.writeMem(0x23d5, { 0xb7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2aec, gbc.sp());
        EXPECT(0x23d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00DD
        gbc.setState(0x454a, 0x8a86, 0x9740, 0xff4f, 0x58b9, 0x32a4, 0x0, 0x1);
        gbc.writeMem(0x454a, { 0xb7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8a86, gbc.sp());
        EXPECT(0x454b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00DE
        gbc.setState(0xd9d3, 0x75c3, 0xcd90, 0xfabf, 0x5a2e, 0x902b, 0x1, 0x0);
        gbc.writeMem(0xd9d3, { 0xb7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x75c3, gbc.sp());
        EXPECT(0xd9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd9d3));
        // B7 00DF
        gbc.setState(0x75b1, 0x29a5, 0xcc10, 0x9843, 0x98ba, 0x3eb2, 0x1, 0x0);
        gbc.writeMem(0x75b1, { 0xb7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x29a5, gbc.sp());
        EXPECT(0x75b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00E0
        gbc.setState(0xae0a, 0x4be1, 0x2a90, 0xa5e, 0x63f9, 0xa0d0, 0x1, 0x0);
        gbc.writeMem(0xae0a, { 0xb7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4be1, gbc.sp());
        EXPECT(0xae0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xae0a));
        // B7 00E1
        gbc.setState(0xd3f1, 0xe54, 0xe70, 0x6556, 0xfafe, 0xd291, 0x0, 0x0);
        gbc.writeMem(0xd3f1, { 0xb7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe54, gbc.sp());
        EXPECT(0xd3f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd3f1));
        // B7 00E3
        gbc.setState(0x1566, 0x1cab, 0x8fe0, 0x5d0a, 0x64d, 0xcc91, 0x0, 0x0);
        gbc.writeMem(0x1566, { 0xb7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1cab, gbc.sp());
        EXPECT(0x1567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00E4
        gbc.setState(0x2ab5, 0x7cdf, 0x9b20, 0x9445, 0xc5c, 0x4b9e, 0x0, 0x0);
        gbc.writeMem(0x2ab5, { 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7cdf, gbc.sp());
        EXPECT(0x2ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00E5
        gbc.setState(0xa693, 0xc1e4, 0x2cd0, 0xfe72, 0x8351, 0x9418, 0x1, 0x1);
        gbc.writeMem(0xa693, { 0xb7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc1e4, gbc.sp());
        EXPECT(0xa694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa693));
        // B7 00E6
        gbc.setState(0x8246, 0xcde2, 0x5c50, 0x8bff, 0xa505, 0xbfeb, 0x1, 0x1);
        gbc.writeMem(0x8246, { 0xb7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcde2, gbc.sp());
        EXPECT(0x8247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8246));
        // B7 00E7
        gbc.setState(0x6cf5, 0x473f, 0x3f10, 0x95b6, 0xf03b, 0x2766, 0x0, 0x0);
        gbc.writeMem(0x6cf5, { 0xb7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x473f, gbc.sp());
        EXPECT(0x6cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00E9
        gbc.setState(0x7c82, 0x36d7, 0x89c0, 0xd248, 0x5c9a, 0x9bd6, 0x1, 0x0);
        gbc.writeMem(0x7c82, { 0xb7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x36d7, gbc.sp());
        EXPECT(0x7c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00EA
        gbc.setState(0xae89, 0x767, 0xbfe0, 0xfae4, 0x5f97, 0x54f5, 0x1, 0x0);
        gbc.writeMem(0xae89, { 0xb7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x767, gbc.sp());
        EXPECT(0xae8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xae89));
        // B7 00EB
        gbc.setState(0xe512, 0xa5cb, 0xc10, 0x8b42, 0x65de, 0xa2ee, 0x1, 0x0);
        gbc.writeMem(0xe512, { 0xb7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa5cb, gbc.sp());
        EXPECT(0xe513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe512));
        // B7 00EC
        gbc.setState(0xc819, 0x8289, 0xddd0, 0x37ab, 0x2262, 0x2498, 0x0, 0x1);
        gbc.writeMem(0xc819, { 0xb7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8289, gbc.sp());
        EXPECT(0xc81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc819));
        // B7 00ED
        gbc.setState(0x2c64, 0x6b4, 0x6f10, 0xfd4c, 0x6997, 0x4203, 0x1, 0x0);
        gbc.writeMem(0x2c64, { 0xb7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6b4, gbc.sp());
        EXPECT(0x2c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00EE
        gbc.setState(0xd8aa, 0xacda, 0xab10, 0xc8aa, 0x367b, 0xb743, 0x1, 0x0);
        gbc.writeMem(0xd8aa, { 0xb7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xacda, gbc.sp());
        EXPECT(0xd8ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd8aa));
        // B7 00EF
        gbc.setState(0x9275, 0xc47a, 0xd4e0, 0xc7a5, 0x2fbf, 0xfc2a, 0x0, 0x1);
        gbc.writeMem(0x9275, { 0xb7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc47a, gbc.sp());
        EXPECT(0x9276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9275));
        // B7 00F0
        gbc.setState(0xaa3d, 0xc8e7, 0x190, 0x2c4b, 0x4816, 0xfe8c, 0x1, 0x1);
        gbc.writeMem(0xaa3d, { 0xb7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc8e7, gbc.sp());
        EXPECT(0xaa3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xaa3d));
        // B7 00F1
        gbc.setState(0x7acc, 0xf431, 0x2210, 0x99d6, 0x29e1, 0x4cc, 0x0, 0x1);
        gbc.writeMem(0x7acc, { 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf431, gbc.sp());
        EXPECT(0x7acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00F2
        gbc.setState(0xebd9, 0x434a, 0x1600, 0x2b5a, 0x1a41, 0x943e, 0x0, 0x1);
        gbc.writeMem(0xebd9, { 0xb7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x434a, gbc.sp());
        EXPECT(0xebda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xebd9));
        // B7 00F3
        gbc.setState(0x9bb1, 0xb3, 0xa840, 0x280d, 0xaa6b, 0xebea, 0x0, 0x1);
        gbc.writeMem(0x9bb1, { 0xb7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb3, gbc.sp());
        EXPECT(0x9bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9bb1));
        // B7 00F4
        gbc.setState(0xc813, 0xc002, 0x3eb0, 0x4267, 0x35b1, 0x5cff, 0x1, 0x0);
        gbc.writeMem(0xc813, { 0xb7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc002, gbc.sp());
        EXPECT(0xc814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc813));
        // B7 00F5
        gbc.setState(0x3291, 0x6d3e, 0x53e0, 0x8ad, 0xa148, 0x244a, 0x1, 0x0);
        gbc.writeMem(0x3291, { 0xb7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6d3e, gbc.sp());
        EXPECT(0x3292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00F6
        gbc.setState(0xe683, 0xc80b, 0xf4c0, 0x45f8, 0xe37a, 0x3bb1, 0x0, 0x1);
        gbc.writeMem(0xe683, { 0xb7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc80b, gbc.sp());
        EXPECT(0xe684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe683));
        // B7 00F7
        gbc.setState(0x9a33, 0x4237, 0xa040, 0x1936, 0xd31d, 0xe62f, 0x1, 0x0);
        gbc.writeMem(0x9a33, { 0xb7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4237, gbc.sp());
        EXPECT(0x9a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9a33));
        // B7 00F8
        gbc.setState(0x74e3, 0x5642, 0xf250, 0x5bcb, 0x7592, 0x11b8, 0x1, 0x0);
        gbc.writeMem(0x74e3, { 0xb7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5642, gbc.sp());
        EXPECT(0x74e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00F9
        gbc.setState(0x29fe, 0x4ca2, 0x50c0, 0x14e7, 0xec61, 0xda56, 0x0, 0x1);
        gbc.writeMem(0x29fe, { 0xb7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4ca2, gbc.sp());
        EXPECT(0x29ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00FA
        gbc.setState(0x9391, 0xaa05, 0x7200, 0x8487, 0xb28b, 0x15f9, 0x0, 0x1);
        gbc.writeMem(0x9391, { 0xb7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xaa05, gbc.sp());
        EXPECT(0x9392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9391));
        // B7 00FB
        gbc.setState(0xc3a2, 0xbbad, 0x67a0, 0xf0c3, 0xaca4, 0x9cfc, 0x0, 0x1);
        gbc.writeMem(0xc3a2, { 0xb7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbbad, gbc.sp());
        EXPECT(0xc3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc3a2));
        // B7 00FC
        gbc.setState(0xa447, 0xf502, 0x9da0, 0xd7a2, 0xf963, 0xef1a, 0x0, 0x1);
        gbc.writeMem(0xa447, { 0xb7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf502, gbc.sp());
        EXPECT(0xa448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa447));
        // B7 00FD
        gbc.setState(0x4329, 0x59b9, 0x2ff0, 0x2332, 0x4f94, 0xf918, 0x1, 0x1);
        gbc.writeMem(0x4329, { 0xb7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x59b9, gbc.sp());
        EXPECT(0x432a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 00FE
        gbc.setState(0xac08, 0x6f84, 0x6d90, 0x87bb, 0x6eb5, 0xa017, 0x1, 0x1);
        gbc.writeMem(0xac08, { 0xb7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6f84, gbc.sp());
        EXPECT(0xac09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xac08));
        // B7 00FF
        gbc.setState(0x13a2, 0xf46d, 0xc70, 0xfb27, 0x4021, 0xca47, 0x1, 0x1);
        gbc.writeMem(0x13a2, { 0xb7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf46d, gbc.sp());
        EXPECT(0x13a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0100
        gbc.setState(0x75c0, 0x5b3f, 0xb1d0, 0x8cf2, 0x44fb, 0xd8f7, 0x0, 0x0);
        gbc.writeMem(0x75c0, { 0xb7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5b3f, gbc.sp());
        EXPECT(0x75c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0101
        gbc.setState(0xe180, 0x786c, 0xd1f0, 0xedcc, 0xa5b5, 0x5416, 0x0, 0x1);
        gbc.writeMem(0xe180, { 0xb7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x786c, gbc.sp());
        EXPECT(0xe181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe180));
        // B7 0102
        gbc.setState(0x95d2, 0xec20, 0xab80, 0x9c5e, 0xc75b, 0xb81b, 0x0, 0x0);
        gbc.writeMem(0x95d2, { 0xb7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xec20, gbc.sp());
        EXPECT(0x95d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x95d2));
        // B7 0103
        gbc.setState(0xd3f7, 0xbbef, 0xb2e0, 0x68a7, 0xc5f3, 0x591f, 0x0, 0x1);
        gbc.writeMem(0xd3f7, { 0xb7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbbef, gbc.sp());
        EXPECT(0xd3f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd3f7));
        // B7 0105
        gbc.setState(0x948a, 0x8946, 0x8e70, 0x4433, 0xec37, 0x5142, 0x0, 0x0);
        gbc.writeMem(0x948a, { 0xb7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8946, gbc.sp());
        EXPECT(0x948b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x948a));
        // B7 0106
        gbc.setState(0x3a8f, 0x28ed, 0x8990, 0x6413, 0x5f72, 0xe984, 0x0, 0x1);
        gbc.writeMem(0x3a8f, { 0xb7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x28ed, gbc.sp());
        EXPECT(0x3a90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0107
        gbc.setState(0x38c8, 0xb439, 0xc930, 0x6b4c, 0x7039, 0x2f28, 0x1, 0x1);
        gbc.writeMem(0x38c8, { 0xb7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb439, gbc.sp());
        EXPECT(0x38c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0108
        gbc.setState(0x5b0d, 0x5dcc, 0x70a0, 0x8a47, 0x8eed, 0xf519, 0x1, 0x1);
        gbc.writeMem(0x5b0d, { 0xb7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5dcc, gbc.sp());
        EXPECT(0x5b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0109
        gbc.setState(0x3ed7, 0x2a0b, 0xec0, 0xcca5, 0x143e, 0xffb5, 0x0, 0x1);
        gbc.writeMem(0x3ed7, { 0xb7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2a0b, gbc.sp());
        EXPECT(0x3ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 010A
        gbc.setState(0x7764, 0x1990, 0xa5a0, 0x4697, 0x843e, 0xdd23, 0x0, 0x1);
        gbc.writeMem(0x7764, { 0xb7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1990, gbc.sp());
        EXPECT(0x7765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 010B
        gbc.setState(0xab87, 0xb4fc, 0xbf20, 0xf70f, 0xbecd, 0xa00e, 0x1, 0x0);
        gbc.writeMem(0xab87, { 0xb7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb4fc, gbc.sp());
        EXPECT(0xab88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xab87));
        // B7 010C
        gbc.setState(0x6307, 0xeb2f, 0xd940, 0x772c, 0xbc5f, 0xe469, 0x1, 0x1);
        gbc.writeMem(0x6307, { 0xb7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xeb2f, gbc.sp());
        EXPECT(0x6308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 010D
        gbc.setState(0x3c5d, 0x2058, 0xcf70, 0x27d9, 0x20c, 0x2abc, 0x1, 0x1);
        gbc.writeMem(0x3c5d, { 0xb7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2058, gbc.sp());
        EXPECT(0x3c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 010E
        gbc.setState(0x1fe9, 0xc15, 0x1a30, 0x5df4, 0x1dc5, 0x249c, 0x0, 0x1);
        gbc.writeMem(0x1fe9, { 0xb7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc15, gbc.sp());
        EXPECT(0x1fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 010F
        gbc.setState(0xe37d, 0xa7db, 0x8ad0, 0x2163, 0x1c71, 0x6e27, 0x0, 0x0);
        gbc.writeMem(0xe37d, { 0xb7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa7db, gbc.sp());
        EXPECT(0xe37e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe37d));
        // B7 0110
        gbc.setState(0x5336, 0x2bb3, 0x9f90, 0x84ba, 0xd40d, 0xcc4f, 0x1, 0x0);
        gbc.writeMem(0x5336, { 0xb7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2bb3, gbc.sp());
        EXPECT(0x5337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0111
        gbc.setState(0x48b2, 0x573b, 0x1740, 0x1357, 0xaa86, 0xaeaf, 0x1, 0x0);
        gbc.writeMem(0x48b2, { 0xb7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x573b, gbc.sp());
        EXPECT(0x48b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0112
        gbc.setState(0xdcb6, 0xfec2, 0x4770, 0x6dbd, 0x15e2, 0xb793, 0x1, 0x1);
        gbc.writeMem(0xdcb6, { 0xb7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfec2, gbc.sp());
        EXPECT(0xdcb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdcb6));
        // B7 0113
        gbc.setState(0x3a3c, 0xd9f1, 0xd000, 0xf54f, 0xdb78, 0x46b5, 0x1, 0x1);
        gbc.writeMem(0x3a3c, { 0xb7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd9f1, gbc.sp());
        EXPECT(0x3a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0114
        gbc.setState(0xcf70, 0xa2b5, 0x2b60, 0x2fb6, 0xfa6a, 0x8521, 0x1, 0x0);
        gbc.writeMem(0xcf70, { 0xb7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa2b5, gbc.sp());
        EXPECT(0xcf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcf70));
        // B7 0115
        gbc.setState(0x909b, 0xad4, 0x2c0, 0xb8d5, 0xb9be, 0xdab8, 0x0, 0x0);
        gbc.writeMem(0x909b, { 0xb7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xad4, gbc.sp());
        EXPECT(0x909c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x909b));
        // B7 0116
        gbc.setState(0x1668, 0xcfb2, 0x7dc0, 0x9b44, 0xca7c, 0x98b2, 0x0, 0x0);
        gbc.writeMem(0x1668, { 0xb7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcfb2, gbc.sp());
        EXPECT(0x1669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0117
        gbc.setState(0x715f, 0xbeff, 0x2720, 0xc2dc, 0x3212, 0x5550, 0x0, 0x1);
        gbc.writeMem(0x715f, { 0xb7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbeff, gbc.sp());
        EXPECT(0x7160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0118
        gbc.setState(0x73ef, 0x1eea, 0x9b00, 0x54c0, 0x5a8d, 0xcf69, 0x1, 0x1);
        gbc.writeMem(0x73ef, { 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1eea, gbc.sp());
        EXPECT(0x73f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0119
        gbc.setState(0x575b, 0xd895, 0x89c0, 0xb497, 0x2a9d, 0xa7e, 0x1, 0x1);
        gbc.writeMem(0x575b, { 0xb7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd895, gbc.sp());
        EXPECT(0x575c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 011A
        gbc.setState(0xd860, 0x17e0, 0xc970, 0xc2d, 0xf0f0, 0x5a66, 0x1, 0x1);
        gbc.writeMem(0xd860, { 0xb7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x17e0, gbc.sp());
        EXPECT(0xd861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd860));
        // B7 011B
        gbc.setState(0xab87, 0x7796, 0xdf0, 0x7ffa, 0xb4c6, 0x22b7, 0x0, 0x0);
        gbc.writeMem(0xab87, { 0xb7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7796, gbc.sp());
        EXPECT(0xab88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xab87));
        // B7 011C
        gbc.setState(0x2c87, 0x14bb, 0x4ca0, 0xc304, 0x4535, 0xbedd, 0x1, 0x1);
        gbc.writeMem(0x2c87, { 0xb7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x14bb, gbc.sp());
        EXPECT(0x2c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 011D
        gbc.setState(0x9001, 0x8024, 0xd8b0, 0x5add, 0xd931, 0x586a, 0x0, 0x1);
        gbc.writeMem(0x9001, { 0xb7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8024, gbc.sp());
        EXPECT(0x9002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9001));
        // B7 011E
        gbc.setState(0x4e26, 0xccf8, 0x70, 0xb5f3, 0x93f8, 0x12f7, 0x1, 0x0);
        gbc.writeMem(0x4e26, { 0xb7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xccf8, gbc.sp());
        EXPECT(0x4e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 011F
        gbc.setState(0xce9, 0xe9ff, 0x54f0, 0xae23, 0xa69f, 0x284d, 0x0, 0x0);
        gbc.writeMem(0xce9, { 0xb7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe9ff, gbc.sp());
        EXPECT(0xcea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0120
        gbc.setState(0x549, 0x35ff, 0x4c20, 0x9e3c, 0xaf75, 0x5318, 0x0, 0x1);
        gbc.writeMem(0x549, { 0xb7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x35ff, gbc.sp());
        EXPECT(0x54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0121
        gbc.setState(0xc935, 0x5c67, 0x2d20, 0x292, 0x5cdc, 0xb88c, 0x0, 0x0);
        gbc.writeMem(0xc935, { 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5c67, gbc.sp());
        EXPECT(0xc936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc935));
        // B7 0122
        gbc.setState(0x6e28, 0x59a9, 0xf200, 0x6371, 0x5ef2, 0xb7f, 0x1, 0x1);
        gbc.writeMem(0x6e28, { 0xb7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x59a9, gbc.sp());
        EXPECT(0x6e29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0123
        gbc.setState(0xc16b, 0xf04f, 0x1f60, 0xa80, 0xfddd, 0x116d, 0x1, 0x0);
        gbc.writeMem(0xc16b, { 0xb7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf04f, gbc.sp());
        EXPECT(0xc16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc16b));
        // B7 0124
        gbc.setState(0x4558, 0xdfc, 0xf00, 0x846, 0x4155, 0xb4a3, 0x0, 0x0);
        gbc.writeMem(0x4558, { 0xb7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdfc, gbc.sp());
        EXPECT(0x4559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0125
        gbc.setState(0x9d24, 0x5653, 0xd320, 0x340a, 0x34e9, 0x7fac, 0x0, 0x0);
        gbc.writeMem(0x9d24, { 0xb7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5653, gbc.sp());
        EXPECT(0x9d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9d24));
        // B7 0127
        gbc.setState(0xdcac, 0x8d76, 0x1e50, 0x6fa0, 0x57f5, 0x6289, 0x1, 0x0);
        gbc.writeMem(0xdcac, { 0xb7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8d76, gbc.sp());
        EXPECT(0xdcad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdcac));
        // B7 0128
        gbc.setState(0x1568, 0x60bf, 0xf310, 0x7e71, 0x6d75, 0xfad, 0x1, 0x1);
        gbc.writeMem(0x1568, { 0xb7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x60bf, gbc.sp());
        EXPECT(0x1569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0129
        gbc.setState(0x670b, 0xc4a2, 0x7b0, 0xc4fd, 0x6c3e, 0xa39f, 0x1, 0x0);
        gbc.writeMem(0x670b, { 0xb7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc4a2, gbc.sp());
        EXPECT(0x670c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 012A
        gbc.setState(0x9468, 0xa8a1, 0x65f0, 0x3407, 0x49c5, 0x9975, 0x1, 0x1);
        gbc.writeMem(0x9468, { 0xb7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa8a1, gbc.sp());
        EXPECT(0x9469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9468));
        // B7 012B
        gbc.setState(0x2687, 0x6aa3, 0x4010, 0xafdc, 0x47f3, 0xf601, 0x1, 0x0);
        gbc.writeMem(0x2687, { 0xb7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6aa3, gbc.sp());
        EXPECT(0x2688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 012C
        gbc.setState(0xc254, 0xdad6, 0x35b0, 0xb883, 0xbf2d, 0x6d6c, 0x0, 0x0);
        gbc.writeMem(0xc254, { 0xb7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdad6, gbc.sp());
        EXPECT(0xc255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc254));
        // B7 012D
        gbc.setState(0x6951, 0x64f, 0xa060, 0xd5a9, 0x1d1, 0x611c, 0x1, 0x0);
        gbc.writeMem(0x6951, { 0xb7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x64f, gbc.sp());
        EXPECT(0x6952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 012E
        gbc.setState(0x4075, 0x8982, 0x3510, 0x7532, 0xfba4, 0x8312, 0x0, 0x1);
        gbc.writeMem(0x4075, { 0xb7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8982, gbc.sp());
        EXPECT(0x4076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 012F
        gbc.setState(0x656f, 0xedb6, 0x9950, 0x8cf5, 0x67c7, 0x5b3f, 0x0, 0x1);
        gbc.writeMem(0x656f, { 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xedb6, gbc.sp());
        EXPECT(0x6570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0130
        gbc.setState(0xe0a, 0xf702, 0x4a60, 0xd29e, 0x7037, 0xef4e, 0x0, 0x1);
        gbc.writeMem(0xe0a, { 0xb7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf702, gbc.sp());
        EXPECT(0xe0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0131
        gbc.setState(0x3799, 0x1626, 0x20d0, 0xaa26, 0xc726, 0x42d3, 0x1, 0x1);
        gbc.writeMem(0x3799, { 0xb7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1626, gbc.sp());
        EXPECT(0x379a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0132
        gbc.setState(0xa771, 0x352d, 0x79b0, 0xe741, 0x2d03, 0xecba, 0x0, 0x1);
        gbc.writeMem(0xa771, { 0xb7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x352d, gbc.sp());
        EXPECT(0xa772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa771));
        // B7 0133
        gbc.setState(0xc693, 0xaba7, 0x58d0, 0x7c0e, 0x80c0, 0x53b4, 0x1, 0x0);
        gbc.writeMem(0xc693, { 0xb7 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xaba7, gbc.sp());
        EXPECT(0xc694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc693));
        // B7 0134
        gbc.setState(0xe418, 0xf8b3, 0x1be0, 0xf868, 0xd3a6, 0x6d31, 0x1, 0x1);
        gbc.writeMem(0xe418, { 0xb7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf8b3, gbc.sp());
        EXPECT(0xe419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe418));
        // B7 0135
        gbc.setState(0x65d5, 0x14d5, 0x48c0, 0xb517, 0xd427, 0xa1ca, 0x1, 0x1);
        gbc.writeMem(0x65d5, { 0xb7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x14d5, gbc.sp());
        EXPECT(0x65d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0136
        gbc.setState(0xad6d, 0xa63b, 0xed00, 0x3cb5, 0x80c1, 0xbe0f, 0x1, 0x0);
        gbc.writeMem(0xad6d, { 0xb7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa63b, gbc.sp());
        EXPECT(0xad6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xad6d));
        // B7 0137
        gbc.setState(0x16e7, 0xda80, 0x9b80, 0x586e, 0x7a89, 0xa5f1, 0x0, 0x1);
        gbc.writeMem(0x16e7, { 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xda80, gbc.sp());
        EXPECT(0x16e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0138
        gbc.setState(0xb3af, 0xdcff, 0xc600, 0xf4f9, 0xe68b, 0x2670, 0x0, 0x1);
        gbc.writeMem(0xb3af, { 0xb7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdcff, gbc.sp());
        EXPECT(0xb3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb3af));
        // B7 0139
        gbc.setState(0x4b8c, 0x62c, 0x8330, 0xc51c, 0x8cac, 0x7bc3, 0x1, 0x0);
        gbc.writeMem(0x4b8c, { 0xb7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x62c, gbc.sp());
        EXPECT(0x4b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 013A
        gbc.setState(0xd1e, 0x4b03, 0x5860, 0x7b53, 0x24fb, 0xca1a, 0x0, 0x1);
        gbc.writeMem(0xd1e, { 0xb7 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4b03, gbc.sp());
        EXPECT(0xd1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 013B
        gbc.setState(0x7aa4, 0xb7a6, 0x5e30, 0x3702, 0xe033, 0xf123, 0x1, 0x1);
        gbc.writeMem(0x7aa4, { 0xb7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb7a6, gbc.sp());
        EXPECT(0x7aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 013C
        gbc.setState(0xbb1e, 0xcc65, 0xb260, 0x7e09, 0x950f, 0xadbb, 0x1, 0x1);
        gbc.writeMem(0xbb1e, { 0xb7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcc65, gbc.sp());
        EXPECT(0xbb1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbb1e));
        // B7 013D
        gbc.setState(0x968d, 0x6cfb, 0x4d40, 0xaa66, 0x5cbb, 0x610d, 0x0, 0x0);
        gbc.writeMem(0x968d, { 0xb7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6cfb, gbc.sp());
        EXPECT(0x968e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x968d));
        // B7 013E
        gbc.setState(0xc1a1, 0x9bce, 0x27a0, 0x9113, 0x3997, 0x6348, 0x0, 0x0);
        gbc.writeMem(0xc1a1, { 0xb7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9bce, gbc.sp());
        EXPECT(0xc1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc1a1));
        // B7 013F
        gbc.setState(0x19da, 0xb93a, 0x15f0, 0x3d16, 0x1e24, 0x61b2, 0x1, 0x1);
        gbc.writeMem(0x19da, { 0xb7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb93a, gbc.sp());
        EXPECT(0x19db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0140
        gbc.setState(0x6283, 0x1346, 0xd5c0, 0x9edc, 0x6ce4, 0xacf4, 0x0, 0x0);
        gbc.writeMem(0x6283, { 0xb7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1346, gbc.sp());
        EXPECT(0x6284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0141
        gbc.setState(0x95b4, 0x6079, 0xee00, 0xa06a, 0xb379, 0x6f54, 0x1, 0x0);
        gbc.writeMem(0x95b4, { 0xb7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6079, gbc.sp());
        EXPECT(0x95b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x95b4));
        // B7 0142
        gbc.setState(0x35b4, 0x4e83, 0xb2b0, 0x78fa, 0x657a, 0xc7e7, 0x0, 0x1);
        gbc.writeMem(0x35b4, { 0xb7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4e83, gbc.sp());
        EXPECT(0x35b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0143
        gbc.setState(0xa602, 0xad06, 0xfd30, 0x9b71, 0xbdc1, 0x1d54, 0x1, 0x1);
        gbc.writeMem(0xa602, { 0xb7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xad06, gbc.sp());
        EXPECT(0xa603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa602));
        // B7 0144
        gbc.setState(0xe02, 0x81e3, 0x75e0, 0xc21, 0x29d1, 0x6957, 0x1, 0x1);
        gbc.writeMem(0xe02, { 0xb7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x81e3, gbc.sp());
        EXPECT(0xe03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0145
        gbc.setState(0xb22c, 0xe75c, 0xc990, 0x98b8, 0xc704, 0xc5a7, 0x0, 0x0);
        gbc.writeMem(0xb22c, { 0xb7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe75c, gbc.sp());
        EXPECT(0xb22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb22c));
        // B7 0146
        gbc.setState(0x7e7b, 0x8122, 0x3aa0, 0x4908, 0x9e29, 0x797, 0x1, 0x1);
        gbc.writeMem(0x7e7b, { 0xb7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8122, gbc.sp());
        EXPECT(0x7e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0147
        gbc.setState(0x3bc5, 0x10f9, 0x7980, 0x3673, 0xe08b, 0xc2f0, 0x0, 0x0);
        gbc.writeMem(0x3bc5, { 0xb7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x10f9, gbc.sp());
        EXPECT(0x3bc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0148
        gbc.setState(0xa8f1, 0x7667, 0x1510, 0x3fd0, 0xd38, 0x9ed7, 0x0, 0x0);
        gbc.writeMem(0xa8f1, { 0xb7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7667, gbc.sp());
        EXPECT(0xa8f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa8f1));
        // B7 0149
        gbc.setState(0x3bff, 0x50c8, 0x8c0, 0x5e15, 0x1bcc, 0xf60e, 0x0, 0x1);
        gbc.writeMem(0x3bff, { 0xb7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x50c8, gbc.sp());
        EXPECT(0x3c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 014A
        gbc.setState(0xb5e8, 0xb66c, 0xa260, 0xb1ca, 0x668d, 0x862, 0x0, 0x0);
        gbc.writeMem(0xb5e8, { 0xb7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb66c, gbc.sp());
        EXPECT(0xb5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb5e8));
        // B7 014B
        gbc.setState(0x3eb, 0xb96b, 0x4130, 0x619f, 0xeac2, 0x2da7, 0x0, 0x0);
        gbc.writeMem(0x3eb, { 0xb7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb96b, gbc.sp());
        EXPECT(0x3ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 014D
        gbc.setState(0xcc59, 0xcec2, 0x4a50, 0xf348, 0x160, 0x5933, 0x1, 0x1);
        gbc.writeMem(0xcc59, { 0xb7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcec2, gbc.sp());
        EXPECT(0xcc5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcc59));
        // B7 014E
        gbc.setState(0x7847, 0x929f, 0xf220, 0x2d89, 0xf367, 0x53d9, 0x1, 0x1);
        gbc.writeMem(0x7847, { 0xb7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x929f, gbc.sp());
        EXPECT(0x7848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 014F
        gbc.setState(0x1e8f, 0xfcbd, 0xcae0, 0x8f10, 0xa529, 0x9fb0, 0x0, 0x1);
        gbc.writeMem(0x1e8f, { 0xb7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfcbd, gbc.sp());
        EXPECT(0x1e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0150
        gbc.setState(0xca1f, 0xfcd7, 0x4430, 0xd288, 0x3da, 0xdb03, 0x0, 0x1);
        gbc.writeMem(0xca1f, { 0xb7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfcd7, gbc.sp());
        EXPECT(0xca20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xca1f));
        // B7 0151
        gbc.setState(0xda57, 0x83e, 0x8b40, 0x426a, 0x7de1, 0x6c30, 0x0, 0x0);
        gbc.writeMem(0xda57, { 0xb7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x83e, gbc.sp());
        EXPECT(0xda58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xda57));
        // B7 0152
        gbc.setState(0x561e, 0x6c11, 0xcc20, 0xef48, 0x2804, 0x37db, 0x1, 0x0);
        gbc.writeMem(0x561e, { 0xb7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6c11, gbc.sp());
        EXPECT(0x561f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0153
        gbc.setState(0xd9aa, 0x7293, 0x2170, 0xd827, 0x3f6b, 0xa405, 0x1, 0x1);
        gbc.writeMem(0xd9aa, { 0xb7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7293, gbc.sp());
        EXPECT(0xd9ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd9aa));
        // B7 0154
        gbc.setState(0x32b7, 0x2503, 0xaa50, 0xd037, 0x116c, 0x3175, 0x0, 0x0);
        gbc.writeMem(0x32b7, { 0xb7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2503, gbc.sp());
        EXPECT(0x32b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0155
        gbc.setState(0x9571, 0xc3eb, 0xe6a0, 0x921c, 0x83a8, 0x5cbe, 0x0, 0x1);
        gbc.writeMem(0x9571, { 0xb7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc3eb, gbc.sp());
        EXPECT(0x9572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9571));
        // B7 0156
        gbc.setState(0x4d4c, 0x982f, 0x8a70, 0xfed0, 0xaa00, 0x7e16, 0x1, 0x1);
        gbc.writeMem(0x4d4c, { 0xb7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x982f, gbc.sp());
        EXPECT(0x4d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0157
        gbc.setState(0x897e, 0x5c54, 0x8c40, 0xd70e, 0x17e4, 0x849, 0x0, 0x1);
        gbc.writeMem(0x897e, { 0xb7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5c54, gbc.sp());
        EXPECT(0x897f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x897e));
        // B7 0158
        gbc.setState(0x1425, 0xaac2, 0x7390, 0xde95, 0x8a51, 0xe5a8, 0x1, 0x1);
        gbc.writeMem(0x1425, { 0xb7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xaac2, gbc.sp());
        EXPECT(0x1426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0159
        gbc.setState(0x1ca7, 0xa5c2, 0xea10, 0x2fd5, 0xee30, 0x7288, 0x1, 0x1);
        gbc.writeMem(0x1ca7, { 0xb7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa5c2, gbc.sp());
        EXPECT(0x1ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 015A
        gbc.setState(0x430e, 0x2abb, 0x50c0, 0x8c43, 0xa0ff, 0xf01, 0x1, 0x0);
        gbc.writeMem(0x430e, { 0xb7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2abb, gbc.sp());
        EXPECT(0x430f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 015B
        gbc.setState(0x87d1, 0x56b7, 0x4be0, 0x7529, 0x8e13, 0x83d6, 0x1, 0x1);
        gbc.writeMem(0x87d1, { 0xb7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x56b7, gbc.sp());
        EXPECT(0x87d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x87d1));
        // B7 015C
        gbc.setState(0x442d, 0xfb2, 0x5550, 0x9baf, 0xf540, 0xb455, 0x1, 0x1);
        gbc.writeMem(0x442d, { 0xb7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xfb2, gbc.sp());
        EXPECT(0x442e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 015D
        gbc.setState(0x38d6, 0xb170, 0x1ff0, 0x52fc, 0x71b0, 0x212e, 0x1, 0x0);
        gbc.writeMem(0x38d6, { 0xb7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb170, gbc.sp());
        EXPECT(0x38d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 015F
        gbc.setState(0x40e6, 0xe656, 0xefd0, 0x9471, 0x6887, 0x86bb, 0x0, 0x1);
        gbc.writeMem(0x40e6, { 0xb7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe656, gbc.sp());
        EXPECT(0x40e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0160
        gbc.setState(0x363c, 0x5f98, 0xf860, 0xa7a, 0xf9df, 0xa952, 0x0, 0x1);
        gbc.writeMem(0x363c, { 0xb7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5f98, gbc.sp());
        EXPECT(0x363d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0161
        gbc.setState(0x1328, 0xc64f, 0x6dd0, 0x9c56, 0x41e4, 0xe0f4, 0x0, 0x1);
        gbc.writeMem(0x1328, { 0xb7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc64f, gbc.sp());
        EXPECT(0x1329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0162
        gbc.setState(0x8494, 0x6146, 0xdf60, 0x8911, 0x1043, 0x25a2, 0x0, 0x1);
        gbc.writeMem(0x8494, { 0xb7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6146, gbc.sp());
        EXPECT(0x8495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8494));
        // B7 0163
        gbc.setState(0x5fd2, 0xa653, 0x2f40, 0x6c0b, 0xfa9c, 0x57e9, 0x1, 0x0);
        gbc.writeMem(0x5fd2, { 0xb7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa653, gbc.sp());
        EXPECT(0x5fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0164
        gbc.setState(0x69f6, 0x5f98, 0x4560, 0x1a7a, 0xe129, 0x8680, 0x0, 0x1);
        gbc.writeMem(0x69f6, { 0xb7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5f98, gbc.sp());
        EXPECT(0x69f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0165
        gbc.setState(0x33cf, 0xdcef, 0x37d0, 0x9dc, 0x4160, 0xb115, 0x1, 0x0);
        gbc.writeMem(0x33cf, { 0xb7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdcef, gbc.sp());
        EXPECT(0x33d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0166
        gbc.setState(0x3efd, 0x612a, 0xb680, 0xbf1a, 0x58cf, 0x3ffd, 0x1, 0x1);
        gbc.writeMem(0x3efd, { 0xb7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x612a, gbc.sp());
        EXPECT(0x3efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0168
        gbc.setState(0x62ee, 0xa30c, 0x2820, 0x9a6b, 0x4928, 0xa89, 0x1, 0x0);
        gbc.writeMem(0x62ee, { 0xb7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa30c, gbc.sp());
        EXPECT(0x62ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0169
        gbc.setState(0x8a20, 0x2bba, 0x8fe0, 0xde6f, 0x304c, 0xf0a5, 0x1, 0x1);
        gbc.writeMem(0x8a20, { 0xb7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2bba, gbc.sp());
        EXPECT(0x8a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8a20));
        // B7 016A
        gbc.setState(0x7ea9, 0xb40a, 0x6350, 0xce08, 0xa0eb, 0x697e, 0x1, 0x0);
        gbc.writeMem(0x7ea9, { 0xb7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb40a, gbc.sp());
        EXPECT(0x7eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 016B
        gbc.setState(0x79e6, 0x899b, 0x5bb0, 0x7aba, 0x1290, 0xbe51, 0x1, 0x1);
        gbc.writeMem(0x79e6, { 0xb7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x899b, gbc.sp());
        EXPECT(0x79e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 016C
        gbc.setState(0x85f6, 0x17e8, 0x7160, 0x8c5e, 0x1071, 0xc99c, 0x0, 0x0);
        gbc.writeMem(0x85f6, { 0xb7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x17e8, gbc.sp());
        EXPECT(0x85f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x85f6));
        // B7 016D
        gbc.setState(0xa2a2, 0x11e0, 0x7c0, 0x4d9e, 0x9372, 0x9eb4, 0x0, 0x1);
        gbc.writeMem(0xa2a2, { 0xb7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x11e0, gbc.sp());
        EXPECT(0xa2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa2a2));
        // B7 016E
        gbc.setState(0x3e2d, 0x53de, 0x4450, 0x3bdf, 0x1bfe, 0x56d1, 0x0, 0x1);
        gbc.writeMem(0x3e2d, { 0xb7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x53de, gbc.sp());
        EXPECT(0x3e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 016F
        gbc.setState(0xc842, 0x4969, 0x5050, 0x1ac2, 0x1b81, 0x36b8, 0x0, 0x1);
        gbc.writeMem(0xc842, { 0xb7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4969, gbc.sp());
        EXPECT(0xc843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc842));
        // B7 0170
        gbc.setState(0xb955, 0xcb1f, 0x2370, 0xd8d4, 0xfed0, 0xe9b5, 0x1, 0x0);
        gbc.writeMem(0xb955, { 0xb7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcb1f, gbc.sp());
        EXPECT(0xb956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb955));
        // B7 0171
        gbc.setState(0x431a, 0x630d, 0x2570, 0x67f8, 0x69eb, 0xc054, 0x1, 0x1);
        gbc.writeMem(0x431a, { 0xb7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x630d, gbc.sp());
        EXPECT(0x431b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0172
        gbc.setState(0x7cf8, 0x31e4, 0x300, 0xd8, 0xb85c, 0xd40a, 0x1, 0x1);
        gbc.writeMem(0x7cf8, { 0xb7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x31e4, gbc.sp());
        EXPECT(0x7cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0173
        gbc.setState(0x8698, 0xd276, 0xcfa0, 0x429f, 0x653b, 0x5fce, 0x1, 0x1);
        gbc.writeMem(0x8698, { 0xb7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd276, gbc.sp());
        EXPECT(0x8699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8698));
        // B7 0174
        gbc.setState(0xcf52, 0x5ac9, 0x6ac0, 0xe3d5, 0x703, 0x37ab, 0x1, 0x0);
        gbc.writeMem(0xcf52, { 0xb7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5ac9, gbc.sp());
        EXPECT(0xcf53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcf52));
        // B7 0175
        gbc.setState(0xe71, 0x6061, 0xa440, 0x848b, 0x49fa, 0x988b, 0x0, 0x1);
        gbc.writeMem(0xe71, { 0xb7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6061, gbc.sp());
        EXPECT(0xe72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0176
        gbc.setState(0x9b98, 0xe7b, 0xfc0, 0x6c9c, 0x7fdc, 0x3b2f, 0x0, 0x0);
        gbc.writeMem(0x9b98, { 0xb7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe7b, gbc.sp());
        EXPECT(0x9b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9b98));
        // B7 0177
        gbc.setState(0x2778, 0x4268, 0xcfe0, 0x1044, 0x7c79, 0x51ef, 0x1, 0x0);
        gbc.writeMem(0x2778, { 0xb7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4268, gbc.sp());
        EXPECT(0x2779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0178
        gbc.setState(0xcb98, 0x6fb9, 0x9110, 0xaebf, 0xda78, 0x3828, 0x0, 0x1);
        gbc.writeMem(0xcb98, { 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6fb9, gbc.sp());
        EXPECT(0xcb99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcb98));
        // B7 0179
        gbc.setState(0x8be9, 0x1973, 0xfc70, 0xf4a5, 0x389d, 0x7cd0, 0x1, 0x1);
        gbc.writeMem(0x8be9, { 0xb7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1973, gbc.sp());
        EXPECT(0x8bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8be9));
        // B7 017A
        gbc.setState(0x899c, 0x3aa2, 0x2950, 0x82f4, 0xa431, 0x4c28, 0x1, 0x1);
        gbc.writeMem(0x899c, { 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3aa2, gbc.sp());
        EXPECT(0x899d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x899c));
        // B7 017B
        gbc.setState(0xb9d6, 0xba2f, 0x9c90, 0x8166, 0x7a72, 0xe73c, 0x1, 0x0);
        gbc.writeMem(0xb9d6, { 0xb7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xba2f, gbc.sp());
        EXPECT(0xb9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb9d6));
        // B7 017C
        gbc.setState(0x424e, 0xdd6c, 0x3f0, 0xb8ad, 0x1c84, 0x1cc1, 0x0, 0x1);
        gbc.writeMem(0x424e, { 0xb7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xdd6c, gbc.sp());
        EXPECT(0x424f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 017D
        gbc.setState(0x9da2, 0x9c31, 0x3860, 0x8b8d, 0xf5fc, 0x3ae0, 0x1, 0x1);
        gbc.writeMem(0x9da2, { 0xb7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9c31, gbc.sp());
        EXPECT(0x9da3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9da2));
        // B7 017E
        gbc.setState(0x9386, 0x94b6, 0x9de0, 0xa492, 0xa07d, 0x6e1a, 0x1, 0x1);
        gbc.writeMem(0x9386, { 0xb7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x94b6, gbc.sp());
        EXPECT(0x9387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9386));
        // B7 017F
        gbc.setState(0x652a, 0x33ba, 0x8cb0, 0x9c83, 0x91e0, 0xaee4, 0x1, 0x1);
        gbc.writeMem(0x652a, { 0xb7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x33ba, gbc.sp());
        EXPECT(0x652b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0180
        gbc.setState(0x14a7, 0x3365, 0x9d20, 0x5556, 0x8f0e, 0xecdc, 0x1, 0x0);
        gbc.writeMem(0x14a7, { 0xb7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3365, gbc.sp());
        EXPECT(0x14a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0181
        gbc.setState(0x6c47, 0xedb2, 0xcda0, 0x65c5, 0xcccd, 0xa1af, 0x0, 0x1);
        gbc.writeMem(0x6c47, { 0xb7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xedb2, gbc.sp());
        EXPECT(0x6c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0182
        gbc.setState(0x89e6, 0x4351, 0x35e0, 0x6e12, 0x1d21, 0xd5fa, 0x1, 0x1);
        gbc.writeMem(0x89e6, { 0xb7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4351, gbc.sp());
        EXPECT(0x89e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x89e6));
        // B7 0183
        gbc.setState(0x7ded, 0xc76a, 0xc6d0, 0xa56f, 0x9a20, 0xf8a3, 0x0, 0x1);
        gbc.writeMem(0x7ded, { 0xb7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc76a, gbc.sp());
        EXPECT(0x7dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0185
        gbc.setState(0x2eca, 0x2ea0, 0xefb0, 0x3076, 0x9fc4, 0x9a21, 0x1, 0x0);
        gbc.writeMem(0x2eca, { 0xb7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2ea0, gbc.sp());
        EXPECT(0x2ecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0186
        gbc.setState(0x4003, 0x90a, 0x6d60, 0x8f08, 0x57a7, 0xeb40, 0x1, 0x0);
        gbc.writeMem(0x4003, { 0xb7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x90a, gbc.sp());
        EXPECT(0x4004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0187
        gbc.setState(0x22a, 0xc5ff, 0x2290, 0xc6e4, 0xae3b, 0x9765, 0x0, 0x0);
        gbc.writeMem(0x22a, { 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc5ff, gbc.sp());
        EXPECT(0x22b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0188
        gbc.setState(0x51c4, 0xcd83, 0x9d50, 0xed0b, 0x32b, 0x9d6, 0x1, 0x1);
        gbc.writeMem(0x51c4, { 0xb7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcd83, gbc.sp());
        EXPECT(0x51c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0189
        gbc.setState(0xc4f7, 0xc312, 0x1390, 0x3b90, 0x436, 0x3bf6, 0x1, 0x1);
        gbc.writeMem(0xc4f7, { 0xb7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc312, gbc.sp());
        EXPECT(0xc4f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc4f7));
        // B7 018A
        gbc.setState(0x47d8, 0xde47, 0xb5e0, 0xcf80, 0xc0c, 0x603, 0x1, 0x1);
        gbc.writeMem(0x47d8, { 0xb7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xde47, gbc.sp());
        EXPECT(0x47d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 018C
        gbc.setState(0x4473, 0x7c8b, 0x4310, 0xc72f, 0x1009, 0xbedf, 0x1, 0x0);
        gbc.writeMem(0x4473, { 0xb7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7c8b, gbc.sp());
        EXPECT(0x4474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 018D
        gbc.setState(0xa932, 0x9258, 0x7f50, 0x56e0, 0x48ff, 0xad9f, 0x0, 0x1);
        gbc.writeMem(0xa932, { 0xb7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9258, gbc.sp());
        EXPECT(0xa933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa932));
        // B7 018E
        gbc.setState(0x1846, 0x2d8f, 0x25f0, 0x29de, 0x49d9, 0x2e86, 0x0, 0x1);
        gbc.writeMem(0x1846, { 0xb7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2d8f, gbc.sp());
        EXPECT(0x1847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 018F
        gbc.setState(0x8d54, 0xc024, 0xdfb0, 0xd254, 0xbaf, 0xa723, 0x1, 0x1);
        gbc.writeMem(0x8d54, { 0xb7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc024, gbc.sp());
        EXPECT(0x8d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8d54));
        // B7 0190
        gbc.setState(0xcda7, 0x84b2, 0x66c0, 0x35, 0xeec1, 0x78ab, 0x1, 0x1);
        gbc.writeMem(0xcda7, { 0xb7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x84b2, gbc.sp());
        EXPECT(0xcda8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcda7));
        // B7 0191
        gbc.setState(0x47e5, 0x8fae, 0xf140, 0xd3aa, 0xf03f, 0x3cf4, 0x1, 0x1);
        gbc.writeMem(0x47e5, { 0xb7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8fae, gbc.sp());
        EXPECT(0x47e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0192
        gbc.setState(0xc417, 0xe066, 0x4e20, 0x27da, 0x2a58, 0xfaf5, 0x1, 0x0);
        gbc.writeMem(0xc417, { 0xb7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe066, gbc.sp());
        EXPECT(0xc418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc417));
        // B7 0193
        gbc.setState(0x48c7, 0x6759, 0xba80, 0xa12, 0x1174, 0xe8c, 0x1, 0x0);
        gbc.writeMem(0x48c7, { 0xb7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6759, gbc.sp());
        EXPECT(0x48c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0194
        gbc.setState(0x1f8b, 0xc66a, 0x6770, 0xfea7, 0x7c5e, 0x5d9a, 0x0, 0x1);
        gbc.writeMem(0x1f8b, { 0xb7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc66a, gbc.sp());
        EXPECT(0x1f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0195
        gbc.setState(0xdee, 0x69d4, 0xafc0, 0x4766, 0x7f5e, 0x833, 0x0, 0x0);
        gbc.writeMem(0xdee, { 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x69d4, gbc.sp());
        EXPECT(0xdef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0196
        gbc.setState(0x472d, 0xfe33, 0x97e0, 0xab5a, 0x950f, 0xec37, 0x0, 0x1);
        gbc.writeMem(0x472d, { 0xb7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfe33, gbc.sp());
        EXPECT(0x472e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0197
        gbc.setState(0xc54, 0x72c5, 0xca50, 0xffc5, 0xaf3b, 0x65d7, 0x0, 0x1);
        gbc.writeMem(0xc54, { 0xb7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x72c5, gbc.sp());
        EXPECT(0xc55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0198
        gbc.setState(0x859b, 0x8304, 0xe460, 0xab93, 0xd8f4, 0x7ce5, 0x1, 0x1);
        gbc.writeMem(0x859b, { 0xb7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8304, gbc.sp());
        EXPECT(0x859c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x859b));
        // B7 0199
        gbc.setState(0x4530, 0xdc96, 0x6d0, 0xd361, 0x293f, 0x3718, 0x1, 0x1);
        gbc.writeMem(0x4530, { 0xb7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdc96, gbc.sp());
        EXPECT(0x4531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 019A
        gbc.setState(0x1e91, 0xf836, 0x2720, 0x750b, 0x681a, 0xf978, 0x0, 0x1);
        gbc.writeMem(0x1e91, { 0xb7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf836, gbc.sp());
        EXPECT(0x1e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 019B
        gbc.setState(0x2aa4, 0x66ce, 0xf6f0, 0x15ae, 0x5768, 0x74b4, 0x1, 0x0);
        gbc.writeMem(0x2aa4, { 0xb7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x66ce, gbc.sp());
        EXPECT(0x2aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 019C
        gbc.setState(0x82d5, 0xaf70, 0x5890, 0x9f2b, 0x460c, 0x5c3a, 0x1, 0x1);
        gbc.writeMem(0x82d5, { 0xb7 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xaf70, gbc.sp());
        EXPECT(0x82d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x82d5));
        // B7 019E
        gbc.setState(0x7dbf, 0xb013, 0x8c0, 0xdd92, 0x4673, 0xc0f1, 0x0, 0x0);
        gbc.writeMem(0x7dbf, { 0xb7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb013, gbc.sp());
        EXPECT(0x7dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 019F
        gbc.setState(0x55ca, 0x1100, 0xec80, 0x48e8, 0xad35, 0xe9c1, 0x1, 0x0);
        gbc.writeMem(0x55ca, { 0xb7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1100, gbc.sp());
        EXPECT(0x55cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01A0
        gbc.setState(0x675a, 0x49b7, 0x1c50, 0x311d, 0xba57, 0xfd81, 0x0, 0x0);
        gbc.writeMem(0x675a, { 0xb7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x49b7, gbc.sp());
        EXPECT(0x675b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01A1
        gbc.setState(0x16e9, 0x402e, 0xa0a0, 0xfc15, 0x6015, 0x2de7, 0x1, 0x0);
        gbc.writeMem(0x16e9, { 0xb7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x402e, gbc.sp());
        EXPECT(0x16ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01A2
        gbc.setState(0xc89, 0xce93, 0x9b60, 0x33a6, 0xb371, 0xc77, 0x0, 0x1);
        gbc.writeMem(0xc89, { 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xce93, gbc.sp());
        EXPECT(0xc8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01A3
        gbc.setState(0x7252, 0x2441, 0xa2a0, 0x7d18, 0xaeef, 0x2135, 0x0, 0x0);
        gbc.writeMem(0x7252, { 0xb7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2441, gbc.sp());
        EXPECT(0x7253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01A4
        gbc.setState(0xa2b2, 0x35f3, 0xa9b0, 0x6b9e, 0xf56c, 0x14bc, 0x1, 0x0);
        gbc.writeMem(0xa2b2, { 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x35f3, gbc.sp());
        EXPECT(0xa2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa2b2));
        // B7 01A5
        gbc.setState(0xd2e4, 0x274e, 0xb970, 0xfc36, 0x3d72, 0x6d9c, 0x0, 0x0);
        gbc.writeMem(0xd2e4, { 0xb7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x274e, gbc.sp());
        EXPECT(0xd2e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd2e4));
        // B7 01A6
        gbc.setState(0x6f83, 0xb1f3, 0xc730, 0x9882, 0x3195, 0x65a7, 0x0, 0x0);
        gbc.writeMem(0x6f83, { 0xb7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb1f3, gbc.sp());
        EXPECT(0x6f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01A7
        gbc.setState(0xdb29, 0xdbed, 0xeeb0, 0x3293, 0xce36, 0x3c1f, 0x0, 0x0);
        gbc.writeMem(0xdb29, { 0xb7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdbed, gbc.sp());
        EXPECT(0xdb2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdb29));
        // B7 01A8
        gbc.setState(0xae75, 0x6ea8, 0xc780, 0x4974, 0x9808, 0xe52a, 0x0, 0x1);
        gbc.writeMem(0xae75, { 0xb7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6ea8, gbc.sp());
        EXPECT(0xae76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xae75));
        // B7 01AA
        gbc.setState(0x11ea, 0xea20, 0x5c80, 0xa270, 0x1e19, 0xd03b, 0x1, 0x0);
        gbc.writeMem(0x11ea, { 0xb7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xea20, gbc.sp());
        EXPECT(0x11eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01AB
        gbc.setState(0x2c9a, 0x5f6a, 0xb480, 0x7856, 0x6d2e, 0x9dd4, 0x0, 0x0);
        gbc.writeMem(0x2c9a, { 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5f6a, gbc.sp());
        EXPECT(0x2c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01AC
        gbc.setState(0x2d2, 0xefe3, 0xd60, 0xc93c, 0x4e9c, 0xf253, 0x0, 0x0);
        gbc.writeMem(0x2d2, { 0xb7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xefe3, gbc.sp());
        EXPECT(0x2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01AD
        gbc.setState(0x4fec, 0xaee3, 0xab30, 0xd5be, 0xcd40, 0xbdce, 0x1, 0x1);
        gbc.writeMem(0x4fec, { 0xb7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xaee3, gbc.sp());
        EXPECT(0x4fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01AE
        gbc.setState(0x5619, 0xe74e, 0xeb80, 0x7b51, 0xb9b8, 0x1ccf, 0x0, 0x1);
        gbc.writeMem(0x5619, { 0xb7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe74e, gbc.sp());
        EXPECT(0x561a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01AF
        gbc.setState(0x8cc0, 0x8d1d, 0x7aa0, 0x6b9b, 0x2d62, 0xdaf2, 0x1, 0x1);
        gbc.writeMem(0x8cc0, { 0xb7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8d1d, gbc.sp());
        EXPECT(0x8cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8cc0));
        // B7 01B0
        gbc.setState(0xc71e, 0x1488, 0x4500, 0xbeaf, 0xa50b, 0x3955, 0x0, 0x0);
        gbc.writeMem(0xc71e, { 0xb7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1488, gbc.sp());
        EXPECT(0xc71f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc71e));
        // B7 01B1
        gbc.setState(0x2bc7, 0x902a, 0x46a0, 0xe9a9, 0xfe93, 0x76cb, 0x1, 0x0);
        gbc.writeMem(0x2bc7, { 0xb7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x902a, gbc.sp());
        EXPECT(0x2bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01B2
        gbc.setState(0x8e7a, 0xee8e, 0x6600, 0xc8cf, 0xdccd, 0xca6e, 0x1, 0x1);
        gbc.writeMem(0x8e7a, { 0xb7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xee8e, gbc.sp());
        EXPECT(0x8e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8e7a));
        // B7 01B3
        gbc.setState(0x48c8, 0x1d56, 0x68e0, 0x8141, 0x1d62, 0x2c28, 0x1, 0x0);
        gbc.writeMem(0x48c8, { 0xb7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1d56, gbc.sp());
        EXPECT(0x48c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01B4
        gbc.setState(0x3b22, 0x1997, 0xdd80, 0x22ec, 0x20be, 0x76b0, 0x0, 0x0);
        gbc.writeMem(0x3b22, { 0xb7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1997, gbc.sp());
        EXPECT(0x3b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01B6
        gbc.setState(0x9130, 0x1718, 0xd600, 0xf0f, 0xb5af, 0xcc62, 0x1, 0x0);
        gbc.writeMem(0x9130, { 0xb7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1718, gbc.sp());
        EXPECT(0x9131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9130));
        // B7 01B7
        gbc.setState(0xd944, 0x9e96, 0x77a0, 0xa5cb, 0x41cb, 0xafab, 0x1, 0x1);
        gbc.writeMem(0xd944, { 0xb7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9e96, gbc.sp());
        EXPECT(0xd945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd944));
        // B7 01B8
        gbc.setState(0xc376, 0xcb67, 0x6b00, 0x1074, 0xafcd, 0x89ef, 0x0, 0x0);
        gbc.writeMem(0xc376, { 0xb7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcb67, gbc.sp());
        EXPECT(0xc377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc376));
        // B7 01BA
        gbc.setState(0x38aa, 0xc3dd, 0x1d0, 0xf059, 0x10cc, 0x6eab, 0x0, 0x0);
        gbc.writeMem(0x38aa, { 0xb7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc3dd, gbc.sp());
        EXPECT(0x38ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01BB
        gbc.setState(0x6841, 0xe787, 0x2070, 0xe41d, 0x4d8, 0x95d0, 0x1, 0x0);
        gbc.writeMem(0x6841, { 0xb7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe787, gbc.sp());
        EXPECT(0x6842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01BC
        gbc.setState(0x2be, 0x4e4a, 0x370, 0xe647, 0x65f0, 0x1660, 0x1, 0x0);
        gbc.writeMem(0x2be, { 0xb7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4e4a, gbc.sp());
        EXPECT(0x2bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01BD
        gbc.setState(0xeda7, 0xfd61, 0x2010, 0x5d27, 0x497a, 0xd029, 0x1, 0x0);
        gbc.writeMem(0xeda7, { 0xb7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfd61, gbc.sp());
        EXPECT(0xeda8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xeda7));
        // B7 01BE
        gbc.setState(0x6b3b, 0x5f98, 0x7a60, 0x1063, 0x5aed, 0xbf31, 0x0, 0x0);
        gbc.writeMem(0x6b3b, { 0xb7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5f98, gbc.sp());
        EXPECT(0x6b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01BF
        gbc.setState(0xdc3d, 0x9104, 0xf440, 0x4a1f, 0x4683, 0xeaf0, 0x1, 0x1);
        gbc.writeMem(0xdc3d, { 0xb7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9104, gbc.sp());
        EXPECT(0xdc3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdc3d));
        // B7 01C0
        gbc.setState(0xa5df, 0xd523, 0x5430, 0x74af, 0xb22f, 0x3f53, 0x0, 0x1);
        gbc.writeMem(0xa5df, { 0xb7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd523, gbc.sp());
        EXPECT(0xa5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa5df));
        // B7 01C1
        gbc.setState(0x9710, 0x1d8, 0x5a90, 0x1ead, 0xe68a, 0x1eef, 0x1, 0x0);
        gbc.writeMem(0x9710, { 0xb7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1d8, gbc.sp());
        EXPECT(0x9711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9710));
        // B7 01C2
        gbc.setState(0x6a50, 0x2312, 0x3030, 0x6648, 0x9825, 0xbab5, 0x0, 0x0);
        gbc.writeMem(0x6a50, { 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2312, gbc.sp());
        EXPECT(0x6a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01C3
        gbc.setState(0x34c0, 0x16cb, 0xff30, 0x9c03, 0x2f29, 0xf655, 0x1, 0x0);
        gbc.writeMem(0x34c0, { 0xb7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x16cb, gbc.sp());
        EXPECT(0x34c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01C4
        gbc.setState(0xacff, 0xe700, 0x3ea0, 0x5e13, 0xfb90, 0x85e, 0x0, 0x1);
        gbc.writeMem(0xacff, { 0xb7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe700, gbc.sp());
        EXPECT(0xad00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xacff));
        // B7 01C5
        gbc.setState(0xb5d1, 0x8cdd, 0x22e0, 0x97a8, 0xe0fe, 0xda82, 0x0, 0x0);
        gbc.writeMem(0xb5d1, { 0xb7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8cdd, gbc.sp());
        EXPECT(0xb5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb5d1));
        // B7 01C6
        gbc.setState(0x9f8a, 0x6ca4, 0x8790, 0x654f, 0x52f9, 0xc7b0, 0x0, 0x1);
        gbc.writeMem(0x9f8a, { 0xb7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6ca4, gbc.sp());
        EXPECT(0x9f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9f8a));
        // B7 01C7
        gbc.setState(0xd9dd, 0x299, 0x5e10, 0xbdac, 0xc84c, 0x34c9, 0x0, 0x1);
        gbc.writeMem(0xd9dd, { 0xb7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x299, gbc.sp());
        EXPECT(0xd9de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd9dd));
        // B7 01C8
        gbc.setState(0x1dce, 0x8474, 0xff30, 0xfc57, 0x7a99, 0xc90f, 0x1, 0x0);
        gbc.writeMem(0x1dce, { 0xb7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8474, gbc.sp());
        EXPECT(0x1dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01C9
        gbc.setState(0xeeda, 0xae1d, 0x36f0, 0xc95, 0x4fa7, 0xc59a, 0x0, 0x0);
        gbc.writeMem(0xeeda, { 0xb7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xae1d, gbc.sp());
        EXPECT(0xeedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xeeda));
        // B7 01CA
        gbc.setState(0xd11b, 0x2d3e, 0x3aa0, 0x9a9b, 0xff23, 0x5fe3, 0x0, 0x1);
        gbc.writeMem(0xd11b, { 0xb7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2d3e, gbc.sp());
        EXPECT(0xd11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd11b));
        // B7 01CB
        gbc.setState(0x3072, 0x7be1, 0x43a0, 0x9381, 0x2656, 0x159d, 0x1, 0x0);
        gbc.writeMem(0x3072, { 0xb7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7be1, gbc.sp());
        EXPECT(0x3073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01CC
        gbc.setState(0x452b, 0x58d7, 0xad90, 0x69e9, 0xf4dd, 0x1a01, 0x0, 0x0);
        gbc.writeMem(0x452b, { 0xb7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x58d7, gbc.sp());
        EXPECT(0x452c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01CD
        gbc.setState(0xe3b9, 0x70eb, 0xe420, 0xe82a, 0xea7a, 0xacf7, 0x1, 0x0);
        gbc.writeMem(0xe3b9, { 0xb7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x70eb, gbc.sp());
        EXPECT(0xe3ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe3b9));
        // B7 01CE
        gbc.setState(0xcf27, 0x3392, 0x6c10, 0x1e6b, 0x6198, 0x8b56, 0x1, 0x0);
        gbc.writeMem(0xcf27, { 0xb7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3392, gbc.sp());
        EXPECT(0xcf28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcf27));
        // B7 01CF
        gbc.setState(0xd5fc, 0xe7f1, 0x4830, 0xb50b, 0x1ada, 0x5c01, 0x0, 0x1);
        gbc.writeMem(0xd5fc, { 0xb7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe7f1, gbc.sp());
        EXPECT(0xd5fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd5fc));
        // B7 01D0
        gbc.setState(0xcde7, 0xe381, 0x7a70, 0xdc7e, 0xe8f3, 0xf27f, 0x0, 0x1);
        gbc.writeMem(0xcde7, { 0xb7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe381, gbc.sp());
        EXPECT(0xcde8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcde7));
        // B7 01D1
        gbc.setState(0xd888, 0x6bb1, 0xea30, 0x78b7, 0x4481, 0x2e57, 0x0, 0x0);
        gbc.writeMem(0xd888, { 0xb7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6bb1, gbc.sp());
        EXPECT(0xd889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd888));
        // B7 01D2
        gbc.setState(0xd012, 0xc3e2, 0xa160, 0xf0ca, 0x1068, 0x43ca, 0x0, 0x0);
        gbc.writeMem(0xd012, { 0xb7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc3e2, gbc.sp());
        EXPECT(0xd013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd012));
        // B7 01D3
        gbc.setState(0x6f3d, 0x35c2, 0x7ca0, 0x4f9e, 0x886b, 0x5b2, 0x0, 0x0);
        gbc.writeMem(0x6f3d, { 0xb7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x35c2, gbc.sp());
        EXPECT(0x6f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01D4
        gbc.setState(0x5946, 0x74e5, 0x7320, 0xea0c, 0xef3a, 0x5eea, 0x1, 0x0);
        gbc.writeMem(0x5946, { 0xb7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x74e5, gbc.sp());
        EXPECT(0x5947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01D5
        gbc.setState(0x2036, 0x7acf, 0x9fa0, 0x75f0, 0x9b6b, 0xea86, 0x0, 0x0);
        gbc.writeMem(0x2036, { 0xb7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7acf, gbc.sp());
        EXPECT(0x2037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01D6
        gbc.setState(0x7415, 0x3669, 0x5510, 0xe011, 0xfbf1, 0x5312, 0x0, 0x0);
        gbc.writeMem(0x7415, { 0xb7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3669, gbc.sp());
        EXPECT(0x7416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01D7
        gbc.setState(0x9bfc, 0x2f47, 0x58d0, 0x2aa4, 0x5f17, 0x56ae, 0x1, 0x1);
        gbc.writeMem(0x9bfc, { 0xb7 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2f47, gbc.sp());
        EXPECT(0x9bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9bfc));
        // B7 01D8
        gbc.setState(0x8ce3, 0x2cb2, 0xfff0, 0x2c47, 0x4ce9, 0x9e83, 0x0, 0x0);
        gbc.writeMem(0x8ce3, { 0xb7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2cb2, gbc.sp());
        EXPECT(0x8ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8ce3));
        // B7 01D9
        gbc.setState(0x2e25, 0x3da4, 0x3aa0, 0xbfb0, 0xddfb, 0x51b5, 0x1, 0x0);
        gbc.writeMem(0x2e25, { 0xb7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3da4, gbc.sp());
        EXPECT(0x2e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01DA
        gbc.setState(0x72ad, 0x855b, 0xb960, 0x54b0, 0x2c77, 0x28fa, 0x1, 0x1);
        gbc.writeMem(0x72ad, { 0xb7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x855b, gbc.sp());
        EXPECT(0x72ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01DC
        gbc.setState(0x4cc, 0xfff9, 0x1e60, 0xb12c, 0x9a50, 0xa2f1, 0x0, 0x1);
        gbc.writeMem(0x4cc, { 0xb7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfff9, gbc.sp());
        EXPECT(0x4cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01DD
        gbc.setState(0x4d79, 0x79d0, 0xe4c0, 0xf4ac, 0xc7ef, 0x4a44, 0x1, 0x1);
        gbc.writeMem(0x4d79, { 0xb7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x79d0, gbc.sp());
        EXPECT(0x4d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01DE
        gbc.setState(0x2322, 0xcf4, 0xea30, 0xaf34, 0x682e, 0x7c5c, 0x1, 0x0);
        gbc.writeMem(0x2322, { 0xb7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcf4, gbc.sp());
        EXPECT(0x2323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01DF
        gbc.setState(0x70c5, 0x1936, 0xae00, 0xd24d, 0xf010, 0xdf1b, 0x0, 0x0);
        gbc.writeMem(0x70c5, { 0xb7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1936, gbc.sp());
        EXPECT(0x70c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01E0
        gbc.setState(0x115e, 0x73bd, 0x40b0, 0xe509, 0x44ae, 0xd467, 0x0, 0x1);
        gbc.writeMem(0x115e, { 0xb7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x73bd, gbc.sp());
        EXPECT(0x115f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01E1
        gbc.setState(0xe5ed, 0xff76, 0xb9f0, 0xac58, 0xa59, 0xee76, 0x1, 0x1);
        gbc.writeMem(0xe5ed, { 0xb7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xff76, gbc.sp());
        EXPECT(0xe5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe5ed));
        // B7 01E2
        gbc.setState(0x5acb, 0x8f07, 0xb450, 0x4bde, 0x6919, 0xee31, 0x1, 0x1);
        gbc.writeMem(0x5acb, { 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8f07, gbc.sp());
        EXPECT(0x5acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01E3
        gbc.setState(0x2fa0, 0xaab7, 0x140, 0x8824, 0x6c25, 0xf7c3, 0x0, 0x0);
        gbc.writeMem(0x2fa0, { 0xb7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xaab7, gbc.sp());
        EXPECT(0x2fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01E4
        gbc.setState(0x6e5d, 0xa0c4, 0x8d40, 0xbf6d, 0xcb42, 0x36e5, 0x1, 0x0);
        gbc.writeMem(0x6e5d, { 0xb7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa0c4, gbc.sp());
        EXPECT(0x6e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01E5
        gbc.setState(0x57cb, 0x7079, 0x7fc0, 0x997a, 0x5d7f, 0xc94e, 0x0, 0x1);
        gbc.writeMem(0x57cb, { 0xb7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7079, gbc.sp());
        EXPECT(0x57cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01E6
        gbc.setState(0x885d, 0x68af, 0x7ba0, 0xbfb4, 0x73b9, 0xcab3, 0x1, 0x1);
        gbc.writeMem(0x885d, { 0xb7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x68af, gbc.sp());
        EXPECT(0x885e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x885d));
        // B7 01E7
        gbc.setState(0xb2c7, 0xe8ea, 0xaba0, 0x84bb, 0xe9f4, 0x8547, 0x1, 0x1);
        gbc.writeMem(0xb2c7, { 0xb7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe8ea, gbc.sp());
        EXPECT(0xb2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb2c7));
        // B7 01E8
        gbc.setState(0x6d24, 0x47b5, 0xbbd0, 0x96da, 0x11cd, 0xeedf, 0x0, 0x0);
        gbc.writeMem(0x6d24, { 0xb7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x47b5, gbc.sp());
        EXPECT(0x6d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01E9
        gbc.setState(0xea4, 0x623d, 0x4680, 0x60c0, 0xecf6, 0x89c, 0x0, 0x1);
        gbc.writeMem(0xea4, { 0xb7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x623d, gbc.sp());
        EXPECT(0xea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01EA
        gbc.setState(0x4d61, 0xa6bd, 0x9bc0, 0x723f, 0x1d39, 0x1a48, 0x1, 0x1);
        gbc.writeMem(0x4d61, { 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa6bd, gbc.sp());
        EXPECT(0x4d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01EB
        gbc.setState(0x4b70, 0x7ec5, 0xffe0, 0xfced, 0x617e, 0x897d, 0x0, 0x1);
        gbc.writeMem(0x4b70, { 0xb7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7ec5, gbc.sp());
        EXPECT(0x4b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01EC
        gbc.setState(0xc07b, 0xf5a2, 0xb3b0, 0x61ae, 0xeb1d, 0xaf2b, 0x0, 0x1);
        gbc.writeMem(0xc07b, { 0xb7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf5a2, gbc.sp());
        EXPECT(0xc07c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc07b));
        // B7 01ED
        gbc.setState(0xce3d, 0xf19c, 0xeb70, 0xee8c, 0x21cd, 0x9f17, 0x1, 0x1);
        gbc.writeMem(0xce3d, { 0xb7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf19c, gbc.sp());
        EXPECT(0xce3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xce3d));
        // B7 01EE
        gbc.setState(0x7648, 0xff3d, 0xc7e0, 0xf223, 0x319, 0x248a, 0x0, 0x1);
        gbc.writeMem(0x7648, { 0xb7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xff3d, gbc.sp());
        EXPECT(0x7649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01EF
        gbc.setState(0x94ca, 0xec76, 0x3770, 0x8283, 0xb2c7, 0x7594, 0x0, 0x0);
        gbc.writeMem(0x94ca, { 0xb7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xec76, gbc.sp());
        EXPECT(0x94cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x94ca));
        // B7 01F0
        gbc.setState(0x473f, 0x915d, 0xd9b0, 0x13f0, 0x78d8, 0xb35c, 0x0, 0x0);
        gbc.writeMem(0x473f, { 0xb7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x915d, gbc.sp());
        EXPECT(0x4740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01F1
        gbc.setState(0xde46, 0x8d58, 0x4160, 0xd00d, 0x9b93, 0x64ba, 0x0, 0x1);
        gbc.writeMem(0xde46, { 0xb7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8d58, gbc.sp());
        EXPECT(0xde47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xde46));
        // B7 01F2
        gbc.setState(0x6779, 0x2660, 0xbfd0, 0xc95d, 0xd812, 0xac54, 0x0, 0x0);
        gbc.writeMem(0x6779, { 0xb7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2660, gbc.sp());
        EXPECT(0x677a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01F3
        gbc.setState(0xb932, 0xbd64, 0x6960, 0x1f76, 0xfdaa, 0x4f6b, 0x1, 0x1);
        gbc.writeMem(0xb932, { 0xb7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbd64, gbc.sp());
        EXPECT(0xb933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb932));
        // B7 01F4
        gbc.setState(0x7fc6, 0x8d13, 0x9b70, 0x6356, 0xbe51, 0xec18, 0x1, 0x1);
        gbc.writeMem(0x7fc6, { 0xb7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8d13, gbc.sp());
        EXPECT(0x7fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01F5
        gbc.setState(0x783a, 0xd2ac, 0x6910, 0xa9c5, 0xeab4, 0x94c5, 0x1, 0x1);
        gbc.writeMem(0x783a, { 0xb7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd2ac, gbc.sp());
        EXPECT(0x783b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01F6
        gbc.setState(0x1350, 0x184b, 0xbb80, 0xed5f, 0xd83e, 0x5d27, 0x0, 0x1);
        gbc.writeMem(0x1350, { 0xb7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x184b, gbc.sp());
        EXPECT(0x1351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01F7
        gbc.setState(0xb7a3, 0xd90c, 0xb200, 0x5f2f, 0x8244, 0x4a3, 0x0, 0x0);
        gbc.writeMem(0xb7a3, { 0xb7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd90c, gbc.sp());
        EXPECT(0xb7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb7a3));
        // B7 01F8
        gbc.setState(0xae6f, 0xeb10, 0xac20, 0xfb3a, 0x99d2, 0x9794, 0x0, 0x1);
        gbc.writeMem(0xae6f, { 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xeb10, gbc.sp());
        EXPECT(0xae70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xae6f));
        // B7 01F9
        gbc.setState(0xe508, 0x8b58, 0x82a0, 0xe731, 0xb22a, 0x41c6, 0x0, 0x1);
        gbc.writeMem(0xe508, { 0xb7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8b58, gbc.sp());
        EXPECT(0xe509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe508));
        // B7 01FA
        gbc.setState(0x75bf, 0xb61, 0xb9f0, 0xd020, 0xf764, 0x50dd, 0x0, 0x1);
        gbc.writeMem(0x75bf, { 0xb7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb61, gbc.sp());
        EXPECT(0x75c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01FB
        gbc.setState(0xe7ed, 0x459d, 0xb7b0, 0xdd54, 0x9772, 0x6236, 0x0, 0x1);
        gbc.writeMem(0xe7ed, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x459d, gbc.sp());
        EXPECT(0xe7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe7ed));
        // B7 01FC
        gbc.setState(0xdae4, 0xa1ac, 0x5cd0, 0x5153, 0xe11a, 0xe1ca, 0x0, 0x1);
        gbc.writeMem(0xdae4, { 0xb7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa1ac, gbc.sp());
        EXPECT(0xdae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdae4));
        // B7 01FD
        gbc.setState(0x25d9, 0x36d4, 0x8920, 0x9cbc, 0x1d9f, 0x6b5a, 0x1, 0x0);
        gbc.writeMem(0x25d9, { 0xb7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x36d4, gbc.sp());
        EXPECT(0x25da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 01FE
        gbc.setState(0xe187, 0x3705, 0x81f0, 0x1910, 0x5590, 0xeffa, 0x1, 0x1);
        gbc.writeMem(0xe187, { 0xb7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3705, gbc.sp());
        EXPECT(0xe188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe187));
        // B7 01FF
        gbc.setState(0x9a71, 0x2e0a, 0x7d60, 0x7035, 0xb9ac, 0x4ac, 0x1, 0x0);
        gbc.writeMem(0x9a71, { 0xb7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2e0a, gbc.sp());
        EXPECT(0x9a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9a71));
        // B7 0200
        gbc.setState(0x16a8, 0xdc98, 0x5a90, 0x8a76, 0x154f, 0xa5e3, 0x1, 0x1);
        gbc.writeMem(0x16a8, { 0xb7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdc98, gbc.sp());
        EXPECT(0x16a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0201
        gbc.setState(0x4d34, 0xa5ef, 0xf0, 0xba30, 0x24ae, 0x76b3, 0x0, 0x0);
        gbc.writeMem(0x4d34, { 0xb7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa5ef, gbc.sp());
        EXPECT(0x4d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0202
        gbc.setState(0x4083, 0x69e7, 0xc960, 0xe97c, 0x8da3, 0x5a9d, 0x0, 0x0);
        gbc.writeMem(0x4083, { 0xb7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x69e7, gbc.sp());
        EXPECT(0x4084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0203
        gbc.setState(0x8a46, 0x7edd, 0x3260, 0xe3e7, 0x7bb0, 0x5c18, 0x0, 0x0);
        gbc.writeMem(0x8a46, { 0xb7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7edd, gbc.sp());
        EXPECT(0x8a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8a46));
        // B7 0204
        gbc.setState(0x2138, 0xb39b, 0xce30, 0xd167, 0xcd33, 0xa181, 0x1, 0x1);
        gbc.writeMem(0x2138, { 0xb7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb39b, gbc.sp());
        EXPECT(0x2139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0205
        gbc.setState(0x5e53, 0x68e4, 0x6b90, 0xfbed, 0xf70a, 0xeef8, 0x0, 0x1);
        gbc.writeMem(0x5e53, { 0xb7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x68e4, gbc.sp());
        EXPECT(0x5e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0206
        gbc.setState(0xbb5b, 0x71e1, 0x9910, 0x767e, 0xe72d, 0x7c69, 0x0, 0x1);
        gbc.writeMem(0xbb5b, { 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x71e1, gbc.sp());
        EXPECT(0xbb5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbb5b));
        // B7 0207
        gbc.setState(0xb332, 0x4685, 0x8d60, 0xfc86, 0x7aa0, 0x1517, 0x0, 0x0);
        gbc.writeMem(0xb332, { 0xb7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4685, gbc.sp());
        EXPECT(0xb333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb332));
        // B7 0208
        gbc.setState(0x3f2d, 0x16ee, 0xe380, 0xcaef, 0x929c, 0xf481, 0x1, 0x0);
        gbc.writeMem(0x3f2d, { 0xb7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x16ee, gbc.sp());
        EXPECT(0x3f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0209
        gbc.setState(0x3f1c, 0xc417, 0x5710, 0xdacc, 0xa21a, 0x43ac, 0x1, 0x0);
        gbc.writeMem(0x3f1c, { 0xb7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc417, gbc.sp());
        EXPECT(0x3f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 020A
        gbc.setState(0xa298, 0x204f, 0x6400, 0xa34e, 0x2718, 0x2206, 0x1, 0x1);
        gbc.writeMem(0xa298, { 0xb7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x204f, gbc.sp());
        EXPECT(0xa299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa298));
        // B7 020B
        gbc.setState(0x40dd, 0x289d, 0xea80, 0xeb5a, 0x37f2, 0x50d3, 0x1, 0x0);
        gbc.writeMem(0x40dd, { 0xb7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x289d, gbc.sp());
        EXPECT(0x40de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 020D
        gbc.setState(0x98aa, 0x8a3, 0x6bd0, 0x7f83, 0xfa36, 0x1522, 0x1, 0x1);
        gbc.writeMem(0x98aa, { 0xb7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8a3, gbc.sp());
        EXPECT(0x98ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x98aa));
        // B7 020F
        gbc.setState(0x3696, 0x8873, 0x51e0, 0x6e84, 0x1d32, 0xcc5d, 0x0, 0x1);
        gbc.writeMem(0x3696, { 0xb7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8873, gbc.sp());
        EXPECT(0x3697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0210
        gbc.setState(0xc23d, 0x63dd, 0xb320, 0x36d5, 0xd959, 0x4a2e, 0x1, 0x1);
        gbc.writeMem(0xc23d, { 0xb7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x63dd, gbc.sp());
        EXPECT(0xc23e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc23d));
        // B7 0211
        gbc.setState(0x9aa7, 0x363c, 0xd310, 0xd659, 0x17d6, 0xb622, 0x0, 0x1);
        gbc.writeMem(0x9aa7, { 0xb7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x363c, gbc.sp());
        EXPECT(0x9aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9aa7));
        // B7 0212
        gbc.setState(0x34bf, 0x28c2, 0x9ef0, 0xa22, 0xcffc, 0xb8c8, 0x1, 0x0);
        gbc.writeMem(0x34bf, { 0xb7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x28c2, gbc.sp());
        EXPECT(0x34c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0213
        gbc.setState(0x4d03, 0xd346, 0xa60, 0x74c9, 0xc417, 0xdebb, 0x0, 0x0);
        gbc.writeMem(0x4d03, { 0xb7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd346, gbc.sp());
        EXPECT(0x4d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0214
        gbc.setState(0x6347, 0x2ff, 0x8190, 0x9eb1, 0x1cb, 0x1d0d, 0x1, 0x0);
        gbc.writeMem(0x6347, { 0xb7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2ff, gbc.sp());
        EXPECT(0x6348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0215
        gbc.setState(0xcd9b, 0xac37, 0x5d30, 0x6349, 0xa2e1, 0xf112, 0x1, 0x0);
        gbc.writeMem(0xcd9b, { 0xb7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xac37, gbc.sp());
        EXPECT(0xcd9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcd9b));
        // B7 0216
        gbc.setState(0x73f3, 0x27d0, 0x57c0, 0xa3a4, 0xccb5, 0xd99b, 0x1, 0x0);
        gbc.writeMem(0x73f3, { 0xb7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x27d0, gbc.sp());
        EXPECT(0x73f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0217
        gbc.setState(0xc5, 0x1121, 0xfa40, 0x758, 0x575b, 0xbaee, 0x1, 0x1);
        gbc.writeMem(0xc5, { 0xb7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1121, gbc.sp());
        EXPECT(0xc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0218
        gbc.setState(0x54c4, 0xc6ed, 0x8130, 0x6555, 0xb58c, 0x9cd8, 0x1, 0x1);
        gbc.writeMem(0x54c4, { 0xb7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc6ed, gbc.sp());
        EXPECT(0x54c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0219
        gbc.setState(0x6978, 0x9d9c, 0xcd10, 0xfa26, 0x637e, 0xa44d, 0x0, 0x0);
        gbc.writeMem(0x6978, { 0xb7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9d9c, gbc.sp());
        EXPECT(0x6979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 021A
        gbc.setState(0x935, 0x9476, 0x9cb0, 0xa2d2, 0xb2d1, 0x5018, 0x1, 0x0);
        gbc.writeMem(0x935, { 0xb7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9476, gbc.sp());
        EXPECT(0x936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 021B
        gbc.setState(0xc58, 0xc4ab, 0x63f0, 0x9836, 0xd, 0xc1da, 0x0, 0x0);
        gbc.writeMem(0xc58, { 0xb7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc4ab, gbc.sp());
        EXPECT(0xc59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 021C
        gbc.setState(0x9210, 0x8dc6, 0xc5f0, 0x9560, 0x4fdd, 0xa8d4, 0x1, 0x0);
        gbc.writeMem(0x9210, { 0xb7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8dc6, gbc.sp());
        EXPECT(0x9211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9210));
        // B7 021D
        gbc.setState(0xa036, 0x8ac5, 0x1050, 0x77db, 0x6aa1, 0xc9aa, 0x0, 0x1);
        gbc.writeMem(0xa036, { 0xb7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8ac5, gbc.sp());
        EXPECT(0xa037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa036));
        // B7 021E
        gbc.setState(0xa1e8, 0xa47b, 0xacf0, 0xabbb, 0x1a66, 0x2e75, 0x0, 0x0);
        gbc.writeMem(0xa1e8, { 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa47b, gbc.sp());
        EXPECT(0xa1e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa1e8));
        // B7 021F
        gbc.setState(0xa530, 0x6624, 0xf950, 0xa3f8, 0x7d28, 0x91f3, 0x1, 0x1);
        gbc.writeMem(0xa530, { 0xb7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6624, gbc.sp());
        EXPECT(0xa531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa530));
        // B7 0220
        gbc.setState(0xecf8, 0xe6e3, 0x91b0, 0xdc3e, 0x13a5, 0x81, 0x0, 0x0);
        gbc.writeMem(0xecf8, { 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe6e3, gbc.sp());
        EXPECT(0xecf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xecf8));
        // B7 0222
        gbc.setState(0xcbc, 0xd810, 0x4db0, 0x78dd, 0x9269, 0x32a6, 0x0, 0x1);
        gbc.writeMem(0xcbc, { 0xb7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd810, gbc.sp());
        EXPECT(0xcbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0223
        gbc.setState(0xa466, 0xfe94, 0xd210, 0x99d8, 0xe81f, 0xf53e, 0x0, 0x0);
        gbc.writeMem(0xa466, { 0xb7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfe94, gbc.sp());
        EXPECT(0xa467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa466));
        // B7 0224
        gbc.setState(0xc5f3, 0x501c, 0x3ee0, 0x4b06, 0x98d3, 0x24c2, 0x0, 0x0);
        gbc.writeMem(0xc5f3, { 0xb7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x501c, gbc.sp());
        EXPECT(0xc5f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc5f3));
        // B7 0225
        gbc.setState(0x1f71, 0x6eae, 0xb080, 0x2ecf, 0x71af, 0xc5f, 0x1, 0x1);
        gbc.writeMem(0x1f71, { 0xb7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6eae, gbc.sp());
        EXPECT(0x1f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0226
        gbc.setState(0x831a, 0x79, 0xa930, 0xd449, 0x2cb, 0x4371, 0x1, 0x0);
        gbc.writeMem(0x831a, { 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x79, gbc.sp());
        EXPECT(0x831b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x831a));
        // B7 0227
        gbc.setState(0xa4b7, 0xb17b, 0xf9c0, 0x4c62, 0x1149, 0xa266, 0x0, 0x0);
        gbc.writeMem(0xa4b7, { 0xb7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb17b, gbc.sp());
        EXPECT(0xa4b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa4b7));
        // B7 0228
        gbc.setState(0xe641, 0x73ab, 0x7d00, 0x78af, 0x2999, 0x88b7, 0x1, 0x0);
        gbc.writeMem(0xe641, { 0xb7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x73ab, gbc.sp());
        EXPECT(0xe642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe641));
        // B7 0229
        gbc.setState(0x99e4, 0x8c92, 0x83c0, 0x5d02, 0x284a, 0x3a89, 0x0, 0x0);
        gbc.writeMem(0x99e4, { 0xb7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8c92, gbc.sp());
        EXPECT(0x99e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x99e4));
        // B7 022A
        gbc.setState(0x5569, 0x44fb, 0x7040, 0x61ea, 0xfccf, 0x7234, 0x0, 0x1);
        gbc.writeMem(0x5569, { 0xb7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x44fb, gbc.sp());
        EXPECT(0x556a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 022B
        gbc.setState(0x41aa, 0x2a48, 0x6d20, 0x9d41, 0xf926, 0xe2c9, 0x0, 0x0);
        gbc.writeMem(0x41aa, { 0xb7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2a48, gbc.sp());
        EXPECT(0x41ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 022C
        gbc.setState(0x6b46, 0xbce6, 0xf540, 0x905b, 0xf5ed, 0x2593, 0x1, 0x0);
        gbc.writeMem(0x6b46, { 0xb7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbce6, gbc.sp());
        EXPECT(0x6b47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 022E
        gbc.setState(0x2110, 0x60f1, 0x8990, 0x9c68, 0xa4d8, 0xc154, 0x1, 0x1);
        gbc.writeMem(0x2110, { 0xb7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x60f1, gbc.sp());
        EXPECT(0x2111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 022F
        gbc.setState(0x1ac4, 0x61b, 0x9f20, 0xad35, 0x186b, 0x663a, 0x0, 0x1);
        gbc.writeMem(0x1ac4, { 0xb7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x61b, gbc.sp());
        EXPECT(0x1ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0231
        gbc.setState(0x47a, 0x3375, 0x95d0, 0xcda, 0xd5fc, 0x7f7b, 0x0, 0x0);
        gbc.writeMem(0x47a, { 0xb7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3375, gbc.sp());
        EXPECT(0x47b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0232
        gbc.setState(0xa29a, 0x45e0, 0x5340, 0x1bce, 0x31b8, 0x535f, 0x1, 0x1);
        gbc.writeMem(0xa29a, { 0xb7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x45e0, gbc.sp());
        EXPECT(0xa29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa29a));
        // B7 0233
        gbc.setState(0x5bfc, 0xeab, 0xccd0, 0x4013, 0x9435, 0x76a6, 0x1, 0x0);
        gbc.writeMem(0x5bfc, { 0xb7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xeab, gbc.sp());
        EXPECT(0x5bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0234
        gbc.setState(0xeaff, 0x6512, 0xb7c0, 0x1266, 0xf126, 0xdb35, 0x0, 0x1);
        gbc.writeMem(0xeaff, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6512, gbc.sp());
        EXPECT(0xeb00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xeaff));
        // B7 0235
        gbc.setState(0x449d, 0x80, 0x6ce0, 0x469b, 0xa5b, 0xa59a, 0x1, 0x0);
        gbc.writeMem(0x449d, { 0xb7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x80, gbc.sp());
        EXPECT(0x449e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0238
        gbc.setState(0x7d91, 0x79c8, 0x1230, 0xfd07, 0xbc65, 0x3cf2, 0x0, 0x0);
        gbc.writeMem(0x7d91, { 0xb7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x79c8, gbc.sp());
        EXPECT(0x7d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0239
        gbc.setState(0x485a, 0xa50f, 0x1c0, 0xb4fd, 0xd6d9, 0xc4a4, 0x0, 0x1);
        gbc.writeMem(0x485a, { 0xb7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa50f, gbc.sp());
        EXPECT(0x485b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 023A
        gbc.setState(0x8ab3, 0xa28, 0xe020, 0xea9e, 0x1630, 0x2d4c, 0x1, 0x0);
        gbc.writeMem(0x8ab3, { 0xb7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa28, gbc.sp());
        EXPECT(0x8ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8ab3));
        // B7 023B
        gbc.setState(0x65b4, 0x8118, 0xe090, 0xab49, 0xf224, 0xfb25, 0x1, 0x0);
        gbc.writeMem(0x65b4, { 0xb7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8118, gbc.sp());
        EXPECT(0x65b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 023C
        gbc.setState(0xe9b5, 0xffc1, 0x9a90, 0xdd7d, 0xac28, 0x5aa8, 0x1, 0x0);
        gbc.writeMem(0xe9b5, { 0xb7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xffc1, gbc.sp());
        EXPECT(0xe9b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe9b5));
        // B7 023D
        gbc.setState(0xb06e, 0xbc1c, 0x2a60, 0x406a, 0x3fc7, 0x7026, 0x1, 0x0);
        gbc.writeMem(0xb06e, { 0xb7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbc1c, gbc.sp());
        EXPECT(0xb06f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb06e));
        // B7 023E
        gbc.setState(0x680, 0x8d8c, 0x2920, 0xe91c, 0x6301, 0xf050, 0x1, 0x1);
        gbc.writeMem(0x680, { 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8d8c, gbc.sp());
        EXPECT(0x681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 023F
        gbc.setState(0x666c, 0x6cb9, 0x4eb0, 0x6fbe, 0x7c69, 0xdcc9, 0x0, 0x0);
        gbc.writeMem(0x666c, { 0xb7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6cb9, gbc.sp());
        EXPECT(0x666d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0240
        gbc.setState(0x7ab7, 0x2c7e, 0x7f50, 0xcd9a, 0x962c, 0x561a, 0x0, 0x1);
        gbc.writeMem(0x7ab7, { 0xb7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2c7e, gbc.sp());
        EXPECT(0x7ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0241
        gbc.setState(0x6689, 0x73fb, 0x6e0, 0xae2b, 0x791f, 0x753c, 0x1, 0x1);
        gbc.writeMem(0x6689, { 0xb7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x73fb, gbc.sp());
        EXPECT(0x668a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0242
        gbc.setState(0xbe59, 0x6e6, 0xdf40, 0xfb40, 0x2794, 0x30e5, 0x0, 0x0);
        gbc.writeMem(0xbe59, { 0xb7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6e6, gbc.sp());
        EXPECT(0xbe5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbe59));
        // B7 0243
        gbc.setState(0x9fcc, 0x4073, 0xa610, 0x4325, 0x3db6, 0x4b62, 0x1, 0x0);
        gbc.writeMem(0x9fcc, { 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4073, gbc.sp());
        EXPECT(0x9fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9fcc));
        // B7 0244
        gbc.setState(0x5b62, 0x417b, 0x1750, 0x15bd, 0x7c07, 0x98d9, 0x1, 0x1);
        gbc.writeMem(0x5b62, { 0xb7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x417b, gbc.sp());
        EXPECT(0x5b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0246
        gbc.setState(0x9a08, 0x891e, 0xc5b0, 0xe2b0, 0xea34, 0x296a, 0x1, 0x0);
        gbc.writeMem(0x9a08, { 0xb7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x891e, gbc.sp());
        EXPECT(0x9a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9a08));
        // B7 0247
        gbc.setState(0x954c, 0xb6ef, 0x1fd0, 0xafaf, 0x375b, 0xb051, 0x0, 0x1);
        gbc.writeMem(0x954c, { 0xb7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb6ef, gbc.sp());
        EXPECT(0x954d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x954c));
        // B7 0248
        gbc.setState(0x21ea, 0xfc6a, 0xb7d0, 0x71e6, 0xeab0, 0xe4d3, 0x0, 0x0);
        gbc.writeMem(0x21ea, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfc6a, gbc.sp());
        EXPECT(0x21eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0249
        gbc.setState(0x75f, 0x7a11, 0xe960, 0x1206, 0x2d37, 0x6ddd, 0x1, 0x1);
        gbc.writeMem(0x75f, { 0xb7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7a11, gbc.sp());
        EXPECT(0x760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 024A
        gbc.setState(0x6227, 0x6d28, 0xf670, 0xc86, 0x92f7, 0x2009, 0x0, 0x1);
        gbc.writeMem(0x6227, { 0xb7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6d28, gbc.sp());
        EXPECT(0x6228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 024B
        gbc.setState(0xf60, 0x3db, 0x9cb0, 0x9095, 0xf70f, 0xff4f, 0x1, 0x1);
        gbc.writeMem(0xf60, { 0xb7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3db, gbc.sp());
        EXPECT(0xf61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 024C
        gbc.setState(0x942d, 0x987a, 0x2840, 0x4503, 0xf733, 0xdfd6, 0x1, 0x0);
        gbc.writeMem(0x942d, { 0xb7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x987a, gbc.sp());
        EXPECT(0x942e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x942d));
        // B7 024D
        gbc.setState(0xe5bc, 0xf5e9, 0xf6b0, 0x637e, 0xdf17, 0x405c, 0x1, 0x1);
        gbc.writeMem(0xe5bc, { 0xb7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf5e9, gbc.sp());
        EXPECT(0xe5bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe5bc));
        // B7 024E
        gbc.setState(0x83ec, 0xdba6, 0x2010, 0xa986, 0x35cb, 0x33a9, 0x1, 0x0);
        gbc.writeMem(0x83ec, { 0xb7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdba6, gbc.sp());
        EXPECT(0x83ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x83ec));
        // B7 024F
        gbc.setState(0x1832, 0x44f1, 0xfef0, 0xbb1e, 0x7ac1, 0xbe75, 0x0, 0x1);
        gbc.writeMem(0x1832, { 0xb7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x44f1, gbc.sp());
        EXPECT(0x1833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0250
        gbc.setState(0x5832, 0x25e3, 0x4580, 0xd7f2, 0x8028, 0x22bf, 0x1, 0x1);
        gbc.writeMem(0x5832, { 0xb7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x25e3, gbc.sp());
        EXPECT(0x5833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0251
        gbc.setState(0x3618, 0xf386, 0x6870, 0x6714, 0x9b38, 0xdf8e, 0x1, 0x1);
        gbc.writeMem(0x3618, { 0xb7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf386, gbc.sp());
        EXPECT(0x3619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0252
        gbc.setState(0xa865, 0x606b, 0x3730, 0x96d4, 0xe421, 0x5a71, 0x0, 0x1);
        gbc.writeMem(0xa865, { 0xb7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x606b, gbc.sp());
        EXPECT(0xa866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa865));
        // B7 0253
        gbc.setState(0x76dc, 0xf1fb, 0x25a0, 0x7cf5, 0x3b28, 0x3e71, 0x1, 0x1);
        gbc.writeMem(0x76dc, { 0xb7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf1fb, gbc.sp());
        EXPECT(0x76dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0254
        gbc.setState(0xa2da, 0x12e4, 0x31c0, 0x7440, 0x7b09, 0x6e8e, 0x0, 0x1);
        gbc.writeMem(0xa2da, { 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x12e4, gbc.sp());
        EXPECT(0xa2db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa2da));
        // B7 0255
        gbc.setState(0xc18, 0xfb1d, 0xfc10, 0xf2fa, 0x3cfe, 0xafef, 0x0, 0x1);
        gbc.writeMem(0xc18, { 0xb7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfb1d, gbc.sp());
        EXPECT(0xc19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0256
        gbc.setState(0xd909, 0x26e8, 0x2d10, 0xa181, 0xced8, 0xeb11, 0x0, 0x0);
        gbc.writeMem(0xd909, { 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x26e8, gbc.sp());
        EXPECT(0xd90a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd909));
        // B7 0257
        gbc.setState(0x312d, 0xd39c, 0xcb40, 0x997d, 0x1781, 0x24d3, 0x0, 0x1);
        gbc.writeMem(0x312d, { 0xb7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd39c, gbc.sp());
        EXPECT(0x312e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0258
        gbc.setState(0xd5b5, 0x5b2f, 0xb350, 0x6263, 0x88, 0x19b, 0x1, 0x1);
        gbc.writeMem(0xd5b5, { 0xb7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5b2f, gbc.sp());
        EXPECT(0xd5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd5b5));
        // B7 0259
        gbc.setState(0xa3c2, 0x3498, 0x7b00, 0xc985, 0x51c5, 0xcdb3, 0x0, 0x1);
        gbc.writeMem(0xa3c2, { 0xb7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3498, gbc.sp());
        EXPECT(0xa3c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa3c2));
        // B7 025A
        gbc.setState(0x1761, 0x9e8, 0xde00, 0xb777, 0x80dc, 0x78ed, 0x0, 0x1);
        gbc.writeMem(0x1761, { 0xb7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9e8, gbc.sp());
        EXPECT(0x1762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 025B
        gbc.setState(0x6ba1, 0xc7e6, 0x7c70, 0x1339, 0x54c, 0x932d, 0x0, 0x1);
        gbc.writeMem(0x6ba1, { 0xb7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc7e6, gbc.sp());
        EXPECT(0x6ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 025C
        gbc.setState(0x732, 0x5aed, 0x41a0, 0x317f, 0xa9ba, 0xe131, 0x1, 0x0);
        gbc.writeMem(0x732, { 0xb7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5aed, gbc.sp());
        EXPECT(0x733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 025D
        gbc.setState(0x55d7, 0xc0cb, 0x4300, 0x64dd, 0xee15, 0x15e0, 0x0, 0x0);
        gbc.writeMem(0x55d7, { 0xb7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc0cb, gbc.sp());
        EXPECT(0x55d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 025E
        gbc.setState(0xbf94, 0xc93d, 0xc0c0, 0x8d57, 0xc4cc, 0x54dd, 0x0, 0x0);
        gbc.writeMem(0xbf94, { 0xb7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc93d, gbc.sp());
        EXPECT(0xbf95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbf94));
        // B7 025F
        gbc.setState(0x2d10, 0xfe37, 0x30e0, 0x4f2e, 0x2d22, 0xd9f2, 0x0, 0x0);
        gbc.writeMem(0x2d10, { 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfe37, gbc.sp());
        EXPECT(0x2d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0260
        gbc.setState(0x8528, 0xda6c, 0x2e00, 0xfa1f, 0x9691, 0x5f18, 0x1, 0x1);
        gbc.writeMem(0x8528, { 0xb7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xda6c, gbc.sp());
        EXPECT(0x8529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8528));
        // B7 0261
        gbc.setState(0xaf57, 0x78eb, 0xa300, 0x3777, 0x184f, 0x5034, 0x1, 0x0);
        gbc.writeMem(0xaf57, { 0xb7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x78eb, gbc.sp());
        EXPECT(0xaf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xaf57));
        // B7 0262
        gbc.setState(0x2e5a, 0xb003, 0x8130, 0x577, 0xd200, 0x3c23, 0x0, 0x0);
        gbc.writeMem(0x2e5a, { 0xb7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb003, gbc.sp());
        EXPECT(0x2e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0263
        gbc.setState(0xe560, 0xc0e5, 0x5be0, 0x499f, 0xbe5b, 0x8888, 0x1, 0x0);
        gbc.writeMem(0xe560, { 0xb7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc0e5, gbc.sp());
        EXPECT(0xe561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe560));
        // B7 0264
        gbc.setState(0x145b, 0x2eb8, 0x9dd0, 0xbb65, 0x90e7, 0xf0fa, 0x1, 0x1);
        gbc.writeMem(0x145b, { 0xb7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2eb8, gbc.sp());
        EXPECT(0x145c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0265
        gbc.setState(0xca78, 0x1e22, 0x25d0, 0xce0c, 0x212c, 0x2dc3, 0x1, 0x1);
        gbc.writeMem(0xca78, { 0xb7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1e22, gbc.sp());
        EXPECT(0xca79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xca78));
        // B7 0266
        gbc.setState(0xaf78, 0xd88f, 0xde70, 0xfc17, 0x3bc0, 0x6720, 0x1, 0x1);
        gbc.writeMem(0xaf78, { 0xb7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd88f, gbc.sp());
        EXPECT(0xaf79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xaf78));
        // B7 0267
        gbc.setState(0xba95, 0x67e6, 0x5060, 0x996c, 0x17b7, 0xf6f5, 0x1, 0x1);
        gbc.writeMem(0xba95, { 0xb7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x67e6, gbc.sp());
        EXPECT(0xba96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xba95));
        // B7 0268
        gbc.setState(0x4e75, 0xd8ce, 0x93b0, 0x1eb0, 0x33d6, 0x441a, 0x0, 0x0);
        gbc.writeMem(0x4e75, { 0xb7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd8ce, gbc.sp());
        EXPECT(0x4e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0269
        gbc.setState(0x5b63, 0xaecd, 0x1730, 0xcb4a, 0x8c8, 0xb8e2, 0x0, 0x0);
        gbc.writeMem(0x5b63, { 0xb7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xaecd, gbc.sp());
        EXPECT(0x5b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 026A
        gbc.setState(0x6f3d, 0x4692, 0xac20, 0x5a2b, 0x49, 0x4532, 0x0, 0x1);
        gbc.writeMem(0x6f3d, { 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4692, gbc.sp());
        EXPECT(0x6f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 026B
        gbc.setState(0xaf71, 0xb721, 0x7060, 0xc768, 0xe524, 0x42aa, 0x1, 0x0);
        gbc.writeMem(0xaf71, { 0xb7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb721, gbc.sp());
        EXPECT(0xaf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xaf71));
        // B7 026C
        gbc.setState(0x42a3, 0xbf11, 0xf810, 0x89e1, 0xd6f5, 0x4054, 0x1, 0x0);
        gbc.writeMem(0x42a3, { 0xb7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbf11, gbc.sp());
        EXPECT(0x42a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 026D
        gbc.setState(0x27af, 0xf4ab, 0x2f90, 0xea34, 0x90be, 0x7f14, 0x1, 0x1);
        gbc.writeMem(0x27af, { 0xb7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf4ab, gbc.sp());
        EXPECT(0x27b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 026E
        gbc.setState(0xb43a, 0x2762, 0x9850, 0xc42a, 0xe613, 0x536d, 0x1, 0x0);
        gbc.writeMem(0xb43a, { 0xb7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2762, gbc.sp());
        EXPECT(0xb43b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb43a));
        // B7 026F
        gbc.setState(0x4768, 0x6f94, 0x8110, 0xa125, 0x714, 0x29b1, 0x0, 0x0);
        gbc.writeMem(0x4768, { 0xb7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6f94, gbc.sp());
        EXPECT(0x4769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0270
        gbc.setState(0xe328, 0x4591, 0x6b50, 0xedae, 0x769f, 0x6c58, 0x0, 0x1);
        gbc.writeMem(0xe328, { 0xb7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4591, gbc.sp());
        EXPECT(0xe329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe328));
        // B7 0271
        gbc.setState(0x9e61, 0xaa45, 0x2f30, 0x98a2, 0xf7b6, 0x3443, 0x0, 0x0);
        gbc.writeMem(0x9e61, { 0xb7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xaa45, gbc.sp());
        EXPECT(0x9e62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9e61));
        // B7 0272
        gbc.setState(0x1407, 0x637c, 0xcd80, 0x7d5, 0x8777, 0x1b5, 0x0, 0x0);
        gbc.writeMem(0x1407, { 0xb7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x637c, gbc.sp());
        EXPECT(0x1408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0273
        gbc.setState(0xa404, 0x705b, 0x32f0, 0x30f9, 0x6021, 0x3f99, 0x1, 0x1);
        gbc.writeMem(0xa404, { 0xb7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x705b, gbc.sp());
        EXPECT(0xa405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa404));
        // B7 0274
        gbc.setState(0x21e2, 0x432c, 0x7ce0, 0xc7e4, 0x334e, 0xb79b, 0x1, 0x0);
        gbc.writeMem(0x21e2, { 0xb7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x432c, gbc.sp());
        EXPECT(0x21e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0275
        gbc.setState(0xc734, 0x76b4, 0x6d70, 0xb6b6, 0xbc31, 0x645e, 0x0, 0x0);
        gbc.writeMem(0xc734, { 0xb7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x76b4, gbc.sp());
        EXPECT(0xc735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc734));
        // B7 0276
        gbc.setState(0x2bbd, 0x3dab, 0x2a70, 0x8606, 0xd71a, 0xa6a0, 0x1, 0x0);
        gbc.writeMem(0x2bbd, { 0xb7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3dab, gbc.sp());
        EXPECT(0x2bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0277
        gbc.setState(0xa507, 0x4c94, 0xd1e0, 0xc4fa, 0xc9eb, 0x2886, 0x0, 0x1);
        gbc.writeMem(0xa507, { 0xb7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4c94, gbc.sp());
        EXPECT(0xa508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa507));
        // B7 0278
        gbc.setState(0xdce4, 0xa008, 0x3080, 0xe59b, 0xba0a, 0x1e06, 0x1, 0x1);
        gbc.writeMem(0xdce4, { 0xb7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa008, gbc.sp());
        EXPECT(0xdce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdce4));
        // B7 0279
        gbc.setState(0xdf9, 0x3c77, 0xba10, 0x1414, 0xa8d5, 0xc522, 0x0, 0x0);
        gbc.writeMem(0xdf9, { 0xb7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3c77, gbc.sp());
        EXPECT(0xdfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 027A
        gbc.setState(0xbea8, 0x39cb, 0x590, 0xbabe, 0x9a55, 0x3941, 0x1, 0x1);
        gbc.writeMem(0xbea8, { 0xb7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x39cb, gbc.sp());
        EXPECT(0xbea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbea8));
        // B7 027B
        gbc.setState(0xb827, 0x51de, 0x4570, 0x1a36, 0xb489, 0x8117, 0x1, 0x0);
        gbc.writeMem(0xb827, { 0xb7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x51de, gbc.sp());
        EXPECT(0xb828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb827));
        // B7 027C
        gbc.setState(0xa335, 0x1cd0, 0x14c0, 0xfbfa, 0x7f3d, 0x44d9, 0x1, 0x0);
        gbc.writeMem(0xa335, { 0xb7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1cd0, gbc.sp());
        EXPECT(0xa336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa335));
        // B7 027D
        gbc.setState(0x5a83, 0xacd5, 0x4520, 0x7e87, 0x484a, 0xe868, 0x1, 0x0);
        gbc.writeMem(0x5a83, { 0xb7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xacd5, gbc.sp());
        EXPECT(0x5a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 027E
        gbc.setState(0x44e, 0x262f, 0x1bb0, 0x36e3, 0x9863, 0xbf87, 0x0, 0x0);
        gbc.writeMem(0x44e, { 0xb7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x262f, gbc.sp());
        EXPECT(0x44f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 027F
        gbc.setState(0x7b98, 0xf4e, 0x4060, 0xb43c, 0x26b, 0x870d, 0x1, 0x0);
        gbc.writeMem(0x7b98, { 0xb7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf4e, gbc.sp());
        EXPECT(0x7b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0280
        gbc.setState(0x3f31, 0x9302, 0xadf0, 0x78f7, 0xf156, 0xf8fd, 0x0, 0x1);
        gbc.writeMem(0x3f31, { 0xb7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9302, gbc.sp());
        EXPECT(0x3f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0281
        gbc.setState(0x16b5, 0x4aa1, 0x2b70, 0x275f, 0xc9a0, 0x148b, 0x1, 0x0);
        gbc.writeMem(0x16b5, { 0xb7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4aa1, gbc.sp());
        EXPECT(0x16b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0282
        gbc.setState(0x3f91, 0x5337, 0x8e60, 0x5fce, 0x4144, 0xf87f, 0x1, 0x0);
        gbc.writeMem(0x3f91, { 0xb7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5337, gbc.sp());
        EXPECT(0x3f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0283
        gbc.setState(0x7988, 0x1a8a, 0x61f0, 0xb259, 0x7144, 0xc6d3, 0x1, 0x0);
        gbc.writeMem(0x7988, { 0xb7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1a8a, gbc.sp());
        EXPECT(0x7989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0284
        gbc.setState(0x12db, 0xe890, 0xee10, 0x312a, 0xf8c6, 0x6e1c, 0x1, 0x1);
        gbc.writeMem(0x12db, { 0xb7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe890, gbc.sp());
        EXPECT(0x12dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0285
        gbc.setState(0xdafc, 0xe7f3, 0x47e0, 0x4cd4, 0xeb1c, 0x1ce9, 0x0, 0x1);
        gbc.writeMem(0xdafc, { 0xb7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe7f3, gbc.sp());
        EXPECT(0xdafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdafc));
        // B7 0286
        gbc.setState(0x24e8, 0xdbde, 0x4a50, 0x8ad8, 0x15c1, 0x7813, 0x0, 0x1);
        gbc.writeMem(0x24e8, { 0xb7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdbde, gbc.sp());
        EXPECT(0x24e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0287
        gbc.setState(0x2de3, 0x84ce, 0xe740, 0x2aae, 0x7355, 0x8bb4, 0x0, 0x1);
        gbc.writeMem(0x2de3, { 0xb7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x84ce, gbc.sp());
        EXPECT(0x2de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0288
        gbc.setState(0xe568, 0x3297, 0x42d0, 0x6ee, 0xae7b, 0x11f6, 0x0, 0x0);
        gbc.writeMem(0xe568, { 0xb7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3297, gbc.sp());
        EXPECT(0xe569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe568));
        // B7 0289
        gbc.setState(0x845a, 0xea0d, 0x510, 0x70e, 0x3fb3, 0x11b0, 0x1, 0x0);
        gbc.writeMem(0x845a, { 0xb7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xea0d, gbc.sp());
        EXPECT(0x845b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x845a));
        // B7 028A
        gbc.setState(0x3308, 0xa6e0, 0x1d50, 0xb31b, 0x5a86, 0x8bf3, 0x0, 0x0);
        gbc.writeMem(0x3308, { 0xb7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa6e0, gbc.sp());
        EXPECT(0x3309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 028B
        gbc.setState(0x11b3, 0xf0c, 0x4d30, 0x6b26, 0x1dfb, 0xbc5a, 0x0, 0x1);
        gbc.writeMem(0x11b3, { 0xb7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf0c, gbc.sp());
        EXPECT(0x11b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 028C
        gbc.setState(0x79e5, 0xa33, 0xa610, 0x5ac3, 0x43f9, 0x8695, 0x1, 0x0);
        gbc.writeMem(0x79e5, { 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa33, gbc.sp());
        EXPECT(0x79e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 028D
        gbc.setState(0xef4a, 0x30e1, 0x1380, 0x1e89, 0xecb3, 0x8048, 0x1, 0x1);
        gbc.writeMem(0xef4a, { 0xb7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x30e1, gbc.sp());
        EXPECT(0xef4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xef4a));
        // B7 028E
        gbc.setState(0x3f82, 0x7e5e, 0xf8d0, 0x3182, 0x5466, 0x16a3, 0x0, 0x1);
        gbc.writeMem(0x3f82, { 0xb7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7e5e, gbc.sp());
        EXPECT(0x3f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 028F
        gbc.setState(0x2969, 0x5ed, 0xba50, 0xc500, 0xd1ba, 0x284, 0x1, 0x0);
        gbc.writeMem(0x2969, { 0xb7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5ed, gbc.sp());
        EXPECT(0x296a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0290
        gbc.setState(0xa705, 0x8f25, 0x8570, 0xfb98, 0xa32c, 0x6d2d, 0x1, 0x0);
        gbc.writeMem(0xa705, { 0xb7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8f25, gbc.sp());
        EXPECT(0xa706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa705));
        // B7 0291
        gbc.setState(0xc897, 0x33b2, 0x7d80, 0x1d31, 0xbaed, 0x2cca, 0x0, 0x1);
        gbc.writeMem(0xc897, { 0xb7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x33b2, gbc.sp());
        EXPECT(0xc898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc897));
        // B7 0292
        gbc.setState(0x12c7, 0x3835, 0x2a10, 0x44a0, 0x416c, 0x649a, 0x1, 0x0);
        gbc.writeMem(0x12c7, { 0xb7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3835, gbc.sp());
        EXPECT(0x12c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0293
        gbc.setState(0x2b6b, 0x4652, 0x6880, 0xe858, 0x4a3, 0xdcf0, 0x0, 0x0);
        gbc.writeMem(0x2b6b, { 0xb7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4652, gbc.sp());
        EXPECT(0x2b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0294
        gbc.setState(0xa484, 0xb20, 0x5240, 0x34a9, 0x94fd, 0x86a, 0x0, 0x1);
        gbc.writeMem(0xa484, { 0xb7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb20, gbc.sp());
        EXPECT(0xa485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa484));
        // B7 0295
        gbc.setState(0x81f, 0x423d, 0xdc00, 0x25bd, 0x3e21, 0xac99, 0x0, 0x0);
        gbc.writeMem(0x81f, { 0xb7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x423d, gbc.sp());
        EXPECT(0x820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0296
        gbc.setState(0x2cc2, 0x9b77, 0xc180, 0x9bc4, 0x3889, 0xe4aa, 0x1, 0x1);
        gbc.writeMem(0x2cc2, { 0xb7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9b77, gbc.sp());
        EXPECT(0x2cc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0297
        gbc.setState(0x65e8, 0xe155, 0x2e80, 0x4377, 0xab0b, 0xf82b, 0x0, 0x1);
        gbc.writeMem(0x65e8, { 0xb7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe155, gbc.sp());
        EXPECT(0x65e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0298
        gbc.setState(0xcfb, 0x98a4, 0xc840, 0xc8e3, 0xe8ab, 0x2e15, 0x1, 0x1);
        gbc.writeMem(0xcfb, { 0xb7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x98a4, gbc.sp());
        EXPECT(0xcfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0299
        gbc.setState(0x99b7, 0xfc2a, 0xb450, 0xf425, 0xa842, 0x1630, 0x1, 0x0);
        gbc.writeMem(0x99b7, { 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfc2a, gbc.sp());
        EXPECT(0x99b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x99b7));
        // B7 029A
        gbc.setState(0x3b2c, 0x9457, 0x11e0, 0xd53e, 0xdab3, 0xa6aa, 0x0, 0x0);
        gbc.writeMem(0x3b2c, { 0xb7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9457, gbc.sp());
        EXPECT(0x3b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 029B
        gbc.setState(0xe331, 0xfa68, 0x1fe0, 0x46b4, 0x231, 0xbe8f, 0x0, 0x1);
        gbc.writeMem(0xe331, { 0xb7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfa68, gbc.sp());
        EXPECT(0xe332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe331));
        // B7 029C
        gbc.setState(0x1313, 0x4390, 0x7be0, 0xb6e0, 0xb1c4, 0x449, 0x0, 0x0);
        gbc.writeMem(0x1313, { 0xb7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4390, gbc.sp());
        EXPECT(0x1314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 029D
        gbc.setState(0x10fb, 0x1329, 0xb370, 0x3979, 0x5ea6, 0x8506, 0x1, 0x1);
        gbc.writeMem(0x10fb, { 0xb7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1329, gbc.sp());
        EXPECT(0x10fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 029E
        gbc.setState(0x6821, 0x3e9e, 0x1870, 0xe119, 0x63b7, 0x82fd, 0x1, 0x0);
        gbc.writeMem(0x6821, { 0xb7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3e9e, gbc.sp());
        EXPECT(0x6822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 029F
        gbc.setState(0xabd3, 0xd9d7, 0x76f0, 0xbae4, 0x15fc, 0x407d, 0x0, 0x1);
        gbc.writeMem(0xabd3, { 0xb7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd9d7, gbc.sp());
        EXPECT(0xabd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xabd3));
        // B7 02A1
        gbc.setState(0x55c3, 0xad83, 0x8490, 0x207a, 0x28d8, 0xbb0e, 0x0, 0x0);
        gbc.writeMem(0x55c3, { 0xb7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xad83, gbc.sp());
        EXPECT(0x55c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02A2
        gbc.setState(0x3ef9, 0x15d3, 0xdb70, 0x7b95, 0xf1f6, 0x3914, 0x0, 0x0);
        gbc.writeMem(0x3ef9, { 0xb7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x15d3, gbc.sp());
        EXPECT(0x3efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02A3
        gbc.setState(0xd408, 0x157a, 0xb840, 0xf5db, 0xeebe, 0x6eed, 0x1, 0x0);
        gbc.writeMem(0xd408, { 0xb7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x157a, gbc.sp());
        EXPECT(0xd409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd408));
        // B7 02A4
        gbc.setState(0xaf27, 0xca59, 0x5f80, 0x5d4d, 0x6b62, 0x2b8c, 0x1, 0x0);
        gbc.writeMem(0xaf27, { 0xb7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xca59, gbc.sp());
        EXPECT(0xaf28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xaf27));
        // B7 02A5
        gbc.setState(0x3cac, 0x3393, 0x600, 0x3760, 0x5d41, 0x21ef, 0x0, 0x0);
        gbc.writeMem(0x3cac, { 0xb7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3393, gbc.sp());
        EXPECT(0x3cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02A6
        gbc.setState(0x3a9a, 0xc213, 0x24a0, 0xf459, 0x59df, 0x4389, 0x0, 0x1);
        gbc.writeMem(0x3a9a, { 0xb7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc213, gbc.sp());
        EXPECT(0x3a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02A7
        gbc.setState(0xe265, 0x7435, 0xd380, 0x65c, 0x8bac, 0x631a, 0x0, 0x0);
        gbc.writeMem(0xe265, { 0xb7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7435, gbc.sp());
        EXPECT(0xe266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe265));
        // B7 02A8
        gbc.setState(0x34c7, 0xca9e, 0x28a0, 0x2c32, 0xf175, 0xb48e, 0x0, 0x0);
        gbc.writeMem(0x34c7, { 0xb7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xca9e, gbc.sp());
        EXPECT(0x34c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02A9
        gbc.setState(0x1d8b, 0x79be, 0x7480, 0x549f, 0x36be, 0x9d2, 0x1, 0x1);
        gbc.writeMem(0x1d8b, { 0xb7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x79be, gbc.sp());
        EXPECT(0x1d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02AA
        gbc.setState(0x79b9, 0xaa1c, 0xcb20, 0x8039, 0xbee2, 0xd07a, 0x0, 0x1);
        gbc.writeMem(0x79b9, { 0xb7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xaa1c, gbc.sp());
        EXPECT(0x79ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02AB
        gbc.setState(0x85c6, 0x9806, 0xcf80, 0xb08, 0x18e0, 0xb934, 0x0, 0x1);
        gbc.writeMem(0x85c6, { 0xb7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9806, gbc.sp());
        EXPECT(0x85c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x85c6));
        // B7 02AC
        gbc.setState(0x5818, 0xefc9, 0x57b0, 0xc01c, 0x6ed8, 0x74ea, 0x0, 0x1);
        gbc.writeMem(0x5818, { 0xb7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xefc9, gbc.sp());
        EXPECT(0x5819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02AD
        gbc.setState(0xd1a9, 0x5c47, 0x9570, 0xcbb1, 0xf67a, 0x7af1, 0x1, 0x0);
        gbc.writeMem(0xd1a9, { 0xb7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5c47, gbc.sp());
        EXPECT(0xd1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd1a9));
        // B7 02AE
        gbc.setState(0xdefe, 0x2525, 0x37e0, 0xf6c8, 0xe051, 0x476a, 0x1, 0x0);
        gbc.writeMem(0xdefe, { 0xb7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2525, gbc.sp());
        EXPECT(0xdeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdefe));
        // B7 02AF
        gbc.setState(0xc3, 0xfb01, 0x7050, 0x41c7, 0xdda8, 0x7f75, 0x0, 0x0);
        gbc.writeMem(0xc3, { 0xb7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfb01, gbc.sp());
        EXPECT(0xc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02B0
        gbc.setState(0x1395, 0x7957, 0xc8f0, 0x2a66, 0x91b3, 0x384b, 0x1, 0x1);
        gbc.writeMem(0x1395, { 0xb7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7957, gbc.sp());
        EXPECT(0x1396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02B1
        gbc.setState(0x3b12, 0x9182, 0x1240, 0xd5a6, 0xf862, 0x92d3, 0x0, 0x0);
        gbc.writeMem(0x3b12, { 0xb7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9182, gbc.sp());
        EXPECT(0x3b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02B2
        gbc.setState(0xc992, 0xf1ee, 0x49a0, 0x6fb0, 0x8e6a, 0xc25d, 0x1, 0x1);
        gbc.writeMem(0xc992, { 0xb7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf1ee, gbc.sp());
        EXPECT(0xc993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc992));
        // B7 02B3
        gbc.setState(0xe4a1, 0xc7, 0xb370, 0x4e9f, 0xfe38, 0xa9bf, 0x1, 0x1);
        gbc.writeMem(0xe4a1, { 0xb7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc7, gbc.sp());
        EXPECT(0xe4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe4a1));
        // B7 02B4
        gbc.setState(0x54f4, 0x4e05, 0x8920, 0x8a31, 0x906a, 0xfaee, 0x1, 0x1);
        gbc.writeMem(0x54f4, { 0xb7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4e05, gbc.sp());
        EXPECT(0x54f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02B5
        gbc.setState(0x4053, 0xb52a, 0xc4f0, 0xe655, 0x4bdf, 0x537c, 0x1, 0x1);
        gbc.writeMem(0x4053, { 0xb7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb52a, gbc.sp());
        EXPECT(0x4054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02B7
        gbc.setState(0x6fd7, 0xf498, 0x1af0, 0x2f11, 0x1dcf, 0x92ef, 0x1, 0x1);
        gbc.writeMem(0x6fd7, { 0xb7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf498, gbc.sp());
        EXPECT(0x6fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02B8
        gbc.setState(0x1619, 0x966d, 0x1000, 0xdd73, 0x2208, 0x2d8, 0x1, 0x1);
        gbc.writeMem(0x1619, { 0xb7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x966d, gbc.sp());
        EXPECT(0x161a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02B9
        gbc.setState(0xeb58, 0xb7c6, 0xcc0, 0x21cd, 0x32a3, 0xedf7, 0x1, 0x0);
        gbc.writeMem(0xeb58, { 0xb7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb7c6, gbc.sp());
        EXPECT(0xeb59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xeb58));
        // B7 02BA
        gbc.setState(0xdbc0, 0x5330, 0x61a0, 0x7957, 0x1e05, 0x91a, 0x1, 0x0);
        gbc.writeMem(0xdbc0, { 0xb7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5330, gbc.sp());
        EXPECT(0xdbc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdbc0));
        // B7 02BB
        gbc.setState(0x5028, 0x55f6, 0xe9d0, 0x19f4, 0xa1d7, 0x3623, 0x1, 0x1);
        gbc.writeMem(0x5028, { 0xb7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x55f6, gbc.sp());
        EXPECT(0x5029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02BD
        gbc.setState(0xc230, 0x5bf1, 0x9460, 0xb667, 0x5ff9, 0x32ad, 0x0, 0x0);
        gbc.writeMem(0xc230, { 0xb7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5bf1, gbc.sp());
        EXPECT(0xc231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc230));
        // B7 02BE
        gbc.setState(0xc2b4, 0xb495, 0x8c20, 0xa03d, 0x23bf, 0x220d, 0x0, 0x0);
        gbc.writeMem(0xc2b4, { 0xb7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb495, gbc.sp());
        EXPECT(0xc2b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc2b4));
        // B7 02BF
        gbc.setState(0x6b34, 0xe9, 0xbfe0, 0xd9a0, 0xd40a, 0x9090, 0x1, 0x0);
        gbc.writeMem(0x6b34, { 0xb7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe9, gbc.sp());
        EXPECT(0x6b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02C0
        gbc.setState(0xee2c, 0xb09, 0x4780, 0xf8e2, 0x3d1a, 0xf20c, 0x1, 0x0);
        gbc.writeMem(0xee2c, { 0xb7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb09, gbc.sp());
        EXPECT(0xee2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xee2c));
        // B7 02C1
        gbc.setState(0x694f, 0x460b, 0x49e0, 0xf4ba, 0xb390, 0x7028, 0x0, 0x1);
        gbc.writeMem(0x694f, { 0xb7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x460b, gbc.sp());
        EXPECT(0x6950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02C2
        gbc.setState(0xc8f, 0x6490, 0xe900, 0xe089, 0x64d5, 0x9f98, 0x0, 0x1);
        gbc.writeMem(0xc8f, { 0xb7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6490, gbc.sp());
        EXPECT(0xc90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02C3
        gbc.setState(0x8dcf, 0x539f, 0x2a70, 0x61c, 0xb4f1, 0x83a5, 0x1, 0x0);
        gbc.writeMem(0x8dcf, { 0xb7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x539f, gbc.sp());
        EXPECT(0x8dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8dcf));
        // B7 02C4
        gbc.setState(0x9ef, 0x709c, 0xec50, 0x31c3, 0xbc25, 0x64a8, 0x1, 0x1);
        gbc.writeMem(0x9ef, { 0xb7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x709c, gbc.sp());
        EXPECT(0x9f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02C5
        gbc.setState(0x3b1d, 0x1708, 0xefc0, 0x5158, 0x7629, 0x6806, 0x1, 0x0);
        gbc.writeMem(0x3b1d, { 0xb7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1708, gbc.sp());
        EXPECT(0x3b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02C6
        gbc.setState(0xabeb, 0xf2f7, 0xa080, 0x1315, 0x6805, 0x6752, 0x0, 0x0);
        gbc.writeMem(0xabeb, { 0xb7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf2f7, gbc.sp());
        EXPECT(0xabec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xabeb));
        // B7 02C7
        gbc.setState(0xba1d, 0xa955, 0x40d0, 0xf002, 0x137d, 0x2107, 0x0, 0x1);
        gbc.writeMem(0xba1d, { 0xb7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa955, gbc.sp());
        EXPECT(0xba1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xba1d));
        // B7 02C9
        gbc.setState(0xd6ef, 0x30ec, 0x87d0, 0x80ea, 0xde34, 0x4097, 0x0, 0x0);
        gbc.writeMem(0xd6ef, { 0xb7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x30ec, gbc.sp());
        EXPECT(0xd6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd6ef));
        // B7 02CA
        gbc.setState(0xac78, 0x503d, 0xbbf0, 0x87c0, 0x10f4, 0x5ec6, 0x1, 0x0);
        gbc.writeMem(0xac78, { 0xb7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x503d, gbc.sp());
        EXPECT(0xac79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xac78));
        // B7 02CB
        gbc.setState(0xa098, 0x4d55, 0x5dd0, 0xff2f, 0x4838, 0xc646, 0x0, 0x1);
        gbc.writeMem(0xa098, { 0xb7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4d55, gbc.sp());
        EXPECT(0xa099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa098));
        // B7 02CC
        gbc.setState(0xa629, 0xddbd, 0x7ac0, 0x8ab4, 0xc5d8, 0x37e0, 0x1, 0x0);
        gbc.writeMem(0xa629, { 0xb7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xddbd, gbc.sp());
        EXPECT(0xa62a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa629));
        // B7 02CD
        gbc.setState(0x8496, 0x93d, 0x1550, 0x1919, 0x96a3, 0x32a2, 0x1, 0x0);
        gbc.writeMem(0x8496, { 0xb7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x93d, gbc.sp());
        EXPECT(0x8497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8496));
        // B7 02CE
        gbc.setState(0xc359, 0xe164, 0xb150, 0x12d1, 0x4475, 0x41af, 0x1, 0x0);
        gbc.writeMem(0xc359, { 0xb7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe164, gbc.sp());
        EXPECT(0xc35a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc359));
        // B7 02CF
        gbc.setState(0x7e5a, 0xb6b6, 0xf60, 0x6f79, 0xaa4, 0x6388, 0x0, 0x0);
        gbc.writeMem(0x7e5a, { 0xb7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb6b6, gbc.sp());
        EXPECT(0x7e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02D0
        gbc.setState(0xce24, 0xae33, 0x1a70, 0x2c7b, 0xbd78, 0xf182, 0x0, 0x0);
        gbc.writeMem(0xce24, { 0xb7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xae33, gbc.sp());
        EXPECT(0xce25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xce24));
        // B7 02D1
        gbc.setState(0x51f1, 0x243a, 0xe980, 0x27af, 0xc690, 0xf253, 0x0, 0x1);
        gbc.writeMem(0x51f1, { 0xb7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x243a, gbc.sp());
        EXPECT(0x51f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02D2
        gbc.setState(0x104, 0x7972, 0xbe0, 0x9c1d, 0xbb20, 0xe817, 0x0, 0x0);
        gbc.writeMem(0x104, { 0xb7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7972, gbc.sp());
        EXPECT(0x105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02D3
        gbc.setState(0x4b2, 0x5ed9, 0x16d0, 0xfba0, 0x58c0, 0x849, 0x1, 0x0);
        gbc.writeMem(0x4b2, { 0xb7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5ed9, gbc.sp());
        EXPECT(0x4b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02D5
        gbc.setState(0xdae8, 0x3997, 0xa620, 0xe8e1, 0xc0ca, 0xe5ca, 0x0, 0x0);
        gbc.writeMem(0xdae8, { 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3997, gbc.sp());
        EXPECT(0xdae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdae8));
        // B7 02D6
        gbc.setState(0xa41f, 0x7c4c, 0xfe70, 0xa9d3, 0x7150, 0x4eff, 0x1, 0x0);
        gbc.writeMem(0xa41f, { 0xb7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7c4c, gbc.sp());
        EXPECT(0xa420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa41f));
        // B7 02D7
        gbc.setState(0xd4f9, 0x62a1, 0xf2a0, 0x8aa8, 0x5198, 0x906d, 0x1, 0x1);
        gbc.writeMem(0xd4f9, { 0xb7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x62a1, gbc.sp());
        EXPECT(0xd4fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd4f9));
        // B7 02D8
        gbc.setState(0xaeec, 0x9422, 0xc1f0, 0x658d, 0xcffa, 0xdf1c, 0x1, 0x0);
        gbc.writeMem(0xaeec, { 0xb7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9422, gbc.sp());
        EXPECT(0xaeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xaeec));
        // B7 02D9
        gbc.setState(0x62cd, 0x4ceb, 0x9010, 0xd94e, 0x5b42, 0xdbb9, 0x0, 0x1);
        gbc.writeMem(0x62cd, { 0xb7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4ceb, gbc.sp());
        EXPECT(0x62ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02DA
        gbc.setState(0x8290, 0xf29c, 0x4560, 0xd3e6, 0x3a3b, 0x6c62, 0x0, 0x1);
        gbc.writeMem(0x8290, { 0xb7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf29c, gbc.sp());
        EXPECT(0x8291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8290));
        // B7 02DB
        gbc.setState(0x6b69, 0xc06d, 0xef90, 0x78bb, 0x17ef, 0xb3cb, 0x1, 0x0);
        gbc.writeMem(0x6b69, { 0xb7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc06d, gbc.sp());
        EXPECT(0x6b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02DC
        gbc.setState(0x33e7, 0xb6c5, 0xb4d0, 0x8b57, 0xe429, 0x4fa3, 0x1, 0x1);
        gbc.writeMem(0x33e7, { 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb6c5, gbc.sp());
        EXPECT(0x33e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02DE
        gbc.setState(0x140, 0x4be4, 0x2370, 0x361b, 0xdd03, 0xf1d8, 0x1, 0x1);
        gbc.writeMem(0x140, { 0xb7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4be4, gbc.sp());
        EXPECT(0x141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02DF
        gbc.setState(0x7e7, 0x2f3c, 0xda40, 0xee36, 0x46a7, 0x7b0a, 0x0, 0x0);
        gbc.writeMem(0x7e7, { 0xb7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2f3c, gbc.sp());
        EXPECT(0x7e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02E0
        gbc.setState(0x3056, 0x5574, 0x5840, 0x4e36, 0xc041, 0xb7c2, 0x1, 0x1);
        gbc.writeMem(0x3056, { 0xb7 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5574, gbc.sp());
        EXPECT(0x3057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02E1
        gbc.setState(0x53e7, 0xf1d, 0x7090, 0xea65, 0x8e54, 0xf6c3, 0x0, 0x0);
        gbc.writeMem(0x53e7, { 0xb7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf1d, gbc.sp());
        EXPECT(0x53e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02E2
        gbc.setState(0xa4c6, 0x367, 0x4ba0, 0xc45d, 0x7f0, 0x71a6, 0x0, 0x0);
        gbc.writeMem(0xa4c6, { 0xb7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x367, gbc.sp());
        EXPECT(0xa4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa4c6));
        // B7 02E3
        gbc.setState(0x3c71, 0x8412, 0xad90, 0x3727, 0xad31, 0x9b0a, 0x0, 0x1);
        gbc.writeMem(0x3c71, { 0xb7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8412, gbc.sp());
        EXPECT(0x3c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02E4
        gbc.setState(0xef67, 0xb0e3, 0x51b0, 0x1a41, 0xca0d, 0x3692, 0x1, 0x1);
        gbc.writeMem(0xef67, { 0xb7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb0e3, gbc.sp());
        EXPECT(0xef68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xef67));
        // B7 02E5
        gbc.setState(0xb3f9, 0x2bd1, 0xb4e0, 0xc30d, 0x2a38, 0x4b55, 0x0, 0x0);
        gbc.writeMem(0xb3f9, { 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2bd1, gbc.sp());
        EXPECT(0xb3fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb3f9));
        // B7 02E6
        gbc.setState(0x8abd, 0xf4bf, 0x8e80, 0xab04, 0x983d, 0x3d49, 0x0, 0x0);
        gbc.writeMem(0x8abd, { 0xb7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf4bf, gbc.sp());
        EXPECT(0x8abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8abd));
        // B7 02E7
        gbc.setState(0x8151, 0x7e65, 0x6e40, 0x1e9b, 0x88d8, 0x57dd, 0x1, 0x1);
        gbc.writeMem(0x8151, { 0xb7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7e65, gbc.sp());
        EXPECT(0x8152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8151));
        // B7 02E9
        gbc.setState(0xa908, 0xcd54, 0x5440, 0xf85e, 0xc146, 0xccc1, 0x0, 0x1);
        gbc.writeMem(0xa908, { 0xb7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcd54, gbc.sp());
        EXPECT(0xa909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa908));
        // B7 02EA
        gbc.setState(0xedfc, 0x1201, 0x9450, 0xa66c, 0x5e2a, 0xf2ef, 0x0, 0x0);
        gbc.writeMem(0xedfc, { 0xb7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1201, gbc.sp());
        EXPECT(0xedfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xedfc));
        // B7 02EB
        gbc.setState(0xb3c9, 0x1c09, 0x8ba0, 0xb2e, 0xada3, 0x33eb, 0x1, 0x0);
        gbc.writeMem(0xb3c9, { 0xb7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1c09, gbc.sp());
        EXPECT(0xb3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb3c9));
        // B7 02EC
        gbc.setState(0x6a31, 0xb28e, 0xc20, 0x3d32, 0x9c27, 0x7fe9, 0x0, 0x1);
        gbc.writeMem(0x6a31, { 0xb7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb28e, gbc.sp());
        EXPECT(0x6a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02EE
        gbc.setState(0x7f36, 0x286b, 0xa690, 0x7e57, 0xcec6, 0x758b, 0x1, 0x1);
        gbc.writeMem(0x7f36, { 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x286b, gbc.sp());
        EXPECT(0x7f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02EF
        gbc.setState(0xb13, 0x1fec, 0xf4e0, 0xbba2, 0x807b, 0xe254, 0x1, 0x1);
        gbc.writeMem(0xb13, { 0xb7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1fec, gbc.sp());
        EXPECT(0xb14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02F0
        gbc.setState(0x759c, 0x81f1, 0x8560, 0x123e, 0x825d, 0xf69e, 0x0, 0x1);
        gbc.writeMem(0x759c, { 0xb7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x81f1, gbc.sp());
        EXPECT(0x759d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02F1
        gbc.setState(0x7331, 0xed2, 0x6de0, 0xba41, 0x77ac, 0x9aa7, 0x1, 0x0);
        gbc.writeMem(0x7331, { 0xb7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xed2, gbc.sp());
        EXPECT(0x7332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02F2
        gbc.setState(0xda19, 0x2335, 0x43e0, 0x11de, 0x905, 0x28f6, 0x1, 0x1);
        gbc.writeMem(0xda19, { 0xb7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2335, gbc.sp());
        EXPECT(0xda1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xda19));
        // B7 02F3
        gbc.setState(0xdc46, 0xd130, 0x6440, 0x8913, 0xb61b, 0x9c58, 0x0, 0x0);
        gbc.writeMem(0xdc46, { 0xb7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd130, gbc.sp());
        EXPECT(0xdc47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdc46));
        // B7 02F4
        gbc.setState(0x8906, 0x685b, 0x71c0, 0x7f70, 0x7d64, 0xeb79, 0x1, 0x0);
        gbc.writeMem(0x8906, { 0xb7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x685b, gbc.sp());
        EXPECT(0x8907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8906));
        // B7 02F6
        gbc.setState(0x53aa, 0x688e, 0x4820, 0x8e6c, 0x9006, 0x3779, 0x1, 0x0);
        gbc.writeMem(0x53aa, { 0xb7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x688e, gbc.sp());
        EXPECT(0x53ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02F7
        gbc.setState(0x6c80, 0x697d, 0x8900, 0x9753, 0xb7f, 0x49, 0x0, 0x1);
        gbc.writeMem(0x6c80, { 0xb7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x697d, gbc.sp());
        EXPECT(0x6c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02F8
        gbc.setState(0x2db2, 0x7881, 0x33d0, 0x984b, 0x4e70, 0xd3b1, 0x0, 0x0);
        gbc.writeMem(0x2db2, { 0xb7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7881, gbc.sp());
        EXPECT(0x2db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 02F9
        gbc.setState(0xe9f6, 0x2068, 0xd70, 0xaadb, 0xd158, 0xa9c, 0x0, 0x1);
        gbc.writeMem(0xe9f6, { 0xb7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2068, gbc.sp());
        EXPECT(0xe9f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe9f6));
        // B7 02FA
        gbc.setState(0x825a, 0x4749, 0x5b60, 0x5340, 0x7fb8, 0xed70, 0x0, 0x0);
        gbc.writeMem(0x825a, { 0xb7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4749, gbc.sp());
        EXPECT(0x825b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x825a));
        // B7 02FB
        gbc.setState(0xa26f, 0xd27b, 0x6140, 0x8321, 0x478, 0xbdcd, 0x1, 0x0);
        gbc.writeMem(0xa26f, { 0xb7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd27b, gbc.sp());
        EXPECT(0xa270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa26f));
        // B7 02FC
        gbc.setState(0xb410, 0x1bc1, 0x8e20, 0xf5cc, 0x4c0a, 0x2dad, 0x0, 0x0);
        gbc.writeMem(0xb410, { 0xb7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1bc1, gbc.sp());
        EXPECT(0xb411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb410));
        // B7 02FD
        gbc.setState(0xc1fc, 0xdd54, 0x9100, 0x7cc9, 0x1865, 0xd653, 0x1, 0x0);
        gbc.writeMem(0xc1fc, { 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdd54, gbc.sp());
        EXPECT(0xc1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc1fc));
        // B7 02FE
        gbc.setState(0x846b, 0x7475, 0x9220, 0xa45c, 0x5840, 0x9965, 0x0, 0x1);
        gbc.writeMem(0x846b, { 0xb7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7475, gbc.sp());
        EXPECT(0x846c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x846b));
        // B7 02FF
        gbc.setState(0xeac3, 0x557, 0x620, 0x6d57, 0xe2dc, 0x13f1, 0x1, 0x0);
        gbc.writeMem(0xeac3, { 0xb7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x557, gbc.sp());
        EXPECT(0xeac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xeac3));
        // B7 0300
        gbc.setState(0x7528, 0x3f81, 0xf420, 0x9d2f, 0xf8db, 0x762b, 0x0, 0x0);
        gbc.writeMem(0x7528, { 0xb7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3f81, gbc.sp());
        EXPECT(0x7529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0301
        gbc.setState(0xdae9, 0x22d0, 0x7c90, 0x3b20, 0xff85, 0x74c0, 0x0, 0x1);
        gbc.writeMem(0xdae9, { 0xb7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x22d0, gbc.sp());
        EXPECT(0xdaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdae9));
        // B7 0302
        gbc.setState(0xe8d2, 0x12ee, 0xe820, 0xc97e, 0x716c, 0xaf82, 0x0, 0x0);
        gbc.writeMem(0xe8d2, { 0xb7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x12ee, gbc.sp());
        EXPECT(0xe8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe8d2));
        // B7 0303
        gbc.setState(0x4bfe, 0x7341, 0xbf60, 0x128a, 0x74c, 0x30f1, 0x1, 0x1);
        gbc.writeMem(0x4bfe, { 0xb7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7341, gbc.sp());
        EXPECT(0x4bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0304
        gbc.setState(0xae5a, 0xc15d, 0xe730, 0x6ac4, 0xe0b4, 0xd900, 0x1, 0x1);
        gbc.writeMem(0xae5a, { 0xb7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc15d, gbc.sp());
        EXPECT(0xae5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xae5a));
        // B7 0305
        gbc.setState(0xb5ac, 0xfcf8, 0x9e30, 0xc23b, 0x8003, 0x482c, 0x0, 0x1);
        gbc.writeMem(0xb5ac, { 0xb7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfcf8, gbc.sp());
        EXPECT(0xb5ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb5ac));
        // B7 0306
        gbc.setState(0x4f53, 0x431b, 0x4250, 0x48ef, 0x96fd, 0xb3fd, 0x0, 0x0);
        gbc.writeMem(0x4f53, { 0xb7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x431b, gbc.sp());
        EXPECT(0x4f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0307
        gbc.setState(0x59a7, 0x3a3, 0x5250, 0xfa9e, 0x876d, 0x3967, 0x0, 0x0);
        gbc.writeMem(0x59a7, { 0xb7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3a3, gbc.sp());
        EXPECT(0x59a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0308
        gbc.setState(0x2c9b, 0x6ce3, 0xffc0, 0xf960, 0xacc4, 0x795d, 0x1, 0x1);
        gbc.writeMem(0x2c9b, { 0xb7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6ce3, gbc.sp());
        EXPECT(0x2c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0309
        gbc.setState(0x6974, 0xc7ef, 0xa530, 0x225e, 0x512f, 0x3ae7, 0x1, 0x0);
        gbc.writeMem(0x6974, { 0xb7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc7ef, gbc.sp());
        EXPECT(0x6975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 030A
        gbc.setState(0x5cc4, 0x5a95, 0x4eb0, 0xcd3b, 0x35b1, 0x85fd, 0x1, 0x0);
        gbc.writeMem(0x5cc4, { 0xb7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5a95, gbc.sp());
        EXPECT(0x5cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 030D
        gbc.setState(0x5adc, 0x530, 0x54e0, 0xdcc5, 0xfd36, 0x816d, 0x0, 0x1);
        gbc.writeMem(0x5adc, { 0xb7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x530, gbc.sp());
        EXPECT(0x5add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 030E
        gbc.setState(0xba91, 0xe8c1, 0x5190, 0x4f63, 0xdca5, 0x581b, 0x1, 0x0);
        gbc.writeMem(0xba91, { 0xb7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe8c1, gbc.sp());
        EXPECT(0xba92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xba91));
        // B7 030F
        gbc.setState(0x7b79, 0x1699, 0x8b0, 0x2f56, 0xf0bc, 0x4ed, 0x1, 0x1);
        gbc.writeMem(0x7b79, { 0xb7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1699, gbc.sp());
        EXPECT(0x7b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0310
        gbc.setState(0x6106, 0xc0d8, 0x1d00, 0xc217, 0xdb25, 0x6dd8, 0x1, 0x1);
        gbc.writeMem(0x6106, { 0xb7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc0d8, gbc.sp());
        EXPECT(0x6107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0311
        gbc.setState(0xd17a, 0x93a8, 0x40d0, 0xd2a0, 0x24e, 0xea5f, 0x0, 0x1);
        gbc.writeMem(0xd17a, { 0xb7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x93a8, gbc.sp());
        EXPECT(0xd17b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd17a));
        // B7 0312
        gbc.setState(0x438c, 0x4e34, 0xa380, 0x8d07, 0x61ac, 0x9be8, 0x0, 0x1);
        gbc.writeMem(0x438c, { 0xb7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4e34, gbc.sp());
        EXPECT(0x438d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0313
        gbc.setState(0xc6e8, 0x2ca5, 0xb6d0, 0xc9d, 0x87c3, 0x1bf8, 0x1, 0x0);
        gbc.writeMem(0xc6e8, { 0xb7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2ca5, gbc.sp());
        EXPECT(0xc6e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc6e8));
        // B7 0314
        gbc.setState(0x4514, 0x9f13, 0x3770, 0xe7f0, 0xcd70, 0x60c5, 0x1, 0x0);
        gbc.writeMem(0x4514, { 0xb7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9f13, gbc.sp());
        EXPECT(0x4515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0315
        gbc.setState(0x6f1e, 0x139e, 0x1ca0, 0xb75d, 0x9136, 0xdaac, 0x1, 0x1);
        gbc.writeMem(0x6f1e, { 0xb7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x139e, gbc.sp());
        EXPECT(0x6f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0316
        gbc.setState(0x8e97, 0x896a, 0x7e70, 0x674d, 0x42ec, 0x35a2, 0x1, 0x0);
        gbc.writeMem(0x8e97, { 0xb7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x896a, gbc.sp());
        EXPECT(0x8e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8e97));
        // B7 0317
        gbc.setState(0x62b2, 0xe86, 0x5110, 0x783c, 0x3136, 0xdeaa, 0x1, 0x0);
        gbc.writeMem(0x62b2, { 0xb7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe86, gbc.sp());
        EXPECT(0x62b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0318
        gbc.setState(0x91ae, 0x9055, 0xa300, 0x92e8, 0xe243, 0x68ce, 0x1, 0x0);
        gbc.writeMem(0x91ae, { 0xb7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9055, gbc.sp());
        EXPECT(0x91af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x91ae));
        // B7 0319
        gbc.setState(0x48ef, 0x1b6e, 0xea20, 0x91bd, 0x1b13, 0x3866, 0x1, 0x1);
        gbc.writeMem(0x48ef, { 0xb7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1b6e, gbc.sp());
        EXPECT(0x48f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 031A
        gbc.setState(0x136b, 0x7ffa, 0x9670, 0x8b0f, 0x770b, 0x7d9d, 0x1, 0x0);
        gbc.writeMem(0x136b, { 0xb7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7ffa, gbc.sp());
        EXPECT(0x136c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 031B
        gbc.setState(0x17d1, 0x6faf, 0x2750, 0xe82e, 0x85c5, 0xdff4, 0x0, 0x1);
        gbc.writeMem(0x17d1, { 0xb7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6faf, gbc.sp());
        EXPECT(0x17d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 031D
        gbc.setState(0x1b57, 0x24e7, 0x5d50, 0x5309, 0x46ab, 0xe46, 0x1, 0x1);
        gbc.writeMem(0x1b57, { 0xb7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x24e7, gbc.sp());
        EXPECT(0x1b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 031E
        gbc.setState(0x1469, 0xf8ce, 0x3e30, 0xa9e5, 0x3f93, 0x7b90, 0x0, 0x0);
        gbc.writeMem(0x1469, { 0xb7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf8ce, gbc.sp());
        EXPECT(0x146a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 031F
        gbc.setState(0x71c0, 0x7a64, 0xaca0, 0x6fa9, 0x444b, 0x63d9, 0x1, 0x1);
        gbc.writeMem(0x71c0, { 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7a64, gbc.sp());
        EXPECT(0x71c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0320
        gbc.setState(0xe4d8, 0xe619, 0x6a60, 0xcec8, 0x4f9a, 0xc0fc, 0x0, 0x0);
        gbc.writeMem(0xe4d8, { 0xb7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe619, gbc.sp());
        EXPECT(0xe4d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe4d8));
        // B7 0321
        gbc.setState(0x1339, 0xe8b0, 0x43b0, 0xc145, 0xbb13, 0x1301, 0x1, 0x1);
        gbc.writeMem(0x1339, { 0xb7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe8b0, gbc.sp());
        EXPECT(0x133a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0322
        gbc.setState(0x132a, 0x3800, 0xd40, 0x140, 0xb4eb, 0x9fc6, 0x1, 0x0);
        gbc.writeMem(0x132a, { 0xb7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3800, gbc.sp());
        EXPECT(0x132b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0323
        gbc.setState(0x24d6, 0x98d0, 0x4ef0, 0xd926, 0x804e, 0xefe8, 0x1, 0x0);
        gbc.writeMem(0x24d6, { 0xb7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x98d0, gbc.sp());
        EXPECT(0x24d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0325
        gbc.setState(0x9067, 0x632, 0x7a00, 0x51e5, 0x1bee, 0xe4e2, 0x1, 0x1);
        gbc.writeMem(0x9067, { 0xb7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x632, gbc.sp());
        EXPECT(0x9068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9067));
        // B7 0326
        gbc.setState(0xd4ed, 0xd535, 0xba80, 0x4992, 0xacb0, 0xd94d, 0x1, 0x0);
        gbc.writeMem(0xd4ed, { 0xb7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd535, gbc.sp());
        EXPECT(0xd4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd4ed));
        // B7 0327
        gbc.setState(0x24ae, 0x3d81, 0x4540, 0xa3a0, 0x39ac, 0x3408, 0x0, 0x0);
        gbc.writeMem(0x24ae, { 0xb7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3d81, gbc.sp());
        EXPECT(0x24af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0328
        gbc.setState(0x56f5, 0x9b8a, 0x2f00, 0xa1ec, 0x5f52, 0x84cd, 0x1, 0x0);
        gbc.writeMem(0x56f5, { 0xb7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9b8a, gbc.sp());
        EXPECT(0x56f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0329
        gbc.setState(0xdf06, 0x8e5f, 0xa4c0, 0x5612, 0x5476, 0x98d6, 0x1, 0x1);
        gbc.writeMem(0xdf06, { 0xb7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8e5f, gbc.sp());
        EXPECT(0xdf07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdf06));
        // B7 032A
        gbc.setState(0xa832, 0xacb8, 0xe490, 0x4d52, 0x9a2a, 0xd197, 0x1, 0x1);
        gbc.writeMem(0xa832, { 0xb7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xacb8, gbc.sp());
        EXPECT(0xa833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa832));
        // B7 032B
        gbc.setState(0x640, 0x7192, 0x1e20, 0xe946, 0x9ff9, 0xe2dc, 0x0, 0x1);
        gbc.writeMem(0x640, { 0xb7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7192, gbc.sp());
        EXPECT(0x641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 032C
        gbc.setState(0x8072, 0xc979, 0x5580, 0x18e0, 0xb3dc, 0x8a82, 0x0, 0x1);
        gbc.writeMem(0x8072, { 0xb7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc979, gbc.sp());
        EXPECT(0x8073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8072));
        // B7 032D
        gbc.setState(0xa91d, 0x7124, 0xb670, 0x7f80, 0x5984, 0x5b01, 0x0, 0x0);
        gbc.writeMem(0xa91d, { 0xb7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7124, gbc.sp());
        EXPECT(0xa91e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa91d));
        // B7 032E
        gbc.setState(0xbc6b, 0x7f4a, 0x5c10, 0x2708, 0x78f2, 0xc827, 0x1, 0x1);
        gbc.writeMem(0xbc6b, { 0xb7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7f4a, gbc.sp());
        EXPECT(0xbc6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbc6b));
        // B7 0330
        gbc.setState(0x9a64, 0xe1fb, 0x7850, 0x3de0, 0xe208, 0x5373, 0x1, 0x1);
        gbc.writeMem(0x9a64, { 0xb7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe1fb, gbc.sp());
        EXPECT(0x9a65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9a64));
        // B7 0331
        gbc.setState(0x80ce, 0xd157, 0xf020, 0x3916, 0x5449, 0xdfcb, 0x1, 0x0);
        gbc.writeMem(0x80ce, { 0xb7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd157, gbc.sp());
        EXPECT(0x80cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x80ce));
        // B7 0332
        gbc.setState(0xe196, 0x845a, 0xa6b0, 0x3d83, 0x596c, 0xf2d9, 0x1, 0x1);
        gbc.writeMem(0xe196, { 0xb7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x845a, gbc.sp());
        EXPECT(0xe197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe196));
        // B7 0333
        gbc.setState(0x93de, 0x45b8, 0xaeb0, 0xb27a, 0x2ac4, 0x9895, 0x1, 0x1);
        gbc.writeMem(0x93de, { 0xb7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x45b8, gbc.sp());
        EXPECT(0x93df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x93de));
        // B7 0334
        gbc.setState(0x9637, 0x88ca, 0xb5a0, 0x4053, 0x6bc4, 0x5a09, 0x0, 0x1);
        gbc.writeMem(0x9637, { 0xb7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x88ca, gbc.sp());
        EXPECT(0x9638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9637));
        // B7 0335
        gbc.setState(0xccf9, 0x2bfa, 0x1b10, 0xab4b, 0x7d2b, 0xd0e0, 0x0, 0x0);
        gbc.writeMem(0xccf9, { 0xb7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2bfa, gbc.sp());
        EXPECT(0xccfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xccf9));
        // B7 0336
        gbc.setState(0x3952, 0x4d87, 0xe8f0, 0x9379, 0x7cca, 0xba0d, 0x1, 0x1);
        gbc.writeMem(0x3952, { 0xb7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4d87, gbc.sp());
        EXPECT(0x3953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0337
        gbc.setState(0xe071, 0x9d47, 0x2d0, 0xf4ea, 0xe2e, 0x80e6, 0x1, 0x1);
        gbc.writeMem(0xe071, { 0xb7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9d47, gbc.sp());
        EXPECT(0xe072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe071));
        // B7 0338
        gbc.setState(0xe319, 0x47a7, 0x53f0, 0xb0f5, 0x4a51, 0xf092, 0x0, 0x1);
        gbc.writeMem(0xe319, { 0xb7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x47a7, gbc.sp());
        EXPECT(0xe31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe319));
        // B7 0339
        gbc.setState(0x9ab9, 0x2fd2, 0xac0, 0xc06c, 0x8cb1, 0xc7a, 0x1, 0x0);
        gbc.writeMem(0x9ab9, { 0xb7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2fd2, gbc.sp());
        EXPECT(0x9aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9ab9));
        // B7 033A
        gbc.setState(0xe848, 0xcd95, 0xe3c0, 0x62f0, 0x3ed0, 0x9340, 0x1, 0x0);
        gbc.writeMem(0xe848, { 0xb7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xcd95, gbc.sp());
        EXPECT(0xe849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe848));
        // B7 033B
        gbc.setState(0x949e, 0x5229, 0xc320, 0x1593, 0x6e3, 0x9a8b, 0x1, 0x0);
        gbc.writeMem(0x949e, { 0xb7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5229, gbc.sp());
        EXPECT(0x949f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x949e));
        // B7 033C
        gbc.setState(0x29f0, 0x1aa8, 0x8610, 0x190, 0x10c2, 0x911e, 0x1, 0x1);
        gbc.writeMem(0x29f0, { 0xb7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1aa8, gbc.sp());
        EXPECT(0x29f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 033D
        gbc.setState(0x1071, 0x7979, 0xf000, 0xb77d, 0x8636, 0x2b7e, 0x0, 0x0);
        gbc.writeMem(0x1071, { 0xb7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7979, gbc.sp());
        EXPECT(0x1072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 033E
        gbc.setState(0x46ad, 0xb212, 0x6150, 0x7a4b, 0x4296, 0x6ccf, 0x0, 0x1);
        gbc.writeMem(0x46ad, { 0xb7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb212, gbc.sp());
        EXPECT(0x46ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 033F
        gbc.setState(0x94f2, 0x4307, 0x5ad0, 0xabc5, 0x669, 0x1db4, 0x1, 0x1);
        gbc.writeMem(0x94f2, { 0xb7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4307, gbc.sp());
        EXPECT(0x94f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x94f2));
        // B7 0340
        gbc.setState(0x1008, 0x554f, 0xf010, 0x27a8, 0xf4e5, 0xed13, 0x1, 0x1);
        gbc.writeMem(0x1008, { 0xb7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x554f, gbc.sp());
        EXPECT(0x1009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0341
        gbc.setState(0x48ff, 0x60f8, 0x3ff0, 0x87a3, 0x218f, 0xc4f1, 0x1, 0x0);
        gbc.writeMem(0x48ff, { 0xb7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x60f8, gbc.sp());
        EXPECT(0x4900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0342
        gbc.setState(0x64a8, 0x2f8d, 0xd8e0, 0x7816, 0x6a89, 0x1a5c, 0x0, 0x1);
        gbc.writeMem(0x64a8, { 0xb7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2f8d, gbc.sp());
        EXPECT(0x64a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0343
        gbc.setState(0x6918, 0xd802, 0x6920, 0xa538, 0xe667, 0x616e, 0x0, 0x0);
        gbc.writeMem(0x6918, { 0xb7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd802, gbc.sp());
        EXPECT(0x6919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0344
        gbc.setState(0x9ccd, 0x8a03, 0xaf40, 0xaae3, 0xc269, 0x8f82, 0x1, 0x1);
        gbc.writeMem(0x9ccd, { 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8a03, gbc.sp());
        EXPECT(0x9cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9ccd));
        // B7 0345
        gbc.setState(0xef6f, 0x377a, 0x6890, 0x406b, 0x465b, 0x39ca, 0x0, 0x0);
        gbc.writeMem(0xef6f, { 0xb7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x377a, gbc.sp());
        EXPECT(0xef70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xef6f));
        // B7 0347
        gbc.setState(0x6c35, 0xb9d4, 0x2b60, 0xfa0b, 0x35f9, 0x5b6d, 0x1, 0x1);
        gbc.writeMem(0x6c35, { 0xb7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb9d4, gbc.sp());
        EXPECT(0x6c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0348
        gbc.setState(0x739b, 0x30f9, 0xf90, 0x53c3, 0x4e65, 0xd8dd, 0x0, 0x1);
        gbc.writeMem(0x739b, { 0xb7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x30f9, gbc.sp());
        EXPECT(0x739c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0349
        gbc.setState(0x180e, 0x83dd, 0xf860, 0x3721, 0x7ae5, 0x6e5a, 0x1, 0x1);
        gbc.writeMem(0x180e, { 0xb7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x83dd, gbc.sp());
        EXPECT(0x180f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 034A
        gbc.setState(0x4d61, 0x1cc6, 0xc160, 0xc4e3, 0x9505, 0x9ab0, 0x0, 0x1);
        gbc.writeMem(0x4d61, { 0xb7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1cc6, gbc.sp());
        EXPECT(0x4d62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 034B
        gbc.setState(0x3c05, 0xeaec, 0x9040, 0xfa22, 0x47dd, 0xa9ea, 0x0, 0x0);
        gbc.writeMem(0x3c05, { 0xb7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xeaec, gbc.sp());
        EXPECT(0x3c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 034C
        gbc.setState(0xc33c, 0xcec3, 0x9820, 0xc414, 0xb1a6, 0x6cab, 0x0, 0x0);
        gbc.writeMem(0xc33c, { 0xb7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcec3, gbc.sp());
        EXPECT(0xc33d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc33c));
        // B7 034D
        gbc.setState(0xb2f1, 0x28c6, 0x3110, 0x1278, 0xf77d, 0x69b8, 0x1, 0x0);
        gbc.writeMem(0xb2f1, { 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x28c6, gbc.sp());
        EXPECT(0xb2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb2f1));
        // B7 034E
        gbc.setState(0xe118, 0xa548, 0xafc0, 0xd0a7, 0xd5b4, 0x40e1, 0x0, 0x0);
        gbc.writeMem(0xe118, { 0xb7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa548, gbc.sp());
        EXPECT(0xe119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe118));
        // B7 034F
        gbc.setState(0x6175, 0x9986, 0x8d70, 0x30c5, 0x5c97, 0xf9fd, 0x1, 0x1);
        gbc.writeMem(0x6175, { 0xb7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9986, gbc.sp());
        EXPECT(0x6176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0350
        gbc.setState(0x11d6, 0x9404, 0xf90, 0x96e6, 0x700e, 0x7591, 0x1, 0x0);
        gbc.writeMem(0x11d6, { 0xb7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9404, gbc.sp());
        EXPECT(0x11d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0351
        gbc.setState(0xcc7, 0x9c8d, 0xa4c0, 0x3c98, 0x8545, 0x85d0, 0x1, 0x1);
        gbc.writeMem(0xcc7, { 0xb7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9c8d, gbc.sp());
        EXPECT(0xcc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0352
        gbc.setState(0xd816, 0xe6d8, 0x7ae0, 0x8c9d, 0xb127, 0x8630, 0x1, 0x0);
        gbc.writeMem(0xd816, { 0xb7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe6d8, gbc.sp());
        EXPECT(0xd817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd816));
        // B7 0353
        gbc.setState(0xd4d5, 0x1652, 0xa050, 0x64a9, 0x6e10, 0x2844, 0x1, 0x0);
        gbc.writeMem(0xd4d5, { 0xb7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1652, gbc.sp());
        EXPECT(0xd4d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd4d5));
        // B7 0354
        gbc.setState(0xb7f2, 0xe87e, 0x5f10, 0xbca, 0xa223, 0x23f3, 0x1, 0x1);
        gbc.writeMem(0xb7f2, { 0xb7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe87e, gbc.sp());
        EXPECT(0xb7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb7f2));
        // B7 0355
        gbc.setState(0x877d, 0x4f40, 0x3b20, 0x69de, 0xebc2, 0x79e4, 0x1, 0x1);
        gbc.writeMem(0x877d, { 0xb7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4f40, gbc.sp());
        EXPECT(0x877e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x877d));
        // B7 0356
        gbc.setState(0x3e0, 0xa28c, 0x9690, 0x66, 0xb4ff, 0xa4d6, 0x0, 0x1);
        gbc.writeMem(0x3e0, { 0xb7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa28c, gbc.sp());
        EXPECT(0x3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0358
        gbc.setState(0xdfc5, 0x9fc1, 0x19d0, 0xfda8, 0xd74e, 0x36eb, 0x0, 0x0);
        gbc.writeMem(0xdfc5, { 0xb7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9fc1, gbc.sp());
        EXPECT(0xdfc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdfc5));
        // B7 0359
        gbc.setState(0x88ff, 0x56cc, 0x2b30, 0x5f1e, 0x3770, 0x2338, 0x1, 0x1);
        gbc.writeMem(0x88ff, { 0xb7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x56cc, gbc.sp());
        EXPECT(0x8900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x88ff));
        // B7 035A
        gbc.setState(0xbeda, 0xa145, 0x9770, 0x5b7a, 0xfd95, 0x5004, 0x0, 0x0);
        gbc.writeMem(0xbeda, { 0xb7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa145, gbc.sp());
        EXPECT(0xbedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbeda));
        // B7 035B
        gbc.setState(0x92df, 0x38f7, 0x3800, 0x1f16, 0xe54a, 0xdd82, 0x1, 0x0);
        gbc.writeMem(0x92df, { 0xb7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x38f7, gbc.sp());
        EXPECT(0x92e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x92df));
        // B7 035C
        gbc.setState(0xbf01, 0x4dff, 0x5570, 0x5ce1, 0x92f9, 0xbb3, 0x0, 0x0);
        gbc.writeMem(0xbf01, { 0xb7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4dff, gbc.sp());
        EXPECT(0xbf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbf01));
        // B7 035D
        gbc.setState(0x257a, 0xcbd3, 0xf070, 0x234e, 0xbb75, 0x512a, 0x0, 0x0);
        gbc.writeMem(0x257a, { 0xb7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcbd3, gbc.sp());
        EXPECT(0x257b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 035E
        gbc.setState(0xbab0, 0x8efb, 0x1d50, 0xd60f, 0x5099, 0xab29, 0x0, 0x1);
        gbc.writeMem(0xbab0, { 0xb7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8efb, gbc.sp());
        EXPECT(0xbab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbab0));
        // B7 035F
        gbc.setState(0xd108, 0xbd7c, 0x4d00, 0xd609, 0x34d0, 0xa978, 0x1, 0x0);
        gbc.writeMem(0xd108, { 0xb7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbd7c, gbc.sp());
        EXPECT(0xd109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd108));
        // B7 0360
        gbc.setState(0x6e71, 0x2558, 0xca80, 0x81c1, 0xd928, 0x94e8, 0x1, 0x1);
        gbc.writeMem(0x6e71, { 0xb7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2558, gbc.sp());
        EXPECT(0x6e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0361
        gbc.setState(0xe864, 0x6de8, 0x7040, 0x59da, 0xa5e2, 0xa2d6, 0x1, 0x0);
        gbc.writeMem(0xe864, { 0xb7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6de8, gbc.sp());
        EXPECT(0xe865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe864));
        // B7 0362
        gbc.setState(0x8f08, 0x27b7, 0xd140, 0x11aa, 0x8106, 0x395a, 0x1, 0x0);
        gbc.writeMem(0x8f08, { 0xb7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x27b7, gbc.sp());
        EXPECT(0x8f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8f08));
        // B7 0363
        gbc.setState(0x7982, 0x45c8, 0x6980, 0xbc1b, 0xfef8, 0x59a9, 0x1, 0x1);
        gbc.writeMem(0x7982, { 0xb7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x45c8, gbc.sp());
        EXPECT(0x7983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0364
        gbc.setState(0x258f, 0x3414, 0xf5f0, 0x5dc5, 0x90d5, 0x5480, 0x0, 0x1);
        gbc.writeMem(0x258f, { 0xb7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3414, gbc.sp());
        EXPECT(0x2590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0365
        gbc.setState(0x8927, 0x8e7, 0xa860, 0x531c, 0x5d99, 0xbdc6, 0x1, 0x1);
        gbc.writeMem(0x8927, { 0xb7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8e7, gbc.sp());
        EXPECT(0x8928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8927));
        // B7 0366
        gbc.setState(0x5bb0, 0xbacc, 0xd340, 0xe009, 0x8fb8, 0xbd80, 0x1, 0x0);
        gbc.writeMem(0x5bb0, { 0xb7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbacc, gbc.sp());
        EXPECT(0x5bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0367
        gbc.setState(0xa0d9, 0x4fd6, 0xcaf0, 0x3283, 0xc9ab, 0x739a, 0x1, 0x0);
        gbc.writeMem(0xa0d9, { 0xb7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4fd6, gbc.sp());
        EXPECT(0xa0da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa0d9));
        // B7 0369
        gbc.setState(0x30fc, 0xd29a, 0xf090, 0x83ec, 0x4e67, 0xb219, 0x1, 0x1);
        gbc.writeMem(0x30fc, { 0xb7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd29a, gbc.sp());
        EXPECT(0x30fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 036A
        gbc.setState(0xcc1a, 0x1b91, 0xb7e0, 0xd0e3, 0xd01, 0xf301, 0x0, 0x0);
        gbc.writeMem(0xcc1a, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1b91, gbc.sp());
        EXPECT(0xcc1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcc1a));
        // B7 036B
        gbc.setState(0xb36f, 0x8236, 0x9970, 0x72db, 0x5556, 0x5dc6, 0x0, 0x1);
        gbc.writeMem(0xb36f, { 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8236, gbc.sp());
        EXPECT(0xb370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb36f));
        // B7 036C
        gbc.setState(0x5bfd, 0x8d21, 0xe4b0, 0xba94, 0x26a9, 0x6ada, 0x1, 0x1);
        gbc.writeMem(0x5bfd, { 0xb7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8d21, gbc.sp());
        EXPECT(0x5bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 036D
        gbc.setState(0x5b0a, 0x59bb, 0x2d00, 0xd93b, 0xde70, 0x1868, 0x1, 0x0);
        gbc.writeMem(0x5b0a, { 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x59bb, gbc.sp());
        EXPECT(0x5b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 036E
        gbc.setState(0x7cbc, 0xa7b6, 0x460, 0x941e, 0xcc6e, 0xbed8, 0x1, 0x0);
        gbc.writeMem(0x7cbc, { 0xb7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa7b6, gbc.sp());
        EXPECT(0x7cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 036F
        gbc.setState(0xa28f, 0xa0d5, 0x55a0, 0x261a, 0x9128, 0x7bd2, 0x1, 0x0);
        gbc.writeMem(0xa28f, { 0xb7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa0d5, gbc.sp());
        EXPECT(0xa290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa28f));
        // B7 0370
        gbc.setState(0xe744, 0xf9ad, 0x16c0, 0x2237, 0x8539, 0xfa8c, 0x1, 0x0);
        gbc.writeMem(0xe744, { 0xb7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf9ad, gbc.sp());
        EXPECT(0xe745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe744));
        // B7 0371
        gbc.setState(0x9860, 0xf996, 0x560, 0xde6e, 0xf754, 0x676a, 0x0, 0x0);
        gbc.writeMem(0x9860, { 0xb7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf996, gbc.sp());
        EXPECT(0x9861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9860));
        // B7 0372
        gbc.setState(0x13ee, 0xe29, 0x5400, 0x1429, 0x10a3, 0x9068, 0x0, 0x0);
        gbc.writeMem(0x13ee, { 0xb7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe29, gbc.sp());
        EXPECT(0x13ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0373
        gbc.setState(0x5544, 0xefea, 0xbf70, 0x785a, 0x3fea, 0x5012, 0x0, 0x1);
        gbc.writeMem(0x5544, { 0xb7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xefea, gbc.sp());
        EXPECT(0x5545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0374
        gbc.setState(0x1841, 0xbcd3, 0x2ca0, 0x5cd6, 0xfd, 0x9dda, 0x1, 0x1);
        gbc.writeMem(0x1841, { 0xb7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbcd3, gbc.sp());
        EXPECT(0x1842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0375
        gbc.setState(0x9865, 0xef71, 0xd660, 0x540c, 0x8e83, 0xa45c, 0x1, 0x1);
        gbc.writeMem(0x9865, { 0xb7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xef71, gbc.sp());
        EXPECT(0x9866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9865));
        // B7 0376
        gbc.setState(0x9270, 0x2e99, 0x8800, 0x1018, 0x1d83, 0x9e34, 0x0, 0x1);
        gbc.writeMem(0x9270, { 0xb7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2e99, gbc.sp());
        EXPECT(0x9271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9270));
        // B7 0377
        gbc.setState(0x4dbf, 0x4db, 0xfe20, 0xd3b0, 0x3320, 0xae95, 0x1, 0x0);
        gbc.writeMem(0x4dbf, { 0xb7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4db, gbc.sp());
        EXPECT(0x4dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0378
        gbc.setState(0xc25a, 0x3be2, 0x7d20, 0xc90c, 0xe216, 0xcc73, 0x0, 0x1);
        gbc.writeMem(0xc25a, { 0xb7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3be2, gbc.sp());
        EXPECT(0xc25b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc25a));
        // B7 0379
        gbc.setState(0xdac5, 0x2b1, 0xabd0, 0xb722, 0x3454, 0x21b1, 0x1, 0x0);
        gbc.writeMem(0xdac5, { 0xb7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2b1, gbc.sp());
        EXPECT(0xdac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdac5));
        // B7 037B
        gbc.setState(0xbaec, 0x7c73, 0x7e10, 0x8aac, 0x4b99, 0xda9b, 0x1, 0x0);
        gbc.writeMem(0xbaec, { 0xb7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7c73, gbc.sp());
        EXPECT(0xbaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbaec));
        // B7 037C
        gbc.setState(0x1d32, 0x3f25, 0x6660, 0x508, 0xbc80, 0xb732, 0x0, 0x1);
        gbc.writeMem(0x1d32, { 0xb7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3f25, gbc.sp());
        EXPECT(0x1d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 037D
        gbc.setState(0x3892, 0xc492, 0xa910, 0x2292, 0x5142, 0xf1ce, 0x0, 0x0);
        gbc.writeMem(0x3892, { 0xb7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc492, gbc.sp());
        EXPECT(0x3893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 037E
        gbc.setState(0x964, 0x6f6f, 0xc860, 0xf395, 0xad8c, 0x4cd6, 0x0, 0x0);
        gbc.writeMem(0x964, { 0xb7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6f6f, gbc.sp());
        EXPECT(0x965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 037F
        gbc.setState(0xab95, 0xcc29, 0x5580, 0x44d8, 0xa313, 0x4f07, 0x1, 0x0);
        gbc.writeMem(0xab95, { 0xb7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcc29, gbc.sp());
        EXPECT(0xab96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xab95));
        // B7 0380
        gbc.setState(0xa74, 0xb264, 0x44b0, 0x6d7e, 0x1186, 0x613, 0x0, 0x1);
        gbc.writeMem(0xa74, { 0xb7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb264, gbc.sp());
        EXPECT(0xa75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0381
        gbc.setState(0xc020, 0x58af, 0xd400, 0x700d, 0xc6ff, 0x57a2, 0x0, 0x1);
        gbc.writeMem(0xc020, { 0xb7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x58af, gbc.sp());
        EXPECT(0xc021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc020));
        // B7 0382
        gbc.setState(0xd182, 0xc36c, 0x3190, 0xbffd, 0x694d, 0x69a3, 0x0, 0x1);
        gbc.writeMem(0xd182, { 0xb7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc36c, gbc.sp());
        EXPECT(0xd183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd182));
        // B7 0383
        gbc.setState(0x72c5, 0x89b8, 0x5310, 0x4c3b, 0x4c13, 0x446a, 0x0, 0x1);
        gbc.writeMem(0x72c5, { 0xb7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x89b8, gbc.sp());
        EXPECT(0x72c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0384
        gbc.setState(0x3d93, 0x3fb0, 0x970, 0x2e14, 0xd614, 0x41d0, 0x1, 0x0);
        gbc.writeMem(0x3d93, { 0xb7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3fb0, gbc.sp());
        EXPECT(0x3d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0385
        gbc.setState(0x2490, 0xe5dd, 0x920, 0x4458, 0xebb, 0x2957, 0x1, 0x1);
        gbc.writeMem(0x2490, { 0xb7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe5dd, gbc.sp());
        EXPECT(0x2491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0386
        gbc.setState(0x3fb5, 0xf2da, 0xb2f0, 0x9b7b, 0xb8f8, 0xb116, 0x0, 0x0);
        gbc.writeMem(0x3fb5, { 0xb7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf2da, gbc.sp());
        EXPECT(0x3fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0387
        gbc.setState(0xcb14, 0xa377, 0xea0, 0x319, 0x139b, 0xcc64, 0x0, 0x1);
        gbc.writeMem(0xcb14, { 0xb7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa377, gbc.sp());
        EXPECT(0xcb15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcb14));
        // B7 0388
        gbc.setState(0x6b9d, 0xc8ca, 0xeff0, 0x5b24, 0xf493, 0x8337, 0x1, 0x0);
        gbc.writeMem(0x6b9d, { 0xb7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc8ca, gbc.sp());
        EXPECT(0x6b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0389
        gbc.setState(0x6f57, 0x3410, 0x4a30, 0x4110, 0x40e2, 0xdabd, 0x1, 0x0);
        gbc.writeMem(0x6f57, { 0xb7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3410, gbc.sp());
        EXPECT(0x6f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 038A
        gbc.setState(0x17ac, 0x3b15, 0x5f30, 0xbaa7, 0x6a98, 0x2908, 0x1, 0x0);
        gbc.writeMem(0x17ac, { 0xb7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3b15, gbc.sp());
        EXPECT(0x17ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 038B
        gbc.setState(0x23c0, 0xaff1, 0x78b0, 0x2775, 0xc821, 0x532f, 0x1, 0x1);
        gbc.writeMem(0x23c0, { 0xb7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xaff1, gbc.sp());
        EXPECT(0x23c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 038C
        gbc.setState(0x7b6d, 0x10b9, 0x29d0, 0x663e, 0xee3d, 0x36e4, 0x0, 0x0);
        gbc.writeMem(0x7b6d, { 0xb7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x10b9, gbc.sp());
        EXPECT(0x7b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 038D
        gbc.setState(0x2f36, 0x9a4a, 0x9170, 0x4af7, 0xd5e5, 0x7e57, 0x0, 0x0);
        gbc.writeMem(0x2f36, { 0xb7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9a4a, gbc.sp());
        EXPECT(0x2f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 038E
        gbc.setState(0x1360, 0x79a, 0x7fe0, 0xbba6, 0x7d92, 0x207d, 0x0, 0x0);
        gbc.writeMem(0x1360, { 0xb7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x79a, gbc.sp());
        EXPECT(0x1361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 038F
        gbc.setState(0x7e8a, 0x50d6, 0x7650, 0xd0fa, 0x14eb, 0xbba4, 0x0, 0x0);
        gbc.writeMem(0x7e8a, { 0xb7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x50d6, gbc.sp());
        EXPECT(0x7e8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0390
        gbc.setState(0x2da7, 0x98a9, 0x64b0, 0x11e, 0xc240, 0x393f, 0x0, 0x1);
        gbc.writeMem(0x2da7, { 0xb7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x98a9, gbc.sp());
        EXPECT(0x2da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0391
        gbc.setState(0x4aef, 0x5040, 0xd600, 0x9d8c, 0x6825, 0xa1e5, 0x0, 0x1);
        gbc.writeMem(0x4aef, { 0xb7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5040, gbc.sp());
        EXPECT(0x4af0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0392
        gbc.setState(0xd53d, 0x3efd, 0xdf00, 0xe00a, 0xf8cb, 0xac6b, 0x0, 0x0);
        gbc.writeMem(0xd53d, { 0xb7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3efd, gbc.sp());
        EXPECT(0xd53e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd53d));
        // B7 0393
        gbc.setState(0x5bb1, 0x8ad0, 0x6bf0, 0xff7e, 0x1eaa, 0x3c89, 0x1, 0x0);
        gbc.writeMem(0x5bb1, { 0xb7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8ad0, gbc.sp());
        EXPECT(0x5bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0394
        gbc.setState(0x2459, 0x644a, 0x6fd0, 0x7a5d, 0x1650, 0x159a, 0x0, 0x0);
        gbc.writeMem(0x2459, { 0xb7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x644a, gbc.sp());
        EXPECT(0x245a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0395
        gbc.setState(0xe319, 0xe186, 0x510, 0x89e0, 0xb737, 0x7573, 0x0, 0x0);
        gbc.writeMem(0xe319, { 0xb7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe186, gbc.sp());
        EXPECT(0xe31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe319));
        // B7 0396
        gbc.setState(0xae80, 0x2e71, 0xf370, 0x80e2, 0x2d76, 0x3a76, 0x1, 0x0);
        gbc.writeMem(0xae80, { 0xb7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2e71, gbc.sp());
        EXPECT(0xae81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xae80));
        // B7 0397
        gbc.setState(0x9dfb, 0x6c57, 0x1580, 0x4579, 0x5ba7, 0x51cd, 0x0, 0x0);
        gbc.writeMem(0x9dfb, { 0xb7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6c57, gbc.sp());
        EXPECT(0x9dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9dfb));
        // B7 0398
        gbc.setState(0x723b, 0xdf03, 0x4b10, 0xaf6e, 0x7ec9, 0x132, 0x0, 0x1);
        gbc.writeMem(0x723b, { 0xb7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdf03, gbc.sp());
        EXPECT(0x723c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 0399
        gbc.setState(0x3265, 0x652b, 0xf4a0, 0x38eb, 0x3eb8, 0xf75d, 0x1, 0x0);
        gbc.writeMem(0x3265, { 0xb7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x652b, gbc.sp());
        EXPECT(0x3266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 039A
        gbc.setState(0xdc1f, 0x8c4f, 0xbf70, 0x1417, 0x9f8e, 0xea6d, 0x0, 0x1);
        gbc.writeMem(0xdc1f, { 0xb7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8c4f, gbc.sp());
        EXPECT(0xdc20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdc1f));
        // B7 039B
        gbc.setState(0xac1, 0x7f07, 0xdb10, 0x2b69, 0x78d8, 0x623e, 0x1, 0x1);
        gbc.writeMem(0xac1, { 0xb7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7f07, gbc.sp());
        EXPECT(0xac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 039C
        gbc.setState(0x492c, 0x5a1f, 0x4a30, 0x76cb, 0x9ecd, 0x5490, 0x0, 0x1);
        gbc.writeMem(0x492c, { 0xb7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5a1f, gbc.sp());
        EXPECT(0x492d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 039D
        gbc.setState(0x7024, 0x1894, 0xf910, 0x4922, 0x152f, 0x83f4, 0x1, 0x1);
        gbc.writeMem(0x7024, { 0xb7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1894, gbc.sp());
        EXPECT(0x7025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 039E
        gbc.setState(0xcfd4, 0x638b, 0xb440, 0x3095, 0xb3a, 0x9cba, 0x0, 0x1);
        gbc.writeMem(0xcfd4, { 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x638b, gbc.sp());
        EXPECT(0xcfd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcfd4));
        // B7 039F
        gbc.setState(0x4862, 0x3ed6, 0xdbb0, 0x3062, 0x2f82, 0x96a8, 0x0, 0x0);
        gbc.writeMem(0x4862, { 0xb7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3ed6, gbc.sp());
        EXPECT(0x4863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03A1
        gbc.setState(0x4116, 0xff14, 0x7e80, 0x20f9, 0x3419, 0xc058, 0x0, 0x1);
        gbc.writeMem(0x4116, { 0xb7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xff14, gbc.sp());
        EXPECT(0x4117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03A2
        gbc.setState(0xb1d3, 0x653c, 0xf9f0, 0x1c95, 0x24f5, 0x1fdc, 0x1, 0x1);
        gbc.writeMem(0xb1d3, { 0xb7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x653c, gbc.sp());
        EXPECT(0xb1d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb1d3));
        // B7 03A3
        gbc.setState(0xe747, 0xda89, 0x9ce0, 0x69e6, 0xac0, 0xdc9d, 0x0, 0x0);
        gbc.writeMem(0xe747, { 0xb7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xda89, gbc.sp());
        EXPECT(0xe748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe747));
        // B7 03A4
        gbc.setState(0xbe31, 0xaa6f, 0x7820, 0x948d, 0x8427, 0xc4da, 0x1, 0x1);
        gbc.writeMem(0xbe31, { 0xb7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xaa6f, gbc.sp());
        EXPECT(0xbe32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbe31));
        // B7 03A5
        gbc.setState(0xb4e5, 0xccc9, 0x37b0, 0xe15e, 0x1bda, 0x5b9b, 0x0, 0x1);
        gbc.writeMem(0xb4e5, { 0xb7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xccc9, gbc.sp());
        EXPECT(0xb4e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xb4e5));
        // B7 03A6
        gbc.setState(0xa253, 0xc471, 0xca30, 0x5288, 0x9f9a, 0xe705, 0x1, 0x1);
        gbc.writeMem(0xa253, { 0xb7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc471, gbc.sp());
        EXPECT(0xa254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa253));
        // B7 03A7
        gbc.setState(0x314b, 0xc894, 0x7730, 0x520e, 0x21a3, 0x2767, 0x1, 0x0);
        gbc.writeMem(0x314b, { 0xb7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc894, gbc.sp());
        EXPECT(0x314c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03A8
        gbc.setState(0x2f4, 0x2df8, 0x56c0, 0xface, 0xe908, 0x4d12, 0x0, 0x1);
        gbc.writeMem(0x2f4, { 0xb7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2df8, gbc.sp());
        EXPECT(0x2f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03AB
        gbc.setState(0x271a, 0xeb49, 0x2c30, 0xaa19, 0xdb99, 0x70f5, 0x1, 0x1);
        gbc.writeMem(0x271a, { 0xb7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xeb49, gbc.sp());
        EXPECT(0x271b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03AC
        gbc.setState(0x804, 0xc5ef, 0xb780, 0x830, 0x8c79, 0x236a, 0x1, 0x1);
        gbc.writeMem(0x804, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc5ef, gbc.sp());
        EXPECT(0x805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03AD
        gbc.setState(0xc703, 0xf030, 0x6400, 0x91fa, 0x6ee9, 0x33b7, 0x0, 0x1);
        gbc.writeMem(0xc703, { 0xb7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf030, gbc.sp());
        EXPECT(0xc704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc703));
        // B7 03AE
        gbc.setState(0xae61, 0xe534, 0xc110, 0xf443, 0x1a7f, 0x8a35, 0x1, 0x0);
        gbc.writeMem(0xae61, { 0xb7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe534, gbc.sp());
        EXPECT(0xae62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xae61));
        // B7 03AF
        gbc.setState(0xe81c, 0x92c2, 0xa860, 0x718e, 0x400a, 0x2771, 0x0, 0x1);
        gbc.writeMem(0xe81c, { 0xb7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x92c2, gbc.sp());
        EXPECT(0xe81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe81c));
        // B7 03B1
        gbc.setState(0xaac9, 0xc34d, 0x9660, 0x9efd, 0x81fe, 0x37c3, 0x1, 0x1);
        gbc.writeMem(0xaac9, { 0xb7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc34d, gbc.sp());
        EXPECT(0xaaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xaac9));
        // B7 03B2
        gbc.setState(0xe4dc, 0xdd63, 0xb550, 0x411b, 0x5dac, 0x8647, 0x0, 0x0);
        gbc.writeMem(0xe4dc, { 0xb7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdd63, gbc.sp());
        EXPECT(0xe4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe4dc));
        // B7 03B3
        gbc.setState(0x18c0, 0xb150, 0x2bc0, 0x7d9c, 0x8129, 0x9c85, 0x1, 0x1);
        gbc.writeMem(0x18c0, { 0xb7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb150, gbc.sp());
        EXPECT(0x18c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03B4
        gbc.setState(0x6870, 0x770, 0x54d0, 0xa5ec, 0xfff0, 0xf60a, 0x0, 0x0);
        gbc.writeMem(0x6870, { 0xb7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x770, gbc.sp());
        EXPECT(0x6871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03B5
        gbc.setState(0x6966, 0x28e2, 0x1290, 0x4df7, 0x3a5b, 0x7fd7, 0x1, 0x1);
        gbc.writeMem(0x6966, { 0xb7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x28e2, gbc.sp());
        EXPECT(0x6967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03B6
        gbc.setState(0x1c47, 0x20ee, 0xf2d0, 0xf74b, 0x9bd9, 0xd187, 0x0, 0x0);
        gbc.writeMem(0x1c47, { 0xb7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x20ee, gbc.sp());
        EXPECT(0x1c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03B7
        gbc.setState(0xbe73, 0xc624, 0x6690, 0x2823, 0x455d, 0x68b, 0x1, 0x0);
        gbc.writeMem(0xbe73, { 0xb7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc624, gbc.sp());
        EXPECT(0xbe74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbe73));
        // B7 03B8
        gbc.setState(0x37d3, 0x9589, 0x69b0, 0xcdb1, 0x2553, 0x2beb, 0x0, 0x1);
        gbc.writeMem(0x37d3, { 0xb7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9589, gbc.sp());
        EXPECT(0x37d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03B9
        gbc.setState(0x5b33, 0x117d, 0x860, 0x7f4b, 0xffc1, 0x2f6b, 0x1, 0x0);
        gbc.writeMem(0x5b33, { 0xb7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x117d, gbc.sp());
        EXPECT(0x5b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03BA
        gbc.setState(0x2bb8, 0xb59, 0xd480, 0x9446, 0x42a5, 0xd72d, 0x0, 0x0);
        gbc.writeMem(0x2bb8, { 0xb7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb59, gbc.sp());
        EXPECT(0x2bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03BB
        gbc.setState(0xa91d, 0xfdc2, 0xd130, 0x5fd, 0x2d4b, 0xbc2b, 0x1, 0x1);
        gbc.writeMem(0xa91d, { 0xb7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfdc2, gbc.sp());
        EXPECT(0xa91e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa91d));
        // B7 03BC
        gbc.setState(0xcefe, 0xb64f, 0xe250, 0x6331, 0x10f3, 0x1759, 0x1, 0x1);
        gbc.writeMem(0xcefe, { 0xb7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb64f, gbc.sp());
        EXPECT(0xceff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcefe));
        // B7 03BD
        gbc.setState(0x65cd, 0xe6df, 0xdcd0, 0xd8cb, 0xf3af, 0x7b07, 0x1, 0x0);
        gbc.writeMem(0x65cd, { 0xb7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe6df, gbc.sp());
        EXPECT(0x65ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03BE
        gbc.setState(0x56cb, 0x61d, 0xd490, 0xb83c, 0x7bed, 0x618e, 0x1, 0x0);
        gbc.writeMem(0x56cb, { 0xb7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x61d, gbc.sp());
        EXPECT(0x56cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03BF
        gbc.setState(0x3d39, 0x7383, 0xd7b0, 0x50c, 0xb390, 0x9ef3, 0x0, 0x1);
        gbc.writeMem(0x3d39, { 0xb7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7383, gbc.sp());
        EXPECT(0x3d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03C0
        gbc.setState(0x24fa, 0x602b, 0x6ca0, 0x5d6e, 0x63a4, 0x19e5, 0x1, 0x0);
        gbc.writeMem(0x24fa, { 0xb7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x602b, gbc.sp());
        EXPECT(0x24fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03C1
        gbc.setState(0x456d, 0xacaf, 0xbf0, 0xad6c, 0x1574, 0xa81a, 0x1, 0x1);
        gbc.writeMem(0x456d, { 0xb7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xacaf, gbc.sp());
        EXPECT(0x456e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03C2
        gbc.setState(0x9eb8, 0x7fae, 0x9910, 0x85eb, 0xcdd4, 0xe0f1, 0x0, 0x0);
        gbc.writeMem(0x9eb8, { 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7fae, gbc.sp());
        EXPECT(0x9eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9eb8));
        // B7 03C3
        gbc.setState(0x28a0, 0xf4ac, 0x4ac0, 0xf79, 0x8467, 0x433f, 0x0, 0x1);
        gbc.writeMem(0x28a0, { 0xb7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf4ac, gbc.sp());
        EXPECT(0x28a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03C4
        gbc.setState(0x30bf, 0xa30e, 0xa420, 0xc309, 0xec16, 0xe7ca, 0x0, 0x1);
        gbc.writeMem(0x30bf, { 0xb7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa30e, gbc.sp());
        EXPECT(0x30c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03C5
        gbc.setState(0x4e94, 0xa5d, 0x6c80, 0x49ce, 0x6ff4, 0xacbb, 0x1, 0x0);
        gbc.writeMem(0x4e94, { 0xb7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa5d, gbc.sp());
        EXPECT(0x4e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03C6
        gbc.setState(0x1541, 0xf225, 0xdf90, 0x8c20, 0xb435, 0x5d06, 0x1, 0x0);
        gbc.writeMem(0x1541, { 0xb7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf225, gbc.sp());
        EXPECT(0x1542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03C7
        gbc.setState(0x920d, 0x23a5, 0xb6d0, 0xe701, 0x2471, 0x9c1, 0x0, 0x0);
        gbc.writeMem(0x920d, { 0xb7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x23a5, gbc.sp());
        EXPECT(0x920e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x920d));
        // B7 03C8
        gbc.setState(0x7f4c, 0xe5d5, 0xf230, 0x67ba, 0xb0ce, 0x80e8, 0x0, 0x1);
        gbc.writeMem(0x7f4c, { 0xb7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe5d5, gbc.sp());
        EXPECT(0x7f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03C9
        gbc.setState(0x421a, 0x2946, 0x6f00, 0x72cd, 0xf96f, 0x5b76, 0x0, 0x0);
        gbc.writeMem(0x421a, { 0xb7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2946, gbc.sp());
        EXPECT(0x421b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03CA
        gbc.setState(0x3c8d, 0x8b2e, 0xbc80, 0x4bd4, 0x6e46, 0x4865, 0x0, 0x0);
        gbc.writeMem(0x3c8d, { 0xb7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8b2e, gbc.sp());
        EXPECT(0x3c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03CB
        gbc.setState(0xe26d, 0x88cb, 0xc7b0, 0xef32, 0x4140, 0x88d1, 0x0, 0x0);
        gbc.writeMem(0xe26d, { 0xb7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x88cb, gbc.sp());
        EXPECT(0xe26e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe26d));
        // B7 03CC
        gbc.setState(0xc839, 0xb3ac, 0xa40, 0xfd14, 0x3c8c, 0x6d8, 0x1, 0x0);
        gbc.writeMem(0xc839, { 0xb7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb3ac, gbc.sp());
        EXPECT(0xc83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc839));
        // B7 03CD
        gbc.setState(0x5e59, 0xb815, 0xac20, 0xa37e, 0xf61d, 0xaf82, 0x1, 0x0);
        gbc.writeMem(0x5e59, { 0xb7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb815, gbc.sp());
        EXPECT(0x5e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03CE
        gbc.setState(0x1cf3, 0x1f16, 0x6720, 0xec35, 0x2a64, 0xdd17, 0x1, 0x1);
        gbc.writeMem(0x1cf3, { 0xb7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1f16, gbc.sp());
        EXPECT(0x1cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03CF
        gbc.setState(0x4e67, 0x5df, 0xa810, 0x33d4, 0xe6e6, 0x2074, 0x1, 0x1);
        gbc.writeMem(0x4e67, { 0xb7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5df, gbc.sp());
        EXPECT(0x4e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03D0
        gbc.setState(0xa0db, 0xcfb, 0x830, 0xc7a5, 0xe377, 0x96dd, 0x0, 0x0);
        gbc.writeMem(0xa0db, { 0xb7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcfb, gbc.sp());
        EXPECT(0xa0dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa0db));
        // B7 03D1
        gbc.setState(0x7ac2, 0xe2e4, 0x2350, 0x682b, 0x3fa2, 0x2d02, 0x0, 0x1);
        gbc.writeMem(0x7ac2, { 0xb7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe2e4, gbc.sp());
        EXPECT(0x7ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03D2
        gbc.setState(0x593a, 0xe7a9, 0x7930, 0x2516, 0x3642, 0xebf8, 0x0, 0x1);
        gbc.writeMem(0x593a, { 0xb7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe7a9, gbc.sp());
        EXPECT(0x593b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03D3
        gbc.setState(0x4bad, 0x1238, 0x8000, 0xba37, 0x7b9, 0x9611, 0x0, 0x0);
        gbc.writeMem(0x4bad, { 0xb7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1238, gbc.sp());
        EXPECT(0x4bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03D4
        gbc.setState(0x7e09, 0xe9d7, 0x1c60, 0x5ee8, 0xbe87, 0xbb92, 0x0, 0x1);
        gbc.writeMem(0x7e09, { 0xb7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe9d7, gbc.sp());
        EXPECT(0x7e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03D5
        gbc.setState(0x9c9a, 0xd83d, 0x5f80, 0x138c, 0xa17, 0x2, 0x0, 0x0);
        gbc.writeMem(0x9c9a, { 0xb7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd83d, gbc.sp());
        EXPECT(0x9c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9c9a));
        // B7 03D6
        gbc.setState(0xbcc7, 0x2b06, 0x5970, 0x8f7f, 0xc68c, 0x97a8, 0x0, 0x1);
        gbc.writeMem(0xbcc7, { 0xb7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2b06, gbc.sp());
        EXPECT(0xbcc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbcc7));
        // B7 03D7
        gbc.setState(0xc2df, 0x3bcb, 0x3980, 0x63, 0x384c, 0xd91, 0x1, 0x0);
        gbc.writeMem(0xc2df, { 0xb7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3bcb, gbc.sp());
        EXPECT(0xc2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc2df));
        // B7 03D8
        gbc.setState(0xd2f9, 0x50bc, 0xb200, 0x68d0, 0xfcbd, 0x35e5, 0x1, 0x0);
        gbc.writeMem(0xd2f9, { 0xb7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x50bc, gbc.sp());
        EXPECT(0xd2fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd2f9));
        // B7 03D9
        gbc.setState(0x2ba, 0x32e1, 0xc4d0, 0x406e, 0x6950, 0x4ca7, 0x0, 0x1);
        gbc.writeMem(0x2ba, { 0xb7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x32e1, gbc.sp());
        EXPECT(0x2bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03DA
        gbc.setState(0x5207, 0xa416, 0x1810, 0x38de, 0x39b9, 0x5e56, 0x0, 0x0);
        gbc.writeMem(0x5207, { 0xb7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa416, gbc.sp());
        EXPECT(0x5208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03DB
        gbc.setState(0xdc55, 0x4cda, 0xd1c0, 0x4359, 0x7c59, 0xffb, 0x0, 0x0);
        gbc.writeMem(0xdc55, { 0xb7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4cda, gbc.sp());
        EXPECT(0xdc56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xdc55));
        // B7 03DC
        gbc.setState(0x552, 0x9d93, 0x910, 0x1b35, 0x5a70, 0x85f8, 0x0, 0x0);
        gbc.writeMem(0x552, { 0xb7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9d93, gbc.sp());
        EXPECT(0x553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03DD
        gbc.setState(0xe580, 0xca54, 0xe4d0, 0x7585, 0x7809, 0x2b9, 0x1, 0x1);
        gbc.writeMem(0xe580, { 0xb7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xca54, gbc.sp());
        EXPECT(0xe581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe580));
        // B7 03DE
        gbc.setState(0x1f0, 0xa474, 0x9960, 0xd90b, 0x7dac, 0xea5f, 0x1, 0x1);
        gbc.writeMem(0x1f0, { 0xb7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa474, gbc.sp());
        EXPECT(0x1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03DF
        gbc.setState(0xbc85, 0xfe31, 0xa1f0, 0xd539, 0x4567, 0xb49c, 0x1, 0x0);
        gbc.writeMem(0xbc85, { 0xb7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfe31, gbc.sp());
        EXPECT(0xbc86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbc85));
        // B7 03E0
        gbc.setState(0x38f6, 0xe4b9, 0x2870, 0x5c15, 0x8947, 0xca77, 0x0, 0x1);
        gbc.writeMem(0x38f6, { 0xb7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe4b9, gbc.sp());
        EXPECT(0x38f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03E1
        gbc.setState(0xbbfd, 0xc48f, 0x4ed0, 0xa84a, 0xbb4a, 0x6808, 0x0, 0x1);
        gbc.writeMem(0xbbfd, { 0xb7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc48f, gbc.sp());
        EXPECT(0xbbfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xbbfd));
        // B7 03E2
        gbc.setState(0xd3f8, 0xb3c9, 0xff80, 0x8047, 0x357, 0x2db7, 0x0, 0x0);
        gbc.writeMem(0xd3f8, { 0xb7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb3c9, gbc.sp());
        EXPECT(0xd3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd3f8));
        // B7 03E3
        gbc.setState(0x2985, 0x5ba4, 0xb040, 0xf8e7, 0xe7f4, 0x5f89, 0x0, 0x1);
        gbc.writeMem(0x2985, { 0xb7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5ba4, gbc.sp());
        EXPECT(0x2986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03E4
        gbc.setState(0x3615, 0x1816, 0x8830, 0x55e8, 0x2b9d, 0xa22b, 0x0, 0x1);
        gbc.writeMem(0x3615, { 0xb7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1816, gbc.sp());
        EXPECT(0x3616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03E5
        gbc.setState(0x2bd4, 0xcb18, 0x6100, 0x7177, 0x4b21, 0xcd45, 0x0, 0x1);
        gbc.writeMem(0x2bd4, { 0xb7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcb18, gbc.sp());
        EXPECT(0x2bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B7 03E6
        gbc.setState(0x9afe, 0xb85e, 0xcfc0, 0xe2df, 0x2ce7, 0x66ea, 0x0, 0x0);
        gbc.writeMem(0x9afe, { 0xb7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb85e, gbc.sp());
        EXPECT(0x9aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9afe));
        // B7 03E7
        gbc.setState(0x21e9, 0x4d7b, 0x4610, 0x5847, 0xaaf8, 0x83ca, 0x1, 0x0);
        gbc.writeMem(0x21e9, { 0xb7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4d7b, gbc.sp());
        EXPECT(0x21ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
