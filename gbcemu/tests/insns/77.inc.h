    TEST(gbcemu, opcode_77) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 77 0001
        gbc.setState(0xc99b, 0x536c, 0x57c0, 0x6c98, 0xafab, 0x81f8, 0x1, 0x1);
        gbc.writeMem(0x81f8, { 0x0 });
        gbc.writeMem(0xc99b, { 0x77 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x536c, gbc.sp());
        EXPECT(0xc99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x81f8));
        EXPECT(0x77, gbc.readMem(0xc99b));
        // 77 0007
        gbc.setState(0x2f0e, 0x2063, 0x3e30, 0x350a, 0x549d, 0xf6bf, 0x1, 0x0);
        gbc.writeMem(0x2f0e, { 0x77 });
        gbc.writeMem(0xf6bf, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2063, gbc.sp());
        EXPECT(0x2f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xf6bf));
        // 77 0009
        gbc.setState(0x262c, 0xbed2, 0x2e10, 0x9263, 0xa2f, 0xedf2, 0x1, 0x1);
        gbc.writeMem(0x262c, { 0x77 });
        gbc.writeMem(0xedf2, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbed2, gbc.sp());
        EXPECT(0x262d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xedf2));
        // 77 000A
        gbc.setState(0x8b14, 0x7cc4, 0x950, 0x65fb, 0x10a7, 0x9845, 0x1, 0x0);
        gbc.writeMem(0x8b14, { 0x77 });
        gbc.writeMem(0x9845, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7cc4, gbc.sp());
        EXPECT(0x8b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8b14));
        EXPECT(0x9, gbc.readMem(0x9845));
        // 77 000B
        gbc.setState(0xc52c, 0xa7ad, 0x8050, 0xd996, 0x93fb, 0xd213, 0x0, 0x0);
        gbc.writeMem(0xc52c, { 0x77 });
        gbc.writeMem(0xd213, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa7ad, gbc.sp());
        EXPECT(0xc52d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc52c));
        EXPECT(0x80, gbc.readMem(0xd213));
        // 77 000D
        gbc.setState(0x1af0, 0xa043, 0x27c0, 0xdc1b, 0xd8ed, 0x96e8, 0x0, 0x1);
        gbc.writeMem(0x1af0, { 0x77 });
        gbc.writeMem(0x96e8, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa043, gbc.sp());
        EXPECT(0x1af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x96e8));
        // 77 000F
        gbc.setState(0x93cd, 0x4fb1, 0xf0a0, 0x34e0, 0x1985, 0xa2cb, 0x0, 0x1);
        gbc.writeMem(0x93cd, { 0x77 });
        gbc.writeMem(0xa2cb, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4fb1, gbc.sp());
        EXPECT(0x93ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x93cd));
        EXPECT(0xf0, gbc.readMem(0xa2cb));
        // 77 0010
        gbc.setState(0x1628, 0x85a4, 0x360, 0x7312, 0xa483, 0xd0e0, 0x0, 0x0);
        gbc.writeMem(0x1628, { 0x77 });
        gbc.writeMem(0xd0e0, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x85a4, gbc.sp());
        EXPECT(0x1629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd0e0));
        // 77 0011
        gbc.setState(0xd7a3, 0x1394, 0x30, 0xcaf3, 0xca09, 0xc224, 0x0, 0x0);
        gbc.writeMem(0xc224, { 0x0 });
        gbc.writeMem(0xd7a3, { 0x77 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1394, gbc.sp());
        EXPECT(0xd7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc224));
        EXPECT(0x77, gbc.readMem(0xd7a3));
        // 77 0013
        gbc.setState(0x1598, 0xb0f8, 0x1530, 0xf1f5, 0x1f4b, 0x8967, 0x1, 0x1);
        gbc.writeMem(0x1598, { 0x77 });
        gbc.writeMem(0x8967, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb0f8, gbc.sp());
        EXPECT(0x1599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8967));
        // 77 0014
        gbc.setState(0x29ee, 0xbc1c, 0xde70, 0xd781, 0x1047, 0xf5f9, 0x0, 0x0);
        gbc.writeMem(0x29ee, { 0x77 });
        gbc.writeMem(0xf5f9, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbc1c, gbc.sp());
        EXPECT(0x29ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xf5f9));
        // 77 0016
        gbc.setState(0x1d22, 0xe383, 0xed40, 0xc0fb, 0x8e03, 0xbddd, 0x1, 0x0);
        gbc.writeMem(0x1d22, { 0x77 });
        gbc.writeMem(0xbddd, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe383, gbc.sp());
        EXPECT(0x1d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xbddd));
        // 77 001B
        gbc.setState(0x72f, 0x314f, 0x90d0, 0x34b4, 0xbed5, 0x90c6, 0x1, 0x1);
        gbc.writeMem(0x72f, { 0x77 });
        gbc.writeMem(0x90c6, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x314f, gbc.sp());
        EXPECT(0x730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x90c6));
        // 77 0020
        gbc.setState(0x4fd6, 0xee23, 0x1bf0, 0x985e, 0x9c72, 0x801a, 0x0, 0x1);
        gbc.writeMem(0x4fd6, { 0x77 });
        gbc.writeMem(0x801a, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xee23, gbc.sp());
        EXPECT(0x4fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x801a));
        // 77 0021
        gbc.setState(0x7db1, 0x1fb, 0x1f60, 0xdc12, 0x7837, 0xe44a, 0x0, 0x1);
        gbc.writeMem(0x7db1, { 0x77 });
        gbc.writeMem(0xe44a, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1fb, gbc.sp());
        EXPECT(0x7db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xe44a));
        // 77 0022
        gbc.setState(0xa5ad, 0xbb8f, 0x4960, 0x9fea, 0xefb, 0x97f6, 0x0, 0x0);
        gbc.writeMem(0x97f6, { 0x0 });
        gbc.writeMem(0xa5ad, { 0x77 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbb8f, gbc.sp());
        EXPECT(0xa5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x97f6));
        EXPECT(0x77, gbc.readMem(0xa5ad));
        // 77 0023
        gbc.setState(0x16ea, 0xb672, 0x9a0, 0x6dda, 0xc318, 0x821e, 0x0, 0x1);
        gbc.writeMem(0x16ea, { 0x77 });
        gbc.writeMem(0x821e, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb672, gbc.sp());
        EXPECT(0x16eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x821e));
        // 77 0025
        gbc.setState(0xc4b8, 0x2787, 0x4ac0, 0x67c3, 0x95c3, 0xcd2d, 0x1, 0x1);
        gbc.writeMem(0xc4b8, { 0x77 });
        gbc.writeMem(0xcd2d, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2787, gbc.sp());
        EXPECT(0xc4b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc4b8));
        EXPECT(0x4a, gbc.readMem(0xcd2d));
        // 77 002A
        gbc.setState(0x87c9, 0xb9be, 0x1220, 0x13ad, 0x3d2c, 0x9ef5, 0x0, 0x0);
        gbc.writeMem(0x87c9, { 0x77 });
        gbc.writeMem(0x9ef5, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb9be, gbc.sp());
        EXPECT(0x87ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x87c9));
        EXPECT(0x12, gbc.readMem(0x9ef5));
        // 77 002B
        gbc.setState(0x1ceb, 0xbc59, 0x6270, 0x9142, 0xbb1c, 0x9fb8, 0x1, 0x0);
        gbc.writeMem(0x1ceb, { 0x77 });
        gbc.writeMem(0x9fb8, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbc59, gbc.sp());
        EXPECT(0x1cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x9fb8));
        // 77 002C
        gbc.setState(0x6971, 0xa186, 0x34f0, 0x3054, 0x7082, 0xe740, 0x1, 0x1);
        gbc.writeMem(0x6971, { 0x77 });
        gbc.writeMem(0xe740, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa186, gbc.sp());
        EXPECT(0x6972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xe740));
        // 77 002D
        gbc.setState(0xc271, 0x9cb8, 0x3e80, 0x10cc, 0xb3d2, 0xef60, 0x0, 0x0);
        gbc.writeMem(0xc271, { 0x77 });
        gbc.writeMem(0xef60, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9cb8, gbc.sp());
        EXPECT(0xc272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc271));
        EXPECT(0x3e, gbc.readMem(0xef60));
        // 77 002E
        gbc.setState(0xb42, 0x881e, 0x6c90, 0x420, 0x5bfd, 0xd2ee, 0x1, 0x0);
        gbc.writeMem(0xb42, { 0x77 });
        gbc.writeMem(0xd2ee, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x881e, gbc.sp());
        EXPECT(0xb43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd2ee));
        // 77 0031
        gbc.setState(0x9c27, 0xffec, 0x7400, 0x2b1c, 0xebbd, 0xb7c9, 0x1, 0x0);
        gbc.writeMem(0x9c27, { 0x77 });
        gbc.writeMem(0xb7c9, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xffec, gbc.sp());
        EXPECT(0x9c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9c27));
        EXPECT(0x74, gbc.readMem(0xb7c9));
        // 77 0032
        gbc.setState(0xbbf3, 0xf851, 0xb680, 0x5c08, 0x3546, 0xd366, 0x1, 0x0);
        gbc.writeMem(0xbbf3, { 0x77 });
        gbc.writeMem(0xd366, { 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf851, gbc.sp());
        EXPECT(0xbbf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbbf3));
        EXPECT(0xb6, gbc.readMem(0xd366));
        // 77 0033
        gbc.setState(0xed7a, 0xd489, 0x5710, 0x8f30, 0xcc57, 0xefd4, 0x0, 0x0);
        gbc.writeMem(0xed7a, { 0x77 });
        gbc.writeMem(0xefd4, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd489, gbc.sp());
        EXPECT(0xed7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xed7a));
        EXPECT(0x57, gbc.readMem(0xefd4));
        // 77 0034
        gbc.setState(0x2cc8, 0xd175, 0x96b0, 0xc2b9, 0x8a03, 0xf29a, 0x1, 0x0);
        gbc.writeMem(0x2cc8, { 0x77 });
        gbc.writeMem(0xf29a, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd175, gbc.sp());
        EXPECT(0x2cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xf29a));
        // 77 0036
        gbc.setState(0xa755, 0x5cc8, 0x67e0, 0x1049, 0xfdb2, 0xcd97, 0x0, 0x1);
        gbc.writeMem(0xa755, { 0x77 });
        gbc.writeMem(0xcd97, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5cc8, gbc.sp());
        EXPECT(0xa756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa755));
        EXPECT(0x67, gbc.readMem(0xcd97));
        // 77 0039
        gbc.setState(0x1c3b, 0xce12, 0x37d0, 0x864f, 0xaeac, 0xe2ba, 0x0, 0x0);
        gbc.writeMem(0x1c3b, { 0x77 });
        gbc.writeMem(0xe2ba, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xce12, gbc.sp());
        EXPECT(0x1c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe2ba));
        // 77 003A
        gbc.setState(0x8ae8, 0xcabc, 0xa410, 0xe073, 0x5b4e, 0xea97, 0x0, 0x1);
        gbc.writeMem(0x8ae8, { 0x77 });
        gbc.writeMem(0xea97, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcabc, gbc.sp());
        EXPECT(0x8ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8ae8));
        EXPECT(0xa4, gbc.readMem(0xea97));
        // 77 003B
        gbc.setState(0xc276, 0xf7d4, 0xc6f0, 0xd77d, 0x93a7, 0xc17d, 0x0, 0x0);
        gbc.writeMem(0xc17d, { 0x0 });
        gbc.writeMem(0xc276, { 0x77 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf7d4, gbc.sp());
        EXPECT(0xc277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc17d));
        EXPECT(0x77, gbc.readMem(0xc276));
        // 77 003D
        gbc.setState(0x27ab, 0x630a, 0xb4d0, 0xa7cd, 0x6e52, 0xaad8, 0x1, 0x0);
        gbc.writeMem(0x27ab, { 0x77 });
        gbc.writeMem(0xaad8, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x630a, gbc.sp());
        EXPECT(0x27ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xaad8));
        // 77 003F
        gbc.setState(0x40b8, 0x4e79, 0x9690, 0xcd7c, 0xa983, 0xa139, 0x0, 0x1);
        gbc.writeMem(0x40b8, { 0x77 });
        gbc.writeMem(0xa139, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4e79, gbc.sp());
        EXPECT(0x40b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xa139));
        // 77 0041
        gbc.setState(0x6228, 0x51c, 0x8170, 0xafa8, 0xd122, 0xfc8f, 0x0, 0x1);
        gbc.writeMem(0x6228, { 0x77 });
        gbc.writeMem(0xfc8f, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x51c, gbc.sp());
        EXPECT(0x6229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xfc8f));
        // 77 0042
        gbc.setState(0x4f99, 0x12b3, 0x6d00, 0x1d4c, 0x2d0a, 0xe4c6, 0x0, 0x0);
        gbc.writeMem(0x4f99, { 0x77 });
        gbc.writeMem(0xe4c6, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x12b3, gbc.sp());
        EXPECT(0x4f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe4c6));
        // 77 0047
        gbc.setState(0x763b, 0x17c2, 0x7e60, 0xdd9d, 0xe64d, 0xd3cd, 0x1, 0x0);
        gbc.writeMem(0x763b, { 0x77 });
        gbc.writeMem(0xd3cd, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x17c2, gbc.sp());
        EXPECT(0x763c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd3cd));
        // 77 0048
        gbc.setState(0x7641, 0x7b31, 0xce40, 0xd83, 0x9698, 0xd02e, 0x1, 0x0);
        gbc.writeMem(0x7641, { 0x77 });
        gbc.writeMem(0xd02e, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7b31, gbc.sp());
        EXPECT(0x7642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xd02e));
        // 77 004A
        gbc.setState(0xd24c, 0xedab, 0x5e50, 0x2f82, 0x15d4, 0xdd90, 0x0, 0x0);
        gbc.writeMem(0xd24c, { 0x77 });
        gbc.writeMem(0xdd90, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xedab, gbc.sp());
        EXPECT(0xd24d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd24c));
        EXPECT(0x5e, gbc.readMem(0xdd90));
        // 77 004D
        gbc.setState(0xe7fb, 0x756f, 0x4960, 0x2634, 0xb177, 0xb436, 0x1, 0x1);
        gbc.writeMem(0xb436, { 0x0 });
        gbc.writeMem(0xe7fb, { 0x77 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x756f, gbc.sp());
        EXPECT(0xe7fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb436));
        EXPECT(0x77, gbc.readMem(0xe7fb));
        // 77 004F
        gbc.setState(0x35a4, 0x3ae2, 0x63a0, 0xf784, 0x4a03, 0xc0bd, 0x1, 0x1);
        gbc.writeMem(0x35a4, { 0x77 });
        gbc.writeMem(0xc0bd, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3ae2, gbc.sp());
        EXPECT(0x35a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xc0bd));
        // 77 0051
        gbc.setState(0x4466, 0x38af, 0x1140, 0x15e2, 0x86bf, 0xf0e3, 0x1, 0x0);
        gbc.writeMem(0x4466, { 0x77 });
        gbc.writeMem(0xf0e3, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x38af, gbc.sp());
        EXPECT(0x4467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xf0e3));
        // 77 0054
        gbc.setState(0xa171, 0x4099, 0x5ca0, 0xa9f5, 0xd5c6, 0x8c6d, 0x0, 0x0);
        gbc.writeMem(0x8c6d, { 0x0 });
        gbc.writeMem(0xa171, { 0x77 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4099, gbc.sp());
        EXPECT(0xa172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x8c6d));
        EXPECT(0x77, gbc.readMem(0xa171));
        // 77 0055
        gbc.setState(0xa4a6, 0x7744, 0xbda0, 0xeec0, 0x2ad9, 0xe8ed, 0x0, 0x1);
        gbc.writeMem(0xa4a6, { 0x77 });
        gbc.writeMem(0xe8ed, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7744, gbc.sp());
        EXPECT(0xa4a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa4a6));
        EXPECT(0xbd, gbc.readMem(0xe8ed));
        // 77 0056
        gbc.setState(0x9ea7, 0xcfbe, 0xa1a0, 0x8629, 0x54e1, 0xbe8c, 0x1, 0x0);
        gbc.writeMem(0x9ea7, { 0x77 });
        gbc.writeMem(0xbe8c, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcfbe, gbc.sp());
        EXPECT(0x9ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9ea7));
        EXPECT(0xa1, gbc.readMem(0xbe8c));
        // 77 0057
        gbc.setState(0x9172, 0x885, 0x3250, 0x4763, 0x15df, 0xc9c7, 0x0, 0x0);
        gbc.writeMem(0x9172, { 0x77 });
        gbc.writeMem(0xc9c7, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x885, gbc.sp());
        EXPECT(0x9173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9172));
        EXPECT(0x32, gbc.readMem(0xc9c7));
        // 77 0058
        gbc.setState(0xc32b, 0xea3, 0x2460, 0x1819, 0xce7d, 0x91ca, 0x1, 0x0);
        gbc.writeMem(0x91ca, { 0x0 });
        gbc.writeMem(0xc32b, { 0x77 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xea3, gbc.sp());
        EXPECT(0xc32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x91ca));
        EXPECT(0x77, gbc.readMem(0xc32b));
        // 77 0059
        gbc.setState(0x5271, 0xc968, 0x8970, 0xd8b6, 0xba29, 0xe70c, 0x1, 0x1);
        gbc.writeMem(0x5271, { 0x77 });
        gbc.writeMem(0xe70c, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc968, gbc.sp());
        EXPECT(0x5272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe70c));
        // 77 005C
        gbc.setState(0x5b86, 0x2337, 0xe420, 0xb222, 0xfd94, 0x9746, 0x1, 0x1);
        gbc.writeMem(0x5b86, { 0x77 });
        gbc.writeMem(0x9746, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2337, gbc.sp());
        EXPECT(0x5b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x9746));
        // 77 005D
        gbc.setState(0xd2e2, 0x3727, 0x6380, 0xdea3, 0xd973, 0xfefe, 0x1, 0x1);
        gbc.writeMem(0xd2e2, { 0x77 });
        gbc.writeMem(0xfefe, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3727, gbc.sp());
        EXPECT(0xd2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd2e2));
        EXPECT(0x63, gbc.readMem(0xfefe));
        // 77 005E
        gbc.setState(0x4d88, 0xeff8, 0x5860, 0x60cc, 0x9406, 0xb4d6, 0x1, 0x1);
        gbc.writeMem(0x4d88, { 0x77 });
        gbc.writeMem(0xb4d6, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xeff8, gbc.sp());
        EXPECT(0x4d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xb4d6));
        // 77 0060
        gbc.setState(0x866a, 0xa1e6, 0x34a0, 0xb7de, 0xcb80, 0xd49f, 0x0, 0x1);
        gbc.writeMem(0x866a, { 0x77 });
        gbc.writeMem(0xd49f, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa1e6, gbc.sp());
        EXPECT(0x866b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x866a));
        EXPECT(0x34, gbc.readMem(0xd49f));
        // 77 0062
        gbc.setState(0x892e, 0xc3df, 0x3470, 0xe13c, 0x9203, 0x922d, 0x1, 0x1);
        gbc.writeMem(0x892e, { 0x77 });
        gbc.writeMem(0x922d, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc3df, gbc.sp());
        EXPECT(0x892f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x892e));
        EXPECT(0x34, gbc.readMem(0x922d));
        // 77 0063
        gbc.setState(0x60d7, 0x7385, 0x65a0, 0xd22a, 0x86ff, 0xbad2, 0x0, 0x1);
        gbc.writeMem(0x60d7, { 0x77 });
        gbc.writeMem(0xbad2, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7385, gbc.sp());
        EXPECT(0x60d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbad2));
        // 77 0065
        gbc.setState(0x1a0a, 0x4982, 0x1ec0, 0xc9b3, 0x5a54, 0xd030, 0x0, 0x0);
        gbc.writeMem(0x1a0a, { 0x77 });
        gbc.writeMem(0xd030, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4982, gbc.sp());
        EXPECT(0x1a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xd030));
        // 77 0067
        gbc.setState(0x60ae, 0xbfab, 0x1e00, 0xb8e3, 0x5b0, 0xac96, 0x1, 0x1);
        gbc.writeMem(0x60ae, { 0x77 });
        gbc.writeMem(0xac96, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbfab, gbc.sp());
        EXPECT(0x60af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xac96));
        // 77 0068
        gbc.setState(0x9963, 0x7d85, 0xce0, 0xf537, 0x6127, 0xa650, 0x1, 0x1);
        gbc.writeMem(0x9963, { 0x77 });
        gbc.writeMem(0xa650, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7d85, gbc.sp());
        EXPECT(0x9964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9963));
        EXPECT(0xc, gbc.readMem(0xa650));
        // 77 006B
        gbc.setState(0xcc44, 0x6cf2, 0xb5d0, 0x183, 0x184b, 0xb0e6, 0x1, 0x1);
        gbc.writeMem(0xb0e6, { 0x0 });
        gbc.writeMem(0xcc44, { 0x77 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6cf2, gbc.sp());
        EXPECT(0xcc45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb0e6));
        EXPECT(0x77, gbc.readMem(0xcc44));
        // 77 0070
        gbc.setState(0x80d9, 0xe9cb, 0xfc40, 0x1990, 0x1ccf, 0xd951, 0x1, 0x1);
        gbc.writeMem(0x80d9, { 0x77 });
        gbc.writeMem(0xd951, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe9cb, gbc.sp());
        EXPECT(0x80da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x80d9));
        EXPECT(0xfc, gbc.readMem(0xd951));
        // 77 0072
        gbc.setState(0x8c63, 0x9bc6, 0xd200, 0xc537, 0xf3ca, 0xf4ef, 0x0, 0x1);
        gbc.writeMem(0x8c63, { 0x77 });
        gbc.writeMem(0xf4ef, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9bc6, gbc.sp());
        EXPECT(0x8c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8c63));
        EXPECT(0xd2, gbc.readMem(0xf4ef));
        // 77 0073
        gbc.setState(0xe005, 0xa3df, 0x35a0, 0x5c6e, 0x6934, 0x8e1b, 0x0, 0x1);
        gbc.writeMem(0x8e1b, { 0x0 });
        gbc.writeMem(0xe005, { 0x77 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa3df, gbc.sp());
        EXPECT(0xe006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8e1b));
        EXPECT(0x77, gbc.readMem(0xe005));
        // 77 0075
        gbc.setState(0x5156, 0xccc5, 0x6d50, 0x36e5, 0xdb7c, 0xf00b, 0x1, 0x1);
        gbc.writeMem(0x5156, { 0x77 });
        gbc.writeMem(0xf00b, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xccc5, gbc.sp());
        EXPECT(0x5157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xf00b));
        // 77 0076
        gbc.setState(0x5d78, 0x56dd, 0x6210, 0x133b, 0x42d4, 0xc4f6, 0x1, 0x0);
        gbc.writeMem(0x5d78, { 0x77 });
        gbc.writeMem(0xc4f6, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x56dd, gbc.sp());
        EXPECT(0x5d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xc4f6));
        // 77 0078
        gbc.setState(0x573a, 0x918f, 0xd1c0, 0x577a, 0x50e8, 0xe68c, 0x0, 0x1);
        gbc.writeMem(0x573a, { 0x77 });
        gbc.writeMem(0xe68c, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x918f, gbc.sp());
        EXPECT(0x573b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xe68c));
        // 77 007A
        gbc.setState(0x1345, 0x746d, 0xc140, 0x2230, 0xf651, 0xf675, 0x0, 0x1);
        gbc.writeMem(0x1345, { 0x77 });
        gbc.writeMem(0xf675, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x746d, gbc.sp());
        EXPECT(0x1346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xf675));
        // 77 007C
        gbc.setState(0x839b, 0x78b8, 0x23e0, 0x5fee, 0x55aa, 0xf125, 0x0, 0x1);
        gbc.writeMem(0x839b, { 0x77 });
        gbc.writeMem(0xf125, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x78b8, gbc.sp());
        EXPECT(0x839c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x839b));
        EXPECT(0x23, gbc.readMem(0xf125));
        // 77 0081
        gbc.setState(0x5119, 0xdbdd, 0xd980, 0x78a9, 0xf0fe, 0x97dc, 0x0, 0x0);
        gbc.writeMem(0x5119, { 0x77 });
        gbc.writeMem(0x97dc, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xdbdd, gbc.sp());
        EXPECT(0x511a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x97dc));
        // 77 0082
        gbc.setState(0x2c10, 0x130d, 0xef0, 0x3559, 0xc79d, 0xc7a4, 0x1, 0x0);
        gbc.writeMem(0x2c10, { 0x77 });
        gbc.writeMem(0xc7a4, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x130d, gbc.sp());
        EXPECT(0x2c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xc7a4));
        // 77 0083
        gbc.setState(0x7e56, 0x53c5, 0xafd0, 0x992, 0xd3e2, 0x8a9c, 0x1, 0x1);
        gbc.writeMem(0x7e56, { 0x77 });
        gbc.writeMem(0x8a9c, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x53c5, gbc.sp());
        EXPECT(0x7e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x8a9c));
        // 77 0086
        gbc.setState(0x52fb, 0x5e59, 0x90b0, 0x5d78, 0xdc8a, 0xe111, 0x1, 0x0);
        gbc.writeMem(0x52fb, { 0x77 });
        gbc.writeMem(0xe111, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5e59, gbc.sp());
        EXPECT(0x52fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xe111));
        // 77 0088
        gbc.setState(0xd842, 0xfa16, 0x6c80, 0x9356, 0xfadc, 0xdd3c, 0x0, 0x1);
        gbc.writeMem(0xd842, { 0x77 });
        gbc.writeMem(0xdd3c, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfa16, gbc.sp());
        EXPECT(0xd843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd842));
        EXPECT(0x6c, gbc.readMem(0xdd3c));
        // 77 0089
        gbc.setState(0x7b73, 0xd5ea, 0x9140, 0xde2a, 0x6916, 0xd2a1, 0x1, 0x1);
        gbc.writeMem(0x7b73, { 0x77 });
        gbc.writeMem(0xd2a1, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd5ea, gbc.sp());
        EXPECT(0x7b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd2a1));
        // 77 008A
        gbc.setState(0xcc8e, 0xd656, 0x2cc0, 0x90ee, 0x34b6, 0x8579, 0x1, 0x0);
        gbc.writeMem(0x8579, { 0x0 });
        gbc.writeMem(0xcc8e, { 0x77 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd656, gbc.sp());
        EXPECT(0xcc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8579));
        EXPECT(0x77, gbc.readMem(0xcc8e));
        // 77 008B
        gbc.setState(0x2059, 0x455a, 0x2fc0, 0x6e8e, 0x4824, 0xfed5, 0x1, 0x0);
        gbc.writeMem(0x2059, { 0x77 });
        gbc.writeMem(0xfed5, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x455a, gbc.sp());
        EXPECT(0x205a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xfed5));
        // 77 008C
        gbc.setState(0xc7c2, 0x1a98, 0xbfe0, 0x51f8, 0xf4db, 0xbe79, 0x0, 0x0);
        gbc.writeMem(0xbe79, { 0x0 });
        gbc.writeMem(0xc7c2, { 0x77 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1a98, gbc.sp());
        EXPECT(0xc7c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbe79));
        EXPECT(0x77, gbc.readMem(0xc7c2));
        // 77 008D
        gbc.setState(0xaa75, 0xeffc, 0x4b70, 0xe459, 0x443d, 0xf236, 0x0, 0x1);
        gbc.writeMem(0xaa75, { 0x77 });
        gbc.writeMem(0xf236, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xeffc, gbc.sp());
        EXPECT(0xaa76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xaa75));
        EXPECT(0x4b, gbc.readMem(0xf236));
        // 77 0090
        gbc.setState(0x7e06, 0xc4c6, 0x8510, 0x4148, 0xd4fd, 0x9782, 0x0, 0x1);
        gbc.writeMem(0x7e06, { 0x77 });
        gbc.writeMem(0x9782, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc4c6, gbc.sp());
        EXPECT(0x7e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9782));
        // 77 0091
        gbc.setState(0xb0ae, 0xb9a1, 0xbf30, 0xed56, 0x67c0, 0xc76e, 0x1, 0x0);
        gbc.writeMem(0xb0ae, { 0x77 });
        gbc.writeMem(0xc76e, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb9a1, gbc.sp());
        EXPECT(0xb0af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb0ae));
        EXPECT(0xbf, gbc.readMem(0xc76e));
        // 77 0093
        gbc.setState(0x3205, 0x4f67, 0x2d40, 0x7aba, 0x1e3f, 0xbc06, 0x0, 0x0);
        gbc.writeMem(0x3205, { 0x77 });
        gbc.writeMem(0xbc06, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4f67, gbc.sp());
        EXPECT(0x3206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbc06));
        // 77 0097
        gbc.setState(0x23f2, 0xd991, 0x5a10, 0x8936, 0xfc3c, 0xd440, 0x0, 0x0);
        gbc.writeMem(0x23f2, { 0x77 });
        gbc.writeMem(0xd440, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd991, gbc.sp());
        EXPECT(0x23f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xd440));
        // 77 0099
        gbc.setState(0x5cdc, 0xa73e, 0xb0b0, 0xcdb4, 0x2e96, 0x8ba9, 0x1, 0x1);
        gbc.writeMem(0x5cdc, { 0x77 });
        gbc.writeMem(0x8ba9, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa73e, gbc.sp());
        EXPECT(0x5cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8ba9));
        // 77 009A
        gbc.setState(0xa2bb, 0xe419, 0xb370, 0xac69, 0xaf8d, 0xd48c, 0x1, 0x0);
        gbc.writeMem(0xa2bb, { 0x77 });
        gbc.writeMem(0xd48c, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe419, gbc.sp());
        EXPECT(0xa2bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa2bb));
        EXPECT(0xb3, gbc.readMem(0xd48c));
        // 77 009C
        gbc.setState(0x8093, 0xc053, 0x1800, 0x1d0a, 0x12dd, 0xa9b9, 0x1, 0x0);
        gbc.writeMem(0x8093, { 0x77 });
        gbc.writeMem(0xa9b9, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc053, gbc.sp());
        EXPECT(0x8094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8093));
        EXPECT(0x18, gbc.readMem(0xa9b9));
        // 77 009E
        gbc.setState(0xdeab, 0x18f6, 0x1200, 0xf877, 0x33fb, 0xd988, 0x1, 0x0);
        gbc.writeMem(0xd988, { 0x0 });
        gbc.writeMem(0xdeab, { 0x77 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x18f6, gbc.sp());
        EXPECT(0xdeac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xd988));
        EXPECT(0x77, gbc.readMem(0xdeab));
        // 77 009F
        gbc.setState(0x3fd4, 0xdeb6, 0x34d0, 0x91a6, 0x44ed, 0x9d14, 0x1, 0x1);
        gbc.writeMem(0x3fd4, { 0x77 });
        gbc.writeMem(0x9d14, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdeb6, gbc.sp());
        EXPECT(0x3fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9d14));
        // 77 00A2
        gbc.setState(0xd968, 0xd982, 0x8e90, 0x7277, 0x4c79, 0xc600, 0x0, 0x1);
        gbc.writeMem(0xc600, { 0x0 });
        gbc.writeMem(0xd968, { 0x77 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd982, gbc.sp());
        EXPECT(0xd969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xc600));
        EXPECT(0x77, gbc.readMem(0xd968));
        // 77 00A4
        gbc.setState(0x9cc3, 0x9b07, 0x4ea0, 0x61c0, 0xa8df, 0xec5a, 0x0, 0x1);
        gbc.writeMem(0x9cc3, { 0x77 });
        gbc.writeMem(0xec5a, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9b07, gbc.sp());
        EXPECT(0x9cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9cc3));
        EXPECT(0x4e, gbc.readMem(0xec5a));
        // 77 00A7
        gbc.setState(0xce0a, 0x7f52, 0x7170, 0x2fb, 0x7ec, 0xa198, 0x0, 0x0);
        gbc.writeMem(0xa198, { 0x0 });
        gbc.writeMem(0xce0a, { 0x77 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7f52, gbc.sp());
        EXPECT(0xce0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa198));
        EXPECT(0x77, gbc.readMem(0xce0a));
        // 77 00AA
        gbc.setState(0x8ec9, 0xd696, 0xea40, 0x9791, 0x2930, 0x96a9, 0x0, 0x1);
        gbc.writeMem(0x8ec9, { 0x77 });
        gbc.writeMem(0x96a9, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd696, gbc.sp());
        EXPECT(0x8eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8ec9));
        EXPECT(0xea, gbc.readMem(0x96a9));
        // 77 00B2
        gbc.setState(0xb737, 0x3ebc, 0x1220, 0xbf3c, 0xd0be, 0xc155, 0x0, 0x1);
        gbc.writeMem(0xb737, { 0x77 });
        gbc.writeMem(0xc155, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3ebc, gbc.sp());
        EXPECT(0xb738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb737));
        EXPECT(0x12, gbc.readMem(0xc155));
        // 77 00B3
        gbc.setState(0xda3a, 0x1ca, 0x2d0, 0x81ba, 0x3067, 0x9201, 0x1, 0x1);
        gbc.writeMem(0x9201, { 0x0 });
        gbc.writeMem(0xda3a, { 0x77 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1ca, gbc.sp());
        EXPECT(0xda3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x9201));
        EXPECT(0x77, gbc.readMem(0xda3a));
        // 77 00BA
        gbc.setState(0xc000, 0xd834, 0x53e0, 0xf2f7, 0xed2e, 0xae11, 0x0, 0x1);
        gbc.writeMem(0xae11, { 0x0 });
        gbc.writeMem(0xc000, { 0x77 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd834, gbc.sp());
        EXPECT(0xc001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xae11));
        EXPECT(0x77, gbc.readMem(0xc000));
        // 77 00BB
        gbc.setState(0x4902, 0x8e9d, 0xd5b0, 0x1783, 0xa064, 0xa0bb, 0x1, 0x1);
        gbc.writeMem(0x4902, { 0x77 });
        gbc.writeMem(0xa0bb, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8e9d, gbc.sp());
        EXPECT(0x4903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa0bb));
        // 77 00BD
        gbc.setState(0x495d, 0xf2ee, 0x6850, 0x79ef, 0x3a64, 0x87f5, 0x0, 0x1);
        gbc.writeMem(0x495d, { 0x77 });
        gbc.writeMem(0x87f5, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf2ee, gbc.sp());
        EXPECT(0x495e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x87f5));
        // 77 00BE
        gbc.setState(0xa9c0, 0x917, 0x6260, 0x4e0b, 0xda78, 0xe642, 0x1, 0x0);
        gbc.writeMem(0xa9c0, { 0x77 });
        gbc.writeMem(0xe642, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x917, gbc.sp());
        EXPECT(0xa9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa9c0));
        EXPECT(0x62, gbc.readMem(0xe642));
        // 77 00C1
        gbc.setState(0x206f, 0xe833, 0x6720, 0xb686, 0xeb41, 0xecd0, 0x0, 0x0);
        gbc.writeMem(0x206f, { 0x77 });
        gbc.writeMem(0xecd0, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe833, gbc.sp());
        EXPECT(0x2070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xecd0));
        // 77 00C2
        gbc.setState(0xb59f, 0xa2c7, 0x5890, 0x594b, 0x3ff0, 0x887b, 0x0, 0x1);
        gbc.writeMem(0x887b, { 0x0 });
        gbc.writeMem(0xb59f, { 0x77 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa2c7, gbc.sp());
        EXPECT(0xb5a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x887b));
        EXPECT(0x77, gbc.readMem(0xb59f));
        // 77 00C3
        gbc.setState(0x697f, 0x96a, 0xee10, 0x4ec9, 0xdb19, 0xe897, 0x1, 0x1);
        gbc.writeMem(0x697f, { 0x77 });
        gbc.writeMem(0xe897, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x96a, gbc.sp());
        EXPECT(0x6980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xe897));
        // 77 00C5
        gbc.setState(0x4ea9, 0xaecd, 0x2c70, 0xd77, 0xb597, 0xc471, 0x1, 0x1);
        gbc.writeMem(0x4ea9, { 0x77 });
        gbc.writeMem(0xc471, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xaecd, gbc.sp());
        EXPECT(0x4eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc471));
        // 77 00C6
        gbc.setState(0x780, 0x1082, 0x8930, 0xfc93, 0x948d, 0xdc42, 0x0, 0x0);
        gbc.writeMem(0x780, { 0x77 });
        gbc.writeMem(0xdc42, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1082, gbc.sp());
        EXPECT(0x781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdc42));
        // 77 00C8
        gbc.setState(0x376b, 0x104b, 0xbcf0, 0xac64, 0xb85, 0xcd72, 0x0, 0x0);
        gbc.writeMem(0x376b, { 0x77 });
        gbc.writeMem(0xcd72, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x104b, gbc.sp());
        EXPECT(0x376c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcd72));
        // 77 00C9
        gbc.setState(0xa5c4, 0x5f6e, 0x8070, 0x3bf3, 0x15c, 0xbf1c, 0x0, 0x1);
        gbc.writeMem(0xa5c4, { 0x77 });
        gbc.writeMem(0xbf1c, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5f6e, gbc.sp());
        EXPECT(0xa5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa5c4));
        EXPECT(0x80, gbc.readMem(0xbf1c));
        // 77 00CB
        gbc.setState(0xe749, 0xe9d5, 0x2be0, 0x5053, 0xc4f7, 0xc8f7, 0x1, 0x0);
        gbc.writeMem(0xc8f7, { 0x0 });
        gbc.writeMem(0xe749, { 0x77 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe9d5, gbc.sp());
        EXPECT(0xe74a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc8f7));
        EXPECT(0x77, gbc.readMem(0xe749));
        // 77 00CD
        gbc.setState(0xa027, 0x12c2, 0x14d0, 0x533, 0xbf23, 0xc8fd, 0x0, 0x1);
        gbc.writeMem(0xa027, { 0x77 });
        gbc.writeMem(0xc8fd, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x12c2, gbc.sp());
        EXPECT(0xa028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa027));
        EXPECT(0x14, gbc.readMem(0xc8fd));
        // 77 00CF
        gbc.setState(0xa03e, 0x63ec, 0x8650, 0x76e8, 0x80b2, 0xc47a, 0x1, 0x1);
        gbc.writeMem(0xa03e, { 0x77 });
        gbc.writeMem(0xc47a, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x63ec, gbc.sp());
        EXPECT(0xa03f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa03e));
        EXPECT(0x86, gbc.readMem(0xc47a));
        // 77 00D0
        gbc.setState(0xb313, 0xa3b, 0x3f00, 0x9e44, 0x40bd, 0xf280, 0x1, 0x1);
        gbc.writeMem(0xb313, { 0x77 });
        gbc.writeMem(0xf280, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa3b, gbc.sp());
        EXPECT(0xb314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb313));
        EXPECT(0x3f, gbc.readMem(0xf280));
        // 77 00D1
        gbc.setState(0x4efa, 0x1ede, 0xaf80, 0x9023, 0x4fd3, 0xdb9e, 0x0, 0x1);
        gbc.writeMem(0x4efa, { 0x77 });
        gbc.writeMem(0xdb9e, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1ede, gbc.sp());
        EXPECT(0x4efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xdb9e));
        // 77 00D3
        gbc.setState(0x90d7, 0xaab0, 0x5ee0, 0xf7d2, 0xadc3, 0xcbba, 0x0, 0x0);
        gbc.writeMem(0x90d7, { 0x77 });
        gbc.writeMem(0xcbba, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xaab0, gbc.sp());
        EXPECT(0x90d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x90d7));
        EXPECT(0x5e, gbc.readMem(0xcbba));
        // 77 00D9
        gbc.setState(0xbde5, 0xcb4, 0x15a0, 0x5e5a, 0x2147, 0xb49d, 0x1, 0x1);
        gbc.writeMem(0xb49d, { 0x0 });
        gbc.writeMem(0xbde5, { 0x77 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcb4, gbc.sp());
        EXPECT(0xbde6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb49d));
        EXPECT(0x77, gbc.readMem(0xbde5));
        // 77 00DA
        gbc.setState(0x4564, 0x7cc3, 0xcb60, 0x7769, 0xd2ba, 0xc85a, 0x1, 0x1);
        gbc.writeMem(0x4564, { 0x77 });
        gbc.writeMem(0xc85a, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7cc3, gbc.sp());
        EXPECT(0x4565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc85a));
        // 77 00DC
        gbc.setState(0x5c6d, 0x4cf7, 0xc650, 0x85b9, 0x7225, 0xf2d7, 0x1, 0x0);
        gbc.writeMem(0x5c6d, { 0x77 });
        gbc.writeMem(0xf2d7, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4cf7, gbc.sp());
        EXPECT(0x5c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xf2d7));
        // 77 00DE
        gbc.setState(0x3f8e, 0x4828, 0xd990, 0xa6c0, 0x665e, 0xba8c, 0x1, 0x1);
        gbc.writeMem(0x3f8e, { 0x77 });
        gbc.writeMem(0xba8c, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4828, gbc.sp());
        EXPECT(0x3f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xba8c));
        // 77 00E0
        gbc.setState(0x8006, 0xf781, 0x3870, 0xbc3c, 0x852f, 0x8b00, 0x1, 0x0);
        gbc.writeMem(0x8006, { 0x77 });
        gbc.writeMem(0x8b00, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf781, gbc.sp());
        EXPECT(0x8007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8006));
        EXPECT(0x38, gbc.readMem(0x8b00));
        // 77 00E3
        gbc.setState(0xbe0c, 0x8b55, 0xc600, 0xef2b, 0xf3f, 0xd26a, 0x1, 0x0);
        gbc.writeMem(0xbe0c, { 0x77 });
        gbc.writeMem(0xd26a, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8b55, gbc.sp());
        EXPECT(0xbe0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbe0c));
        EXPECT(0xc6, gbc.readMem(0xd26a));
        // 77 00E6
        gbc.setState(0x52b9, 0x813a, 0x7770, 0xb745, 0x214e, 0xd312, 0x1, 0x0);
        gbc.writeMem(0x52b9, { 0x77 });
        gbc.writeMem(0xd312, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x813a, gbc.sp());
        EXPECT(0x52ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd312));
        // 77 00E7
        gbc.setState(0xcd74, 0xafcd, 0x4390, 0x4965, 0x63a, 0xeebd, 0x0, 0x1);
        gbc.writeMem(0xcd74, { 0x77 });
        gbc.writeMem(0xeebd, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xafcd, gbc.sp());
        EXPECT(0xcd75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xcd74));
        EXPECT(0x43, gbc.readMem(0xeebd));
        // 77 00E8
        gbc.setState(0x1f88, 0x3ba1, 0x1320, 0xf66f, 0xda7c, 0xcbf3, 0x0, 0x1);
        gbc.writeMem(0x1f88, { 0x77 });
        gbc.writeMem(0xcbf3, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3ba1, gbc.sp());
        EXPECT(0x1f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcbf3));
        // 77 00E9
        gbc.setState(0x1b08, 0xcdef, 0xf2d0, 0x7bb4, 0xdc80, 0xaf40, 0x0, 0x1);
        gbc.writeMem(0x1b08, { 0x77 });
        gbc.writeMem(0xaf40, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xcdef, gbc.sp());
        EXPECT(0x1b09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xaf40));
        // 77 00ED
        gbc.setState(0x5591, 0xdc5e, 0x7100, 0xcc15, 0x38ac, 0xf0cb, 0x0, 0x1);
        gbc.writeMem(0x5591, { 0x77 });
        gbc.writeMem(0xf0cb, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xdc5e, gbc.sp());
        EXPECT(0x5592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xf0cb));
        // 77 00F0
        gbc.setState(0x23e6, 0x795d, 0x2540, 0xdba5, 0x942, 0xbfd9, 0x1, 0x0);
        gbc.writeMem(0x23e6, { 0x77 });
        gbc.writeMem(0xbfd9, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x795d, gbc.sp());
        EXPECT(0x23e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbfd9));
        // 77 00F1
        gbc.setState(0x8dc0, 0x454a, 0xf4c0, 0x93ef, 0xf30d, 0xcf31, 0x1, 0x0);
        gbc.writeMem(0x8dc0, { 0x77 });
        gbc.writeMem(0xcf31, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x454a, gbc.sp());
        EXPECT(0x8dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8dc0));
        EXPECT(0xf4, gbc.readMem(0xcf31));
        // 77 00F2
        gbc.setState(0xa779, 0x3b42, 0xb500, 0xab63, 0x3055, 0xcbd5, 0x0, 0x1);
        gbc.writeMem(0xa779, { 0x77 });
        gbc.writeMem(0xcbd5, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3b42, gbc.sp());
        EXPECT(0xa77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa779));
        EXPECT(0xb5, gbc.readMem(0xcbd5));
        // 77 00F3
        gbc.setState(0x91f4, 0x161e, 0x3460, 0xaa6a, 0x3ba1, 0xe13b, 0x1, 0x1);
        gbc.writeMem(0x91f4, { 0x77 });
        gbc.writeMem(0xe13b, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x161e, gbc.sp());
        EXPECT(0x91f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x91f4));
        EXPECT(0x34, gbc.readMem(0xe13b));
        // 77 00F6
        gbc.setState(0xbe2d, 0xbcf2, 0x4410, 0xc0aa, 0x48c4, 0xf16e, 0x1, 0x0);
        gbc.writeMem(0xbe2d, { 0x77 });
        gbc.writeMem(0xf16e, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbcf2, gbc.sp());
        EXPECT(0xbe2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbe2d));
        EXPECT(0x44, gbc.readMem(0xf16e));
        // 77 00F7
        gbc.setState(0x7f12, 0x63f3, 0xe450, 0x19, 0x49fa, 0xb734, 0x0, 0x1);
        gbc.writeMem(0x7f12, { 0x77 });
        gbc.writeMem(0xb734, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x63f3, gbc.sp());
        EXPECT(0x7f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xb734));
        // 77 00F8
        gbc.setState(0xb852, 0xec27, 0x3850, 0xe789, 0x4764, 0x81a1, 0x1, 0x1);
        gbc.writeMem(0x81a1, { 0x0 });
        gbc.writeMem(0xb852, { 0x77 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xec27, gbc.sp());
        EXPECT(0xb853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x81a1));
        EXPECT(0x77, gbc.readMem(0xb852));
        // 77 00FA
        gbc.setState(0x1346, 0x6577, 0x3ba0, 0x2258, 0x9fe, 0xb243, 0x0, 0x0);
        gbc.writeMem(0x1346, { 0x77 });
        gbc.writeMem(0xb243, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6577, gbc.sp());
        EXPECT(0x1347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb243));
        // 77 00FB
        gbc.setState(0xdd92, 0x892f, 0xfcf0, 0x963, 0x86e8, 0xd9eb, 0x1, 0x1);
        gbc.writeMem(0xd9eb, { 0x0 });
        gbc.writeMem(0xdd92, { 0x77 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x892f, gbc.sp());
        EXPECT(0xdd93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xd9eb));
        EXPECT(0x77, gbc.readMem(0xdd92));
        // 77 00FC
        gbc.setState(0x395f, 0xe778, 0x8cf0, 0x1e8d, 0xae34, 0xab00, 0x1, 0x1);
        gbc.writeMem(0x395f, { 0x77 });
        gbc.writeMem(0xab00, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe778, gbc.sp());
        EXPECT(0x3960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xab00));
        // 77 00FE
        gbc.setState(0xa7d4, 0xac27, 0x76f0, 0x572a, 0x937b, 0xa955, 0x0, 0x0);
        gbc.writeMem(0xa7d4, { 0x77 });
        gbc.writeMem(0xa955, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xac27, gbc.sp());
        EXPECT(0xa7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa7d4));
        EXPECT(0x76, gbc.readMem(0xa955));
        // 77 00FF
        gbc.setState(0x3bb5, 0xc7ae, 0x3de0, 0xd0b2, 0x4372, 0xc598, 0x0, 0x0);
        gbc.writeMem(0x3bb5, { 0x77 });
        gbc.writeMem(0xc598, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc7ae, gbc.sp());
        EXPECT(0x3bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xc598));
        // 77 0100
        gbc.setState(0x7a3c, 0x34db, 0xbc10, 0xc00b, 0xae4e, 0xe0ed, 0x0, 0x1);
        gbc.writeMem(0x7a3c, { 0x77 });
        gbc.writeMem(0xe0ed, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x34db, gbc.sp());
        EXPECT(0x7a3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe0ed));
        // 77 0105
        gbc.setState(0x113a, 0xd9a8, 0xd1e0, 0xb4ed, 0xab81, 0xf82c, 0x0, 0x0);
        gbc.writeMem(0x113a, { 0x77 });
        gbc.writeMem(0xf82c, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd9a8, gbc.sp());
        EXPECT(0x113b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xf82c));
        // 77 0109
        gbc.setState(0x6e83, 0x3012, 0xdb70, 0x39e0, 0xd25a, 0xf824, 0x1, 0x0);
        gbc.writeMem(0x6e83, { 0x77 });
        gbc.writeMem(0xf824, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3012, gbc.sp());
        EXPECT(0x6e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xf824));
        // 77 010C
        gbc.setState(0x6fe1, 0x1d52, 0x3280, 0xacf9, 0x96ac, 0x8600, 0x0, 0x0);
        gbc.writeMem(0x6fe1, { 0x77 });
        gbc.writeMem(0x8600, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1d52, gbc.sp());
        EXPECT(0x6fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8600));
        // 77 010D
        gbc.setState(0x4185, 0xbca, 0xb560, 0x1786, 0x8cb2, 0xa41e, 0x0, 0x0);
        gbc.writeMem(0x4185, { 0x77 });
        gbc.writeMem(0xa41e, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbca, gbc.sp());
        EXPECT(0x4186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa41e));
        // 77 010F
        gbc.setState(0x4be4, 0x3ff9, 0x7f80, 0xee88, 0xb3a7, 0xc7ce, 0x1, 0x0);
        gbc.writeMem(0x4be4, { 0x77 });
        gbc.writeMem(0xc7ce, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3ff9, gbc.sp());
        EXPECT(0x4be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xc7ce));
        // 77 0112
        gbc.setState(0x998d, 0xbdd6, 0x3300, 0x92f2, 0xccea, 0xf862, 0x0, 0x1);
        gbc.writeMem(0x998d, { 0x77 });
        gbc.writeMem(0xf862, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbdd6, gbc.sp());
        EXPECT(0x998e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x998d));
        EXPECT(0x33, gbc.readMem(0xf862));
        // 77 0113
        gbc.setState(0xc0c4, 0x2770, 0x2120, 0x4e71, 0xf4c2, 0xced6, 0x1, 0x0);
        gbc.writeMem(0xc0c4, { 0x77 });
        gbc.writeMem(0xced6, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2770, gbc.sp());
        EXPECT(0xc0c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc0c4));
        EXPECT(0x21, gbc.readMem(0xced6));
        // 77 0114
        gbc.setState(0x683, 0x4242, 0x97d0, 0xcb00, 0x405d, 0x9ce4, 0x0, 0x1);
        gbc.writeMem(0x683, { 0x77 });
        gbc.writeMem(0x9ce4, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4242, gbc.sp());
        EXPECT(0x684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9ce4));
        // 77 0116
        gbc.setState(0x7516, 0x5871, 0xd040, 0x540f, 0xaa2d, 0xf6d7, 0x1, 0x1);
        gbc.writeMem(0x7516, { 0x77 });
        gbc.writeMem(0xf6d7, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5871, gbc.sp());
        EXPECT(0x7517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xf6d7));
        // 77 0117
        gbc.setState(0x84c5, 0x1f1a, 0x3090, 0xaa9e, 0x83e9, 0x9f30, 0x1, 0x0);
        gbc.writeMem(0x84c5, { 0x77 });
        gbc.writeMem(0x9f30, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1f1a, gbc.sp());
        EXPECT(0x84c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x84c5));
        EXPECT(0x30, gbc.readMem(0x9f30));
        // 77 011E
        gbc.setState(0x3046, 0x9ec4, 0x13c0, 0x7b98, 0x53d6, 0xcae1, 0x1, 0x1);
        gbc.writeMem(0x3046, { 0x77 });
        gbc.writeMem(0xcae1, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9ec4, gbc.sp());
        EXPECT(0x3047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcae1));
        // 77 011F
        gbc.setState(0x74ee, 0x7723, 0xd520, 0x61f5, 0x4dcf, 0xb770, 0x0, 0x1);
        gbc.writeMem(0x74ee, { 0x77 });
        gbc.writeMem(0xb770, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7723, gbc.sp());
        EXPECT(0x74ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb770));
        // 77 0122
        gbc.setState(0x1a11, 0xbbcf, 0x3890, 0x35ea, 0x74ad, 0xd097, 0x1, 0x1);
        gbc.writeMem(0x1a11, { 0x77 });
        gbc.writeMem(0xd097, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbbcf, gbc.sp());
        EXPECT(0x1a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd097));
        // 77 0123
        gbc.setState(0xed95, 0xe323, 0xf750, 0xd741, 0x1817, 0xbd0c, 0x1, 0x0);
        gbc.writeMem(0xbd0c, { 0x0 });
        gbc.writeMem(0xed95, { 0x77 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe323, gbc.sp());
        EXPECT(0xed96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbd0c));
        EXPECT(0x77, gbc.readMem(0xed95));
        // 77 0125
        gbc.setState(0xede5, 0xe231, 0x3910, 0x8e78, 0x349f, 0xc2b6, 0x0, 0x1);
        gbc.writeMem(0xc2b6, { 0x0 });
        gbc.writeMem(0xede5, { 0x77 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe231, gbc.sp());
        EXPECT(0xede6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xc2b6));
        EXPECT(0x77, gbc.readMem(0xede5));
        // 77 0126
        gbc.setState(0x5e05, 0x3f12, 0xa7a0, 0x1991, 0xc065, 0xdc98, 0x0, 0x0);
        gbc.writeMem(0x5e05, { 0x77 });
        gbc.writeMem(0xdc98, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3f12, gbc.sp());
        EXPECT(0x5e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xdc98));
        // 77 0128
        gbc.setState(0xcafc, 0x6b5d, 0x2170, 0x87a7, 0x74e0, 0x8f2a, 0x1, 0x1);
        gbc.writeMem(0x8f2a, { 0x0 });
        gbc.writeMem(0xcafc, { 0x77 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6b5d, gbc.sp());
        EXPECT(0xcafd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8f2a));
        EXPECT(0x77, gbc.readMem(0xcafc));
        // 77 0129
        gbc.setState(0x68b7, 0x9c5c, 0xcfd0, 0xafa9, 0x9140, 0xc7e8, 0x0, 0x1);
        gbc.writeMem(0x68b7, { 0x77 });
        gbc.writeMem(0xc7e8, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9c5c, gbc.sp());
        EXPECT(0x68b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xc7e8));
        // 77 012A
        gbc.setState(0xea23, 0x6a3c, 0x3cb0, 0x512a, 0x655c, 0x9847, 0x1, 0x1);
        gbc.writeMem(0x9847, { 0x0 });
        gbc.writeMem(0xea23, { 0x77 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6a3c, gbc.sp());
        EXPECT(0xea24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9847));
        EXPECT(0x77, gbc.readMem(0xea23));
        // 77 012B
        gbc.setState(0x2ddc, 0x8eb8, 0xe960, 0x2a65, 0xbd5b, 0xca2b, 0x1, 0x0);
        gbc.writeMem(0x2ddc, { 0x77 });
        gbc.writeMem(0xca2b, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8eb8, gbc.sp());
        EXPECT(0x2ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xca2b));
        // 77 012C
        gbc.setState(0xcabe, 0x262f, 0x4920, 0x28f3, 0x98f4, 0xe87a, 0x1, 0x1);
        gbc.writeMem(0xcabe, { 0x77 });
        gbc.writeMem(0xe87a, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x262f, gbc.sp());
        EXPECT(0xcabf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xcabe));
        EXPECT(0x49, gbc.readMem(0xe87a));
        // 77 012D
        gbc.setState(0x6179, 0xc47a, 0xedf0, 0x6180, 0x68a, 0xaac3, 0x1, 0x0);
        gbc.writeMem(0x6179, { 0x77 });
        gbc.writeMem(0xaac3, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc47a, gbc.sp());
        EXPECT(0x617a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xaac3));
        // 77 0132
        gbc.setState(0x22cd, 0x9f0b, 0x49f0, 0x6a3f, 0xef16, 0x9b4f, 0x0, 0x1);
        gbc.writeMem(0x22cd, { 0x77 });
        gbc.writeMem(0x9b4f, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9f0b, gbc.sp());
        EXPECT(0x22ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9b4f));
        // 77 0134
        gbc.setState(0x81ed, 0x9f6c, 0x5c50, 0xa7, 0x884, 0xc921, 0x0, 0x0);
        gbc.writeMem(0x81ed, { 0x77 });
        gbc.writeMem(0xc921, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9f6c, gbc.sp());
        EXPECT(0x81ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x81ed));
        EXPECT(0x5c, gbc.readMem(0xc921));
        // 77 0135
        gbc.setState(0x42c2, 0x4be9, 0x8550, 0x2c34, 0x4d73, 0xd2ff, 0x1, 0x1);
        gbc.writeMem(0x42c2, { 0x77 });
        gbc.writeMem(0xd2ff, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4be9, gbc.sp());
        EXPECT(0x42c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd2ff));
        // 77 0137
        gbc.setState(0x1a41, 0xf7a3, 0x3ff0, 0x54f1, 0xd23, 0xff6b, 0x1, 0x0);
        gbc.writeMem(0x1a41, { 0x77 });
        gbc.writeMem(0xff6b, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf7a3, gbc.sp());
        EXPECT(0x1a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xff6b));
        // 77 0138
        gbc.setState(0xeb0d, 0x662f, 0x9b60, 0xc823, 0x8720, 0xe2da, 0x1, 0x0);
        gbc.writeMem(0xe2da, { 0x0 });
        gbc.writeMem(0xeb0d, { 0x77 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x662f, gbc.sp());
        EXPECT(0xeb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe2da));
        EXPECT(0x77, gbc.readMem(0xeb0d));
        // 77 0139
        gbc.setState(0x5723, 0xbafe, 0xb4b0, 0xdec, 0xe947, 0xd272, 0x0, 0x1);
        gbc.writeMem(0x5723, { 0x77 });
        gbc.writeMem(0xd272, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbafe, gbc.sp());
        EXPECT(0x5724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xd272));
        // 77 013F
        gbc.setState(0x9ef9, 0x27b0, 0x8a30, 0x9b47, 0xaf41, 0xf7e7, 0x0, 0x1);
        gbc.writeMem(0x9ef9, { 0x77 });
        gbc.writeMem(0xf7e7, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x27b0, gbc.sp());
        EXPECT(0x9efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9ef9));
        EXPECT(0x8a, gbc.readMem(0xf7e7));
        // 77 0141
        gbc.setState(0x1e4e, 0x8409, 0xcfc0, 0xe837, 0xe67d, 0x8249, 0x0, 0x1);
        gbc.writeMem(0x1e4e, { 0x77 });
        gbc.writeMem(0x8249, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8409, gbc.sp());
        EXPECT(0x1e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x8249));
        // 77 0143
        gbc.setState(0x7fbb, 0x14ea, 0xe370, 0x558b, 0x1525, 0xa414, 0x1, 0x1);
        gbc.writeMem(0x7fbb, { 0x77 });
        gbc.writeMem(0xa414, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x14ea, gbc.sp());
        EXPECT(0x7fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xa414));
        // 77 0145
        gbc.setState(0x48b0, 0xc82d, 0xd190, 0x8f40, 0x8d43, 0xa929, 0x0, 0x0);
        gbc.writeMem(0x48b0, { 0x77 });
        gbc.writeMem(0xa929, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc82d, gbc.sp());
        EXPECT(0x48b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xa929));
        // 77 0149
        gbc.setState(0xc278, 0x16b0, 0xa940, 0x650a, 0x7a59, 0xd086, 0x0, 0x1);
        gbc.writeMem(0xc278, { 0x77 });
        gbc.writeMem(0xd086, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x16b0, gbc.sp());
        EXPECT(0xc279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc278));
        EXPECT(0xa9, gbc.readMem(0xd086));
        // 77 014B
        gbc.setState(0x6b20, 0x54d, 0xcc80, 0xceed, 0x4ae2, 0xc15d, 0x1, 0x1);
        gbc.writeMem(0x6b20, { 0x77 });
        gbc.writeMem(0xc15d, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x54d, gbc.sp());
        EXPECT(0x6b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xc15d));
        // 77 014D
        gbc.setState(0x1946, 0xef26, 0x33a0, 0x43d8, 0xad4b, 0x9bf4, 0x1, 0x1);
        gbc.writeMem(0x1946, { 0x77 });
        gbc.writeMem(0x9bf4, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xef26, gbc.sp());
        EXPECT(0x1947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9bf4));
        // 77 014F
        gbc.setState(0x6457, 0x54b0, 0xf9c0, 0xc550, 0x3972, 0x9189, 0x0, 0x1);
        gbc.writeMem(0x6457, { 0x77 });
        gbc.writeMem(0x9189, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x54b0, gbc.sp());
        EXPECT(0x6458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x9189));
        // 77 0152
        gbc.setState(0x1ddc, 0x2742, 0x46c0, 0x9258, 0x29c5, 0xae9e, 0x0, 0x0);
        gbc.writeMem(0x1ddc, { 0x77 });
        gbc.writeMem(0xae9e, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2742, gbc.sp());
        EXPECT(0x1ddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xae9e));
        // 77 0153
        gbc.setState(0xc9d8, 0x812, 0x7f70, 0x4489, 0xf636, 0x9142, 0x0, 0x1);
        gbc.writeMem(0x9142, { 0x0 });
        gbc.writeMem(0xc9d8, { 0x77 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x812, gbc.sp());
        EXPECT(0xc9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x9142));
        EXPECT(0x77, gbc.readMem(0xc9d8));
        // 77 0154
        gbc.setState(0x3f10, 0x9f78, 0xbf00, 0x6aba, 0x1d13, 0xdc0a, 0x0, 0x0);
        gbc.writeMem(0x3f10, { 0x77 });
        gbc.writeMem(0xdc0a, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9f78, gbc.sp());
        EXPECT(0x3f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xdc0a));
        // 77 0155
        gbc.setState(0x7d42, 0x6ce7, 0xcf90, 0x3348, 0x23e, 0xb80a, 0x0, 0x0);
        gbc.writeMem(0x7d42, { 0x77 });
        gbc.writeMem(0xb80a, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6ce7, gbc.sp());
        EXPECT(0x7d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xb80a));
        // 77 0158
        gbc.setState(0xe134, 0x6ce3, 0xa840, 0x90f0, 0x9c7f, 0xc6dc, 0x0, 0x0);
        gbc.writeMem(0xc6dc, { 0x0 });
        gbc.writeMem(0xe134, { 0x77 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6ce3, gbc.sp());
        EXPECT(0xe135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xc6dc));
        EXPECT(0x77, gbc.readMem(0xe134));
        // 77 015A
        gbc.setState(0xdb91, 0x73f8, 0xc130, 0xae, 0xb06d, 0xb2a6, 0x0, 0x0);
        gbc.writeMem(0xb2a6, { 0x0 });
        gbc.writeMem(0xdb91, { 0x77 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x73f8, gbc.sp());
        EXPECT(0xdb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb2a6));
        EXPECT(0x77, gbc.readMem(0xdb91));
        // 77 015C
        gbc.setState(0x8812, 0xf9d6, 0xb9a0, 0xdc71, 0xae5d, 0xeabb, 0x1, 0x0);
        gbc.writeMem(0x8812, { 0x77 });
        gbc.writeMem(0xeabb, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf9d6, gbc.sp());
        EXPECT(0x8813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8812));
        EXPECT(0xb9, gbc.readMem(0xeabb));
        // 77 015D
        gbc.setState(0x2fc2, 0xf5de, 0x6510, 0x6f4b, 0xd28e, 0x8503, 0x1, 0x0);
        gbc.writeMem(0x2fc2, { 0x77 });
        gbc.writeMem(0x8503, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf5de, gbc.sp());
        EXPECT(0x2fc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8503));
        // 77 015F
        gbc.setState(0xa77d, 0x35dd, 0x5280, 0xad7f, 0xed06, 0xb558, 0x1, 0x1);
        gbc.writeMem(0xa77d, { 0x77 });
        gbc.writeMem(0xb558, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x35dd, gbc.sp());
        EXPECT(0xa77e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa77d));
        EXPECT(0x52, gbc.readMem(0xb558));
        // 77 0160
        gbc.setState(0x3b3, 0x3570, 0xf600, 0x2ab3, 0x5998, 0xdec2, 0x0, 0x0);
        gbc.writeMem(0x3b3, { 0x77 });
        gbc.writeMem(0xdec2, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3570, gbc.sp());
        EXPECT(0x3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xdec2));
        // 77 0162
        gbc.setState(0xe66, 0x8941, 0x8ca0, 0x72bc, 0xd49a, 0xc6d5, 0x1, 0x0);
        gbc.writeMem(0xe66, { 0x77 });
        gbc.writeMem(0xc6d5, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8941, gbc.sp());
        EXPECT(0xe67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc6d5));
        // 77 0163
        gbc.setState(0x2543, 0x445b, 0x8d10, 0x67f3, 0x56c7, 0x9a0f, 0x0, 0x0);
        gbc.writeMem(0x2543, { 0x77 });
        gbc.writeMem(0x9a0f, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x445b, gbc.sp());
        EXPECT(0x2544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9a0f));
        // 77 0164
        gbc.setState(0x41dd, 0x8a7, 0x8250, 0x297e, 0x477f, 0xc85b, 0x0, 0x1);
        gbc.writeMem(0x41dd, { 0x77 });
        gbc.writeMem(0xc85b, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8a7, gbc.sp());
        EXPECT(0x41de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc85b));
        // 77 0165
        gbc.setState(0xdc99, 0xcdc, 0x26f0, 0xd69f, 0xa44, 0xd10a, 0x0, 0x0);
        gbc.writeMem(0xd10a, { 0x0 });
        gbc.writeMem(0xdc99, { 0x77 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcdc, gbc.sp());
        EXPECT(0xdc9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd10a));
        EXPECT(0x77, gbc.readMem(0xdc99));
        // 77 0167
        gbc.setState(0x75ea, 0xcbef, 0xc040, 0x5fe, 0x5f62, 0xca30, 0x0, 0x0);
        gbc.writeMem(0x75ea, { 0x77 });
        gbc.writeMem(0xca30, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcbef, gbc.sp());
        EXPECT(0x75eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xca30));
        // 77 0168
        gbc.setState(0x1c94, 0xbcb5, 0x4bd0, 0xe0fc, 0x42a8, 0xb3bb, 0x1, 0x1);
        gbc.writeMem(0x1c94, { 0x77 });
        gbc.writeMem(0xb3bb, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbcb5, gbc.sp());
        EXPECT(0x1c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb3bb));
        // 77 0171
        gbc.setState(0x25dc, 0xfee4, 0xd20, 0x59ab, 0xda86, 0xe85f, 0x1, 0x1);
        gbc.writeMem(0x25dc, { 0x77 });
        gbc.writeMem(0xe85f, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfee4, gbc.sp());
        EXPECT(0x25dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xe85f));
        // 77 0174
        gbc.setState(0x4705, 0x41ac, 0x8d80, 0x107, 0xd7bc, 0xf808, 0x1, 0x0);
        gbc.writeMem(0x4705, { 0x77 });
        gbc.writeMem(0xf808, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x41ac, gbc.sp());
        EXPECT(0x4706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xf808));
        // 77 0177
        gbc.setState(0x117f, 0xe81f, 0x1470, 0xf2d2, 0x53f1, 0xc630, 0x1, 0x1);
        gbc.writeMem(0x117f, { 0x77 });
        gbc.writeMem(0xc630, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe81f, gbc.sp());
        EXPECT(0x1180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc630));
        // 77 0181
        gbc.setState(0x6673, 0x3616, 0x7e90, 0xf8dd, 0xdca, 0x98f0, 0x1, 0x0);
        gbc.writeMem(0x6673, { 0x77 });
        gbc.writeMem(0x98f0, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3616, gbc.sp());
        EXPECT(0x6674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x98f0));
        // 77 0183
        gbc.setState(0x273f, 0xcfdb, 0x3f80, 0xcb43, 0xa501, 0xc026, 0x0, 0x0);
        gbc.writeMem(0x273f, { 0x77 });
        gbc.writeMem(0xc026, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcfdb, gbc.sp());
        EXPECT(0x2740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xc026));
        // 77 0188
        gbc.setState(0x10d0, 0x9ab0, 0x990, 0xec0c, 0xe904, 0xe204, 0x1, 0x0);
        gbc.writeMem(0x10d0, { 0x77 });
        gbc.writeMem(0xe204, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9ab0, gbc.sp());
        EXPECT(0x10d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe204));
        // 77 0189
        gbc.setState(0x5f95, 0x6c1b, 0x73a0, 0xf799, 0x3afa, 0xf6a7, 0x0, 0x1);
        gbc.writeMem(0x5f95, { 0x77 });
        gbc.writeMem(0xf6a7, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6c1b, gbc.sp());
        EXPECT(0x5f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xf6a7));
        // 77 018A
        gbc.setState(0xe770, 0xa8d2, 0x9760, 0x3890, 0x4efa, 0xe589, 0x1, 0x0);
        gbc.writeMem(0xe589, { 0x0 });
        gbc.writeMem(0xe770, { 0x77 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa8d2, gbc.sp());
        EXPECT(0xe771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe589));
        EXPECT(0x77, gbc.readMem(0xe770));
        // 77 018B
        gbc.setState(0x6f2a, 0x1454, 0x19f0, 0x404, 0xe017, 0xb217, 0x1, 0x0);
        gbc.writeMem(0x6f2a, { 0x77 });
        gbc.writeMem(0xb217, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1454, gbc.sp());
        EXPECT(0x6f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb217));
        // 77 018D
        gbc.setState(0x435d, 0x74d3, 0x4180, 0x28a1, 0x6fd2, 0x9541, 0x1, 0x1);
        gbc.writeMem(0x435d, { 0x77 });
        gbc.writeMem(0x9541, { 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x74d3, gbc.sp());
        EXPECT(0x435e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x9541));
        // 77 018E
        gbc.setState(0xbc5d, 0x3bcc, 0x1f50, 0xbc8d, 0x74d5, 0xbfc8, 0x1, 0x0);
        gbc.writeMem(0xbc5d, { 0x77 });
        gbc.writeMem(0xbfc8, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3bcc, gbc.sp());
        EXPECT(0xbc5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbc5d));
        EXPECT(0x1f, gbc.readMem(0xbfc8));
        // 77 0191
        gbc.setState(0xadf5, 0x8ae4, 0xd7c0, 0xe65d, 0x2b75, 0xf017, 0x1, 0x0);
        gbc.writeMem(0xadf5, { 0x77 });
        gbc.writeMem(0xf017, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8ae4, gbc.sp());
        EXPECT(0xadf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xadf5));
        EXPECT(0xd7, gbc.readMem(0xf017));
        // 77 0192
        gbc.setState(0x96fe, 0x1088, 0x5fe0, 0x878a, 0x9d4f, 0xbdf0, 0x1, 0x1);
        gbc.writeMem(0x96fe, { 0x77 });
        gbc.writeMem(0xbdf0, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1088, gbc.sp());
        EXPECT(0x96ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x96fe));
        EXPECT(0x5f, gbc.readMem(0xbdf0));
        // 77 0194
        gbc.setState(0x7dec, 0x9f8e, 0x8250, 0xb801, 0x4af1, 0xd0b1, 0x0, 0x1);
        gbc.writeMem(0x7dec, { 0x77 });
        gbc.writeMem(0xd0b1, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9f8e, gbc.sp());
        EXPECT(0x7ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd0b1));
        // 77 0196
        gbc.setState(0xbc9b, 0x1962, 0x17e0, 0xdbfc, 0xfe22, 0xe5d0, 0x1, 0x1);
        gbc.writeMem(0xbc9b, { 0x77 });
        gbc.writeMem(0xe5d0, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1962, gbc.sp());
        EXPECT(0xbc9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbc9b));
        EXPECT(0x17, gbc.readMem(0xe5d0));
        // 77 0197
        gbc.setState(0xd0c4, 0x7437, 0xc750, 0x26b3, 0xf597, 0xba02, 0x0, 0x0);
        gbc.writeMem(0xba02, { 0x0 });
        gbc.writeMem(0xd0c4, { 0x77 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7437, gbc.sp());
        EXPECT(0xd0c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xba02));
        EXPECT(0x77, gbc.readMem(0xd0c4));
        // 77 0198
        gbc.setState(0x81bd, 0xbeb0, 0x93c0, 0xc2a0, 0x5386, 0xe9c7, 0x0, 0x1);
        gbc.writeMem(0x81bd, { 0x77 });
        gbc.writeMem(0xe9c7, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbeb0, gbc.sp());
        EXPECT(0x81be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x81bd));
        EXPECT(0x93, gbc.readMem(0xe9c7));
        // 77 0199
        gbc.setState(0x1689, 0xcdc, 0xb4b0, 0xe088, 0x6a75, 0xc3dc, 0x0, 0x1);
        gbc.writeMem(0x1689, { 0x77 });
        gbc.writeMem(0xc3dc, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcdc, gbc.sp());
        EXPECT(0x168a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xc3dc));
        // 77 019B
        gbc.setState(0x837c, 0x78ad, 0x4f70, 0x2c66, 0x736e, 0xf554, 0x0, 0x1);
        gbc.writeMem(0x837c, { 0x77 });
        gbc.writeMem(0xf554, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x78ad, gbc.sp());
        EXPECT(0x837d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x837c));
        EXPECT(0x4f, gbc.readMem(0xf554));
        // 77 019C
        gbc.setState(0x19a4, 0x8681, 0xc020, 0xa3b9, 0x3977, 0xa8e7, 0x0, 0x0);
        gbc.writeMem(0x19a4, { 0x77 });
        gbc.writeMem(0xa8e7, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8681, gbc.sp());
        EXPECT(0x19a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa8e7));
        // 77 019E
        gbc.setState(0x5591, 0x9f3a, 0x4b00, 0x6400, 0x8040, 0xf74d, 0x1, 0x1);
        gbc.writeMem(0x5591, { 0x77 });
        gbc.writeMem(0xf74d, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9f3a, gbc.sp());
        EXPECT(0x5592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xf74d));
        // 77 019F
        gbc.setState(0x8aa3, 0x4581, 0x5f80, 0x79f3, 0xa0c5, 0xc547, 0x1, 0x1);
        gbc.writeMem(0x8aa3, { 0x77 });
        gbc.writeMem(0xc547, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4581, gbc.sp());
        EXPECT(0x8aa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8aa3));
        EXPECT(0x5f, gbc.readMem(0xc547));
        // 77 01A0
        gbc.setState(0xea8, 0x3d58, 0x6c10, 0x3c9d, 0xd2fc, 0xf460, 0x1, 0x1);
        gbc.writeMem(0xea8, { 0x77 });
        gbc.writeMem(0xf460, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3d58, gbc.sp());
        EXPECT(0xea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xf460));
        // 77 01A2
        gbc.setState(0xd890, 0xaeaf, 0x3100, 0x5220, 0x5561, 0x83ca, 0x1, 0x0);
        gbc.writeMem(0x83ca, { 0x0 });
        gbc.writeMem(0xd890, { 0x77 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xaeaf, gbc.sp());
        EXPECT(0xd891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x83ca));
        EXPECT(0x77, gbc.readMem(0xd890));
        // 77 01A3
        gbc.setState(0x8864, 0x8830, 0xb4d0, 0x5fc8, 0x942d, 0xa443, 0x0, 0x0);
        gbc.writeMem(0x8864, { 0x77 });
        gbc.writeMem(0xa443, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8830, gbc.sp());
        EXPECT(0x8865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8864));
        EXPECT(0xb4, gbc.readMem(0xa443));
        // 77 01A4
        gbc.setState(0xbe0b, 0x2d41, 0x84f0, 0x4aae, 0xc16, 0xd38c, 0x1, 0x1);
        gbc.writeMem(0xbe0b, { 0x77 });
        gbc.writeMem(0xd38c, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2d41, gbc.sp());
        EXPECT(0xbe0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbe0b));
        EXPECT(0x84, gbc.readMem(0xd38c));
        // 77 01A6
        gbc.setState(0x22b4, 0x6195, 0x3780, 0x2877, 0xa53a, 0xd947, 0x1, 0x1);
        gbc.writeMem(0x22b4, { 0x77 });
        gbc.writeMem(0xd947, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6195, gbc.sp());
        EXPECT(0x22b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd947));
        // 77 01A9
        gbc.setState(0xd1f0, 0x7c95, 0x3450, 0xd892, 0xedba, 0x8d65, 0x0, 0x1);
        gbc.writeMem(0x8d65, { 0x0 });
        gbc.writeMem(0xd1f0, { 0x77 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7c95, gbc.sp());
        EXPECT(0xd1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8d65));
        EXPECT(0x77, gbc.readMem(0xd1f0));
        // 77 01AA
        gbc.setState(0x1b39, 0x9728, 0xe50, 0x505, 0x273e, 0xf1ef, 0x0, 0x1);
        gbc.writeMem(0x1b39, { 0x77 });
        gbc.writeMem(0xf1ef, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9728, gbc.sp());
        EXPECT(0x1b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xf1ef));
        // 77 01AC
        gbc.setState(0x7a29, 0x186b, 0x2480, 0xda79, 0xf2b6, 0xf886, 0x1, 0x1);
        gbc.writeMem(0x7a29, { 0x77 });
        gbc.writeMem(0xf886, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x186b, gbc.sp());
        EXPECT(0x7a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xf886));
        // 77 01AD
        gbc.setState(0xa94b, 0xea35, 0x2d50, 0x7bf0, 0x4327, 0xd0e2, 0x0, 0x0);
        gbc.writeMem(0xa94b, { 0x77 });
        gbc.writeMem(0xd0e2, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xea35, gbc.sp());
        EXPECT(0xa94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa94b));
        EXPECT(0x2d, gbc.readMem(0xd0e2));
        // 77 01AE
        gbc.setState(0x61ee, 0x284f, 0xd550, 0x1d65, 0x79a0, 0xac04, 0x1, 0x1);
        gbc.writeMem(0x61ee, { 0x77 });
        gbc.writeMem(0xac04, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x284f, gbc.sp());
        EXPECT(0x61ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xac04));
        // 77 01B0
        gbc.setState(0x7a1a, 0xb1d9, 0x7030, 0x1a97, 0xa1a6, 0x975c, 0x0, 0x0);
        gbc.writeMem(0x7a1a, { 0x77 });
        gbc.writeMem(0x975c, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb1d9, gbc.sp());
        EXPECT(0x7a1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x975c));
        // 77 01B1
        gbc.setState(0xb37b, 0x7b00, 0xea10, 0xd95c, 0x7aa7, 0x9aa4, 0x1, 0x1);
        gbc.writeMem(0x9aa4, { 0x0 });
        gbc.writeMem(0xb37b, { 0x77 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7b00, gbc.sp());
        EXPECT(0xb37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x9aa4));
        EXPECT(0x77, gbc.readMem(0xb37b));
        // 77 01B3
        gbc.setState(0x7db, 0xbd94, 0xc760, 0x3be, 0xa0f1, 0xcf0c, 0x0, 0x0);
        gbc.writeMem(0x7db, { 0x77 });
        gbc.writeMem(0xcf0c, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbd94, gbc.sp());
        EXPECT(0x7dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xcf0c));
        // 77 01B5
        gbc.setState(0x7fb, 0x2a2d, 0xe420, 0xf177, 0xe0c1, 0x8b44, 0x1, 0x1);
        gbc.writeMem(0x7fb, { 0x77 });
        gbc.writeMem(0x8b44, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2a2d, gbc.sp());
        EXPECT(0x7fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x8b44));
        // 77 01B6
        gbc.setState(0x9d25, 0x6a78, 0x51d0, 0x8794, 0x18f3, 0xf5b6, 0x0, 0x1);
        gbc.writeMem(0x9d25, { 0x77 });
        gbc.writeMem(0xf5b6, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6a78, gbc.sp());
        EXPECT(0x9d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9d25));
        EXPECT(0x51, gbc.readMem(0xf5b6));
        // 77 01B8
        gbc.setState(0x889c, 0xff8d, 0xf1a0, 0x5abe, 0x9931, 0xb8d4, 0x0, 0x0);
        gbc.writeMem(0x889c, { 0x77 });
        gbc.writeMem(0xb8d4, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xff8d, gbc.sp());
        EXPECT(0x889d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x889c));
        EXPECT(0xf1, gbc.readMem(0xb8d4));
        // 77 01B9
        gbc.setState(0x44a3, 0x24fb, 0xc730, 0xb7cb, 0x5fb5, 0xbbc0, 0x1, 0x0);
        gbc.writeMem(0x44a3, { 0x77 });
        gbc.writeMem(0xbbc0, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x24fb, gbc.sp());
        EXPECT(0x44a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xbbc0));
        // 77 01BB
        gbc.setState(0x77a5, 0xce0e, 0x73d0, 0x1ee2, 0xd72d, 0xd1c4, 0x1, 0x1);
        gbc.writeMem(0x77a5, { 0x77 });
        gbc.writeMem(0xd1c4, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xce0e, gbc.sp());
        EXPECT(0x77a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xd1c4));
        // 77 01BC
        gbc.setState(0xabe9, 0xbacc, 0xa650, 0x1442, 0x7ec8, 0xed3d, 0x1, 0x1);
        gbc.writeMem(0xabe9, { 0x77 });
        gbc.writeMem(0xed3d, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbacc, gbc.sp());
        EXPECT(0xabea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xabe9));
        EXPECT(0xa6, gbc.readMem(0xed3d));
        // 77 01BE
        gbc.setState(0x9099, 0x335a, 0x6870, 0x50b8, 0xde7b, 0xfc3c, 0x1, 0x1);
        gbc.writeMem(0x9099, { 0x77 });
        gbc.writeMem(0xfc3c, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x335a, gbc.sp());
        EXPECT(0x909a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9099));
        EXPECT(0x68, gbc.readMem(0xfc3c));
        // 77 01BF
        gbc.setState(0xa9c8, 0x610d, 0xf290, 0xd15a, 0xc007, 0xa005, 0x1, 0x0);
        gbc.writeMem(0xa005, { 0x0 });
        gbc.writeMem(0xa9c8, { 0x77 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x610d, gbc.sp());
        EXPECT(0xa9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xa005));
        EXPECT(0x77, gbc.readMem(0xa9c8));
        // 77 01C0
        gbc.setState(0x4d36, 0xeceb, 0x3a80, 0xe23f, 0x6855, 0xe398, 0x1, 0x0);
        gbc.writeMem(0x4d36, { 0x77 });
        gbc.writeMem(0xe398, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xeceb, gbc.sp());
        EXPECT(0x4d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xe398));
        // 77 01C1
        gbc.setState(0x12a1, 0xd213, 0x2220, 0x6913, 0xec6b, 0xd9a0, 0x0, 0x0);
        gbc.writeMem(0x12a1, { 0x77 });
        gbc.writeMem(0xd9a0, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd213, gbc.sp());
        EXPECT(0x12a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xd9a0));
        // 77 01C5
        gbc.setState(0x34ca, 0xbe39, 0xc1c0, 0xf0cc, 0x9afa, 0xd35b, 0x1, 0x0);
        gbc.writeMem(0x34ca, { 0x77 });
        gbc.writeMem(0xd35b, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbe39, gbc.sp());
        EXPECT(0x34cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd35b));
        // 77 01C7
        gbc.setState(0x37a1, 0x5bf1, 0x4720, 0xd769, 0xb1af, 0xc880, 0x1, 0x1);
        gbc.writeMem(0x37a1, { 0x77 });
        gbc.writeMem(0xc880, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5bf1, gbc.sp());
        EXPECT(0x37a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc880));
        // 77 01C8
        gbc.setState(0x40bf, 0xcf7f, 0x8b20, 0x570b, 0xbc88, 0xee3b, 0x1, 0x0);
        gbc.writeMem(0x40bf, { 0x77 });
        gbc.writeMem(0xee3b, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcf7f, gbc.sp());
        EXPECT(0x40c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xee3b));
        // 77 01C9
        gbc.setState(0x116c, 0xdb78, 0x5960, 0x8e2, 0x5264, 0x9677, 0x0, 0x0);
        gbc.writeMem(0x116c, { 0x77 });
        gbc.writeMem(0x9677, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdb78, gbc.sp());
        EXPECT(0x116d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x9677));
        // 77 01CA
        gbc.setState(0xd3b5, 0x4f63, 0x7870, 0x5bef, 0x13b4, 0x9d1f, 0x1, 0x1);
        gbc.writeMem(0x9d1f, { 0x0 });
        gbc.writeMem(0xd3b5, { 0x77 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4f63, gbc.sp());
        EXPECT(0xd3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9d1f));
        EXPECT(0x77, gbc.readMem(0xd3b5));
        // 77 01CB
        gbc.setState(0x5655, 0x9266, 0x5b00, 0x5535, 0xe44a, 0x8772, 0x0, 0x1);
        gbc.writeMem(0x5655, { 0x77 });
        gbc.writeMem(0x8772, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9266, gbc.sp());
        EXPECT(0x5656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8772));
        // 77 01CD
        gbc.setState(0x6d3, 0x7ec5, 0x9d50, 0x3bad, 0x91c5, 0xf931, 0x1, 0x0);
        gbc.writeMem(0x6d3, { 0x77 });
        gbc.writeMem(0xf931, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7ec5, gbc.sp());
        EXPECT(0x6d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xf931));
        // 77 01CF
        gbc.setState(0xebbc, 0xb148, 0xda20, 0x655b, 0x4e9d, 0xd448, 0x0, 0x1);
        gbc.writeMem(0xd448, { 0x0 });
        gbc.writeMem(0xebbc, { 0x77 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb148, gbc.sp());
        EXPECT(0xebbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xd448));
        EXPECT(0x77, gbc.readMem(0xebbc));
        // 77 01D1
        gbc.setState(0x50a4, 0x6352, 0x8610, 0x6968, 0x169f, 0xd773, 0x0, 0x1);
        gbc.writeMem(0x50a4, { 0x77 });
        gbc.writeMem(0xd773, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6352, gbc.sp());
        EXPECT(0x50a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd773));
        // 77 01D3
        gbc.setState(0x842e, 0x1ed1, 0xb220, 0xa6e6, 0x12d7, 0xe0e9, 0x0, 0x1);
        gbc.writeMem(0x842e, { 0x77 });
        gbc.writeMem(0xe0e9, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1ed1, gbc.sp());
        EXPECT(0x842f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x842e));
        EXPECT(0xb2, gbc.readMem(0xe0e9));
        // 77 01D6
        gbc.setState(0x73f7, 0x471e, 0xb040, 0x9d7c, 0xf4a0, 0xf81f, 0x1, 0x0);
        gbc.writeMem(0x73f7, { 0x77 });
        gbc.writeMem(0xf81f, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x471e, gbc.sp());
        EXPECT(0x73f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xf81f));
        // 77 01D8
        gbc.setState(0x54f8, 0xd045, 0x92c0, 0x6831, 0x891b, 0x84bd, 0x0, 0x0);
        gbc.writeMem(0x54f8, { 0x77 });
        gbc.writeMem(0x84bd, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd045, gbc.sp());
        EXPECT(0x54f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x84bd));
        // 77 01D9
        gbc.setState(0xcd21, 0x6772, 0x4970, 0xf85a, 0xa3bb, 0xe537, 0x0, 0x0);
        gbc.writeMem(0xcd21, { 0x77 });
        gbc.writeMem(0xe537, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6772, gbc.sp());
        EXPECT(0xcd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xcd21));
        EXPECT(0x49, gbc.readMem(0xe537));
        // 77 01DA
        gbc.setState(0x2a25, 0xb13b, 0x150, 0x43aa, 0x3cf2, 0x972b, 0x0, 0x1);
        gbc.writeMem(0x2a25, { 0x77 });
        gbc.writeMem(0x972b, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb13b, gbc.sp());
        EXPECT(0x2a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x972b));
        // 77 01DC
        gbc.setState(0x56de, 0x6b88, 0xae40, 0xd916, 0x6976, 0x9a14, 0x0, 0x1);
        gbc.writeMem(0x56de, { 0x77 });
        gbc.writeMem(0x9a14, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6b88, gbc.sp());
        EXPECT(0x56df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0x9a14));
        // 77 01DE
        gbc.setState(0x7808, 0x2e17, 0x4710, 0x735b, 0x8a9b, 0xa6fa, 0x0, 0x0);
        gbc.writeMem(0x7808, { 0x77 });
        gbc.writeMem(0xa6fa, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2e17, gbc.sp());
        EXPECT(0x7809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa6fa));
        // 77 01E1
        gbc.setState(0x45fe, 0xae0e, 0xab60, 0x9e7a, 0xf610, 0x892b, 0x0, 0x1);
        gbc.writeMem(0x45fe, { 0x77 });
        gbc.writeMem(0x892b, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xae0e, gbc.sp());
        EXPECT(0x45ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x892b));
        // 77 01E8
        gbc.setState(0x80b7, 0xcaf7, 0xb4d0, 0x8eab, 0xe00a, 0xf563, 0x0, 0x0);
        gbc.writeMem(0x80b7, { 0x77 });
        gbc.writeMem(0xf563, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcaf7, gbc.sp());
        EXPECT(0x80b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x80b7));
        EXPECT(0xb4, gbc.readMem(0xf563));
        // 77 01EA
        gbc.setState(0xd142, 0x4b2, 0xc1b0, 0x769, 0x3dda, 0xe445, 0x1, 0x0);
        gbc.writeMem(0xd142, { 0x77 });
        gbc.writeMem(0xe445, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4b2, gbc.sp());
        EXPECT(0xd143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd142));
        EXPECT(0xc1, gbc.readMem(0xe445));
        // 77 01EB
        gbc.setState(0x3eb6, 0x90cf, 0x6d00, 0x26c4, 0x27e, 0xd53c, 0x1, 0x0);
        gbc.writeMem(0x3eb6, { 0x77 });
        gbc.writeMem(0xd53c, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x90cf, gbc.sp());
        EXPECT(0x3eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd53c));
        // 77 01F0
        gbc.setState(0x4e42, 0x540f, 0x66c0, 0x2a14, 0x5791, 0x9d0d, 0x1, 0x1);
        gbc.writeMem(0x4e42, { 0x77 });
        gbc.writeMem(0x9d0d, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x540f, gbc.sp());
        EXPECT(0x4e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x9d0d));
        // 77 01F1
        gbc.setState(0xc2ae, 0xac2d, 0xd920, 0x7820, 0x38fd, 0xedc7, 0x1, 0x1);
        gbc.writeMem(0xc2ae, { 0x77 });
        gbc.writeMem(0xedc7, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xac2d, gbc.sp());
        EXPECT(0xc2af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc2ae));
        EXPECT(0xd9, gbc.readMem(0xedc7));
        // 77 01F2
        gbc.setState(0x6ef1, 0x7a40, 0xfd90, 0x8f77, 0x1d8d, 0xe094, 0x0, 0x1);
        gbc.writeMem(0x6ef1, { 0x77 });
        gbc.writeMem(0xe094, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7a40, gbc.sp());
        EXPECT(0x6ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xe094));
        // 77 01F5
        gbc.setState(0x502e, 0x2287, 0x3d90, 0xed73, 0xd6e5, 0xd273, 0x1, 0x0);
        gbc.writeMem(0x502e, { 0x77 });
        gbc.writeMem(0xd273, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2287, gbc.sp());
        EXPECT(0x502f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xd273));
        // 77 01F9
        gbc.setState(0xecba, 0x8379, 0x2bf0, 0xa5ef, 0xee86, 0xc2dd, 0x0, 0x0);
        gbc.writeMem(0xc2dd, { 0x0 });
        gbc.writeMem(0xecba, { 0x77 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8379, gbc.sp());
        EXPECT(0xecbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc2dd));
        EXPECT(0x77, gbc.readMem(0xecba));
        // 77 01FE
        gbc.setState(0xbfe5, 0xbc7c, 0x30, 0x84cc, 0x862a, 0x764e, 0x1, 0x1);
        gbc.writeMem(0x764e, { 0x0 });
        gbc.writeMem(0xbfe5, { 0x77 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbc7c, gbc.sp());
        EXPECT(0xbfe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbfe5));
        // 77 01FF
        gbc.setState(0x9931, 0x66f2, 0xa310, 0xca63, 0xe1f7, 0xdf7e, 0x1, 0x1);
        gbc.writeMem(0x9931, { 0x77 });
        gbc.writeMem(0xdf7e, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x66f2, gbc.sp());
        EXPECT(0x9932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9931));
        EXPECT(0xa3, gbc.readMem(0xdf7e));
        // 77 0200
        gbc.setState(0x71b1, 0x605f, 0xbe20, 0x6bd1, 0xbf3e, 0xfb8b, 0x0, 0x1);
        gbc.writeMem(0x71b1, { 0x77 });
        gbc.writeMem(0xfb8b, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x605f, gbc.sp());
        EXPECT(0x71b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xfb8b));
        // 77 0203
        gbc.setState(0x9d80, 0xd635, 0xdc30, 0x7f57, 0x237d, 0xc2c4, 0x1, 0x0);
        gbc.writeMem(0x9d80, { 0x77 });
        gbc.writeMem(0xc2c4, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd635, gbc.sp());
        EXPECT(0x9d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9d80));
        EXPECT(0xdc, gbc.readMem(0xc2c4));
        // 77 0206
        gbc.setState(0x1a0f, 0x93a, 0x5bc0, 0x83c3, 0xa830, 0xee96, 0x1, 0x0);
        gbc.writeMem(0x1a0f, { 0x77 });
        gbc.writeMem(0xee96, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x93a, gbc.sp());
        EXPECT(0x1a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xee96));
        // 77 0207
        gbc.setState(0x531e, 0x3cad, 0xdaf0, 0x2814, 0x1fe4, 0xa489, 0x0, 0x0);
        gbc.writeMem(0x531e, { 0x77 });
        gbc.writeMem(0xa489, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3cad, gbc.sp());
        EXPECT(0x531f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa489));
        // 77 020A
        gbc.setState(0x8648, 0xe6d9, 0x5c10, 0x1236, 0x6604, 0xdf42, 0x1, 0x1);
        gbc.writeMem(0x8648, { 0x77 });
        gbc.writeMem(0xdf42, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe6d9, gbc.sp());
        EXPECT(0x8649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8648));
        EXPECT(0x5c, gbc.readMem(0xdf42));
        // 77 020B
        gbc.setState(0xb03d, 0x1221, 0xa1b0, 0xdfd0, 0xdc2f, 0x90e3, 0x0, 0x1);
        gbc.writeMem(0x90e3, { 0x0 });
        gbc.writeMem(0xb03d, { 0x77 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1221, gbc.sp());
        EXPECT(0xb03e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x90e3));
        EXPECT(0x77, gbc.readMem(0xb03d));
        // 77 020C
        gbc.setState(0x3142, 0x458b, 0x2940, 0x6373, 0x3d87, 0xf8c2, 0x1, 0x1);
        gbc.writeMem(0x3142, { 0x77 });
        gbc.writeMem(0xf8c2, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x458b, gbc.sp());
        EXPECT(0x3143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xf8c2));
        // 77 020D
        gbc.setState(0x6779, 0x6f3e, 0xce70, 0xf1cf, 0xd26d, 0xd902, 0x1, 0x0);
        gbc.writeMem(0x6779, { 0x77 });
        gbc.writeMem(0xd902, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6f3e, gbc.sp());
        EXPECT(0x677a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xd902));
        // 77 020F
        gbc.setState(0x36ca, 0xa4c4, 0xfa10, 0x4054, 0x7474, 0xe5c8, 0x0, 0x0);
        gbc.writeMem(0x36ca, { 0x77 });
        gbc.writeMem(0xe5c8, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa4c4, gbc.sp());
        EXPECT(0x36cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe5c8));
        // 77 0210
        gbc.setState(0x69d2, 0xc708, 0x19c0, 0x3bc9, 0xfca2, 0x9bf4, 0x0, 0x0);
        gbc.writeMem(0x69d2, { 0x77 });
        gbc.writeMem(0x9bf4, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc708, gbc.sp());
        EXPECT(0x69d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9bf4));
        // 77 0211
        gbc.setState(0xcf35, 0x448d, 0x29b0, 0xb19a, 0x17cd, 0xf87f, 0x1, 0x1);
        gbc.writeMem(0xcf35, { 0x77 });
        gbc.writeMem(0xf87f, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x448d, gbc.sp());
        EXPECT(0xcf36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xcf35));
        EXPECT(0x29, gbc.readMem(0xf87f));
        // 77 0212
        gbc.setState(0x3a3, 0xddc2, 0x1350, 0xd011, 0x76f2, 0x8764, 0x0, 0x1);
        gbc.writeMem(0x3a3, { 0x77 });
        gbc.writeMem(0x8764, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xddc2, gbc.sp());
        EXPECT(0x3a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8764));
        // 77 0214
        gbc.setState(0xe48d, 0xd7ba, 0x25a0, 0xbed, 0xf222, 0xc998, 0x1, 0x1);
        gbc.writeMem(0xc998, { 0x0 });
        gbc.writeMem(0xe48d, { 0x77 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd7ba, gbc.sp());
        EXPECT(0xe48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc998));
        EXPECT(0x77, gbc.readMem(0xe48d));
        // 77 0216
        gbc.setState(0x16e7, 0xe199, 0xec20, 0x8652, 0x7d5c, 0x9586, 0x0, 0x1);
        gbc.writeMem(0x16e7, { 0x77 });
        gbc.writeMem(0x9586, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe199, gbc.sp());
        EXPECT(0x16e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x9586));
        // 77 0217
        gbc.setState(0x9e3, 0xc898, 0x35f0, 0x67ba, 0x4457, 0xbce3, 0x0, 0x0);
        gbc.writeMem(0x9e3, { 0x77 });
        gbc.writeMem(0xbce3, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc898, gbc.sp());
        EXPECT(0x9e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xbce3));
        // 77 0219
        gbc.setState(0xbdce, 0xc4c9, 0x4ea0, 0xa26f, 0x64b8, 0xbab1, 0x0, 0x0);
        gbc.writeMem(0xbab1, { 0x0 });
        gbc.writeMem(0xbdce, { 0x77 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc4c9, gbc.sp());
        EXPECT(0xbdcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbab1));
        EXPECT(0x77, gbc.readMem(0xbdce));
        // 77 021A
        gbc.setState(0x7e8f, 0xbd35, 0x7fd0, 0x56ee, 0x2471, 0xe219, 0x0, 0x1);
        gbc.writeMem(0x7e8f, { 0x77 });
        gbc.writeMem(0xe219, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbd35, gbc.sp());
        EXPECT(0x7e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xe219));
        // 77 021B
        gbc.setState(0xd7cc, 0x1bae, 0xa2b0, 0x9962, 0xaa6f, 0x8a85, 0x1, 0x0);
        gbc.writeMem(0x8a85, { 0x0 });
        gbc.writeMem(0xd7cc, { 0x77 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1bae, gbc.sp());
        EXPECT(0xd7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8a85));
        EXPECT(0x77, gbc.readMem(0xd7cc));
        // 77 021E
        gbc.setState(0x4314, 0x318b, 0x1280, 0xfd13, 0x1e15, 0xa85c, 0x1, 0x1);
        gbc.writeMem(0x4314, { 0x77 });
        gbc.writeMem(0xa85c, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x318b, gbc.sp());
        EXPECT(0x4315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa85c));
        // 77 021F
        gbc.setState(0xb03b, 0x9620, 0x20b0, 0x5a4b, 0xc5c7, 0xa1dd, 0x0, 0x0);
        gbc.writeMem(0xa1dd, { 0x0 });
        gbc.writeMem(0xb03b, { 0x77 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9620, gbc.sp());
        EXPECT(0xb03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa1dd));
        EXPECT(0x77, gbc.readMem(0xb03b));
        // 77 0222
        gbc.setState(0x1bc4, 0x8935, 0xc490, 0xa42f, 0x5a59, 0x9315, 0x0, 0x0);
        gbc.writeMem(0x1bc4, { 0x77 });
        gbc.writeMem(0x9315, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8935, gbc.sp());
        EXPECT(0x1bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x9315));
        // 77 0224
        gbc.setState(0x19d2, 0x8220, 0x5b40, 0xddba, 0x4f66, 0xafde, 0x0, 0x1);
        gbc.writeMem(0x19d2, { 0x77 });
        gbc.writeMem(0xafde, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8220, gbc.sp());
        EXPECT(0x19d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xafde));
        // 77 0226
        gbc.setState(0x6490, 0x3224, 0xccf0, 0xb3fc, 0xf666, 0x86fc, 0x0, 0x1);
        gbc.writeMem(0x6490, { 0x77 });
        gbc.writeMem(0x86fc, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3224, gbc.sp());
        EXPECT(0x6491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0x86fc));
        // 77 022A
        gbc.setState(0x605b, 0xf9ab, 0xe6e0, 0x788b, 0x5114, 0xe038, 0x1, 0x1);
        gbc.writeMem(0x605b, { 0x77 });
        gbc.writeMem(0xe038, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf9ab, gbc.sp());
        EXPECT(0x605c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe038));
        // 77 022C
        gbc.setState(0x9aa, 0x799c, 0xe3c0, 0x93dd, 0xf15e, 0x88fd, 0x1, 0x0);
        gbc.writeMem(0x9aa, { 0x77 });
        gbc.writeMem(0x88fd, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x799c, gbc.sp());
        EXPECT(0x9ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x88fd));
        // 77 022D
        gbc.setState(0xe300, 0x80e3, 0xbba0, 0x838, 0x4335, 0xb990, 0x0, 0x0);
        gbc.writeMem(0xb990, { 0x0 });
        gbc.writeMem(0xe300, { 0x77 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x80e3, gbc.sp());
        EXPECT(0xe301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb990));
        EXPECT(0x77, gbc.readMem(0xe300));
        // 77 022F
        gbc.setState(0xb8fc, 0x1573, 0x21d0, 0x23c8, 0xa7e, 0xa37b, 0x0, 0x0);
        gbc.writeMem(0xa37b, { 0x0 });
        gbc.writeMem(0xb8fc, { 0x77 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1573, gbc.sp());
        EXPECT(0xb8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa37b));
        EXPECT(0x77, gbc.readMem(0xb8fc));
        // 77 0230
        gbc.setState(0x843c, 0xccf6, 0x5570, 0xc8e4, 0x9f79, 0xbd83, 0x0, 0x0);
        gbc.writeMem(0x843c, { 0x77 });
        gbc.writeMem(0xbd83, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xccf6, gbc.sp());
        EXPECT(0x843d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x843c));
        EXPECT(0x55, gbc.readMem(0xbd83));
        // 77 0232
        gbc.setState(0x460, 0x2bf6, 0xa050, 0x3add, 0x1b27, 0xc521, 0x1, 0x0);
        gbc.writeMem(0x460, { 0x77 });
        gbc.writeMem(0xc521, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2bf6, gbc.sp());
        EXPECT(0x461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc521));
        // 77 0233
        gbc.setState(0x4a9, 0xe8a3, 0xc650, 0x1a67, 0xc66e, 0xbe91, 0x1, 0x1);
        gbc.writeMem(0x4a9, { 0x77 });
        gbc.writeMem(0xbe91, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe8a3, gbc.sp());
        EXPECT(0x4aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xbe91));
        // 77 0236
        gbc.setState(0x515, 0xf089, 0x31a0, 0x6cd9, 0x6cfa, 0xd844, 0x0, 0x1);
        gbc.writeMem(0x515, { 0x77 });
        gbc.writeMem(0xd844, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf089, gbc.sp());
        EXPECT(0x516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd844));
        // 77 0238
        gbc.setState(0xb7b5, 0x7686, 0x2150, 0x795b, 0xc449, 0xadf1, 0x1, 0x1);
        gbc.writeMem(0xadf1, { 0x0 });
        gbc.writeMem(0xb7b5, { 0x77 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7686, gbc.sp());
        EXPECT(0xb7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xadf1));
        EXPECT(0x77, gbc.readMem(0xb7b5));
        // 77 023A
        gbc.setState(0xccf1, 0x13c8, 0x31e0, 0x72f4, 0x46c1, 0xcd4b, 0x0, 0x1);
        gbc.writeMem(0xccf1, { 0x77 });
        gbc.writeMem(0xcd4b, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x13c8, gbc.sp());
        EXPECT(0xccf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xccf1));
        EXPECT(0x31, gbc.readMem(0xcd4b));
        // 77 023B
        gbc.setState(0xd67a, 0xed25, 0x3830, 0x3d68, 0x6d45, 0xf4e3, 0x0, 0x0);
        gbc.writeMem(0xd67a, { 0x77 });
        gbc.writeMem(0xf4e3, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xed25, gbc.sp());
        EXPECT(0xd67b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd67a));
        EXPECT(0x38, gbc.readMem(0xf4e3));
        // 77 0240
        gbc.setState(0x2d95, 0x4e50, 0xca80, 0xe2f5, 0x1d0f, 0xec1e, 0x0, 0x0);
        gbc.writeMem(0x2d95, { 0x77 });
        gbc.writeMem(0xec1e, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4e50, gbc.sp());
        EXPECT(0x2d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xec1e));
        // 77 0241
        gbc.setState(0xc205, 0x29ca, 0xecf0, 0x8ee3, 0xbee5, 0xbe0b, 0x1, 0x0);
        gbc.writeMem(0xbe0b, { 0x0 });
        gbc.writeMem(0xc205, { 0x77 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x29ca, gbc.sp());
        EXPECT(0xc206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xbe0b));
        EXPECT(0x77, gbc.readMem(0xc205));
        // 77 0242
        gbc.setState(0x440, 0xa3b1, 0xe850, 0x6893, 0x5452, 0xaa47, 0x1, 0x0);
        gbc.writeMem(0x440, { 0x77 });
        gbc.writeMem(0xaa47, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa3b1, gbc.sp());
        EXPECT(0x441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xaa47));
        // 77 0243
        gbc.setState(0x5f52, 0xaf7a, 0x7a0, 0x39e2, 0x466d, 0xb524, 0x0, 0x1);
        gbc.writeMem(0x5f52, { 0x77 });
        gbc.writeMem(0xb524, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xaf7a, gbc.sp());
        EXPECT(0x5f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb524));
        // 77 0245
        gbc.setState(0x8c50, 0x99d6, 0xb070, 0x3bd0, 0x6216, 0xdbb5, 0x0, 0x0);
        gbc.writeMem(0x8c50, { 0x77 });
        gbc.writeMem(0xdbb5, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x99d6, gbc.sp());
        EXPECT(0x8c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8c50));
        EXPECT(0xb0, gbc.readMem(0xdbb5));
        // 77 0246
        gbc.setState(0x38b2, 0xdf95, 0xd7f0, 0x60ab, 0x971e, 0x9254, 0x1, 0x1);
        gbc.writeMem(0x38b2, { 0x77 });
        gbc.writeMem(0x9254, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdf95, gbc.sp());
        EXPECT(0x38b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x9254));
        // 77 0249
        gbc.setState(0x5dff, 0x25e5, 0xb990, 0x4124, 0xe908, 0xbdf8, 0x0, 0x0);
        gbc.writeMem(0x5dff, { 0x77 });
        gbc.writeMem(0xbdf8, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x25e5, gbc.sp());
        EXPECT(0x5e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xbdf8));
        // 77 024A
        gbc.setState(0x26b6, 0x314a, 0xab10, 0x9a59, 0x5aa, 0x8dd6, 0x1, 0x0);
        gbc.writeMem(0x26b6, { 0x77 });
        gbc.writeMem(0x8dd6, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x314a, gbc.sp());
        EXPECT(0x26b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x8dd6));
        // 77 024B
        gbc.setState(0x59fa, 0xb599, 0xe0c0, 0xe865, 0xc409, 0x96e9, 0x0, 0x0);
        gbc.writeMem(0x59fa, { 0x77 });
        gbc.writeMem(0x96e9, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb599, gbc.sp());
        EXPECT(0x59fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x96e9));
        // 77 024C
        gbc.setState(0x99b9, 0xe3da, 0xd950, 0x1332, 0x7ea8, 0xaf76, 0x1, 0x1);
        gbc.writeMem(0x99b9, { 0x77 });
        gbc.writeMem(0xaf76, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe3da, gbc.sp());
        EXPECT(0x99ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x99b9));
        EXPECT(0xd9, gbc.readMem(0xaf76));
        // 77 0250
        gbc.setState(0x72fb, 0x14d, 0xdaf0, 0x38b5, 0xd563, 0xf72b, 0x1, 0x0);
        gbc.writeMem(0x72fb, { 0x77 });
        gbc.writeMem(0xf72b, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x14d, gbc.sp());
        EXPECT(0x72fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xf72b));
        // 77 0252
        gbc.setState(0x24ae, 0x1b8f, 0xd6f0, 0x65db, 0xc283, 0xc5a6, 0x0, 0x1);
        gbc.writeMem(0x24ae, { 0x77 });
        gbc.writeMem(0xc5a6, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1b8f, gbc.sp());
        EXPECT(0x24af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc5a6));
        // 77 0255
        gbc.setState(0x1113, 0xf63c, 0x7690, 0x55e, 0x8710, 0x8033, 0x1, 0x0);
        gbc.writeMem(0x1113, { 0x77 });
        gbc.writeMem(0x8033, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf63c, gbc.sp());
        EXPECT(0x1114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8033));
        // 77 0259
        gbc.setState(0xc1eb, 0xe91a, 0x62d0, 0xe4d2, 0x1067, 0xaa05, 0x1, 0x1);
        gbc.writeMem(0xaa05, { 0x0 });
        gbc.writeMem(0xc1eb, { 0x77 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe91a, gbc.sp());
        EXPECT(0xc1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xaa05));
        EXPECT(0x77, gbc.readMem(0xc1eb));
        // 77 025A
        gbc.setState(0x366d, 0x30bd, 0x810, 0x274b, 0xbd9f, 0x801f, 0x0, 0x1);
        gbc.writeMem(0x366d, { 0x77 });
        gbc.writeMem(0x801f, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x30bd, gbc.sp());
        EXPECT(0x366e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x801f));
        // 77 025C
        gbc.setState(0x4df5, 0xb473, 0x88d0, 0xa3e9, 0x3b3b, 0xe5d3, 0x1, 0x1);
        gbc.writeMem(0x4df5, { 0x77 });
        gbc.writeMem(0xe5d3, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb473, gbc.sp());
        EXPECT(0x4df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe5d3));
        // 77 025E
        gbc.setState(0x4435, 0xe1eb, 0x8a0, 0x48c1, 0x7b26, 0xc951, 0x0, 0x0);
        gbc.writeMem(0x4435, { 0x77 });
        gbc.writeMem(0xc951, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe1eb, gbc.sp());
        EXPECT(0x4436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xc951));
        // 77 025F
        gbc.setState(0x6afd, 0x5d70, 0x60d0, 0x6225, 0x5e03, 0xdc99, 0x0, 0x1);
        gbc.writeMem(0x6afd, { 0x77 });
        gbc.writeMem(0xdc99, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5d70, gbc.sp());
        EXPECT(0x6afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xdc99));
        // 77 0260
        gbc.setState(0xfc1, 0xdbcc, 0x94a0, 0xf47b, 0x3a5b, 0xfefb, 0x0, 0x1);
        gbc.writeMem(0xfc1, { 0x77 });
        gbc.writeMem(0xfefb, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdbcc, gbc.sp());
        EXPECT(0xfc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xfefb));
        // 77 0262
        gbc.setState(0xe49f, 0xaef1, 0xa070, 0x63c3, 0x2c8, 0x8aa8, 0x0, 0x0);
        gbc.writeMem(0x8aa8, { 0x0 });
        gbc.writeMem(0xe49f, { 0x77 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xaef1, gbc.sp());
        EXPECT(0xe4a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8aa8));
        EXPECT(0x77, gbc.readMem(0xe49f));
        // 77 0263
        gbc.setState(0x7097, 0x974e, 0xca80, 0xa72f, 0x5b95, 0xa2df, 0x1, 0x1);
        gbc.writeMem(0x7097, { 0x77 });
        gbc.writeMem(0xa2df, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x974e, gbc.sp());
        EXPECT(0x7098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xa2df));
        // 77 0265
        gbc.setState(0xb35e, 0x5ebf, 0x2d30, 0x94c5, 0xa3a5, 0xdbff, 0x1, 0x1);
        gbc.writeMem(0xb35e, { 0x77 });
        gbc.writeMem(0xdbff, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5ebf, gbc.sp());
        EXPECT(0xb35f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb35e));
        EXPECT(0x2d, gbc.readMem(0xdbff));
        // 77 0266
        gbc.setState(0xa66, 0x479c, 0xcd10, 0xee6a, 0x6451, 0xe5e8, 0x1, 0x1);
        gbc.writeMem(0xa66, { 0x77 });
        gbc.writeMem(0xe5e8, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x479c, gbc.sp());
        EXPECT(0xa67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xe5e8));
        // 77 026B
        gbc.setState(0xc07, 0x2c4b, 0x2180, 0x7193, 0x470a, 0xbccd, 0x1, 0x1);
        gbc.writeMem(0xc07, { 0x77 });
        gbc.writeMem(0xbccd, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2c4b, gbc.sp());
        EXPECT(0xc08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xbccd));
        // 77 026D
        gbc.setState(0x7a87, 0xac7, 0xee60, 0x88c8, 0xbaf2, 0x8be4, 0x1, 0x1);
        gbc.writeMem(0x7a87, { 0x77 });
        gbc.writeMem(0x8be4, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xac7, gbc.sp());
        EXPECT(0x7a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x8be4));
        // 77 026E
        gbc.setState(0xe974, 0x804c, 0x8950, 0xe2f1, 0x20fd, 0xd375, 0x0, 0x0);
        gbc.writeMem(0xd375, { 0x0 });
        gbc.writeMem(0xe974, { 0x77 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x804c, gbc.sp());
        EXPECT(0xe975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd375));
        EXPECT(0x77, gbc.readMem(0xe974));
        // 77 026F
        gbc.setState(0x92b5, 0x4045, 0xd0b0, 0xf9b8, 0x2b99, 0x8a82, 0x1, 0x0);
        gbc.writeMem(0x8a82, { 0x0 });
        gbc.writeMem(0x92b5, { 0x77 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4045, gbc.sp());
        EXPECT(0x92b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8a82));
        EXPECT(0x77, gbc.readMem(0x92b5));
        // 77 0270
        gbc.setState(0xe1d5, 0xdeca, 0xf780, 0xab4d, 0x37b0, 0xfe1a, 0x0, 0x1);
        gbc.writeMem(0xe1d5, { 0x77 });
        gbc.writeMem(0xfe1a, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdeca, gbc.sp());
        EXPECT(0xe1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xe1d5));
        EXPECT(0xf7, gbc.readMem(0xfe1a));
        // 77 0271
        gbc.setState(0xc5b7, 0x4fb8, 0x18c0, 0x75dc, 0xf8b6, 0xc4ac, 0x1, 0x0);
        gbc.writeMem(0xc4ac, { 0x0 });
        gbc.writeMem(0xc5b7, { 0x77 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4fb8, gbc.sp());
        EXPECT(0xc5b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xc4ac));
        EXPECT(0x77, gbc.readMem(0xc5b7));
        // 77 0278
        gbc.setState(0x7fc9, 0xae7c, 0x6860, 0xd66, 0x1c4a, 0x850b, 0x1, 0x0);
        gbc.writeMem(0x7fc9, { 0x77 });
        gbc.writeMem(0x850b, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xae7c, gbc.sp());
        EXPECT(0x7fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x850b));
        // 77 0279
        gbc.setState(0xca9a, 0xd2de, 0xb120, 0x4307, 0xbdb3, 0xb99b, 0x1, 0x1);
        gbc.writeMem(0xb99b, { 0x0 });
        gbc.writeMem(0xca9a, { 0x77 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd2de, gbc.sp());
        EXPECT(0xca9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xb99b));
        EXPECT(0x77, gbc.readMem(0xca9a));
        // 77 027A
        gbc.setState(0x2785, 0x5b72, 0x5fe0, 0xc81d, 0xdf04, 0xf4ab, 0x0, 0x1);
        gbc.writeMem(0x2785, { 0x77 });
        gbc.writeMem(0xf4ab, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5b72, gbc.sp());
        EXPECT(0x2786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xf4ab));
        // 77 027C
        gbc.setState(0xbf93, 0x3290, 0xd0, 0x8fde, 0x5cff, 0x12bf, 0x1, 0x1);
        gbc.writeMem(0x12bf, { 0x0 });
        gbc.writeMem(0xbf93, { 0x77 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3290, gbc.sp());
        EXPECT(0xbf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbf93));
        // 77 027F
        gbc.setState(0x17f1, 0x1469, 0x5ec0, 0xb74, 0x6b17, 0xc623, 0x1, 0x1);
        gbc.writeMem(0x17f1, { 0x77 });
        gbc.writeMem(0xc623, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1469, gbc.sp());
        EXPECT(0x17f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc623));
        // 77 0284
        gbc.setState(0xa8a8, 0x411a, 0xb100, 0x2b58, 0xfdfd, 0xc6bd, 0x0, 0x0);
        gbc.writeMem(0xa8a8, { 0x77 });
        gbc.writeMem(0xc6bd, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x411a, gbc.sp());
        EXPECT(0xa8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa8a8));
        EXPECT(0xb1, gbc.readMem(0xc6bd));
        // 77 0287
        gbc.setState(0x4893, 0x46f0, 0x6320, 0x3f24, 0x5d89, 0xc569, 0x0, 0x1);
        gbc.writeMem(0x4893, { 0x77 });
        gbc.writeMem(0xc569, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x46f0, gbc.sp());
        EXPECT(0x4894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xc569));
        // 77 0289
        gbc.setState(0xe816, 0x394d, 0x9e0, 0xc89, 0xa7ee, 0xcfe4, 0x0, 0x1);
        gbc.writeMem(0xcfe4, { 0x0 });
        gbc.writeMem(0xe816, { 0x77 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x394d, gbc.sp());
        EXPECT(0xe817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xcfe4));
        EXPECT(0x77, gbc.readMem(0xe816));
        // 77 028A
        gbc.setState(0x4635, 0x6b23, 0xe500, 0x519d, 0x2069, 0x9044, 0x1, 0x0);
        gbc.writeMem(0x4635, { 0x77 });
        gbc.writeMem(0x9044, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6b23, gbc.sp());
        EXPECT(0x4636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9044));
        // 77 028B
        gbc.setState(0x3c41, 0x98eb, 0xd620, 0x1c2d, 0xc332, 0xaf67, 0x0, 0x1);
        gbc.writeMem(0x3c41, { 0x77 });
        gbc.writeMem(0xaf67, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x98eb, gbc.sp());
        EXPECT(0x3c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xaf67));
        // 77 028D
        gbc.setState(0x821a, 0xab4c, 0xcf00, 0x6e5, 0x3f32, 0xfa3c, 0x0, 0x0);
        gbc.writeMem(0x821a, { 0x77 });
        gbc.writeMem(0xfa3c, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xab4c, gbc.sp());
        EXPECT(0x821b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x821a));
        EXPECT(0xcf, gbc.readMem(0xfa3c));
        // 77 028E
        gbc.setState(0x149, 0x2b9c, 0xfc90, 0x957, 0xae76, 0xb514, 0x0, 0x1);
        gbc.writeMem(0x149, { 0x77 });
        gbc.writeMem(0xb514, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2b9c, gbc.sp());
        EXPECT(0x14a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xb514));
        // 77 028F
        gbc.setState(0xe6ce, 0x6678, 0x450, 0x46aa, 0xf6b1, 0x9912, 0x0, 0x0);
        gbc.writeMem(0x9912, { 0x0 });
        gbc.writeMem(0xe6ce, { 0x77 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6678, gbc.sp());
        EXPECT(0xe6cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9912));
        EXPECT(0x77, gbc.readMem(0xe6ce));
        // 77 0290
        gbc.setState(0x7eef, 0x10ae, 0x6710, 0xd88d, 0xc913, 0xda00, 0x0, 0x0);
        gbc.writeMem(0x7eef, { 0x77 });
        gbc.writeMem(0xda00, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x10ae, gbc.sp());
        EXPECT(0x7ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xda00));
        // 77 0294
        gbc.setState(0x330d, 0x464b, 0x4890, 0xb0cf, 0x1b99, 0xf5ba, 0x0, 0x0);
        gbc.writeMem(0x330d, { 0x77 });
        gbc.writeMem(0xf5ba, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x464b, gbc.sp());
        EXPECT(0x330e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xf5ba));
        // 77 0295
        gbc.setState(0x7e42, 0x76c2, 0x2760, 0xc2c4, 0x7ba9, 0xe649, 0x1, 0x1);
        gbc.writeMem(0x7e42, { 0x77 });
        gbc.writeMem(0xe649, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x76c2, gbc.sp());
        EXPECT(0x7e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe649));
        // 77 0299
        gbc.setState(0x7b82, 0xabee, 0xc0d0, 0x78d2, 0x7ce9, 0xd1e6, 0x0, 0x1);
        gbc.writeMem(0x7b82, { 0x77 });
        gbc.writeMem(0xd1e6, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xabee, gbc.sp());
        EXPECT(0x7b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xd1e6));
        // 77 029D
        gbc.setState(0x839e, 0x5346, 0xd5a0, 0x88af, 0x9ca4, 0xb83d, 0x1, 0x0);
        gbc.writeMem(0x839e, { 0x77 });
        gbc.writeMem(0xb83d, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5346, gbc.sp());
        EXPECT(0x839f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x839e));
        EXPECT(0xd5, gbc.readMem(0xb83d));
        // 77 02A3
        gbc.setState(0x83a6, 0xb290, 0x7d80, 0x7400, 0x76cf, 0xe910, 0x1, 0x1);
        gbc.writeMem(0x83a6, { 0x77 });
        gbc.writeMem(0xe910, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb290, gbc.sp());
        EXPECT(0x83a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x83a6));
        EXPECT(0x7d, gbc.readMem(0xe910));
        // 77 02A6
        gbc.setState(0xef82, 0xb107, 0xa8a0, 0x5c38, 0xc60c, 0xa9e0, 0x0, 0x1);
        gbc.writeMem(0xa9e0, { 0x0 });
        gbc.writeMem(0xef82, { 0x77 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb107, gbc.sp());
        EXPECT(0xef83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xa9e0));
        EXPECT(0x77, gbc.readMem(0xef82));
        // 77 02A8
        gbc.setState(0xcb7c, 0x704b, 0xe700, 0x8da6, 0xd66a, 0xf278, 0x0, 0x1);
        gbc.writeMem(0xcb7c, { 0x77 });
        gbc.writeMem(0xf278, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x704b, gbc.sp());
        EXPECT(0xcb7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xcb7c));
        EXPECT(0xe7, gbc.readMem(0xf278));
        // 77 02AD
        gbc.setState(0x7ed1, 0x82d2, 0x86d0, 0xf985, 0xa23b, 0xb764, 0x1, 0x0);
        gbc.writeMem(0x7ed1, { 0x77 });
        gbc.writeMem(0xb764, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x82d2, gbc.sp());
        EXPECT(0x7ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb764));
        // 77 02AE
        gbc.setState(0x1ed, 0x1f1b, 0x9b20, 0xadea, 0x342f, 0xbc01, 0x0, 0x1);
        gbc.writeMem(0x1ed, { 0x77 });
        gbc.writeMem(0xbc01, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1f1b, gbc.sp());
        EXPECT(0x1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbc01));
        // 77 02AF
        gbc.setState(0x70f3, 0x5c90, 0x32e0, 0xee82, 0x9b5d, 0x9d4f, 0x0, 0x1);
        gbc.writeMem(0x70f3, { 0x77 });
        gbc.writeMem(0x9d4f, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5c90, gbc.sp());
        EXPECT(0x70f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9d4f));
        // 77 02B0
        gbc.setState(0x3e67, 0x86c1, 0x2e80, 0xebe7, 0x6ddc, 0xda9e, 0x1, 0x0);
        gbc.writeMem(0x3e67, { 0x77 });
        gbc.writeMem(0xda9e, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x86c1, gbc.sp());
        EXPECT(0x3e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xda9e));
        // 77 02B3
        gbc.setState(0x31bc, 0xe2a9, 0x9d80, 0xc832, 0xcf5e, 0xa674, 0x1, 0x1);
        gbc.writeMem(0x31bc, { 0x77 });
        gbc.writeMem(0xa674, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe2a9, gbc.sp());
        EXPECT(0x31bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa674));
        // 77 02B9
        gbc.setState(0x33bb, 0x894d, 0x34e0, 0xe99b, 0x2417, 0xf8e5, 0x1, 0x1);
        gbc.writeMem(0x33bb, { 0x77 });
        gbc.writeMem(0xf8e5, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x894d, gbc.sp());
        EXPECT(0x33bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xf8e5));
        // 77 02BC
        gbc.setState(0x80fe, 0x24c6, 0x4000, 0xd76d, 0x27e6, 0x87be, 0x0, 0x1);
        gbc.writeMem(0x80fe, { 0x77 });
        gbc.writeMem(0x87be, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x24c6, gbc.sp());
        EXPECT(0x80ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x80fe));
        EXPECT(0x40, gbc.readMem(0x87be));
        // 77 02BF
        gbc.setState(0xdf8d, 0xe26b, 0xd390, 0x7415, 0x3f95, 0xf78f, 0x0, 0x0);
        gbc.writeMem(0xdf8d, { 0x77 });
        gbc.writeMem(0xf78f, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe26b, gbc.sp());
        EXPECT(0xdf8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xdf8d));
        EXPECT(0xd3, gbc.readMem(0xf78f));
        // 77 02C0
        gbc.setState(0xb6a8, 0x978d, 0xd6a0, 0x3b59, 0xc26d, 0xf227, 0x0, 0x1);
        gbc.writeMem(0xb6a8, { 0x77 });
        gbc.writeMem(0xf227, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x978d, gbc.sp());
        EXPECT(0xb6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb6a8));
        EXPECT(0xd6, gbc.readMem(0xf227));
        // 77 02C1
        gbc.setState(0x631e, 0x4a45, 0x25d0, 0x9581, 0x48d2, 0xc655, 0x1, 0x1);
        gbc.writeMem(0x631e, { 0x77 });
        gbc.writeMem(0xc655, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4a45, gbc.sp());
        EXPECT(0x631f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc655));
        // 77 02C3
        gbc.setState(0xa6ed, 0x7654, 0x31e0, 0xa2ba, 0x51a1, 0xecda, 0x0, 0x0);
        gbc.writeMem(0xa6ed, { 0x77 });
        gbc.writeMem(0xecda, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7654, gbc.sp());
        EXPECT(0xa6ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa6ed));
        EXPECT(0x31, gbc.readMem(0xecda));
        // 77 02C6
        gbc.setState(0x3d90, 0x3ffd, 0x57e0, 0x7d5c, 0xd9f3, 0xf030, 0x0, 0x0);
        gbc.writeMem(0x3d90, { 0x77 });
        gbc.writeMem(0xf030, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3ffd, gbc.sp());
        EXPECT(0x3d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xf030));
        // 77 02C7
        gbc.setState(0x512, 0xf998, 0x6f0, 0xeb93, 0x7ddc, 0xb681, 0x1, 0x0);
        gbc.writeMem(0x512, { 0x77 });
        gbc.writeMem(0xb681, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf998, gbc.sp());
        EXPECT(0x513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb681));
        // 77 02C8
        gbc.setState(0x8e29, 0x4ea4, 0x6920, 0xc595, 0x3bb8, 0xd6ba, 0x0, 0x1);
        gbc.writeMem(0x8e29, { 0x77 });
        gbc.writeMem(0xd6ba, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4ea4, gbc.sp());
        EXPECT(0x8e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8e29));
        EXPECT(0x69, gbc.readMem(0xd6ba));
        // 77 02CA
        gbc.setState(0xd6fe, 0xa63b, 0x2f30, 0x43e, 0x5e93, 0xad40, 0x1, 0x1);
        gbc.writeMem(0xad40, { 0x0 });
        gbc.writeMem(0xd6fe, { 0x77 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa63b, gbc.sp());
        EXPECT(0xd6ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xad40));
        EXPECT(0x77, gbc.readMem(0xd6fe));
        // 77 02CD
        gbc.setState(0xbb5f, 0x755, 0x5880, 0x692a, 0xf218, 0xfa97, 0x1, 0x1);
        gbc.writeMem(0xbb5f, { 0x77 });
        gbc.writeMem(0xfa97, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x755, gbc.sp());
        EXPECT(0xbb60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbb5f));
        EXPECT(0x58, gbc.readMem(0xfa97));
        // 77 02D0
        gbc.setState(0x52c3, 0x1747, 0x8b40, 0x8516, 0xec32, 0x9652, 0x1, 0x1);
        gbc.writeMem(0x52c3, { 0x77 });
        gbc.writeMem(0x9652, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1747, gbc.sp());
        EXPECT(0x52c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x9652));
        // 77 02D2
        gbc.setState(0xd1da, 0x7cab, 0xb4c0, 0xc301, 0xe1b4, 0xd5f6, 0x1, 0x0);
        gbc.writeMem(0xd1da, { 0x77 });
        gbc.writeMem(0xd5f6, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7cab, gbc.sp());
        EXPECT(0xd1db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd1da));
        EXPECT(0xb4, gbc.readMem(0xd5f6));
        // 77 02D6
        gbc.setState(0x1422, 0x7b96, 0xb450, 0x1d01, 0x6819, 0x8be6, 0x1, 0x1);
        gbc.writeMem(0x1422, { 0x77 });
        gbc.writeMem(0x8be6, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7b96, gbc.sp());
        EXPECT(0x1423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x8be6));
        // 77 02D9
        gbc.setState(0x69a9, 0x3a11, 0xb8c0, 0x9a0, 0x4cde, 0xea6b, 0x1, 0x1);
        gbc.writeMem(0x69a9, { 0x77 });
        gbc.writeMem(0xea6b, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3a11, gbc.sp());
        EXPECT(0x69aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xea6b));
        // 77 02DE
        gbc.setState(0x330e, 0xc9b4, 0x1020, 0x9f24, 0xef5, 0xe765, 0x0, 0x1);
        gbc.writeMem(0x330e, { 0x77 });
        gbc.writeMem(0xe765, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc9b4, gbc.sp());
        EXPECT(0x330f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe765));
        // 77 02DF
        gbc.setState(0x2673, 0x77a7, 0x7fe0, 0x233c, 0x10e2, 0x85cb, 0x0, 0x0);
        gbc.writeMem(0x2673, { 0x77 });
        gbc.writeMem(0x85cb, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x77a7, gbc.sp());
        EXPECT(0x2674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x85cb));
        // 77 02E0
        gbc.setState(0x3233, 0x8b16, 0x9550, 0x79dc, 0x407, 0xc6bb, 0x1, 0x1);
        gbc.writeMem(0x3233, { 0x77 });
        gbc.writeMem(0xc6bb, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8b16, gbc.sp());
        EXPECT(0x3234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc6bb));
        // 77 02E3
        gbc.setState(0xd2a3, 0xf83a, 0x94b0, 0xce53, 0xbc7d, 0xa509, 0x0, 0x0);
        gbc.writeMem(0xa509, { 0x0 });
        gbc.writeMem(0xd2a3, { 0x77 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf83a, gbc.sp());
        EXPECT(0xd2a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa509));
        EXPECT(0x77, gbc.readMem(0xd2a3));
        // 77 02E4
        gbc.setState(0xeb20, 0x35dd, 0x3660, 0x2dff, 0x8b22, 0x8213, 0x1, 0x1);
        gbc.writeMem(0x8213, { 0x0 });
        gbc.writeMem(0xeb20, { 0x77 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x35dd, gbc.sp());
        EXPECT(0xeb21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8213));
        EXPECT(0x77, gbc.readMem(0xeb20));
        // 77 02E6
        gbc.setState(0x3474, 0x4293, 0xdcc0, 0xe768, 0x9e7a, 0x881b, 0x0, 0x1);
        gbc.writeMem(0x3474, { 0x77 });
        gbc.writeMem(0x881b, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4293, gbc.sp());
        EXPECT(0x3475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x881b));
        // 77 02EB
        gbc.setState(0xb574, 0x9310, 0x1e80, 0xf1ad, 0xf512, 0x8ea8, 0x0, 0x0);
        gbc.writeMem(0x8ea8, { 0x0 });
        gbc.writeMem(0xb574, { 0x77 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9310, gbc.sp());
        EXPECT(0xb575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x8ea8));
        EXPECT(0x77, gbc.readMem(0xb574));
        // 77 02ED
        gbc.setState(0xdb0b, 0x4c46, 0x6210, 0x9bf6, 0x533f, 0xa86a, 0x1, 0x1);
        gbc.writeMem(0xa86a, { 0x0 });
        gbc.writeMem(0xdb0b, { 0x77 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4c46, gbc.sp());
        EXPECT(0xdb0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xa86a));
        EXPECT(0x77, gbc.readMem(0xdb0b));
        // 77 02EE
        gbc.setState(0xeccb, 0xdbfd, 0x6b30, 0x2433, 0x767a, 0x94b8, 0x1, 0x0);
        gbc.writeMem(0x94b8, { 0x0 });
        gbc.writeMem(0xeccb, { 0x77 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdbfd, gbc.sp());
        EXPECT(0xeccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x94b8));
        EXPECT(0x77, gbc.readMem(0xeccb));
        // 77 02EF
        gbc.setState(0x4e69, 0xa6e3, 0xa8b0, 0xb415, 0x9853, 0xbf13, 0x0, 0x1);
        gbc.writeMem(0x4e69, { 0x77 });
        gbc.writeMem(0xbf13, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa6e3, gbc.sp());
        EXPECT(0x4e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xbf13));
        // 77 02F0
        gbc.setState(0xd2cc, 0x793d, 0xd5b0, 0x1fb8, 0xf6ac, 0xe1ba, 0x0, 0x0);
        gbc.writeMem(0xd2cc, { 0x77 });
        gbc.writeMem(0xe1ba, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x793d, gbc.sp());
        EXPECT(0xd2cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd2cc));
        EXPECT(0xd5, gbc.readMem(0xe1ba));
        // 77 02F5
        gbc.setState(0x1ef8, 0x9717, 0x14b0, 0x5816, 0xe5ae, 0xffda, 0x1, 0x0);
        gbc.writeMem(0x1ef8, { 0x77 });
        gbc.writeMem(0xffda, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9717, gbc.sp());
        EXPECT(0x1ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xffda));
        // 77 02FA
        gbc.setState(0x8492, 0xc9b7, 0xf1a0, 0x696c, 0x51b, 0xbadc, 0x0, 0x0);
        gbc.writeMem(0x8492, { 0x77 });
        gbc.writeMem(0xbadc, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc9b7, gbc.sp());
        EXPECT(0x8493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8492));
        EXPECT(0xf1, gbc.readMem(0xbadc));
        // 77 02FB
        gbc.setState(0x85cc, 0xc185, 0x2c70, 0x1abc, 0x9de, 0xa4a8, 0x0, 0x1);
        gbc.writeMem(0x85cc, { 0x77 });
        gbc.writeMem(0xa4a8, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc185, gbc.sp());
        EXPECT(0x85cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x85cc));
        EXPECT(0x2c, gbc.readMem(0xa4a8));
        // 77 02FC
        gbc.setState(0x75df, 0x5ce, 0xebf0, 0xbd46, 0xb685, 0xcbfa, 0x0, 0x1);
        gbc.writeMem(0x75df, { 0x77 });
        gbc.writeMem(0xcbfa, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5ce, gbc.sp());
        EXPECT(0x75e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xcbfa));
        // 77 02FF
        gbc.setState(0x33da, 0xc023, 0x97d0, 0x8dfd, 0xb97e, 0xf092, 0x1, 0x0);
        gbc.writeMem(0x33da, { 0x77 });
        gbc.writeMem(0xf092, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc023, gbc.sp());
        EXPECT(0x33db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xf092));
        // 77 0300
        gbc.setState(0x4038, 0xc39b, 0xf10, 0xa624, 0xc6d7, 0xf1f6, 0x0, 0x0);
        gbc.writeMem(0x4038, { 0x77 });
        gbc.writeMem(0xf1f6, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc39b, gbc.sp());
        EXPECT(0x4039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xf1f6));
        // 77 0303
        gbc.setState(0x5b60, 0x3f90, 0x61f0, 0x4eda, 0x388b, 0xec4e, 0x0, 0x0);
        gbc.writeMem(0x5b60, { 0x77 });
        gbc.writeMem(0xec4e, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3f90, gbc.sp());
        EXPECT(0x5b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xec4e));
        // 77 0304
        gbc.setState(0xde38, 0xb7cd, 0xf0, 0xb6d1, 0x6c7d, 0xe59, 0x1, 0x0);
        gbc.writeMem(0xe59, { 0x0 });
        gbc.writeMem(0xde38, { 0x77 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb7cd, gbc.sp());
        EXPECT(0xde39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xde38));
        // 77 0307
        gbc.setState(0x719, 0xf5ad, 0xe1a0, 0x78bc, 0x9a4e, 0xb6a4, 0x0, 0x1);
        gbc.writeMem(0x719, { 0x77 });
        gbc.writeMem(0xb6a4, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf5ad, gbc.sp());
        EXPECT(0x71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb6a4));
        // 77 0309
        gbc.setState(0x5fe7, 0xc44f, 0xb240, 0x6cec, 0x59e2, 0x91ce, 0x0, 0x0);
        gbc.writeMem(0x5fe7, { 0x77 });
        gbc.writeMem(0x91ce, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc44f, gbc.sp());
        EXPECT(0x5fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x91ce));
        // 77 030B
        gbc.setState(0xa5fc, 0x1acf, 0x8100, 0x74f5, 0x3950, 0x855d, 0x1, 0x1);
        gbc.writeMem(0x855d, { 0x0 });
        gbc.writeMem(0xa5fc, { 0x77 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1acf, gbc.sp());
        EXPECT(0xa5fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x855d));
        EXPECT(0x77, gbc.readMem(0xa5fc));
        // 77 030C
        gbc.setState(0xef74, 0xef2d, 0xf010, 0x6f3f, 0x2265, 0xc4df, 0x0, 0x0);
        gbc.writeMem(0xc4df, { 0x0 });
        gbc.writeMem(0xef74, { 0x77 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xef2d, gbc.sp());
        EXPECT(0xef75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc4df));
        EXPECT(0x77, gbc.readMem(0xef74));
        // 77 030D
        gbc.setState(0x3a77, 0x3aba, 0xe610, 0xeb5a, 0x43b4, 0xcbbd, 0x0, 0x0);
        gbc.writeMem(0x3a77, { 0x77 });
        gbc.writeMem(0xcbbd, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3aba, gbc.sp());
        EXPECT(0x3a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xcbbd));
        // 77 030F
        gbc.setState(0x56dd, 0xbb17, 0x3b20, 0xf17d, 0xf488, 0x9355, 0x1, 0x0);
        gbc.writeMem(0x56dd, { 0x77 });
        gbc.writeMem(0x9355, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbb17, gbc.sp());
        EXPECT(0x56de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9355));
        // 77 0310
        gbc.setState(0x7e1a, 0x99e5, 0x9680, 0x987d, 0x5320, 0x930d, 0x1, 0x1);
        gbc.writeMem(0x7e1a, { 0x77 });
        gbc.writeMem(0x930d, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x99e5, gbc.sp());
        EXPECT(0x7e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x930d));
        // 77 0311
        gbc.setState(0x19d9, 0x5521, 0x28d0, 0x8fff, 0xfad8, 0xfa55, 0x0, 0x1);
        gbc.writeMem(0x19d9, { 0x77 });
        gbc.writeMem(0xfa55, { 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5521, gbc.sp());
        EXPECT(0x19da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xfa55));
        // 77 0312
        gbc.setState(0x26e9, 0xb28f, 0x1630, 0x9fae, 0x63dc, 0xe8a7, 0x0, 0x0);
        gbc.writeMem(0x26e9, { 0x77 });
        gbc.writeMem(0xe8a7, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb28f, gbc.sp());
        EXPECT(0x26ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xe8a7));
        // 77 0313
        gbc.setState(0x2582, 0xf302, 0x1150, 0x564e, 0xc8fb, 0xd8a5, 0x0, 0x0);
        gbc.writeMem(0x2582, { 0x77 });
        gbc.writeMem(0xd8a5, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf302, gbc.sp());
        EXPECT(0x2583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd8a5));
        // 77 0315
        gbc.setState(0x2d9a, 0xb70, 0xb150, 0xe0f3, 0xc94d, 0xb7e0, 0x1, 0x0);
        gbc.writeMem(0x2d9a, { 0x77 });
        gbc.writeMem(0xb7e0, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb70, gbc.sp());
        EXPECT(0x2d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xb7e0));
        // 77 0316
        gbc.setState(0x9d0a, 0xceee, 0xff80, 0x27a5, 0x12e6, 0xdc92, 0x1, 0x0);
        gbc.writeMem(0x9d0a, { 0x77 });
        gbc.writeMem(0xdc92, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xceee, gbc.sp());
        EXPECT(0x9d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9d0a));
        EXPECT(0xff, gbc.readMem(0xdc92));
        // 77 0317
        gbc.setState(0xa9ed, 0x1a02, 0x21b0, 0x8d3c, 0x95b4, 0x83fa, 0x0, 0x1);
        gbc.writeMem(0x83fa, { 0x0 });
        gbc.writeMem(0xa9ed, { 0x77 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1a02, gbc.sp());
        EXPECT(0xa9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x83fa));
        EXPECT(0x77, gbc.readMem(0xa9ed));
        // 77 0318
        gbc.setState(0xe315, 0x4df8, 0x8950, 0xcde2, 0x4057, 0xd048, 0x0, 0x0);
        gbc.writeMem(0xd048, { 0x0 });
        gbc.writeMem(0xe315, { 0x77 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4df8, gbc.sp());
        EXPECT(0xe316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd048));
        EXPECT(0x77, gbc.readMem(0xe315));
        // 77 0319
        gbc.setState(0x793b, 0x16a, 0x7920, 0x6301, 0xc31d, 0xd818, 0x1, 0x0);
        gbc.writeMem(0x793b, { 0x77 });
        gbc.writeMem(0xd818, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x16a, gbc.sp());
        EXPECT(0x793c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd818));
        // 77 031C
        gbc.setState(0x56af, 0xe77a, 0x7640, 0xece3, 0x592e, 0xb09e, 0x0, 0x0);
        gbc.writeMem(0x56af, { 0x77 });
        gbc.writeMem(0xb09e, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe77a, gbc.sp());
        EXPECT(0x56b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xb09e));
        // 77 031D
        gbc.setState(0x8940, 0x2821, 0x4f70, 0x59a2, 0x6a93, 0x9f10, 0x0, 0x1);
        gbc.writeMem(0x8940, { 0x77 });
        gbc.writeMem(0x9f10, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2821, gbc.sp());
        EXPECT(0x8941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8940));
        EXPECT(0x4f, gbc.readMem(0x9f10));
        // 77 031E
        gbc.setState(0x847d, 0x23e, 0x6220, 0x2142, 0x75a8, 0xaddd, 0x0, 0x1);
        gbc.writeMem(0x847d, { 0x77 });
        gbc.writeMem(0xaddd, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x23e, gbc.sp());
        EXPECT(0x847e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x847d));
        EXPECT(0x62, gbc.readMem(0xaddd));
        // 77 031F
        gbc.setState(0x2303, 0x4b74, 0x8010, 0xb70f, 0xdddd, 0xb08b, 0x1, 0x0);
        gbc.writeMem(0x2303, { 0x77 });
        gbc.writeMem(0xb08b, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4b74, gbc.sp());
        EXPECT(0x2304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb08b));
        // 77 0320
        gbc.setState(0xcc6, 0x21f9, 0x1340, 0x853f, 0xdf01, 0xdc61, 0x1, 0x0);
        gbc.writeMem(0xcc6, { 0x77 });
        gbc.writeMem(0xdc61, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x21f9, gbc.sp());
        EXPECT(0xcc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdc61));
        // 77 0324
        gbc.setState(0xb370, 0xb961, 0xefd0, 0xf464, 0x5518, 0xd3c8, 0x1, 0x0);
        gbc.writeMem(0xb370, { 0x77 });
        gbc.writeMem(0xd3c8, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb961, gbc.sp());
        EXPECT(0xb371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb370));
        EXPECT(0xef, gbc.readMem(0xd3c8));
        // 77 0325
        gbc.setState(0xcaec, 0x6f91, 0x7d80, 0x7eef, 0xb8c6, 0xca52, 0x1, 0x0);
        gbc.writeMem(0xca52, { 0x0 });
        gbc.writeMem(0xcaec, { 0x77 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6f91, gbc.sp());
        EXPECT(0xcaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xca52));
        EXPECT(0x77, gbc.readMem(0xcaec));
        // 77 0327
        gbc.setState(0x459e, 0xcbfe, 0x7280, 0x13a, 0xc575, 0xeb59, 0x0, 0x0);
        gbc.writeMem(0x459e, { 0x77 });
        gbc.writeMem(0xeb59, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcbfe, gbc.sp());
        EXPECT(0x459f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xeb59));
        // 77 032A
        gbc.setState(0x1da8, 0x52ae, 0x91a0, 0x8e8f, 0x83d6, 0xd71c, 0x0, 0x0);
        gbc.writeMem(0x1da8, { 0x77 });
        gbc.writeMem(0xd71c, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x52ae, gbc.sp());
        EXPECT(0x1da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd71c));
        // 77 032B
        gbc.setState(0x1884, 0x64d, 0x720, 0x12d5, 0x4859, 0xaefa, 0x0, 0x1);
        gbc.writeMem(0x1884, { 0x77 });
        gbc.writeMem(0xaefa, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x64d, gbc.sp());
        EXPECT(0x1885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xaefa));
        // 77 0331
        gbc.setState(0x14c2, 0xb4ba, 0x5cc0, 0x28d4, 0x7e02, 0xf7fb, 0x0, 0x1);
        gbc.writeMem(0x14c2, { 0x77 });
        gbc.writeMem(0xf7fb, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb4ba, gbc.sp());
        EXPECT(0x14c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xf7fb));
        // 77 0332
        gbc.setState(0x79e3, 0xd633, 0x5360, 0xb9e9, 0x2f4f, 0x9e4c, 0x1, 0x0);
        gbc.writeMem(0x79e3, { 0x77 });
        gbc.writeMem(0x9e4c, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd633, gbc.sp());
        EXPECT(0x79e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9e4c));
        // 77 0333
        gbc.setState(0x710e, 0xe250, 0x70f0, 0x2b86, 0xe1d8, 0x874a, 0x0, 0x0);
        gbc.writeMem(0x710e, { 0x77 });
        gbc.writeMem(0x874a, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe250, gbc.sp());
        EXPECT(0x710f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x874a));
        // 77 0335
        gbc.setState(0x8c88, 0x46f0, 0xfef0, 0xf15d, 0xc303, 0xd78e, 0x0, 0x1);
        gbc.writeMem(0x8c88, { 0x77 });
        gbc.writeMem(0xd78e, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x46f0, gbc.sp());
        EXPECT(0x8c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8c88));
        EXPECT(0xfe, gbc.readMem(0xd78e));
        // 77 0339
        gbc.setState(0xa881, 0xab0b, 0x6a90, 0x591f, 0xb629, 0xb051, 0x1, 0x0);
        gbc.writeMem(0xa881, { 0x77 });
        gbc.writeMem(0xb051, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xab0b, gbc.sp());
        EXPECT(0xa882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xa881));
        EXPECT(0x6a, gbc.readMem(0xb051));
        // 77 033A
        gbc.setState(0xd309, 0x6775, 0xf270, 0x9a12, 0xf7d7, 0x8097, 0x1, 0x1);
        gbc.writeMem(0x8097, { 0x0 });
        gbc.writeMem(0xd309, { 0x77 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6775, gbc.sp());
        EXPECT(0xd30a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x8097));
        EXPECT(0x77, gbc.readMem(0xd309));
        // 77 033D
        gbc.setState(0x63cf, 0x1cef, 0xec20, 0x1c18, 0xca07, 0x9113, 0x1, 0x1);
        gbc.writeMem(0x63cf, { 0x77 });
        gbc.writeMem(0x9113, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1cef, gbc.sp());
        EXPECT(0x63d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x9113));
        // 77 033E
        gbc.setState(0xd174, 0xbdbf, 0xef00, 0xba0a, 0x7118, 0xf921, 0x1, 0x0);
        gbc.writeMem(0xd174, { 0x77 });
        gbc.writeMem(0xf921, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbdbf, gbc.sp());
        EXPECT(0xd175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd174));
        EXPECT(0xef, gbc.readMem(0xf921));
        // 77 033F
        gbc.setState(0x59ba, 0xba1a, 0x3a0, 0x57d3, 0xc3e0, 0x8403, 0x1, 0x1);
        gbc.writeMem(0x59ba, { 0x77 });
        gbc.writeMem(0x8403, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xba1a, gbc.sp());
        EXPECT(0x59bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8403));
        // 77 0340
        gbc.setState(0xb208, 0x1100, 0xa090, 0x5568, 0xb511, 0x8f4d, 0x1, 0x1);
        gbc.writeMem(0x8f4d, { 0x0 });
        gbc.writeMem(0xb208, { 0x77 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1100, gbc.sp());
        EXPECT(0xb209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8f4d));
        EXPECT(0x77, gbc.readMem(0xb208));
        // 77 0348
        gbc.setState(0x1d4e, 0xae50, 0x48a0, 0x6c49, 0x789a, 0xec26, 0x0, 0x0);
        gbc.writeMem(0x1d4e, { 0x77 });
        gbc.writeMem(0xec26, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xae50, gbc.sp());
        EXPECT(0x1d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xec26));
        // 77 034B
        gbc.setState(0x2ca, 0xe884, 0xca00, 0x93e1, 0x63c5, 0x9eaa, 0x1, 0x0);
        gbc.writeMem(0x2ca, { 0x77 });
        gbc.writeMem(0x9eaa, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe884, gbc.sp());
        EXPECT(0x2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x9eaa));
        // 77 034C
        gbc.setState(0x9493, 0x899c, 0x9040, 0xab12, 0xc786, 0xd7c4, 0x0, 0x1);
        gbc.writeMem(0x9493, { 0x77 });
        gbc.writeMem(0xd7c4, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x899c, gbc.sp());
        EXPECT(0x9494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9493));
        EXPECT(0x90, gbc.readMem(0xd7c4));
        // 77 0350
        gbc.setState(0xc55a, 0xf79e, 0x7010, 0x1b47, 0x68c5, 0x9c99, 0x0, 0x0);
        gbc.writeMem(0x9c99, { 0x0 });
        gbc.writeMem(0xc55a, { 0x77 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf79e, gbc.sp());
        EXPECT(0xc55b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x9c99));
        EXPECT(0x77, gbc.readMem(0xc55a));
        // 77 0353
        gbc.setState(0x5da9, 0xe8cf, 0xd320, 0x2bcf, 0x93ac, 0xd918, 0x1, 0x0);
        gbc.writeMem(0x5da9, { 0x77 });
        gbc.writeMem(0xd918, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe8cf, gbc.sp());
        EXPECT(0x5daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xd918));
        // 77 0354
        gbc.setState(0x93b5, 0x62d2, 0x4770, 0xd033, 0x6147, 0xb751, 0x1, 0x1);
        gbc.writeMem(0x93b5, { 0x77 });
        gbc.writeMem(0xb751, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x62d2, gbc.sp());
        EXPECT(0x93b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x93b5));
        EXPECT(0x47, gbc.readMem(0xb751));
        // 77 0355
        gbc.setState(0xd5ba, 0xfad2, 0xdf00, 0x9323, 0x1305, 0xf84f, 0x1, 0x1);
        gbc.writeMem(0xd5ba, { 0x77 });
        gbc.writeMem(0xf84f, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfad2, gbc.sp());
        EXPECT(0xd5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd5ba));
        EXPECT(0xdf, gbc.readMem(0xf84f));
        // 77 0356
        gbc.setState(0x8cc8, 0x3adc, 0x12c0, 0x9e30, 0xc32b, 0x85d5, 0x1, 0x0);
        gbc.writeMem(0x85d5, { 0x0 });
        gbc.writeMem(0x8cc8, { 0x77 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3adc, gbc.sp());
        EXPECT(0x8cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x85d5));
        EXPECT(0x77, gbc.readMem(0x8cc8));
        // 77 0358
        gbc.setState(0x5667, 0x3531, 0xd1e0, 0x4b2e, 0xa7ea, 0x93ad, 0x1, 0x1);
        gbc.writeMem(0x5667, { 0x77 });
        gbc.writeMem(0x93ad, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3531, gbc.sp());
        EXPECT(0x5668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x93ad));
        // 77 035A
        gbc.setState(0x2082, 0x39d3, 0x4cf0, 0x97ad, 0xefbc, 0x9bbd, 0x1, 0x0);
        gbc.writeMem(0x2082, { 0x77 });
        gbc.writeMem(0x9bbd, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x39d3, gbc.sp());
        EXPECT(0x2083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9bbd));
        // 77 035B
        gbc.setState(0xe085, 0x5d18, 0xd330, 0x1d9f, 0x7602, 0xad05, 0x1, 0x0);
        gbc.writeMem(0xad05, { 0x0 });
        gbc.writeMem(0xe085, { 0x77 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5d18, gbc.sp());
        EXPECT(0xe086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xad05));
        EXPECT(0x77, gbc.readMem(0xe085));
        // 77 035C
        gbc.setState(0x780b, 0x6402, 0x1ba0, 0x36f6, 0xec05, 0xd87a, 0x1, 0x1);
        gbc.writeMem(0x780b, { 0x77 });
        gbc.writeMem(0xd87a, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6402, gbc.sp());
        EXPECT(0x780c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xd87a));
        // 77 035E
        gbc.setState(0xe310, 0x51f2, 0xe690, 0x87a5, 0x1805, 0xac93, 0x0, 0x1);
        gbc.writeMem(0xac93, { 0x0 });
        gbc.writeMem(0xe310, { 0x77 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x51f2, gbc.sp());
        EXPECT(0xe311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xac93));
        EXPECT(0x77, gbc.readMem(0xe310));
        // 77 035F
        gbc.setState(0xd9aa, 0x2da0, 0xd270, 0xed2b, 0xb10, 0xac05, 0x1, 0x1);
        gbc.writeMem(0xac05, { 0x0 });
        gbc.writeMem(0xd9aa, { 0x77 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2da0, gbc.sp());
        EXPECT(0xd9ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xac05));
        EXPECT(0x77, gbc.readMem(0xd9aa));
        // 77 0360
        gbc.setState(0x9496, 0x92e9, 0x49b0, 0x66b, 0xcbbf, 0xb84b, 0x1, 0x0);
        gbc.writeMem(0x9496, { 0x77 });
        gbc.writeMem(0xb84b, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x92e9, gbc.sp());
        EXPECT(0x9497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9496));
        EXPECT(0x49, gbc.readMem(0xb84b));
        // 77 0361
        gbc.setState(0xcaf2, 0x96eb, 0x4fd0, 0x1c53, 0x1a83, 0xe88b, 0x0, 0x1);
        gbc.writeMem(0xcaf2, { 0x77 });
        gbc.writeMem(0xe88b, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x96eb, gbc.sp());
        EXPECT(0xcaf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xcaf2));
        EXPECT(0x4f, gbc.readMem(0xe88b));
        // 77 0362
        gbc.setState(0xde3b, 0xef18, 0x5f80, 0xb24c, 0x9263, 0xfeef, 0x1, 0x1);
        gbc.writeMem(0xde3b, { 0x77 });
        gbc.writeMem(0xfeef, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xef18, gbc.sp());
        EXPECT(0xde3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xde3b));
        EXPECT(0x5f, gbc.readMem(0xfeef));
        // 77 0364
        gbc.setState(0x2915, 0x5dfe, 0x4db0, 0x3e27, 0x825f, 0xf32a, 0x1, 0x0);
        gbc.writeMem(0x2915, { 0x77 });
        gbc.writeMem(0xf32a, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5dfe, gbc.sp());
        EXPECT(0x2916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xf32a));
        // 77 0366
        gbc.setState(0x28cb, 0x472f, 0xd430, 0x27af, 0xd75a, 0xc814, 0x0, 0x1);
        gbc.writeMem(0x28cb, { 0x77 });
        gbc.writeMem(0xc814, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x472f, gbc.sp());
        EXPECT(0x28cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc814));
        // 77 0368
        gbc.setState(0x28c2, 0xbfdb, 0x8620, 0x1c22, 0x7f5b, 0xde9b, 0x1, 0x1);
        gbc.writeMem(0x28c2, { 0x77 });
        gbc.writeMem(0xde9b, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbfdb, gbc.sp());
        EXPECT(0x28c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xde9b));
        // 77 036D
        gbc.setState(0xcd2a, 0x8fd7, 0x2760, 0x75b6, 0x71f3, 0x9cf3, 0x0, 0x0);
        gbc.writeMem(0x9cf3, { 0x0 });
        gbc.writeMem(0xcd2a, { 0x77 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8fd7, gbc.sp());
        EXPECT(0xcd2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9cf3));
        EXPECT(0x77, gbc.readMem(0xcd2a));
        // 77 036F
        gbc.setState(0x6a4c, 0xb6e9, 0x19a0, 0xc63a, 0xe576, 0x98fe, 0x1, 0x0);
        gbc.writeMem(0x6a4c, { 0x77 });
        gbc.writeMem(0x98fe, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb6e9, gbc.sp());
        EXPECT(0x6a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x98fe));
        // 77 0371
        gbc.setState(0x74d4, 0x2b98, 0x75c0, 0xc541, 0x5f29, 0x9053, 0x1, 0x0);
        gbc.writeMem(0x74d4, { 0x77 });
        gbc.writeMem(0x9053, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2b98, gbc.sp());
        EXPECT(0x74d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9053));
        // 77 0372
        gbc.setState(0x281c, 0x7826, 0x3e90, 0xb2d1, 0xae43, 0xf6db, 0x0, 0x1);
        gbc.writeMem(0x281c, { 0x77 });
        gbc.writeMem(0xf6db, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7826, gbc.sp());
        EXPECT(0x281d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xf6db));
        // 77 0373
        gbc.setState(0xb2f4, 0x18c0, 0x5000, 0xa144, 0xabd8, 0x8919, 0x1, 0x0);
        gbc.writeMem(0x8919, { 0x0 });
        gbc.writeMem(0xb2f4, { 0x77 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x18c0, gbc.sp());
        EXPECT(0xb2f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8919));
        EXPECT(0x77, gbc.readMem(0xb2f4));
        // 77 0375
        gbc.setState(0xe61a, 0x9263, 0xe440, 0xf985, 0x599b, 0xd30f, 0x1, 0x0);
        gbc.writeMem(0xd30f, { 0x0 });
        gbc.writeMem(0xe61a, { 0x77 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9263, gbc.sp());
        EXPECT(0xe61b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xd30f));
        EXPECT(0x77, gbc.readMem(0xe61a));
        // 77 0376
        gbc.setState(0x94f4, 0x7b86, 0x9070, 0xf199, 0xaea7, 0x812d, 0x0, 0x1);
        gbc.writeMem(0x812d, { 0x0 });
        gbc.writeMem(0x94f4, { 0x77 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7b86, gbc.sp());
        EXPECT(0x94f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x812d));
        EXPECT(0x77, gbc.readMem(0x94f4));
        // 77 0377
        gbc.setState(0x4b5, 0x86d3, 0xc2e0, 0xe694, 0x52b4, 0xa1b5, 0x1, 0x1);
        gbc.writeMem(0x4b5, { 0x77 });
        gbc.writeMem(0xa1b5, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x86d3, gbc.sp());
        EXPECT(0x4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa1b5));
        // 77 0378
        gbc.setState(0x2617, 0x4768, 0xbed0, 0xf5ce, 0x4137, 0x866d, 0x1, 0x0);
        gbc.writeMem(0x2617, { 0x77 });
        gbc.writeMem(0x866d, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4768, gbc.sp());
        EXPECT(0x2618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x866d));
        // 77 0379
        gbc.setState(0xa534, 0x8ab3, 0x2ac0, 0x54d4, 0x1f16, 0x99e9, 0x1, 0x0);
        gbc.writeMem(0x99e9, { 0x0 });
        gbc.writeMem(0xa534, { 0x77 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8ab3, gbc.sp());
        EXPECT(0xa535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x99e9));
        EXPECT(0x77, gbc.readMem(0xa534));
        // 77 037C
        gbc.setState(0xda14, 0x93ff, 0x2dd0, 0xce9c, 0x2926, 0xe6bd, 0x0, 0x1);
        gbc.writeMem(0xda14, { 0x77 });
        gbc.writeMem(0xe6bd, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x93ff, gbc.sp());
        EXPECT(0xda15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xda14));
        EXPECT(0x2d, gbc.readMem(0xe6bd));
        // 77 037E
        gbc.setState(0xb6b4, 0xbcd, 0xbda0, 0x5149, 0x831d, 0x8266, 0x0, 0x1);
        gbc.writeMem(0x8266, { 0x0 });
        gbc.writeMem(0xb6b4, { 0x77 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbcd, gbc.sp());
        EXPECT(0xb6b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8266));
        EXPECT(0x77, gbc.readMem(0xb6b4));
        // 77 0381
        gbc.setState(0x9100, 0xc727, 0xc1d0, 0xc744, 0xb210, 0xb007, 0x0, 0x1);
        gbc.writeMem(0x9100, { 0x77 });
        gbc.writeMem(0xb007, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc727, gbc.sp());
        EXPECT(0x9101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9100));
        EXPECT(0xc1, gbc.readMem(0xb007));
        // 77 0382
        gbc.setState(0x3163, 0x5f1e, 0xbf40, 0x422c, 0x3f7a, 0x8d2d, 0x0, 0x1);
        gbc.writeMem(0x3163, { 0x77 });
        gbc.writeMem(0x8d2d, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5f1e, gbc.sp());
        EXPECT(0x3164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8d2d));
        // 77 0385
        gbc.setState(0x5d6, 0xf210, 0x7720, 0xff7a, 0x9914, 0xbfbc, 0x0, 0x0);
        gbc.writeMem(0x5d6, { 0x77 });
        gbc.writeMem(0xbfbc, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf210, gbc.sp());
        EXPECT(0x5d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbfbc));
        // 77 0386
        gbc.setState(0x3036, 0x7a15, 0xac10, 0xfcf9, 0x5c7, 0xbfa7, 0x1, 0x1);
        gbc.writeMem(0x3036, { 0x77 });
        gbc.writeMem(0xbfa7, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7a15, gbc.sp());
        EXPECT(0x3037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbfa7));
        // 77 0387
        gbc.setState(0x37a5, 0x4fed, 0xb110, 0xf0d4, 0xc343, 0xc386, 0x1, 0x0);
        gbc.writeMem(0x37a5, { 0x77 });
        gbc.writeMem(0xc386, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4fed, gbc.sp());
        EXPECT(0x37a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xc386));
        // 77 038A
        gbc.setState(0x2efa, 0x4051, 0xe6e0, 0xca42, 0xb3a9, 0x8e2e, 0x1, 0x1);
        gbc.writeMem(0x2efa, { 0x77 });
        gbc.writeMem(0x8e2e, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4051, gbc.sp());
        EXPECT(0x2efb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8e2e));
        // 77 038D
        gbc.setState(0x2178, 0x3166, 0xdbe0, 0x7de1, 0xcf70, 0xc69e, 0x0, 0x1);
        gbc.writeMem(0x2178, { 0x77 });
        gbc.writeMem(0xc69e, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3166, gbc.sp());
        EXPECT(0x2179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xc69e));
        // 77 038E
        gbc.setState(0x42cb, 0x2015, 0xa400, 0x8880, 0xe4c5, 0xd116, 0x1, 0x1);
        gbc.writeMem(0x42cb, { 0x77 });
        gbc.writeMem(0xd116, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2015, gbc.sp());
        EXPECT(0x42cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd116));
        // 77 0392
        gbc.setState(0xe282, 0x7f60, 0xd940, 0xb942, 0x60d6, 0x9c22, 0x1, 0x0);
        gbc.writeMem(0x9c22, { 0x0 });
        gbc.writeMem(0xe282, { 0x77 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7f60, gbc.sp());
        EXPECT(0xe283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9c22));
        EXPECT(0x77, gbc.readMem(0xe282));
        // 77 0398
        gbc.setState(0xc4c2, 0xe322, 0xe7a0, 0x4fba, 0x775d, 0x8b16, 0x1, 0x1);
        gbc.writeMem(0x8b16, { 0x0 });
        gbc.writeMem(0xc4c2, { 0x77 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe322, gbc.sp());
        EXPECT(0xc4c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8b16));
        EXPECT(0x77, gbc.readMem(0xc4c2));
        // 77 039A
        gbc.setState(0x734, 0xae0e, 0x39d0, 0x4e84, 0x5de0, 0xef52, 0x0, 0x0);
        gbc.writeMem(0x734, { 0x77 });
        gbc.writeMem(0xef52, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xae0e, gbc.sp());
        EXPECT(0x735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xef52));
        // 77 039C
        gbc.setState(0xdd24, 0x1136, 0x680, 0xf94e, 0x5a57, 0x87d4, 0x0, 0x1);
        gbc.writeMem(0x87d4, { 0x0 });
        gbc.writeMem(0xdd24, { 0x77 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1136, gbc.sp());
        EXPECT(0xdd25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x87d4));
        EXPECT(0x77, gbc.readMem(0xdd24));
        // 77 039F
        gbc.setState(0x4d4b, 0xb52e, 0x59d0, 0xbde0, 0xea, 0xc11c, 0x1, 0x1);
        gbc.writeMem(0x4d4b, { 0x77 });
        gbc.writeMem(0xc11c, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb52e, gbc.sp());
        EXPECT(0x4d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xc11c));
        // 77 03A3
        gbc.setState(0xc58f, 0x908, 0x6f0, 0x48b1, 0xff7b, 0xe2d0, 0x1, 0x0);
        gbc.writeMem(0xc58f, { 0x77 });
        gbc.writeMem(0xe2d0, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x908, gbc.sp());
        EXPECT(0xc590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc58f));
        EXPECT(0x6, gbc.readMem(0xe2d0));
        // 77 03A4
        gbc.setState(0x55c7, 0x3530, 0x9e80, 0x975d, 0x7a3e, 0x97da, 0x1, 0x0);
        gbc.writeMem(0x55c7, { 0x77 });
        gbc.writeMem(0x97da, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3530, gbc.sp());
        EXPECT(0x55c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x97da));
        // 77 03A5
        gbc.setState(0x93c0, 0x75ab, 0xf4f0, 0xc44c, 0xf831, 0xb6f1, 0x0, 0x0);
        gbc.writeMem(0x93c0, { 0x77 });
        gbc.writeMem(0xb6f1, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x75ab, gbc.sp());
        EXPECT(0x93c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x93c0));
        EXPECT(0xf4, gbc.readMem(0xb6f1));
        // 77 03A6
        gbc.setState(0x87bc, 0xeee4, 0xa610, 0xf1e0, 0x536a, 0xa74b, 0x0, 0x1);
        gbc.writeMem(0x87bc, { 0x77 });
        gbc.writeMem(0xa74b, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xeee4, gbc.sp());
        EXPECT(0x87bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x87bc));
        EXPECT(0xa6, gbc.readMem(0xa74b));
        // 77 03AA
        gbc.setState(0x53cc, 0xe849, 0x8a40, 0xd46d, 0x46f9, 0xbae6, 0x0, 0x1);
        gbc.writeMem(0x53cc, { 0x77 });
        gbc.writeMem(0xbae6, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe849, gbc.sp());
        EXPECT(0x53cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbae6));
        // 77 03AB
        gbc.setState(0xd024, 0x299f, 0xae60, 0xc32a, 0xb9c4, 0xe4d5, 0x0, 0x1);
        gbc.writeMem(0xd024, { 0x77 });
        gbc.writeMem(0xe4d5, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x299f, gbc.sp());
        EXPECT(0xd025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd024));
        EXPECT(0xae, gbc.readMem(0xe4d5));
        // 77 03AE
        gbc.setState(0x4fca, 0xa911, 0x11a0, 0xc8c1, 0x2079, 0xbede, 0x0, 0x1);
        gbc.writeMem(0x4fca, { 0x77 });
        gbc.writeMem(0xbede, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa911, gbc.sp());
        EXPECT(0x4fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbede));
        // 77 03B1
        gbc.setState(0xbbf9, 0x3855, 0xd0c0, 0x819, 0xf290, 0xf0f3, 0x1, 0x1);
        gbc.writeMem(0xbbf9, { 0x77 });
        gbc.writeMem(0xf0f3, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3855, gbc.sp());
        EXPECT(0xbbfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbbf9));
        EXPECT(0xd0, gbc.readMem(0xf0f3));
        // 77 03B2
        gbc.setState(0x9731, 0xe285, 0xef0, 0xff86, 0x65b3, 0xa03f, 0x0, 0x1);
        gbc.writeMem(0x9731, { 0x77 });
        gbc.writeMem(0xa03f, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe285, gbc.sp());
        EXPECT(0x9732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9731));
        EXPECT(0xe, gbc.readMem(0xa03f));
        // 77 03B3
        gbc.setState(0x1914, 0xda5c, 0x7520, 0xab8e, 0xcb85, 0xac64, 0x0, 0x0);
        gbc.writeMem(0x1914, { 0x77 });
        gbc.writeMem(0xac64, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xda5c, gbc.sp());
        EXPECT(0x1915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xac64));
        // 77 03B4
        gbc.setState(0x41f1, 0x93ea, 0x7310, 0xf20, 0x23a7, 0x85cf, 0x0, 0x0);
        gbc.writeMem(0x41f1, { 0x77 });
        gbc.writeMem(0x85cf, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x93ea, gbc.sp());
        EXPECT(0x41f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x85cf));
        // 77 03B7
        gbc.setState(0x6237, 0x95b1, 0x4890, 0x30e5, 0xe887, 0xb1e2, 0x1, 0x1);
        gbc.writeMem(0x6237, { 0x77 });
        gbc.writeMem(0xb1e2, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x95b1, gbc.sp());
        EXPECT(0x6238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xb1e2));
        // 77 03BC
        gbc.setState(0xb34f, 0xb4ee, 0xb740, 0x7db8, 0x9143, 0x9bea, 0x1, 0x0);
        gbc.writeMem(0x9bea, { 0x0 });
        gbc.writeMem(0xb34f, { 0x77 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb4ee, gbc.sp());
        EXPECT(0xb350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9bea));
        EXPECT(0x77, gbc.readMem(0xb34f));
        // 77 03BE
        gbc.setState(0x8290, 0x76fa, 0xef30, 0x8332, 0xb0f5, 0xbb9f, 0x1, 0x1);
        gbc.writeMem(0x8290, { 0x77 });
        gbc.writeMem(0xbb9f, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x76fa, gbc.sp());
        EXPECT(0x8291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8290));
        EXPECT(0xef, gbc.readMem(0xbb9f));
        // 77 03C0
        gbc.setState(0xc2c1, 0x48cf, 0xb370, 0x44d2, 0xff80, 0xe2a4, 0x1, 0x0);
        gbc.writeMem(0xc2c1, { 0x77 });
        gbc.writeMem(0xe2a4, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x48cf, gbc.sp());
        EXPECT(0xc2c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc2c1));
        EXPECT(0xb3, gbc.readMem(0xe2a4));
        // 77 03C2
        gbc.setState(0x91ee, 0xc759, 0xa8a0, 0xc8f7, 0x531, 0x940a, 0x0, 0x1);
        gbc.writeMem(0x91ee, { 0x77 });
        gbc.writeMem(0x940a, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc759, gbc.sp());
        EXPECT(0x91ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x91ee));
        EXPECT(0xa8, gbc.readMem(0x940a));
        // 77 03C3
        gbc.setState(0x3582, 0x8dd8, 0xed80, 0x2c5d, 0xe793, 0xfddf, 0x0, 0x0);
        gbc.writeMem(0x3582, { 0x77 });
        gbc.writeMem(0xfddf, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8dd8, gbc.sp());
        EXPECT(0x3583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xfddf));
        // 77 03C7
        gbc.setState(0x5926, 0xbc83, 0x1ca0, 0xcaa3, 0x1f2d, 0xcc30, 0x0, 0x1);
        gbc.writeMem(0x5926, { 0x77 });
        gbc.writeMem(0xcc30, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbc83, gbc.sp());
        EXPECT(0x5927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xcc30));
        // 77 03CA
        gbc.setState(0x6f7f, 0x676a, 0xac0, 0xb452, 0x1d4, 0x8523, 0x0, 0x0);
        gbc.writeMem(0x6f7f, { 0x77 });
        gbc.writeMem(0x8523, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x676a, gbc.sp());
        EXPECT(0x6f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x8523));
        // 77 03CC
        gbc.setState(0x42b2, 0x6115, 0xd490, 0x63c, 0xf400, 0xb433, 0x1, 0x0);
        gbc.writeMem(0x42b2, { 0x77 });
        gbc.writeMem(0xb433, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6115, gbc.sp());
        EXPECT(0x42b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb433));
        // 77 03CD
        gbc.setState(0x1b7d, 0x87f6, 0x2d0, 0x9f59, 0x46db, 0xb7ff, 0x0, 0x1);
        gbc.writeMem(0x1b7d, { 0x77 });
        gbc.writeMem(0xb7ff, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x87f6, gbc.sp());
        EXPECT(0x1b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xb7ff));
        // 77 03D0
        gbc.setState(0x4efe, 0xd46f, 0xbdd0, 0x670c, 0x50d3, 0x8d08, 0x1, 0x1);
        gbc.writeMem(0x4efe, { 0x77 });
        gbc.writeMem(0x8d08, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd46f, gbc.sp());
        EXPECT(0x4eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8d08));
        // 77 03D3
        gbc.setState(0x90a8, 0xc6d4, 0xaeb0, 0xd631, 0x46ed, 0x95a9, 0x1, 0x0);
        gbc.writeMem(0x90a8, { 0x77 });
        gbc.writeMem(0x95a9, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc6d4, gbc.sp());
        EXPECT(0x90a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x90a8));
        EXPECT(0xae, gbc.readMem(0x95a9));
        // 77 03D6
        gbc.setState(0xcc3b, 0x3d9, 0x1490, 0xc61e, 0x8c85, 0xb9c2, 0x0, 0x0);
        gbc.writeMem(0xb9c2, { 0x0 });
        gbc.writeMem(0xcc3b, { 0x77 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3d9, gbc.sp());
        EXPECT(0xcc3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb9c2));
        EXPECT(0x77, gbc.readMem(0xcc3b));
        // 77 03DC
        gbc.setState(0x83fc, 0x12be, 0x2fa0, 0x55cd, 0xbaec, 0xb45c, 0x1, 0x1);
        gbc.writeMem(0x83fc, { 0x77 });
        gbc.writeMem(0xb45c, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x12be, gbc.sp());
        EXPECT(0x83fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x83fc));
        EXPECT(0x2f, gbc.readMem(0xb45c));
        // 77 03DD
        gbc.setState(0x3709, 0x3596, 0x7870, 0x4b58, 0xa3f6, 0xdcf4, 0x0, 0x0);
        gbc.writeMem(0x3709, { 0x77 });
        gbc.writeMem(0xdcf4, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3596, gbc.sp());
        EXPECT(0x370a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xdcf4));
        // 77 03DE
        gbc.setState(0x8d79, 0xd21d, 0xbd70, 0xf814, 0x13fa, 0x8a1f, 0x1, 0x0);
        gbc.writeMem(0x8a1f, { 0x0 });
        gbc.writeMem(0x8d79, { 0x77 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd21d, gbc.sp());
        EXPECT(0x8d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8a1f));
        EXPECT(0x77, gbc.readMem(0x8d79));
        // 77 03E0
        gbc.setState(0x5db5, 0xb9a3, 0xc400, 0x6732, 0xfcc9, 0xdee1, 0x1, 0x0);
        gbc.writeMem(0x5db5, { 0x77 });
        gbc.writeMem(0xdee1, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb9a3, gbc.sp());
        EXPECT(0x5db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xdee1));
        // 77 03E2
        gbc.setState(0x150d, 0x798d, 0xcc40, 0xf8ae, 0x1b56, 0xbe2c, 0x0, 0x0);
        gbc.writeMem(0x150d, { 0x77 });
        gbc.writeMem(0xbe2c, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x798d, gbc.sp());
        EXPECT(0x150e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xbe2c));
        // 77 03E4
        gbc.setState(0xd06f, 0xe157, 0xb740, 0xad09, 0x6dfc, 0xd535, 0x0, 0x0);
        gbc.writeMem(0xd06f, { 0x77 });
        gbc.writeMem(0xd535, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe157, gbc.sp());
        EXPECT(0xd070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd06f));
        EXPECT(0xb7, gbc.readMem(0xd535));
        // 77 03E5
        gbc.setState(0x5d93, 0xa5f5, 0x9850, 0xbfde, 0xc017, 0xa4d1, 0x0, 0x1);
        gbc.writeMem(0x5d93, { 0x77 });
        gbc.writeMem(0xa4d1, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa5f5, gbc.sp());
        EXPECT(0x5d94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa4d1));
        // 77 03E7
        gbc.setState(0x4d63, 0xed18, 0xadc0, 0x4d4, 0x5dec, 0xa4da, 0x1, 0x1);
        gbc.writeMem(0x4d63, { 0x77 });
        gbc.writeMem(0xa4da, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xed18, gbc.sp());
        EXPECT(0x4d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xa4da));
    }
