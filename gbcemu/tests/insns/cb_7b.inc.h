    TEST(gbcemu, opcode_cb_7b) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 7B 0000
        gbc.setState(0x2b7f, 0x32e0, 0xa360, 0xe8e1, 0x673f, 0x2e51, 0x0, 0x1);
        gbc.writeMem(0x2b7f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x32e0, gbc.sp());
        EXPECT(0x2b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0001
        gbc.setState(0x779b, 0x51c4, 0x5210, 0x9357, 0xd92a, 0xa45c, 0x0, 0x1);
        gbc.writeMem(0x779b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x51c4, gbc.sp());
        EXPECT(0x779d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0002
        gbc.setState(0xab86, 0x1792, 0xebf0, 0xfb76, 0x92f4, 0x53df, 0x1, 0x1);
        gbc.writeMem(0xab86, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1792, gbc.sp());
        EXPECT(0xab88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab86));
        EXPECT(0x7b, gbc.readMem(0xab87));
        // CB 7B 0003
        gbc.setState(0xa0e8, 0xbd18, 0x90c0, 0xe75d, 0xec03, 0xfddb, 0x1, 0x1);
        gbc.writeMem(0xa0e8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbd18, gbc.sp());
        EXPECT(0xa0ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0e8));
        EXPECT(0x7b, gbc.readMem(0xa0e9));
        // CB 7B 0004
        gbc.setState(0x2b48, 0x9a4b, 0x5160, 0xf26, 0x4ce3, 0xc371, 0x1, 0x1);
        gbc.writeMem(0x2b48, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9a4b, gbc.sp());
        EXPECT(0x2b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0005
        gbc.setState(0x6846, 0x4141, 0xaae0, 0x77a3, 0x8d13, 0xddfe, 0x1, 0x0);
        gbc.writeMem(0x6846, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4141, gbc.sp());
        EXPECT(0x6848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0006
        gbc.setState(0xbfd2, 0x503d, 0x4e30, 0x71a4, 0x5136, 0x84b0, 0x0, 0x1);
        gbc.writeMem(0xbfd2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x503d, gbc.sp());
        EXPECT(0xbfd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd2));
        EXPECT(0x7b, gbc.readMem(0xbfd3));
        // CB 7B 0007
        gbc.setState(0x4ebd, 0x7b3e, 0x9350, 0x5c45, 0x53a1, 0xcde8, 0x0, 0x1);
        gbc.writeMem(0x4ebd, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7b3e, gbc.sp());
        EXPECT(0x4ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0008
        gbc.setState(0xac69, 0x22fb, 0xcc90, 0x12f, 0x1adb, 0xe94, 0x1, 0x0);
        gbc.writeMem(0xac69, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x22fb, gbc.sp());
        EXPECT(0xac6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac69));
        EXPECT(0x7b, gbc.readMem(0xac6a));
        // CB 7B 0009
        gbc.setState(0xcd37, 0xd980, 0xbc80, 0x96d1, 0x300a, 0x6f98, 0x1, 0x1);
        gbc.writeMem(0xcd37, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd980, gbc.sp());
        EXPECT(0xcd39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd37));
        EXPECT(0x7b, gbc.readMem(0xcd38));
        // CB 7B 000A
        gbc.setState(0x9721, 0xbbe, 0x84f0, 0xc295, 0x4bd2, 0xbf0b, 0x0, 0x0);
        gbc.writeMem(0x9721, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbbe, gbc.sp());
        EXPECT(0x9723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9721));
        EXPECT(0x7b, gbc.readMem(0x9722));
        // CB 7B 000B
        gbc.setState(0x5411, 0x406, 0xc8d0, 0x7a64, 0x8a6c, 0x62e2, 0x0, 0x0);
        gbc.writeMem(0x5411, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x406, gbc.sp());
        EXPECT(0x5413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 000C
        gbc.setState(0x125f, 0x66e6, 0x36c0, 0x1204, 0x8203, 0x3c66, 0x1, 0x1);
        gbc.writeMem(0x125f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x66e6, gbc.sp());
        EXPECT(0x1261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 000D
        gbc.setState(0xd79b, 0xcb6d, 0xe440, 0x7d5b, 0x67ec, 0xca6d, 0x0, 0x0);
        gbc.writeMem(0xd79b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcb6d, gbc.sp());
        EXPECT(0xd79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd79b));
        EXPECT(0x7b, gbc.readMem(0xd79c));
        // CB 7B 000E
        gbc.setState(0xf20, 0x7f3c, 0x2560, 0x31cb, 0x1b6f, 0x39b1, 0x0, 0x1);
        gbc.writeMem(0xf20, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7f3c, gbc.sp());
        EXPECT(0xf22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 000F
        gbc.setState(0x9f33, 0xa489, 0x73e0, 0x324, 0x1353, 0x6e7f, 0x0, 0x0);
        gbc.writeMem(0x9f33, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa489, gbc.sp());
        EXPECT(0x9f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f33));
        EXPECT(0x7b, gbc.readMem(0x9f34));
        // CB 7B 0010
        gbc.setState(0xa6f2, 0x1a8d, 0x5e20, 0xbe38, 0xe01e, 0xd5bc, 0x0, 0x1);
        gbc.writeMem(0xa6f2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1a8d, gbc.sp());
        EXPECT(0xa6f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f2));
        EXPECT(0x7b, gbc.readMem(0xa6f3));
        // CB 7B 0011
        gbc.setState(0x55fe, 0x7307, 0x550, 0x9546, 0x114c, 0xfef2, 0x0, 0x1);
        gbc.writeMem(0x55fe, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7307, gbc.sp());
        EXPECT(0x5600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0012
        gbc.setState(0x11a9, 0xbd63, 0x8230, 0x1c43, 0x1d2b, 0x4b23, 0x0, 0x0);
        gbc.writeMem(0x11a9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbd63, gbc.sp());
        EXPECT(0x11ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0013
        gbc.setState(0x2302, 0x934, 0x7100, 0x442e, 0xafea, 0xc48f, 0x1, 0x0);
        gbc.writeMem(0x2302, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x934, gbc.sp());
        EXPECT(0x2304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0015
        gbc.setState(0x902f, 0xb214, 0xaa80, 0xd86b, 0xb6b0, 0x1451, 0x0, 0x0);
        gbc.writeMem(0x902f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb214, gbc.sp());
        EXPECT(0x9031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x902f));
        EXPECT(0x7b, gbc.readMem(0x9030));
        // CB 7B 0016
        gbc.setState(0x2ae6, 0xee41, 0xe600, 0xc003, 0xf45f, 0xb537, 0x0, 0x1);
        gbc.writeMem(0x2ae6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xee41, gbc.sp());
        EXPECT(0x2ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0017
        gbc.setState(0xa298, 0x60a3, 0x8b20, 0xe1b1, 0x5b58, 0x9bbd, 0x1, 0x1);
        gbc.writeMem(0xa298, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x60a3, gbc.sp());
        EXPECT(0xa29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa298));
        EXPECT(0x7b, gbc.readMem(0xa299));
        // CB 7B 0018
        gbc.setState(0xcf4, 0x1fad, 0x9fd0, 0x5085, 0xacf6, 0xaa54, 0x0, 0x1);
        gbc.writeMem(0xcf4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1fad, gbc.sp());
        EXPECT(0xcf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0019
        gbc.setState(0xe3e2, 0xe01f, 0x5fc0, 0x4c81, 0x4f35, 0xd95f, 0x1, 0x0);
        gbc.writeMem(0xe3e2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe01f, gbc.sp());
        EXPECT(0xe3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e2));
        EXPECT(0x7b, gbc.readMem(0xe3e3));
        // CB 7B 001B
        gbc.setState(0xce14, 0xe8ad, 0x7c90, 0xdcc1, 0xad85, 0x700e, 0x0, 0x0);
        gbc.writeMem(0xce14, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe8ad, gbc.sp());
        EXPECT(0xce16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce14));
        EXPECT(0x7b, gbc.readMem(0xce15));
        // CB 7B 001C
        gbc.setState(0xe9f6, 0xf751, 0xa120, 0x44c7, 0x4850, 0x5a3a, 0x0, 0x0);
        gbc.writeMem(0xe9f6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf751, gbc.sp());
        EXPECT(0xe9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f6));
        EXPECT(0x7b, gbc.readMem(0xe9f7));
        // CB 7B 001D
        gbc.setState(0x29c0, 0x40c1, 0x3e10, 0xffcf, 0xa286, 0xdbd0, 0x1, 0x0);
        gbc.writeMem(0x29c0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x40c1, gbc.sp());
        EXPECT(0x29c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 001E
        gbc.setState(0xc157, 0xf81b, 0x51a0, 0xb3b1, 0x97dd, 0x1819, 0x1, 0x0);
        gbc.writeMem(0xc157, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf81b, gbc.sp());
        EXPECT(0xc159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc157));
        EXPECT(0x7b, gbc.readMem(0xc158));
        // CB 7B 001F
        gbc.setState(0x477a, 0x9211, 0x3f90, 0x751c, 0x4606, 0xd050, 0x0, 0x1);
        gbc.writeMem(0x477a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9211, gbc.sp());
        EXPECT(0x477c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0020
        gbc.setState(0x473c, 0xc404, 0x9060, 0x39b3, 0xe418, 0xf2a, 0x0, 0x0);
        gbc.writeMem(0x473c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc404, gbc.sp());
        EXPECT(0x473e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0021
        gbc.setState(0x6ad7, 0x52f7, 0x86a0, 0xf8c6, 0x8413, 0xa1d7, 0x0, 0x0);
        gbc.writeMem(0x6ad7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x52f7, gbc.sp());
        EXPECT(0x6ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0022
        gbc.setState(0x7bf9, 0xfc55, 0xef50, 0xd9d2, 0x726d, 0x41ae, 0x0, 0x0);
        gbc.writeMem(0x7bf9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfc55, gbc.sp());
        EXPECT(0x7bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0023
        gbc.setState(0xb307, 0x2900, 0xbe50, 0xff78, 0x9556, 0x29b4, 0x1, 0x1);
        gbc.writeMem(0xb307, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2900, gbc.sp());
        EXPECT(0xb309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb307));
        EXPECT(0x7b, gbc.readMem(0xb308));
        // CB 7B 0024
        gbc.setState(0xd810, 0xc19f, 0xfa30, 0xb56b, 0x434a, 0xe47e, 0x0, 0x0);
        gbc.writeMem(0xd810, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc19f, gbc.sp());
        EXPECT(0xd812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd810));
        EXPECT(0x7b, gbc.readMem(0xd811));
        // CB 7B 0025
        gbc.setState(0x4f8a, 0xbaab, 0x9fe0, 0x2b1, 0x1cf1, 0x86ac, 0x0, 0x1);
        gbc.writeMem(0x4f8a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbaab, gbc.sp());
        EXPECT(0x4f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0026
        gbc.setState(0x89a0, 0xda60, 0x2dd0, 0x52a6, 0x6226, 0x3b55, 0x0, 0x1);
        gbc.writeMem(0x89a0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xda60, gbc.sp());
        EXPECT(0x89a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a0));
        EXPECT(0x7b, gbc.readMem(0x89a1));
        // CB 7B 0027
        gbc.setState(0x46be, 0x40b2, 0x7da0, 0xc75a, 0x4b9b, 0x12d8, 0x0, 0x1);
        gbc.writeMem(0x46be, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x40b2, gbc.sp());
        EXPECT(0x46c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0028
        gbc.setState(0x4df9, 0x4515, 0x91e0, 0xe7bf, 0xc713, 0x48b3, 0x1, 0x1);
        gbc.writeMem(0x4df9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4515, gbc.sp());
        EXPECT(0x4dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0029
        gbc.setState(0x6934, 0xfb51, 0x1d90, 0x5255, 0x3e01, 0xfa64, 0x0, 0x1);
        gbc.writeMem(0x6934, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfb51, gbc.sp());
        EXPECT(0x6936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 002B
        gbc.setState(0xac08, 0xeb2d, 0x5b20, 0xbe84, 0x1f07, 0xceb4, 0x0, 0x1);
        gbc.writeMem(0xac08, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xeb2d, gbc.sp());
        EXPECT(0xac0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac08));
        EXPECT(0x7b, gbc.readMem(0xac09));
        // CB 7B 002C
        gbc.setState(0x7dab, 0x3155, 0x6e90, 0x861d, 0x5ea1, 0xdaf9, 0x1, 0x0);
        gbc.writeMem(0x7dab, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3155, gbc.sp());
        EXPECT(0x7dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 002D
        gbc.setState(0xdab6, 0x8f75, 0x6d10, 0x16f6, 0x37a9, 0x8932, 0x0, 0x0);
        gbc.writeMem(0xdab6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8f75, gbc.sp());
        EXPECT(0xdab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab6));
        EXPECT(0x7b, gbc.readMem(0xdab7));
        // CB 7B 002E
        gbc.setState(0x6c58, 0x1f19, 0x8c0, 0x80f5, 0x5c92, 0x73f9, 0x1, 0x0);
        gbc.writeMem(0x6c58, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1f19, gbc.sp());
        EXPECT(0x6c5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 002F
        gbc.setState(0xbfa, 0x2237, 0x4d70, 0xabc3, 0xa2d6, 0x2403, 0x1, 0x1);
        gbc.writeMem(0xbfa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2237, gbc.sp());
        EXPECT(0xbfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0030
        gbc.setState(0xeac9, 0xf5aa, 0xb9e0, 0xfe04, 0x8836, 0x3402, 0x0, 0x0);
        gbc.writeMem(0xeac9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf5aa, gbc.sp());
        EXPECT(0xeacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac9));
        EXPECT(0x7b, gbc.readMem(0xeaca));
        // CB 7B 0032
        gbc.setState(0x8835, 0xac66, 0x57f0, 0x6e9a, 0x5746, 0x12b6, 0x1, 0x0);
        gbc.writeMem(0x8835, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xac66, gbc.sp());
        EXPECT(0x8837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8835));
        EXPECT(0x7b, gbc.readMem(0x8836));
        // CB 7B 0033
        gbc.setState(0xb587, 0x1f6d, 0x94f0, 0xe5e3, 0x7c09, 0xf68f, 0x0, 0x0);
        gbc.writeMem(0xb587, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1f6d, gbc.sp());
        EXPECT(0xb589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb587));
        EXPECT(0x7b, gbc.readMem(0xb588));
        // CB 7B 0034
        gbc.setState(0x74b8, 0xed98, 0x93c0, 0xf231, 0xc883, 0x6d3, 0x1, 0x1);
        gbc.writeMem(0x74b8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xed98, gbc.sp());
        EXPECT(0x74ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0035
        gbc.setState(0xa4df, 0x2e36, 0x2680, 0xcfd9, 0xaa4a, 0xd1db, 0x0, 0x0);
        gbc.writeMem(0xa4df, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2e36, gbc.sp());
        EXPECT(0xa4e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4df));
        EXPECT(0x7b, gbc.readMem(0xa4e0));
        // CB 7B 0036
        gbc.setState(0x400d, 0x5fc0, 0x7f90, 0x80b8, 0x65ff, 0x7b15, 0x0, 0x0);
        gbc.writeMem(0x400d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5fc0, gbc.sp());
        EXPECT(0x400f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0037
        gbc.setState(0x9044, 0x2b12, 0x7a0, 0x302b, 0xc751, 0x2396, 0x1, 0x1);
        gbc.writeMem(0x9044, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2b12, gbc.sp());
        EXPECT(0x9046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9044));
        EXPECT(0x7b, gbc.readMem(0x9045));
        // CB 7B 0038
        gbc.setState(0x7f33, 0xd01b, 0x37a0, 0xd41c, 0x624d, 0xcab1, 0x1, 0x0);
        gbc.writeMem(0x7f33, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd01b, gbc.sp());
        EXPECT(0x7f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0039
        gbc.setState(0xe47b, 0xb75d, 0xbd50, 0x5284, 0x4f2f, 0xe24d, 0x1, 0x0);
        gbc.writeMem(0xe47b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb75d, gbc.sp());
        EXPECT(0xe47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47b));
        EXPECT(0x7b, gbc.readMem(0xe47c));
        // CB 7B 003A
        gbc.setState(0x312, 0xc73e, 0x9c50, 0xa2e4, 0x20be, 0xbe7c, 0x1, 0x0);
        gbc.writeMem(0x312, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc73e, gbc.sp());
        EXPECT(0x314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 003B
        gbc.setState(0x3ccb, 0x6f8b, 0x1f70, 0x7f0e, 0x2e1e, 0xa1cc, 0x0, 0x1);
        gbc.writeMem(0x3ccb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6f8b, gbc.sp());
        EXPECT(0x3ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 003C
        gbc.setState(0x714a, 0xcb96, 0x3570, 0xddc7, 0x99bd, 0x133a, 0x1, 0x1);
        gbc.writeMem(0x714a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcb96, gbc.sp());
        EXPECT(0x714c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 003D
        gbc.setState(0x7b35, 0x89e, 0x1a40, 0x54a7, 0xc137, 0xe638, 0x1, 0x0);
        gbc.writeMem(0x7b35, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x89e, gbc.sp());
        EXPECT(0x7b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 003E
        gbc.setState(0x7dbb, 0x43a2, 0x2430, 0x6c7c, 0x9746, 0xc802, 0x1, 0x0);
        gbc.writeMem(0x7dbb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x43a2, gbc.sp());
        EXPECT(0x7dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 003F
        gbc.setState(0x2c30, 0x2bbc, 0xf070, 0xb18c, 0xcc4b, 0xc12e, 0x1, 0x0);
        gbc.writeMem(0x2c30, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2bbc, gbc.sp());
        EXPECT(0x2c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0040
        gbc.setState(0x25c4, 0x2a07, 0x9ee0, 0xffbf, 0x144, 0x3e19, 0x0, 0x1);
        gbc.writeMem(0x25c4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2a07, gbc.sp());
        EXPECT(0x25c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0041
        gbc.setState(0x691d, 0x65b7, 0xe8d0, 0x31b8, 0x7319, 0xef60, 0x0, 0x0);
        gbc.writeMem(0x691d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x65b7, gbc.sp());
        EXPECT(0x691f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0042
        gbc.setState(0x25f8, 0x88e5, 0x4f80, 0xcfd9, 0x3730, 0x70f0, 0x0, 0x0);
        gbc.writeMem(0x25f8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x88e5, gbc.sp());
        EXPECT(0x25fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0043
        gbc.setState(0xa89c, 0x99d2, 0x59a0, 0x48a1, 0xf969, 0xc282, 0x1, 0x0);
        gbc.writeMem(0xa89c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x99d2, gbc.sp());
        EXPECT(0xa89e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89c));
        EXPECT(0x7b, gbc.readMem(0xa89d));
        // CB 7B 0044
        gbc.setState(0x3d75, 0x7977, 0x8160, 0xe313, 0x513, 0x7e28, 0x1, 0x0);
        gbc.writeMem(0x3d75, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7977, gbc.sp());
        EXPECT(0x3d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0045
        gbc.setState(0x9435, 0x7a47, 0xf730, 0x1fa4, 0x5d4a, 0xcdfa, 0x1, 0x0);
        gbc.writeMem(0x9435, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7a47, gbc.sp());
        EXPECT(0x9437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9435));
        EXPECT(0x7b, gbc.readMem(0x9436));
        // CB 7B 0046
        gbc.setState(0x801f, 0x1fa8, 0x58d0, 0x7bb2, 0xc895, 0x8f5, 0x0, 0x1);
        gbc.writeMem(0x801f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1fa8, gbc.sp());
        EXPECT(0x8021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801f));
        EXPECT(0x7b, gbc.readMem(0x8020));
        // CB 7B 0048
        gbc.setState(0x2071, 0x6208, 0xa6b0, 0x1dca, 0xfa9f, 0xcb2, 0x0, 0x1);
        gbc.writeMem(0x2071, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6208, gbc.sp());
        EXPECT(0x2073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0049
        gbc.setState(0x86ca, 0x15e8, 0xe430, 0x9087, 0xdeae, 0xed1, 0x1, 0x1);
        gbc.writeMem(0x86ca, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x15e8, gbc.sp());
        EXPECT(0x86cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ca));
        EXPECT(0x7b, gbc.readMem(0x86cb));
        // CB 7B 004A
        gbc.setState(0x98e6, 0xb152, 0x2db0, 0xdec9, 0x36d1, 0x32e4, 0x1, 0x1);
        gbc.writeMem(0x98e6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb152, gbc.sp());
        EXPECT(0x98e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e6));
        EXPECT(0x7b, gbc.readMem(0x98e7));
        // CB 7B 004B
        gbc.setState(0x57fb, 0xceed, 0x3fe0, 0xf503, 0x970f, 0xaee3, 0x0, 0x0);
        gbc.writeMem(0x57fb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xceed, gbc.sp());
        EXPECT(0x57fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 004C
        gbc.setState(0x8294, 0x5566, 0x5d50, 0xc722, 0xf814, 0x207f, 0x1, 0x1);
        gbc.writeMem(0x8294, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5566, gbc.sp());
        EXPECT(0x8296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8294));
        EXPECT(0x7b, gbc.readMem(0x8295));
        // CB 7B 004D
        gbc.setState(0x45aa, 0xb164, 0xf0b0, 0x787e, 0xeaee, 0x2014, 0x1, 0x0);
        gbc.writeMem(0x45aa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb164, gbc.sp());
        EXPECT(0x45ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 004E
        gbc.setState(0x6fca, 0x3056, 0xf9c0, 0x7ba8, 0xf3cc, 0xde12, 0x0, 0x1);
        gbc.writeMem(0x6fca, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3056, gbc.sp());
        EXPECT(0x6fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 004F
        gbc.setState(0x41d3, 0xdb88, 0xe3e0, 0x853e, 0x2252, 0xa028, 0x0, 0x1);
        gbc.writeMem(0x41d3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdb88, gbc.sp());
        EXPECT(0x41d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0050
        gbc.setState(0xc633, 0x23c7, 0x7730, 0xd823, 0x9785, 0x9ba0, 0x1, 0x0);
        gbc.writeMem(0xc633, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x23c7, gbc.sp());
        EXPECT(0xc635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc633));
        EXPECT(0x7b, gbc.readMem(0xc634));
        // CB 7B 0051
        gbc.setState(0xc949, 0x7cd, 0x8480, 0x3df8, 0xebc9, 0xf221, 0x0, 0x0);
        gbc.writeMem(0xc949, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7cd, gbc.sp());
        EXPECT(0xc94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc949));
        EXPECT(0x7b, gbc.readMem(0xc94a));
        // CB 7B 0052
        gbc.setState(0x20d6, 0x5b1f, 0x6f80, 0x5db7, 0xbbeb, 0xe872, 0x0, 0x1);
        gbc.writeMem(0x20d6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5b1f, gbc.sp());
        EXPECT(0x20d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0053
        gbc.setState(0x6f69, 0x80cd, 0xb690, 0x7ba, 0x247e, 0x9419, 0x1, 0x1);
        gbc.writeMem(0x6f69, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x80cd, gbc.sp());
        EXPECT(0x6f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0055
        gbc.setState(0x198f, 0xab76, 0x30c0, 0x9a8a, 0xcddd, 0x6360, 0x0, 0x0);
        gbc.writeMem(0x198f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xab76, gbc.sp());
        EXPECT(0x1991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0056
        gbc.setState(0x78b0, 0x4c92, 0x65d0, 0xf76f, 0x55b1, 0xca17, 0x0, 0x0);
        gbc.writeMem(0x78b0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4c92, gbc.sp());
        EXPECT(0x78b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0057
        gbc.setState(0x9ac, 0xc928, 0x7840, 0x1d1e, 0x11f5, 0xf0de, 0x1, 0x0);
        gbc.writeMem(0x9ac, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc928, gbc.sp());
        EXPECT(0x9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0058
        gbc.setState(0x5a4e, 0xf089, 0xfe0, 0x47d9, 0x24fe, 0xeed6, 0x0, 0x1);
        gbc.writeMem(0x5a4e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf089, gbc.sp());
        EXPECT(0x5a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0059
        gbc.setState(0x424a, 0x568a, 0xc7f0, 0xb6e5, 0xf644, 0x7702, 0x1, 0x0);
        gbc.writeMem(0x424a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x568a, gbc.sp());
        EXPECT(0x424c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 005A
        gbc.setState(0x3ab2, 0xa5dd, 0x32b0, 0x525f, 0x597f, 0x9cd, 0x1, 0x1);
        gbc.writeMem(0x3ab2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa5dd, gbc.sp());
        EXPECT(0x3ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 005B
        gbc.setState(0x5fd4, 0x9174, 0xe240, 0x97e3, 0x78ca, 0xaec6, 0x0, 0x0);
        gbc.writeMem(0x5fd4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9174, gbc.sp());
        EXPECT(0x5fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 005C
        gbc.setState(0xb3b0, 0x523c, 0xa730, 0xbfb2, 0xf073, 0x2015, 0x0, 0x1);
        gbc.writeMem(0xb3b0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x523c, gbc.sp());
        EXPECT(0xb3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b0));
        EXPECT(0x7b, gbc.readMem(0xb3b1));
        // CB 7B 005D
        gbc.setState(0x8fa9, 0x5405, 0x62c0, 0xd25a, 0x994e, 0xfb0, 0x1, 0x1);
        gbc.writeMem(0x8fa9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5405, gbc.sp());
        EXPECT(0x8fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa9));
        EXPECT(0x7b, gbc.readMem(0x8faa));
        // CB 7B 005E
        gbc.setState(0x4c47, 0x7322, 0xf1a0, 0x6957, 0xa675, 0xcfa9, 0x0, 0x0);
        gbc.writeMem(0x4c47, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7322, gbc.sp());
        EXPECT(0x4c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 005F
        gbc.setState(0x1865, 0x721c, 0x5bc0, 0xcb84, 0xb33d, 0xfb1e, 0x1, 0x1);
        gbc.writeMem(0x1865, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x721c, gbc.sp());
        EXPECT(0x1867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0060
        gbc.setState(0xd3ea, 0x253e, 0x6ab0, 0x9b95, 0x2d46, 0x3495, 0x1, 0x1);
        gbc.writeMem(0xd3ea, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x253e, gbc.sp());
        EXPECT(0xd3ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ea));
        EXPECT(0x7b, gbc.readMem(0xd3eb));
        // CB 7B 0061
        gbc.setState(0x71c7, 0x888b, 0xcb40, 0x72ad, 0x8303, 0x123a, 0x1, 0x1);
        gbc.writeMem(0x71c7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x888b, gbc.sp());
        EXPECT(0x71c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0062
        gbc.setState(0xdf8c, 0x935a, 0xba30, 0xade8, 0xabbd, 0x6290, 0x0, 0x1);
        gbc.writeMem(0xdf8c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x935a, gbc.sp());
        EXPECT(0xdf8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf8c));
        EXPECT(0x7b, gbc.readMem(0xdf8d));
        // CB 7B 0063
        gbc.setState(0x9a41, 0x6eec, 0xfbe0, 0x16cd, 0xc8af, 0x5da7, 0x0, 0x0);
        gbc.writeMem(0x9a41, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6eec, gbc.sp());
        EXPECT(0x9a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a41));
        EXPECT(0x7b, gbc.readMem(0x9a42));
        // CB 7B 0065
        gbc.setState(0x5092, 0x4071, 0xa780, 0x23f, 0x8b51, 0x1762, 0x0, 0x1);
        gbc.writeMem(0x5092, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4071, gbc.sp());
        EXPECT(0x5094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0066
        gbc.setState(0x6855, 0xe996, 0x2220, 0x5a77, 0x207e, 0x409, 0x1, 0x1);
        gbc.writeMem(0x6855, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe996, gbc.sp());
        EXPECT(0x6857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0067
        gbc.setState(0x3b93, 0xd6bf, 0xa7b0, 0xf7e5, 0x6951, 0x29a, 0x1, 0x1);
        gbc.writeMem(0x3b93, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd6bf, gbc.sp());
        EXPECT(0x3b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0068
        gbc.setState(0xe2ee, 0x6ab1, 0x3690, 0x5203, 0x771d, 0x96ce, 0x1, 0x0);
        gbc.writeMem(0xe2ee, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6ab1, gbc.sp());
        EXPECT(0xe2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ee));
        EXPECT(0x7b, gbc.readMem(0xe2ef));
        // CB 7B 0069
        gbc.setState(0xd1bd, 0xabda, 0x1640, 0xf91e, 0x852a, 0xc4b9, 0x0, 0x1);
        gbc.writeMem(0xd1bd, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xabda, gbc.sp());
        EXPECT(0xd1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bd));
        EXPECT(0x7b, gbc.readMem(0xd1be));
        // CB 7B 006A
        gbc.setState(0x5832, 0xd9b, 0x24b0, 0x63f7, 0x4887, 0xda61, 0x0, 0x0);
        gbc.writeMem(0x5832, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd9b, gbc.sp());
        EXPECT(0x5834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 006B
        gbc.setState(0x6311, 0x8acd, 0x6d10, 0x13f5, 0x1cb4, 0xb5cc, 0x0, 0x0);
        gbc.writeMem(0x6311, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8acd, gbc.sp());
        EXPECT(0x6313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 006C
        gbc.setState(0xcaa, 0x265d, 0xf870, 0xa222, 0x65f, 0xd0ff, 0x0, 0x1);
        gbc.writeMem(0xcaa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x265d, gbc.sp());
        EXPECT(0xcac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 006D
        gbc.setState(0xdc67, 0x918e, 0x2690, 0xfbaf, 0x73f4, 0x835b, 0x1, 0x0);
        gbc.writeMem(0xdc67, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x918e, gbc.sp());
        EXPECT(0xdc69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc67));
        EXPECT(0x7b, gbc.readMem(0xdc68));
        // CB 7B 006E
        gbc.setState(0xcc71, 0x8a5e, 0x7d90, 0xf2b1, 0x373d, 0xc183, 0x1, 0x1);
        gbc.writeMem(0xcc71, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8a5e, gbc.sp());
        EXPECT(0xcc73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc71));
        EXPECT(0x7b, gbc.readMem(0xcc72));
        // CB 7B 006F
        gbc.setState(0x43a9, 0xaf35, 0x3440, 0xf53a, 0xa46f, 0x7b98, 0x1, 0x1);
        gbc.writeMem(0x43a9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xaf35, gbc.sp());
        EXPECT(0x43ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0070
        gbc.setState(0x699e, 0x996, 0x5030, 0xf81e, 0x8919, 0x441a, 0x0, 0x0);
        gbc.writeMem(0x699e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x996, gbc.sp());
        EXPECT(0x69a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0071
        gbc.setState(0x9db1, 0xb170, 0x1ae0, 0xe26, 0xd3d5, 0xcd2b, 0x1, 0x1);
        gbc.writeMem(0x9db1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb170, gbc.sp());
        EXPECT(0x9db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db1));
        EXPECT(0x7b, gbc.readMem(0x9db2));
        // CB 7B 0072
        gbc.setState(0x96e8, 0x4a85, 0x13f0, 0x9f82, 0xfb2b, 0x4519, 0x1, 0x0);
        gbc.writeMem(0x96e8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4a85, gbc.sp());
        EXPECT(0x96ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e8));
        EXPECT(0x7b, gbc.readMem(0x96e9));
        // CB 7B 0073
        gbc.setState(0xae8f, 0x18b1, 0x7910, 0x9077, 0xb315, 0x2ec6, 0x1, 0x1);
        gbc.writeMem(0xae8f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x18b1, gbc.sp());
        EXPECT(0xae91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae8f));
        EXPECT(0x7b, gbc.readMem(0xae90));
        // CB 7B 0074
        gbc.setState(0x1af7, 0xb320, 0x8b80, 0xb4fe, 0xecb2, 0xe1ac, 0x1, 0x0);
        gbc.writeMem(0x1af7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb320, gbc.sp());
        EXPECT(0x1af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0077
        gbc.setState(0x4ad7, 0xdb84, 0x4a20, 0xb905, 0xc911, 0xedd0, 0x0, 0x1);
        gbc.writeMem(0x4ad7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdb84, gbc.sp());
        EXPECT(0x4ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0078
        gbc.setState(0x6b41, 0xec38, 0x9c40, 0x293e, 0xa7ff, 0xf5fd, 0x0, 0x1);
        gbc.writeMem(0x6b41, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xec38, gbc.sp());
        EXPECT(0x6b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 007A
        gbc.setState(0x428f, 0xbfd7, 0x730, 0x98c4, 0x9db2, 0xb128, 0x1, 0x1);
        gbc.writeMem(0x428f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbfd7, gbc.sp());
        EXPECT(0x4291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 007B
        gbc.setState(0x9b94, 0x83e8, 0xa790, 0xf4ec, 0x3235, 0xbbbd, 0x1, 0x0);
        gbc.writeMem(0x9b94, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x83e8, gbc.sp());
        EXPECT(0x9b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b94));
        EXPECT(0x7b, gbc.readMem(0x9b95));
        // CB 7B 007C
        gbc.setState(0xc7d, 0x383d, 0x4790, 0x8229, 0x63c2, 0x6837, 0x1, 0x0);
        gbc.writeMem(0xc7d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x383d, gbc.sp());
        EXPECT(0xc7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 007D
        gbc.setState(0x898d, 0x8ca1, 0x9c00, 0x3520, 0xeb44, 0x56e7, 0x1, 0x1);
        gbc.writeMem(0x898d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8ca1, gbc.sp());
        EXPECT(0x898f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x898d));
        EXPECT(0x7b, gbc.readMem(0x898e));
        // CB 7B 007E
        gbc.setState(0xcd0c, 0xf121, 0x860, 0xd381, 0xe288, 0x67bf, 0x1, 0x0);
        gbc.writeMem(0xcd0c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf121, gbc.sp());
        EXPECT(0xcd0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0c));
        EXPECT(0x7b, gbc.readMem(0xcd0d));
        // CB 7B 007F
        gbc.setState(0xa6e, 0xb277, 0x5580, 0x3e0, 0x10b5, 0x2366, 0x1, 0x1);
        gbc.writeMem(0xa6e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb277, gbc.sp());
        EXPECT(0xa70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0080
        gbc.setState(0x1b0a, 0x725b, 0xb3b0, 0x4ee2, 0xe930, 0xb027, 0x0, 0x1);
        gbc.writeMem(0x1b0a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x725b, gbc.sp());
        EXPECT(0x1b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0081
        gbc.setState(0xf79, 0x4004, 0x63e0, 0xde66, 0xbcd5, 0xa759, 0x0, 0x1);
        gbc.writeMem(0xf79, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4004, gbc.sp());
        EXPECT(0xf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0082
        gbc.setState(0x52e1, 0x6039, 0x8cb0, 0xecaf, 0x4f9e, 0x8dd1, 0x1, 0x1);
        gbc.writeMem(0x52e1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6039, gbc.sp());
        EXPECT(0x52e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0083
        gbc.setState(0xecef, 0x343c, 0x6af0, 0xc250, 0x255c, 0xd2b6, 0x0, 0x0);
        gbc.writeMem(0xecef, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x343c, gbc.sp());
        EXPECT(0xecf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecef));
        EXPECT(0x7b, gbc.readMem(0xecf0));
        // CB 7B 0084
        gbc.setState(0xdad5, 0x98f9, 0x24d0, 0xa5df, 0x34e1, 0x6047, 0x1, 0x1);
        gbc.writeMem(0xdad5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x98f9, gbc.sp());
        EXPECT(0xdad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad5));
        EXPECT(0x7b, gbc.readMem(0xdad6));
        // CB 7B 0085
        gbc.setState(0xb90f, 0xcbbe, 0x92b0, 0x1f0e, 0x6f8f, 0xa22f, 0x1, 0x0);
        gbc.writeMem(0xb90f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcbbe, gbc.sp());
        EXPECT(0xb911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb90f));
        EXPECT(0x7b, gbc.readMem(0xb910));
        // CB 7B 0086
        gbc.setState(0x52b8, 0xdced, 0xd6f0, 0xdda6, 0x51ca, 0xda61, 0x1, 0x0);
        gbc.writeMem(0x52b8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdced, gbc.sp());
        EXPECT(0x52ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0087
        gbc.setState(0x3251, 0x93d2, 0x39c0, 0xcad3, 0xba8a, 0xb064, 0x0, 0x1);
        gbc.writeMem(0x3251, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x93d2, gbc.sp());
        EXPECT(0x3253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0088
        gbc.setState(0xd3f3, 0x290, 0xe390, 0x2245, 0xf10a, 0x1936, 0x0, 0x1);
        gbc.writeMem(0xd3f3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x290, gbc.sp());
        EXPECT(0xd3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f3));
        EXPECT(0x7b, gbc.readMem(0xd3f4));
        // CB 7B 0089
        gbc.setState(0x725, 0x4da6, 0x75e0, 0x4c46, 0xdd19, 0x39e2, 0x1, 0x1);
        gbc.writeMem(0x725, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4da6, gbc.sp());
        EXPECT(0x727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 008A
        gbc.setState(0x22cb, 0xba00, 0x5690, 0x1ba1, 0x4f1d, 0x5782, 0x1, 0x0);
        gbc.writeMem(0x22cb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xba00, gbc.sp());
        EXPECT(0x22cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 008B
        gbc.setState(0x5d92, 0xf2eb, 0xd370, 0xe111, 0xe7b8, 0x549c, 0x1, 0x1);
        gbc.writeMem(0x5d92, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf2eb, gbc.sp());
        EXPECT(0x5d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 008C
        gbc.setState(0xa8dc, 0x5bfe, 0x31a0, 0x22c0, 0x4ce4, 0x5da7, 0x0, 0x1);
        gbc.writeMem(0xa8dc, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5bfe, gbc.sp());
        EXPECT(0xa8de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8dc));
        EXPECT(0x7b, gbc.readMem(0xa8dd));
        // CB 7B 008D
        gbc.setState(0x561, 0xff8b, 0x1080, 0xa595, 0xd64e, 0x3ad9, 0x0, 0x1);
        gbc.writeMem(0x561, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xff8b, gbc.sp());
        EXPECT(0x563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 008E
        gbc.setState(0x2a1c, 0xb453, 0x16e0, 0x5b86, 0x4b21, 0x9fe3, 0x0, 0x0);
        gbc.writeMem(0x2a1c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb453, gbc.sp());
        EXPECT(0x2a1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 008F
        gbc.setState(0xc3ec, 0xe1f, 0x4f20, 0xdfd3, 0x2e5a, 0x75, 0x1, 0x1);
        gbc.writeMem(0xc3ec, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe1f, gbc.sp());
        EXPECT(0xc3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ec));
        EXPECT(0x7b, gbc.readMem(0xc3ed));
        // CB 7B 0090
        gbc.setState(0x38da, 0x94e5, 0x3290, 0xf4cc, 0xeefd, 0xa2b5, 0x0, 0x1);
        gbc.writeMem(0x38da, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x94e5, gbc.sp());
        EXPECT(0x38dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0091
        gbc.setState(0x1f43, 0xaafe, 0xd1f0, 0xca9b, 0xf20c, 0xf5a4, 0x1, 0x0);
        gbc.writeMem(0x1f43, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xaafe, gbc.sp());
        EXPECT(0x1f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0092
        gbc.setState(0xcd34, 0x70c5, 0xe830, 0xa181, 0xa39d, 0x1659, 0x0, 0x0);
        gbc.writeMem(0xcd34, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x70c5, gbc.sp());
        EXPECT(0xcd36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd34));
        EXPECT(0x7b, gbc.readMem(0xcd35));
        // CB 7B 0094
        gbc.setState(0x74f9, 0xe3c, 0x23a0, 0x615c, 0x5a06, 0xefa1, 0x1, 0x0);
        gbc.writeMem(0x74f9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe3c, gbc.sp());
        EXPECT(0x74fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0095
        gbc.setState(0xd4b1, 0xc4a6, 0xd180, 0xe816, 0x782f, 0xe929, 0x1, 0x1);
        gbc.writeMem(0xd4b1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc4a6, gbc.sp());
        EXPECT(0xd4b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4b1));
        EXPECT(0x7b, gbc.readMem(0xd4b2));
        // CB 7B 0096
        gbc.setState(0x1c47, 0xf06e, 0x2280, 0x23fd, 0x3ad9, 0xcdb7, 0x0, 0x0);
        gbc.writeMem(0x1c47, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf06e, gbc.sp());
        EXPECT(0x1c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0097
        gbc.setState(0xdf4f, 0xcd2f, 0xec30, 0xa0b7, 0x7172, 0xc7e6, 0x1, 0x0);
        gbc.writeMem(0xdf4f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcd2f, gbc.sp());
        EXPECT(0xdf51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf4f));
        EXPECT(0x7b, gbc.readMem(0xdf50));
        // CB 7B 0098
        gbc.setState(0xe075, 0x1139, 0xe2b0, 0xe287, 0x5b8a, 0xc5f7, 0x0, 0x0);
        gbc.writeMem(0xe075, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1139, gbc.sp());
        EXPECT(0xe077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe075));
        EXPECT(0x7b, gbc.readMem(0xe076));
        // CB 7B 0099
        gbc.setState(0xdce2, 0xc5dc, 0x1be0, 0x6629, 0x178f, 0xaa61, 0x0, 0x0);
        gbc.writeMem(0xdce2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc5dc, gbc.sp());
        EXPECT(0xdce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce2));
        EXPECT(0x7b, gbc.readMem(0xdce3));
        // CB 7B 009B
        gbc.setState(0x32da, 0x3e3a, 0xd440, 0x232e, 0x106b, 0x3a7b, 0x1, 0x0);
        gbc.writeMem(0x32da, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3e3a, gbc.sp());
        EXPECT(0x32dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 009C
        gbc.setState(0xef1f, 0x2107, 0x83a0, 0xf0c, 0xf0b5, 0x5e6c, 0x0, 0x0);
        gbc.writeMem(0xef1f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2107, gbc.sp());
        EXPECT(0xef21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef1f));
        EXPECT(0x7b, gbc.readMem(0xef20));
        // CB 7B 009D
        gbc.setState(0x42aa, 0xc541, 0x8a90, 0xf0e0, 0x60d6, 0x400a, 0x0, 0x0);
        gbc.writeMem(0x42aa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc541, gbc.sp());
        EXPECT(0x42ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 009E
        gbc.setState(0xb8fc, 0x888c, 0xc190, 0x561, 0x74ee, 0xbbe6, 0x1, 0x0);
        gbc.writeMem(0xb8fc, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x888c, gbc.sp());
        EXPECT(0xb8fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fc));
        EXPECT(0x7b, gbc.readMem(0xb8fd));
        // CB 7B 00A0
        gbc.setState(0x83a, 0x6ef8, 0xfe70, 0x4db7, 0xbd0b, 0x5003, 0x1, 0x0);
        gbc.writeMem(0x83a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6ef8, gbc.sp());
        EXPECT(0x83c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00A3
        gbc.setState(0x5246, 0xdcdc, 0xde30, 0x1841, 0x901f, 0x1509, 0x1, 0x1);
        gbc.writeMem(0x5246, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdcdc, gbc.sp());
        EXPECT(0x5248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00A4
        gbc.setState(0xaf58, 0x7a2a, 0x96d0, 0xf79d, 0xaee8, 0x80bc, 0x0, 0x1);
        gbc.writeMem(0xaf58, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7a2a, gbc.sp());
        EXPECT(0xaf5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf58));
        EXPECT(0x7b, gbc.readMem(0xaf59));
        // CB 7B 00A5
        gbc.setState(0x7306, 0xd492, 0x5da0, 0xe91, 0xbcc1, 0x5479, 0x0, 0x1);
        gbc.writeMem(0x7306, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd492, gbc.sp());
        EXPECT(0x7308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00A6
        gbc.setState(0xbf8e, 0xd02a, 0xf480, 0xf5a7, 0x525b, 0xf181, 0x1, 0x1);
        gbc.writeMem(0xbf8e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd02a, gbc.sp());
        EXPECT(0xbf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8e));
        EXPECT(0x7b, gbc.readMem(0xbf8f));
        // CB 7B 00A7
        gbc.setState(0x9138, 0x7646, 0x2aa0, 0xb4a0, 0x607f, 0xf136, 0x0, 0x1);
        gbc.writeMem(0x9138, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7646, gbc.sp());
        EXPECT(0x913a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9138));
        EXPECT(0x7b, gbc.readMem(0x9139));
        // CB 7B 00A8
        gbc.setState(0xafe1, 0x2636, 0x6d0, 0x80c4, 0x15fb, 0x4d11, 0x0, 0x1);
        gbc.writeMem(0xafe1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2636, gbc.sp());
        EXPECT(0xafe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe1));
        EXPECT(0x7b, gbc.readMem(0xafe2));
        // CB 7B 00A9
        gbc.setState(0x641a, 0x7056, 0x8830, 0xec3, 0xba0e, 0x7d85, 0x0, 0x0);
        gbc.writeMem(0x641a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7056, gbc.sp());
        EXPECT(0x641c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00AA
        gbc.setState(0xbe65, 0x424c, 0x5d30, 0x687f, 0x9e46, 0xd643, 0x0, 0x0);
        gbc.writeMem(0xbe65, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x424c, gbc.sp());
        EXPECT(0xbe67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe65));
        EXPECT(0x7b, gbc.readMem(0xbe66));
        // CB 7B 00AB
        gbc.setState(0x8e0f, 0x3cc6, 0x3130, 0x1f5, 0x9bf1, 0xce86, 0x0, 0x1);
        gbc.writeMem(0x8e0f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3cc6, gbc.sp());
        EXPECT(0x8e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0f));
        EXPECT(0x7b, gbc.readMem(0x8e10));
        // CB 7B 00AC
        gbc.setState(0xd54e, 0x8a8f, 0x1810, 0x72c5, 0xc422, 0x25d5, 0x0, 0x1);
        gbc.writeMem(0xd54e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8a8f, gbc.sp());
        EXPECT(0xd550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd54e));
        EXPECT(0x7b, gbc.readMem(0xd54f));
        // CB 7B 00AD
        gbc.setState(0x3b13, 0xe5a, 0x8f80, 0x33c4, 0xc364, 0xcdd8, 0x0, 0x1);
        gbc.writeMem(0x3b13, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe5a, gbc.sp());
        EXPECT(0x3b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00AE
        gbc.setState(0x980, 0x44ac, 0xb2e0, 0xebd9, 0x32b6, 0x58c0, 0x1, 0x1);
        gbc.writeMem(0x980, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x44ac, gbc.sp());
        EXPECT(0x982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00AF
        gbc.setState(0x3f28, 0xe915, 0xa2a0, 0x49bc, 0xe72a, 0x71a0, 0x0, 0x1);
        gbc.writeMem(0x3f28, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe915, gbc.sp());
        EXPECT(0x3f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00B0
        gbc.setState(0xa34e, 0x1fab, 0x13c0, 0x72e3, 0x1209, 0x29b5, 0x0, 0x1);
        gbc.writeMem(0xa34e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1fab, gbc.sp());
        EXPECT(0xa350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa34e));
        EXPECT(0x7b, gbc.readMem(0xa34f));
        // CB 7B 00B1
        gbc.setState(0xbe82, 0xdc8e, 0x69c0, 0xab5, 0x4c8f, 0x914b, 0x1, 0x1);
        gbc.writeMem(0xbe82, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdc8e, gbc.sp());
        EXPECT(0xbe84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe82));
        EXPECT(0x7b, gbc.readMem(0xbe83));
        // CB 7B 00B2
        gbc.setState(0x9b1a, 0x704e, 0x2fb0, 0x5d91, 0x8e30, 0xc785, 0x0, 0x0);
        gbc.writeMem(0x9b1a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x704e, gbc.sp());
        EXPECT(0x9b1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b1a));
        EXPECT(0x7b, gbc.readMem(0x9b1b));
        // CB 7B 00B3
        gbc.setState(0x13c5, 0x70de, 0x5370, 0xee7, 0xd7a3, 0x72ea, 0x1, 0x1);
        gbc.writeMem(0x13c5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x70de, gbc.sp());
        EXPECT(0x13c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00B4
        gbc.setState(0x5596, 0xa6e6, 0x2330, 0x1fc7, 0xeed9, 0xed24, 0x1, 0x1);
        gbc.writeMem(0x5596, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa6e6, gbc.sp());
        EXPECT(0x5598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00B5
        gbc.setState(0x18e0, 0xb2b5, 0xe160, 0x7586, 0xf657, 0x7083, 0x1, 0x1);
        gbc.writeMem(0x18e0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb2b5, gbc.sp());
        EXPECT(0x18e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00B6
        gbc.setState(0xe86, 0xd037, 0x2430, 0x8ecb, 0x9e48, 0x7b2b, 0x0, 0x1);
        gbc.writeMem(0xe86, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd037, gbc.sp());
        EXPECT(0xe88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00B7
        gbc.setState(0xa77e, 0x7911, 0x9ec0, 0xb5ca, 0x75d7, 0xe6d6, 0x0, 0x0);
        gbc.writeMem(0xa77e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7911, gbc.sp());
        EXPECT(0xa780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77e));
        EXPECT(0x7b, gbc.readMem(0xa77f));
        // CB 7B 00B8
        gbc.setState(0x537d, 0x266, 0x66b0, 0xc214, 0x53eb, 0x8a59, 0x0, 0x1);
        gbc.writeMem(0x537d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x266, gbc.sp());
        EXPECT(0x537f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00BA
        gbc.setState(0x3ef3, 0xd9e6, 0x4f10, 0x183d, 0x6f10, 0x9201, 0x0, 0x1);
        gbc.writeMem(0x3ef3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd9e6, gbc.sp());
        EXPECT(0x3ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00BB
        gbc.setState(0x784, 0xc4fd, 0xcb50, 0xd6b, 0xa64f, 0xcc3, 0x0, 0x1);
        gbc.writeMem(0x784, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc4fd, gbc.sp());
        EXPECT(0x786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00BC
        gbc.setState(0x3f70, 0x48c9, 0x3ec0, 0x2016, 0x1eef, 0x18d8, 0x0, 0x1);
        gbc.writeMem(0x3f70, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x48c9, gbc.sp());
        EXPECT(0x3f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00BD
        gbc.setState(0x16ad, 0x38ed, 0x3360, 0xd9d5, 0x933f, 0xe07f, 0x0, 0x0);
        gbc.writeMem(0x16ad, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x38ed, gbc.sp());
        EXPECT(0x16af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00BE
        gbc.setState(0xd3db, 0x9b58, 0xd090, 0x92b4, 0x91cd, 0x9388, 0x0, 0x0);
        gbc.writeMem(0xd3db, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9b58, gbc.sp());
        EXPECT(0xd3dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3db));
        EXPECT(0x7b, gbc.readMem(0xd3dc));
        // CB 7B 00BF
        gbc.setState(0xd748, 0xd0f3, 0xc890, 0xcd5e, 0x96e9, 0x4159, 0x0, 0x1);
        gbc.writeMem(0xd748, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd0f3, gbc.sp());
        EXPECT(0xd74a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd748));
        EXPECT(0x7b, gbc.readMem(0xd749));
        // CB 7B 00C0
        gbc.setState(0xe012, 0x4fb9, 0x2e0, 0x38b3, 0xae7, 0x7505, 0x1, 0x0);
        gbc.writeMem(0xe012, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4fb9, gbc.sp());
        EXPECT(0xe014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe012));
        EXPECT(0x7b, gbc.readMem(0xe013));
        // CB 7B 00C1
        gbc.setState(0x6dc0, 0xa794, 0x24c0, 0x34a0, 0xd18e, 0xb0e0, 0x0, 0x0);
        gbc.writeMem(0x6dc0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa794, gbc.sp());
        EXPECT(0x6dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00C2
        gbc.setState(0x4684, 0x85e6, 0xe030, 0x3c53, 0x421d, 0x38c2, 0x0, 0x1);
        gbc.writeMem(0x4684, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x85e6, gbc.sp());
        EXPECT(0x4686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00C3
        gbc.setState(0x1083, 0xe44, 0xb320, 0xb8ed, 0x7317, 0x9896, 0x1, 0x0);
        gbc.writeMem(0x1083, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe44, gbc.sp());
        EXPECT(0x1085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00C4
        gbc.setState(0x2c87, 0x8ea9, 0x9040, 0xa4bf, 0xfd39, 0x60ba, 0x0, 0x1);
        gbc.writeMem(0x2c87, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8ea9, gbc.sp());
        EXPECT(0x2c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00C5
        gbc.setState(0xc4d3, 0x7f42, 0xd830, 0x1655, 0xa082, 0x65d4, 0x1, 0x1);
        gbc.writeMem(0xc4d3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7f42, gbc.sp());
        EXPECT(0xc4d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d3));
        EXPECT(0x7b, gbc.readMem(0xc4d4));
        // CB 7B 00C6
        gbc.setState(0x1558, 0x1ad9, 0x5670, 0xe33d, 0xbcb7, 0x751f, 0x1, 0x0);
        gbc.writeMem(0x1558, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1ad9, gbc.sp());
        EXPECT(0x155a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00C7
        gbc.setState(0x2a14, 0x1a3f, 0x5cf0, 0xf2fb, 0x7aec, 0x2240, 0x1, 0x1);
        gbc.writeMem(0x2a14, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1a3f, gbc.sp());
        EXPECT(0x2a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00C8
        gbc.setState(0x9f73, 0x387a, 0xbea0, 0x392d, 0x5246, 0xdcc3, 0x0, 0x1);
        gbc.writeMem(0x9f73, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x387a, gbc.sp());
        EXPECT(0x9f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f73));
        EXPECT(0x7b, gbc.readMem(0x9f74));
        // CB 7B 00C9
        gbc.setState(0x303d, 0xc67a, 0xaf80, 0x238f, 0x7829, 0xec16, 0x1, 0x1);
        gbc.writeMem(0x303d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc67a, gbc.sp());
        EXPECT(0x303f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00CA
        gbc.setState(0x98, 0x32c7, 0xdf30, 0xcc54, 0x67e2, 0xdc41, 0x0, 0x0);
        gbc.writeMem(0x98, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x32c7, gbc.sp());
        EXPECT(0x9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00CC
        gbc.setState(0xcbb, 0x2b3b, 0xe560, 0xf9a9, 0xca4e, 0x7689, 0x1, 0x1);
        gbc.writeMem(0xcbb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2b3b, gbc.sp());
        EXPECT(0xcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00CD
        gbc.setState(0xe328, 0x609e, 0xf2f0, 0xf5d5, 0xad57, 0x58b8, 0x0, 0x0);
        gbc.writeMem(0xe328, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x609e, gbc.sp());
        EXPECT(0xe32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe328));
        EXPECT(0x7b, gbc.readMem(0xe329));
        // CB 7B 00CE
        gbc.setState(0xda85, 0x48e, 0x8270, 0xdef8, 0x2988, 0xce9c, 0x0, 0x0);
        gbc.writeMem(0xda85, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x48e, gbc.sp());
        EXPECT(0xda87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda85));
        EXPECT(0x7b, gbc.readMem(0xda86));
        // CB 7B 00CF
        gbc.setState(0x147e, 0x9736, 0xbfb0, 0x544e, 0x7c0f, 0x7967, 0x0, 0x1);
        gbc.writeMem(0x147e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9736, gbc.sp());
        EXPECT(0x1480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00D0
        gbc.setState(0xb068, 0x43cb, 0x9b70, 0xfaf8, 0x755c, 0xedfa, 0x0, 0x1);
        gbc.writeMem(0xb068, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x43cb, gbc.sp());
        EXPECT(0xb06a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb068));
        EXPECT(0x7b, gbc.readMem(0xb069));
        // CB 7B 00D1
        gbc.setState(0x44, 0x7b90, 0x810, 0x6679, 0xe9b8, 0xf91b, 0x1, 0x1);
        gbc.writeMem(0x44, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7b90, gbc.sp());
        EXPECT(0x46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00D2
        gbc.setState(0x604, 0xec3b, 0x6370, 0x7aaf, 0x693e, 0x958e, 0x0, 0x1);
        gbc.writeMem(0x604, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xec3b, gbc.sp());
        EXPECT(0x606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00D3
        gbc.setState(0x374e, 0x4c1e, 0x11f0, 0x2a17, 0x212, 0xa7e1, 0x0, 0x1);
        gbc.writeMem(0x374e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4c1e, gbc.sp());
        EXPECT(0x3750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00D4
        gbc.setState(0xc21a, 0x2d4e, 0x3590, 0x1440, 0xa7e8, 0x373a, 0x0, 0x1);
        gbc.writeMem(0xc21a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2d4e, gbc.sp());
        EXPECT(0xc21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc21a));
        EXPECT(0x7b, gbc.readMem(0xc21b));
        // CB 7B 00D5
        gbc.setState(0x3d06, 0x164d, 0x4410, 0x4ddc, 0xf5a1, 0xabee, 0x1, 0x1);
        gbc.writeMem(0x3d06, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x164d, gbc.sp());
        EXPECT(0x3d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00D6
        gbc.setState(0xca55, 0x93e9, 0x3180, 0xd86e, 0xfac1, 0x84d, 0x0, 0x0);
        gbc.writeMem(0xca55, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x93e9, gbc.sp());
        EXPECT(0xca57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca55));
        EXPECT(0x7b, gbc.readMem(0xca56));
        // CB 7B 00D8
        gbc.setState(0xb0ac, 0x759, 0x3d50, 0x9844, 0xe2d6, 0x2cbd, 0x0, 0x0);
        gbc.writeMem(0xb0ac, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x759, gbc.sp());
        EXPECT(0xb0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ac));
        EXPECT(0x7b, gbc.readMem(0xb0ad));
        // CB 7B 00D9
        gbc.setState(0xcb35, 0x86b9, 0xcaa0, 0x8dca, 0xd571, 0xeecf, 0x1, 0x1);
        gbc.writeMem(0xcb35, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x86b9, gbc.sp());
        EXPECT(0xcb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb35));
        EXPECT(0x7b, gbc.readMem(0xcb36));
        // CB 7B 00DA
        gbc.setState(0x410d, 0xa366, 0x69a0, 0xfe43, 0xa5ed, 0x8db8, 0x0, 0x0);
        gbc.writeMem(0x410d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa366, gbc.sp());
        EXPECT(0x410f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00DB
        gbc.setState(0x390c, 0x7e7c, 0x70f0, 0xfa0f, 0x202e, 0xd7f0, 0x0, 0x1);
        gbc.writeMem(0x390c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7e7c, gbc.sp());
        EXPECT(0x390e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00DC
        gbc.setState(0xd275, 0x6b06, 0x3100, 0xee45, 0x70b8, 0xd282, 0x0, 0x0);
        gbc.writeMem(0xd275, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6b06, gbc.sp());
        EXPECT(0xd277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd275));
        EXPECT(0x7b, gbc.readMem(0xd276));
        // CB 7B 00DD
        gbc.setState(0x199e, 0x7935, 0x70d0, 0x1f30, 0x124c, 0xc081, 0x0, 0x1);
        gbc.writeMem(0x199e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7935, gbc.sp());
        EXPECT(0x19a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00DE
        gbc.setState(0x856c, 0xa9fa, 0x3f70, 0xc55f, 0x8e83, 0xc8dc, 0x1, 0x0);
        gbc.writeMem(0x856c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa9fa, gbc.sp());
        EXPECT(0x856e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856c));
        EXPECT(0x7b, gbc.readMem(0x856d));
        // CB 7B 00DF
        gbc.setState(0xe451, 0x89aa, 0x3a80, 0xf2cb, 0xf96f, 0x4729, 0x0, 0x1);
        gbc.writeMem(0xe451, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x89aa, gbc.sp());
        EXPECT(0xe453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe451));
        EXPECT(0x7b, gbc.readMem(0xe452));
        // CB 7B 00E0
        gbc.setState(0x8385, 0xefc6, 0x9360, 0xd8d4, 0xcef1, 0xa2f5, 0x0, 0x0);
        gbc.writeMem(0x8385, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xefc6, gbc.sp());
        EXPECT(0x8387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8385));
        EXPECT(0x7b, gbc.readMem(0x8386));
        // CB 7B 00E1
        gbc.setState(0xcbf7, 0xa4b8, 0x110, 0x4e40, 0xf45a, 0x816f, 0x0, 0x0);
        gbc.writeMem(0xcbf7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa4b8, gbc.sp());
        EXPECT(0xcbf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf7));
        EXPECT(0x7b, gbc.readMem(0xcbf8));
        // CB 7B 00E2
        gbc.setState(0xaa71, 0xbaa1, 0x5df0, 0x9553, 0xa4f6, 0xa57f, 0x1, 0x1);
        gbc.writeMem(0xaa71, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbaa1, gbc.sp());
        EXPECT(0xaa73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa71));
        EXPECT(0x7b, gbc.readMem(0xaa72));
        // CB 7B 00E3
        gbc.setState(0x6e47, 0xfc41, 0xc350, 0xc92c, 0x40b6, 0xf490, 0x1, 0x1);
        gbc.writeMem(0x6e47, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfc41, gbc.sp());
        EXPECT(0x6e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00E4
        gbc.setState(0xe062, 0x35d9, 0xf690, 0x19f3, 0xbbbd, 0x1db9, 0x1, 0x0);
        gbc.writeMem(0xe062, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x35d9, gbc.sp());
        EXPECT(0xe064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe062));
        EXPECT(0x7b, gbc.readMem(0xe063));
        // CB 7B 00E6
        gbc.setState(0x708c, 0xf0a7, 0x2230, 0x24fe, 0x8777, 0x1cee, 0x0, 0x0);
        gbc.writeMem(0x708c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf0a7, gbc.sp());
        EXPECT(0x708e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00E7
        gbc.setState(0x71f3, 0xd11c, 0xe1b0, 0xe06c, 0x55cc, 0x8173, 0x0, 0x0);
        gbc.writeMem(0x71f3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd11c, gbc.sp());
        EXPECT(0x71f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00E8
        gbc.setState(0x88e2, 0x714e, 0x7550, 0x4b61, 0x251, 0x3f76, 0x0, 0x1);
        gbc.writeMem(0x88e2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x714e, gbc.sp());
        EXPECT(0x88e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e2));
        EXPECT(0x7b, gbc.readMem(0x88e3));
        // CB 7B 00E9
        gbc.setState(0x148d, 0xb69b, 0x7670, 0x7fcf, 0x4744, 0x698c, 0x0, 0x0);
        gbc.writeMem(0x148d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb69b, gbc.sp());
        EXPECT(0x148f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00EA
        gbc.setState(0xbff9, 0xc1d1, 0x56b0, 0xc8da, 0xbae6, 0xfb2c, 0x1, 0x1);
        gbc.writeMem(0xbff9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc1d1, gbc.sp());
        EXPECT(0xbffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff9));
        EXPECT(0x7b, gbc.readMem(0xbffa));
        // CB 7B 00EB
        gbc.setState(0x44d0, 0xfed, 0xa460, 0x5892, 0xcc9d, 0x8b4e, 0x0, 0x0);
        gbc.writeMem(0x44d0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfed, gbc.sp());
        EXPECT(0x44d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00EC
        gbc.setState(0x5a11, 0x12c9, 0xe680, 0x91c5, 0xf088, 0xfc51, 0x0, 0x1);
        gbc.writeMem(0x5a11, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x12c9, gbc.sp());
        EXPECT(0x5a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00ED
        gbc.setState(0x47fa, 0xdeb5, 0xa580, 0x8702, 0x3f11, 0xf5eb, 0x0, 0x1);
        gbc.writeMem(0x47fa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdeb5, gbc.sp());
        EXPECT(0x47fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00EE
        gbc.setState(0x50b1, 0x2b55, 0x1c20, 0x770a, 0x7d40, 0x3554, 0x0, 0x1);
        gbc.writeMem(0x50b1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2b55, gbc.sp());
        EXPECT(0x50b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00EF
        gbc.setState(0xb073, 0x5618, 0x76a0, 0x2009, 0x6b47, 0x2b97, 0x0, 0x0);
        gbc.writeMem(0xb073, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5618, gbc.sp());
        EXPECT(0xb075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb073));
        EXPECT(0x7b, gbc.readMem(0xb074));
        // CB 7B 00F0
        gbc.setState(0x229d, 0xffef, 0x5840, 0x32c, 0x8309, 0x19ab, 0x0, 0x1);
        gbc.writeMem(0x229d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xffef, gbc.sp());
        EXPECT(0x229f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00F1
        gbc.setState(0x53a1, 0xb4b4, 0xad80, 0x4733, 0x8245, 0x42a3, 0x1, 0x1);
        gbc.writeMem(0x53a1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb4b4, gbc.sp());
        EXPECT(0x53a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00F2
        gbc.setState(0x5497, 0x83e5, 0x5c60, 0xefa4, 0xb0f4, 0x3c8d, 0x0, 0x0);
        gbc.writeMem(0x5497, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x83e5, gbc.sp());
        EXPECT(0x5499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00F3
        gbc.setState(0x1b67, 0x143d, 0x64e0, 0x729b, 0x205e, 0x615f, 0x0, 0x1);
        gbc.writeMem(0x1b67, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x143d, gbc.sp());
        EXPECT(0x1b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 00F4
        gbc.setState(0xeb9b, 0x8c0a, 0xd8b0, 0xb8db, 0x5c41, 0xbaf1, 0x0, 0x0);
        gbc.writeMem(0xeb9b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8c0a, gbc.sp());
        EXPECT(0xeb9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb9b));
        EXPECT(0x7b, gbc.readMem(0xeb9c));
        // CB 7B 00F5
        gbc.setState(0xe53a, 0x5805, 0x3530, 0x5415, 0xfe6, 0x13bb, 0x1, 0x1);
        gbc.writeMem(0xe53a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5805, gbc.sp());
        EXPECT(0xe53c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53a));
        EXPECT(0x7b, gbc.readMem(0xe53b));
        // CB 7B 00F6
        gbc.setState(0xee72, 0x5549, 0x2360, 0xed97, 0x2839, 0x7230, 0x0, 0x1);
        gbc.writeMem(0xee72, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5549, gbc.sp());
        EXPECT(0xee74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee72));
        EXPECT(0x7b, gbc.readMem(0xee73));
        // CB 7B 00F7
        gbc.setState(0x7798, 0xae72, 0xcfb0, 0x9d04, 0xe23, 0xcd17, 0x0, 0x1);
        gbc.writeMem(0x7798, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xae72, gbc.sp());
        EXPECT(0x779a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00F8
        gbc.setState(0xead1, 0xddab, 0xc280, 0x7be7, 0xeb79, 0xb084, 0x1, 0x1);
        gbc.writeMem(0xead1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xddab, gbc.sp());
        EXPECT(0xead3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead1));
        EXPECT(0x7b, gbc.readMem(0xead2));
        // CB 7B 00F9
        gbc.setState(0x45e0, 0xf744, 0xfef0, 0xd153, 0x1b0b, 0x1926, 0x1, 0x1);
        gbc.writeMem(0x45e0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf744, gbc.sp());
        EXPECT(0x45e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00FA
        gbc.setState(0x863b, 0xd463, 0x2560, 0xbe3a, 0x1e6b, 0x3eb8, 0x0, 0x1);
        gbc.writeMem(0x863b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd463, gbc.sp());
        EXPECT(0x863d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863b));
        EXPECT(0x7b, gbc.readMem(0x863c));
        // CB 7B 00FB
        gbc.setState(0x9338, 0xb6e5, 0x35f0, 0xae92, 0x168, 0xfbb2, 0x0, 0x1);
        gbc.writeMem(0x9338, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb6e5, gbc.sp());
        EXPECT(0x933a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9338));
        EXPECT(0x7b, gbc.readMem(0x9339));
        // CB 7B 00FC
        gbc.setState(0x3bda, 0xf90b, 0xed30, 0x656c, 0xdda8, 0x216c, 0x1, 0x1);
        gbc.writeMem(0x3bda, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf90b, gbc.sp());
        EXPECT(0x3bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00FD
        gbc.setState(0x3db6, 0x46ca, 0x4230, 0xd1d6, 0x5886, 0x10e8, 0x1, 0x0);
        gbc.writeMem(0x3db6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x46ca, gbc.sp());
        EXPECT(0x3db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00FE
        gbc.setState(0x3df6, 0x68a8, 0xae30, 0xad18, 0x9925, 0x1f1a, 0x0, 0x0);
        gbc.writeMem(0x3df6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x68a8, gbc.sp());
        EXPECT(0x3df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 00FF
        gbc.setState(0x4a3e, 0x644c, 0xebe0, 0xa28b, 0x87f9, 0x6624, 0x1, 0x0);
        gbc.writeMem(0x4a3e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x644c, gbc.sp());
        EXPECT(0x4a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0100
        gbc.setState(0x468, 0xb04c, 0xbf90, 0xe8d, 0x27e1, 0xc25b, 0x1, 0x0);
        gbc.writeMem(0x468, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb04c, gbc.sp());
        EXPECT(0x46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0101
        gbc.setState(0xd3fb, 0x83c1, 0x5c60, 0xffc5, 0xc94d, 0xc79d, 0x0, 0x1);
        gbc.writeMem(0xd3fb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x83c1, gbc.sp());
        EXPECT(0xd3fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fb));
        EXPECT(0x7b, gbc.readMem(0xd3fc));
        // CB 7B 0102
        gbc.setState(0x95b7, 0x49c7, 0xa090, 0x50c, 0xb8c1, 0x3350, 0x1, 0x0);
        gbc.writeMem(0x95b7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x49c7, gbc.sp());
        EXPECT(0x95b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b7));
        EXPECT(0x7b, gbc.readMem(0x95b8));
        // CB 7B 0104
        gbc.setState(0x9b95, 0x4d3e, 0x37f0, 0xba67, 0x76ab, 0xb755, 0x1, 0x0);
        gbc.writeMem(0x9b95, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4d3e, gbc.sp());
        EXPECT(0x9b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b95));
        EXPECT(0x7b, gbc.readMem(0x9b96));
        // CB 7B 0105
        gbc.setState(0xa40a, 0x1529, 0xfb00, 0x830f, 0x31b3, 0xb046, 0x0, 0x1);
        gbc.writeMem(0xa40a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1529, gbc.sp());
        EXPECT(0xa40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40a));
        EXPECT(0x7b, gbc.readMem(0xa40b));
        // CB 7B 0106
        gbc.setState(0x9591, 0x9ebc, 0x32c0, 0x1564, 0xadb6, 0x62f5, 0x0, 0x1);
        gbc.writeMem(0x9591, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9ebc, gbc.sp());
        EXPECT(0x9593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9591));
        EXPECT(0x7b, gbc.readMem(0x9592));
        // CB 7B 0107
        gbc.setState(0xb1d3, 0xdfa7, 0x8dc0, 0xa3d0, 0x27b2, 0x80b8, 0x1, 0x0);
        gbc.writeMem(0xb1d3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdfa7, gbc.sp());
        EXPECT(0xb1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d3));
        EXPECT(0x7b, gbc.readMem(0xb1d4));
        // CB 7B 0108
        gbc.setState(0x6424, 0x8e87, 0xb210, 0x1b43, 0x67e4, 0xc8fa, 0x0, 0x1);
        gbc.writeMem(0x6424, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8e87, gbc.sp());
        EXPECT(0x6426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0109
        gbc.setState(0x5747, 0xb166, 0x4f20, 0xf129, 0x6e69, 0x4085, 0x0, 0x1);
        gbc.writeMem(0x5747, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb166, gbc.sp());
        EXPECT(0x5749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 010A
        gbc.setState(0x5b22, 0x2c6e, 0x5080, 0x6c26, 0x8ed4, 0x3084, 0x1, 0x0);
        gbc.writeMem(0x5b22, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2c6e, gbc.sp());
        EXPECT(0x5b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 010B
        gbc.setState(0xba06, 0xe78b, 0xd840, 0xc899, 0x5fed, 0x9a4b, 0x0, 0x0);
        gbc.writeMem(0xba06, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe78b, gbc.sp());
        EXPECT(0xba08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba06));
        EXPECT(0x7b, gbc.readMem(0xba07));
        // CB 7B 010C
        gbc.setState(0x4424, 0xbab, 0xcc90, 0xe449, 0xf459, 0x2959, 0x1, 0x0);
        gbc.writeMem(0x4424, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbab, gbc.sp());
        EXPECT(0x4426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 010D
        gbc.setState(0xc9dc, 0xd576, 0xa0b0, 0xcd6b, 0xb0b1, 0x73ed, 0x0, 0x0);
        gbc.writeMem(0xc9dc, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd576, gbc.sp());
        EXPECT(0xc9de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9dc));
        EXPECT(0x7b, gbc.readMem(0xc9dd));
        // CB 7B 010E
        gbc.setState(0x8922, 0x3780, 0x6040, 0xc2d8, 0x34e4, 0xcb12, 0x1, 0x1);
        gbc.writeMem(0x8922, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3780, gbc.sp());
        EXPECT(0x8924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8922));
        EXPECT(0x7b, gbc.readMem(0x8923));
        // CB 7B 010F
        gbc.setState(0xd07c, 0xf86d, 0xf7c0, 0x8f35, 0x8c3c, 0x8028, 0x0, 0x1);
        gbc.writeMem(0xd07c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf86d, gbc.sp());
        EXPECT(0xd07e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07c));
        EXPECT(0x7b, gbc.readMem(0xd07d));
        // CB 7B 0110
        gbc.setState(0xee61, 0x5234, 0x480, 0x1552, 0xc17, 0x7757, 0x0, 0x0);
        gbc.writeMem(0xee61, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5234, gbc.sp());
        EXPECT(0xee63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee61));
        EXPECT(0x7b, gbc.readMem(0xee62));
        // CB 7B 0111
        gbc.setState(0xd9d5, 0x193e, 0xcbe0, 0x6003, 0x1816, 0xb4b, 0x1, 0x0);
        gbc.writeMem(0xd9d5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x193e, gbc.sp());
        EXPECT(0xd9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d5));
        EXPECT(0x7b, gbc.readMem(0xd9d6));
        // CB 7B 0112
        gbc.setState(0x36bb, 0x5f15, 0x3030, 0xb984, 0xf8e1, 0xbc1e, 0x0, 0x0);
        gbc.writeMem(0x36bb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5f15, gbc.sp());
        EXPECT(0x36bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0113
        gbc.setState(0xdf68, 0xf633, 0x7430, 0x451d, 0x726c, 0xc09e, 0x1, 0x0);
        gbc.writeMem(0xdf68, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf633, gbc.sp());
        EXPECT(0xdf6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf68));
        EXPECT(0x7b, gbc.readMem(0xdf69));
        // CB 7B 0114
        gbc.setState(0x4f14, 0x2d60, 0xe2c0, 0xbfc5, 0x82e5, 0xf0e1, 0x1, 0x0);
        gbc.writeMem(0x4f14, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2d60, gbc.sp());
        EXPECT(0x4f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0115
        gbc.setState(0x71de, 0x8ef5, 0xba90, 0xbf69, 0xccee, 0xe971, 0x0, 0x1);
        gbc.writeMem(0x71de, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8ef5, gbc.sp());
        EXPECT(0x71e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0116
        gbc.setState(0x3b7c, 0x303d, 0x580, 0x1e45, 0x88f9, 0x58aa, 0x0, 0x0);
        gbc.writeMem(0x3b7c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x303d, gbc.sp());
        EXPECT(0x3b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0117
        gbc.setState(0xc6e6, 0xb24b, 0x87f0, 0x2030, 0x6fd0, 0x596d, 0x1, 0x1);
        gbc.writeMem(0xc6e6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb24b, gbc.sp());
        EXPECT(0xc6e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e6));
        EXPECT(0x7b, gbc.readMem(0xc6e7));
        // CB 7B 0118
        gbc.setState(0x4ccb, 0x3e2b, 0xea60, 0x2cfb, 0x84a6, 0x688b, 0x1, 0x0);
        gbc.writeMem(0x4ccb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3e2b, gbc.sp());
        EXPECT(0x4ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0119
        gbc.setState(0xdd83, 0x3d8e, 0x90b0, 0x7cd5, 0x8d3f, 0x8052, 0x0, 0x0);
        gbc.writeMem(0xdd83, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3d8e, gbc.sp());
        EXPECT(0xdd85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd83));
        EXPECT(0x7b, gbc.readMem(0xdd84));
        // CB 7B 011A
        gbc.setState(0xa4f0, 0xfc4, 0x1d20, 0x94b4, 0x5d5b, 0x55c4, 0x0, 0x1);
        gbc.writeMem(0xa4f0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfc4, gbc.sp());
        EXPECT(0xa4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f0));
        EXPECT(0x7b, gbc.readMem(0xa4f1));
        // CB 7B 011B
        gbc.setState(0xe2c1, 0x51f5, 0x4750, 0x739a, 0x64cf, 0xc03b, 0x0, 0x0);
        gbc.writeMem(0xe2c1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x51f5, gbc.sp());
        EXPECT(0xe2c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c1));
        EXPECT(0x7b, gbc.readMem(0xe2c2));
        // CB 7B 011C
        gbc.setState(0x5412, 0x905, 0xe50, 0xdfbe, 0xb805, 0x375e, 0x0, 0x0);
        gbc.writeMem(0x5412, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x905, gbc.sp());
        EXPECT(0x5414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 011D
        gbc.setState(0xcef7, 0x2d66, 0x8710, 0x40a9, 0x2e97, 0x6ae, 0x1, 0x0);
        gbc.writeMem(0xcef7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2d66, gbc.sp());
        EXPECT(0xcef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef7));
        EXPECT(0x7b, gbc.readMem(0xcef8));
        // CB 7B 011E
        gbc.setState(0x20a, 0x3094, 0x7de0, 0xf6e4, 0xbbc6, 0xdcd2, 0x0, 0x1);
        gbc.writeMem(0x20a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3094, gbc.sp());
        EXPECT(0x20c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 011F
        gbc.setState(0xb335, 0xef79, 0xf4e0, 0x15ea, 0x141c, 0xed88, 0x1, 0x1);
        gbc.writeMem(0xb335, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xef79, gbc.sp());
        EXPECT(0xb337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb335));
        EXPECT(0x7b, gbc.readMem(0xb336));
        // CB 7B 0120
        gbc.setState(0x2d26, 0xf8e0, 0xa30, 0x6faa, 0x8d58, 0xad9a, 0x1, 0x1);
        gbc.writeMem(0x2d26, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf8e0, gbc.sp());
        EXPECT(0x2d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0122
        gbc.setState(0x6ac3, 0xb4bf, 0x8ce0, 0x257, 0xbda1, 0xd1e1, 0x0, 0x1);
        gbc.writeMem(0x6ac3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb4bf, gbc.sp());
        EXPECT(0x6ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0123
        gbc.setState(0xaa49, 0xd018, 0x7b90, 0xcb9b, 0xfbec, 0xa6c9, 0x1, 0x1);
        gbc.writeMem(0xaa49, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd018, gbc.sp());
        EXPECT(0xaa4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa49));
        EXPECT(0x7b, gbc.readMem(0xaa4a));
        // CB 7B 0124
        gbc.setState(0xe171, 0x6778, 0xd530, 0x2ffe, 0x312, 0x8c7, 0x1, 0x1);
        gbc.writeMem(0xe171, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6778, gbc.sp());
        EXPECT(0xe173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe171));
        EXPECT(0x7b, gbc.readMem(0xe172));
        // CB 7B 0125
        gbc.setState(0xe6db, 0xee9a, 0xc290, 0x3311, 0x563f, 0x3aa2, 0x1, 0x0);
        gbc.writeMem(0xe6db, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xee9a, gbc.sp());
        EXPECT(0xe6dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6db));
        EXPECT(0x7b, gbc.readMem(0xe6dc));
        // CB 7B 0126
        gbc.setState(0x5421, 0xeb5d, 0x6d70, 0x85dd, 0xcb0c, 0xc374, 0x0, 0x0);
        gbc.writeMem(0x5421, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xeb5d, gbc.sp());
        EXPECT(0x5423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0127
        gbc.setState(0xceb6, 0x40dc, 0xd8d0, 0xb2c1, 0xb442, 0xa945, 0x1, 0x0);
        gbc.writeMem(0xceb6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x40dc, gbc.sp());
        EXPECT(0xceb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb6));
        EXPECT(0x7b, gbc.readMem(0xceb7));
        // CB 7B 0128
        gbc.setState(0x67f7, 0xf84c, 0x36f0, 0x1ee9, 0xdc46, 0x39e1, 0x0, 0x0);
        gbc.writeMem(0x67f7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf84c, gbc.sp());
        EXPECT(0x67f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0129
        gbc.setState(0x92b4, 0x74aa, 0xf240, 0x2068, 0x1507, 0xef09, 0x1, 0x1);
        gbc.writeMem(0x92b4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x74aa, gbc.sp());
        EXPECT(0x92b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b4));
        EXPECT(0x7b, gbc.readMem(0x92b5));
        // CB 7B 012A
        gbc.setState(0x7162, 0xcfc7, 0x8f10, 0xba0, 0x141c, 0xc55, 0x0, 0x0);
        gbc.writeMem(0x7162, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcfc7, gbc.sp());
        EXPECT(0x7164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 012B
        gbc.setState(0x335e, 0xbd61, 0xd7b0, 0xb16b, 0x215a, 0x9369, 0x0, 0x1);
        gbc.writeMem(0x335e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbd61, gbc.sp());
        EXPECT(0x3360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 012C
        gbc.setState(0xd127, 0x354e, 0x4710, 0xea40, 0x7428, 0xef2, 0x1, 0x0);
        gbc.writeMem(0xd127, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x354e, gbc.sp());
        EXPECT(0xd129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd127));
        EXPECT(0x7b, gbc.readMem(0xd128));
        // CB 7B 012D
        gbc.setState(0xeea3, 0xe143, 0xd760, 0xd42c, 0xb2fc, 0x48c9, 0x0, 0x0);
        gbc.writeMem(0xeea3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe143, gbc.sp());
        EXPECT(0xeea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea3));
        EXPECT(0x7b, gbc.readMem(0xeea4));
        // CB 7B 012F
        gbc.setState(0xe50c, 0x26bf, 0xa240, 0xf7fc, 0x746f, 0xc25, 0x0, 0x1);
        gbc.writeMem(0xe50c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x26bf, gbc.sp());
        EXPECT(0xe50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50c));
        EXPECT(0x7b, gbc.readMem(0xe50d));
        // CB 7B 0130
        gbc.setState(0xb6b6, 0x60e, 0xc900, 0x2348, 0xd867, 0x400f, 0x0, 0x0);
        gbc.writeMem(0xb6b6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x60e, gbc.sp());
        EXPECT(0xb6b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b6));
        EXPECT(0x7b, gbc.readMem(0xb6b7));
        // CB 7B 0131
        gbc.setState(0xdae6, 0x68f8, 0xc6b0, 0x9a79, 0x17d9, 0x5360, 0x1, 0x1);
        gbc.writeMem(0xdae6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x68f8, gbc.sp());
        EXPECT(0xdae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae6));
        EXPECT(0x7b, gbc.readMem(0xdae7));
        // CB 7B 0133
        gbc.setState(0x21ac, 0xe079, 0xf500, 0x5a60, 0x52d3, 0x7a6a, 0x1, 0x1);
        gbc.writeMem(0x21ac, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe079, gbc.sp());
        EXPECT(0x21ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0134
        gbc.setState(0x7510, 0x5dfe, 0x29b0, 0xf58b, 0x852, 0xccf5, 0x0, 0x1);
        gbc.writeMem(0x7510, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5dfe, gbc.sp());
        EXPECT(0x7512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0135
        gbc.setState(0x574, 0xd5c3, 0xdab0, 0x321, 0xe1f3, 0x3540, 0x1, 0x0);
        gbc.writeMem(0x574, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd5c3, gbc.sp());
        EXPECT(0x576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0136
        gbc.setState(0x4a97, 0x3c5b, 0xc70, 0xb4f4, 0x9112, 0x3801, 0x0, 0x0);
        gbc.writeMem(0x4a97, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3c5b, gbc.sp());
        EXPECT(0x4a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0137
        gbc.setState(0x8f1, 0xf866, 0x7210, 0xe8ab, 0x19c, 0xc916, 0x1, 0x1);
        gbc.writeMem(0x8f1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf866, gbc.sp());
        EXPECT(0x8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0138
        gbc.setState(0x467e, 0x6ed7, 0x6b50, 0xd97, 0xfd0e, 0x7219, 0x1, 0x0);
        gbc.writeMem(0x467e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6ed7, gbc.sp());
        EXPECT(0x4680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0139
        gbc.setState(0x2f9b, 0xffd6, 0x760, 0x6a25, 0x17bc, 0x931b, 0x1, 0x1);
        gbc.writeMem(0x2f9b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xffd6, gbc.sp());
        EXPECT(0x2f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 013A
        gbc.setState(0x97a5, 0xb6aa, 0x26a0, 0xc9c5, 0x89cb, 0x3b21, 0x0, 0x1);
        gbc.writeMem(0x97a5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb6aa, gbc.sp());
        EXPECT(0x97a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a5));
        EXPECT(0x7b, gbc.readMem(0x97a6));
        // CB 7B 013B
        gbc.setState(0x778, 0x6ed2, 0x7900, 0x2283, 0xd680, 0x30f2, 0x0, 0x1);
        gbc.writeMem(0x778, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6ed2, gbc.sp());
        EXPECT(0x77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 013C
        gbc.setState(0x23e2, 0x28ca, 0x2a60, 0x1ac9, 0x8ec5, 0xdb80, 0x0, 0x0);
        gbc.writeMem(0x23e2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x28ca, gbc.sp());
        EXPECT(0x23e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 013D
        gbc.setState(0x85b3, 0x2a08, 0xc2e0, 0xae06, 0xde35, 0x4bda, 0x1, 0x0);
        gbc.writeMem(0x85b3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2a08, gbc.sp());
        EXPECT(0x85b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b3));
        EXPECT(0x7b, gbc.readMem(0x85b4));
        // CB 7B 013E
        gbc.setState(0x1d36, 0xbeb8, 0x9bd0, 0x30e5, 0xdc96, 0x5bc5, 0x0, 0x0);
        gbc.writeMem(0x1d36, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbeb8, gbc.sp());
        EXPECT(0x1d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0140
        gbc.setState(0x151f, 0xa9fc, 0xab90, 0x2280, 0xa86d, 0xb161, 0x1, 0x1);
        gbc.writeMem(0x151f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa9fc, gbc.sp());
        EXPECT(0x1521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0141
        gbc.setState(0x5207, 0x5122, 0xedc0, 0x940c, 0xae9c, 0x9ae7, 0x1, 0x1);
        gbc.writeMem(0x5207, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5122, gbc.sp());
        EXPECT(0x5209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0142
        gbc.setState(0x8ba7, 0xfb47, 0x90a0, 0xc1a8, 0x542, 0x89bf, 0x0, 0x0);
        gbc.writeMem(0x8ba7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfb47, gbc.sp());
        EXPECT(0x8ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba7));
        EXPECT(0x7b, gbc.readMem(0x8ba8));
        // CB 7B 0143
        gbc.setState(0x9d17, 0x3a0f, 0xaf00, 0xc11f, 0x56e3, 0x8df5, 0x0, 0x1);
        gbc.writeMem(0x9d17, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3a0f, gbc.sp());
        EXPECT(0x9d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d17));
        EXPECT(0x7b, gbc.readMem(0x9d18));
        // CB 7B 0144
        gbc.setState(0xc270, 0x72fe, 0xb120, 0x1aa5, 0xc27e, 0x53e7, 0x0, 0x1);
        gbc.writeMem(0xc270, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x72fe, gbc.sp());
        EXPECT(0xc272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc270));
        EXPECT(0x7b, gbc.readMem(0xc271));
        // CB 7B 0145
        gbc.setState(0x227f, 0x741f, 0xeea0, 0xcdd9, 0x52ea, 0x6d8d, 0x1, 0x0);
        gbc.writeMem(0x227f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x741f, gbc.sp());
        EXPECT(0x2281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0146
        gbc.setState(0xb513, 0xb5e8, 0xded0, 0x818d, 0xb47b, 0x31d6, 0x1, 0x1);
        gbc.writeMem(0xb513, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb5e8, gbc.sp());
        EXPECT(0xb515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb513));
        EXPECT(0x7b, gbc.readMem(0xb514));
        // CB 7B 0147
        gbc.setState(0x8a16, 0xfb38, 0x6e60, 0x396a, 0x46e4, 0xaca4, 0x0, 0x1);
        gbc.writeMem(0x8a16, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfb38, gbc.sp());
        EXPECT(0x8a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a16));
        EXPECT(0x7b, gbc.readMem(0x8a17));
        // CB 7B 0148
        gbc.setState(0x22dc, 0x16c8, 0xc1b0, 0xc39, 0x9975, 0x8086, 0x1, 0x0);
        gbc.writeMem(0x22dc, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x16c8, gbc.sp());
        EXPECT(0x22de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0149
        gbc.setState(0x952c, 0x7a29, 0x4190, 0x2367, 0x13a9, 0x20e0, 0x1, 0x0);
        gbc.writeMem(0x952c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7a29, gbc.sp());
        EXPECT(0x952e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x952c));
        EXPECT(0x7b, gbc.readMem(0x952d));
        // CB 7B 014A
        gbc.setState(0x5f15, 0x76e0, 0xba80, 0xabad, 0xc603, 0x5a3e, 0x1, 0x1);
        gbc.writeMem(0x5f15, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x76e0, gbc.sp());
        EXPECT(0x5f17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 014B
        gbc.setState(0xd801, 0x3e37, 0x4ab0, 0xf8d1, 0x75c6, 0x4fd7, 0x1, 0x1);
        gbc.writeMem(0xd801, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3e37, gbc.sp());
        EXPECT(0xd803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd801));
        EXPECT(0x7b, gbc.readMem(0xd802));
        // CB 7B 014C
        gbc.setState(0xa055, 0x8f5, 0x3f70, 0xac7d, 0xbe98, 0x120b, 0x1, 0x0);
        gbc.writeMem(0xa055, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8f5, gbc.sp());
        EXPECT(0xa057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa055));
        EXPECT(0x7b, gbc.readMem(0xa056));
        // CB 7B 014E
        gbc.setState(0xe5a6, 0x6c55, 0x5280, 0xcb80, 0x1171, 0xe6b1, 0x1, 0x0);
        gbc.writeMem(0xe5a6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6c55, gbc.sp());
        EXPECT(0xe5a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a6));
        EXPECT(0x7b, gbc.readMem(0xe5a7));
        // CB 7B 014F
        gbc.setState(0x189f, 0xb8bb, 0x6730, 0x30fa, 0xecdf, 0x36f, 0x0, 0x1);
        gbc.writeMem(0x189f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb8bb, gbc.sp());
        EXPECT(0x18a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0150
        gbc.setState(0xa15a, 0xf0cb, 0x4660, 0xbc03, 0x7e29, 0xe23e, 0x0, 0x1);
        gbc.writeMem(0xa15a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf0cb, gbc.sp());
        EXPECT(0xa15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15a));
        EXPECT(0x7b, gbc.readMem(0xa15b));
        // CB 7B 0151
        gbc.setState(0xe304, 0x1470, 0xe3f0, 0x917a, 0xa0c0, 0xdd59, 0x1, 0x1);
        gbc.writeMem(0xe304, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1470, gbc.sp());
        EXPECT(0xe306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe304));
        EXPECT(0x7b, gbc.readMem(0xe305));
        // CB 7B 0152
        gbc.setState(0x237b, 0x1d1e, 0xaa60, 0x731e, 0x8718, 0x4cff, 0x1, 0x1);
        gbc.writeMem(0x237b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1d1e, gbc.sp());
        EXPECT(0x237d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0153
        gbc.setState(0x809c, 0x94d2, 0x2100, 0xf63b, 0x43ea, 0x613e, 0x0, 0x0);
        gbc.writeMem(0x809c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x94d2, gbc.sp());
        EXPECT(0x809e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809c));
        EXPECT(0x7b, gbc.readMem(0x809d));
        // CB 7B 0154
        gbc.setState(0x893a, 0xf737, 0x4b40, 0x5552, 0xc45c, 0x223d, 0x1, 0x1);
        gbc.writeMem(0x893a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf737, gbc.sp());
        EXPECT(0x893c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x893a));
        EXPECT(0x7b, gbc.readMem(0x893b));
        // CB 7B 0155
        gbc.setState(0xce42, 0xf610, 0xce00, 0xc193, 0xda3, 0x22b8, 0x1, 0x1);
        gbc.writeMem(0xce42, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf610, gbc.sp());
        EXPECT(0xce44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce42));
        EXPECT(0x7b, gbc.readMem(0xce43));
        // CB 7B 0157
        gbc.setState(0x1e3f, 0xcd3d, 0xd530, 0xf1b7, 0x30cc, 0xd909, 0x0, 0x1);
        gbc.writeMem(0x1e3f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcd3d, gbc.sp());
        EXPECT(0x1e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0158
        gbc.setState(0x2c75, 0x2223, 0x78a0, 0x941c, 0x7936, 0xbc8d, 0x1, 0x0);
        gbc.writeMem(0x2c75, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2223, gbc.sp());
        EXPECT(0x2c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0159
        gbc.setState(0x38a, 0x50bc, 0xcea0, 0x9bcc, 0xac59, 0xe284, 0x1, 0x1);
        gbc.writeMem(0x38a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x50bc, gbc.sp());
        EXPECT(0x38c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 015A
        gbc.setState(0x5f54, 0xe82b, 0xc820, 0x9ea5, 0x23af, 0x8261, 0x0, 0x0);
        gbc.writeMem(0x5f54, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe82b, gbc.sp());
        EXPECT(0x5f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 015B
        gbc.setState(0x2956, 0x97f8, 0xb950, 0xfa07, 0x1faf, 0xc930, 0x1, 0x1);
        gbc.writeMem(0x2956, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x97f8, gbc.sp());
        EXPECT(0x2958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 015C
        gbc.setState(0x2aa4, 0xd387, 0x72c0, 0x9ef0, 0x9c2, 0xf8f5, 0x1, 0x0);
        gbc.writeMem(0x2aa4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd387, gbc.sp());
        EXPECT(0x2aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 015D
        gbc.setState(0x4278, 0xc1d3, 0xbb50, 0x1767, 0xcb66, 0x382e, 0x1, 0x1);
        gbc.writeMem(0x4278, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc1d3, gbc.sp());
        EXPECT(0x427a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 015E
        gbc.setState(0x1ab4, 0xbb37, 0x590, 0x5a58, 0x8f29, 0x6b30, 0x1, 0x0);
        gbc.writeMem(0x1ab4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbb37, gbc.sp());
        EXPECT(0x1ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0161
        gbc.setState(0x5a2a, 0xa9a2, 0x1200, 0x6ced, 0x384c, 0xc097, 0x0, 0x1);
        gbc.writeMem(0x5a2a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa9a2, gbc.sp());
        EXPECT(0x5a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0162
        gbc.setState(0xd33, 0x2bc0, 0xe620, 0xdf17, 0x7d35, 0x9687, 0x0, 0x1);
        gbc.writeMem(0xd33, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2bc0, gbc.sp());
        EXPECT(0xd35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0163
        gbc.setState(0x849a, 0x2722, 0xd520, 0xaa4f, 0x1f88, 0x9387, 0x0, 0x0);
        gbc.writeMem(0x849a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2722, gbc.sp());
        EXPECT(0x849c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849a));
        EXPECT(0x7b, gbc.readMem(0x849b));
        // CB 7B 0164
        gbc.setState(0x438a, 0xbb8d, 0x3b50, 0x1ae1, 0xfd2f, 0x6a94, 0x0, 0x1);
        gbc.writeMem(0x438a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbb8d, gbc.sp());
        EXPECT(0x438c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0165
        gbc.setState(0xd3f6, 0x5373, 0x43c0, 0xf495, 0x1c6c, 0xbead, 0x1, 0x0);
        gbc.writeMem(0xd3f6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5373, gbc.sp());
        EXPECT(0xd3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f6));
        EXPECT(0x7b, gbc.readMem(0xd3f7));
        // CB 7B 0166
        gbc.setState(0xaaaa, 0xfedb, 0x2ad0, 0xe83f, 0x931f, 0xdc39, 0x0, 0x0);
        gbc.writeMem(0xaaaa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfedb, gbc.sp());
        EXPECT(0xaaac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaaa));
        EXPECT(0x7b, gbc.readMem(0xaaab));
        // CB 7B 0167
        gbc.setState(0xd5a6, 0x3ca6, 0xa7b0, 0xb738, 0x9373, 0x3609, 0x0, 0x0);
        gbc.writeMem(0xd5a6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3ca6, gbc.sp());
        EXPECT(0xd5a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a6));
        EXPECT(0x7b, gbc.readMem(0xd5a7));
        // CB 7B 0168
        gbc.setState(0xb93a, 0x383b, 0xd980, 0x33a7, 0x5844, 0x4ed5, 0x1, 0x0);
        gbc.writeMem(0xb93a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x383b, gbc.sp());
        EXPECT(0xb93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93a));
        EXPECT(0x7b, gbc.readMem(0xb93b));
        // CB 7B 0169
        gbc.setState(0x67fd, 0x4546, 0x4930, 0x6ab3, 0xbe12, 0xca5b, 0x0, 0x0);
        gbc.writeMem(0x67fd, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4546, gbc.sp());
        EXPECT(0x67ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 016A
        gbc.setState(0x65aa, 0x48e7, 0x86b0, 0xa1d9, 0xa7d1, 0x3853, 0x0, 0x0);
        gbc.writeMem(0x65aa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x48e7, gbc.sp());
        EXPECT(0x65ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 016B
        gbc.setState(0xec20, 0xb38f, 0xcbe0, 0x815a, 0xf75a, 0x4a1f, 0x0, 0x1);
        gbc.writeMem(0xec20, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb38f, gbc.sp());
        EXPECT(0xec22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec20));
        EXPECT(0x7b, gbc.readMem(0xec21));
        // CB 7B 016C
        gbc.setState(0x309c, 0xb27, 0x3800, 0x15c7, 0xbd8, 0xe482, 0x0, 0x0);
        gbc.writeMem(0x309c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb27, gbc.sp());
        EXPECT(0x309e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 016D
        gbc.setState(0xa8ab, 0xe689, 0x5d90, 0x9589, 0xdd40, 0x7eb6, 0x1, 0x0);
        gbc.writeMem(0xa8ab, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe689, gbc.sp());
        EXPECT(0xa8ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ab));
        EXPECT(0x7b, gbc.readMem(0xa8ac));
        // CB 7B 016E
        gbc.setState(0x275b, 0x3be0, 0xe8f0, 0xc442, 0x2ba0, 0xc28f, 0x0, 0x1);
        gbc.writeMem(0x275b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3be0, gbc.sp());
        EXPECT(0x275d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 016F
        gbc.setState(0x47aa, 0x8b11, 0x39b0, 0xd08c, 0xb581, 0x3bc1, 0x1, 0x0);
        gbc.writeMem(0x47aa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8b11, gbc.sp());
        EXPECT(0x47ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0170
        gbc.setState(0x8a68, 0xa315, 0x1300, 0x2407, 0xe720, 0x71f9, 0x0, 0x1);
        gbc.writeMem(0x8a68, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa315, gbc.sp());
        EXPECT(0x8a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a68));
        EXPECT(0x7b, gbc.readMem(0x8a69));
        // CB 7B 0171
        gbc.setState(0xaee2, 0x3bc7, 0x4ff0, 0x4286, 0x9001, 0x33e2, 0x0, 0x1);
        gbc.writeMem(0xaee2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3bc7, gbc.sp());
        EXPECT(0xaee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee2));
        EXPECT(0x7b, gbc.readMem(0xaee3));
        // CB 7B 0172
        gbc.setState(0x851b, 0x83b4, 0xb40, 0xe727, 0xfe9d, 0x9781, 0x1, 0x0);
        gbc.writeMem(0x851b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x83b4, gbc.sp());
        EXPECT(0x851d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851b));
        EXPECT(0x7b, gbc.readMem(0x851c));
        // CB 7B 0174
        gbc.setState(0x71b6, 0x4e17, 0x1070, 0x28a2, 0xd937, 0x21b8, 0x0, 0x1);
        gbc.writeMem(0x71b6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4e17, gbc.sp());
        EXPECT(0x71b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0175
        gbc.setState(0xbb2, 0xe105, 0x7fe0, 0x2ec5, 0x94d8, 0x556, 0x0, 0x1);
        gbc.writeMem(0xbb2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe105, gbc.sp());
        EXPECT(0xbb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0176
        gbc.setState(0xb6a9, 0x9202, 0x2720, 0x6c2, 0x7249, 0xb02c, 0x0, 0x1);
        gbc.writeMem(0xb6a9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9202, gbc.sp());
        EXPECT(0xb6ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a9));
        EXPECT(0x7b, gbc.readMem(0xb6aa));
        // CB 7B 0177
        gbc.setState(0x696c, 0xa1c9, 0x9420, 0x1787, 0xd7ab, 0x5e2c, 0x0, 0x0);
        gbc.writeMem(0x696c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa1c9, gbc.sp());
        EXPECT(0x696e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0178
        gbc.setState(0x7cd3, 0x2727, 0x2720, 0xe178, 0x65d6, 0x302f, 0x1, 0x1);
        gbc.writeMem(0x7cd3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2727, gbc.sp());
        EXPECT(0x7cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0179
        gbc.setState(0xb88a, 0x2550, 0x3290, 0xb09b, 0x190e, 0x97b9, 0x1, 0x1);
        gbc.writeMem(0xb88a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2550, gbc.sp());
        EXPECT(0xb88c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88a));
        EXPECT(0x7b, gbc.readMem(0xb88b));
        // CB 7B 017A
        gbc.setState(0x1072, 0x87fa, 0x78d0, 0x1e22, 0x9202, 0xd207, 0x1, 0x0);
        gbc.writeMem(0x1072, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x87fa, gbc.sp());
        EXPECT(0x1074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 017B
        gbc.setState(0x1def, 0xe245, 0x4760, 0x9bdc, 0xd954, 0x92b8, 0x1, 0x0);
        gbc.writeMem(0x1def, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe245, gbc.sp());
        EXPECT(0x1df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 017C
        gbc.setState(0xd850, 0x3bab, 0xc8b0, 0xe747, 0x6b71, 0xc4f5, 0x1, 0x0);
        gbc.writeMem(0xd850, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3bab, gbc.sp());
        EXPECT(0xd852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd850));
        EXPECT(0x7b, gbc.readMem(0xd851));
        // CB 7B 017D
        gbc.setState(0x159b, 0xca2c, 0xebb0, 0xb77a, 0xfc2d, 0x37df, 0x1, 0x1);
        gbc.writeMem(0x159b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xca2c, gbc.sp());
        EXPECT(0x159d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 017F
        gbc.setState(0x1084, 0xe289, 0x2b60, 0x42b3, 0x4484, 0x9b1f, 0x0, 0x1);
        gbc.writeMem(0x1084, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe289, gbc.sp());
        EXPECT(0x1086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0180
        gbc.setState(0x1a5b, 0x3fec, 0x30, 0x64ea, 0x79a8, 0xd3a5, 0x1, 0x0);
        gbc.writeMem(0x1a5b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3fec, gbc.sp());
        EXPECT(0x1a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0181
        gbc.setState(0xd1d9, 0x1307, 0xb30, 0x1d6, 0xfb51, 0x1ccc, 0x0, 0x0);
        gbc.writeMem(0xd1d9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1307, gbc.sp());
        EXPECT(0xd1db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d9));
        EXPECT(0x7b, gbc.readMem(0xd1da));
        // CB 7B 0182
        gbc.setState(0x448, 0xadcf, 0xa620, 0xd41c, 0x22ea, 0xfabc, 0x0, 0x1);
        gbc.writeMem(0x448, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xadcf, gbc.sp());
        EXPECT(0x44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0184
        gbc.setState(0xbd4a, 0xaa24, 0x2470, 0x3541, 0x1808, 0x74a4, 0x0, 0x0);
        gbc.writeMem(0xbd4a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xaa24, gbc.sp());
        EXPECT(0xbd4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4a));
        EXPECT(0x7b, gbc.readMem(0xbd4b));
        // CB 7B 0185
        gbc.setState(0x307c, 0xfd72, 0x5fc0, 0xd052, 0xf177, 0x62dd, 0x1, 0x1);
        gbc.writeMem(0x307c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfd72, gbc.sp());
        EXPECT(0x307e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0186
        gbc.setState(0x36c2, 0x281, 0xb6e0, 0x3abd, 0xe8ef, 0x603c, 0x1, 0x0);
        gbc.writeMem(0x36c2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x281, gbc.sp());
        EXPECT(0x36c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0188
        gbc.setState(0xd3fa, 0xc6b0, 0xa1d0, 0x4c7, 0x810e, 0x15c3, 0x1, 0x0);
        gbc.writeMem(0xd3fa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc6b0, gbc.sp());
        EXPECT(0xd3fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3fa));
        EXPECT(0x7b, gbc.readMem(0xd3fb));
        // CB 7B 0189
        gbc.setState(0xe419, 0x3a55, 0x5520, 0xeaa8, 0x6dc9, 0xf8c5, 0x1, 0x0);
        gbc.writeMem(0xe419, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3a55, gbc.sp());
        EXPECT(0xe41b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe419));
        EXPECT(0x7b, gbc.readMem(0xe41a));
        // CB 7B 018B
        gbc.setState(0x6c0e, 0xed2e, 0xc720, 0x9805, 0x164a, 0x72fb, 0x0, 0x1);
        gbc.writeMem(0x6c0e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xed2e, gbc.sp());
        EXPECT(0x6c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 018C
        gbc.setState(0x9e78, 0xa751, 0x9c80, 0x73d3, 0x9d27, 0x40b2, 0x1, 0x1);
        gbc.writeMem(0x9e78, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa751, gbc.sp());
        EXPECT(0x9e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e78));
        EXPECT(0x7b, gbc.readMem(0x9e79));
        // CB 7B 018D
        gbc.setState(0xeda9, 0x6b50, 0xc130, 0xeefa, 0x9607, 0x46c9, 0x1, 0x1);
        gbc.writeMem(0xeda9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6b50, gbc.sp());
        EXPECT(0xedab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda9));
        EXPECT(0x7b, gbc.readMem(0xedaa));
        // CB 7B 018E
        gbc.setState(0xd8a2, 0x89dd, 0xb0f0, 0x59a8, 0xe866, 0x71e5, 0x1, 0x1);
        gbc.writeMem(0xd8a2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x89dd, gbc.sp());
        EXPECT(0xd8a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a2));
        EXPECT(0x7b, gbc.readMem(0xd8a3));
        // CB 7B 018F
        gbc.setState(0x3059, 0xb74, 0x6370, 0x9461, 0x7ee5, 0x4808, 0x0, 0x1);
        gbc.writeMem(0x3059, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb74, gbc.sp());
        EXPECT(0x305b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0190
        gbc.setState(0xc45c, 0x28c4, 0xdae0, 0x7580, 0x616a, 0x4409, 0x0, 0x0);
        gbc.writeMem(0xc45c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x28c4, gbc.sp());
        EXPECT(0xc45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45c));
        EXPECT(0x7b, gbc.readMem(0xc45d));
        // CB 7B 0191
        gbc.setState(0x24b0, 0xd83e, 0xc010, 0x42db, 0x88d, 0x8222, 0x0, 0x1);
        gbc.writeMem(0x24b0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd83e, gbc.sp());
        EXPECT(0x24b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0192
        gbc.setState(0x6b0e, 0xeae3, 0x3270, 0x49de, 0x1b7, 0x75d2, 0x1, 0x0);
        gbc.writeMem(0x6b0e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xeae3, gbc.sp());
        EXPECT(0x6b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0193
        gbc.setState(0x27a8, 0x5545, 0xf190, 0xa7d2, 0x6f24, 0x20b2, 0x0, 0x1);
        gbc.writeMem(0x27a8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5545, gbc.sp());
        EXPECT(0x27aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0194
        gbc.setState(0xa3d7, 0xe673, 0xd060, 0x8196, 0x109b, 0x8ccb, 0x1, 0x0);
        gbc.writeMem(0xa3d7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe673, gbc.sp());
        EXPECT(0xa3d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d7));
        EXPECT(0x7b, gbc.readMem(0xa3d8));
        // CB 7B 0195
        gbc.setState(0x303b, 0x6db8, 0xc10, 0x2cf5, 0xcd41, 0x9b57, 0x0, 0x0);
        gbc.writeMem(0x303b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6db8, gbc.sp());
        EXPECT(0x303d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0196
        gbc.setState(0x529d, 0xeed5, 0x6830, 0x8f7, 0x8e48, 0x5bc7, 0x1, 0x0);
        gbc.writeMem(0x529d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xeed5, gbc.sp());
        EXPECT(0x529f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0197
        gbc.setState(0x7fd5, 0x7371, 0xc340, 0x9d50, 0x3d5b, 0xde6e, 0x0, 0x1);
        gbc.writeMem(0x7fd5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7371, gbc.sp());
        EXPECT(0x7fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0199
        gbc.setState(0x57ff, 0x6fe1, 0x590, 0xd979, 0xc681, 0x434, 0x0, 0x1);
        gbc.writeMem(0x57ff, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6fe1, gbc.sp());
        EXPECT(0x5801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 019A
        gbc.setState(0x7d5f, 0xbaf0, 0x7bf0, 0x6437, 0x8c66, 0xf70b, 0x1, 0x0);
        gbc.writeMem(0x7d5f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbaf0, gbc.sp());
        EXPECT(0x7d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 019B
        gbc.setState(0xad8e, 0xbb12, 0xeef0, 0x7e77, 0x6ade, 0xda48, 0x1, 0x1);
        gbc.writeMem(0xad8e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbb12, gbc.sp());
        EXPECT(0xad90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad8e));
        EXPECT(0x7b, gbc.readMem(0xad8f));
        // CB 7B 019D
        gbc.setState(0xb14, 0xbe62, 0xca00, 0xa3bb, 0xbd30, 0x86de, 0x0, 0x0);
        gbc.writeMem(0xb14, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xbe62, gbc.sp());
        EXPECT(0xb16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 019E
        gbc.setState(0xcc96, 0xb0de, 0x6940, 0xfbd5, 0x9971, 0x48d6, 0x1, 0x1);
        gbc.writeMem(0xcc96, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb0de, gbc.sp());
        EXPECT(0xcc98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc96));
        EXPECT(0x7b, gbc.readMem(0xcc97));
        // CB 7B 01A0
        gbc.setState(0x3364, 0x90ab, 0xd480, 0xdf5, 0x561e, 0x74a0, 0x1, 0x1);
        gbc.writeMem(0x3364, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x90ab, gbc.sp());
        EXPECT(0x3366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 01A1
        gbc.setState(0x54e3, 0xc2dc, 0x7c70, 0x45ca, 0xbe1d, 0x420f, 0x0, 0x1);
        gbc.writeMem(0x54e3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc2dc, gbc.sp());
        EXPECT(0x54e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01A2
        gbc.setState(0xcc2b, 0xf87d, 0x8ff0, 0xf7c5, 0xa967, 0xb2cb, 0x0, 0x0);
        gbc.writeMem(0xcc2b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf87d, gbc.sp());
        EXPECT(0xcc2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc2b));
        EXPECT(0x7b, gbc.readMem(0xcc2c));
        // CB 7B 01A3
        gbc.setState(0x9401, 0xc235, 0x69d0, 0x50c3, 0x6701, 0xd58, 0x0, 0x1);
        gbc.writeMem(0x9401, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc235, gbc.sp());
        EXPECT(0x9403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9401));
        EXPECT(0x7b, gbc.readMem(0x9402));
        // CB 7B 01A4
        gbc.setState(0xcd45, 0x41b2, 0xefd0, 0x5, 0xf698, 0x289e, 0x0, 0x1);
        gbc.writeMem(0xcd45, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x41b2, gbc.sp());
        EXPECT(0xcd47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd45));
        EXPECT(0x7b, gbc.readMem(0xcd46));
        // CB 7B 01A5
        gbc.setState(0x7280, 0xace, 0xed50, 0x2e38, 0x11de, 0xa190, 0x0, 0x0);
        gbc.writeMem(0x7280, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xace, gbc.sp());
        EXPECT(0x7282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01A6
        gbc.setState(0x2cbe, 0x8b57, 0xd700, 0xc0ed, 0x868f, 0x5409, 0x1, 0x0);
        gbc.writeMem(0x2cbe, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8b57, gbc.sp());
        EXPECT(0x2cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 01A7
        gbc.setState(0x5421, 0x3ddb, 0x60b0, 0xa545, 0x258e, 0x33f, 0x1, 0x0);
        gbc.writeMem(0x5421, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3ddb, gbc.sp());
        EXPECT(0x5423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01A8
        gbc.setState(0x8e3a, 0xf673, 0x8ee0, 0x2c1c, 0xa168, 0x3397, 0x0, 0x1);
        gbc.writeMem(0x8e3a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf673, gbc.sp());
        EXPECT(0x8e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e3a));
        EXPECT(0x7b, gbc.readMem(0x8e3b));
        // CB 7B 01A9
        gbc.setState(0x5551, 0x4a27, 0x9050, 0xfd2c, 0x5637, 0xfcb, 0x0, 0x0);
        gbc.writeMem(0x5551, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4a27, gbc.sp());
        EXPECT(0x5553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01AA
        gbc.setState(0xc075, 0xb88e, 0x1e70, 0x20a7, 0xeef9, 0x6a4a, 0x1, 0x1);
        gbc.writeMem(0xc075, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb88e, gbc.sp());
        EXPECT(0xc077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc075));
        EXPECT(0x7b, gbc.readMem(0xc076));
        // CB 7B 01AB
        gbc.setState(0xcb9d, 0x4845, 0x7aa0, 0x6f0e, 0x5916, 0xb5db, 0x0, 0x0);
        gbc.writeMem(0xcb9d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4845, gbc.sp());
        EXPECT(0xcb9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9d));
        EXPECT(0x7b, gbc.readMem(0xcb9e));
        // CB 7B 01AC
        gbc.setState(0x445, 0x198, 0xcc10, 0xd2d8, 0xb63b, 0x84b6, 0x1, 0x1);
        gbc.writeMem(0x445, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x198, gbc.sp());
        EXPECT(0x447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01AD
        gbc.setState(0x12a1, 0xfc73, 0x39c0, 0x5b6c, 0x5c18, 0xaadf, 0x1, 0x0);
        gbc.writeMem(0x12a1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfc73, gbc.sp());
        EXPECT(0x12a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 01AE
        gbc.setState(0xbcb0, 0xf99d, 0xc530, 0x56fb, 0xaad8, 0xba48, 0x0, 0x1);
        gbc.writeMem(0xbcb0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf99d, gbc.sp());
        EXPECT(0xbcb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb0));
        EXPECT(0x7b, gbc.readMem(0xbcb1));
        // CB 7B 01AF
        gbc.setState(0x1250, 0xa87a, 0xa8d0, 0x3190, 0x6d2a, 0x40c1, 0x1, 0x0);
        gbc.writeMem(0x1250, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa87a, gbc.sp());
        EXPECT(0x1252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01B0
        gbc.setState(0xe28c, 0x55f3, 0x9850, 0xa2d, 0x9048, 0x591b, 0x0, 0x1);
        gbc.writeMem(0xe28c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x55f3, gbc.sp());
        EXPECT(0xe28e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe28c));
        EXPECT(0x7b, gbc.readMem(0xe28d));
        // CB 7B 01B1
        gbc.setState(0xa88d, 0xb63b, 0x9380, 0xe800, 0x5fc1, 0x5ab9, 0x0, 0x0);
        gbc.writeMem(0xa88d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb63b, gbc.sp());
        EXPECT(0xa88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88d));
        EXPECT(0x7b, gbc.readMem(0xa88e));
        // CB 7B 01B2
        gbc.setState(0x3927, 0xfa44, 0x10a0, 0xc1c9, 0xabdd, 0x154f, 0x0, 0x1);
        gbc.writeMem(0x3927, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfa44, gbc.sp());
        EXPECT(0x3929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 01B3
        gbc.setState(0x832a, 0x4a85, 0xd860, 0xbb4a, 0xa128, 0x78ef, 0x1, 0x0);
        gbc.writeMem(0x832a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4a85, gbc.sp());
        EXPECT(0x832c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x832a));
        EXPECT(0x7b, gbc.readMem(0x832b));
        // CB 7B 01B4
        gbc.setState(0x98aa, 0xafbd, 0xa10, 0xcef1, 0x4d2a, 0x1ce4, 0x1, 0x1);
        gbc.writeMem(0x98aa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xafbd, gbc.sp());
        EXPECT(0x98ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98aa));
        EXPECT(0x7b, gbc.readMem(0x98ab));
        // CB 7B 01B5
        gbc.setState(0x786, 0xdfe7, 0xfe70, 0xf5fd, 0x6680, 0xfd7a, 0x0, 0x0);
        gbc.writeMem(0x786, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdfe7, gbc.sp());
        EXPECT(0x788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01B6
        gbc.setState(0x3ac3, 0xcfba, 0x7ad0, 0xde81, 0xd009, 0x9dd1, 0x1, 0x1);
        gbc.writeMem(0x3ac3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcfba, gbc.sp());
        EXPECT(0x3ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01B8
        gbc.setState(0x1694, 0x2804, 0x1f0, 0x59cc, 0xa732, 0xe566, 0x1, 0x0);
        gbc.writeMem(0x1694, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2804, gbc.sp());
        EXPECT(0x1696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01B9
        gbc.setState(0xc4df, 0x1355, 0xfb80, 0xe007, 0x7a54, 0xef48, 0x0, 0x0);
        gbc.writeMem(0xc4df, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1355, gbc.sp());
        EXPECT(0xc4e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4df));
        EXPECT(0x7b, gbc.readMem(0xc4e0));
        // CB 7B 01BA
        gbc.setState(0x9c0e, 0xe571, 0xeb20, 0x22e4, 0x523f, 0x34ce, 0x1, 0x1);
        gbc.writeMem(0x9c0e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe571, gbc.sp());
        EXPECT(0x9c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c0e));
        EXPECT(0x7b, gbc.readMem(0x9c0f));
        // CB 7B 01BB
        gbc.setState(0x4aa7, 0x44ff, 0x2870, 0xa25, 0xd49, 0xea13, 0x1, 0x0);
        gbc.writeMem(0x4aa7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x44ff, gbc.sp());
        EXPECT(0x4aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01BD
        gbc.setState(0x8882, 0xef23, 0xa5a0, 0xfb21, 0x172c, 0x2736, 0x0, 0x1);
        gbc.writeMem(0x8882, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xef23, gbc.sp());
        EXPECT(0x8884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8882));
        EXPECT(0x7b, gbc.readMem(0x8883));
        // CB 7B 01BE
        gbc.setState(0x2b3b, 0xb42a, 0x8230, 0x664b, 0x305d, 0xc78d, 0x0, 0x0);
        gbc.writeMem(0x2b3b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb42a, gbc.sp());
        EXPECT(0x2b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01BF
        gbc.setState(0xab5b, 0xb0d0, 0x6bd0, 0x96f7, 0x1285, 0x42dd, 0x0, 0x1);
        gbc.writeMem(0xab5b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb0d0, gbc.sp());
        EXPECT(0xab5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5b));
        EXPECT(0x7b, gbc.readMem(0xab5c));
        // CB 7B 01C0
        gbc.setState(0x9f71, 0x7343, 0x96f0, 0x9abc, 0xd19e, 0x8172, 0x0, 0x0);
        gbc.writeMem(0x9f71, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7343, gbc.sp());
        EXPECT(0x9f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f71));
        EXPECT(0x7b, gbc.readMem(0x9f72));
        // CB 7B 01C1
        gbc.setState(0x25b9, 0xef43, 0xe1f0, 0x53d7, 0xd567, 0x57b1, 0x1, 0x0);
        gbc.writeMem(0x25b9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xef43, gbc.sp());
        EXPECT(0x25bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01C2
        gbc.setState(0x537b, 0x9a2d, 0xe5e0, 0x3d2a, 0x888c, 0xaf6e, 0x1, 0x1);
        gbc.writeMem(0x537b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9a2d, gbc.sp());
        EXPECT(0x537d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 01C3
        gbc.setState(0x9ac0, 0x83b6, 0x8b00, 0xad37, 0x74c7, 0x14cd, 0x1, 0x1);
        gbc.writeMem(0x9ac0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x83b6, gbc.sp());
        EXPECT(0x9ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac0));
        EXPECT(0x7b, gbc.readMem(0x9ac1));
        // CB 7B 01C4
        gbc.setState(0x2122, 0x823e, 0xd9e0, 0x39e2, 0xb77, 0xa0cd, 0x1, 0x1);
        gbc.writeMem(0x2122, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x823e, gbc.sp());
        EXPECT(0x2124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 01C5
        gbc.setState(0xe285, 0x5f19, 0x62f0, 0x5c6d, 0xfc78, 0x2d3c, 0x0, 0x0);
        gbc.writeMem(0xe285, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5f19, gbc.sp());
        EXPECT(0xe287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe285));
        EXPECT(0x7b, gbc.readMem(0xe286));
        // CB 7B 01C6
        gbc.setState(0xa314, 0xb10a, 0x9d0, 0xa584, 0x8cb0, 0x4886, 0x0, 0x0);
        gbc.writeMem(0xa314, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb10a, gbc.sp());
        EXPECT(0xa316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa314));
        EXPECT(0x7b, gbc.readMem(0xa315));
        // CB 7B 01C7
        gbc.setState(0xc588, 0x6bcc, 0x31a0, 0xe84f, 0x81f, 0xbc11, 0x1, 0x1);
        gbc.writeMem(0xc588, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6bcc, gbc.sp());
        EXPECT(0xc58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc588));
        EXPECT(0x7b, gbc.readMem(0xc589));
        // CB 7B 01C8
        gbc.setState(0x91bf, 0x37d, 0x3e80, 0x6144, 0xe358, 0x5f7c, 0x0, 0x0);
        gbc.writeMem(0x91bf, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x37d, gbc.sp());
        EXPECT(0x91c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91bf));
        EXPECT(0x7b, gbc.readMem(0x91c0));
        // CB 7B 01C9
        gbc.setState(0x2056, 0xa26b, 0x7d0, 0xd342, 0x6004, 0x45a1, 0x0, 0x1);
        gbc.writeMem(0x2056, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa26b, gbc.sp());
        EXPECT(0x2058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01CA
        gbc.setState(0x9d6b, 0x5a98, 0x9ad0, 0xa33b, 0xda94, 0x51d9, 0x0, 0x1);
        gbc.writeMem(0x9d6b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5a98, gbc.sp());
        EXPECT(0x9d6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6b));
        EXPECT(0x7b, gbc.readMem(0x9d6c));
        // CB 7B 01CB
        gbc.setState(0x5db6, 0xf47d, 0xbb00, 0x1d31, 0x16d0, 0x42a0, 0x0, 0x1);
        gbc.writeMem(0x5db6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf47d, gbc.sp());
        EXPECT(0x5db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 01CC
        gbc.setState(0xe0db, 0xab7, 0xdae0, 0xa9f9, 0xdf5a, 0x1e5e, 0x0, 0x0);
        gbc.writeMem(0xe0db, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xab7, gbc.sp());
        EXPECT(0xe0dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0db));
        EXPECT(0x7b, gbc.readMem(0xe0dc));
        // CB 7B 01CD
        gbc.setState(0xa6c1, 0xa35d, 0xb7f0, 0xa45, 0x7fe6, 0x33f7, 0x0, 0x0);
        gbc.writeMem(0xa6c1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa35d, gbc.sp());
        EXPECT(0xa6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c1));
        EXPECT(0x7b, gbc.readMem(0xa6c2));
        // CB 7B 01CE
        gbc.setState(0xe1ad, 0x31fd, 0x4210, 0x21a2, 0x1527, 0x51d9, 0x0, 0x1);
        gbc.writeMem(0xe1ad, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x31fd, gbc.sp());
        EXPECT(0xe1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ad));
        EXPECT(0x7b, gbc.readMem(0xe1ae));
        // CB 7B 01CF
        gbc.setState(0x27a, 0x1efa, 0x8220, 0x78b2, 0xe4f3, 0xcb34, 0x1, 0x1);
        gbc.writeMem(0x27a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1efa, gbc.sp());
        EXPECT(0x27c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 01D0
        gbc.setState(0x1ff1, 0xf33d, 0x3230, 0x218f, 0x1240, 0x1eef, 0x0, 0x1);
        gbc.writeMem(0x1ff1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf33d, gbc.sp());
        EXPECT(0x1ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01D1
        gbc.setState(0x16a4, 0x8f67, 0xb0d0, 0x8799, 0xbe2c, 0x8eaa, 0x1, 0x0);
        gbc.writeMem(0x16a4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8f67, gbc.sp());
        EXPECT(0x16a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01D2
        gbc.setState(0xec21, 0x30a1, 0x7fe0, 0x20eb, 0x3b1, 0x89b8, 0x1, 0x0);
        gbc.writeMem(0xec21, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x30a1, gbc.sp());
        EXPECT(0xec23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec21));
        EXPECT(0x7b, gbc.readMem(0xec22));
        // CB 7B 01D3
        gbc.setState(0x3371, 0xb444, 0x2ab0, 0xbd5e, 0xf777, 0xf3f8, 0x0, 0x1);
        gbc.writeMem(0x3371, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb444, gbc.sp());
        EXPECT(0x3373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01D4
        gbc.setState(0x28a8, 0x87b0, 0xf860, 0xf034, 0xf57d, 0x59e2, 0x0, 0x0);
        gbc.writeMem(0x28a8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x87b0, gbc.sp());
        EXPECT(0x28aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 01D5
        gbc.setState(0x404f, 0xf732, 0xf730, 0x2d78, 0xd7f2, 0xd384, 0x1, 0x0);
        gbc.writeMem(0x404f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf732, gbc.sp());
        EXPECT(0x4051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01D6
        gbc.setState(0x7f16, 0xa9e9, 0x2600, 0x79ab, 0xbc4b, 0x3ee2, 0x1, 0x1);
        gbc.writeMem(0x7f16, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa9e9, gbc.sp());
        EXPECT(0x7f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 01D8
        gbc.setState(0xd9eb, 0x28bd, 0x2c50, 0x7a5, 0xf15b, 0x4425, 0x0, 0x1);
        gbc.writeMem(0xd9eb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x28bd, gbc.sp());
        EXPECT(0xd9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9eb));
        EXPECT(0x7b, gbc.readMem(0xd9ec));
        // CB 7B 01D9
        gbc.setState(0x27ee, 0xba75, 0x92d0, 0xaf81, 0x21a1, 0x68e, 0x1, 0x1);
        gbc.writeMem(0x27ee, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xba75, gbc.sp());
        EXPECT(0x27f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01DA
        gbc.setState(0x64fc, 0xcb2f, 0x9360, 0xa9b, 0x9a59, 0xce3a, 0x0, 0x1);
        gbc.writeMem(0x64fc, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcb2f, gbc.sp());
        EXPECT(0x64fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 01DB
        gbc.setState(0x3143, 0x1d8d, 0x3130, 0x6de5, 0xe5e3, 0x5b0b, 0x1, 0x0);
        gbc.writeMem(0x3143, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1d8d, gbc.sp());
        EXPECT(0x3145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01DC
        gbc.setState(0xcf1c, 0x23a5, 0xfb10, 0x3d79, 0x39dc, 0xb25, 0x1, 0x1);
        gbc.writeMem(0xcf1c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x23a5, gbc.sp());
        EXPECT(0xcf1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf1c));
        EXPECT(0x7b, gbc.readMem(0xcf1d));
        // CB 7B 01DD
        gbc.setState(0x3e14, 0x5a3f, 0x1ad0, 0x6a0d, 0x5a33, 0x1406, 0x1, 0x1);
        gbc.writeMem(0x3e14, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5a3f, gbc.sp());
        EXPECT(0x3e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01DE
        gbc.setState(0x10cb, 0x682e, 0x47f0, 0x50d0, 0xa3c2, 0x79cc, 0x1, 0x0);
        gbc.writeMem(0x10cb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x682e, gbc.sp());
        EXPECT(0x10cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01DF
        gbc.setState(0x8a5b, 0x297e, 0x5b00, 0x2e5a, 0x6716, 0xeba3, 0x1, 0x1);
        gbc.writeMem(0x8a5b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x297e, gbc.sp());
        EXPECT(0x8a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a5b));
        EXPECT(0x7b, gbc.readMem(0x8a5c));
        // CB 7B 01E0
        gbc.setState(0xeaf6, 0x71eb, 0x2940, 0xfb78, 0x6c4d, 0xaedc, 0x1, 0x0);
        gbc.writeMem(0xeaf6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x71eb, gbc.sp());
        EXPECT(0xeaf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf6));
        EXPECT(0x7b, gbc.readMem(0xeaf7));
        // CB 7B 01E1
        gbc.setState(0x4fbe, 0x24f5, 0x3310, 0x8c3e, 0xa077, 0xa987, 0x0, 0x0);
        gbc.writeMem(0x4fbe, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x24f5, gbc.sp());
        EXPECT(0x4fc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01E2
        gbc.setState(0x9469, 0xa667, 0x2480, 0x393c, 0xb2a9, 0x6a04, 0x1, 0x0);
        gbc.writeMem(0x9469, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa667, gbc.sp());
        EXPECT(0x946b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9469));
        EXPECT(0x7b, gbc.readMem(0x946a));
        // CB 7B 01E3
        gbc.setState(0x1f46, 0x7874, 0xe10, 0x21de, 0x82ba, 0xcbed, 0x1, 0x1);
        gbc.writeMem(0x1f46, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7874, gbc.sp());
        EXPECT(0x1f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01E4
        gbc.setState(0x922c, 0x328c, 0x1e80, 0xf9a2, 0x9ae9, 0xb44a, 0x1, 0x1);
        gbc.writeMem(0x922c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x328c, gbc.sp());
        EXPECT(0x922e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922c));
        EXPECT(0x7b, gbc.readMem(0x922d));
        // CB 7B 01E5
        gbc.setState(0xebcb, 0xeba9, 0x43a0, 0xb80c, 0xc158, 0x97ae, 0x0, 0x1);
        gbc.writeMem(0xebcb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xeba9, gbc.sp());
        EXPECT(0xebcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebcb));
        EXPECT(0x7b, gbc.readMem(0xebcc));
        // CB 7B 01E6
        gbc.setState(0xd805, 0x6579, 0x69c0, 0xb466, 0xaf5d, 0x3743, 0x0, 0x0);
        gbc.writeMem(0xd805, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6579, gbc.sp());
        EXPECT(0xd807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd805));
        EXPECT(0x7b, gbc.readMem(0xd806));
        // CB 7B 01E7
        gbc.setState(0x81ad, 0x9293, 0x5920, 0xf438, 0xa519, 0x4b7e, 0x1, 0x0);
        gbc.writeMem(0x81ad, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9293, gbc.sp());
        EXPECT(0x81af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ad));
        EXPECT(0x7b, gbc.readMem(0x81ae));
        // CB 7B 01E8
        gbc.setState(0x3445, 0x621c, 0x840, 0x4f7c, 0xf5a8, 0x490f, 0x1, 0x1);
        gbc.writeMem(0x3445, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x621c, gbc.sp());
        EXPECT(0x3447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 01E9
        gbc.setState(0xa013, 0x9a9e, 0xdc0, 0xe622, 0xe03f, 0x97e4, 0x1, 0x0);
        gbc.writeMem(0xa013, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9a9e, gbc.sp());
        EXPECT(0xa015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa013));
        EXPECT(0x7b, gbc.readMem(0xa014));
        // CB 7B 01EA
        gbc.setState(0x74a3, 0xd356, 0x610, 0x684c, 0xce6d, 0x9531, 0x0, 0x1);
        gbc.writeMem(0x74a3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd356, gbc.sp());
        EXPECT(0x74a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01EB
        gbc.setState(0x21cf, 0x9076, 0xc420, 0xe6b, 0x4e58, 0x5137, 0x1, 0x0);
        gbc.writeMem(0x21cf, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9076, gbc.sp());
        EXPECT(0x21d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 01EC
        gbc.setState(0x85a8, 0xa522, 0xbfd0, 0x48ba, 0xe098, 0x6a49, 0x1, 0x1);
        gbc.writeMem(0x85a8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa522, gbc.sp());
        EXPECT(0x85aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85a8));
        EXPECT(0x7b, gbc.readMem(0x85a9));
        // CB 7B 01ED
        gbc.setState(0x703c, 0xdaf2, 0x6d10, 0x3f63, 0x4083, 0x843, 0x0, 0x1);
        gbc.writeMem(0x703c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xdaf2, gbc.sp());
        EXPECT(0x703e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01EE
        gbc.setState(0x7169, 0x10c6, 0x7f30, 0xe20e, 0xaec9, 0x4244, 0x1, 0x1);
        gbc.writeMem(0x7169, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x10c6, gbc.sp());
        EXPECT(0x716b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01EF
        gbc.setState(0xcf1f, 0xb880, 0x6960, 0x87b6, 0xb417, 0xc614, 0x1, 0x0);
        gbc.writeMem(0xcf1f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb880, gbc.sp());
        EXPECT(0xcf21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf1f));
        EXPECT(0x7b, gbc.readMem(0xcf20));
        // CB 7B 01F0
        gbc.setState(0xa0a6, 0xad3f, 0x6840, 0x75c7, 0xffa9, 0x3aad, 0x1, 0x1);
        gbc.writeMem(0xa0a6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xad3f, gbc.sp());
        EXPECT(0xa0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a6));
        EXPECT(0x7b, gbc.readMem(0xa0a7));
        // CB 7B 01F1
        gbc.setState(0x1d46, 0x45b8, 0x7cf0, 0x6066, 0x52e6, 0xbca5, 0x0, 0x1);
        gbc.writeMem(0x1d46, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x45b8, gbc.sp());
        EXPECT(0x1d48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01F2
        gbc.setState(0xef84, 0x867e, 0x6d60, 0xefc1, 0xd4d3, 0x9100, 0x0, 0x1);
        gbc.writeMem(0xef84, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x867e, gbc.sp());
        EXPECT(0xef86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef84));
        EXPECT(0x7b, gbc.readMem(0xef85));
        // CB 7B 01F3
        gbc.setState(0x59bd, 0x90e6, 0x3030, 0x947a, 0x5c6c, 0xa74b, 0x0, 0x1);
        gbc.writeMem(0x59bd, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x90e6, gbc.sp());
        EXPECT(0x59bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01F5
        gbc.setState(0x8d1c, 0xfbbc, 0xe280, 0xe2a5, 0x6b53, 0xbc2d, 0x1, 0x0);
        gbc.writeMem(0x8d1c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfbbc, gbc.sp());
        EXPECT(0x8d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d1c));
        EXPECT(0x7b, gbc.readMem(0x8d1d));
        // CB 7B 01F6
        gbc.setState(0x1f61, 0x5c47, 0xf260, 0x639c, 0x4353, 0xa724, 0x0, 0x1);
        gbc.writeMem(0x1f61, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5c47, gbc.sp());
        EXPECT(0x1f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 01F7
        gbc.setState(0x922b, 0xe4ad, 0x1740, 0x9cd5, 0x3c84, 0x9e91, 0x1, 0x1);
        gbc.writeMem(0x922b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe4ad, gbc.sp());
        EXPECT(0x922d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922b));
        EXPECT(0x7b, gbc.readMem(0x922c));
        // CB 7B 01F8
        gbc.setState(0x9452, 0xe3ed, 0xaad0, 0x5597, 0x69a0, 0x8af8, 0x1, 0x1);
        gbc.writeMem(0x9452, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe3ed, gbc.sp());
        EXPECT(0x9454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9452));
        EXPECT(0x7b, gbc.readMem(0x9453));
        // CB 7B 01F9
        gbc.setState(0xa256, 0xc545, 0xfd10, 0x578, 0x1b4d, 0x42ba, 0x0, 0x1);
        gbc.writeMem(0xa256, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc545, gbc.sp());
        EXPECT(0xa258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa256));
        EXPECT(0x7b, gbc.readMem(0xa257));
        // CB 7B 01FB
        gbc.setState(0x217f, 0x1c1b, 0x7370, 0x5c0e, 0xdc3e, 0x4992, 0x1, 0x0);
        gbc.writeMem(0x217f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1c1b, gbc.sp());
        EXPECT(0x2181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 01FD
        gbc.setState(0xe965, 0xfdaf, 0xbcd0, 0xd44, 0x9578, 0x8156, 0x1, 0x1);
        gbc.writeMem(0xe965, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfdaf, gbc.sp());
        EXPECT(0xe967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe965));
        EXPECT(0x7b, gbc.readMem(0xe966));
        // CB 7B 01FF
        gbc.setState(0xac4c, 0x4ad9, 0x3eb0, 0x154, 0x7e1b, 0xa848, 0x0, 0x0);
        gbc.writeMem(0xac4c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4ad9, gbc.sp());
        EXPECT(0xac4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac4c));
        EXPECT(0x7b, gbc.readMem(0xac4d));
        // CB 7B 0200
        gbc.setState(0x746, 0x5a77, 0xc6a0, 0xdcc4, 0x1077, 0x939d, 0x0, 0x1);
        gbc.writeMem(0x746, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5a77, gbc.sp());
        EXPECT(0x748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0201
        gbc.setState(0xe85a, 0x7bd0, 0x4c00, 0xc570, 0x314b, 0x2b11, 0x0, 0x1);
        gbc.writeMem(0xe85a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7bd0, gbc.sp());
        EXPECT(0xe85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe85a));
        EXPECT(0x7b, gbc.readMem(0xe85b));
        // CB 7B 0202
        gbc.setState(0x2641, 0x44be, 0x1dc0, 0x630f, 0x4ed0, 0x2538, 0x0, 0x1);
        gbc.writeMem(0x2641, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x44be, gbc.sp());
        EXPECT(0x2643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0203
        gbc.setState(0x6c2c, 0x84e1, 0xb9e0, 0xd332, 0x77d0, 0xd71e, 0x0, 0x1);
        gbc.writeMem(0x6c2c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x84e1, gbc.sp());
        EXPECT(0x6c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0204
        gbc.setState(0x9853, 0xf19a, 0x2840, 0xdea2, 0x6bca, 0x77fc, 0x0, 0x1);
        gbc.writeMem(0x9853, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf19a, gbc.sp());
        EXPECT(0x9855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9853));
        EXPECT(0x7b, gbc.readMem(0x9854));
        // CB 7B 0205
        gbc.setState(0x4837, 0xad4a, 0xc590, 0x4b9f, 0xe5f9, 0x5675, 0x0, 0x1);
        gbc.writeMem(0x4837, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xad4a, gbc.sp());
        EXPECT(0x4839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0206
        gbc.setState(0x123, 0x1f9b, 0x54e0, 0x8477, 0x6006, 0x2508, 0x0, 0x1);
        gbc.writeMem(0x123, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1f9b, gbc.sp());
        EXPECT(0x125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0207
        gbc.setState(0x58c7, 0x7e34, 0xd80, 0x82d, 0x7ea4, 0x7b60, 0x1, 0x0);
        gbc.writeMem(0x58c7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7e34, gbc.sp());
        EXPECT(0x58c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0208
        gbc.setState(0x6df0, 0x78a, 0x4300, 0x5d1d, 0x7a29, 0x2e5, 0x1, 0x1);
        gbc.writeMem(0x6df0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x78a, gbc.sp());
        EXPECT(0x6df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0209
        gbc.setState(0x6e2d, 0xa970, 0xada0, 0x7a4b, 0x5e79, 0x80b5, 0x1, 0x0);
        gbc.writeMem(0x6e2d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa970, gbc.sp());
        EXPECT(0x6e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 020A
        gbc.setState(0x47ff, 0x45f, 0x54c0, 0xc023, 0x1668, 0x86ce, 0x0, 0x1);
        gbc.writeMem(0x47ff, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x45f, gbc.sp());
        EXPECT(0x4801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 020B
        gbc.setState(0x1a0a, 0x329b, 0x9470, 0x46bf, 0x16fc, 0x2d90, 0x0, 0x1);
        gbc.writeMem(0x1a0a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x329b, gbc.sp());
        EXPECT(0x1a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 020C
        gbc.setState(0x78b6, 0x85ab, 0xeef0, 0x3422, 0x880f, 0xe6e7, 0x0, 0x1);
        gbc.writeMem(0x78b6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x85ab, gbc.sp());
        EXPECT(0x78b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 020D
        gbc.setState(0x6fee, 0x6bca, 0xb710, 0x572f, 0x32d4, 0x5f3a, 0x1, 0x1);
        gbc.writeMem(0x6fee, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6bca, gbc.sp());
        EXPECT(0x6ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 020E
        gbc.setState(0x929c, 0x9883, 0xf160, 0xda3b, 0xfed0, 0x2f31, 0x0, 0x0);
        gbc.writeMem(0x929c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9883, gbc.sp());
        EXPECT(0x929e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x929c));
        EXPECT(0x7b, gbc.readMem(0x929d));
        // CB 7B 020F
        gbc.setState(0xd22b, 0x5646, 0x6070, 0xce93, 0xe1f7, 0x9b4d, 0x1, 0x0);
        gbc.writeMem(0xd22b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5646, gbc.sp());
        EXPECT(0xd22d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22b));
        EXPECT(0x7b, gbc.readMem(0xd22c));
        // CB 7B 0210
        gbc.setState(0x5c79, 0x4a7, 0x2c10, 0x67d6, 0xee0d, 0xa9ca, 0x0, 0x0);
        gbc.writeMem(0x5c79, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4a7, gbc.sp());
        EXPECT(0x5c7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0211
        gbc.setState(0x11f8, 0x2d47, 0x5350, 0xa1ba, 0x3370, 0x9358, 0x1, 0x1);
        gbc.writeMem(0x11f8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2d47, gbc.sp());
        EXPECT(0x11fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0212
        gbc.setState(0xcae4, 0xa1cd, 0x68a0, 0xf92a, 0xaff4, 0x5071, 0x1, 0x1);
        gbc.writeMem(0xcae4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa1cd, gbc.sp());
        EXPECT(0xcae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae4));
        EXPECT(0x7b, gbc.readMem(0xcae5));
        // CB 7B 0213
        gbc.setState(0x6d1c, 0xe390, 0xf490, 0x6d6b, 0x8759, 0x364f, 0x0, 0x1);
        gbc.writeMem(0x6d1c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe390, gbc.sp());
        EXPECT(0x6d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0214
        gbc.setState(0x6713, 0xe40a, 0xe5f0, 0xb230, 0x1813, 0x836e, 0x1, 0x0);
        gbc.writeMem(0x6713, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe40a, gbc.sp());
        EXPECT(0x6715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0215
        gbc.setState(0x1cee, 0x57c4, 0x5b30, 0x65ea, 0x8bdf, 0xdf37, 0x0, 0x0);
        gbc.writeMem(0x1cee, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x57c4, gbc.sp());
        EXPECT(0x1cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0216
        gbc.setState(0x1f0a, 0x85c, 0x8010, 0x45a7, 0xcd01, 0xd821, 0x1, 0x0);
        gbc.writeMem(0x1f0a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x85c, gbc.sp());
        EXPECT(0x1f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0217
        gbc.setState(0x17b3, 0xd5d3, 0xadd0, 0x2bae, 0x8b0c, 0xe1cb, 0x0, 0x1);
        gbc.writeMem(0x17b3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd5d3, gbc.sp());
        EXPECT(0x17b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0218
        gbc.setState(0x3f34, 0xc3b, 0xa4a0, 0xe65a, 0xdc89, 0x971f, 0x0, 0x1);
        gbc.writeMem(0x3f34, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc3b, gbc.sp());
        EXPECT(0x3f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0219
        gbc.setState(0x420f, 0xc1, 0x1750, 0x1b20, 0x774e, 0xe783, 0x0, 0x0);
        gbc.writeMem(0x420f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc1, gbc.sp());
        EXPECT(0x4211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 021B
        gbc.setState(0x3490, 0xfe38, 0xab90, 0x60fa, 0x3bc0, 0x5095, 0x0, 0x0);
        gbc.writeMem(0x3490, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfe38, gbc.sp());
        EXPECT(0x3492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 021C
        gbc.setState(0x3d44, 0x44b2, 0x8c60, 0xc3d0, 0xb67f, 0xdf8b, 0x0, 0x0);
        gbc.writeMem(0x3d44, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x44b2, gbc.sp());
        EXPECT(0x3d46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 021D
        gbc.setState(0xac81, 0x835, 0xeaf0, 0x8860, 0x93b, 0x9185, 0x1, 0x1);
        gbc.writeMem(0xac81, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x835, gbc.sp());
        EXPECT(0xac83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac81));
        EXPECT(0x7b, gbc.readMem(0xac82));
        // CB 7B 021E
        gbc.setState(0xef1c, 0x2951, 0xfa10, 0x272, 0xc2db, 0xd7e3, 0x1, 0x0);
        gbc.writeMem(0xef1c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2951, gbc.sp());
        EXPECT(0xef1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef1c));
        EXPECT(0x7b, gbc.readMem(0xef1d));
        // CB 7B 021F
        gbc.setState(0xbc49, 0xa982, 0xa80, 0x1374, 0xfa28, 0x891e, 0x0, 0x1);
        gbc.writeMem(0xbc49, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa982, gbc.sp());
        EXPECT(0xbc4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc49));
        EXPECT(0x7b, gbc.readMem(0xbc4a));
        // CB 7B 0220
        gbc.setState(0xe7ab, 0x6e28, 0xdc60, 0xee1e, 0xe49, 0x10c5, 0x1, 0x1);
        gbc.writeMem(0xe7ab, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6e28, gbc.sp());
        EXPECT(0xe7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ab));
        EXPECT(0x7b, gbc.readMem(0xe7ac));
        // CB 7B 0221
        gbc.setState(0x94d4, 0xe029, 0x4040, 0x88d9, 0xa38a, 0xee74, 0x0, 0x0);
        gbc.writeMem(0x94d4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe029, gbc.sp());
        EXPECT(0x94d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d4));
        EXPECT(0x7b, gbc.readMem(0x94d5));
        // CB 7B 0222
        gbc.setState(0x1d05, 0x22cc, 0x970, 0x425f, 0x5372, 0xebc1, 0x1, 0x0);
        gbc.writeMem(0x1d05, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x22cc, gbc.sp());
        EXPECT(0x1d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0223
        gbc.setState(0x917c, 0x1394, 0x65c0, 0xdd2, 0xcf4, 0x1122, 0x1, 0x0);
        gbc.writeMem(0x917c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1394, gbc.sp());
        EXPECT(0x917e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x917c));
        EXPECT(0x7b, gbc.readMem(0x917d));
        // CB 7B 0224
        gbc.setState(0x5067, 0xdc03, 0x8650, 0xa603, 0x7ef8, 0xb3de, 0x0, 0x0);
        gbc.writeMem(0x5067, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdc03, gbc.sp());
        EXPECT(0x5069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0225
        gbc.setState(0x8d62, 0xbf10, 0xeaf0, 0x2b21, 0xa591, 0x8549, 0x0, 0x0);
        gbc.writeMem(0x8d62, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbf10, gbc.sp());
        EXPECT(0x8d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d62));
        EXPECT(0x7b, gbc.readMem(0x8d63));
        // CB 7B 0226
        gbc.setState(0x378a, 0x3b17, 0x3ef0, 0x9299, 0xdaf3, 0xb68, 0x0, 0x0);
        gbc.writeMem(0x378a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3b17, gbc.sp());
        EXPECT(0x378c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0227
        gbc.setState(0xccf, 0xe8b8, 0x2dd0, 0x3274, 0xad5b, 0x27a3, 0x0, 0x0);
        gbc.writeMem(0xccf, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe8b8, gbc.sp());
        EXPECT(0xcd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0228
        gbc.setState(0x6c7e, 0x823, 0x7de0, 0xa6f, 0xd6e3, 0xd11b, 0x0, 0x0);
        gbc.writeMem(0x6c7e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x823, gbc.sp());
        EXPECT(0x6c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0229
        gbc.setState(0x7b19, 0xb6c3, 0x7010, 0x6a1e, 0xe1e4, 0x7f8c, 0x1, 0x0);
        gbc.writeMem(0x7b19, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb6c3, gbc.sp());
        EXPECT(0x7b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 022A
        gbc.setState(0x3358, 0x6aa5, 0x9220, 0x9d96, 0xcbb3, 0x60a9, 0x0, 0x1);
        gbc.writeMem(0x3358, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6aa5, gbc.sp());
        EXPECT(0x335a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 022B
        gbc.setState(0x32fa, 0x3f7b, 0xb310, 0x311b, 0x30c3, 0x574d, 0x1, 0x0);
        gbc.writeMem(0x32fa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3f7b, gbc.sp());
        EXPECT(0x32fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 022C
        gbc.setState(0x24f3, 0xb986, 0x4610, 0x1daa, 0x7244, 0xe865, 0x0, 0x1);
        gbc.writeMem(0x24f3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb986, gbc.sp());
        EXPECT(0x24f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 022E
        gbc.setState(0xe19f, 0xa127, 0xdd00, 0x1fb7, 0x79a8, 0x459e, 0x1, 0x0);
        gbc.writeMem(0xe19f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa127, gbc.sp());
        EXPECT(0xe1a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe19f));
        EXPECT(0x7b, gbc.readMem(0xe1a0));
        // CB 7B 022F
        gbc.setState(0xc32c, 0x3c87, 0x4930, 0xf1b7, 0x1a5d, 0x8996, 0x1, 0x0);
        gbc.writeMem(0xc32c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3c87, gbc.sp());
        EXPECT(0xc32e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32c));
        EXPECT(0x7b, gbc.readMem(0xc32d));
        // CB 7B 0230
        gbc.setState(0xba2d, 0xbee3, 0xf470, 0xe38f, 0x3745, 0xa294, 0x0, 0x0);
        gbc.writeMem(0xba2d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbee3, gbc.sp());
        EXPECT(0xba2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2d));
        EXPECT(0x7b, gbc.readMem(0xba2e));
        // CB 7B 0231
        gbc.setState(0x3af2, 0x89ba, 0x13f0, 0xcf2e, 0xa9ac, 0x30b3, 0x1, 0x1);
        gbc.writeMem(0x3af2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x89ba, gbc.sp());
        EXPECT(0x3af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0232
        gbc.setState(0x8cf9, 0x8e28, 0x3ec0, 0x407d, 0xfed, 0x46c4, 0x0, 0x0);
        gbc.writeMem(0x8cf9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8e28, gbc.sp());
        EXPECT(0x8cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cf9));
        EXPECT(0x7b, gbc.readMem(0x8cfa));
        // CB 7B 0233
        gbc.setState(0x4163, 0x21a8, 0xd8a0, 0x323, 0x67cc, 0xa20b, 0x1, 0x1);
        gbc.writeMem(0x4163, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x21a8, gbc.sp());
        EXPECT(0x4165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0234
        gbc.setState(0xa8b3, 0xda43, 0x5730, 0xa721, 0xe2a4, 0x346c, 0x1, 0x1);
        gbc.writeMem(0xa8b3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xda43, gbc.sp());
        EXPECT(0xa8b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8b3));
        EXPECT(0x7b, gbc.readMem(0xa8b4));
        // CB 7B 0235
        gbc.setState(0xb90a, 0x72ee, 0x8b60, 0x82cd, 0xc097, 0x3fa7, 0x1, 0x0);
        gbc.writeMem(0xb90a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x72ee, gbc.sp());
        EXPECT(0xb90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb90a));
        EXPECT(0x7b, gbc.readMem(0xb90b));
        // CB 7B 0236
        gbc.setState(0x6a47, 0x487e, 0xdf70, 0x8d92, 0x62be, 0xa8e3, 0x0, 0x0);
        gbc.writeMem(0x6a47, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x487e, gbc.sp());
        EXPECT(0x6a49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0237
        gbc.setState(0x79a5, 0x9345, 0xfb20, 0x26c8, 0xe017, 0x3106, 0x1, 0x0);
        gbc.writeMem(0x79a5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9345, gbc.sp());
        EXPECT(0x79a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0239
        gbc.setState(0x1b41, 0xcce0, 0x2120, 0xee0b, 0xce2b, 0x2da6, 0x1, 0x1);
        gbc.writeMem(0x1b41, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcce0, gbc.sp());
        EXPECT(0x1b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 023A
        gbc.setState(0x29e8, 0xcfd6, 0xbd0, 0x3f2d, 0x5d3d, 0x36ab, 0x1, 0x0);
        gbc.writeMem(0x29e8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcfd6, gbc.sp());
        EXPECT(0x29ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 023B
        gbc.setState(0xbf4d, 0xd02b, 0xbef0, 0xa78c, 0x1af0, 0x1d64, 0x1, 0x0);
        gbc.writeMem(0xbf4d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd02b, gbc.sp());
        EXPECT(0xbf4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf4d));
        EXPECT(0x7b, gbc.readMem(0xbf4e));
        // CB 7B 023C
        gbc.setState(0x4c5e, 0x7fa8, 0x64a0, 0x4c26, 0xde85, 0x6908, 0x0, 0x1);
        gbc.writeMem(0x4c5e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7fa8, gbc.sp());
        EXPECT(0x4c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 023D
        gbc.setState(0x4a0f, 0xf1f4, 0x2250, 0xd27f, 0x2db0, 0xb84a, 0x0, 0x1);
        gbc.writeMem(0x4a0f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf1f4, gbc.sp());
        EXPECT(0x4a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 023E
        gbc.setState(0xb3c7, 0x7367, 0xdfc0, 0xadcd, 0x3fe, 0x4694, 0x0, 0x0);
        gbc.writeMem(0xb3c7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7367, gbc.sp());
        EXPECT(0xb3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c7));
        EXPECT(0x7b, gbc.readMem(0xb3c8));
        // CB 7B 023F
        gbc.setState(0x49d, 0xec9, 0x81f0, 0xe2af, 0x4f90, 0x461d, 0x1, 0x0);
        gbc.writeMem(0x49d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xec9, gbc.sp());
        EXPECT(0x49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0240
        gbc.setState(0x12ab, 0x4897, 0xe1b0, 0x2e15, 0xe296, 0x7ab, 0x0, 0x1);
        gbc.writeMem(0x12ab, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4897, gbc.sp());
        EXPECT(0x12ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0242
        gbc.setState(0x8b35, 0x8547, 0x4710, 0x5f37, 0x1f80, 0x9022, 0x0, 0x0);
        gbc.writeMem(0x8b35, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8547, gbc.sp());
        EXPECT(0x8b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b35));
        EXPECT(0x7b, gbc.readMem(0x8b36));
        // CB 7B 0243
        gbc.setState(0xb6e4, 0x304d, 0xece0, 0xbfce, 0x7a83, 0xc789, 0x0, 0x1);
        gbc.writeMem(0xb6e4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x304d, gbc.sp());
        EXPECT(0xb6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e4));
        EXPECT(0x7b, gbc.readMem(0xb6e5));
        // CB 7B 0244
        gbc.setState(0xeaa7, 0xc13b, 0xf500, 0x3559, 0x3e9b, 0x5676, 0x1, 0x0);
        gbc.writeMem(0xeaa7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc13b, gbc.sp());
        EXPECT(0xeaa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa7));
        EXPECT(0x7b, gbc.readMem(0xeaa8));
        // CB 7B 0245
        gbc.setState(0x4e41, 0x105a, 0x41b0, 0x5dd5, 0xbe7, 0x69e8, 0x1, 0x1);
        gbc.writeMem(0x4e41, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x105a, gbc.sp());
        EXPECT(0x4e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0246
        gbc.setState(0x9099, 0x4673, 0x46f0, 0xd502, 0x87df, 0x9336, 0x0, 0x0);
        gbc.writeMem(0x9099, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4673, gbc.sp());
        EXPECT(0x909b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9099));
        EXPECT(0x7b, gbc.readMem(0x909a));
        // CB 7B 0247
        gbc.setState(0x856d, 0xeb42, 0x4370, 0xe8df, 0xf0a9, 0x76cd, 0x1, 0x1);
        gbc.writeMem(0x856d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xeb42, gbc.sp());
        EXPECT(0x856f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856d));
        EXPECT(0x7b, gbc.readMem(0x856e));
        // CB 7B 0248
        gbc.setState(0xea61, 0xdc46, 0x80f0, 0x4d32, 0xc927, 0xc147, 0x1, 0x1);
        gbc.writeMem(0xea61, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdc46, gbc.sp());
        EXPECT(0xea63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea61));
        EXPECT(0x7b, gbc.readMem(0xea62));
        // CB 7B 0249
        gbc.setState(0x6335, 0x70f9, 0xe220, 0x49c, 0x22b7, 0x602c, 0x1, 0x0);
        gbc.writeMem(0x6335, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x70f9, gbc.sp());
        EXPECT(0x6337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 024A
        gbc.setState(0xdff0, 0x5b0e, 0xed50, 0xbe35, 0x47e4, 0x86d7, 0x0, 0x1);
        gbc.writeMem(0xdff0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5b0e, gbc.sp());
        EXPECT(0xdff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff0));
        EXPECT(0x7b, gbc.readMem(0xdff1));
        // CB 7B 024B
        gbc.setState(0x8eee, 0x3abb, 0xedc0, 0x6e70, 0x8157, 0x768b, 0x0, 0x1);
        gbc.writeMem(0x8eee, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3abb, gbc.sp());
        EXPECT(0x8ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eee));
        EXPECT(0x7b, gbc.readMem(0x8eef));
        // CB 7B 024C
        gbc.setState(0xbe6a, 0x2605, 0x810, 0x10f1, 0xf1c9, 0x28d0, 0x1, 0x0);
        gbc.writeMem(0xbe6a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2605, gbc.sp());
        EXPECT(0xbe6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe6a));
        EXPECT(0x7b, gbc.readMem(0xbe6b));
        // CB 7B 024D
        gbc.setState(0xd132, 0xc41c, 0x8f30, 0x2175, 0x6eb1, 0xb4d0, 0x1, 0x1);
        gbc.writeMem(0xd132, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc41c, gbc.sp());
        EXPECT(0xd134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd132));
        EXPECT(0x7b, gbc.readMem(0xd133));
        // CB 7B 024E
        gbc.setState(0xcd64, 0xad1f, 0x8200, 0x9c99, 0xd491, 0xdaef, 0x0, 0x0);
        gbc.writeMem(0xcd64, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xad1f, gbc.sp());
        EXPECT(0xcd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd64));
        EXPECT(0x7b, gbc.readMem(0xcd65));
        // CB 7B 024F
        gbc.setState(0xa700, 0x7a75, 0xfce0, 0x52a2, 0x1160, 0xb9f9, 0x0, 0x0);
        gbc.writeMem(0xa700, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7a75, gbc.sp());
        EXPECT(0xa702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa700));
        EXPECT(0x7b, gbc.readMem(0xa701));
        // CB 7B 0250
        gbc.setState(0xc40, 0xdca7, 0xa930, 0x935d, 0x5c75, 0xf8d, 0x1, 0x0);
        gbc.writeMem(0xc40, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdca7, gbc.sp());
        EXPECT(0xc42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0251
        gbc.setState(0xe620, 0x67e3, 0x7eb0, 0x9b9d, 0xbe4e, 0xccde, 0x1, 0x0);
        gbc.writeMem(0xe620, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x67e3, gbc.sp());
        EXPECT(0xe622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe620));
        EXPECT(0x7b, gbc.readMem(0xe621));
        // CB 7B 0252
        gbc.setState(0xcfc5, 0xda77, 0x31f0, 0xfc19, 0x4e7, 0x2297, 0x1, 0x0);
        gbc.writeMem(0xcfc5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xda77, gbc.sp());
        EXPECT(0xcfc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc5));
        EXPECT(0x7b, gbc.readMem(0xcfc6));
        // CB 7B 0253
        gbc.setState(0xbced, 0x6592, 0xa70, 0xbc3d, 0xf10a, 0x5d28, 0x1, 0x1);
        gbc.writeMem(0xbced, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6592, gbc.sp());
        EXPECT(0xbcef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbced));
        EXPECT(0x7b, gbc.readMem(0xbcee));
        // CB 7B 0254
        gbc.setState(0x9fc0, 0x5a84, 0x5210, 0xeb78, 0x39d7, 0xa1f4, 0x0, 0x0);
        gbc.writeMem(0x9fc0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5a84, gbc.sp());
        EXPECT(0x9fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc0));
        EXPECT(0x7b, gbc.readMem(0x9fc1));
        // CB 7B 0255
        gbc.setState(0x1531, 0x457b, 0x8240, 0xf14c, 0xe112, 0x5c47, 0x0, 0x0);
        gbc.writeMem(0x1531, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x457b, gbc.sp());
        EXPECT(0x1533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0256
        gbc.setState(0xdb00, 0x5a76, 0xb5e0, 0x5da5, 0x1cfd, 0xd47, 0x1, 0x1);
        gbc.writeMem(0xdb00, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5a76, gbc.sp());
        EXPECT(0xdb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb00));
        EXPECT(0x7b, gbc.readMem(0xdb01));
        // CB 7B 0257
        gbc.setState(0x1c0f, 0xf5d2, 0x40f0, 0x991, 0x2d89, 0x5705, 0x0, 0x1);
        gbc.writeMem(0x1c0f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf5d2, gbc.sp());
        EXPECT(0x1c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0258
        gbc.setState(0x29c9, 0x991b, 0xcf90, 0xad8, 0x64e9, 0x8380, 0x1, 0x1);
        gbc.writeMem(0x29c9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x991b, gbc.sp());
        EXPECT(0x29cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0259
        gbc.setState(0x3e38, 0xf8ed, 0x2290, 0x1a06, 0x3588, 0x2e08, 0x0, 0x1);
        gbc.writeMem(0x3e38, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf8ed, gbc.sp());
        EXPECT(0x3e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 025A
        gbc.setState(0x572e, 0xe52d, 0xd710, 0x2164, 0xef16, 0x9931, 0x0, 0x0);
        gbc.writeMem(0x572e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe52d, gbc.sp());
        EXPECT(0x5730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 025C
        gbc.setState(0xd1c7, 0xa53, 0x8460, 0x87bb, 0x172d, 0x4b99, 0x0, 0x0);
        gbc.writeMem(0xd1c7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa53, gbc.sp());
        EXPECT(0xd1c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c7));
        EXPECT(0x7b, gbc.readMem(0xd1c8));
        // CB 7B 025E
        gbc.setState(0x58e2, 0x4a05, 0x4390, 0x7c21, 0x169, 0x6f6d, 0x0, 0x0);
        gbc.writeMem(0x58e2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4a05, gbc.sp());
        EXPECT(0x58e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 025F
        gbc.setState(0x3715, 0x31a5, 0x8440, 0xf541, 0xf70e, 0xfea, 0x1, 0x0);
        gbc.writeMem(0x3715, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x31a5, gbc.sp());
        EXPECT(0x3717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0260
        gbc.setState(0x2458, 0x4e6a, 0xa0, 0xd011, 0xd2d7, 0xad79, 0x0, 0x1);
        gbc.writeMem(0x2458, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4e6a, gbc.sp());
        EXPECT(0x245a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0261
        gbc.setState(0xb4e4, 0x84f, 0xa470, 0x40e1, 0xa013, 0x307a, 0x0, 0x1);
        gbc.writeMem(0xb4e4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x84f, gbc.sp());
        EXPECT(0xb4e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e4));
        EXPECT(0x7b, gbc.readMem(0xb4e5));
        // CB 7B 0262
        gbc.setState(0x2b9b, 0x13cb, 0xfa30, 0x8468, 0xd8ff, 0x566, 0x0, 0x0);
        gbc.writeMem(0x2b9b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x13cb, gbc.sp());
        EXPECT(0x2b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0263
        gbc.setState(0x741d, 0x37d6, 0x3b00, 0xae6f, 0x72f2, 0xe337, 0x1, 0x1);
        gbc.writeMem(0x741d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x37d6, gbc.sp());
        EXPECT(0x741f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0264
        gbc.setState(0x6471, 0xf647, 0x1a10, 0x7a28, 0xc48c, 0xbf93, 0x1, 0x0);
        gbc.writeMem(0x6471, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf647, gbc.sp());
        EXPECT(0x6473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0265
        gbc.setState(0x315a, 0xa951, 0x63f0, 0x1b30, 0x3a58, 0xbd74, 0x0, 0x1);
        gbc.writeMem(0x315a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa951, gbc.sp());
        EXPECT(0x315c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0266
        gbc.setState(0xe64b, 0xce75, 0xd4c0, 0x55c7, 0x58c7, 0x7196, 0x1, 0x0);
        gbc.writeMem(0xe64b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xce75, gbc.sp());
        EXPECT(0xe64d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64b));
        EXPECT(0x7b, gbc.readMem(0xe64c));
        // CB 7B 0267
        gbc.setState(0x37be, 0x54e1, 0xa6d0, 0x80b1, 0xd27d, 0x488a, 0x0, 0x1);
        gbc.writeMem(0x37be, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x54e1, gbc.sp());
        EXPECT(0x37c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0268
        gbc.setState(0x8fbc, 0xd9d1, 0x1d0, 0x60e3, 0xb02f, 0x153e, 0x1, 0x0);
        gbc.writeMem(0x8fbc, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd9d1, gbc.sp());
        EXPECT(0x8fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fbc));
        EXPECT(0x7b, gbc.readMem(0x8fbd));
        // CB 7B 0269
        gbc.setState(0x967f, 0x79dc, 0xf520, 0x78, 0x7c29, 0xa39a, 0x1, 0x0);
        gbc.writeMem(0x967f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x79dc, gbc.sp());
        EXPECT(0x9681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x967f));
        EXPECT(0x7b, gbc.readMem(0x9680));
        // CB 7B 026A
        gbc.setState(0x2e71, 0x1fd2, 0xccd0, 0x78cc, 0xd5cb, 0x404, 0x1, 0x1);
        gbc.writeMem(0x2e71, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1fd2, gbc.sp());
        EXPECT(0x2e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 026B
        gbc.setState(0x3b1b, 0x445b, 0xcae0, 0x4f17, 0x6582, 0x3fcb, 0x0, 0x1);
        gbc.writeMem(0x3b1b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x445b, gbc.sp());
        EXPECT(0x3b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 026C
        gbc.setState(0x9759, 0x793d, 0x66b0, 0x9183, 0x5b7c, 0x3b04, 0x1, 0x0);
        gbc.writeMem(0x9759, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x793d, gbc.sp());
        EXPECT(0x975b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9759));
        EXPECT(0x7b, gbc.readMem(0x975a));
        // CB 7B 026D
        gbc.setState(0x53c0, 0x18cb, 0xc340, 0x5b60, 0x15e0, 0x88ce, 0x1, 0x0);
        gbc.writeMem(0x53c0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x18cb, gbc.sp());
        EXPECT(0x53c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 026E
        gbc.setState(0x8935, 0xeab6, 0x40f0, 0xdf07, 0x539e, 0x7823, 0x0, 0x0);
        gbc.writeMem(0x8935, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xeab6, gbc.sp());
        EXPECT(0x8937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8935));
        EXPECT(0x7b, gbc.readMem(0x8936));
        // CB 7B 026F
        gbc.setState(0x976d, 0x4dd6, 0x76d0, 0x476f, 0x7659, 0x2102, 0x0, 0x1);
        gbc.writeMem(0x976d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4dd6, gbc.sp());
        EXPECT(0x976f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x976d));
        EXPECT(0x7b, gbc.readMem(0x976e));
        // CB 7B 0270
        gbc.setState(0x53f6, 0x1466, 0x5620, 0x7080, 0x85b8, 0x385d, 0x1, 0x0);
        gbc.writeMem(0x53f6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1466, gbc.sp());
        EXPECT(0x53f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0271
        gbc.setState(0x62f8, 0x225c, 0x5a60, 0x5c41, 0xebdd, 0xc251, 0x0, 0x0);
        gbc.writeMem(0x62f8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x225c, gbc.sp());
        EXPECT(0x62fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0272
        gbc.setState(0x4c52, 0xf5c2, 0xacd0, 0xff56, 0x49f9, 0xd06f, 0x0, 0x0);
        gbc.writeMem(0x4c52, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf5c2, gbc.sp());
        EXPECT(0x4c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0273
        gbc.setState(0xcd89, 0x6644, 0xab0, 0xf6a9, 0xffec, 0x744a, 0x1, 0x1);
        gbc.writeMem(0xcd89, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6644, gbc.sp());
        EXPECT(0xcd8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd89));
        EXPECT(0x7b, gbc.readMem(0xcd8a));
        // CB 7B 0274
        gbc.setState(0x2ffa, 0x51dd, 0xee10, 0xc15b, 0x5073, 0xa7fe, 0x0, 0x1);
        gbc.writeMem(0x2ffa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x51dd, gbc.sp());
        EXPECT(0x2ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0275
        gbc.setState(0xc4db, 0xaeb1, 0x9120, 0x69cc, 0x630d, 0x86b8, 0x0, 0x1);
        gbc.writeMem(0xc4db, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xaeb1, gbc.sp());
        EXPECT(0xc4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4db));
        EXPECT(0x7b, gbc.readMem(0xc4dc));
        // CB 7B 0276
        gbc.setState(0xd5ff, 0x324d, 0x86d0, 0x73cf, 0x9d5b, 0xf63c, 0x0, 0x0);
        gbc.writeMem(0xd5ff, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x324d, gbc.sp());
        EXPECT(0xd601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ff));
        EXPECT(0x7b, gbc.readMem(0xd600));
        // CB 7B 0277
        gbc.setState(0xde96, 0x895, 0x6b10, 0x64cb, 0xa374, 0xd805, 0x0, 0x1);
        gbc.writeMem(0xde96, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x895, gbc.sp());
        EXPECT(0xde98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde96));
        EXPECT(0x7b, gbc.readMem(0xde97));
        // CB 7B 0278
        gbc.setState(0xabcc, 0x3fa9, 0x17f0, 0xcad, 0x3035, 0xf19d, 0x1, 0x0);
        gbc.writeMem(0xabcc, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3fa9, gbc.sp());
        EXPECT(0xabce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcc));
        EXPECT(0x7b, gbc.readMem(0xabcd));
        // CB 7B 0279
        gbc.setState(0xa8cb, 0x52a1, 0x9600, 0xc88e, 0x4fd8, 0x5132, 0x0, 0x0);
        gbc.writeMem(0xa8cb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x52a1, gbc.sp());
        EXPECT(0xa8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8cb));
        EXPECT(0x7b, gbc.readMem(0xa8cc));
        // CB 7B 027A
        gbc.setState(0xd47d, 0xf544, 0xc0e0, 0xcff0, 0x98c5, 0x8d0a, 0x0, 0x0);
        gbc.writeMem(0xd47d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf544, gbc.sp());
        EXPECT(0xd47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47d));
        EXPECT(0x7b, gbc.readMem(0xd47e));
        // CB 7B 027B
        gbc.setState(0x7b2f, 0x1008, 0x99f0, 0xfd7a, 0xbf07, 0x245d, 0x1, 0x1);
        gbc.writeMem(0x7b2f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1008, gbc.sp());
        EXPECT(0x7b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 027C
        gbc.setState(0xee10, 0x15e3, 0x56d0, 0x6174, 0x7892, 0x7e37, 0x0, 0x1);
        gbc.writeMem(0xee10, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x15e3, gbc.sp());
        EXPECT(0xee12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee10));
        EXPECT(0x7b, gbc.readMem(0xee11));
        // CB 7B 027D
        gbc.setState(0x6465, 0xeade, 0xa130, 0x68f2, 0x67be, 0xde27, 0x0, 0x1);
        gbc.writeMem(0x6465, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xeade, gbc.sp());
        EXPECT(0x6467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 027F
        gbc.setState(0xb617, 0xd6e2, 0x9120, 0xc2aa, 0xca5c, 0x7a6e, 0x1, 0x1);
        gbc.writeMem(0xb617, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd6e2, gbc.sp());
        EXPECT(0xb619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb617));
        EXPECT(0x7b, gbc.readMem(0xb618));
        // CB 7B 0280
        gbc.setState(0x2310, 0xffcd, 0xdb80, 0x15c4, 0x2b57, 0x49eb, 0x1, 0x0);
        gbc.writeMem(0x2310, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xffcd, gbc.sp());
        EXPECT(0x2312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0281
        gbc.setState(0xbaca, 0x5341, 0xde10, 0x83fd, 0xef89, 0x1f01, 0x0, 0x1);
        gbc.writeMem(0xbaca, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5341, gbc.sp());
        EXPECT(0xbacc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaca));
        EXPECT(0x7b, gbc.readMem(0xbacb));
        // CB 7B 0282
        gbc.setState(0x632a, 0x89f8, 0xe7b0, 0xc6cc, 0xa0d4, 0x7a0f, 0x0, 0x1);
        gbc.writeMem(0x632a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x89f8, gbc.sp());
        EXPECT(0x632c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0283
        gbc.setState(0x226c, 0x2ff0, 0xe290, 0xa25, 0x5c51, 0xa846, 0x1, 0x0);
        gbc.writeMem(0x226c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2ff0, gbc.sp());
        EXPECT(0x226e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0284
        gbc.setState(0x6915, 0x8c87, 0xf3f0, 0xc1c6, 0x4894, 0x86ed, 0x0, 0x0);
        gbc.writeMem(0x6915, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8c87, gbc.sp());
        EXPECT(0x6917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0285
        gbc.setState(0xe8c8, 0x99a, 0x77b0, 0x3719, 0x9cf6, 0xd492, 0x1, 0x0);
        gbc.writeMem(0xe8c8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x99a, gbc.sp());
        EXPECT(0xe8ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c8));
        EXPECT(0x7b, gbc.readMem(0xe8c9));
        // CB 7B 0286
        gbc.setState(0x45d6, 0x7cc6, 0xc580, 0xccbb, 0xd317, 0x4042, 0x0, 0x1);
        gbc.writeMem(0x45d6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7cc6, gbc.sp());
        EXPECT(0x45d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0287
        gbc.setState(0xa543, 0x1894, 0x5080, 0xe150, 0x7b2a, 0xf02f, 0x0, 0x1);
        gbc.writeMem(0xa543, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1894, gbc.sp());
        EXPECT(0xa545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa543));
        EXPECT(0x7b, gbc.readMem(0xa544));
        // CB 7B 0288
        gbc.setState(0x2546, 0xfa8a, 0x6c0, 0x2030, 0x7d58, 0x7daf, 0x1, 0x1);
        gbc.writeMem(0x2546, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfa8a, gbc.sp());
        EXPECT(0x2548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0289
        gbc.setState(0x6b07, 0xd343, 0xab70, 0xfa57, 0xa461, 0x37e6, 0x0, 0x1);
        gbc.writeMem(0x6b07, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd343, gbc.sp());
        EXPECT(0x6b09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 028A
        gbc.setState(0xdb55, 0x944, 0x7f40, 0x5451, 0xfce3, 0x6215, 0x1, 0x1);
        gbc.writeMem(0xdb55, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x944, gbc.sp());
        EXPECT(0xdb57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb55));
        EXPECT(0x7b, gbc.readMem(0xdb56));
        // CB 7B 028B
        gbc.setState(0x41bc, 0xb100, 0x9960, 0x54e3, 0x21dc, 0xe457, 0x1, 0x0);
        gbc.writeMem(0x41bc, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb100, gbc.sp());
        EXPECT(0x41be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 028C
        gbc.setState(0x5554, 0x4234, 0x5880, 0x7855, 0x972e, 0x344, 0x0, 0x0);
        gbc.writeMem(0x5554, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4234, gbc.sp());
        EXPECT(0x5556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 028D
        gbc.setState(0x2bd0, 0x8017, 0x7a0, 0xfde5, 0x454a, 0xf16a, 0x1, 0x1);
        gbc.writeMem(0x2bd0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8017, gbc.sp());
        EXPECT(0x2bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 028E
        gbc.setState(0x9291, 0xc6c7, 0x7100, 0xaa69, 0x4b6a, 0xbf1c, 0x1, 0x1);
        gbc.writeMem(0x9291, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc6c7, gbc.sp());
        EXPECT(0x9293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9291));
        EXPECT(0x7b, gbc.readMem(0x9292));
        // CB 7B 028F
        gbc.setState(0x9688, 0xecf3, 0xbfd0, 0x6b72, 0xbe38, 0x5332, 0x1, 0x1);
        gbc.writeMem(0x9688, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xecf3, gbc.sp());
        EXPECT(0x968a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9688));
        EXPECT(0x7b, gbc.readMem(0x9689));
        // CB 7B 0290
        gbc.setState(0x33a, 0xbe3e, 0x1bd0, 0xde5e, 0x3b9, 0x726e, 0x1, 0x1);
        gbc.writeMem(0x33a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbe3e, gbc.sp());
        EXPECT(0x33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0291
        gbc.setState(0x8fbd, 0x6472, 0x8f80, 0xcce6, 0x59cd, 0xd75, 0x1, 0x1);
        gbc.writeMem(0x8fbd, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6472, gbc.sp());
        EXPECT(0x8fbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fbd));
        EXPECT(0x7b, gbc.readMem(0x8fbe));
        // CB 7B 0292
        gbc.setState(0x5d05, 0xefff, 0x9270, 0xb4ce, 0xf1ca, 0xd55, 0x1, 0x0);
        gbc.writeMem(0x5d05, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xefff, gbc.sp());
        EXPECT(0x5d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0293
        gbc.setState(0x245a, 0xd757, 0xaa80, 0xe138, 0xc647, 0x6f7a, 0x0, 0x0);
        gbc.writeMem(0x245a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd757, gbc.sp());
        EXPECT(0x245c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0294
        gbc.setState(0xde84, 0x5e56, 0xa730, 0x4ef, 0xae93, 0x1a88, 0x0, 0x1);
        gbc.writeMem(0xde84, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5e56, gbc.sp());
        EXPECT(0xde86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde84));
        EXPECT(0x7b, gbc.readMem(0xde85));
        // CB 7B 0295
        gbc.setState(0xad5e, 0xfee4, 0xf670, 0x6fa0, 0x299, 0x95bd, 0x0, 0x0);
        gbc.writeMem(0xad5e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfee4, gbc.sp());
        EXPECT(0xad60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad5e));
        EXPECT(0x7b, gbc.readMem(0xad5f));
        // CB 7B 0296
        gbc.setState(0x21a1, 0x37b1, 0xdc80, 0x51d, 0x58d1, 0x2334, 0x1, 0x0);
        gbc.writeMem(0x21a1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x37b1, gbc.sp());
        EXPECT(0x21a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0297
        gbc.setState(0x6b49, 0xfa0a, 0x6440, 0x566a, 0x1b1a, 0xc624, 0x0, 0x0);
        gbc.writeMem(0x6b49, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfa0a, gbc.sp());
        EXPECT(0x6b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0298
        gbc.setState(0xeadb, 0xba3d, 0xe530, 0x9d2c, 0x4412, 0x5220, 0x0, 0x0);
        gbc.writeMem(0xeadb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xba3d, gbc.sp());
        EXPECT(0xeadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeadb));
        EXPECT(0x7b, gbc.readMem(0xeadc));
        // CB 7B 0299
        gbc.setState(0xa175, 0x4154, 0x2280, 0x9b8f, 0x2a94, 0x6ebc, 0x0, 0x1);
        gbc.writeMem(0xa175, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4154, gbc.sp());
        EXPECT(0xa177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa175));
        EXPECT(0x7b, gbc.readMem(0xa176));
        // CB 7B 029A
        gbc.setState(0x7577, 0x5f55, 0xff00, 0xf71f, 0x63eb, 0x94fe, 0x1, 0x1);
        gbc.writeMem(0x7577, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5f55, gbc.sp());
        EXPECT(0x7579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 029B
        gbc.setState(0xc2e3, 0x7eff, 0x34b0, 0xa4c3, 0xbfb2, 0x5fb3, 0x0, 0x1);
        gbc.writeMem(0xc2e3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7eff, gbc.sp());
        EXPECT(0xc2e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e3));
        EXPECT(0x7b, gbc.readMem(0xc2e4));
        // CB 7B 029C
        gbc.setState(0x18fe, 0x29ae, 0x1960, 0x4f05, 0x96de, 0x3b58, 0x0, 0x0);
        gbc.writeMem(0x18fe, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x29ae, gbc.sp());
        EXPECT(0x1900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 029D
        gbc.setState(0x922c, 0xfaeb, 0x5a60, 0x380d, 0x3b3d, 0xab14, 0x0, 0x0);
        gbc.writeMem(0x922c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfaeb, gbc.sp());
        EXPECT(0x922e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922c));
        EXPECT(0x7b, gbc.readMem(0x922d));
        // CB 7B 029E
        gbc.setState(0x58db, 0xe89f, 0x2d0, 0x6d8d, 0xc1db, 0x9bb3, 0x1, 0x0);
        gbc.writeMem(0x58db, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe89f, gbc.sp());
        EXPECT(0x58dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 029F
        gbc.setState(0x1606, 0x944e, 0x54d0, 0x2759, 0xff95, 0x3acb, 0x0, 0x0);
        gbc.writeMem(0x1606, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x944e, gbc.sp());
        EXPECT(0x1608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02A0
        gbc.setState(0xaa28, 0x64ec, 0x5fc0, 0x3463, 0x7c94, 0x9f2f, 0x0, 0x0);
        gbc.writeMem(0xaa28, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x64ec, gbc.sp());
        EXPECT(0xaa2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa28));
        EXPECT(0x7b, gbc.readMem(0xaa29));
        // CB 7B 02A1
        gbc.setState(0x933e, 0x135c, 0xe340, 0xa034, 0x41dc, 0x2674, 0x1, 0x1);
        gbc.writeMem(0x933e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x135c, gbc.sp());
        EXPECT(0x9340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x933e));
        EXPECT(0x7b, gbc.readMem(0x933f));
        // CB 7B 02A3
        gbc.setState(0x8a1c, 0x6e52, 0x3cb0, 0x75ec, 0xb551, 0xd5d1, 0x1, 0x1);
        gbc.writeMem(0x8a1c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6e52, gbc.sp());
        EXPECT(0x8a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1c));
        EXPECT(0x7b, gbc.readMem(0x8a1d));
        // CB 7B 02A4
        gbc.setState(0xd1a0, 0x692, 0x7e0, 0xe7a1, 0x4f60, 0x335d, 0x0, 0x0);
        gbc.writeMem(0xd1a0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x692, gbc.sp());
        EXPECT(0xd1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a0));
        EXPECT(0x7b, gbc.readMem(0xd1a1));
        // CB 7B 02A5
        gbc.setState(0x753b, 0xd0c2, 0x90, 0x128c, 0x1efc, 0xfaf4, 0x0, 0x0);
        gbc.writeMem(0x753b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd0c2, gbc.sp());
        EXPECT(0x753d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02A6
        gbc.setState(0x1d96, 0xc3e2, 0x6aa0, 0x278e, 0x52cd, 0x1bc1, 0x0, 0x0);
        gbc.writeMem(0x1d96, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc3e2, gbc.sp());
        EXPECT(0x1d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02A7
        gbc.setState(0xf00, 0x6bcc, 0xef30, 0x1085, 0xd958, 0x765e, 0x1, 0x0);
        gbc.writeMem(0xf00, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6bcc, gbc.sp());
        EXPECT(0xf02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02A8
        gbc.setState(0x6b6f, 0xb5a0, 0xe00, 0x4a6b, 0xe0b1, 0xf722, 0x1, 0x0);
        gbc.writeMem(0x6b6f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb5a0, gbc.sp());
        EXPECT(0x6b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02A9
        gbc.setState(0x26b5, 0x5830, 0xaf60, 0x7c42, 0xeb85, 0x5f43, 0x1, 0x1);
        gbc.writeMem(0x26b5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5830, gbc.sp());
        EXPECT(0x26b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02AA
        gbc.setState(0x468d, 0x5f3b, 0xe670, 0x3e76, 0xd119, 0x518a, 0x1, 0x0);
        gbc.writeMem(0x468d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5f3b, gbc.sp());
        EXPECT(0x468f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02AB
        gbc.setState(0x9a99, 0xb902, 0xf740, 0xb711, 0x9f01, 0xc62f, 0x1, 0x1);
        gbc.writeMem(0x9a99, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb902, gbc.sp());
        EXPECT(0x9a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a99));
        EXPECT(0x7b, gbc.readMem(0x9a9a));
        // CB 7B 02AC
        gbc.setState(0x78f2, 0xb88c, 0xa3b0, 0x5eee, 0x4104, 0x5891, 0x1, 0x0);
        gbc.writeMem(0x78f2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb88c, gbc.sp());
        EXPECT(0x78f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02AD
        gbc.setState(0xc6ab, 0x7db7, 0x5320, 0xcf04, 0x23ab, 0x7001, 0x1, 0x0);
        gbc.writeMem(0xc6ab, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7db7, gbc.sp());
        EXPECT(0xc6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ab));
        EXPECT(0x7b, gbc.readMem(0xc6ac));
        // CB 7B 02AE
        gbc.setState(0x6781, 0x156, 0x48f0, 0xdbd5, 0x4616, 0xe5c0, 0x1, 0x1);
        gbc.writeMem(0x6781, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x156, gbc.sp());
        EXPECT(0x6783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02AF
        gbc.setState(0x7bd3, 0x792, 0x2bf0, 0x4585, 0x8232, 0x3220, 0x0, 0x0);
        gbc.writeMem(0x7bd3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x792, gbc.sp());
        EXPECT(0x7bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02B0
        gbc.setState(0xe953, 0xd560, 0xafc0, 0xbca1, 0x5e71, 0xafe6, 0x0, 0x0);
        gbc.writeMem(0xe953, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd560, gbc.sp());
        EXPECT(0xe955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe953));
        EXPECT(0x7b, gbc.readMem(0xe954));
        // CB 7B 02B1
        gbc.setState(0x6028, 0x3ea7, 0xd080, 0x3f43, 0x54a, 0xa891, 0x1, 0x1);
        gbc.writeMem(0x6028, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3ea7, gbc.sp());
        EXPECT(0x602a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02B2
        gbc.setState(0xe253, 0x35e6, 0xbd00, 0xbb5c, 0x55bc, 0x2931, 0x1, 0x0);
        gbc.writeMem(0xe253, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x35e6, gbc.sp());
        EXPECT(0xe255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe253));
        EXPECT(0x7b, gbc.readMem(0xe254));
        // CB 7B 02B3
        gbc.setState(0x97b8, 0x828b, 0x5cf0, 0x2094, 0xac4, 0x8515, 0x1, 0x0);
        gbc.writeMem(0x97b8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x828b, gbc.sp());
        EXPECT(0x97ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b8));
        EXPECT(0x7b, gbc.readMem(0x97b9));
        // CB 7B 02B4
        gbc.setState(0xb1af, 0xc168, 0xc7f0, 0x4e68, 0x2244, 0x39bd, 0x0, 0x0);
        gbc.writeMem(0xb1af, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc168, gbc.sp());
        EXPECT(0xb1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1af));
        EXPECT(0x7b, gbc.readMem(0xb1b0));
        // CB 7B 02B5
        gbc.setState(0xc688, 0xe1ac, 0x44d0, 0xbc8a, 0x2979, 0x81c0, 0x0, 0x0);
        gbc.writeMem(0xc688, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe1ac, gbc.sp());
        EXPECT(0xc68a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc688));
        EXPECT(0x7b, gbc.readMem(0xc689));
        // CB 7B 02B7
        gbc.setState(0x516, 0xfd9c, 0xb9e0, 0xd74, 0x60c4, 0x9388, 0x1, 0x0);
        gbc.writeMem(0x516, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfd9c, gbc.sp());
        EXPECT(0x518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02B8
        gbc.setState(0xc9e0, 0xc320, 0x4c60, 0x8d51, 0x8589, 0xf264, 0x0, 0x0);
        gbc.writeMem(0xc9e0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc320, gbc.sp());
        EXPECT(0xc9e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e0));
        EXPECT(0x7b, gbc.readMem(0xc9e1));
        // CB 7B 02B9
        gbc.setState(0x2f43, 0x9883, 0x1860, 0x6c4b, 0x9a2a, 0x876, 0x1, 0x0);
        gbc.writeMem(0x2f43, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9883, gbc.sp());
        EXPECT(0x2f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02BA
        gbc.setState(0x5f6a, 0xbd55, 0xf390, 0xf94a, 0xce0c, 0x4a02, 0x1, 0x1);
        gbc.writeMem(0x5f6a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbd55, gbc.sp());
        EXPECT(0x5f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02BB
        gbc.setState(0x74e5, 0xf0eb, 0xfa20, 0x56ff, 0x4a67, 0xeb2, 0x0, 0x1);
        gbc.writeMem(0x74e5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf0eb, gbc.sp());
        EXPECT(0x74e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02BC
        gbc.setState(0x8c33, 0x34c4, 0x9830, 0xdb74, 0x13a, 0xac7a, 0x0, 0x1);
        gbc.writeMem(0x8c33, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x34c4, gbc.sp());
        EXPECT(0x8c35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c33));
        EXPECT(0x7b, gbc.readMem(0x8c34));
        // CB 7B 02BD
        gbc.setState(0xe3a3, 0xe343, 0x12f0, 0xd7a9, 0xfa6c, 0x7337, 0x0, 0x1);
        gbc.writeMem(0xe3a3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe343, gbc.sp());
        EXPECT(0xe3a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a3));
        EXPECT(0x7b, gbc.readMem(0xe3a4));
        // CB 7B 02BE
        gbc.setState(0xb7f8, 0x436e, 0x22e0, 0xf144, 0xffc6, 0x3865, 0x0, 0x1);
        gbc.writeMem(0xb7f8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x436e, gbc.sp());
        EXPECT(0xb7fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f8));
        EXPECT(0x7b, gbc.readMem(0xb7f9));
        // CB 7B 02BF
        gbc.setState(0x2dfe, 0x8428, 0xfd60, 0x5783, 0xb4f5, 0x355a, 0x0, 0x0);
        gbc.writeMem(0x2dfe, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8428, gbc.sp());
        EXPECT(0x2e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02C0
        gbc.setState(0x54d6, 0xd098, 0x9b90, 0xe9d7, 0xb8e, 0xb0f, 0x1, 0x1);
        gbc.writeMem(0x54d6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd098, gbc.sp());
        EXPECT(0x54d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02C1
        gbc.setState(0x1bba, 0x9f45, 0xb050, 0xdb8a, 0xe98a, 0xb202, 0x0, 0x0);
        gbc.writeMem(0x1bba, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9f45, gbc.sp());
        EXPECT(0x1bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02C2
        gbc.setState(0x111e, 0x688e, 0xe9c0, 0x112f, 0x4313, 0x8655, 0x0, 0x1);
        gbc.writeMem(0x111e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x688e, gbc.sp());
        EXPECT(0x1120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02C3
        gbc.setState(0x43bc, 0xcaf5, 0xbef0, 0xd5d7, 0x9ae5, 0x6bdc, 0x1, 0x1);
        gbc.writeMem(0x43bc, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcaf5, gbc.sp());
        EXPECT(0x43be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02C4
        gbc.setState(0xa6ed, 0xa46b, 0xb3c0, 0xc4a7, 0xf63, 0xa80f, 0x0, 0x1);
        gbc.writeMem(0xa6ed, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa46b, gbc.sp());
        EXPECT(0xa6ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ed));
        EXPECT(0x7b, gbc.readMem(0xa6ee));
        // CB 7B 02C6
        gbc.setState(0x1e8c, 0x9a0e, 0x3bb0, 0x48bc, 0xb97, 0x3700, 0x0, 0x1);
        gbc.writeMem(0x1e8c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9a0e, gbc.sp());
        EXPECT(0x1e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02C7
        gbc.setState(0x40a, 0x64b6, 0xcff0, 0x6a8, 0xeefc, 0x4412, 0x1, 0x0);
        gbc.writeMem(0x40a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x64b6, gbc.sp());
        EXPECT(0x40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02C8
        gbc.setState(0x28bd, 0xa8b1, 0xc0, 0xa728, 0xad90, 0x8f59, 0x1, 0x1);
        gbc.writeMem(0x28bd, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa8b1, gbc.sp());
        EXPECT(0x28bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02C9
        gbc.setState(0xf19, 0xe26b, 0xd340, 0x31fa, 0x9572, 0x4905, 0x0, 0x0);
        gbc.writeMem(0xf19, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe26b, gbc.sp());
        EXPECT(0xf1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02CA
        gbc.setState(0x1ce7, 0xa46, 0x3060, 0x18ae, 0x46c8, 0x75d0, 0x0, 0x1);
        gbc.writeMem(0x1ce7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa46, gbc.sp());
        EXPECT(0x1ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02CB
        gbc.setState(0xe0d5, 0xb7bb, 0x7500, 0x7941, 0x1039, 0xe147, 0x0, 0x1);
        gbc.writeMem(0xe0d5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb7bb, gbc.sp());
        EXPECT(0xe0d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d5));
        EXPECT(0x7b, gbc.readMem(0xe0d6));
        // CB 7B 02CC
        gbc.setState(0x43c2, 0x3df0, 0x8440, 0xac4c, 0x915, 0x135c, 0x0, 0x1);
        gbc.writeMem(0x43c2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3df0, gbc.sp());
        EXPECT(0x43c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02CD
        gbc.setState(0x533e, 0xd950, 0x7f90, 0xb2f6, 0xca2d, 0xf2f4, 0x0, 0x0);
        gbc.writeMem(0x533e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd950, gbc.sp());
        EXPECT(0x5340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02CE
        gbc.setState(0x98ae, 0xd7f3, 0xd340, 0x90bb, 0x804a, 0x4b9b, 0x1, 0x0);
        gbc.writeMem(0x98ae, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd7f3, gbc.sp());
        EXPECT(0x98b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ae));
        EXPECT(0x7b, gbc.readMem(0x98af));
        // CB 7B 02D0
        gbc.setState(0xbfe5, 0x8517, 0xe5f0, 0xaa7b, 0xc097, 0x96b9, 0x0, 0x0);
        gbc.writeMem(0xbfe5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8517, gbc.sp());
        EXPECT(0xbfe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe5));
        EXPECT(0x7b, gbc.readMem(0xbfe6));
        // CB 7B 02D1
        gbc.setState(0xbee6, 0x9348, 0xfcd0, 0x76cd, 0x5f42, 0xd777, 0x0, 0x0);
        gbc.writeMem(0xbee6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9348, gbc.sp());
        EXPECT(0xbee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee6));
        EXPECT(0x7b, gbc.readMem(0xbee7));
        // CB 7B 02D2
        gbc.setState(0x2422, 0xf452, 0xade0, 0xfccd, 0x2d3, 0xc7df, 0x1, 0x0);
        gbc.writeMem(0x2422, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf452, gbc.sp());
        EXPECT(0x2424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02D3
        gbc.setState(0xeef4, 0xecfc, 0x3a20, 0xe38d, 0x64d2, 0x4e00, 0x0, 0x0);
        gbc.writeMem(0xeef4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xecfc, gbc.sp());
        EXPECT(0xeef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef4));
        EXPECT(0x7b, gbc.readMem(0xeef5));
        // CB 7B 02D4
        gbc.setState(0xee48, 0x2741, 0xb010, 0xbddb, 0xa7a1, 0xccf5, 0x0, 0x0);
        gbc.writeMem(0xee48, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2741, gbc.sp());
        EXPECT(0xee4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee48));
        EXPECT(0x7b, gbc.readMem(0xee49));
        // CB 7B 02D5
        gbc.setState(0x22a4, 0x6a0b, 0xfa30, 0x2062, 0xa4c0, 0xe671, 0x1, 0x0);
        gbc.writeMem(0x22a4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6a0b, gbc.sp());
        EXPECT(0x22a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02D6
        gbc.setState(0x1fc0, 0x5162, 0xc7d0, 0x755b, 0x161e, 0x4f2e, 0x0, 0x0);
        gbc.writeMem(0x1fc0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5162, gbc.sp());
        EXPECT(0x1fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02D7
        gbc.setState(0x50a, 0xc491, 0x10e0, 0x2cf1, 0x823e, 0xcf1f, 0x0, 0x0);
        gbc.writeMem(0x50a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc491, gbc.sp());
        EXPECT(0x50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02D8
        gbc.setState(0xc7fb, 0x9bff, 0xb150, 0xad46, 0xe061, 0x958d, 0x0, 0x0);
        gbc.writeMem(0xc7fb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9bff, gbc.sp());
        EXPECT(0xc7fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7fb));
        EXPECT(0x7b, gbc.readMem(0xc7fc));
        // CB 7B 02D9
        gbc.setState(0x2426, 0x26ca, 0x9280, 0xd6e9, 0xafad, 0x33c2, 0x1, 0x0);
        gbc.writeMem(0x2426, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x26ca, gbc.sp());
        EXPECT(0x2428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02DA
        gbc.setState(0x3a83, 0x575, 0xf260, 0xbb74, 0xf0ef, 0x4626, 0x0, 0x1);
        gbc.writeMem(0x3a83, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x575, gbc.sp());
        EXPECT(0x3a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02DB
        gbc.setState(0x6cbd, 0xa657, 0x4880, 0x6ab9, 0x83a6, 0xa138, 0x1, 0x1);
        gbc.writeMem(0x6cbd, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa657, gbc.sp());
        EXPECT(0x6cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02DC
        gbc.setState(0x2772, 0xfd5c, 0x1740, 0x18f8, 0xf7f7, 0x2b3e, 0x0, 0x0);
        gbc.writeMem(0x2772, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfd5c, gbc.sp());
        EXPECT(0x2774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02DD
        gbc.setState(0x1aba, 0x4246, 0x20a0, 0x2ff7, 0xcb37, 0xfa98, 0x1, 0x1);
        gbc.writeMem(0x1aba, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4246, gbc.sp());
        EXPECT(0x1abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02DE
        gbc.setState(0xe1fb, 0x29fa, 0x4300, 0x8292, 0x6eb4, 0x382e, 0x1, 0x0);
        gbc.writeMem(0xe1fb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x29fa, gbc.sp());
        EXPECT(0xe1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1fb));
        EXPECT(0x7b, gbc.readMem(0xe1fc));
        // CB 7B 02DF
        gbc.setState(0xecfa, 0x8b13, 0x57f0, 0x6244, 0x8657, 0x8dd2, 0x1, 0x1);
        gbc.writeMem(0xecfa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8b13, gbc.sp());
        EXPECT(0xecfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecfa));
        EXPECT(0x7b, gbc.readMem(0xecfb));
        // CB 7B 02E0
        gbc.setState(0xde79, 0xb71f, 0xda70, 0x638c, 0xe3bc, 0xc24c, 0x0, 0x0);
        gbc.writeMem(0xde79, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb71f, gbc.sp());
        EXPECT(0xde7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde79));
        EXPECT(0x7b, gbc.readMem(0xde7a));
        // CB 7B 02E1
        gbc.setState(0x1c10, 0x9a24, 0x6b80, 0x54b9, 0xbaff, 0xbe5c, 0x1, 0x0);
        gbc.writeMem(0x1c10, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9a24, gbc.sp());
        EXPECT(0x1c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02E2
        gbc.setState(0x7746, 0x96a0, 0x5610, 0xea4, 0xd6a2, 0xad53, 0x1, 0x0);
        gbc.writeMem(0x7746, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x96a0, gbc.sp());
        EXPECT(0x7748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02E3
        gbc.setState(0x2b33, 0x9a69, 0xf8e0, 0xb9a4, 0x46d5, 0xbcdf, 0x1, 0x1);
        gbc.writeMem(0x2b33, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9a69, gbc.sp());
        EXPECT(0x2b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02E4
        gbc.setState(0x193e, 0x915e, 0xcc20, 0x7383, 0x6bb9, 0x82e0, 0x0, 0x1);
        gbc.writeMem(0x193e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x915e, gbc.sp());
        EXPECT(0x1940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02E5
        gbc.setState(0xd69e, 0x2f51, 0x2390, 0x232c, 0x4747, 0xf886, 0x1, 0x1);
        gbc.writeMem(0xd69e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2f51, gbc.sp());
        EXPECT(0xd6a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69e));
        EXPECT(0x7b, gbc.readMem(0xd69f));
        // CB 7B 02E6
        gbc.setState(0x245d, 0x6efa, 0xc030, 0x9dc7, 0x4d46, 0xf274, 0x0, 0x0);
        gbc.writeMem(0x245d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6efa, gbc.sp());
        EXPECT(0x245f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02E7
        gbc.setState(0xe2f4, 0x4364, 0x2bf0, 0x9ebe, 0x6ff2, 0x4858, 0x0, 0x0);
        gbc.writeMem(0xe2f4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4364, gbc.sp());
        EXPECT(0xe2f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2f4));
        EXPECT(0x7b, gbc.readMem(0xe2f5));
        // CB 7B 02E8
        gbc.setState(0x6217, 0xe4b2, 0xcb90, 0x15c1, 0xb88, 0x1382, 0x0, 0x0);
        gbc.writeMem(0x6217, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe4b2, gbc.sp());
        EXPECT(0x6219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02E9
        gbc.setState(0xcdd2, 0x4e1d, 0x2830, 0x69c2, 0x728a, 0x8adb, 0x0, 0x0);
        gbc.writeMem(0xcdd2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4e1d, gbc.sp());
        EXPECT(0xcdd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd2));
        EXPECT(0x7b, gbc.readMem(0xcdd3));
        // CB 7B 02EA
        gbc.setState(0xe4e9, 0xa118, 0x7f00, 0x35d4, 0x36dc, 0xd9fb, 0x0, 0x0);
        gbc.writeMem(0xe4e9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa118, gbc.sp());
        EXPECT(0xe4eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e9));
        EXPECT(0x7b, gbc.readMem(0xe4ea));
        // CB 7B 02EC
        gbc.setState(0x5d95, 0x2c9d, 0x6cb0, 0xd83c, 0xfe8a, 0xeaa0, 0x1, 0x0);
        gbc.writeMem(0x5d95, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2c9d, gbc.sp());
        EXPECT(0x5d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02ED
        gbc.setState(0xb3df, 0x5337, 0x7de0, 0x53fe, 0xe1a7, 0x7e70, 0x0, 0x1);
        gbc.writeMem(0xb3df, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5337, gbc.sp());
        EXPECT(0xb3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3df));
        EXPECT(0x7b, gbc.readMem(0xb3e0));
        // CB 7B 02EE
        gbc.setState(0x8e26, 0x2033, 0xb8b0, 0xc625, 0x1c2e, 0x2bdf, 0x0, 0x0);
        gbc.writeMem(0x8e26, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2033, gbc.sp());
        EXPECT(0x8e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e26));
        EXPECT(0x7b, gbc.readMem(0x8e27));
        // CB 7B 02EF
        gbc.setState(0x5db6, 0x3013, 0x6640, 0x8a53, 0x4619, 0xad90, 0x0, 0x1);
        gbc.writeMem(0x5db6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3013, gbc.sp());
        EXPECT(0x5db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02F0
        gbc.setState(0xc575, 0xf3fc, 0x67f0, 0xda31, 0x8e4d, 0x789e, 0x1, 0x1);
        gbc.writeMem(0xc575, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf3fc, gbc.sp());
        EXPECT(0xc577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc575));
        EXPECT(0x7b, gbc.readMem(0xc576));
        // CB 7B 02F1
        gbc.setState(0xa5ed, 0x662f, 0xe0b0, 0x9546, 0xa4f5, 0x6595, 0x1, 0x1);
        gbc.writeMem(0xa5ed, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x662f, gbc.sp());
        EXPECT(0xa5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ed));
        EXPECT(0x7b, gbc.readMem(0xa5ee));
        // CB 7B 02F2
        gbc.setState(0x6efe, 0x639c, 0xaaf0, 0xcaf6, 0xafcc, 0x389f, 0x1, 0x0);
        gbc.writeMem(0x6efe, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x639c, gbc.sp());
        EXPECT(0x6f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02F4
        gbc.setState(0x17db, 0xc1d2, 0x53d0, 0xc3ca, 0x914, 0xff9d, 0x0, 0x1);
        gbc.writeMem(0x17db, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc1d2, gbc.sp());
        EXPECT(0x17dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02F5
        gbc.setState(0x7023, 0x76ff, 0x8c00, 0xd61b, 0x5142, 0xc121, 0x1, 0x0);
        gbc.writeMem(0x7023, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x76ff, gbc.sp());
        EXPECT(0x7025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02F6
        gbc.setState(0x7a4b, 0x8020, 0xf4f0, 0xc7e, 0xfb03, 0x2563, 0x0, 0x0);
        gbc.writeMem(0x7a4b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8020, gbc.sp());
        EXPECT(0x7a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02F7
        gbc.setState(0x741, 0x5efa, 0x8370, 0xed17, 0x4fce, 0xbd44, 0x0, 0x1);
        gbc.writeMem(0x741, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5efa, gbc.sp());
        EXPECT(0x743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 02F8
        gbc.setState(0x1cb4, 0xd158, 0xed80, 0x71e0, 0xc16c, 0x1adb, 0x1, 0x1);
        gbc.writeMem(0x1cb4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd158, gbc.sp());
        EXPECT(0x1cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 02F9
        gbc.setState(0xd45a, 0x3fd4, 0x6b0, 0x1a20, 0x6285, 0x85bf, 0x1, 0x1);
        gbc.writeMem(0xd45a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3fd4, gbc.sp());
        EXPECT(0xd45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd45a));
        EXPECT(0x7b, gbc.readMem(0xd45b));
        // CB 7B 02FA
        gbc.setState(0xc9f4, 0xf56c, 0x90e0, 0xbf4a, 0x16b8, 0x4836, 0x1, 0x1);
        gbc.writeMem(0xc9f4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf56c, gbc.sp());
        EXPECT(0xc9f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f4));
        EXPECT(0x7b, gbc.readMem(0xc9f5));
        // CB 7B 02FB
        gbc.setState(0xb54a, 0x3581, 0x9af0, 0x9eb8, 0xe224, 0x728b, 0x0, 0x0);
        gbc.writeMem(0xb54a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3581, gbc.sp());
        EXPECT(0xb54c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54a));
        EXPECT(0x7b, gbc.readMem(0xb54b));
        // CB 7B 02FC
        gbc.setState(0x129b, 0x132f, 0xb1e0, 0xf608, 0x7eef, 0x2cc, 0x0, 0x1);
        gbc.writeMem(0x129b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x132f, gbc.sp());
        EXPECT(0x129d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0300
        gbc.setState(0xc4b4, 0x85b7, 0x58f0, 0x3c3d, 0x5679, 0xe676, 0x1, 0x0);
        gbc.writeMem(0xc4b4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x85b7, gbc.sp());
        EXPECT(0xc4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b4));
        EXPECT(0x7b, gbc.readMem(0xc4b5));
        // CB 7B 0301
        gbc.setState(0x3df2, 0x6598, 0x5790, 0x3056, 0xd8d5, 0xd8fc, 0x1, 0x1);
        gbc.writeMem(0x3df2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6598, gbc.sp());
        EXPECT(0x3df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0302
        gbc.setState(0xebbc, 0x2dc1, 0x1df0, 0x982d, 0x348c, 0xa797, 0x0, 0x1);
        gbc.writeMem(0xebbc, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2dc1, gbc.sp());
        EXPECT(0xebbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebbc));
        EXPECT(0x7b, gbc.readMem(0xebbd));
        // CB 7B 0303
        gbc.setState(0x5331, 0xcd58, 0x3760, 0xccb7, 0x4673, 0x115e, 0x0, 0x0);
        gbc.writeMem(0x5331, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcd58, gbc.sp());
        EXPECT(0x5333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0304
        gbc.setState(0xe6a8, 0xd0a5, 0x9e70, 0x7192, 0xc1d0, 0x8875, 0x0, 0x1);
        gbc.writeMem(0xe6a8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd0a5, gbc.sp());
        EXPECT(0xe6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a8));
        EXPECT(0x7b, gbc.readMem(0xe6a9));
        // CB 7B 0305
        gbc.setState(0x10b3, 0xe276, 0x4e80, 0xb253, 0x1100, 0x84af, 0x0, 0x0);
        gbc.writeMem(0x10b3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe276, gbc.sp());
        EXPECT(0x10b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0306
        gbc.setState(0xbe80, 0x4762, 0xb7f0, 0x1b89, 0xbc98, 0x3b36, 0x0, 0x1);
        gbc.writeMem(0xbe80, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4762, gbc.sp());
        EXPECT(0xbe82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe80));
        EXPECT(0x7b, gbc.readMem(0xbe81));
        // CB 7B 0307
        gbc.setState(0x307f, 0xd38a, 0x4130, 0x4c5d, 0x866a, 0x10a0, 0x0, 0x1);
        gbc.writeMem(0x307f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd38a, gbc.sp());
        EXPECT(0x3081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0309
        gbc.setState(0xee7, 0x6397, 0x5640, 0x4eb2, 0x660d, 0xaa94, 0x0, 0x1);
        gbc.writeMem(0xee7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6397, gbc.sp());
        EXPECT(0xee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 030B
        gbc.setState(0x559c, 0x8ac4, 0x1de0, 0x12dd, 0x802b, 0xbe06, 0x0, 0x0);
        gbc.writeMem(0x559c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8ac4, gbc.sp());
        EXPECT(0x559e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 030C
        gbc.setState(0x4922, 0x4338, 0xffa0, 0x89a5, 0x71fa, 0x1915, 0x0, 0x1);
        gbc.writeMem(0x4922, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4338, gbc.sp());
        EXPECT(0x4924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 030D
        gbc.setState(0x9bf4, 0xe515, 0xc010, 0x4128, 0x3abe, 0x908e, 0x1, 0x0);
        gbc.writeMem(0x9bf4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe515, gbc.sp());
        EXPECT(0x9bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf4));
        EXPECT(0x7b, gbc.readMem(0x9bf5));
        // CB 7B 030E
        gbc.setState(0xb9fe, 0x82e1, 0x6140, 0x524b, 0x4b86, 0x26c5, 0x0, 0x1);
        gbc.writeMem(0xb9fe, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x82e1, gbc.sp());
        EXPECT(0xba00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9fe));
        EXPECT(0x7b, gbc.readMem(0xb9ff));
        // CB 7B 030F
        gbc.setState(0x5f83, 0xd5f4, 0x73c0, 0x85c6, 0x367, 0xca28, 0x1, 0x1);
        gbc.writeMem(0x5f83, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd5f4, gbc.sp());
        EXPECT(0x5f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0310
        gbc.setState(0x8b1a, 0xa4ad, 0x470, 0x9b5c, 0x3671, 0x166d, 0x1, 0x0);
        gbc.writeMem(0x8b1a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa4ad, gbc.sp());
        EXPECT(0x8b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1a));
        EXPECT(0x7b, gbc.readMem(0x8b1b));
        // CB 7B 0311
        gbc.setState(0x8f95, 0xa925, 0xfbf0, 0x531, 0x1106, 0xc8c, 0x0, 0x0);
        gbc.writeMem(0x8f95, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa925, gbc.sp());
        EXPECT(0x8f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f95));
        EXPECT(0x7b, gbc.readMem(0x8f96));
        // CB 7B 0312
        gbc.setState(0x9e6f, 0xb634, 0x4320, 0x7fa6, 0xe097, 0xb167, 0x0, 0x1);
        gbc.writeMem(0x9e6f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb634, gbc.sp());
        EXPECT(0x9e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e6f));
        EXPECT(0x7b, gbc.readMem(0x9e70));
        // CB 7B 0313
        gbc.setState(0xb6c1, 0xbccb, 0x7e50, 0xb324, 0x6c, 0x9b4a, 0x1, 0x1);
        gbc.writeMem(0xb6c1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbccb, gbc.sp());
        EXPECT(0xb6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6c1));
        EXPECT(0x7b, gbc.readMem(0xb6c2));
        // CB 7B 0314
        gbc.setState(0xe1c4, 0xcfb4, 0x7f70, 0xf1fa, 0xd74a, 0x9266, 0x1, 0x1);
        gbc.writeMem(0xe1c4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcfb4, gbc.sp());
        EXPECT(0xe1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c4));
        EXPECT(0x7b, gbc.readMem(0xe1c5));
        // CB 7B 0315
        gbc.setState(0x79fc, 0xb695, 0x8e0, 0x4580, 0x184f, 0x7d81, 0x1, 0x1);
        gbc.writeMem(0x79fc, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb695, gbc.sp());
        EXPECT(0x79fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0316
        gbc.setState(0xe9b3, 0xd9f5, 0x2bb0, 0xe965, 0x8fed, 0x77ef, 0x0, 0x0);
        gbc.writeMem(0xe9b3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd9f5, gbc.sp());
        EXPECT(0xe9b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b3));
        EXPECT(0x7b, gbc.readMem(0xe9b4));
        // CB 7B 0317
        gbc.setState(0x9cc6, 0xf82d, 0xb610, 0x2b0c, 0xa585, 0xc7e5, 0x0, 0x1);
        gbc.writeMem(0x9cc6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf82d, gbc.sp());
        EXPECT(0x9cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc6));
        EXPECT(0x7b, gbc.readMem(0x9cc7));
        // CB 7B 0318
        gbc.setState(0x79d4, 0x81ed, 0x8c60, 0x8a91, 0x5eed, 0x6c3a, 0x0, 0x0);
        gbc.writeMem(0x79d4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x81ed, gbc.sp());
        EXPECT(0x79d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0319
        gbc.setState(0x5cd1, 0x37b3, 0xb720, 0x11b0, 0x4a3e, 0x8d15, 0x1, 0x0);
        gbc.writeMem(0x5cd1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x37b3, gbc.sp());
        EXPECT(0x5cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 031A
        gbc.setState(0xec35, 0xc6cd, 0x8070, 0xe0f9, 0x8eb2, 0x4add, 0x0, 0x1);
        gbc.writeMem(0xec35, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc6cd, gbc.sp());
        EXPECT(0xec37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec35));
        EXPECT(0x7b, gbc.readMem(0xec36));
        // CB 7B 031B
        gbc.setState(0xa9ec, 0xe304, 0x6240, 0xc4fd, 0x5dd6, 0x5583, 0x0, 0x0);
        gbc.writeMem(0xa9ec, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe304, gbc.sp());
        EXPECT(0xa9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ec));
        EXPECT(0x7b, gbc.readMem(0xa9ed));
        // CB 7B 031C
        gbc.setState(0x1be6, 0xd7e2, 0xbae0, 0xd6ca, 0x9f78, 0x5035, 0x1, 0x0);
        gbc.writeMem(0x1be6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd7e2, gbc.sp());
        EXPECT(0x1be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 031D
        gbc.setState(0xc20d, 0xac38, 0x6230, 0x38b2, 0xaa0e, 0x67ec, 0x0, 0x0);
        gbc.writeMem(0xc20d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xac38, gbc.sp());
        EXPECT(0xc20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc20d));
        EXPECT(0x7b, gbc.readMem(0xc20e));
        // CB 7B 031E
        gbc.setState(0x696, 0x7409, 0x1b70, 0x355f, 0x919, 0xd4b1, 0x1, 0x1);
        gbc.writeMem(0x696, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7409, gbc.sp());
        EXPECT(0x698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 031F
        gbc.setState(0xa8aa, 0xc848, 0x6210, 0x3945, 0x5a59, 0x32c, 0x1, 0x1);
        gbc.writeMem(0xa8aa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc848, gbc.sp());
        EXPECT(0xa8ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8aa));
        EXPECT(0x7b, gbc.readMem(0xa8ab));
        // CB 7B 0320
        gbc.setState(0xe6a4, 0xfbb4, 0xeb30, 0x3f7e, 0xa71e, 0x38f4, 0x1, 0x1);
        gbc.writeMem(0xe6a4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfbb4, gbc.sp());
        EXPECT(0xe6a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a4));
        EXPECT(0x7b, gbc.readMem(0xe6a5));
        // CB 7B 0321
        gbc.setState(0x1daa, 0x352a, 0x3670, 0xf7b1, 0x4ee1, 0x76db, 0x1, 0x1);
        gbc.writeMem(0x1daa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x352a, gbc.sp());
        EXPECT(0x1dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0322
        gbc.setState(0x65a7, 0x6d71, 0x1a20, 0xd177, 0xc145, 0x323d, 0x0, 0x1);
        gbc.writeMem(0x65a7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6d71, gbc.sp());
        EXPECT(0x65a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0323
        gbc.setState(0x8a96, 0x3438, 0x8890, 0xfb5f, 0x23a8, 0xca1f, 0x0, 0x0);
        gbc.writeMem(0x8a96, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3438, gbc.sp());
        EXPECT(0x8a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a96));
        EXPECT(0x7b, gbc.readMem(0x8a97));
        // CB 7B 0324
        gbc.setState(0x85f3, 0xc67d, 0x38d0, 0x5fef, 0x6807, 0x5c7f, 0x1, 0x0);
        gbc.writeMem(0x85f3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc67d, gbc.sp());
        EXPECT(0x85f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85f3));
        EXPECT(0x7b, gbc.readMem(0x85f4));
        // CB 7B 0325
        gbc.setState(0x883a, 0xfb4e, 0xb2a0, 0x4c86, 0x7ed9, 0xf87d, 0x0, 0x1);
        gbc.writeMem(0x883a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfb4e, gbc.sp());
        EXPECT(0x883c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x883a));
        EXPECT(0x7b, gbc.readMem(0x883b));
        // CB 7B 0326
        gbc.setState(0x818b, 0x91c5, 0x5380, 0x4894, 0x15e, 0x5c41, 0x0, 0x1);
        gbc.writeMem(0x818b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x91c5, gbc.sp());
        EXPECT(0x818d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x818b));
        EXPECT(0x7b, gbc.readMem(0x818c));
        // CB 7B 0327
        gbc.setState(0x59fd, 0x800b, 0x9000, 0xdd4b, 0x6259, 0xb91f, 0x0, 0x1);
        gbc.writeMem(0x59fd, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x800b, gbc.sp());
        EXPECT(0x59ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0328
        gbc.setState(0x6c53, 0x74ff, 0x2e40, 0xd3ac, 0x3522, 0xa2ea, 0x0, 0x1);
        gbc.writeMem(0x6c53, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x74ff, gbc.sp());
        EXPECT(0x6c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0329
        gbc.setState(0xe9c2, 0x5734, 0x5720, 0xa528, 0xe4de, 0x2bbc, 0x1, 0x0);
        gbc.writeMem(0xe9c2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5734, gbc.sp());
        EXPECT(0xe9c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c2));
        EXPECT(0x7b, gbc.readMem(0xe9c3));
        // CB 7B 032A
        gbc.setState(0xe3f3, 0x68cd, 0x1f50, 0x248, 0xc24b, 0xd94a, 0x1, 0x0);
        gbc.writeMem(0xe3f3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x68cd, gbc.sp());
        EXPECT(0xe3f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f3));
        EXPECT(0x7b, gbc.readMem(0xe3f4));
        // CB 7B 032B
        gbc.setState(0xcdfb, 0x3db5, 0xbbe0, 0x22a1, 0x1b42, 0xb6ca, 0x0, 0x1);
        gbc.writeMem(0xcdfb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3db5, gbc.sp());
        EXPECT(0xcdfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdfb));
        EXPECT(0x7b, gbc.readMem(0xcdfc));
        // CB 7B 032C
        gbc.setState(0x38fe, 0x3d9c, 0x3c50, 0xf203, 0x9f0b, 0xa4f, 0x0, 0x0);
        gbc.writeMem(0x38fe, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3d9c, gbc.sp());
        EXPECT(0x3900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 032D
        gbc.setState(0x7c6, 0xb16e, 0x36a0, 0x83d7, 0xc6f6, 0x6027, 0x1, 0x1);
        gbc.writeMem(0x7c6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb16e, gbc.sp());
        EXPECT(0x7c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 032F
        gbc.setState(0xc357, 0x271, 0x6cb0, 0xb13c, 0xe490, 0x38c9, 0x0, 0x1);
        gbc.writeMem(0xc357, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x271, gbc.sp());
        EXPECT(0xc359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc357));
        EXPECT(0x7b, gbc.readMem(0xc358));
        // CB 7B 0330
        gbc.setState(0xb63e, 0x822e, 0xe370, 0xe765, 0xb7bf, 0x77bd, 0x1, 0x0);
        gbc.writeMem(0xb63e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x822e, gbc.sp());
        EXPECT(0xb640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb63e));
        EXPECT(0x7b, gbc.readMem(0xb63f));
        // CB 7B 0331
        gbc.setState(0x52e2, 0x88d8, 0xece0, 0xe3e5, 0x1628, 0xc759, 0x0, 0x1);
        gbc.writeMem(0x52e2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x88d8, gbc.sp());
        EXPECT(0x52e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0332
        gbc.setState(0x26f9, 0x853d, 0x340, 0x6440, 0x8181, 0xe19d, 0x1, 0x0);
        gbc.writeMem(0x26f9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x853d, gbc.sp());
        EXPECT(0x26fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0333
        gbc.setState(0x6eb3, 0xe3c4, 0xb6c0, 0xa146, 0xe81f, 0x8478, 0x0, 0x0);
        gbc.writeMem(0x6eb3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe3c4, gbc.sp());
        EXPECT(0x6eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0334
        gbc.setState(0x2ab9, 0x3f1e, 0xfd30, 0xff4a, 0x93dc, 0x7b7f, 0x0, 0x1);
        gbc.writeMem(0x2ab9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3f1e, gbc.sp());
        EXPECT(0x2abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0335
        gbc.setState(0x281e, 0xd4ed, 0x9c90, 0x90e0, 0xaa17, 0xb4c4, 0x0, 0x1);
        gbc.writeMem(0x281e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd4ed, gbc.sp());
        EXPECT(0x2820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0336
        gbc.setState(0x15ee, 0x6b03, 0x9960, 0xc93f, 0x9dd9, 0x331a, 0x1, 0x1);
        gbc.writeMem(0x15ee, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6b03, gbc.sp());
        EXPECT(0x15f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0337
        gbc.setState(0x871d, 0xe108, 0x3360, 0x7bd3, 0xa102, 0x406d, 0x0, 0x1);
        gbc.writeMem(0x871d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe108, gbc.sp());
        EXPECT(0x871f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x871d));
        EXPECT(0x7b, gbc.readMem(0x871e));
        // CB 7B 0338
        gbc.setState(0x9653, 0xbea8, 0x8450, 0xa855, 0x5517, 0x1911, 0x1, 0x1);
        gbc.writeMem(0x9653, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbea8, gbc.sp());
        EXPECT(0x9655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9653));
        EXPECT(0x7b, gbc.readMem(0x9654));
        // CB 7B 0339
        gbc.setState(0x3123, 0xfeb9, 0xcb80, 0xb707, 0x1f13, 0x41d4, 0x0, 0x1);
        gbc.writeMem(0x3123, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfeb9, gbc.sp());
        EXPECT(0x3125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 033A
        gbc.setState(0xe397, 0x45ce, 0x6880, 0xee2b, 0xb519, 0xec0a, 0x0, 0x1);
        gbc.writeMem(0xe397, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x45ce, gbc.sp());
        EXPECT(0xe399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe397));
        EXPECT(0x7b, gbc.readMem(0xe398));
        // CB 7B 033B
        gbc.setState(0x6636, 0xa8fa, 0x4940, 0x9430, 0x42b6, 0x803c, 0x1, 0x1);
        gbc.writeMem(0x6636, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa8fa, gbc.sp());
        EXPECT(0x6638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 033C
        gbc.setState(0xa0dd, 0xda80, 0xfec0, 0x34c2, 0x9ec, 0xb356, 0x0, 0x1);
        gbc.writeMem(0xa0dd, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xda80, gbc.sp());
        EXPECT(0xa0df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0dd));
        EXPECT(0x7b, gbc.readMem(0xa0de));
        // CB 7B 033D
        gbc.setState(0xef10, 0x9929, 0x4290, 0xea0c, 0x1dc9, 0xbf37, 0x1, 0x0);
        gbc.writeMem(0xef10, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9929, gbc.sp());
        EXPECT(0xef12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef10));
        EXPECT(0x7b, gbc.readMem(0xef11));
        // CB 7B 033E
        gbc.setState(0xd8b7, 0xf3a, 0xce0, 0x8eca, 0x10c1, 0xb131, 0x1, 0x1);
        gbc.writeMem(0xd8b7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf3a, gbc.sp());
        EXPECT(0xd8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b7));
        EXPECT(0x7b, gbc.readMem(0xd8b8));
        // CB 7B 033F
        gbc.setState(0x248e, 0xaf05, 0x7d80, 0x4b6, 0x1746, 0x8cf7, 0x1, 0x1);
        gbc.writeMem(0x248e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xaf05, gbc.sp());
        EXPECT(0x2490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0340
        gbc.setState(0xa09b, 0x8bee, 0x8420, 0xc94b, 0x28fb, 0x3aa0, 0x1, 0x1);
        gbc.writeMem(0xa09b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8bee, gbc.sp());
        EXPECT(0xa09d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09b));
        EXPECT(0x7b, gbc.readMem(0xa09c));
        // CB 7B 0341
        gbc.setState(0xb8bc, 0x5c97, 0xf460, 0x8db6, 0x2f2f, 0x1633, 0x1, 0x1);
        gbc.writeMem(0xb8bc, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5c97, gbc.sp());
        EXPECT(0xb8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8bc));
        EXPECT(0x7b, gbc.readMem(0xb8bd));
        // CB 7B 0342
        gbc.setState(0x5bc5, 0x5ba2, 0x4520, 0x89af, 0x666f, 0x2745, 0x0, 0x0);
        gbc.writeMem(0x5bc5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5ba2, gbc.sp());
        EXPECT(0x5bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0343
        gbc.setState(0x9b69, 0xb45a, 0xa8b0, 0x9eda, 0xcf9b, 0x2f9b, 0x0, 0x1);
        gbc.writeMem(0x9b69, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb45a, gbc.sp());
        EXPECT(0x9b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b69));
        EXPECT(0x7b, gbc.readMem(0x9b6a));
        // CB 7B 0344
        gbc.setState(0x7cac, 0xb003, 0x900, 0x281d, 0xe4ad, 0xa4fb, 0x0, 0x1);
        gbc.writeMem(0x7cac, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb003, gbc.sp());
        EXPECT(0x7cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0345
        gbc.setState(0xe1a6, 0x3a0b, 0x3970, 0x3ed5, 0x4723, 0xfa43, 0x1, 0x0);
        gbc.writeMem(0xe1a6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3a0b, gbc.sp());
        EXPECT(0xe1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a6));
        EXPECT(0x7b, gbc.readMem(0xe1a7));
        // CB 7B 0347
        gbc.setState(0xa53b, 0x664e, 0x8670, 0x8dbd, 0x2648, 0x5df6, 0x0, 0x0);
        gbc.writeMem(0xa53b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x664e, gbc.sp());
        EXPECT(0xa53d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa53b));
        EXPECT(0x7b, gbc.readMem(0xa53c));
        // CB 7B 0348
        gbc.setState(0x40d5, 0x14e1, 0xed60, 0x32de, 0x2e86, 0x1614, 0x0, 0x1);
        gbc.writeMem(0x40d5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x14e1, gbc.sp());
        EXPECT(0x40d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0349
        gbc.setState(0x40c1, 0xcac1, 0xc5d0, 0x77d1, 0xa1e0, 0x2641, 0x1, 0x0);
        gbc.writeMem(0x40c1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcac1, gbc.sp());
        EXPECT(0x40c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 034A
        gbc.setState(0x9288, 0x9ef2, 0x49d0, 0x62cf, 0xcd51, 0xb625, 0x0, 0x1);
        gbc.writeMem(0x9288, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9ef2, gbc.sp());
        EXPECT(0x928a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9288));
        EXPECT(0x7b, gbc.readMem(0x9289));
        // CB 7B 034B
        gbc.setState(0x4fdd, 0xeba8, 0x5130, 0x8662, 0x4fa8, 0x4a03, 0x0, 0x0);
        gbc.writeMem(0x4fdd, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xeba8, gbc.sp());
        EXPECT(0x4fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 034C
        gbc.setState(0xe4a5, 0x1912, 0x19a0, 0x656e, 0xe05, 0xc0ac, 0x0, 0x0);
        gbc.writeMem(0xe4a5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1912, gbc.sp());
        EXPECT(0xe4a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a5));
        EXPECT(0x7b, gbc.readMem(0xe4a6));
        // CB 7B 034D
        gbc.setState(0x7936, 0xdb12, 0x4870, 0x86a0, 0x55e, 0xc86b, 0x1, 0x0);
        gbc.writeMem(0x7936, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdb12, gbc.sp());
        EXPECT(0x7938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 034E
        gbc.setState(0xd234, 0xa41e, 0xf960, 0x939e, 0xab7d, 0x18b6, 0x0, 0x0);
        gbc.writeMem(0xd234, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa41e, gbc.sp());
        EXPECT(0xd236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd234));
        EXPECT(0x7b, gbc.readMem(0xd235));
        // CB 7B 034F
        gbc.setState(0xe03, 0xc634, 0x5b30, 0x4185, 0xe2bc, 0x8b61, 0x0, 0x0);
        gbc.writeMem(0xe03, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc634, gbc.sp());
        EXPECT(0xe05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0350
        gbc.setState(0xae42, 0xf250, 0xc580, 0xfe81, 0x219, 0x314, 0x0, 0x1);
        gbc.writeMem(0xae42, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf250, gbc.sp());
        EXPECT(0xae44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae42));
        EXPECT(0x7b, gbc.readMem(0xae43));
        // CB 7B 0351
        gbc.setState(0xc9aa, 0x1278, 0xdb50, 0x3ec2, 0xced8, 0x3b2a, 0x0, 0x0);
        gbc.writeMem(0xc9aa, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1278, gbc.sp());
        EXPECT(0xc9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9aa));
        EXPECT(0x7b, gbc.readMem(0xc9ab));
        // CB 7B 0352
        gbc.setState(0x9f68, 0x4c06, 0xfc90, 0xfe12, 0x22b9, 0xe5a4, 0x0, 0x0);
        gbc.writeMem(0x9f68, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4c06, gbc.sp());
        EXPECT(0x9f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f68));
        EXPECT(0x7b, gbc.readMem(0x9f69));
        // CB 7B 0353
        gbc.setState(0xd3f1, 0x6272, 0xb650, 0x5a83, 0x232b, 0x84d9, 0x0, 0x0);
        gbc.writeMem(0xd3f1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6272, gbc.sp());
        EXPECT(0xd3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f1));
        EXPECT(0x7b, gbc.readMem(0xd3f2));
        // CB 7B 0354
        gbc.setState(0xea70, 0xde9f, 0x4d30, 0xf54a, 0x6de4, 0x3c16, 0x1, 0x1);
        gbc.writeMem(0xea70, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xde9f, gbc.sp());
        EXPECT(0xea72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea70));
        EXPECT(0x7b, gbc.readMem(0xea71));
        // CB 7B 0355
        gbc.setState(0xcd3b, 0xba7c, 0x2ba0, 0xc49a, 0xbb25, 0x2ae6, 0x1, 0x1);
        gbc.writeMem(0xcd3b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xba7c, gbc.sp());
        EXPECT(0xcd3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3b));
        EXPECT(0x7b, gbc.readMem(0xcd3c));
        // CB 7B 0356
        gbc.setState(0x907a, 0x5fc3, 0x37e0, 0xb91, 0xcd07, 0xa969, 0x0, 0x0);
        gbc.writeMem(0x907a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5fc3, gbc.sp());
        EXPECT(0x907c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x907a));
        EXPECT(0x7b, gbc.readMem(0x907b));
        // CB 7B 0357
        gbc.setState(0xbb39, 0x9a16, 0x6ac0, 0xd84d, 0x5172, 0x768e, 0x1, 0x1);
        gbc.writeMem(0xbb39, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9a16, gbc.sp());
        EXPECT(0xbb3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb39));
        EXPECT(0x7b, gbc.readMem(0xbb3a));
        // CB 7B 0358
        gbc.setState(0xe015, 0xf1e9, 0xdb50, 0xcc65, 0x6aca, 0xd17a, 0x0, 0x1);
        gbc.writeMem(0xe015, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf1e9, gbc.sp());
        EXPECT(0xe017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe015));
        EXPECT(0x7b, gbc.readMem(0xe016));
        // CB 7B 0359
        gbc.setState(0xa666, 0x2ff3, 0x6ef0, 0x2fdc, 0xa876, 0xcd42, 0x1, 0x0);
        gbc.writeMem(0xa666, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2ff3, gbc.sp());
        EXPECT(0xa668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa666));
        EXPECT(0x7b, gbc.readMem(0xa667));
        // CB 7B 035A
        gbc.setState(0x4967, 0x1504, 0xb570, 0x93dc, 0x2bfa, 0xcfce, 0x1, 0x0);
        gbc.writeMem(0x4967, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1504, gbc.sp());
        EXPECT(0x4969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 035B
        gbc.setState(0xd3bb, 0x7c4b, 0xc000, 0x8cf4, 0x41be, 0x7bbb, 0x0, 0x0);
        gbc.writeMem(0xd3bb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7c4b, gbc.sp());
        EXPECT(0xd3bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3bb));
        EXPECT(0x7b, gbc.readMem(0xd3bc));
        // CB 7B 035C
        gbc.setState(0xc706, 0xc9c8, 0xe5c0, 0x14f5, 0x9b7f, 0x5a7e, 0x1, 0x1);
        gbc.writeMem(0xc706, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc9c8, gbc.sp());
        EXPECT(0xc708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc706));
        EXPECT(0x7b, gbc.readMem(0xc707));
        // CB 7B 035D
        gbc.setState(0x195d, 0xf1be, 0x530, 0x3248, 0xbbb4, 0xe02, 0x0, 0x0);
        gbc.writeMem(0x195d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf1be, gbc.sp());
        EXPECT(0x195f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 035E
        gbc.setState(0x98b, 0xf7e, 0x2950, 0x85f3, 0xeec, 0x4c88, 0x1, 0x0);
        gbc.writeMem(0x98b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf7e, gbc.sp());
        EXPECT(0x98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 035F
        gbc.setState(0x7216, 0x7205, 0xbf80, 0x8917, 0x98bb, 0x2402, 0x0, 0x1);
        gbc.writeMem(0x7216, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7205, gbc.sp());
        EXPECT(0x7218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0360
        gbc.setState(0x7bbe, 0x87d5, 0x65b0, 0xce, 0x6799, 0x3024, 0x0, 0x1);
        gbc.writeMem(0x7bbe, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x87d5, gbc.sp());
        EXPECT(0x7bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0361
        gbc.setState(0xb586, 0xfa57, 0x8400, 0xc625, 0x7601, 0xa2cb, 0x1, 0x0);
        gbc.writeMem(0xb586, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfa57, gbc.sp());
        EXPECT(0xb588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb586));
        EXPECT(0x7b, gbc.readMem(0xb587));
        // CB 7B 0362
        gbc.setState(0xb8c9, 0x4646, 0x59d0, 0xfc8d, 0xbb4, 0x86d1, 0x0, 0x1);
        gbc.writeMem(0xb8c9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4646, gbc.sp());
        EXPECT(0xb8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c9));
        EXPECT(0x7b, gbc.readMem(0xb8ca));
        // CB 7B 0363
        gbc.setState(0x8905, 0xe679, 0xd6f0, 0xca51, 0xcf4e, 0x5824, 0x0, 0x1);
        gbc.writeMem(0x8905, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe679, gbc.sp());
        EXPECT(0x8907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8905));
        EXPECT(0x7b, gbc.readMem(0x8906));
        // CB 7B 0364
        gbc.setState(0x219e, 0xc1f2, 0xa230, 0x933d, 0x7b38, 0x84be, 0x1, 0x0);
        gbc.writeMem(0x219e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc1f2, gbc.sp());
        EXPECT(0x21a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0365
        gbc.setState(0xb061, 0xdd92, 0x7c90, 0xcd1c, 0x9dc, 0x8c6, 0x1, 0x0);
        gbc.writeMem(0xb061, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdd92, gbc.sp());
        EXPECT(0xb063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb061));
        EXPECT(0x7b, gbc.readMem(0xb062));
        // CB 7B 0366
        gbc.setState(0x12e3, 0x83a3, 0x7500, 0x2d46, 0xb445, 0xcbe6, 0x0, 0x1);
        gbc.writeMem(0x12e3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x83a3, gbc.sp());
        EXPECT(0x12e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0367
        gbc.setState(0x46f0, 0x1919, 0x3110, 0xb2e0, 0xc2d7, 0x5a15, 0x0, 0x1);
        gbc.writeMem(0x46f0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1919, gbc.sp());
        EXPECT(0x46f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0368
        gbc.setState(0x18bf, 0x4b90, 0x9330, 0xd5e6, 0xb947, 0xddc6, 0x0, 0x1);
        gbc.writeMem(0x18bf, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4b90, gbc.sp());
        EXPECT(0x18c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0369
        gbc.setState(0xba24, 0x13dc, 0x49a0, 0x502d, 0x2e1e, 0xab21, 0x1, 0x1);
        gbc.writeMem(0xba24, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x13dc, gbc.sp());
        EXPECT(0xba26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba24));
        EXPECT(0x7b, gbc.readMem(0xba25));
        // CB 7B 036A
        gbc.setState(0x20f3, 0xaca7, 0xa9d0, 0xe692, 0x7384, 0x8b38, 0x0, 0x0);
        gbc.writeMem(0x20f3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaca7, gbc.sp());
        EXPECT(0x20f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 036B
        gbc.setState(0x2dd4, 0x773a, 0x8400, 0xd8a, 0x89bc, 0x644e, 0x0, 0x0);
        gbc.writeMem(0x2dd4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x773a, gbc.sp());
        EXPECT(0x2dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 036C
        gbc.setState(0xb061, 0xfef0, 0x6870, 0x50d1, 0xc60b, 0x3bcc, 0x1, 0x0);
        gbc.writeMem(0xb061, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfef0, gbc.sp());
        EXPECT(0xb063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb061));
        EXPECT(0x7b, gbc.readMem(0xb062));
        // CB 7B 036D
        gbc.setState(0xee32, 0xe718, 0x3e00, 0x4d69, 0x1e24, 0x6882, 0x0, 0x0);
        gbc.writeMem(0xee32, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe718, gbc.sp());
        EXPECT(0xee34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee32));
        EXPECT(0x7b, gbc.readMem(0xee33));
        // CB 7B 036F
        gbc.setState(0x3c7d, 0x8ac, 0x4d10, 0x5dc9, 0xcf43, 0x77aa, 0x1, 0x0);
        gbc.writeMem(0x3c7d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8ac, gbc.sp());
        EXPECT(0x3c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0370
        gbc.setState(0x8d05, 0x3ad4, 0x7ac0, 0xdec, 0x7559, 0xc568, 0x1, 0x0);
        gbc.writeMem(0x8d05, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3ad4, gbc.sp());
        EXPECT(0x8d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d05));
        EXPECT(0x7b, gbc.readMem(0x8d06));
        // CB 7B 0371
        gbc.setState(0x88c9, 0x8fa4, 0x5160, 0xa16c, 0x133f, 0xb182, 0x0, 0x1);
        gbc.writeMem(0x88c9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8fa4, gbc.sp());
        EXPECT(0x88cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c9));
        EXPECT(0x7b, gbc.readMem(0x88ca));
        // CB 7B 0372
        gbc.setState(0xbfc7, 0x3a07, 0xe270, 0xfce1, 0xd216, 0x3bab, 0x1, 0x1);
        gbc.writeMem(0xbfc7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3a07, gbc.sp());
        EXPECT(0xbfc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc7));
        EXPECT(0x7b, gbc.readMem(0xbfc8));
        // CB 7B 0373
        gbc.setState(0x5e17, 0xda41, 0x2a0, 0x5e5e, 0xe3d8, 0x83d2, 0x1, 0x0);
        gbc.writeMem(0x5e17, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xda41, gbc.sp());
        EXPECT(0x5e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0375
        gbc.setState(0x9180, 0x461e, 0xbf50, 0x545d, 0x528e, 0x5d2a, 0x1, 0x1);
        gbc.writeMem(0x9180, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x461e, gbc.sp());
        EXPECT(0x9182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9180));
        EXPECT(0x7b, gbc.readMem(0x9181));
        // CB 7B 0377
        gbc.setState(0x44d6, 0x5d4d, 0x1890, 0x10f4, 0x504, 0x54a5, 0x1, 0x0);
        gbc.writeMem(0x44d6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5d4d, gbc.sp());
        EXPECT(0x44d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0378
        gbc.setState(0x5d89, 0xca91, 0x14d0, 0x1d4e, 0xa020, 0xfc4e, 0x1, 0x0);
        gbc.writeMem(0x5d89, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xca91, gbc.sp());
        EXPECT(0x5d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0379
        gbc.setState(0x3c8f, 0x236f, 0x1ca0, 0x377f, 0x2a2, 0x6ac1, 0x0, 0x1);
        gbc.writeMem(0x3c8f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x236f, gbc.sp());
        EXPECT(0x3c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 037A
        gbc.setState(0x165f, 0x84a0, 0x9560, 0x45cf, 0x7dab, 0x6909, 0x0, 0x0);
        gbc.writeMem(0x165f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x84a0, gbc.sp());
        EXPECT(0x1661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 037B
        gbc.setState(0xe183, 0x8ba2, 0xa40, 0x9539, 0xca6d, 0x84be, 0x0, 0x0);
        gbc.writeMem(0xe183, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8ba2, gbc.sp());
        EXPECT(0xe185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe183));
        EXPECT(0x7b, gbc.readMem(0xe184));
        // CB 7B 037D
        gbc.setState(0x4044, 0xf4c5, 0xbf30, 0x57a7, 0xfb0b, 0xe537, 0x1, 0x0);
        gbc.writeMem(0x4044, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf4c5, gbc.sp());
        EXPECT(0x4046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 037E
        gbc.setState(0x2c44, 0xa4, 0xc5f0, 0xda8a, 0xc3b9, 0x2f2c, 0x0, 0x1);
        gbc.writeMem(0x2c44, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa4, gbc.sp());
        EXPECT(0x2c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 037F
        gbc.setState(0x9969, 0x9402, 0x4d30, 0xc606, 0x5feb, 0x2e27, 0x0, 0x1);
        gbc.writeMem(0x9969, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9402, gbc.sp());
        EXPECT(0x996b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9969));
        EXPECT(0x7b, gbc.readMem(0x996a));
        // CB 7B 0380
        gbc.setState(0x97da, 0xcbe5, 0x7e10, 0xc19a, 0x57e4, 0x5835, 0x0, 0x1);
        gbc.writeMem(0x97da, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcbe5, gbc.sp());
        EXPECT(0x97dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97da));
        EXPECT(0x7b, gbc.readMem(0x97db));
        // CB 7B 0381
        gbc.setState(0xecc9, 0x2f05, 0x4af0, 0x831c, 0x91a7, 0x3368, 0x0, 0x1);
        gbc.writeMem(0xecc9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2f05, gbc.sp());
        EXPECT(0xeccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc9));
        EXPECT(0x7b, gbc.readMem(0xecca));
        // CB 7B 0382
        gbc.setState(0x2059, 0xb3b5, 0xbf0, 0xe000, 0xa3e7, 0x73bc, 0x0, 0x1);
        gbc.writeMem(0x2059, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb3b5, gbc.sp());
        EXPECT(0x205b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0383
        gbc.setState(0xe823, 0x89f8, 0x5680, 0x22b6, 0x97ad, 0xab84, 0x1, 0x0);
        gbc.writeMem(0xe823, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x89f8, gbc.sp());
        EXPECT(0xe825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe823));
        EXPECT(0x7b, gbc.readMem(0xe824));
        // CB 7B 0384
        gbc.setState(0x54f5, 0x5044, 0x2f40, 0x375b, 0x7d00, 0xd041, 0x1, 0x1);
        gbc.writeMem(0x54f5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5044, gbc.sp());
        EXPECT(0x54f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0385
        gbc.setState(0x7826, 0xd06e, 0x4d20, 0x127b, 0xe3f9, 0x556e, 0x1, 0x1);
        gbc.writeMem(0x7826, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd06e, gbc.sp());
        EXPECT(0x7828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0386
        gbc.setState(0x1ed3, 0x1001, 0xc230, 0x21a9, 0xe246, 0x7352, 0x0, 0x0);
        gbc.writeMem(0x1ed3, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1001, gbc.sp());
        EXPECT(0x1ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0387
        gbc.setState(0xb8ce, 0xf37f, 0x64f0, 0x131f, 0x2e20, 0x59ad, 0x1, 0x1);
        gbc.writeMem(0xb8ce, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf37f, gbc.sp());
        EXPECT(0xb8d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ce));
        EXPECT(0x7b, gbc.readMem(0xb8cf));
        // CB 7B 0388
        gbc.setState(0xd47b, 0xadb5, 0xdad0, 0xff0d, 0x15c1, 0xf686, 0x1, 0x1);
        gbc.writeMem(0xd47b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xadb5, gbc.sp());
        EXPECT(0xd47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47b));
        EXPECT(0x7b, gbc.readMem(0xd47c));
        // CB 7B 0389
        gbc.setState(0x4597, 0xe0b2, 0xcf10, 0x16ae, 0xdafc, 0x5bea, 0x0, 0x1);
        gbc.writeMem(0x4597, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe0b2, gbc.sp());
        EXPECT(0x4599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 038A
        gbc.setState(0xeac6, 0xcb0b, 0x40f0, 0xeeca, 0xb8e0, 0x9a88, 0x1, 0x0);
        gbc.writeMem(0xeac6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcb0b, gbc.sp());
        EXPECT(0xeac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac6));
        EXPECT(0x7b, gbc.readMem(0xeac7));
        // CB 7B 038B
        gbc.setState(0x2361, 0xf749, 0x1cf0, 0xe096, 0xf9d3, 0x8d4f, 0x1, 0x0);
        gbc.writeMem(0x2361, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf749, gbc.sp());
        EXPECT(0x2363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 038C
        gbc.setState(0x21c5, 0x83cd, 0xde70, 0xb436, 0xf4b1, 0x3614, 0x0, 0x0);
        gbc.writeMem(0x21c5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x83cd, gbc.sp());
        EXPECT(0x21c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 038D
        gbc.setState(0x81f6, 0xfb4e, 0xf370, 0x47c6, 0xa9ca, 0x6e7, 0x0, 0x1);
        gbc.writeMem(0x81f6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfb4e, gbc.sp());
        EXPECT(0x81f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f6));
        EXPECT(0x7b, gbc.readMem(0x81f7));
        // CB 7B 038E
        gbc.setState(0xe0b6, 0x238f, 0x94a0, 0xaf17, 0x372f, 0x161f, 0x0, 0x1);
        gbc.writeMem(0xe0b6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x238f, gbc.sp());
        EXPECT(0xe0b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b6));
        EXPECT(0x7b, gbc.readMem(0xe0b7));
        // CB 7B 038F
        gbc.setState(0xc996, 0x72d3, 0x6ba0, 0x4c96, 0x267a, 0x5357, 0x1, 0x1);
        gbc.writeMem(0xc996, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x72d3, gbc.sp());
        EXPECT(0xc998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc996));
        EXPECT(0x7b, gbc.readMem(0xc997));
        // CB 7B 0390
        gbc.setState(0x7e8c, 0x4ad8, 0x22e0, 0x8652, 0x64e4, 0x9e43, 0x0, 0x0);
        gbc.writeMem(0x7e8c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4ad8, gbc.sp());
        EXPECT(0x7e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0391
        gbc.setState(0x9599, 0x1927, 0x53c0, 0x7dd, 0x6a9, 0xc893, 0x0, 0x0);
        gbc.writeMem(0x9599, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1927, gbc.sp());
        EXPECT(0x959b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9599));
        EXPECT(0x7b, gbc.readMem(0x959a));
        // CB 7B 0393
        gbc.setState(0xd41d, 0xcb24, 0x6cf0, 0x9fab, 0xdb15, 0x17dc, 0x0, 0x1);
        gbc.writeMem(0xd41d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcb24, gbc.sp());
        EXPECT(0xd41f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41d));
        EXPECT(0x7b, gbc.readMem(0xd41e));
        // CB 7B 0394
        gbc.setState(0x1aae, 0xa698, 0xb0a0, 0x825a, 0x89c1, 0xa9e5, 0x1, 0x1);
        gbc.writeMem(0x1aae, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa698, gbc.sp());
        EXPECT(0x1ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0395
        gbc.setState(0x7e72, 0xc35b, 0xd960, 0xbe91, 0x2854, 0x1ca4, 0x1, 0x1);
        gbc.writeMem(0x7e72, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc35b, gbc.sp());
        EXPECT(0x7e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0396
        gbc.setState(0x3e35, 0xe247, 0x3190, 0x4c7d, 0xce92, 0x57e7, 0x1, 0x1);
        gbc.writeMem(0x3e35, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe247, gbc.sp());
        EXPECT(0x3e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0397
        gbc.setState(0x5a26, 0x8fcb, 0x8c10, 0x4ef6, 0xc3f3, 0x83be, 0x1, 0x0);
        gbc.writeMem(0x5a26, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8fcb, gbc.sp());
        EXPECT(0x5a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 0398
        gbc.setState(0x4851, 0x706d, 0xe80, 0xe2b6, 0xee08, 0x263f, 0x0, 0x1);
        gbc.writeMem(0x4851, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x706d, gbc.sp());
        EXPECT(0x4853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 0399
        gbc.setState(0x34f2, 0x3be4, 0x3350, 0x3731, 0xceed, 0x9cb3, 0x0, 0x0);
        gbc.writeMem(0x34f2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3be4, gbc.sp());
        EXPECT(0x34f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 039A
        gbc.setState(0x41e6, 0x5aa5, 0xbcf0, 0x7370, 0xbd1, 0x8992, 0x0, 0x1);
        gbc.writeMem(0x41e6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5aa5, gbc.sp());
        EXPECT(0x41e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 039B
        gbc.setState(0x8370, 0xb22e, 0x3220, 0xf1cc, 0x206, 0x69f2, 0x0, 0x1);
        gbc.writeMem(0x8370, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb22e, gbc.sp());
        EXPECT(0x8372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8370));
        EXPECT(0x7b, gbc.readMem(0x8371));
        // CB 7B 039C
        gbc.setState(0xbd25, 0x70ec, 0x4450, 0x5369, 0x3696, 0x6e17, 0x0, 0x1);
        gbc.writeMem(0xbd25, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x70ec, gbc.sp());
        EXPECT(0xbd27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd25));
        EXPECT(0x7b, gbc.readMem(0xbd26));
        // CB 7B 039D
        gbc.setState(0x12bc, 0xe763, 0x10d0, 0x47b8, 0x3d13, 0xabd6, 0x1, 0x0);
        gbc.writeMem(0x12bc, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe763, gbc.sp());
        EXPECT(0x12be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 039E
        gbc.setState(0x80e, 0x82e5, 0x7820, 0xde16, 0xfea, 0x9301, 0x0, 0x0);
        gbc.writeMem(0x80e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x82e5, gbc.sp());
        EXPECT(0x810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 039F
        gbc.setState(0x3a74, 0xf514, 0xf5f0, 0xb12d, 0x850d, 0x9674, 0x0, 0x0);
        gbc.writeMem(0x3a74, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf514, gbc.sp());
        EXPECT(0x3a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03A0
        gbc.setState(0x6179, 0x447b, 0xe980, 0xfde9, 0x8828, 0xdf00, 0x1, 0x0);
        gbc.writeMem(0x6179, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x447b, gbc.sp());
        EXPECT(0x617b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03A1
        gbc.setState(0x78be, 0xd0b, 0x9b20, 0x6744, 0x9916, 0x6fed, 0x1, 0x0);
        gbc.writeMem(0x78be, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd0b, gbc.sp());
        EXPECT(0x78c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03A2
        gbc.setState(0x144b, 0x2704, 0xb5b0, 0xf24d, 0x5f7e, 0x9b88, 0x1, 0x0);
        gbc.writeMem(0x144b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2704, gbc.sp());
        EXPECT(0x144d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03A3
        gbc.setState(0x7512, 0xb930, 0x14a0, 0x791b, 0x3042, 0xb00a, 0x1, 0x0);
        gbc.writeMem(0x7512, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb930, gbc.sp());
        EXPECT(0x7514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03A4
        gbc.setState(0x3fe4, 0x58c, 0xe20, 0xcbad, 0xe0da, 0x7842, 0x1, 0x1);
        gbc.writeMem(0x3fe4, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x58c, gbc.sp());
        EXPECT(0x3fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03A5
        gbc.setState(0x75d8, 0x98e7, 0x3bd0, 0x733a, 0x69c8, 0x841c, 0x0, 0x0);
        gbc.writeMem(0x75d8, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x98e7, gbc.sp());
        EXPECT(0x75da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03A6
        gbc.setState(0x59cb, 0x12e0, 0xe9f0, 0x61b5, 0x2cc0, 0x9286, 0x0, 0x0);
        gbc.writeMem(0x59cb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x12e0, gbc.sp());
        EXPECT(0x59cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03A7
        gbc.setState(0xef63, 0x5c4a, 0xf480, 0xa341, 0x696, 0xf9d2, 0x1, 0x1);
        gbc.writeMem(0xef63, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5c4a, gbc.sp());
        EXPECT(0xef65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef63));
        EXPECT(0x7b, gbc.readMem(0xef64));
        // CB 7B 03A9
        gbc.setState(0x9a7, 0xe2be, 0xa180, 0x58f2, 0xd342, 0x305c, 0x1, 0x1);
        gbc.writeMem(0x9a7, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe2be, gbc.sp());
        EXPECT(0x9a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03AA
        gbc.setState(0x2d34, 0x6566, 0xf2f0, 0x87c1, 0xcca6, 0xa26b, 0x0, 0x0);
        gbc.writeMem(0x2d34, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6566, gbc.sp());
        EXPECT(0x2d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03AB
        gbc.setState(0x622e, 0x8015, 0xe870, 0xfdb1, 0xb0fe, 0x3bc4, 0x0, 0x1);
        gbc.writeMem(0x622e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8015, gbc.sp());
        EXPECT(0x6230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03AC
        gbc.setState(0x7b3e, 0x5df6, 0x47f0, 0x54bf, 0xdad9, 0x249d, 0x1, 0x0);
        gbc.writeMem(0x7b3e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5df6, gbc.sp());
        EXPECT(0x7b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03AD
        gbc.setState(0x10a, 0x77c7, 0xae40, 0xacdd, 0xdc9c, 0x923c, 0x0, 0x1);
        gbc.writeMem(0x10a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x77c7, gbc.sp());
        EXPECT(0x10c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03AE
        gbc.setState(0x800b, 0x20a2, 0xa0c0, 0xe411, 0xb295, 0x798b, 0x1, 0x1);
        gbc.writeMem(0x800b, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x20a2, gbc.sp());
        EXPECT(0x800d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x800b));
        EXPECT(0x7b, gbc.readMem(0x800c));
        // CB 7B 03AF
        gbc.setState(0x3a3d, 0x7cfb, 0x8ae0, 0xd1d6, 0xacd5, 0x6df6, 0x0, 0x0);
        gbc.writeMem(0x3a3d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7cfb, gbc.sp());
        EXPECT(0x3a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03B0
        gbc.setState(0xe086, 0x2165, 0xa780, 0x9e3b, 0x77f1, 0xdb08, 0x0, 0x0);
        gbc.writeMem(0xe086, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2165, gbc.sp());
        EXPECT(0xe088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe086));
        EXPECT(0x7b, gbc.readMem(0xe087));
        // CB 7B 03B1
        gbc.setState(0xb46, 0xa891, 0x7530, 0xc883, 0x2b62, 0xc8c8, 0x0, 0x0);
        gbc.writeMem(0xb46, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa891, gbc.sp());
        EXPECT(0xb48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03B2
        gbc.setState(0x78e, 0xf1ef, 0x5610, 0xddb6, 0x4f7e, 0x55c1, 0x1, 0x1);
        gbc.writeMem(0x78e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf1ef, gbc.sp());
        EXPECT(0x790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03B3
        gbc.setState(0x62cd, 0xacb7, 0x330, 0xa280, 0x8a25, 0x37ee, 0x1, 0x1);
        gbc.writeMem(0x62cd, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xacb7, gbc.sp());
        EXPECT(0x62cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03B4
        gbc.setState(0x2582, 0x6c6a, 0x6940, 0x8337, 0xe51a, 0x77ad, 0x0, 0x0);
        gbc.writeMem(0x2582, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6c6a, gbc.sp());
        EXPECT(0x2584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03B6
        gbc.setState(0x8d65, 0x291a, 0x8cb0, 0x6f7f, 0x349, 0x9023, 0x1, 0x1);
        gbc.writeMem(0x8d65, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x291a, gbc.sp());
        EXPECT(0x8d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d65));
        EXPECT(0x7b, gbc.readMem(0x8d66));
        // CB 7B 03B7
        gbc.setState(0xa40a, 0x3ab5, 0x23d0, 0xd003, 0x6cde, 0x8ea0, 0x0, 0x0);
        gbc.writeMem(0xa40a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3ab5, gbc.sp());
        EXPECT(0xa40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40a));
        EXPECT(0x7b, gbc.readMem(0xa40b));
        // CB 7B 03B8
        gbc.setState(0x6572, 0xeb5e, 0x1dd0, 0x5986, 0x6fc, 0xcd5e, 0x0, 0x0);
        gbc.writeMem(0x6572, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xeb5e, gbc.sp());
        EXPECT(0x6574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03B9
        gbc.setState(0x2996, 0xbad4, 0xb6a0, 0x49bc, 0x1390, 0xb278, 0x1, 0x0);
        gbc.writeMem(0x2996, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbad4, gbc.sp());
        EXPECT(0x2998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03BA
        gbc.setState(0xe9e, 0x67b2, 0xdf40, 0x7210, 0xf13a, 0x4248, 0x1, 0x0);
        gbc.writeMem(0xe9e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x67b2, gbc.sp());
        EXPECT(0xea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03BB
        gbc.setState(0x87de, 0x6e1c, 0xa1c0, 0x1e15, 0xe4e8, 0x75b8, 0x0, 0x0);
        gbc.writeMem(0x87de, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6e1c, gbc.sp());
        EXPECT(0x87e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87de));
        EXPECT(0x7b, gbc.readMem(0x87df));
        // CB 7B 03BC
        gbc.setState(0x4394, 0x8e6a, 0xe060, 0x8eba, 0xf34d, 0x408a, 0x1, 0x0);
        gbc.writeMem(0x4394, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8e6a, gbc.sp());
        EXPECT(0x4396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03BD
        gbc.setState(0x3e6f, 0xbe49, 0xf220, 0x79f3, 0x5b4, 0x8549, 0x1, 0x1);
        gbc.writeMem(0x3e6f, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbe49, gbc.sp());
        EXPECT(0x3e71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03BE
        gbc.setState(0x3abb, 0x93e6, 0x6960, 0xfcab, 0xd06e, 0xe74c, 0x0, 0x1);
        gbc.writeMem(0x3abb, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x93e6, gbc.sp());
        EXPECT(0x3abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03BF
        gbc.setState(0x5d4a, 0x8a1f, 0x3c80, 0x78ad, 0x784a, 0xa672, 0x1, 0x1);
        gbc.writeMem(0x5d4a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8a1f, gbc.sp());
        EXPECT(0x5d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03C0
        gbc.setState(0x2dc0, 0xca02, 0x2140, 0xbebc, 0x71e3, 0x3411, 0x1, 0x1);
        gbc.writeMem(0x2dc0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xca02, gbc.sp());
        EXPECT(0x2dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03C1
        gbc.setState(0x8f5a, 0xf532, 0xcca0, 0xab50, 0x8c73, 0x3127, 0x0, 0x1);
        gbc.writeMem(0x8f5a, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf532, gbc.sp());
        EXPECT(0x8f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f5a));
        EXPECT(0x7b, gbc.readMem(0x8f5b));
        // CB 7B 03C2
        gbc.setState(0x7410, 0xb2ef, 0x5100, 0x4507, 0xd89, 0x355c, 0x0, 0x0);
        gbc.writeMem(0x7410, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb2ef, gbc.sp());
        EXPECT(0x7412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03C3
        gbc.setState(0x46c1, 0x566b, 0x2b70, 0xa5df, 0x4230, 0xea8f, 0x1, 0x1);
        gbc.writeMem(0x46c1, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x566b, gbc.sp());
        EXPECT(0x46c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03C4
        gbc.setState(0x9cdc, 0xfa04, 0x4710, 0xdee2, 0xcffb, 0x2dce, 0x0, 0x1);
        gbc.writeMem(0x9cdc, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfa04, gbc.sp());
        EXPECT(0x9cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cdc));
        EXPECT(0x7b, gbc.readMem(0x9cdd));
        // CB 7B 03C6
        gbc.setState(0xa437, 0x9abc, 0x3110, 0xe85d, 0x6181, 0x99fc, 0x0, 0x0);
        gbc.writeMem(0xa437, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9abc, gbc.sp());
        EXPECT(0xa439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa437));
        EXPECT(0x7b, gbc.readMem(0xa438));
        // CB 7B 03C7
        gbc.setState(0x9ebf, 0x9e78, 0xef90, 0x4a46, 0x26c7, 0x3e0c, 0x1, 0x0);
        gbc.writeMem(0x9ebf, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9e78, gbc.sp());
        EXPECT(0x9ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ebf));
        EXPECT(0x7b, gbc.readMem(0x9ec0));
        // CB 7B 03C9
        gbc.setState(0xad31, 0x3923, 0xf490, 0x1f6b, 0x5f1b, 0x193d, 0x0, 0x0);
        gbc.writeMem(0xad31, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3923, gbc.sp());
        EXPECT(0xad33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad31));
        EXPECT(0x7b, gbc.readMem(0xad32));
        // CB 7B 03CA
        gbc.setState(0xc0a5, 0x352b, 0xee10, 0xaab9, 0xdb2b, 0x6416, 0x1, 0x0);
        gbc.writeMem(0xc0a5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x352b, gbc.sp());
        EXPECT(0xc0a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a5));
        EXPECT(0x7b, gbc.readMem(0xc0a6));
        // CB 7B 03CB
        gbc.setState(0x293c, 0xf9c3, 0x5ec0, 0xe3f6, 0x8acc, 0x80fb, 0x1, 0x0);
        gbc.writeMem(0x293c, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf9c3, gbc.sp());
        EXPECT(0x293e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03CC
        gbc.setState(0x5962, 0xe1ed, 0xa030, 0x26f5, 0xaa68, 0xb0e, 0x0, 0x1);
        gbc.writeMem(0x5962, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe1ed, gbc.sp());
        EXPECT(0x5964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03CD
        gbc.setState(0xb5ff, 0x4251, 0xa620, 0x2a08, 0x4500, 0xfca1, 0x0, 0x0);
        gbc.writeMem(0xb5ff, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4251, gbc.sp());
        EXPECT(0xb601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ff));
        EXPECT(0x7b, gbc.readMem(0xb600));
        // CB 7B 03CE
        gbc.setState(0x9828, 0x33f9, 0xeec0, 0xc3e1, 0xd9b1, 0xbda5, 0x1, 0x1);
        gbc.writeMem(0x9828, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x33f9, gbc.sp());
        EXPECT(0x982a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9828));
        EXPECT(0x7b, gbc.readMem(0x9829));
        // CB 7B 03CF
        gbc.setState(0x6459, 0x6ef1, 0x3ca0, 0x9ae8, 0x2c9, 0x89d6, 0x0, 0x0);
        gbc.writeMem(0x6459, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6ef1, gbc.sp());
        EXPECT(0x645b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03D0
        gbc.setState(0x608, 0xcebf, 0x1020, 0x2a22, 0x56bd, 0x4959, 0x1, 0x1);
        gbc.writeMem(0x608, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcebf, gbc.sp());
        EXPECT(0x60a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03D1
        gbc.setState(0x9fc9, 0x5cea, 0xe190, 0x751b, 0xa010, 0x668c, 0x1, 0x1);
        gbc.writeMem(0x9fc9, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5cea, gbc.sp());
        EXPECT(0x9fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc9));
        EXPECT(0x7b, gbc.readMem(0x9fca));
        // CB 7B 03D2
        gbc.setState(0xd024, 0x22ac, 0x27a0, 0xf322, 0xef08, 0xb50c, 0x1, 0x0);
        gbc.writeMem(0xd024, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x22ac, gbc.sp());
        EXPECT(0xd026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd024));
        EXPECT(0x7b, gbc.readMem(0xd025));
        // CB 7B 03D3
        gbc.setState(0x2d87, 0xa3d0, 0xe970, 0x55a5, 0x5dec, 0x76b2, 0x1, 0x0);
        gbc.writeMem(0x2d87, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa3d0, gbc.sp());
        EXPECT(0x2d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03D4
        gbc.setState(0x3c10, 0x82dc, 0x6340, 0xa3a4, 0xc410, 0xe92b, 0x0, 0x0);
        gbc.writeMem(0x3c10, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x82dc, gbc.sp());
        EXPECT(0x3c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03D5
        gbc.setState(0x46b6, 0x101b, 0xd800, 0x1b25, 0x48cc, 0x356e, 0x1, 0x0);
        gbc.writeMem(0x46b6, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x101b, gbc.sp());
        EXPECT(0x46b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03D6
        gbc.setState(0x6a94, 0x7baf, 0xd530, 0x2e73, 0x8a61, 0xdcc6, 0x1, 0x1);
        gbc.writeMem(0x6a94, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7baf, gbc.sp());
        EXPECT(0x6a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03D7
        gbc.setState(0x61bc, 0x8197, 0x8020, 0x31cc, 0x9e06, 0x639, 0x1, 0x1);
        gbc.writeMem(0x61bc, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8197, gbc.sp());
        EXPECT(0x61be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03D8
        gbc.setState(0xd1c2, 0x8236, 0x51a0, 0x876b, 0xd140, 0x5fe8, 0x1, 0x1);
        gbc.writeMem(0xd1c2, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8236, gbc.sp());
        EXPECT(0xd1c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c2));
        EXPECT(0x7b, gbc.readMem(0xd1c3));
        // CB 7B 03DA
        gbc.setState(0x7c61, 0x1367, 0xa790, 0x12c2, 0x4cb3, 0x3565, 0x0, 0x1);
        gbc.writeMem(0x7c61, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1367, gbc.sp());
        EXPECT(0x7c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7B 03DB
        gbc.setState(0x2199, 0x862c, 0xcfe0, 0xe849, 0xa209, 0xce5a, 0x0, 0x1);
        gbc.writeMem(0x2199, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x862c, gbc.sp());
        EXPECT(0x219b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03DC
        gbc.setState(0x94c0, 0x8ffb, 0xb780, 0xd90b, 0xa8a6, 0xb106, 0x1, 0x0);
        gbc.writeMem(0x94c0, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8ffb, gbc.sp());
        EXPECT(0x94c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c0));
        EXPECT(0x7b, gbc.readMem(0x94c1));
        // CB 7B 03DD
        gbc.setState(0x9643, 0x26b3, 0x2440, 0xca1b, 0xd3c3, 0xcd66, 0x0, 0x1);
        gbc.writeMem(0x9643, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x26b3, gbc.sp());
        EXPECT(0x9645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9643));
        EXPECT(0x7b, gbc.readMem(0x9644));
        // CB 7B 03DE
        gbc.setState(0xbb15, 0x77ce, 0x8590, 0x862d, 0xd153, 0x2e86, 0x0, 0x0);
        gbc.writeMem(0xbb15, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x77ce, gbc.sp());
        EXPECT(0xbb17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb15));
        EXPECT(0x7b, gbc.readMem(0xbb16));
        // CB 7B 03DF
        gbc.setState(0x7454, 0x3f1d, 0xd1e0, 0xf89a, 0x9d6f, 0xfce2, 0x0, 0x1);
        gbc.writeMem(0x7454, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3f1d, gbc.sp());
        EXPECT(0x7456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03E0
        gbc.setState(0xe37d, 0x7e37, 0x5540, 0xf50a, 0x8f02, 0x6178, 0x0, 0x1);
        gbc.writeMem(0xe37d, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7e37, gbc.sp());
        EXPECT(0xe37f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe37d));
        EXPECT(0x7b, gbc.readMem(0xe37e));
        // CB 7B 03E2
        gbc.setState(0x9a40, 0x1e35, 0xdd80, 0xd162, 0xba24, 0xe014, 0x1, 0x1);
        gbc.writeMem(0x9a40, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1e35, gbc.sp());
        EXPECT(0x9a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a40));
        EXPECT(0x7b, gbc.readMem(0x9a41));
        // CB 7B 03E3
        gbc.setState(0xcf99, 0x2686, 0x2b70, 0x151c, 0x5493, 0x890e, 0x1, 0x1);
        gbc.writeMem(0xcf99, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2686, gbc.sp());
        EXPECT(0xcf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf99));
        EXPECT(0x7b, gbc.readMem(0xcf9a));
        // CB 7B 03E5
        gbc.setState(0x830e, 0x4a8d, 0x5e00, 0xd88d, 0x97c6, 0x34b5, 0x1, 0x1);
        gbc.writeMem(0x830e, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4a8d, gbc.sp());
        EXPECT(0x8310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x830e));
        EXPECT(0x7b, gbc.readMem(0x830f));
        // CB 7B 03E6
        gbc.setState(0x6bc5, 0xbe69, 0xc660, 0xc625, 0x29be, 0xa815, 0x1, 0x1);
        gbc.writeMem(0x6bc5, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbe69, gbc.sp());
        EXPECT(0x6bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7B 03E7
        gbc.setState(0x6a69, 0x9f5a, 0x440, 0x8640, 0x3c26, 0xc0bd, 0x0, 0x0);
        gbc.writeMem(0x6a69, { 0xcb, 0x7b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9f5a, gbc.sp());
        EXPECT(0x6a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
